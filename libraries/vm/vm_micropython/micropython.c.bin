
#if 100*__GNUC__+__GNUC_MINOR__ >= 303
#define INFINITY  __builtin_inff()
#else
#define INFINITY  1e5000f
#endif

#include <string.h>

#include "micropython.h"
#define UNLIKELY(x) __builtin_expect(!!(x), 0)
#define LIKELY(x) __builtin_expect(!!(x), 1)

#define TRAP(x) (wasm_rt_trap(WASM_RT_TRAP_##x), 0)

#define FUNC_PROLOGUE                                            \
  if (++wasm_rt_call_stack_depth > WASM_RT_MAX_CALL_STACK_DEPTH) \
    TRAP(EXHAUSTION)

#define FUNC_EPILOGUE --wasm_rt_call_stack_depth

#define UNREACHABLE TRAP(UNREACHABLE)

#define CALL_INDIRECT(table, t, ft, x, ...)          \
  (LIKELY((x) < table.size && table.data[x].func &&  \
          table.data[x].func_type == func_types[ft]) \
       ? ((t)table.data[x].func)(__VA_ARGS__)        \
       : TRAP(CALL_INDIRECT))

#define MEMCHECK(mem, a, t)  \
  if (UNLIKELY((a) + sizeof(t) > mem->size)) TRAP(OOB)

#define DEFINE_LOAD(name, t1, t2, t3)              \
  static inline t3 name(wasm_rt_memory_t* mem, u64 addr) {   \
    MEMCHECK(mem, addr, t1);                       \
    t1 result;                                     \
    memcpy(&result, &mem->data[addr], sizeof(t1)); \
    return (t3)(t2)result;                         \
  }

#define DEFINE_STORE(name, t1, t2)                           \
  static inline void name(wasm_rt_memory_t* mem, u64 addr, t2 value) { \
    MEMCHECK(mem, addr, t1);                                 \
    t1 wrapped = (t1)value;                                  \
    memcpy(&mem->data[addr], &wrapped, sizeof(t1));          \
  }

DEFINE_LOAD(i32_load, u32, u32, u32);
DEFINE_LOAD(i64_load, u64, u64, u64);
DEFINE_LOAD(f32_load, f32, f32, f32);
DEFINE_LOAD(f64_load, f64, f64, f64);
DEFINE_LOAD(i32_load8_s, s8, s32, u32);
DEFINE_LOAD(i64_load8_s, s8, s64, u64);
DEFINE_LOAD(i32_load8_u, u8, u32, u32);
DEFINE_LOAD(i64_load8_u, u8, u64, u64);
DEFINE_LOAD(i32_load16_s, s16, s32, u32);
DEFINE_LOAD(i64_load16_s, s16, s64, u64);
DEFINE_LOAD(i32_load16_u, u16, u32, u32);
DEFINE_LOAD(i64_load16_u, u16, u64, u64);
DEFINE_LOAD(i64_load32_s, s32, s64, u64);
DEFINE_LOAD(i64_load32_u, u32, u64, u64);
DEFINE_STORE(i32_store, u32, u32);
DEFINE_STORE(i64_store, u64, u64);
DEFINE_STORE(f32_store, f32, f32);
DEFINE_STORE(f64_store, f64, f64);
DEFINE_STORE(i32_store8, u8, u32);
DEFINE_STORE(i32_store16, u16, u32);
DEFINE_STORE(i64_store8, u8, u64);
DEFINE_STORE(i64_store16, u16, u64);
DEFINE_STORE(i64_store32, u32, u64);

#define I32_CLZ(x) ((x) ? __builtin_clz(x) : 32)
#define I64_CLZ(x) ((x) ? __builtin_clzll(x) : 64)
#define I32_CTZ(x) ((x) ? __builtin_ctz(x) : 32)
#define I64_CTZ(x) ((x) ? __builtin_ctzll(x) : 64)
#define I32_POPCNT(x) (__builtin_popcount(x))
#define I64_POPCNT(x) (__builtin_popcountll(x))

#define DIV_S(ut, min, x, y)                                 \
   ((UNLIKELY((y) == 0)) ?                TRAP(DIV_BY_ZERO)  \
  : (UNLIKELY((x) == min && (y) == -1)) ? TRAP(INT_OVERFLOW) \
  : (ut)((x) / (y)))

#define REM_S(ut, min, x, y)                                \
   ((UNLIKELY((y) == 0)) ?                TRAP(DIV_BY_ZERO) \
  : (UNLIKELY((x) == min && (y) == -1)) ? 0                 \
  : (ut)((x) % (y)))

#define I32_DIV_S(x, y) DIV_S(u32, INT32_MIN, (s32)x, (s32)y)
#define I64_DIV_S(x, y) DIV_S(u64, INT64_MIN, (s64)x, (s64)y)
#define I32_REM_S(x, y) REM_S(u32, INT32_MIN, (s32)x, (s32)y)
#define I64_REM_S(x, y) REM_S(u64, INT64_MIN, (s64)x, (s64)y)

#define DIVREM_U(op, x, y) \
  ((UNLIKELY((y) == 0)) ? TRAP(DIV_BY_ZERO) : ((x) op (y)))

#define DIV_U(x, y) DIVREM_U(/, x, y)
#define REM_U(x, y) DIVREM_U(%, x, y)

#define ROTL(x, y, mask) \
  (((x) << ((y) & (mask))) | ((x) >> (((mask) - (y) + 1) & (mask))))
#define ROTR(x, y, mask) \
  (((x) >> ((y) & (mask))) | ((x) << (((mask) - (y) + 1) & (mask))))

#define I32_ROTL(x, y) ROTL(x, y, 31)
#define I64_ROTL(x, y) ROTL(x, y, 63)
#define I32_ROTR(x, y) ROTR(x, y, 31)
#define I64_ROTR(x, y) ROTR(x, y, 63)

#define FMIN(x, y)                                          \
   ((UNLIKELY((x) != (x))) ? NAN                            \
  : (UNLIKELY((y) != (y))) ? NAN                            \
  : (UNLIKELY((x) == 0 && (y) == 0)) ? (signbit(x) ? x : y) \
  : (x < y) ? x : y)

#define FMAX(x, y)                                          \
   ((UNLIKELY((x) != (x))) ? NAN                            \
  : (UNLIKELY((y) != (y))) ? NAN                            \
  : (UNLIKELY((x) == 0 && (y) == 0)) ? (signbit(x) ? y : x) \
  : (x > y) ? x : y)

#define TRUNC_S(ut, st, ft, min, max, maxop, x)                             \
   ((UNLIKELY((x) != (x))) ? TRAP(INVALID_CONVERSION)                       \
  : (UNLIKELY((x) < (ft)(min) || (x) maxop (ft)(max))) ? TRAP(INT_OVERFLOW) \
  : (ut)(st)(x))

#define I32_TRUNC_S_F32(x) TRUNC_S(u32, s32, f32, INT32_MIN, INT32_MAX, >=, x)
#define I64_TRUNC_S_F32(x) TRUNC_S(u64, s64, f32, INT64_MIN, INT64_MAX, >=, x)
#define I32_TRUNC_S_F64(x) TRUNC_S(u32, s32, f64, INT32_MIN, INT32_MAX, >,  x)
#define I64_TRUNC_S_F64(x) TRUNC_S(u64, s64, f64, INT64_MIN, INT64_MAX, >=, x)

#define TRUNC_U(ut, ft, max, maxop, x)                                    \
   ((UNLIKELY((x) != (x))) ? TRAP(INVALID_CONVERSION)                     \
  : (UNLIKELY((x) <= (ft)-1 || (x) maxop (ft)(max))) ? TRAP(INT_OVERFLOW) \
  : (ut)(x))

#define I32_TRUNC_U_F32(x) TRUNC_U(u32, f32, UINT32_MAX, >=, x)
#define I64_TRUNC_U_F32(x) TRUNC_U(u64, f32, UINT64_MAX, >=, x)
#define I32_TRUNC_U_F64(x) TRUNC_U(u32, f64, UINT32_MAX, >,  x)
#define I64_TRUNC_U_F64(x) TRUNC_U(u64, f64, UINT64_MAX, >=, x)

#define DEFINE_REINTERPRET(name, t1, t2)  \
  static inline t2 name(t1 x) {           \
    t2 result;                            \
    memcpy(&result, &x, sizeof(result));  \
    return result;                        \
  }

DEFINE_REINTERPRET(f32_reinterpret_i32, u32, f32)
DEFINE_REINTERPRET(i32_reinterpret_f32, f32, u32)
DEFINE_REINTERPRET(f64_reinterpret_i64, u64, f64)
DEFINE_REINTERPRET(i64_reinterpret_f64, f64, u64)


static u32 func_types[76];

static void init_func_types(void) {
  func_types[0] = wasm_rt_register_func_type(0, 0);
  func_types[1] = wasm_rt_register_func_type(3, 1, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[2] = wasm_rt_register_func_type(3, 1, WASM_RT_I32, WASM_RT_I64, WASM_RT_I32, WASM_RT_I64);
  func_types[3] = wasm_rt_register_func_type(1, 1, WASM_RT_I32, WASM_RT_I32);
  func_types[4] = wasm_rt_register_func_type(0, 1, WASM_RT_I32);
  func_types[5] = wasm_rt_register_func_type(2, 1, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[6] = wasm_rt_register_func_type(1, 0, WASM_RT_I32);
  func_types[7] = wasm_rt_register_func_type(3, 0, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[8] = wasm_rt_register_func_type(4, 1, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[9] = wasm_rt_register_func_type(1, 0, WASM_RT_I64);
  func_types[10] = wasm_rt_register_func_type(2, 0, WASM_RT_I32, WASM_RT_I32);
  func_types[11] = wasm_rt_register_func_type(4, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32);
  func_types[12] = wasm_rt_register_func_type(0, 1, WASM_RT_I64);
  func_types[13] = wasm_rt_register_func_type(6, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[14] = wasm_rt_register_func_type(4, 0, WASM_RT_I32, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32);
  func_types[15] = wasm_rt_register_func_type(1, 1, WASM_RT_I64, WASM_RT_I32);
  func_types[16] = wasm_rt_register_func_type(2, 0, WASM_RT_I32, WASM_RT_F32);
  func_types[17] = wasm_rt_register_func_type(5, 0, WASM_RT_I32, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64);
  func_types[18] = wasm_rt_register_func_type(2, 0, WASM_RT_I32, WASM_RT_F64);
  func_types[19] = wasm_rt_register_func_type(2, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_F64);
  func_types[20] = wasm_rt_register_func_type(2, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_F32);
  func_types[21] = wasm_rt_register_func_type(2, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32);
  func_types[22] = wasm_rt_register_func_type(2, 0, WASM_RT_I64, WASM_RT_I64);
  func_types[23] = wasm_rt_register_func_type(5, 0, WASM_RT_I32, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[24] = wasm_rt_register_func_type(5, 0, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[25] = wasm_rt_register_func_type(5, 1, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[26] = wasm_rt_register_func_type(3, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32);
  func_types[27] = wasm_rt_register_func_type(3, 0, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32);
  func_types[28] = wasm_rt_register_func_type(5, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32);
  func_types[29] = wasm_rt_register_func_type(3, 0, WASM_RT_I32, WASM_RT_I64, WASM_RT_I32);
  func_types[30] = wasm_rt_register_func_type(5, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I64, WASM_RT_I32);
  func_types[31] = wasm_rt_register_func_type(6, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I64, WASM_RT_I32);
  func_types[32] = wasm_rt_register_func_type(5, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[33] = wasm_rt_register_func_type(6, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[34] = wasm_rt_register_func_type(4, 0, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[35] = wasm_rt_register_func_type(4, 0, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64);
  func_types[36] = wasm_rt_register_func_type(2, 1, WASM_RT_I32, WASM_RT_I32, WASM_RT_I64);
  func_types[37] = wasm_rt_register_func_type(2, 0, WASM_RT_I64, WASM_RT_I32);
  func_types[38] = wasm_rt_register_func_type(2, 0, WASM_RT_I32, WASM_RT_I64);
  func_types[39] = wasm_rt_register_func_type(2, 1, WASM_RT_F64, WASM_RT_I32, WASM_RT_F64);
  func_types[40] = wasm_rt_register_func_type(1, 1, WASM_RT_F64, WASM_RT_F64);
  func_types[41] = wasm_rt_register_func_type(4, 0, WASM_RT_I32, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32);
  func_types[42] = wasm_rt_register_func_type(4, 0, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[43] = wasm_rt_register_func_type(4, 0, WASM_RT_I32, WASM_RT_I32, WASM_RT_I64, WASM_RT_I32);
  func_types[44] = wasm_rt_register_func_type(3, 1, WASM_RT_I32, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32);
  func_types[45] = wasm_rt_register_func_type(3, 0, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64);
  func_types[46] = wasm_rt_register_func_type(5, 0, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32);
  func_types[47] = wasm_rt_register_func_type(6, 0, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32);
  func_types[48] = wasm_rt_register_func_type(4, 0, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32);
  func_types[49] = wasm_rt_register_func_type(2, 1, WASM_RT_I64, WASM_RT_I32, WASM_RT_I64);
  func_types[50] = wasm_rt_register_func_type(3, 0, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32);
  func_types[51] = wasm_rt_register_func_type(3, 1, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[52] = wasm_rt_register_func_type(7, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[53] = wasm_rt_register_func_type(1, 1, WASM_RT_I32, WASM_RT_F64);
  func_types[54] = wasm_rt_register_func_type(6, 1, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[55] = wasm_rt_register_func_type(6, 1, WASM_RT_F64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[56] = wasm_rt_register_func_type(2, 1, WASM_RT_F64, WASM_RT_F64, WASM_RT_F64);
  func_types[57] = wasm_rt_register_func_type(2, 1, WASM_RT_F64, WASM_RT_I32, WASM_RT_I32);
  func_types[58] = wasm_rt_register_func_type(3, 1, WASM_RT_F64, WASM_RT_F64, WASM_RT_I32, WASM_RT_F64);
  func_types[59] = wasm_rt_register_func_type(4, 1, WASM_RT_I32, WASM_RT_F64, WASM_RT_F64, WASM_RT_I32, WASM_RT_I32);
  func_types[60] = wasm_rt_register_func_type(2, 1, WASM_RT_F64, WASM_RT_F64, WASM_RT_I32);
  func_types[61] = wasm_rt_register_func_type(4, 1, WASM_RT_I32, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32);
  func_types[62] = wasm_rt_register_func_type(1, 1, WASM_RT_I32, WASM_RT_I64);
  func_types[63] = wasm_rt_register_func_type(3, 0, WASM_RT_I32, WASM_RT_I64, WASM_RT_I64);
  func_types[64] = wasm_rt_register_func_type(5, 0, WASM_RT_I32, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32);
  func_types[65] = wasm_rt_register_func_type(4, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[66] = wasm_rt_register_func_type(2, 1, WASM_RT_I32, WASM_RT_F64, WASM_RT_F64);
  func_types[67] = wasm_rt_register_func_type(7, 0, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[68] = wasm_rt_register_func_type(6, 0, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[69] = wasm_rt_register_func_type(3, 1, WASM_RT_I32, WASM_RT_F64, WASM_RT_I32, WASM_RT_I32);
  func_types[70] = wasm_rt_register_func_type(1, 1, WASM_RT_F64, WASM_RT_I32);
  func_types[71] = wasm_rt_register_func_type(8, 1, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[72] = wasm_rt_register_func_type(7, 1, WASM_RT_I32, WASM_RT_F64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[73] = wasm_rt_register_func_type(1, 1, WASM_RT_F64, WASM_RT_F32);
  func_types[74] = wasm_rt_register_func_type(1, 1, WASM_RT_F32, WASM_RT_F64);
  func_types[75] = wasm_rt_register_func_type(2, 1, WASM_RT_F32, WASM_RT_F32, WASM_RT_F32);
}

static void __wasm_call_ctors(void);
static u32 __errno_location(void);
static u32 __memalign(u32, u32);
static u32 _posix_memalign(u32, u32, u32);
static u32 operator_new_unsigned_int_(u32);
static u32 operator_new___unsigned_int_(u32);
static void operator_delete_void__(u32);
static void operator_delete___void__(u32);
static u32 operator_new_unsigned_int__std__align_val_t_(u32, u32);
static u32 operator_new___unsigned_int__std__align_val_t_(u32, u32);
static void operator_delete_void___std__align_val_t_(u32, u32);
static void operator_delete___void___std__align_val_t_(u32, u32);
static u32 strlen_0(u32);
static u32 memchr_0(u32, u32, u32);
static u32 memcmp_0(u32, u32, u32);
static void __lock(u32);
static void __unlock(u32);
static u32 __ofl_lock(void);
static void __ofl_unlock(void);
static u32 __lockfile(u32);
static void __unlockfile(u32);
static f64 scalbn_0(f64, u32);
static u32 ____fpclassifyl(u64, u64);
static f64 fabs_0(f64);
static u32 wcrtomb(u32, u32, u32);
static u32 wctomb_0(u32, u32);
static u32 __towrite(u32);
static u32 __fwritex(u32, u32, u32);
static u32 __signbitl(u64, u64);
static u32 dummy(u32, u32);
static u32 __lctrans(u32, u32);
static u32 strerror_0(u32);
static u32 _strnlen(u32, u32);
static void frexpl(u32, u64, u64, u32);
static u32 v_fprintf(u32, u32, u32);
static u32 printf_core(u32, u32, u32, u32, u32);
static void pop_arg(u32, u32, u32);
static u32 _fprintf(u32, u32, u32);
static void std____1____basic_string_common_true_____throw_length_error___const(u32);
static void std____1____vector_base_common_true_____throw_length_error___const(u32);
static void eosio__token__create_eosio__name_const___eosio__asset_const__(u32, u32, u32);
static u32 eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___load_object_by_primary_iterator_int__const(u32, u32);
static void void_boost__pfr__detail__for_each_field_impl_boost__pfr__detail__sequence_tuple__tuple_eosio__asset_const___eosio__asset_const___eosio__name_const____eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__token__currency_stats___void__0__eosio__datastream_char_____eosio__token__currency_stats_const_____lambda__eosio__datastream_char___const____0u__1u__2u__eosio__datastream_char_____eosio__token__currency_stats____std____1__integer_sequence_unsigned_int__0u__1u__2u___std____1__integral_constant_bool__false__(u32, u32);
static void void_std____1__vector_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_______unsigned_long_long_____int____(u32, u32, u32, u32);
static void eosio__token__issue_eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const__(u32, u32, u32, u32);
static void void_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___modify_eosio__token__issue_eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______1__eosio__token__currency_stats_const___eosio__name__eosio__token__issue_eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______1___(u32, u32, u32);
static void eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const__(u32, u32, u32, u32);
static u32 eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___load_object_by_primary_iterator_int__const(u32, u32);
static void void_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___modify_eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const______5__eosio__token__account_const___eosio__name__eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const______5___(u32, u32, u32);
static void void_std____1__vector_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_______unsigned_long_long_____int____(u32, u32, u32, u32);
static void eosio__token__retire_eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const__(u32, u32, u32);
static void void_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___modify_eosio__token__retire_eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______2__eosio__token__currency_stats_const___eosio__name__eosio__token__retire_eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______2___(u32, u32, u32);
static void eosio__token__sub_balance_eosio__name_const___eosio__asset_const__(u32, u32, u32);
static void void_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___modify_eosio__token__sub_balance_eosio__name_const___eosio__asset_const______3__eosio__token__account_const___eosio__name__eosio__token__sub_balance_eosio__name_const___eosio__asset_const______3___(u32, u32, u64, u32);
static void eosio__token__transfer_eosio__name_const___eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const__(u32, u32, u32, u32, u32);
static u32 eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___get_unsigned_long_long__char_const___const(u32, u64, u32);
static void eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const__(u32, u32, u32, u32);
static void auto_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___const_iterator_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___emplace_eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6__eosio__name__eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6______lambda__eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6____operator___eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6___const(u32, u32);
static void eosio__token__close_eosio__name_const___eosio__symbol_const__(u32, u32, u32);
static void eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___erase_eosio__token__account_const__(u32, u32);
static void token_create(u64, u64, u64);
static void token_issue(u64, u64, u64, u32, u32);
static void token_transfer(u64, u64, u64, u64, u32, u32);
static void token_open(u64, u64, u64);
static void token_retire(u64, u64, u32, u32);
static void token_close(u64, u64);
static u64 token_get_balance(u64, u32);
static void token_set_balance(u64, u64, u32);
static void void_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___modify_token_set_balance____8__eosio__token__account_const___eosio__name__token_set_balance____8___(u32, u32, u32);
static void void_boost__pfr__detail__for_each_field_impl_boost__pfr__detail__sequence_tuple__tuple_eosio__asset___eosio__asset___eosio__name____eosio__datastream_char_const____eosio__operator___eosio__datastream_char_const____eosio__token__currency_stats___void__0__eosio__datastream_char_const_____eosio__token__currency_stats_____lambda__eosio__datastream_char_const______0u__1u__2u__eosio__datastream_char_const_____eosio__token__currency_stats____std____1__integer_sequence_unsigned_int__0u__1u__2u___std____1__integral_constant_bool__false__(u32, u32);
static void __cxa_finalize(u32);
static void vm_send_inline(u64, u64, u64, u64, u32, u32);
static void void_std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level_______emplace_back_slow_path_eosio__permission_level___eosio__permission_level____(u32, u32);
static void std____1__vector_char__std____1__allocator_char_______append_unsigned_int_(u32, u32);
static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__action_const__(u32, u32);
static void vm_send_context_free_inline(u64, u64, u32, u32);
static void eosio__action__send_context_free___const(u32);
static u32 write_hex(u32, u32, u32, u32);
static u32 write_str(u32, u32, u32, u32);
static u64 s2n(u32, u32);
static u32 n2s(u64, u32, u32);
static u32 db_store_i256(u64, u64, u64, u32, u32, u32, u32);
static void db_update_i256(u32, u64, u32, u32);
static void db_remove_i256(u32);
static u32 db_get_i256(u32, u32, u32);
static u32 db_find_i256(u64, u64, u64, u32, u32);
static u32 db_previous_i256(u32, u32, u32);
static u32 db_next_i256(u32, u32, u32);
static u32 db_end_i256(u64, u64, u64);
static u32 db_lowerbound_i256(u64, u64, u64, u32, u32);
static u32 db_upperbound_i256(u64, u64, u64, u32, u32);
static u32 db_get_table_row_count(u64, u64, u64);
static void apply(u64, u64, u64);
static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__permission_level__eosio__datastream_char_____std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level____const__(u32, u32);
static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____std____1__vector_char__std____1__allocator_char____const__(u32, u32);
static u32 get_current_memory(void);
static u32 malloc_0(u32);
static void free_0(u32);
static void mp_hal_stdout_tx_strn_cooked(u32, u32);
static u32 __stdio_close(u32);
static u32 __stdio_write(u32, u32, u32);
static u64 __stdio_seek(u32, u64, u32);
static u32 _fflush(u32);
static void __assert_fail(u32, u32, u32, u32);
static void mpz_init_zero(u32);
static void mpz_init_from_int(u32, u32);
static void mpz_init_fixed_from_int(u32, u32, u32, u32);
static void mpz_deinit(u32);
static void mpz_set_from_ll(u32, u64, u32);
static void mpz_set_from_float(u32, f64);
static u32 mpz_set_from_str(u32, u32, u32, u32, u32);
static void mpz_set_from_bytes(u32, u32, u32, u32);
static u32 mpz_cmp(u32, u32);
static void mpz_abs_inpl(u32, u32);
static void mpz_neg_inpl(u32, u32);
static void mpz_not_inpl(u32, u32);
static void mpz_shl_inpl(u32, u32, u32);
static void mpz_shr_inpl(u32, u32, u32);
static void mpz_add_inpl(u32, u32, u32);
static void mpz_sub_inpl(u32, u32, u32);
static void mpz_and_inpl(u32, u32, u32);
static void mpz_or_inpl(u32, u32, u32);
static void mpz_xor_inpl(u32, u32, u32);
static void mpz_mul_inpl(u32, u32, u32);
static void mpz_pow_inpl(u32, u32, u32);
static void mpz_pow3_inpl(u32, u32, u32, u32);
static void mpz_divmod_inpl(u32, u32, u32, u32);
static u32 mpz_hash(u32);
static u32 mpz_as_int_checked(u32, u32);
static u32 mpz_as_uint_checked(u32, u32);
static u32 mpz_as_bytes(u32, u32, u32, u32);
static f64 mpz_as_float(u32);
static u32 mpz_as_str_inpl(u32, u32, u32, u32, u32, u32);
static u32 mp_format_float(f64, u32, u32, u32, u32, u32);
static u32 __strchrnul(u32, u32);
static u32 strchr_0(u32, u32);
static void vstr_init(u32, u32);
static void vstr_init_len(u32, u32);
static void vstr_init_fixed_buf(u32, u32, u32);
static void vstr_init_print(u32, u32, u32);
static void vstr_add_strn(u32, u32, u32);
static void vstr_clear(u32);
static u32 vstr_new(u32);
static void vstr_free(u32);
static u32 vstr_extend(u32, u32);
static u32 vstr_add_len(u32, u32);
static u32 vstr_null_terminated_str(u32);
static void vstr_add_byte(u32, u32);
static void vstr_add_char(u32, u32);
static void vstr_add_str(u32, u32);
static void vstr_ins_byte(u32, u32, u32);
static void vstr_cut_tail_bytes(u32, u32);
static u32 mp_obj_new_name_from_ull(u64);
static u32 mp_obj_name_unary_op(u32, u32);
static u32 mp_obj_name_binary_op(u32, u32, u32);
static u32 utf8_get_char(u32);
static u32 utf8_next_char(u32);
static u32 utf8_ptr_to_index(u32, u32);
static u32 utf8_charlen(u32, u32);
static u32 unichar_isspace(u32);
static u32 unichar_isalpha(u32);
static u32 unichar_isdigit(u32);
static u32 unichar_isxdigit(u32);
static u32 unichar_isupper(u32);
static u32 unichar_islower(u32);
static u32 unichar_tolower(u32);
static u32 unichar_toupper(u32);
static u32 unichar_xdigit_value(u32);
static u32 utf8_check(u32, u32);
static u32 mp_parse_num_base(u32, u32, u32);
static u32 mp_small_int_mul_overflow(u32, u32);
static u32 mp_small_int_modulo(u32, u32);
static u32 mp_small_int_floor_divide(u32, u32);
static f64 nan_0(u32);
static f64 sqrt_0(f64);
static f64 pow_0(f64, f64);
static f64 log_0(f64);
static f64 atan_0(f64);
static f64 atan2_0(f64, f64);
static f64 exp_0(f64);
static f64 __cos(f64, f64);
static f64 floor_0(f64);
static u32 __rem_pio2_large(u32, u32, u32, u32, u32);
static u32 __rem_pio2(f64, u32);
static f64 __sin(f64, f64, u32);
static f64 cos_0(f64);
static f64 sin_0(f64);
static void complex_print(u32, u32, u32);
static u32 complex_make_new(u32, u32, u32, u32);
static u32 complex_unary_op(u32, u32);
static u32 complex_binary_op(u32, u32, u32);
static u32 mp_obj_complex_binary_op(u32, f64, f64, u32);
static void complex_attr(u32, u32, u32);
static u32 mp_obj_new_complex(f64, f64);
static void mp_obj_complex_get(u32, u32, u32);
static f64 fmod_0(f64, f64);
static f64 copysign_0(f64, f64);
static u32 mp_obj_cell_get(u32);
static void mp_obj_cell_set(u32, u32);
static u32 mp_obj_new_cell(u32);
static void mp_setup_code_state(u32, u32, u32, u32);
static void fun_pos_args_mismatch(u32, u32);
static u32 mp_opcode_format(u32, u32, u32);
static u32 nlr_push_tail(u32);
static void nlr_pop(void);
static u32 gen_wrap_call(u32, u32, u32, u32);
static u32 mp_obj_gen_resume(u32, u32, u32, u32);
static void gen_instance_print(u32, u32, u32);
static u32 gen_instance_iternext(u32);
static u32 gen_instance_close(u32);
static u32 gen_instance_send(u32, u32);
static u32 gen_instance_throw(u32, u32);
static u32 gen_instance_pend_throw(u32, u32);
static u32 closure_call(u32, u32, u32, u32);
static u32 mp_obj_new_closure(u32, u32, u32);
static u32 mp_emit_glue_new_raw_code(void);
static void mp_emit_glue_assign_bytecode(u32, u32, u32, u32);
static u32 mp_make_function_from_raw_code(u32, u32, u32);
static u32 mp_make_closure_from_raw_code(u32, u32, u32);
static u32 polymorph_it_iternext(u32);
static u32 op_getitem(u32, u32);
static u32 op_setitem(u32, u32, u32);
static u32 op_delitem(u32, u32);
static u32 op_contains(u32, u32);
static void set_print(u32, u32, u32);
static u32 set_make_new(u32, u32, u32, u32);
static u32 set_unary_op(u32, u32);
static u32 set_binary_op(u32, u32, u32);
static u32 set_issubset_internal(u32, u32, u32);
static u32 set_intersect_int(u32, u32, u32);
static u32 set_union(u32, u32);
static u32 set_symmetric_difference(u32, u32);
static u32 set_getiter(u32, u32);
static u32 set_it_iternext(u32);
static u32 mp_obj_new_set(u32, u32);
static void mp_obj_set_store(u32, u32);
static u32 set_intersect(u32, u32);
static u32 set_diff(u32, u32);
static u32 set_diff_int(u32, u32, u32);
static u32 set_update(u32, u32);
static u32 set_symmetric_difference_update(u32, u32);
static u32 set_copy(u32);
static u32 set_issubset(u32, u32);
static u32 set_issuperset(u32, u32);
static u32 set_add(u32, u32);
static u32 set_clear(u32);
static u32 set_discard(u32, u32);
static u32 set_diff_update(u32, u32);
static u32 set_intersect_update(u32, u32);
static u32 set_isdisjoint(u32, u32);
static u32 set_pop(u32);
static u32 set_remove(u32, u32);
static void slice_print(u32, u32, u32);
static void slice_attr(u32, u32, u32);
static u32 mp_obj_new_slice(u32, u32, u32);
static void mp_obj_slice_indices(u32, u32, u32);
static void mp_seq_multiply(u32, u32, u32, u32, u32);
static u32 mp_seq_get_fast_slice_indexes(u32, u32, u32);
static u32 mp_seq_extract_slice(u32, u32, u32);
static u32 mp_seq_cmp_bytes(u32, u32, u32, u32, u32);
static u32 mp_seq_cmp_objs(u32, u32, u32, u32, u32);
static u32 mp_seq_index_obj(u32, u32, u32, u32);
static u32 mp_seq_count_obj(u32, u32, u32);
static u32 mp_obj_list_append(u32, u32);
static u32 mp_obj_list_sort(u32, u32, u32);
static void mp_quicksort(u32, u32, u32, u32);
static u32 mp_obj_list_remove(u32, u32);
static u32 list_pop(u32, u32);
static u32 list_index(u32, u32);
static void list_print(u32, u32, u32);
static u32 list_make_new(u32, u32, u32, u32);
static u32 list_extend_from_iter(u32, u32);
static u32 list_unary_op(u32, u32);
static u32 list_binary_op(u32, u32, u32);
static u32 list_extend(u32, u32);
static u32 list_subscr(u32, u32, u32);
static u32 list_getiter(u32, u32);
static u32 list_it_iternext(u32);
static void mp_obj_list_init(u32, u32);
static u32 mp_obj_new_list(u32, u32);
static void mp_obj_list_get(u32, u32, u32);
static void mp_obj_list_set_len(u32, u32);
static u32 list_clear(u32);
static u32 list_copy(u32);
static u32 list_count(u32, u32);
static u32 list_insert(u32, u32, u32);
static u32 list_reverse(u32);
static void mp_warning(u32, u32, u32);
static u32 mp_call_function_1_protected(u32, u32);
static void mp_handle_pending_tail(u32);
static u32 mp_sched_schedule(u32, u32);
static void add_trace(u32, u32);
static void mp_print_exception(u32);
static u32 mp_execute_bytecode(u32, u32);
static u32 fun_builtin_0_call(u32, u32, u32, u32);
static u32 fun_builtin_1_call(u32, u32, u32, u32);
static u32 fun_builtin_2_call(u32, u32, u32, u32);
static u32 fun_builtin_3_call(u32, u32, u32, u32);
static u32 fun_builtin_var_call(u32, u32, u32, u32);
static u32 mp_obj_fun_get_name(u32);
static void mp_obj_fun_bc_attr(u32, u32, u32);
static void fun_bc_print(u32, u32, u32);
static u32 fun_bc_call(u32, u32, u32, u32);
static u32 mp_obj_new_fun_bc(u32, u32, u32, u32);
static void float128_print(u32, u32, u32);
static u32 float128_make_new(u32, u32, u32, u32);
static u32 float128_unary_op(u32, u32);
static u32 float128_binary_op(u32, u32, u32);
static u32 mp_obj_float128_binary_op(u32, u64, u64, u32);
static u32 mp_obj_new_float128(u64, u64);
static void mp_obj_float128_get(u32, u32);
static u32 mp_obj_get_float128_maybe(u32, u32);
static void mp_obj_float128_divmod(u32, u32);
static u32 float128_from_bytes(u32, u32);
static u32 float128_to_bytes(u32, u32);
static u32 mp_parse_num_integer(u32, u32, u32, u32);
static void raise_exc(u32, u32);
static u32 _mp_parse_num_decimal(u32, u32, u32, u32, u32, u32);
static u32 mp_parse_num_decimal(u32, u32, u32, u32, u32);
static u32 mp_parse_num_decimal_float128(u32, u32, u32, u32, u32);
static u64 mp_obj_name_to_ull(u32);
static u32 mp_obj_name_to_str_obj(u32);
static void mp_obj_name_print(u32, u32, u32);
static u32 mp_obj_name_binary_op_extra_cases(u32, u32, u32);
static u32 mp_obj_name_make_new(u32, u32, u32, u32);
static u32 name_from_bytes(u32, u32);
static u32 name_to_bytes(u32, u32);
static u32 name_to_int(u32, u32);
static u32 mp_name_to_str(u32, u32);
static u64 mp_obj_int_get_ull(u32);
static u64 obj_to_u64(u32);
static void obj_int_to_u128(u32, u32);
static void obj_int_to_u256(u32, u32, u32);
static u32 u64_to_name(u64);
static void micropython_raise_exception(u32);
static void pointer_add(u32);
static u32 pointer_check(u32);
static void pointer_free(u32);
static u32 action_new(u64, u64, u64, u64, u32, u32);
static void void_std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level_______push_back_slow_path_eosio__permission_level_const___eosio__permission_level_const____(u32, u32);
static void action_add_permission(u32, u64, u64);
static void action_send(u32);
static void std____1__vector_char__std____1__allocator_char____eosio__pack_eosio__action__eosio__action_const__(u32, u32);
static void action_free(u32);
static u32 transaction_new(u32, u32, u32, u32, u32, u32);
static void transaction_add_action(u32, u32);
static u32 eosio__action__action_eosio__action_const__(u32, u32);
static void void_std____1__vector_eosio__action__std____1__allocator_eosio__action_______push_back_slow_path_eosio__action_const___eosio__action_const____(u32, u32);
static void transaction_add_context_free_action(u32, u32);
static void transaction_send(u32, u64, u64, u64, u32);
static void std____1__vector_char__std____1__allocator_char____eosio__pack_eosio__transaction__eosio__transaction_const__(u32, u32);
static u32 eosio__datastream_unsigned_int___eosio__operator___eosio__datastream_unsigned_int____eosio__datastream_unsigned_int____eosio__transaction_const__(u32, u32);
static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__transaction_header_const__(u32, u32);
static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__action__eosio__datastream_char_____std____1__vector_eosio__action__std____1__allocator_eosio__action____const__(u32, u32);
static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char____std____1__tuple_unsigned_short__std____1__vector_char__std____1__allocator_char________eosio__datastream_char_____std____1__vector_std____1__tuple_unsigned_short__std____1__vector_char__std____1__allocator_char_______std____1__allocator_std____1__tuple_unsigned_short__std____1__vector_char__std____1__allocator_char__________const__(u32, u32);
static u32 transaction_cancel(u64, u64);
static void transaction_free(u32);
static void set_blockchain_parameters(u32);
static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__blockchain_parameters_const__(u32, u32);
static void get_blockchain_parameters(u32);
static u32 eosio__datastream_char_const____eosio__operator___eosio__datastream_char_const_____eosio__datastream_char_const_____eosio__blockchain_parameters__(u32, u32);
static f64 rint_0(f64);
static f64 nearbyint_0(f64);
static u32 mp_call_method_self_n_kw(u32, u32, u32, u32, u32);
static u32 mp_obj_new_bound_meth(u32, u32);
static u32 bound_meth_call(u32, u32, u32, u32);
static void bound_meth_attr(u32, u32, u32);
static u32 strstr_0(u32, u32);
static u32 vm_load_code(u64, u32, u32);
static void vm_store_code(u64, u64, u32, u32);
static void vm_store_abi(u64, u64, u32, u32);
static u32 vm_load_module(u64, u64, u32, u32);
static u32 vm_module_exists(u64, u64);
static void vm_store_module(u64, u64, u64, u32, u32);
static void vm_take_snapshot(u64);
static u32 vm_restore_from_snapshot(u64);
static u32 strcmp_0(u32, u32);
static void singleton_print(u32, u32, u32);
static void mp_reader_new_mem(u32, u32, u32, u32);
static u32 mp_reader_mem_readbyte(u32);
static void mp_reader_mem_close(u32);
static u32 mp_raw_code_load(u32);
static u32 load_raw_code(u32, u32);
static u32 load_qstr(u32, u32);
static u32 mp_raw_code_load_mem(u32, u32);
static u32 db_frozen_stat(u32);
static u32 mp_frozen_stat(u32);
static u32 vm_find_frozen_str(u32, u32);
static u32 mp_find_frozen_module(u32, u32, u32);
static u32 mp_obj_is_package(u32);
static u32 mp_builtin___import__(u32, u32);
static void do_execute_raw_code(u32, u32, u32);
static u32 micropython_new_module(void);
static u32 micropython_init_module_from_mpy(u32, u32);
static u32 micropython_init_module_from_mpy_with_name(u32, u32, u32);
static u32 micropython_init_module(u32, u32, u32);
static u32 micropython_apply(u64, u64, u64);
static void micropython_init_frozen_modules(void);
static void bool_print(u32, u32, u32);
static u32 bool_make_new(u32, u32, u32, u32);
static u32 bool_unary_op(u32, u32);
static u32 bool_binary_op(u32, u32, u32);
static u32 mp_binary_get_size(u32, u32, u32);
static u32 mp_binary_get_val_array(u32, u32, u32);
static u32 mp_binary_get_val(u32, u32, u32, u32);
static void mp_binary_set_int(u32, u32, u32, u32);
static void mp_binary_set_val(u32, u32, u32, u32, u32);
static void mp_binary_set_val_array(u32, u32, u32, u32);
static void mp_binary_set_val_array_from_int(u32, u32, u32, u32);
static void array_print(u32, u32, u32);
static u32 array_make_new(u32, u32, u32, u32);
static u32 array_construct(u32, u32);
static u32 array_unary_op(u32, u32);
static u32 array_binary_op(u32, u32, u32);
static u32 array_extend(u32, u32);
static u32 array_subscr(u32, u32, u32);
static u32 array_iterator_new(u32, u32);
static u32 array_get_buffer(u32, u32, u32);
static u32 bytearray_make_new(u32, u32, u32, u32);
static u32 array_append(u32, u32);
static u32 array_it_iternext(u32);
static u32 enumerate_make_new(u32, u32, u32, u32);
static u32 enumerate_iternext(u32);
static u32 filter_make_new(u32, u32, u32, u32);
static u32 filter_iternext(u32);
static u32 map_make_new(u32, u32, u32, u32);
static u32 map_iternext(u32);
static u32 property_make_new(u32, u32, u32, u32);
static u32 mp_obj_property_get(u32);
static u32 property_getter(u32, u32);
static u32 property_setter(u32, u32);
static u32 property_deleter(u32, u32);
static void range_print(u32, u32, u32);
static u32 range_make_new(u32, u32, u32, u32);
static u32 range_unary_op(u32, u32);
static void range_attr(u32, u32, u32);
static u32 range_subscr(u32, u32, u32);
static u32 range_getiter(u32, u32);
static u32 range_it_iternext(u32);
static u32 reversed_make_new(u32, u32, u32, u32);
static u32 reversed_iternext(u32);
static u32 zip_make_new(u32, u32, u32, u32);
static u32 zip_iternext(u32);
static u32 mp_builtin___build_class__(u32, u32);
static u32 mp_builtin_abs(u32);
static u32 mp_builtin_all(u32);
static u32 mp_builtin_any(u32);
static u32 mp_builtin_bin(u32);
static u32 mp_builtin_callable(u32);
static u32 mp_builtin_chr(u32);
static u32 mp_builtin_dir(u32, u32);
static u32 mp_builtin_divmod(u32, u32);
static u32 mp_builtin_hash(u32);
static u32 mp_builtin_hex(u32);
static u32 mp_builtin_iter(u32);
static u32 mp_builtin_max(u32, u32, u32);
static u32 mp_builtin_min_max(u32, u32, u32, u32);
static u32 mp_builtin_min(u32, u32, u32);
static u32 mp_builtin_next(u32);
static u32 mp_builtin_oct(u32);
static u32 mp_builtin_ord(u32);
static u32 mp_builtin_pow(u32, u32);
static u32 mp_builtin_print(u32, u32, u32);
static u32 mp_builtin___repl_print__(u32);
static u32 mp_builtin_repr(u32);
static u32 mp_builtin_round(u32, u32);
static u32 mp_builtin_sum(u32, u32);
static u32 mp_builtin_sorted(u32, u32, u32);
static u32 mp_builtin_getattr(u32, u32);
static u32 mp_builtin_setattr(u32, u32, u32);
static u32 mp_builtin_delattr(u32, u32);
static u32 mp_builtin_hasattr(u32, u32);
static u32 mp_builtin_globals(void);
static u32 mp_builtin_locals(void);
static void mp_hal_set_interrupt_char(u32);
static u32 mp_micropython_pystack_use(void);
static u32 mp_micropython_kbd_intr(u32);
static u32 mp_micropython_schedule(u32, u32);
static u32 mp_get_stream_raise(u32, u32);
static u32 stream_read(u32, u32);
static u32 stream_read_generic(u32, u32, u32);
static void mp_stream_write_adaptor(u32, u32, u32);
static u32 stream_write_method(u32, u32);
static u32 stream_readinto(u32, u32);
static u32 stream_unbuffered_readline(u32, u32);
static u32 mp_stream_unbuffered_iter(u32);
static u32 mp_stream_close(u32);
static u32 stream_seek(u32, u32);
static u32 stream_tell(u32);
static u32 stream_flush(u32);
static void stringio_print(u32, u32, u32);
static u32 stringio_make_new(u32, u32, u32, u32);
static u32 stringio_write(u32, u32, u32, u32);
static u32 stringio_read(u32, u32, u32, u32);
static u32 stringio_ioctl(u32, u32, u32, u32);
static u32 stringio_getvalue(u32);
static u32 stringio___exit__(u32, u32);
static void mp_obj_attrtuple_print_helper(u32, u32, u32);
static void mp_obj_attrtuple_print(u32, u32, u32);
static void mp_obj_attrtuple_attr(u32, u32, u32);
static u32 new_namedtuple_type(u32, u32);
static void namedtuple_print(u32, u32, u32);
static u32 namedtuple_make_new(u32, u32, u32, u32);
static void namedtuple_attr(u32, u32, u32);
static u32 struct_calcsize(u32);
static u32 calc_size_items(u32, u32);
static u32 struct_unpack_from(u32, u32);
static u32 struct_pack(u32, u32);
static void struct_pack_into_internal(u32, u32, u32, u32);
static u32 struct_pack_into(u32, u32);
static u32 struct_pack_uint32(u32);
static u32 struct_unpack_uint32(u32);
static u32 get_fmt_num(u32);
static f64 expm1_0(f64);
static f64 log2_0(f64);
static f64 log10_0(f64);
static f64 __expo2(f64);
static f64 cosh_0(f64);
static f64 sinh_0(f64);
static f64 tanh_0(f64);
static f64 log1p_0(f64);
static f64 acosh_0(f64);
static f64 asinh_0(f64);
static f64 atanh_0(f64);
static f64 __tan(f64, f64, u32);
static f64 tan_0(f64);
static f64 acos_0(f64);
static f64 asin_0(f64);
static f64 ceil_0(f64);
static f64 frexp_0(f64, u32);
static f64 ldexp_0(f64, u32);
static f64 modf_0(f64, u32);
static f64 trunc_0(f64);
static f64 erf_0(f64);
static f64 erfc2(u32, f64);
static f64 erfc_0(f64);
static f64 tgamma_0(f64);
static f64 __lgamma_r(f64, u32);
static f64 lgamma_0(f64);
static u32 mp_math_isclose(u32, u32, u32);
static void math_error(void);
static u32 mp_math_sqrt(u32);
static u32 mp_math_pow(u32, u32);
static u32 mp_math_exp(u32);
static u32 mp_math_expm1(u32);
static u32 mp_math_log(u32, u32);
static u32 mp_math_log2(u32);
static u32 mp_math_log10(u32);
static u32 mp_math_cosh(u32);
static u32 mp_math_sinh(u32);
static u32 mp_math_tanh(u32);
static u32 mp_math_acosh(u32);
static u32 mp_math_asinh(u32);
static u32 mp_math_atanh(u32);
static u32 mp_math_cos(u32);
static u32 mp_math_sin(u32);
static u32 mp_math_tan(u32);
static u32 mp_math_acos(u32);
static u32 mp_math_asin(u32);
static u32 mp_math_atan(u32);
static u32 mp_math_atan2(u32, u32);
static u32 mp_math_ceil(u32);
static u32 mp_math_copysign(u32, u32);
static u32 mp_math_fabs(u32);
static u32 mp_math_floor(u32);
static u32 mp_math_fmod(u32, u32);
static u32 mp_math_frexp(u32);
static u32 mp_math_ldexp(u32, u32);
static u32 mp_math_modf(u32);
static u32 mp_math_isfinite(u32);
static u32 mp_math_isinf(u32);
static u32 mp_math_isnan(u32);
static u32 mp_math_trunc(u32);
static u32 mp_math_radians(u32);
static u32 mp_math_degrees(u32);
static u32 mp_math_erf(u32);
static u32 mp_math_erfc(u32);
static u32 mp_math_gamma(u32);
static u32 mp_math_lgamma(u32);
static u32 mp_cmath_phase(u32);
static u32 mp_cmath_polar(u32);
static u32 mp_cmath_rect(u32, u32);
static u32 mp_cmath_exp(u32);
static u32 mp_cmath_log(u32);
static u32 mp_cmath_log10(u32);
static u32 mp_cmath_sqrt(u32);
static u32 mp_cmath_cos(u32);
static u32 mp_cmath_sin(u32);
static u32 mp_sys_exit(u32, u32);
static u32 mp_sys_print_exception(u32, u32);
static u32 mod_ujson_dump(u32, u32);
static u32 mod_ujson_dumps(u32);
static u32 mod_ujson_load(u32);
static u32 mod_ujson_loads(u32);
static void sha256_transform(u32, u32);
static void sha256_final(u32, u32);
static u32 uhashlib_sha256_make_new(u32, u32, u32, u32);
static u32 uhashlib_sha256_update(u32, u32);
static u32 uhashlib_sha256_digest(u32);
static u32 mod_binascii_hexlify(u32, u32);
static u32 mod_binascii_unhexlify(u32);
static u32 mod_binascii_a2b_base64(u32);
static u32 mod_binascii_b2a_base64(u32);
static void module_print(u32, u32, u32);
static void module_attr(u32, u32, u32);
static u32 mp_obj_new_module(u32);
static u32 mp_module_get(u32);
static u32 mp_module_search_umodule(u32);
static void enable_log(u32);
static u32 get_log(void);
static void mp_js_write(u32, u32);
static u32 mod_chain_s2n(u32);
static u32 mod_chain_s2b(u32);
static u32 mod_chain_n2s(u32);
static u32 mod_chain_read_action_data(void);
static u32 mod_chain_require_recipient(u32);
static u32 mod_chain_require_auth(u32);
static u32 mod_chain_require_auth2(u32, u32);
static u32 mod_chain_has_auth(u32);
static u32 mod_chain_is_account(u32);
static u32 mod_chain_send_inline(u32, u32);
static u32 mod_chain_send_inline_raw(u32);
static u32 mod_chain_send_context_free_inline(u32, u32);
static u32 mod_chain_send_context_free_inline_raw(u32);
static u32 mod_chain_publication_time(void);
static u32 mod_chain_current_receiver(void);
static u32 mod_chain_get_active_producers(void);
static u32 mod_chain_action_new(u32, u32);
static u32 mod_chain_action_add_permission(u32, u32);
static u32 mod_chain_action_send(u32);
static u32 mod_chain_action_free(u32);
static u32 mod_chain_transaction_new(u32, u32);
static u32 mod_chain_transaction_add_action(u32, u32);
static u32 mod_chain_transaction_add_context_free_action(u32, u32);
static u32 mod_chain_transaction_send(u32, u32);
static u32 mod_chain_transaction_cancel(u32);
static u32 mod_chain_transaction_free(u32);
static u32 mod_chain_assert_sha256(u32, u32);
static u32 mod_chain_assert_sha1(u32, u32);
static u32 mod_chain_assert_sha512(u32, u32);
static u32 mod_chain_assert_ripemd160(u32, u32);
static u32 mod_chain_assert_recover_key(u32, u32, u32);
static u32 mod_chain_sha256(u32);
static u32 mod_chain_sha1(u32);
static u32 mod_chain_sha512(u32);
static u32 mod_chain_ripemd160(u32);
static u32 mod_chain_recover_key(u32, u32);
static u32 mod_chain_db_store_i64(u32, u32);
static u32 mod_chain_db_update_i64(u32, u32, u32);
static u32 mod_chain_db_remove_i64(u32);
static u32 mod_chain_db_get_i64(u32);
static u32 mod_chain_db_next_i64(u32);
static u32 mod_chain_db_previous_i64(u32);
static u32 mod_chain_db_find_i64(u32, u32);
static u32 mod_chain_db_lowerbound_i64(u32, u32);
static u32 mod_chain_db_upperbound_i64(u32, u32);
static u32 mod_chain_db_end_i64(u32, u32);
static u32 mod_chain_db_store_i256(u32, u32);
static u32 mod_chain_db_update_i256(u32, u32, u32);
static u32 mod_chain_db_remove_i256(u32);
static u32 mod_chain_db_get_i256(u32);
static u32 mod_chain_db_next_i256(u32);
static u32 mod_chain_db_previous_i256(u32);
static u32 mod_chain_db_find_i256(u32, u32);
static u32 mod_chain_db_lowerbound_i256(u32, u32);
static u32 mod_chain_db_upperbound_i256(u32, u32);
static u32 mod_chain_db_end_i256(u32, u32);
static u32 mod_chain_db_get_table_row_count(u32, u32, u32);
static u32 mod_chain_call_contract(u32, u32);
static u32 mod_chain_get_code_hash(u32);
static u32 mod_chain_db_idx_store(u32, u32);
static void parse_secondary_value(u32, u32, u32);
static u32 mod_chain_db_idx_update(u32, u32);
static u32 mod_chain_db_idx_remove(u32, u32);
static u32 mod_chain_db_idx_next(u32, u32);
static u32 mod_chain_db_idx_previous(u32, u32);
static u32 mod_chain_db_idx_find_primary(u32, u32);
static u32 mod_chain_db_idx_find_secondary(u32, u32);
static u32 mod_chain_db_idx_lowerbound(u32, u32);
static u32 mod_chain_db_idx_upperbound(u32, u32);
static u32 mod_chain_db_idx_end(u32, u32);
static u32 mod_chain_get_resource_limits(u32);
static u32 mod_chain_set_resource_limits(u32, u32);
static u32 mod_chain_set_proposed_producers(u32);
static u32 mod_chain_is_privileged(u32);
static u32 mod_chain_set_privileged(u32, u32);
static u32 mod_chain_set_blockchain_parameters(u32);
static u32 mod_chain_get_blockchain_parameters(void);
static u32 mod_chain_eosio_assert(u32, u32);
static u32 mod_chain_eosio_assert_code(u32, u32);
static u32 mod_chain_current_time(void);
static u32 mod_chain_read_transaction(void);
static u32 mod_chain_tapos_block_num(void);
static u32 mod_chain_tapos_block_prefix(void);
static u32 mod_chain_expiration(void);
static u32 mod_chain_get_action(u32, u32);
static u32 mod_chain_get_context_free_data(u32);
static u32 mod_chain_token_create(u32, u32, u32);
static u32 mod_chain_token_issue(u32, u32);
static u32 mod_chain_token_transfer(u32, u32);
static u32 mod_chain_token_open(u32, u32);
static u32 mod_chain_token_retire(u32, u32);
static u32 mod_chain_token_close(u32, u32);
static u32 mod_chain_get_log(void);
static u32 mod_chain_enable_log(u32);
static u32 mod_chain_get_code_version(void);
static void nlr_jump(u32);
static u32 mp_obj_dict_make_new(u32, u32, u32, u32);
static u32 dict_update(u32, u32, u32);
static u32 mp_obj_new_dict(u32);
static u32 mp_obj_dict_get(u32, u32);
static u32 mp_obj_dict_copy(u32);
static void dict_print(u32, u32, u32);
static u32 dict_unary_op(u32, u32);
static u32 dict_binary_op(u32, u32, u32);
static u32 dict_subscr(u32, u32, u32);
static u32 dict_getiter(u32, u32);
static void mp_obj_dict_init(u32, u32);
static u32 mp_obj_dict_len(u32);
static u32 mp_obj_dict_store(u32, u32, u32);
static u32 mp_obj_dict_delete(u32, u32);
static u32 dict_iter_next(u32, u32);
static u32 dict_view_it_iternext(u32);
static u32 dict_clear(u32);
static u32 dict_fromkeys(u32, u32);
static u32 dict_get(u32, u32);
static u32 dict_items(u32);
static void dict_view_print(u32, u32, u32);
static u32 dict_view_binary_op(u32, u32, u32);
static u32 dict_view_getiter(u32, u32);
static u32 dict_keys(u32);
static u32 dict_pop(u32, u32);
static u32 dict_popitem(u32);
static u32 dict_setdefault(u32, u32);
static u32 dict_values(u32);
static u32 object_make_new(u32, u32, u32, u32);
static u32 object___init__(u32);
static u32 object___new__(u32);
static u32 mp_obj_new_instance(u32, u32);
static u32 instance_count_native_bases(u32, u32);
static u32 mp_obj_instance_make_new(u32, u32, u32, u32);
static void mp_obj_class_lookup(u32, u32);
static u32 mp_obj_instance_is_callable(u32);
static u32 mp_obj_instance_call(u32, u32, u32, u32);
static u32 mp_obj_instance_getiter(u32, u32);
static void type_print(u32, u32, u32);
static u32 type_make_new(u32, u32, u32, u32);
static u32 mp_obj_new_type(u32, u32, u32);
static u32 type_call(u32, u32, u32, u32);
static void type_attr(u32, u32, u32);
static void instance_print(u32, u32, u32);
static u32 instance_unary_op(u32, u32);
static u32 instance_binary_op(u32, u32, u32);
static void mp_obj_instance_attr(u32, u32, u32);
static u32 instance_subscr(u32, u32, u32);
static u32 instance_get_buffer(u32, u32, u32);
static u32 static_class_method_make_new(u32, u32, u32, u32);
static void super_print(u32, u32, u32);
static u32 super_make_new(u32, u32, u32, u32);
static void super_attr(u32, u32, u32);
static void mp_load_super_method(u32, u32);
static u32 mp_obj_is_subclass_fast(u32, u32);
static u32 mp_builtin_issubclass(u32, u32);
static u32 mp_builtin_isinstance(u32, u32);
static u32 mp_obj_cast_to_native_base(u32, u32);
static u32 native_base_init_wrapper(u32, u32);
static void none_print(u32, u32, u32);
static u32 mp_obj_get_type(u32);
static u32 mp_obj_get_type_str(u32);
static void mp_obj_print_helper(u32, u32, u32);
static void mp_obj_print_exception(u32, u32);
static u32 mp_obj_is_true(u32);
static u32 mp_obj_len_maybe(u32);
static u32 mp_obj_is_callable(u32);
static u32 mp_obj_equal_not_equal(u32, u32, u32);
static u32 mp_obj_equal(u32, u32);
static u32 mp_obj_get_int(u32);
static u32 mp_obj_get_int_truncated(u32);
static u32 mp_obj_get_int_maybe(u32, u32);
static u32 mp_obj_get_float_maybe(u32, u32);
static f64 mp_obj_get_float(u32);
static u32 mp_obj_get_complex_maybe(u32, u32, u32);
static void mp_obj_get_complex(u32, u32, u32);
static void mp_obj_get_array(u32, u32, u32);
static u32 mp_get_index(u32, u32, u32, u32);
static u32 mp_obj_id(u32);
static u32 mp_obj_len(u32);
static u32 mp_obj_subscr(u32, u32, u32);
static u32 mp_identity(u32);
static u32 mp_identity_getiter(u32, u32);
static u32 mp_get_buffer(u32, u32, u32);
static void mp_get_buffer_raise(u32, u32, u32);
static u32 mp_generic_unary_op(u32, u32);
static void mp_str_print_quoted(u32, u32, u32, u32);
static void mp_str_print_json(u32, u32, u32);
static u32 mp_obj_str_make_new(u32, u32, u32, u32);
static u32 mp_obj_new_str_from_vstr(u32, u32);
static u32 mp_obj_new_str(u32, u32);
static u32 find_subbytes(u32, u32, u32, u32, u32);
static u32 mp_obj_str_binary_op(u32, u32, u32);
static void bad_implicit_conversion(u32);
static u32 str_join(u32, u32);
static u32 mp_obj_str_split(u32, u32);
static u32 mp_obj_new_str_of_type(u32, u32, u32);
static u32 mp_obj_str_get_data(u32, u32);
static u32 str_splitlines(u32, u32, u32);
static u32 str_rsplit(u32, u32);
static u32 str_find(u32, u32);
static u32 str_finder(u32, u32, u32, u32);
static u32 str_rfind(u32, u32);
static u32 str_index(u32, u32);
static u32 str_rindex(u32, u32);
static u32 str_startswith(u32, u32);
static u32 str_endswith(u32, u32);
static u32 str_strip(u32, u32);
static u32 str_uni_strip(u32, u32, u32);
static u32 str_lstrip(u32, u32);
static u32 str_rstrip(u32, u32);
static u32 str_center(u32, u32);
static u32 mp_obj_str_format(u32, u32, u32);
static void mp_obj_str_format_helper(u32, u32, u32, u32, u32, u32, u32);
static u32 str_replace(u32, u32);
static u32 str_count(u32, u32);
static u32 str_partition(u32, u32);
static u32 str_partitioner(u32, u32, u32);
static u32 str_rpartition(u32, u32);
static u32 str_lower(u32);
static u32 str_upper(u32);
static u32 str_isspace(u32);
static u32 str_isalpha(u32);
static u32 str_isdigit(u32);
static u32 str_isupper(u32);
static u32 str_islower(u32);
static u32 bytes_decode(u32, u32);
static u32 str_encode(u32, u32);
static u32 bytes_make_new(u32, u32, u32, u32);
static u32 mp_obj_str_get_buffer(u32, u32, u32);
static void str_print(u32, u32, u32);
static u32 bytes_subscr(u32, u32, u32);
static u32 mp_obj_new_bytes_iterator(u32, u32);
static u32 bytes_it_iternext(u32);
static u32 mp_obj_new_bytes(u32, u32);
static u32 mp_obj_new_str_via_qstr(u32, u32);
static u32 mp_obj_str_intern_checked(u32);
static u32 mp_obj_str_equal(u32, u32);
static u32 mp_obj_str_get_qstr(u32);
static u32 mp_obj_str_get_str(u32);
static u32 str_index_to_ptr(u32, u32, u32, u32, u32);
static void uni_print(u32, u32, u32);
static u32 uni_unary_op(u32, u32);
static u32 str_subscr(u32, u32, u32);
static u32 mp_obj_new_str_iterator(u32, u32);
static u32 str_it_iternext(u32);
static void mp_map_init(u32, u32);
static void mp_map_init_fixed_table(u32, u32, u32);
static void mp_map_clear(u32);
static u32 mp_map_lookup(u32, u32, u32);
static u32 get_hash_alloc_greater_or_equal_to(u32);
static void mp_set_init(u32, u32);
static u32 mp_set_lookup(u32, u32, u32);
static u32 mp_set_remove_first(u32);
static void mp_set_clear(u32);
static void mp_arg_check_num_sig(u32, u32, u32);
static void mp_arg_parse_all(u32, u32, u32, u32, u32, u32);
static void mp_arg_parse_all_kw_array(u32, u32, u32, u32, u32, u32);
static void mp_arg_error_unimpl_kw(void);
static void float_print(u32, u32, u32);
static u32 float_make_new(u32, u32, u32, u32);
static u32 float_unary_op(u32, u32);
static u32 float_binary_op(u32, u32, u32);
static u32 mp_obj_float_binary_op(u32, f64, u32);
static u32 mp_obj_new_float(f64);
static f64 mp_obj_float_get(u32);
static u32 mp_obj_int_new_mpz(void);
static u32 mp_obj_int_formatted_impl(u32, u32, u32, u32, u32, u32, u32, u32);
static u32 mp_obj_int_from_bytes_impl(u32, u32, u32);
static u32 mp_obj_int_to_bytes_impl(u32, u32, u32, u32);
static u32 mp_obj_int_sign(u32);
static u32 mp_obj_int_unary_op(u32, u32);
static u32 mp_obj_int_binary_op(u32, u32, u32);
static u32 mp_obj_int_get_checked(u32);
static u32 mp_obj_int_pow3(u32, u32, u32);
static u32 mp_obj_new_int_from_ull(u64);
static u32 mp_obj_new_int(u32);
static u32 mp_obj_new_int_from_ll(u64);
static u32 mp_obj_new_int_from_uint(u32);
static u32 mp_obj_new_int_from_str_len(u32, u32, u32, u32);
static u32 mp_obj_int_get_truncated(u32);
static u32 mp_obj_int_get_uint_checked(u32);
static f64 mp_obj_int_as_float_impl(u32);
static u32 mp_obj_new_int_from_float(f64);
static void mp_obj_int_print(u32, u32, u32);
static u32 mp_obj_int_formatted(u32, u32, u32, u32, u32, u32, u32, u32);
static u32 mp_int_format_size(u32, u32, u32, u32);
static u32 mp_obj_int_binary_op_extra_cases(u32, u32, u32);
static u32 mp_obj_int_make_new(u32, u32, u32, u32);
static u32 int_from_bytes(u32, u32);
static u32 int_to_bytes(u32, u32);
static void plat_print_strn(u32, u32, u32);
static u32 mp_print_str(u32, u32);
static u32 mp_print_strn(u32, u32, u32, u32, u32, u32);
static u32 mp_print_mp_int(u32, u32, u32, u32, u32, u32, u32, u32);
static u32 mp_print_float(u32, f64, u32, u32, u32, u32, u32);
static u32 mp_printf(u32, u32, u32);
static u32 mp_vprintf(u32, u32, u32);
static u32 mp_print_int(u32, u32, u32, u32, u32, u32, u32, u32);
static void mp_obj_tuple_print(u32, u32, u32);
static u32 mp_obj_tuple_unary_op(u32, u32);
static u32 mp_obj_tuple_binary_op(u32, u32, u32);
static u32 mp_obj_tuple_getiter(u32, u32);
static u32 mp_obj_new_tuple(u32, u32);
static u32 mp_obj_tuple_subscr(u32, u32, u32);
static u32 mp_obj_tuple_make_new(u32, u32, u32, u32);
static u32 tuple_it_iternext(u32);
static void mp_obj_tuple_get(u32, u32, u32);
static void mp_obj_tuple_del(u32);
static u32 tuple_count(u32, u32);
static u32 tuple_index(u32, u32);
static u32 mp_obj_new_getitem_iter(u32, u32);
static u32 it_iternext(u32);
static void mp_init(void);
static u32 mp_load_name(u32);
static void mp_raise_msg_varg(u32, u32, u32);
static u32 mp_load_global(u32);
static u32 mp_load_build_class(void);
static void mp_store_name(u32, u32);
static void mp_delete_name(u32);
static void mp_store_global(u32, u32);
static void mp_delete_global(u32);
static u32 mp_unary_op(u32, u32);
static u32 mp_binary_op(u32, u32, u32);
static void mp_raise_msg(u32, u32);
static void mp_raise_ValueError(u32);
static u32 mp_getiter(u32, u32);
static u32 mp_iternext(u32);
static void mp_load_method_maybe(u32, u32, u32);
static u32 mp_call_function_0(u32);
static u32 mp_call_function_n_kw(u32, u32, u32, u32);
static u32 mp_call_function_1(u32, u32);
static u32 mp_call_method_n_kw(u32, u32, u32);
static u32 mp_call_method_n_kw_var(u32, u32, u32);
static void mp_unpack_sequence(u32, u32, u32);
static void mp_unpack_ex(u32, u32, u32);
static u32 mp_load_attr(u32, u32);
static void mp_load_method(u32, u32, u32);
static void mp_convert_member_lookup(u32, u32, u32, u32);
static void mp_load_method_protected(u32, u32, u32, u32);
static void mp_store_attr(u32, u32, u32);
static u32 mp_iternext_allow_raise(u32);
static u32 mp_resume(u32, u32, u32, u32);
static u32 mp_make_raise_obj(u32);
static u32 mp_import_name(u32, u32, u32);
static u32 mp_import_from(u32, u32);
static void mp_import_all(u32);
static void m_malloc_fail(u32);
static void mp_raise_TypeError(u32);
static void mp_raise_OSError(u32);
static void mp_raise_NotImplementedError(u32);
static u32 checked_fun_call(u32, u32, u32, u32);
static u32 m_malloc(u32);
static u32 m_malloc_maybe(u32);
static u32 m_malloc0(u32);
static u32 m_realloc(u32, u32);
static u32 m_realloc_maybe(u32, u32, u32);
static void m_free(u32);
static u32 qstr_compute_hash(u32, u32);
static void qstr_init(void);
static u32 qstr_find_strn(u32, u32);
static u32 qstr_from_str(u32);
static u32 qstr_from_strn(u32, u32);
static u32 qstr_hash(u32);
static u32 qstr_len(u32);
static u32 qstr_str(u32);
static u32 qstr_data(u32, u32);
static void mp_obj_exception_print(u32, u32, u32);
static u32 mp_obj_exception_make_new(u32, u32, u32, u32);
static u32 mp_obj_exception_get_value(u32);
static void mp_obj_exception_attr(u32, u32, u32);
static u32 mp_obj_new_exception(u32);
static u32 mp_obj_new_exception_arg1(u32, u32);
static u32 mp_obj_new_exception_msg(u32, u32);
static u32 mp_obj_new_exception_msg_varg(u32, u32, u32);
static u32 mp_obj_new_exception_msg_vlist(u32, u32, u32);
static void exc_add_strn(u32, u32, u32);
static u32 mp_obj_is_exception_type(u32);
static u32 mp_obj_is_exception_instance(u32);
static u32 mp_obj_exception_match(u32, u32);
static void mp_obj_exception_add_traceback(u32, u32, u32, u32);
static void mp_obj_exception_get_traceback(u32, u32, u32);
static void mp_pystack_init(u32, u32);
static u32 mp_pystack_alloc(u32);
static void mp_js_init(u32);
static u32 mp_import_stat(u32);
static u32 mp_builtin_open(u32, u32, u32);
static void nlr_jump_fail(u32);
static void exec_prepare(u64);
static void exec_prepare2(u64);
static void exec_prepare3(u64);
static void eosio_apply(u64, u64, u64);
static void mp_hal_stdout_tx_strn(u32, u32);
static u32 time_time(void);
static u32 realloc_0(u32, u32);
static u64 get_code_version(void);
static void mp_js_hook(void);
static u32 setjmp_ex(u32);
static void longjmp_ex(u32, u32);

static u32 g0;
static u32 g1;
static u32 g2;

static void init_globals(void) {
  g0 = 5120u;
  g1 = 53267u;
  g2 = 53267u;
}

static wasm_rt_memory_t M0;

static wasm_rt_table_t T0;

static void __wasm_call_ctors(void) {
  FUNC_PROLOGUE;
  FUNC_EPILOGUE;
}

static u32 __errno_location(void) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 5120u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 __memalign(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 0u;
  l0 = i0;
  i0 = 0u;
  i1 = p0;
  i0 -= i1;
  l1 = i0;
  i1 = p0;
  i0 &= i1;
  i1 = p0;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 16u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = malloc_0(i0);
  goto Bfunc;
  B1:;
  i0 = __errno_location();
  i1 = 22u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 4294967295u;
  i0 += i1;
  l2 = i0;
  i1 = p1;
  i0 += i1;
  i0 = malloc_0(i0);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i1 = l2;
  i2 = p0;
  i1 += i2;
  i2 = l1;
  i1 &= i2;
  l0 = i1;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 4294967292u;
  i0 += i1;
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 7u;
  i0 &= i1;
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = l2;
  i2 = 4294967288u;
  i1 &= i2;
  i0 += i1;
  l2 = i0;
  i1 = 4294967288u;
  i0 += i1;
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = l1;
  i1 = p1;
  i2 = l0;
  i3 = p0;
  i2 -= i3;
  l5 = i2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4294967292u;
  i0 += i1;
  i1 = l2;
  i2 = l0;
  i1 -= i2;
  l1 = i1;
  i2 = p1;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4294967288u;
  i0 += i1;
  i1 = l4;
  i2 = 7u;
  i1 &= i2;
  p1 = i1;
  i2 = l5;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = p1;
  i2 = l1;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  free_0(i0);
  B4:;
  i0 = l0;
  goto Bfunc;
  B3:;
  i0 = p0;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = 4294967288u;
  i0 += i1;
  i1 = p0;
  i2 = 4294967288u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l0;
  i3 = p0;
  i2 -= i3;
  p0 = i2;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4294967292u;
  i0 += i1;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p0;
  i1 -= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 _posix_memalign(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 22u;
  l0 = i0;
  i0 = p1;
  i1 = 4u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = p2;
  i0 = __memalign(i0, i1);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  l0 = i0;
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = __errno_location();
  i0 = i32_load((&M0), (u64)(i0));
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 operator_new_unsigned_int_(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 1u;
  i2 = p0;
  i0 = i2 ? i0 : i1;
  l0 = i0;
  i0 = malloc_0(i0);
  p0 = i0;
  if (i0) {goto B0;}
  L1: vm_checktime();
    i0 = 0u;
    p0 = i0;
    i0 = 0u;
    i0 = i32_load((&M0), (u64)(i0 + 5128));
    l1 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l1;
    CALL_INDIRECT(T0, void (*)(void), 0, i0);
    i0 = l0;
    i0 = malloc_0(i0);
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto L1;}
  B0:;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 operator_new___unsigned_int_(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = operator_new_unsigned_int_(i0);
  FUNC_EPILOGUE;
  return i0;
}

static void operator_delete_void__(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  free_0(i0);
  B0:;
  FUNC_EPILOGUE;
}

static void operator_delete___void__(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  operator_delete_void__(i0);
  FUNC_EPILOGUE;
}

static u32 operator_new_unsigned_int__std__align_val_t_(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  i1 = p1;
  i2 = 4u;
  i3 = p1;
  i4 = 4u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  p1 = i1;
  i2 = p0;
  i3 = 1u;
  i4 = p0;
  i2 = i4 ? i2 : i3;
  l1 = i2;
  i0 = _posix_memalign(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B0;}
  L2: vm_checktime();
    i0 = 0u;
    i0 = i32_load((&M0), (u64)(i0 + 5128));
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto B1;}
    i0 = p0;
    CALL_INDIRECT(T0, void (*)(void), 0, i0);
    i0 = l0;
    i1 = 12u;
    i0 += i1;
    i1 = p1;
    i2 = l1;
    i0 = _posix_memalign(i0, i1, i2);
    if (i0) {goto L2;}
    goto B0;
  B1:;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  B0:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 operator_new___unsigned_int__std__align_val_t_(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  i0 = operator_new_unsigned_int__std__align_val_t_(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static void operator_delete_void___std__align_val_t_(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  free_0(i0);
  B0:;
  FUNC_EPILOGUE;
}

static void operator_delete___void___std__align_val_t_(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  operator_delete_void___std__align_val_t_(i0, i1);
  FUNC_EPILOGUE;
}

static u32 strlen_0(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  l0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  l0 = i0;
  L3: vm_checktime();
    i0 = l0;
    i1 = 3u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l1 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    l0 = i0;
    i0 = l1;
    if (i0) {goto L3;}
  i0 = l2;
  i1 = 4294967295u;
  i0 += i1;
  i1 = p0;
  i0 -= i1;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = 4294967292u;
  i0 += i1;
  l0 = i0;
  L4: vm_checktime();
    i0 = l0;
    i1 = 4u;
    i0 += i1;
    l0 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i1 = 4294967295u;
    i0 ^= i1;
    i1 = l1;
    i2 = 4278124287u;
    i1 += i2;
    i0 &= i1;
    i1 = 2155905152u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto L4;}
  i0 = l1;
  i1 = 255u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  L5: vm_checktime();
    i0 = l0;
    i0 = i32_load8_u((&M0), (u64)(i0 + 1));
    l1 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    l0 = i0;
    i0 = l1;
    if (i0) {goto L5;}
  i0 = l2;
  i1 = p0;
  i0 -= i1;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = p0;
  i0 -= i1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i0 -= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 memchr_0(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p2;
  i1 = 0u;
  i0 = i0 != i1;
  l0 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 255u;
  i0 &= i1;
  l0 = i0;
  L5: vm_checktime();
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = l0;
    i0 = i0 == i1;
    if (i0) {goto B3;}
    i0 = p2;
    i1 = 1u;
    i0 = i0 != i1;
    l1 = i0;
    i0 = p2;
    i1 = 4294967295u;
    i0 += i1;
    l2 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i0 = p2;
    i1 = 1u;
    i0 = i0 == i1;
    if (i0) {goto B6;}
    i0 = l2;
    p2 = i0;
    i0 = p0;
    i1 = 3u;
    i0 &= i1;
    if (i0) {goto L5;}
    B6:;
  i0 = l1;
  if (i0) {goto B2;}
  goto B1;
  B4:;
  i0 = p2;
  l2 = i0;
  i0 = l0;
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = p2;
  l2 = i0;
  B2:;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = p1;
  i2 = 255u;
  i1 &= i2;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = l2;
  if (i0) {goto B0;}
  goto B1;
  B7:;
  i0 = l2;
  i1 = 4u;
  i0 = i0 < i1;
  if (i0) {goto B9;}
  i0 = p1;
  i1 = 255u;
  i0 &= i1;
  i1 = 16843009u;
  i0 *= i1;
  l0 = i0;
  L10: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i0 ^= i1;
    p2 = i0;
    i1 = 4294967295u;
    i0 ^= i1;
    i1 = p2;
    i2 = 4278124287u;
    i1 += i2;
    i0 &= i1;
    i1 = 2155905152u;
    i0 &= i1;
    if (i0) {goto B8;}
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = l2;
    i1 = 4294967292u;
    i0 += i1;
    l2 = i0;
    i1 = 3u;
    i0 = i0 > i1;
    if (i0) {goto L10;}
  B9:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B1;}
  B8:;
  i0 = p1;
  i1 = 255u;
  i0 &= i1;
  p2 = i0;
  L11: vm_checktime();
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = p2;
    i0 = i0 == i1;
    if (i0) {goto B0;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i0 = l2;
    i1 = 4294967295u;
    i0 += i1;
    l2 = i0;
    if (i0) {goto L11;}
  B1:;
  i0 = 0u;
  p0 = i0;
  B0:;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 memcmp_0(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B1;}
  L2: vm_checktime();
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l0 = i0;
    i1 = p1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    l1 = i1;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i0 = p2;
    i1 = 4294967295u;
    i0 += i1;
    p2 = i0;
    if (i0) {goto L2;}
  B1:;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = l1;
  i0 -= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void __lock(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void __unlock(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static u32 __ofl_lock(void) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 5132u;
  __lock(i0);
  i0 = 5140u;
  FUNC_EPILOGUE;
  return i0;
}

static void __ofl_unlock(void) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 5132u;
  __unlock(i0);
  FUNC_EPILOGUE;
}

static u32 __lockfile(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void __unlockfile(u32 p0) {
  FUNC_PROLOGUE;
  FUNC_EPILOGUE;
}

static f64 scalbn_0(f64 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1, j2;
  f64 d0, d1;
  i0 = p1;
  i1 = 1024u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B3;}
  d0 = p0;
  d1 = 8.9884656743115795e+307;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  i0 = p1;
  i1 = 2047u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 4294965250u;
  i0 += i1;
  p1 = i0;
  i1 = 1023u;
  i2 = p1;
  i3 = 1023u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  p1 = i0;
  d0 = p0;
  d1 = 8.9884656743115795e+307;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  goto B0;
  B3:;
  i0 = p1;
  i1 = 4294966273u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  d0 = p0;
  d1 = 2.0041683600089728e-292;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  i0 = p1;
  i1 = 4294965304u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 1938u;
  i0 += i1;
  p1 = i0;
  i1 = 4294966274u;
  i2 = p1;
  i3 = 4294966274u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  p1 = i0;
  d0 = p0;
  d1 = 2.0041683600089728e-292;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  goto B0;
  B2:;
  i0 = p1;
  i1 = 4294966273u;
  i0 += i1;
  p1 = i0;
  goto B0;
  B1:;
  i0 = p1;
  i1 = 969u;
  i0 += i1;
  p1 = i0;
  B0:;
  d0 = p0;
  i1 = p1;
  i2 = 1023u;
  i1 += i2;
  j1 = (u64)(i1);
  j2 = 52ull;
  j1 <<= (j2 & 63);
  d1 = f64_reinterpret_i64(j1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  FUNC_EPILOGUE;
  return d0;
}

static u32 ____fpclassifyl(u64 p0, u64 p1) {
  u32 l1 = 0, l2 = 0;
  u64 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  j0 = p1;
  j1 = 281474976710655ull;
  j0 &= j1;
  l0 = j0;
  j0 = p1;
  j1 = 48ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 32767u;
  i0 &= i1;
  l1 = i0;
  i1 = 32767u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = 4u;
  l2 = i0;
  i0 = l1;
  if (i0) {goto B0;}
  i0 = 2u;
  i1 = 3u;
  j2 = l0;
  j3 = p0;
  j2 |= j3;
  i2 = !(j2);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  j0 = l0;
  j1 = p0;
  j0 |= j1;
  i0 = !(j0);
  l2 = i0;
  B0:;
  i0 = l2;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static f64 fabs_0(f64 p0) {
  FUNC_PROLOGUE;
  u64 j0, j1;
  f64 d0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  d0 = f64_reinterpret_i64(j0);
  FUNC_EPILOGUE;
  return d0;
}

static u32 wcrtomb(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 1u;
  l0 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 127u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = p1;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = 1u;
  goto Bfunc;
  B1:;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = p1;
  i1 = 2047u;
  i0 = i0 > i1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = p1;
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = p0;
  i1 = p1;
  i2 = 6u;
  i1 >>= (i2 & 31);
  i2 = 192u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = 2u;
  goto Bfunc;
  B7:;
  i0 = p1;
  i1 = 4294967168u;
  i0 &= i1;
  i1 = 57216u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = p0;
  i1 = p1;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = 1u;
  goto Bfunc;
  B6:;
  i0 = p1;
  i1 = 55296u;
  i0 = i0 < i1;
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 4294959104u;
  i0 &= i1;
  i1 = 57344u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 4294901760u;
  i0 += i1;
  i1 = 1048575u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = p1;
  i2 = 18u;
  i1 >>= (i2 & 31);
  i2 = 240u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 3), i1);
  i0 = p0;
  i1 = p1;
  i2 = 12u;
  i1 >>= (i2 & 31);
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = p0;
  i1 = p1;
  i2 = 6u;
  i1 >>= (i2 & 31);
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 2), i1);
  i0 = 4u;
  goto Bfunc;
  B5:;
  i0 = __errno_location();
  i1 = 84u;
  i32_store((&M0), (u64)(i0), i1);
  goto B2;
  B4:;
  i0 = p0;
  i1 = p1;
  i2 = 12u;
  i1 >>= (i2 & 31);
  i2 = 224u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 2), i1);
  i0 = p0;
  i1 = p1;
  i2 = 6u;
  i1 >>= (i2 & 31);
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = 3u;
  goto Bfunc;
  B3:;
  i0 = __errno_location();
  i1 = 84u;
  i32_store((&M0), (u64)(i0), i1);
  B2:;
  i0 = 4294967295u;
  l0 = i0;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 wctomb_0(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = 0u;
  i0 = wcrtomb(i0, i1, i2);
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 __towrite(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = p0;
  i1 = p0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 74));
  l0 = i1;
  i2 = 4294967295u;
  i1 += i2;
  i2 = l0;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 74), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 8u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 44));
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = p0;
  i1 = l0;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 48));
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = l0;
  i2 = 32u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 4294967295u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 __fwritex(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  l1 = i1;
  i0 -= i1;
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  goto B0;
  B3:;
  i0 = 0u;
  l2 = i0;
  i0 = p2;
  i0 = __towrite(i0);
  if (i0) {goto B1;}
  i0 = p2;
  i1 = 16u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  l1 = i1;
  i0 -= i1;
  i1 = p1;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  B2:;
  i0 = 0u;
  l3 = i0;
  i0 = p2;
  i0 = i32_load8_s((&M0), (u64)(i0 + 75));
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B4;}
  i0 = 0u;
  l3 = i0;
  i0 = p0;
  l2 = i0;
  i0 = 0u;
  l0 = i0;
  L5: vm_checktime();
    i0 = p1;
    i1 = l0;
    i0 = i0 == i1;
    if (i0) {goto B4;}
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = l2;
    i1 = p1;
    i0 += i1;
    l4 = i0;
    i0 = l2;
    i1 = 4294967295u;
    i0 += i1;
    l5 = i0;
    l2 = i0;
    i0 = l4;
    i1 = 4294967295u;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 10u;
    i0 = i0 != i1;
    if (i0) {goto L5;}
  i0 = p2;
  i1 = p0;
  i2 = p1;
  i3 = l0;
  i2 -= i3;
  i3 = 1u;
  i2 += i3;
  l3 = i2;
  i3 = p2;
  i3 = i32_load((&M0), (u64)(i3 + 36));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 1, i3, i0, i1, i2);
  l2 = i0;
  i1 = l3;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = l5;
  i1 = p1;
  i0 += i1;
  i1 = 1u;
  i0 += i1;
  p0 = i0;
  i0 = p2;
  i1 = 20u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = l0;
  i1 = 4294967295u;
  i0 += i1;
  p1 = i0;
  B4:;
  i0 = l1;
  i1 = p0;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p2;
  i1 = 20u;
  i0 += i1;
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = p1;
  i0 += i1;
  l2 = i0;
  B1:;
  i0 = l2;
  goto Bfunc;
  B0:;
  i0 = p2;
  i1 = p0;
  i2 = p1;
  i3 = p2;
  i3 = i32_load((&M0), (u64)(i3 + 36));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 1, i3, i0, i1, i2);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 __signbitl(u64 p0, u64 p1) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  j0 = p1;
  j1 = 63ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 dummy(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 __lctrans(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  i0 = dummy(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static u32 strerror_0(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  l0 = i0;
  L3: vm_checktime();
    i0 = l0;
    i1 = 7904u;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = p0;
    i0 = i0 == i1;
    if (i0) {goto B2;}
    i0 = 87u;
    l1 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i1 = 87u;
    i0 = i0 != i1;
    if (i0) {goto L3;}
    goto B1;
  B2:;
  i0 = l0;
  l1 = i0;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = 8000u;
  l0 = i0;
  L4: vm_checktime();
    i0 = l0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p0 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    l0 = i0;
    i0 = p0;
    if (i0) {goto L4;}
    i0 = l2;
    l0 = i0;
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    if (i0) {goto L4;}
  i0 = l2;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  i0 = __lctrans(i0, i1);
  goto Bfunc;
  B0:;
  i0 = 8000u;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  i0 = __lctrans(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 _strnlen(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 0u;
  i2 = p1;
  i0 = memchr_0(i0, i1, i2);
  l0 = i0;
  i1 = p0;
  i0 -= i1;
  i1 = p1;
  i2 = l0;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static void frexpl(u32 p0, u64 p1, u64 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2, j3, j4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  j0 = p2;
  j1 = 48ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i1 = 32767u;
  i0 &= i1;
  l2 = i0;
  i1 = 32767u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l2;
  if (i0) {goto B3;}
  j0 = p1;
  j1 = p2;
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___eqtf2Z_ijjjj)(j0, j1, j2, j3);
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  j1 = p1;
  j2 = p2;
  j3 = 0ull;
  j4 = 4645181540655955968ull;
  (*Z_envZ___multf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  j2 = i64_load((&M0), (u64)(i2));
  i3 = p3;
  frexpl(i0, j1, j2, i3);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4294967176u;
  i0 += i1;
  l1 = i0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 24));
  p2 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  p1 = j0;
  goto B1;
  B3:;
  i0 = p3;
  i1 = l1;
  i2 = 32767u;
  i1 &= i2;
  i2 = 4294950914u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 32768u;
  i0 &= i1;
  i1 = 16382u;
  i0 |= i1;
  j0 = (u64)(i0);
  j1 = 48ull;
  j0 <<= (j1 & 63);
  j1 = p2;
  j2 = 281474976710655ull;
  j1 &= j2;
  j0 |= j1;
  p2 = j0;
  goto B0;
  B2:;
  i0 = 0u;
  l1 = i0;
  B1:;
  i0 = p3;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = p0;
  j1 = p1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 v_fprintf(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j1;
  i0 = g0;
  i1 = 288u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 284), i1);
  i0 = l0;
  i1 = 272u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 264u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 256u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 248), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 240), j1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 284));
  i32_store((&M0), (u64)(i0 + 280), i1);
  i0 = 0u;
  l1 = i0;
  i0 = 4294967295u;
  p2 = i0;
  i0 = 0u;
  i1 = p1;
  i2 = l0;
  i3 = 280u;
  i2 += i3;
  i3 = l0;
  i4 = 80u;
  i3 += i4;
  i4 = l0;
  i5 = 240u;
  i4 += i5;
  i0 = printf_core(i0, i1, i2, i3, i4);
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 76));
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = __lockfile(i0);
  l1 = i0;
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i0 = p0;
  i0 = i32_load8_s((&M0), (u64)(i0 + 74));
  i1 = 0u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B5;}
  i0 = p2;
  i1 = 32u;
  i0 &= i1;
  l2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 48));
  i0 = !(i0);
  if (i0) {goto B4;}
  goto B3;
  B5:;
  i0 = p0;
  i1 = p2;
  i2 = 4294967263u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 32u;
  i0 &= i1;
  l2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 48));
  if (i0) {goto B3;}
  B4:;
  i0 = p0;
  i1 = 48u;
  i0 += i1;
  l3 = i0;
  i1 = 80u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = l0;
  i2 = 80u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 44));
  l4 = i0;
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i3 = 280u;
  i2 += i3;
  i3 = l0;
  i4 = 80u;
  i3 += i4;
  i4 = l0;
  i5 = 240u;
  i4 += i5;
  i0 = printf_core(i0, i1, i2, i3, i4);
  p2 = i0;
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 0u;
  i2 = 0u;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 36));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 1, i3, i0, i1, i2);
  i0 = p0;
  i1 = 44u;
  i0 += i1;
  i1 = l4;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 28u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 20u;
  i0 += i1;
  p1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = p1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4294967295u;
  i2 = l4;
  i0 = i2 ? i0 : i1;
  p2 = i0;
  goto B2;
  B3:;
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i3 = 280u;
  i2 += i3;
  i3 = l0;
  i4 = 80u;
  i3 += i4;
  i4 = l0;
  i5 = 240u;
  i4 += i5;
  i0 = printf_core(i0, i1, i2, i3, i4);
  p2 = i0;
  B2:;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i2 = l2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 32u;
  i0 &= i1;
  p1 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p0;
  __unlockfile(i0);
  B6:;
  i0 = 4294967295u;
  i1 = p2;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  p2 = i0;
  B0:;
  i0 = l0;
  i1 = 288u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 printf_core(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0, l15 = 0, 
      l16 = 0, l17 = 0, l18 = 0, l19 = 0, l20 = 0, l21 = 0, l22 = 0, l23 = 0, 
      l26 = 0, l27 = 0, l28 = 0, l31 = 0, l32 = 0, l33 = 0;
  u64 l24 = 0, l25 = 0, l29 = 0, l30 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1, j2, j3, j4;
  i0 = g0;
  i1 = 8128u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 704u;
  i0 += i1;
  i1 = 8u;
  i0 |= i1;
  l1 = i0;
  i0 = l0;
  i1 = 704u;
  i0 += i1;
  i1 = 9u;
  i0 |= i1;
  l2 = i0;
  i0 = 4294967294u;
  i1 = l0;
  i2 = 704u;
  i1 += i2;
  i0 -= i1;
  l3 = i0;
  i0 = l0;
  i1 = 7664u;
  i0 += i1;
  l4 = i0;
  i0 = l0;
  i1 = 692u;
  i0 += i1;
  i1 = 12u;
  i0 += i1;
  l5 = i0;
  i0 = l0;
  i1 = 352u;
  i0 += i1;
  i1 = 54u;
  i0 += i1;
  l6 = i0;
  i0 = l0;
  i1 = 352u;
  i0 += i1;
  i1 = 55u;
  i0 += i1;
  l7 = i0;
  i0 = 0u;
  l8 = i0;
  i0 = 0u;
  l9 = i0;
  i0 = 0u;
  l10 = i0;
  L3: vm_checktime();
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B19;}
    L20: vm_checktime();
      i0 = p1;
      l12 = i0;
      i0 = l10;
      i1 = 2147483647u;
      i2 = l9;
      i1 -= i2;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto B2;}
      i0 = l10;
      i1 = l9;
      i0 += i1;
      l9 = i0;
      i0 = l12;
      i0 = i32_load8_u((&M0), (u64)(i0));
      p1 = i0;
      i0 = !(i0);
      if (i0) {goto B0;}
      i0 = l12;
      l10 = i0;
      i0 = p1;
      i1 = 255u;
      i0 &= i1;
      p1 = i0;
      i0 = !(i0);
      if (i0) {goto B23;}
      L24: vm_checktime();
        i0 = p1;
        i1 = 37u;
        i0 = i0 == i1;
        if (i0) {goto B22;}
        i0 = l10;
        i0 = i32_load8_u((&M0), (u64)(i0 + 1));
        p1 = i0;
        i0 = l10;
        i1 = 1u;
        i0 += i1;
        l10 = i0;
        i0 = p1;
        i1 = 255u;
        i0 &= i1;
        p1 = i0;
        if (i0) {goto L24;}
      B23:;
      i0 = l10;
      p1 = i0;
      i0 = l10;
      i1 = l12;
      i0 -= i1;
      l10 = i0;
      i1 = 2147483647u;
      i2 = l9;
      i1 -= i2;
      l13 = i1;
      i0 = (u32)((s32)i0 <= (s32)i1);
      if (i0) {goto B21;}
      goto B2;
      B22:;
      i0 = l10;
      l13 = i0;
      L26: vm_checktime();
        i0 = l13;
        i1 = 1u;
        i0 += i1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        i1 = 37u;
        i0 = i0 != i1;
        if (i0) {goto B25;}
        i0 = l10;
        i1 = 1u;
        i0 += i1;
        l10 = i0;
        i0 = l13;
        i0 = i32_load8_u((&M0), (u64)(i0 + 2));
        l14 = i0;
        i0 = l13;
        i1 = 2u;
        i0 += i1;
        p1 = i0;
        l13 = i0;
        i0 = l14;
        i1 = 37u;
        i0 = i0 == i1;
        if (i0) {goto L26;}
      i0 = l10;
      i1 = l12;
      i0 -= i1;
      l10 = i0;
      i1 = 2147483647u;
      i2 = l9;
      i1 -= i2;
      l13 = i1;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto B2;}
      goto B21;
      B25:;
      i0 = l13;
      p1 = i0;
      i0 = l10;
      i1 = l12;
      i0 -= i1;
      l10 = i0;
      i1 = 2147483647u;
      i2 = l9;
      i1 -= i2;
      l13 = i1;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto B2;}
      B21:;
      i0 = p0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i1 = 32u;
      i0 &= i1;
      if (i0) {goto B27;}
      i0 = l12;
      i1 = l10;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      B27:;
      i0 = l10;
      if (i0) {goto L20;}
      goto B18;
    B19:;
    L28: vm_checktime();
      i0 = p1;
      l12 = i0;
      i0 = l10;
      i1 = 2147483647u;
      i2 = l9;
      i1 -= i2;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto B2;}
      i0 = l10;
      i1 = l9;
      i0 += i1;
      l9 = i0;
      i0 = l12;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l10 = i0;
      i0 = !(i0);
      if (i0) {goto B30;}
      i0 = l12;
      p1 = i0;
      i0 = l10;
      i1 = 255u;
      i0 &= i1;
      l10 = i0;
      i0 = !(i0);
      if (i0) {goto B32;}
      L33: vm_checktime();
        i0 = l10;
        i1 = 37u;
        i0 = i0 == i1;
        if (i0) {goto B31;}
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0 + 1));
        l10 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l10;
        i1 = 255u;
        i0 &= i1;
        l10 = i0;
        if (i0) {goto L33;}
      B32:;
      i0 = p1;
      i1 = l12;
      i0 -= i1;
      l10 = i0;
      i1 = 2147483647u;
      i2 = l9;
      i1 -= i2;
      l13 = i1;
      i0 = (u32)((s32)i0 <= (s32)i1);
      if (i0) {goto B29;}
      goto B2;
      B31:;
      i0 = p1;
      l13 = i0;
      i0 = p1;
      l10 = i0;
      L35: vm_checktime();
        i0 = l10;
        i1 = 1u;
        i0 += i1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        i1 = 37u;
        i0 = i0 != i1;
        if (i0) {goto B34;}
        i0 = l13;
        i1 = 1u;
        i0 += i1;
        l13 = i0;
        i0 = l10;
        i0 = i32_load8_u((&M0), (u64)(i0 + 2));
        l14 = i0;
        i0 = l10;
        i1 = 2u;
        i0 += i1;
        p1 = i0;
        l10 = i0;
        i0 = l14;
        i1 = 37u;
        i0 = i0 == i1;
        if (i0) {goto L35;}
      i0 = l13;
      i1 = l12;
      i0 -= i1;
      l10 = i0;
      i1 = 2147483647u;
      i2 = l9;
      i1 -= i2;
      l13 = i1;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto B2;}
      goto B29;
      B34:;
      i0 = l10;
      p1 = i0;
      i0 = l13;
      i1 = l12;
      i0 -= i1;
      l10 = i0;
      i1 = 2147483647u;
      i2 = l9;
      i1 -= i2;
      l13 = i1;
      i0 = (u32)((s32)i0 <= (s32)i1);
      if (i0) {goto B29;}
      goto B2;
      B30:;
      i0 = p0;
      if (i0) {goto B0;}
      i0 = l8;
      i0 = !(i0);
      if (i0) {goto B45;}
      i0 = 1u;
      p1 = i0;
      i0 = p4;
      i0 = i32_load((&M0), (u64)(i0 + 4));
      l10 = i0;
      i0 = !(i0);
      if (i0) {goto B36;}
      i0 = p3;
      i1 = 16u;
      i0 += i1;
      i1 = l10;
      i2 = p2;
      pop_arg(i0, i1, i2);
      i0 = p4;
      i0 = i32_load((&M0), (u64)(i0 + 8));
      l10 = i0;
      i0 = !(i0);
      if (i0) {goto B44;}
      i0 = p3;
      i1 = 32u;
      i0 += i1;
      i1 = l10;
      i2 = p2;
      pop_arg(i0, i1, i2);
      i0 = p4;
      i0 = i32_load((&M0), (u64)(i0 + 12));
      l10 = i0;
      i0 = !(i0);
      if (i0) {goto B43;}
      i0 = p3;
      i1 = 48u;
      i0 += i1;
      i1 = l10;
      i2 = p2;
      pop_arg(i0, i1, i2);
      i0 = p4;
      i0 = i32_load((&M0), (u64)(i0 + 16));
      l10 = i0;
      i0 = !(i0);
      if (i0) {goto B42;}
      i0 = p3;
      i1 = 64u;
      i0 += i1;
      i1 = l10;
      i2 = p2;
      pop_arg(i0, i1, i2);
      i0 = p4;
      i0 = i32_load((&M0), (u64)(i0 + 20));
      l10 = i0;
      i0 = !(i0);
      if (i0) {goto B41;}
      i0 = p3;
      i1 = 80u;
      i0 += i1;
      i1 = l10;
      i2 = p2;
      pop_arg(i0, i1, i2);
      i0 = p4;
      i0 = i32_load((&M0), (u64)(i0 + 24));
      l10 = i0;
      i0 = !(i0);
      if (i0) {goto B40;}
      i0 = p3;
      i1 = 96u;
      i0 += i1;
      i1 = l10;
      i2 = p2;
      pop_arg(i0, i1, i2);
      i0 = p4;
      i0 = i32_load((&M0), (u64)(i0 + 28));
      l10 = i0;
      i0 = !(i0);
      if (i0) {goto B39;}
      i0 = p3;
      i1 = 112u;
      i0 += i1;
      i1 = l10;
      i2 = p2;
      pop_arg(i0, i1, i2);
      i0 = p4;
      i0 = i32_load((&M0), (u64)(i0 + 32));
      l10 = i0;
      i0 = !(i0);
      if (i0) {goto B38;}
      i0 = p3;
      i1 = 128u;
      i0 += i1;
      i1 = l10;
      i2 = p2;
      pop_arg(i0, i1, i2);
      i0 = p4;
      i0 = i32_load((&M0), (u64)(i0 + 36));
      l10 = i0;
      i0 = !(i0);
      if (i0) {goto B37;}
      i0 = p3;
      i1 = 144u;
      i0 += i1;
      i1 = l10;
      i2 = p2;
      pop_arg(i0, i1, i2);
      i0 = l0;
      i1 = 8128u;
      i0 += i1;
      g0 = i0;
      i0 = 1u;
      goto Bfunc;
      B45:;
      i0 = l0;
      i1 = 8128u;
      i0 += i1;
      g0 = i0;
      i0 = 0u;
      goto Bfunc;
      B44:;
      i0 = 2u;
      p1 = i0;
      goto B36;
      B43:;
      i0 = 3u;
      p1 = i0;
      goto B36;
      B42:;
      i0 = 4u;
      p1 = i0;
      goto B36;
      B41:;
      i0 = 5u;
      p1 = i0;
      goto B36;
      B40:;
      i0 = 6u;
      p1 = i0;
      goto B36;
      B39:;
      i0 = 7u;
      p1 = i0;
      goto B36;
      B38:;
      i0 = 8u;
      p1 = i0;
      goto B36;
      B37:;
      i0 = 9u;
      p1 = i0;
      B36:;
      i0 = p4;
      i1 = p1;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l10 = i0;
      L46: vm_checktime();
        i0 = l10;
        i0 = i32_load((&M0), (u64)(i0));
        if (i0) {goto B17;}
        i0 = l10;
        i1 = 4u;
        i0 += i1;
        l10 = i0;
        i0 = 1u;
        l9 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i1 = 9u;
        i0 = i0 <= i1;
        if (i0) {goto L46;}
        goto B0;
      B29:;
      i0 = l10;
      if (i0) {goto L28;}
    B18:;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    l10 = i0;
    i0 = p1;
    i0 = i32_load8_s((&M0), (u64)(i0 + 1));
    l11 = i0;
    i1 = 4294967248u;
    i0 += i1;
    l15 = i0;
    i1 = 9u;
    i0 = i0 > i1;
    if (i0) {goto B49;}
    i0 = p1;
    i1 = 3u;
    i0 += i1;
    i1 = l10;
    i2 = p1;
    i2 = i32_load8_u((&M0), (u64)(i2 + 2));
    i3 = 36u;
    i2 = i2 == i3;
    l14 = i2;
    i0 = i2 ? i0 : i1;
    l10 = i0;
    i0 = l15;
    i1 = 4294967295u;
    i2 = l14;
    i0 = i2 ? i0 : i1;
    l16 = i0;
    i0 = 1u;
    i1 = l8;
    i2 = l14;
    i0 = i2 ? i0 : i1;
    l8 = i0;
    i0 = 0u;
    l17 = i0;
    i0 = p1;
    i1 = 3u;
    i2 = 1u;
    i3 = l14;
    i1 = i3 ? i1 : i2;
    i0 += i1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l11 = i0;
    i1 = 4294967264u;
    i0 += i1;
    p1 = i0;
    i1 = 31u;
    i0 = i0 > i1;
    if (i0) {goto B47;}
    goto B48;
    B49:;
    i0 = 4294967295u;
    l16 = i0;
    i0 = 0u;
    l17 = i0;
    i0 = l11;
    i1 = 4294967264u;
    i0 += i1;
    p1 = i0;
    i1 = 31u;
    i0 = i0 > i1;
    if (i0) {goto B47;}
    B48:;
    i0 = 1u;
    i1 = p1;
    i0 <<= (i1 & 31);
    p1 = i0;
    i1 = 75913u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B47;}
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    l14 = i0;
    i0 = 0u;
    l17 = i0;
    L50: vm_checktime();
      i0 = p1;
      i1 = l17;
      i0 |= i1;
      l17 = i0;
      i0 = l14;
      l10 = i0;
      i0 = i32_load8_s((&M0), (u64)(i0));
      l11 = i0;
      i1 = 4294967264u;
      i0 += i1;
      p1 = i0;
      i1 = 32u;
      i0 = i0 >= i1;
      if (i0) {goto B47;}
      i0 = l10;
      i1 = 1u;
      i0 += i1;
      l14 = i0;
      i0 = 1u;
      i1 = p1;
      i0 <<= (i1 & 31);
      p1 = i0;
      i1 = 75913u;
      i0 &= i1;
      if (i0) {goto L50;}
    B47:;
    i0 = l11;
    i1 = 42u;
    i0 = i0 != i1;
    if (i0) {goto B56;}
    i0 = l10;
    i0 = i32_load8_s((&M0), (u64)(i0 + 1));
    i1 = 4294967248u;
    i0 += i1;
    p1 = i0;
    i1 = 9u;
    i0 = i0 > i1;
    if (i0) {goto B55;}
    i0 = l10;
    i0 = i32_load8_u((&M0), (u64)(i0 + 2));
    i1 = 36u;
    i0 = i0 != i1;
    if (i0) {goto B55;}
    i0 = p4;
    i1 = p1;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = 10u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l10;
    i1 = 3u;
    i0 += i1;
    l18 = i0;
    i0 = 1u;
    l8 = i0;
    i0 = p3;
    i1 = l10;
    i2 = 1u;
    i1 += i2;
    i1 = i32_load8_s((&M0), (u64)(i1));
    i2 = 4u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = 4294966528u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l15 = i0;
    i1 = 4294967295u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B51;}
    goto B54;
    B56:;
    i0 = 0u;
    l15 = i0;
    i0 = l11;
    i1 = 4294967248u;
    i0 += i1;
    l14 = i0;
    i1 = 9u;
    i0 = i0 > i1;
    if (i0) {goto B53;}
    i0 = 0u;
    p1 = i0;
    L57: vm_checktime();
      i0 = 4294967295u;
      l15 = i0;
      i0 = p1;
      i1 = 214748364u;
      i0 = i0 > i1;
      if (i0) {goto B58;}
      i0 = 4294967295u;
      i1 = p1;
      i2 = 10u;
      i1 *= i2;
      p1 = i1;
      i2 = l14;
      i1 += i2;
      i2 = l14;
      i3 = 2147483647u;
      i4 = p1;
      i3 -= i4;
      i2 = (u32)((s32)i2 > (s32)i3);
      i0 = i2 ? i0 : i1;
      l15 = i0;
      B58:;
      i0 = l10;
      i0 = i32_load8_s((&M0), (u64)(i0 + 1));
      l14 = i0;
      i0 = l10;
      i1 = 1u;
      i0 += i1;
      l18 = i0;
      l10 = i0;
      i0 = l15;
      p1 = i0;
      i0 = l14;
      i1 = 4294967248u;
      i0 += i1;
      l14 = i0;
      i1 = 10u;
      i0 = i0 < i1;
      if (i0) {goto L57;}
    i0 = l15;
    i1 = 0u;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B51;}
    goto B2;
    B55:;
    i0 = l8;
    if (i0) {goto B17;}
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    l18 = i0;
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B52;}
    i0 = p2;
    i1 = p2;
    i1 = i32_load((&M0), (u64)(i1));
    l10 = i1;
    i2 = 4u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = 0u;
    l8 = i0;
    i0 = l10;
    i0 = i32_load((&M0), (u64)(i0));
    l15 = i0;
    i1 = 4294967295u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B51;}
    B54:;
    i0 = 0u;
    i1 = l15;
    i0 -= i1;
    l15 = i0;
    i0 = l17;
    i1 = 8192u;
    i0 |= i1;
    l17 = i0;
    goto B51;
    B53:;
    i0 = l10;
    l18 = i0;
    goto B51;
    B52:;
    i0 = 0u;
    l8 = i0;
    i0 = 0u;
    l15 = i0;
    B51:;
    i0 = 0u;
    l10 = i0;
    i0 = 4294967295u;
    l11 = i0;
    i0 = l18;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 46u;
    i0 = i0 != i1;
    if (i0) {goto B65;}
    i0 = l18;
    i0 = i32_load8_s((&M0), (u64)(i0 + 1));
    l14 = i0;
    i1 = 42u;
    i0 = i0 != i1;
    if (i0) {goto B64;}
    i0 = l18;
    i0 = i32_load8_s((&M0), (u64)(i0 + 2));
    i1 = 4294967248u;
    i0 += i1;
    p1 = i0;
    i1 = 9u;
    i0 = i0 > i1;
    if (i0) {goto B63;}
    i0 = l18;
    i0 = i32_load8_u((&M0), (u64)(i0 + 3));
    i1 = 36u;
    i0 = i0 != i1;
    if (i0) {goto B63;}
    i0 = p4;
    i1 = p1;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = 10u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l18;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p3;
    i1 = l18;
    i2 = 2u;
    i1 += i2;
    i1 = i32_load8_s((&M0), (u64)(i1));
    i2 = 4u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = 4294966528u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l11 = i0;
    goto B60;
    B65:;
    i0 = l18;
    p1 = i0;
    i0 = 0u;
    l19 = i0;
    goto B59;
    B64:;
    i0 = l18;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i0 = l14;
    i1 = 4294967248u;
    i0 += i1;
    l20 = i0;
    i1 = 9u;
    i0 = i0 > i1;
    if (i0) {goto B62;}
    i0 = 0u;
    l18 = i0;
    i0 = p1;
    l14 = i0;
    L66: vm_checktime();
      i0 = 4294967295u;
      l11 = i0;
      i0 = l18;
      i1 = 214748364u;
      i0 = i0 > i1;
      if (i0) {goto B67;}
      i0 = 4294967295u;
      i1 = l18;
      i2 = 10u;
      i1 *= i2;
      p1 = i1;
      i2 = l20;
      i1 += i2;
      i2 = l20;
      i3 = 2147483647u;
      i4 = p1;
      i3 -= i4;
      i2 = (u32)((s32)i2 > (s32)i3);
      i0 = i2 ? i0 : i1;
      l11 = i0;
      B67:;
      i0 = 1u;
      l19 = i0;
      i0 = l14;
      i0 = i32_load8_s((&M0), (u64)(i0 + 1));
      l20 = i0;
      i0 = l14;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      l14 = i0;
      i0 = l11;
      l18 = i0;
      i0 = l20;
      i1 = 4294967248u;
      i0 += i1;
      l20 = i0;
      i1 = 10u;
      i0 = i0 < i1;
      if (i0) {goto L66;}
      goto B59;
    B63:;
    i0 = l8;
    if (i0) {goto B17;}
    i0 = l18;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B61;}
    i0 = p2;
    i1 = p2;
    i1 = i32_load((&M0), (u64)(i1));
    l14 = i1;
    i2 = 4u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l14;
    i0 = i32_load((&M0), (u64)(i0));
    l11 = i0;
    goto B60;
    B62:;
    i0 = 1u;
    l19 = i0;
    i0 = 0u;
    l11 = i0;
    goto B59;
    B61:;
    i0 = 0u;
    l11 = i0;
    B60:;
    i0 = l11;
    i1 = 31u;
    i0 >>= (i1 & 31);
    i1 = 1u;
    i0 ^= i1;
    l19 = i0;
    B59:;
    L68: vm_checktime();
      i0 = l10;
      l14 = i0;
      i0 = p1;
      i0 = i32_load8_s((&M0), (u64)(i0));
      i1 = 4294967231u;
      i0 += i1;
      l10 = i0;
      i1 = 57u;
      i0 = i0 > i1;
      if (i0) {goto B17;}
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i0 = l14;
      i1 = 58u;
      i0 *= i1;
      i1 = l10;
      i0 += i1;
      i1 = 12128u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l10 = i0;
      i1 = 4294967295u;
      i0 += i1;
      i1 = 8u;
      i0 = i0 < i1;
      if (i0) {goto L68;}
    i0 = l10;
    i0 = !(i0);
    if (i0) {goto B17;}
    i0 = l10;
    i1 = 27u;
    i0 = i0 != i1;
    if (i0) {goto B71;}
    i0 = l16;
    i1 = 4294967295u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B17;}
    i0 = 0u;
    l10 = i0;
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto L3;}
    goto B70;
    B71:;
    i0 = l16;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B72;}
    i0 = p4;
    i1 = l16;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = l10;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = p3;
    i2 = l16;
    i3 = 4u;
    i2 <<= (i3 & 31);
    i1 += i2;
    l10 = i1;
    i2 = 8u;
    i1 += i2;
    j1 = i64_load((&M0), (u64)(i1));
    i64_store((&M0), (u64)(i0 + 424), j1);
    i0 = l0;
    i1 = l10;
    j1 = i64_load((&M0), (u64)(i1));
    i64_store((&M0), (u64)(i0 + 416), j1);
    i0 = 0u;
    l10 = i0;
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto L3;}
    goto B70;
    B72:;
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B69;}
    i0 = l0;
    i1 = 416u;
    i0 += i1;
    i1 = l10;
    i2 = p2;
    pop_arg(i0, i1, i2);
    B70:;
    i0 = l17;
    i1 = 4294901759u;
    i0 &= i1;
    l18 = i0;
    i1 = l17;
    i2 = l17;
    i3 = 8192u;
    i2 &= i3;
    i0 = i2 ? i0 : i1;
    l16 = i0;
    i0 = 0u;
    l21 = i0;
    i0 = 9804u;
    l22 = i0;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l10 = i0;
    i1 = 4294967263u;
    i0 &= i1;
    i1 = l10;
    i2 = l10;
    i3 = 15u;
    i2 &= i3;
    i3 = 3u;
    i2 = i2 == i3;
    i0 = i2 ? i0 : i1;
    i1 = l10;
    i2 = l14;
    i0 = i2 ? i0 : i1;
    l23 = i0;
    i1 = 4294967231u;
    i0 += i1;
    l10 = i0;
    i1 = 55u;
    i0 = i0 > i1;
    if (i0) {goto B8;}
    i0 = l7;
    l17 = i0;
    i0 = l10;
    switch (i0) {
      case 0: goto B100;
      case 1: goto B7;
      case 2: goto B97;
      case 3: goto B7;
      case 4: goto B100;
      case 5: goto B100;
      case 6: goto B100;
      case 7: goto B7;
      case 8: goto B7;
      case 9: goto B7;
      case 10: goto B7;
      case 11: goto B7;
      case 12: goto B7;
      case 13: goto B7;
      case 14: goto B7;
      case 15: goto B7;
      case 16: goto B7;
      case 17: goto B7;
      case 18: goto B96;
      case 19: goto B7;
      case 20: goto B7;
      case 21: goto B7;
      case 22: goto B7;
      case 23: goto B89;
      case 24: goto B7;
      case 25: goto B7;
      case 26: goto B7;
      case 27: goto B7;
      case 28: goto B7;
      case 29: goto B7;
      case 30: goto B7;
      case 31: goto B7;
      case 32: goto B100;
      case 33: goto B7;
      case 34: goto B94;
      case 35: goto B99;
      case 36: goto B100;
      case 37: goto B100;
      case 38: goto B100;
      case 39: goto B7;
      case 40: goto B99;
      case 41: goto B7;
      case 42: goto B7;
      case 43: goto B7;
      case 44: goto B93;
      case 45: goto B92;
      case 46: goto B91;
      case 47: goto B90;
      case 48: goto B7;
      case 49: goto B7;
      case 50: goto B88;
      case 51: goto B7;
      case 52: goto B86;
      case 53: goto B7;
      case 54: goto B7;
      case 55: goto B89;
      default: goto B100;
    }
    B100:;
    i0 = l11;
    i1 = 4294967295u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B101;}
    i0 = l19;
    if (i0) {goto B2;}
    B101:;
    i0 = l0;
    j0 = i64_load((&M0), (u64)(i0 + 424));
    l24 = j0;
    i0 = l0;
    j0 = i64_load((&M0), (u64)(i0 + 416));
    l25 = j0;
    i0 = l0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0 + 748), i1);
    j0 = l25;
    j1 = l24;
    i0 = __signbitl(j0, j1);
    i0 = !(i0);
    if (i0) {goto B102;}
    i0 = 1u;
    l26 = i0;
    i0 = 12608u;
    l27 = i0;
    j0 = l25;
    j1 = l24;
    j2 = 9223372036854775808ull;
    j1 ^= j2;
    l24 = j1;
    i0 = ____fpclassifyl(j0, j1);
    i1 = 1u;
    i0 = (u32)((s32)i0 <= (s32)i1);
    if (i0) {goto B6;}
    goto B5;
    B102:;
    i0 = l16;
    i1 = 2048u;
    i0 &= i1;
    if (i0) {goto B98;}
    i0 = 12614u;
    i1 = 12609u;
    i2 = l16;
    i3 = 1u;
    i2 &= i3;
    l26 = i2;
    i0 = i2 ? i0 : i1;
    l27 = i0;
    j0 = l25;
    j1 = l24;
    i0 = ____fpclassifyl(j0, j1);
    i1 = 1u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B5;}
    goto B6;
    B99:;
    i0 = l0;
    j0 = i64_load((&M0), (u64)(i0 + 416));
    l24 = j0;
    j1 = 18446744073709551615ull;
    i0 = (u64)((s64)j0 <= (s64)j1);
    if (i0) {goto B85;}
    i0 = l16;
    i1 = 2048u;
    i0 &= i1;
    if (i0) {goto B83;}
    i0 = 9806u;
    i1 = 9804u;
    i2 = l16;
    i3 = 1u;
    i2 &= i3;
    l21 = i2;
    i0 = i2 ? i0 : i1;
    l22 = i0;
    j0 = l24;
    j1 = 4294967296ull;
    i0 = j0 >= j1;
    if (i0) {goto B13;}
    goto B14;
    B98:;
    i0 = 1u;
    l26 = i0;
    i0 = 12611u;
    l27 = i0;
    j0 = l25;
    j1 = l24;
    i0 = ____fpclassifyl(j0, j1);
    i1 = 1u;
    i0 = (u32)((s32)i0 <= (s32)i1);
    if (i0) {goto B6;}
    goto B5;
    B97:;
    i0 = l0;
    i1 = 344u;
    i0 += i1;
    i1 = 4u;
    i0 += i1;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = l0;
    j1 = i64_load((&M0), (u64)(i1 + 416));
    i64_store32((&M0), (u64)(i0 + 344), j1);
    i0 = l0;
    i1 = l0;
    i2 = 344u;
    i1 += i2;
    i32_store((&M0), (u64)(i0 + 416), i1);
    i0 = 4294967295u;
    l11 = i0;
    i0 = l0;
    i1 = 344u;
    i0 += i1;
    l12 = i0;
    goto B95;
    B96:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 416));
    l12 = i0;
    i0 = l11;
    i0 = !(i0);
    if (i0) {goto B79;}
    B95:;
    i0 = 0u;
    l10 = i0;
    i0 = l12;
    l13 = i0;
    L103: vm_checktime();
      i0 = l13;
      i0 = i32_load((&M0), (u64)(i0));
      l14 = i0;
      i0 = !(i0);
      if (i0) {goto B81;}
      i0 = l0;
      i1 = 340u;
      i0 += i1;
      i1 = l14;
      i0 = wctomb_0(i0, i1);
      l14 = i0;
      i1 = 0u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l17 = i0;
      if (i0) {goto B82;}
      i0 = l14;
      i1 = l11;
      i2 = l10;
      i1 -= i2;
      i0 = i0 > i1;
      if (i0) {goto B82;}
      i0 = l13;
      i1 = 4u;
      i0 += i1;
      l13 = i0;
      i0 = l11;
      i1 = l14;
      i2 = l10;
      i1 += i2;
      l10 = i1;
      i0 = i0 > i1;
      if (i0) {goto L103;}
      goto B81;
    B94:;
    i0 = l0;
    i1 = 352u;
    i0 += i1;
    i1 = 54u;
    i0 += i1;
    i1 = l0;
    j1 = i64_load((&M0), (u64)(i1 + 416));
    i64_store8((&M0), (u64)(i0), j1);
    i0 = 1u;
    l11 = i0;
    i0 = l6;
    l12 = i0;
    i0 = l7;
    l17 = i0;
    i0 = l18;
    l16 = i0;
    goto B7;
    B93:;
    i0 = __errno_location();
    i0 = i32_load((&M0), (u64)(i0));
    i0 = strerror_0(i0);
    l12 = i0;
    goto B87;
    B92:;
    i0 = 0u;
    l10 = i0;
    i0 = l14;
    i1 = 255u;
    i0 &= i1;
    l13 = i0;
    i1 = 7u;
    i0 = i0 > i1;
    if (i0) {goto L3;}
    i0 = l13;
    switch (i0) {
      case 0: goto B104;
      case 1: goto B78;
      case 2: goto B77;
      case 3: goto B76;
      case 4: goto B75;
      case 5: goto L3;
      case 6: goto B74;
      case 7: goto B73;
      default: goto B104;
    }
    B104:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 416));
    i1 = l9;
    i32_store((&M0), (u64)(i0), i1);
    goto L3;
    B91:;
    i0 = l7;
    l12 = i0;
    i0 = l0;
    j0 = i64_load((&M0), (u64)(i0 + 416));
    l24 = j0;
    i0 = !(j0);
    if (i0) {goto B105;}
    i0 = l7;
    l12 = i0;
    L106: vm_checktime();
      i0 = l12;
      i1 = 4294967295u;
      i0 += i1;
      l12 = i0;
      j1 = l24;
      i1 = (u32)(j1);
      i2 = 7u;
      i1 &= i2;
      i2 = 48u;
      i1 |= i2;
      i32_store8((&M0), (u64)(i0), i1);
      j0 = l24;
      j1 = 3ull;
      j0 >>= (j1 & 63);
      l24 = j0;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto L106;}
    B105:;
    i0 = l16;
    i1 = 8u;
    i0 &= i1;
    if (i0) {goto B80;}
    i0 = 0u;
    l21 = i0;
    i0 = 9804u;
    l22 = i0;
    i0 = l19;
    if (i0) {goto B10;}
    goto B9;
    B90:;
    i0 = l11;
    i1 = 8u;
    i2 = l11;
    i3 = 8u;
    i2 = i2 > i3;
    i0 = i2 ? i0 : i1;
    l11 = i0;
    i0 = l16;
    i1 = 8u;
    i0 |= i1;
    l16 = i0;
    i0 = 120u;
    l23 = i0;
    B89:;
    i0 = 0u;
    l21 = i0;
    i0 = 9804u;
    l22 = i0;
    i0 = l0;
    j0 = i64_load((&M0), (u64)(i0 + 416));
    l24 = j0;
    i0 = !(j0);
    if (i0) {goto B107;}
    i0 = l23;
    i1 = 32u;
    i0 &= i1;
    l10 = i0;
    i0 = l7;
    l12 = i0;
    L108: vm_checktime();
      i0 = l12;
      i1 = 4294967295u;
      i0 += i1;
      l12 = i0;
      j1 = l24;
      i1 = (u32)(j1);
      i2 = 15u;
      i1 &= i2;
      i2 = 12592u;
      i1 += i2;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i2 = l10;
      i1 |= i2;
      i32_store8((&M0), (u64)(i0), i1);
      j0 = l24;
      j1 = 4ull;
      j0 >>= (j1 & 63);
      l24 = j0;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto L108;}
    i0 = l16;
    i1 = 8u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B11;}
    i0 = l0;
    j0 = i64_load((&M0), (u64)(i0 + 416));
    i0 = !(j0);
    if (i0) {goto B11;}
    i0 = l23;
    i1 = 4u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    i1 = 9804u;
    i0 += i1;
    l22 = i0;
    i0 = 2u;
    l21 = i0;
    i0 = l19;
    if (i0) {goto B10;}
    goto B9;
    B107:;
    i0 = l7;
    l12 = i0;
    i0 = l19;
    if (i0) {goto B10;}
    goto B9;
    B88:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 416));
    l10 = i0;
    i1 = 11288u;
    i2 = l10;
    i0 = i2 ? i0 : i1;
    l12 = i0;
    B87:;
    i0 = 0u;
    l21 = i0;
    i0 = l12;
    i1 = l12;
    i2 = 2147483647u;
    i3 = l11;
    i4 = l11;
    i5 = 0u;
    i4 = (u32)((s32)i4 < (s32)i5);
    i2 = i4 ? i2 : i3;
    i1 = _strnlen(i1, i2);
    l10 = i1;
    i0 += i1;
    l17 = i0;
    i0 = l11;
    i1 = 4294967295u;
    i0 = (u32)((s32)i0 <= (s32)i1);
    if (i0) {goto B84;}
    i0 = l18;
    l16 = i0;
    i0 = l10;
    l11 = i0;
    goto B7;
    B86:;
    i0 = 0u;
    l21 = i0;
    i0 = 9804u;
    l22 = i0;
    i0 = l0;
    j0 = i64_load((&M0), (u64)(i0 + 416));
    l24 = j0;
    j1 = 4294967296ull;
    i0 = j0 < j1;
    if (i0) {goto B14;}
    goto B13;
    B85:;
    i0 = l0;
    j1 = 0ull;
    j2 = l24;
    j1 -= j2;
    l24 = j1;
    i64_store((&M0), (u64)(i0 + 416), j1);
    i0 = 1u;
    l21 = i0;
    i0 = 9804u;
    l22 = i0;
    j0 = l24;
    j1 = 4294967296ull;
    i0 = j0 >= j1;
    if (i0) {goto B13;}
    goto B14;
    B84:;
    i0 = l18;
    l16 = i0;
    i0 = l10;
    l11 = i0;
    i0 = l17;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto B7;}
    goto B2;
    B83:;
    i0 = 1u;
    l21 = i0;
    i0 = 9805u;
    l22 = i0;
    j0 = l24;
    j1 = 4294967296ull;
    i0 = j0 < j1;
    if (i0) {goto B14;}
    goto B13;
    B82:;
    i0 = l17;
    if (i0) {goto B1;}
    B81:;
    i0 = l10;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B2;}
    i0 = l16;
    i1 = 73728u;
    i0 &= i1;
    l18 = i0;
    if (i0) {goto B15;}
    goto B16;
    B80:;
    i0 = 9804u;
    i1 = 9809u;
    i2 = l11;
    i3 = l7;
    i4 = l12;
    i3 -= i4;
    l10 = i3;
    i2 = (u32)((s32)i2 > (s32)i3);
    i0 = i2 ? i0 : i1;
    l22 = i0;
    i0 = l11;
    i1 = l10;
    i0 = (u32)((s32)i0 <= (s32)i1);
    l21 = i0;
    goto B11;
    B79:;
    i0 = 0u;
    l10 = i0;
    i0 = l16;
    i1 = 73728u;
    i0 &= i1;
    l18 = i0;
    i0 = !(i0);
    if (i0) {goto B16;}
    goto B15;
    B78:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 416));
    i1 = l9;
    i32_store((&M0), (u64)(i0), i1);
    goto L3;
    B77:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 416));
    i1 = l9;
    j1 = (u64)(s64)(s32)(i1);
    i64_store((&M0), (u64)(i0), j1);
    goto L3;
    B76:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 416));
    i1 = l9;
    i32_store16((&M0), (u64)(i0), i1);
    goto L3;
    B75:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 416));
    i1 = l9;
    i32_store8((&M0), (u64)(i0), i1);
    goto L3;
    B74:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 416));
    i1 = l9;
    i32_store((&M0), (u64)(i0), i1);
    goto L3;
    B73:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 416));
    i1 = l9;
    j1 = (u64)(s64)(s32)(i1);
    i64_store((&M0), (u64)(i0), j1);
    goto L3;
    B69:;
    i0 = l0;
    i1 = 8128u;
    i0 += i1;
    g0 = i0;
    i0 = 0u;
    goto Bfunc;
    B17:;
    i0 = __errno_location();
    i1 = 22u;
    i32_store((&M0), (u64)(i0), i1);
    goto B1;
    B16:;
    i0 = l15;
    i1 = l10;
    i0 = (u32)((s32)i0 <= (s32)i1);
    if (i0) {goto B15;}
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = 32u;
    i2 = l15;
    i3 = l10;
    i2 -= i3;
    l20 = i2;
    i3 = 256u;
    i4 = l20;
    i5 = 256u;
    i4 = i4 < i5;
    l13 = i4;
    i2 = i4 ? i2 : i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l11 = i0;
    i1 = 32u;
    i0 &= i1;
    l14 = i0;
    i0 = l13;
    if (i0) {goto B110;}
    i0 = l14;
    i0 = !(i0);
    l13 = i0;
    i0 = l20;
    l14 = i0;
    L111: vm_checktime();
      i0 = l13;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B112;}
      i0 = l0;
      i1 = 432u;
      i0 += i1;
      i1 = 256u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l11 = i0;
      B112:;
      i0 = l11;
      i1 = 32u;
      i0 &= i1;
      l17 = i0;
      i0 = !(i0);
      l13 = i0;
      i0 = l14;
      i1 = 4294967040u;
      i0 += i1;
      l14 = i0;
      i1 = 255u;
      i0 = i0 > i1;
      if (i0) {goto L111;}
    i0 = l17;
    if (i0) {goto B15;}
    i0 = l20;
    i1 = 255u;
    i0 &= i1;
    l20 = i0;
    goto B109;
    B110:;
    i0 = l14;
    if (i0) {goto B15;}
    B109:;
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = l20;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B15:;
    i0 = l10;
    i0 = !(i0);
    if (i0) {goto B113;}
    i0 = 0u;
    l13 = i0;
    L114: vm_checktime();
      i0 = l12;
      i0 = i32_load((&M0), (u64)(i0));
      l14 = i0;
      i0 = !(i0);
      if (i0) {goto B113;}
      i0 = l0;
      i1 = 340u;
      i0 += i1;
      i1 = l14;
      i0 = wctomb_0(i0, i1);
      l14 = i0;
      i1 = l13;
      i0 += i1;
      l13 = i0;
      i1 = l10;
      i0 = i0 > i1;
      if (i0) {goto B113;}
      i0 = p0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i1 = 32u;
      i0 &= i1;
      if (i0) {goto B115;}
      i0 = l0;
      i1 = 340u;
      i0 += i1;
      i1 = l14;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      B115:;
      i0 = l12;
      i1 = 4u;
      i0 += i1;
      l12 = i0;
      i0 = l13;
      i1 = l10;
      i0 = i0 < i1;
      if (i0) {goto L114;}
    B113:;
    i0 = l18;
    i1 = 8192u;
    i0 = i0 != i1;
    if (i0) {goto B116;}
    i0 = l15;
    i1 = l10;
    i0 = (u32)((s32)i0 <= (s32)i1);
    if (i0) {goto B116;}
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = 32u;
    i2 = l15;
    i3 = l10;
    i2 -= i3;
    l17 = i2;
    i3 = 256u;
    i4 = l17;
    i5 = 256u;
    i4 = i4 < i5;
    l13 = i4;
    i2 = i4 ? i2 : i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l12 = i0;
    i1 = 32u;
    i0 &= i1;
    l14 = i0;
    i0 = l13;
    if (i0) {goto B118;}
    i0 = l14;
    i0 = !(i0);
    l13 = i0;
    i0 = l17;
    l14 = i0;
    L119: vm_checktime();
      i0 = l13;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B120;}
      i0 = l0;
      i1 = 432u;
      i0 += i1;
      i1 = 256u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l12 = i0;
      B120:;
      i0 = l12;
      i1 = 32u;
      i0 &= i1;
      l11 = i0;
      i0 = !(i0);
      l13 = i0;
      i0 = l14;
      i1 = 4294967040u;
      i0 += i1;
      l14 = i0;
      i1 = 255u;
      i0 = i0 > i1;
      if (i0) {goto L119;}
    i0 = l11;
    if (i0) {goto B116;}
    i0 = l17;
    i1 = 255u;
    i0 &= i1;
    l17 = i0;
    goto B117;
    B118:;
    i0 = l14;
    if (i0) {goto B116;}
    B117:;
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = l17;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B116:;
    i0 = l15;
    i1 = l10;
    i2 = l15;
    i3 = l10;
    i2 = (u32)((s32)i2 > (s32)i3);
    i0 = i2 ? i0 : i1;
    l10 = i0;
    goto L3;
    B14:;
    j0 = l24;
    l25 = j0;
    i0 = l7;
    l12 = i0;
    goto B12;
    B13:;
    i0 = l7;
    l12 = i0;
    L121: vm_checktime();
      i0 = l12;
      i1 = 4294967295u;
      i0 += i1;
      l12 = i0;
      j1 = l24;
      j2 = l24;
      j3 = 10ull;
      j2 = DIV_U(j2, j3);
      l25 = j2;
      j3 = 10ull;
      j2 *= j3;
      j1 -= j2;
      i1 = (u32)(j1);
      i2 = 48u;
      i1 |= i2;
      i32_store8((&M0), (u64)(i0), i1);
      j0 = l24;
      j1 = 42949672959ull;
      i0 = j0 > j1;
      l10 = i0;
      j0 = l25;
      l24 = j0;
      i0 = l10;
      if (i0) {goto L121;}
    B12:;
    j0 = l25;
    i0 = (u32)(j0);
    l10 = i0;
    i0 = !(i0);
    if (i0) {goto B11;}
    L122: vm_checktime();
      i0 = l12;
      i1 = 4294967295u;
      i0 += i1;
      l12 = i0;
      i1 = l10;
      i2 = l10;
      i3 = 10u;
      i2 = DIV_U(i2, i3);
      l14 = i2;
      i3 = 10u;
      i2 *= i3;
      i1 -= i2;
      i2 = 48u;
      i1 |= i2;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = l10;
      i1 = 9u;
      i0 = i0 > i1;
      l17 = i0;
      i0 = l14;
      l10 = i0;
      i0 = l17;
      if (i0) {goto L122;}
    B11:;
    i0 = l19;
    i0 = !(i0);
    if (i0) {goto B9;}
    B10:;
    i0 = l11;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B2;}
    B9:;
    i0 = l16;
    i1 = 4294901759u;
    i0 &= i1;
    i1 = l16;
    i2 = l11;
    i3 = 4294967295u;
    i2 = (u32)((s32)i2 > (s32)i3);
    i0 = i2 ? i0 : i1;
    l16 = i0;
    i0 = l0;
    j0 = i64_load((&M0), (u64)(i0 + 416));
    l24 = j0;
    i0 = l11;
    if (i0) {goto B123;}
    j0 = l24;
    i0 = !(j0);
    i0 = !(i0);
    if (i0) {goto B123;}
    i0 = l7;
    l12 = i0;
    i0 = l7;
    l17 = i0;
    i0 = 0u;
    l11 = i0;
    goto B7;
    B123:;
    i0 = l11;
    i1 = l7;
    i2 = l12;
    i1 -= i2;
    j2 = l24;
    i2 = !(j2);
    i1 += i2;
    l10 = i1;
    i2 = l11;
    i3 = l10;
    i2 = (u32)((s32)i2 > (s32)i3);
    i0 = i2 ? i0 : i1;
    l11 = i0;
    B8:;
    i0 = l7;
    l17 = i0;
    B7:;
    i0 = l17;
    i1 = l12;
    i0 -= i1;
    l19 = i0;
    i1 = l11;
    i2 = l11;
    i3 = l19;
    i2 = (u32)((s32)i2 < (s32)i3);
    i0 = i2 ? i0 : i1;
    l23 = i0;
    i1 = 2147483647u;
    i2 = l21;
    i1 -= i2;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B2;}
    i0 = l21;
    i1 = l23;
    i0 += i1;
    l20 = i0;
    i1 = l15;
    i2 = l15;
    i3 = l20;
    i2 = (u32)((s32)i2 < (s32)i3);
    i0 = i2 ? i0 : i1;
    l10 = i0;
    i1 = l13;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B2;}
    i0 = l16;
    i1 = 73728u;
    i0 &= i1;
    l16 = i0;
    if (i0) {goto B124;}
    i0 = l20;
    i1 = l15;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B124;}
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = 32u;
    i2 = l10;
    i3 = l20;
    i2 -= i3;
    l26 = i2;
    i3 = 256u;
    i4 = l26;
    i5 = 256u;
    i4 = i4 < i5;
    l13 = i4;
    i2 = i4 ? i2 : i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l17 = i0;
    i1 = 32u;
    i0 &= i1;
    l14 = i0;
    i0 = l13;
    if (i0) {goto B126;}
    i0 = l14;
    i0 = !(i0);
    l13 = i0;
    i0 = l26;
    l14 = i0;
    L127: vm_checktime();
      i0 = l13;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B128;}
      i0 = l0;
      i1 = 432u;
      i0 += i1;
      i1 = 256u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l17 = i0;
      B128:;
      i0 = l17;
      i1 = 32u;
      i0 &= i1;
      l18 = i0;
      i0 = !(i0);
      l13 = i0;
      i0 = l14;
      i1 = 4294967040u;
      i0 += i1;
      l14 = i0;
      i1 = 255u;
      i0 = i0 > i1;
      if (i0) {goto L127;}
    i0 = l18;
    if (i0) {goto B124;}
    i0 = l26;
    i1 = 255u;
    i0 &= i1;
    l26 = i0;
    goto B125;
    B126:;
    i0 = l14;
    if (i0) {goto B124;}
    B125:;
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = l26;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B124:;
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 32u;
    i0 &= i1;
    if (i0) {goto B129;}
    i0 = l22;
    i1 = l21;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B129:;
    i0 = l16;
    i1 = 65536u;
    i0 = i0 != i1;
    if (i0) {goto B130;}
    i0 = l20;
    i1 = l15;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B130;}
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = 48u;
    i2 = l10;
    i3 = l20;
    i2 -= i3;
    l21 = i2;
    i3 = 256u;
    i4 = l21;
    i5 = 256u;
    i4 = i4 < i5;
    l13 = i4;
    i2 = i4 ? i2 : i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l17 = i0;
    i1 = 32u;
    i0 &= i1;
    l14 = i0;
    i0 = l13;
    if (i0) {goto B132;}
    i0 = l14;
    i0 = !(i0);
    l13 = i0;
    i0 = l21;
    l14 = i0;
    L133: vm_checktime();
      i0 = l13;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B134;}
      i0 = l0;
      i1 = 432u;
      i0 += i1;
      i1 = 256u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l17 = i0;
      B134:;
      i0 = l17;
      i1 = 32u;
      i0 &= i1;
      l18 = i0;
      i0 = !(i0);
      l13 = i0;
      i0 = l14;
      i1 = 4294967040u;
      i0 += i1;
      l14 = i0;
      i1 = 255u;
      i0 = i0 > i1;
      if (i0) {goto L133;}
    i0 = l18;
    if (i0) {goto B130;}
    i0 = l21;
    i1 = 255u;
    i0 &= i1;
    l21 = i0;
    goto B131;
    B132:;
    i0 = l14;
    if (i0) {goto B130;}
    B131:;
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = l21;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B130:;
    i0 = l19;
    i1 = l11;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B135;}
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = 48u;
    i2 = l23;
    i3 = l19;
    i2 -= i3;
    l18 = i2;
    i3 = 256u;
    i4 = l18;
    i5 = 256u;
    i4 = i4 < i5;
    l13 = i4;
    i2 = i4 ? i2 : i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l11 = i0;
    i1 = 32u;
    i0 &= i1;
    l14 = i0;
    i0 = l13;
    if (i0) {goto B137;}
    i0 = l14;
    i0 = !(i0);
    l13 = i0;
    i0 = l18;
    l14 = i0;
    L138: vm_checktime();
      i0 = l13;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B139;}
      i0 = l0;
      i1 = 432u;
      i0 += i1;
      i1 = 256u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l11 = i0;
      B139:;
      i0 = l11;
      i1 = 32u;
      i0 &= i1;
      l17 = i0;
      i0 = !(i0);
      l13 = i0;
      i0 = l14;
      i1 = 4294967040u;
      i0 += i1;
      l14 = i0;
      i1 = 255u;
      i0 = i0 > i1;
      if (i0) {goto L138;}
    i0 = l17;
    if (i0) {goto B135;}
    i0 = l18;
    i1 = 255u;
    i0 &= i1;
    l18 = i0;
    goto B136;
    B137:;
    i0 = l14;
    if (i0) {goto B135;}
    B136:;
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = l18;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B135:;
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 32u;
    i0 &= i1;
    if (i0) {goto B140;}
    i0 = l12;
    i1 = l19;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B140:;
    i0 = l16;
    i1 = 8192u;
    i0 = i0 != i1;
    if (i0) {goto L3;}
    i0 = l20;
    i1 = l15;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto L3;}
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = 32u;
    i2 = l10;
    i3 = l20;
    i2 -= i3;
    l11 = i2;
    i3 = 256u;
    i4 = l11;
    i5 = 256u;
    i4 = i4 < i5;
    l13 = i4;
    i2 = i4 ? i2 : i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l12 = i0;
    i1 = 32u;
    i0 &= i1;
    l14 = i0;
    i0 = l13;
    if (i0) {goto B142;}
    i0 = l14;
    i0 = !(i0);
    l13 = i0;
    i0 = l11;
    l14 = i0;
    L143: vm_checktime();
      i0 = l13;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B144;}
      i0 = l0;
      i1 = 432u;
      i0 += i1;
      i1 = 256u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l12 = i0;
      B144:;
      i0 = l12;
      i1 = 32u;
      i0 &= i1;
      l15 = i0;
      i0 = !(i0);
      l13 = i0;
      i0 = l14;
      i1 = 4294967040u;
      i0 += i1;
      l14 = i0;
      i1 = 255u;
      i0 = i0 > i1;
      if (i0) {goto L143;}
    i0 = l15;
    if (i0) {goto L3;}
    i0 = l11;
    i1 = 255u;
    i0 &= i1;
    l11 = i0;
    goto B141;
    B142:;
    i0 = l14;
    if (i0) {goto L3;}
    B141:;
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = l11;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    goto L3;
    B6:;
    j0 = l25;
    j1 = l24;
    j2 = l25;
    j3 = l24;
    i0 = (*Z_envZ___unordtf2Z_ijjjj)(j0, j1, j2, j3);
    l18 = i0;
    i0 = l26;
    i1 = 3u;
    i0 += i1;
    l11 = i0;
    i0 = l16;
    i1 = 8192u;
    i0 &= i1;
    if (i0) {goto B145;}
    i0 = l15;
    i1 = l11;
    i0 = (u32)((s32)i0 <= (s32)i1);
    if (i0) {goto B145;}
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = 32u;
    i2 = l15;
    i3 = l11;
    i2 -= i3;
    l17 = i2;
    i3 = 256u;
    i4 = l17;
    i5 = 256u;
    i4 = i4 < i5;
    l10 = i4;
    i2 = i4 ? i2 : i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l14 = i0;
    i1 = 32u;
    i0 &= i1;
    l13 = i0;
    i0 = l10;
    if (i0) {goto B147;}
    i0 = l13;
    i0 = !(i0);
    l10 = i0;
    i0 = l17;
    l13 = i0;
    L148: vm_checktime();
      i0 = l10;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B149;}
      i0 = l0;
      i1 = 432u;
      i0 += i1;
      i1 = 256u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l14 = i0;
      B149:;
      i0 = l14;
      i1 = 32u;
      i0 &= i1;
      l12 = i0;
      i0 = !(i0);
      l10 = i0;
      i0 = l13;
      i1 = 4294967040u;
      i0 += i1;
      l13 = i0;
      i1 = 255u;
      i0 = i0 > i1;
      if (i0) {goto L148;}
    i0 = l12;
    if (i0) {goto B145;}
    i0 = l17;
    i1 = 255u;
    i0 &= i1;
    l17 = i0;
    goto B146;
    B147:;
    i0 = l13;
    if (i0) {goto B145;}
    B146:;
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = l17;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B145:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l10 = i0;
    i1 = 32u;
    i0 &= i1;
    if (i0) {goto B154;}
    i0 = l27;
    i1 = l26;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 32u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B153;}
    goto B152;
    B154:;
    i0 = l10;
    i1 = 32u;
    i0 &= i1;
    if (i0) {goto B152;}
    B153:;
    i0 = 14805u;
    i1 = 15566u;
    i2 = l23;
    i3 = 32u;
    i2 &= i3;
    i3 = 5u;
    i2 >>= (i3 & 31);
    l10 = i2;
    i0 = i2 ? i0 : i1;
    i1 = 13409u;
    i2 = 14100u;
    i3 = l10;
    i1 = i3 ? i1 : i2;
    i2 = l18;
    i0 = i2 ? i0 : i1;
    i1 = 3u;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    i0 = l16;
    i1 = 73728u;
    i0 &= i1;
    i1 = 8192u;
    i0 = i0 != i1;
    if (i0) {goto B150;}
    goto B151;
    B152:;
    i0 = l16;
    i1 = 73728u;
    i0 &= i1;
    i1 = 8192u;
    i0 = i0 != i1;
    if (i0) {goto B150;}
    B151:;
    i0 = l15;
    i1 = l11;
    i0 = (u32)((s32)i0 <= (s32)i1);
    if (i0) {goto B150;}
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = 32u;
    i2 = l15;
    i3 = l11;
    i2 -= i3;
    l17 = i2;
    i3 = 256u;
    i4 = l17;
    i5 = 256u;
    i4 = i4 < i5;
    l10 = i4;
    i2 = i4 ? i2 : i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l14 = i0;
    i1 = 32u;
    i0 &= i1;
    l13 = i0;
    i0 = l10;
    if (i0) {goto B156;}
    i0 = l13;
    i0 = !(i0);
    l10 = i0;
    i0 = l17;
    l13 = i0;
    L157: vm_checktime();
      i0 = l10;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B158;}
      i0 = l0;
      i1 = 432u;
      i0 += i1;
      i1 = 256u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l14 = i0;
      B158:;
      i0 = l14;
      i1 = 32u;
      i0 &= i1;
      l12 = i0;
      i0 = !(i0);
      l10 = i0;
      i0 = l13;
      i1 = 4294967040u;
      i0 += i1;
      l13 = i0;
      i1 = 255u;
      i0 = i0 > i1;
      if (i0) {goto L157;}
    i0 = l12;
    if (i0) {goto B150;}
    i0 = l17;
    i1 = 255u;
    i0 &= i1;
    l17 = i0;
    goto B155;
    B156:;
    i0 = l13;
    if (i0) {goto B150;}
    B155:;
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = l17;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B150:;
    i0 = l15;
    i1 = l11;
    i2 = l15;
    i3 = l11;
    i2 = (u32)((s32)i2 > (s32)i3);
    i0 = i2 ? i0 : i1;
    l10 = i0;
    goto B4;
    B5:;
    i0 = l0;
    i1 = 320u;
    i0 += i1;
    j1 = l25;
    j2 = l24;
    i3 = l0;
    i4 = 748u;
    i3 += i4;
    frexpl(i0, j1, j2, i3);
    i0 = l0;
    i1 = 304u;
    i0 += i1;
    i1 = l0;
    j1 = i64_load((&M0), (u64)(i1 + 320));
    l24 = j1;
    i2 = l0;
    j2 = i64_load((&M0), (u64)(i2 + 328));
    l25 = j2;
    j3 = l24;
    j4 = l25;
    (*Z_envZ___addtf3Z_vijjjj)(i0, j1, j2, j3, j4);
    i0 = l0;
    j0 = i64_load((&M0), (u64)(i0 + 304));
    l24 = j0;
    i1 = l0;
    i2 = 304u;
    i1 += i2;
    i2 = 8u;
    i1 += i2;
    j1 = i64_load((&M0), (u64)(i1));
    l25 = j1;
    j2 = 0ull;
    j3 = 0ull;
    i0 = (*Z_envZ___eqtf2Z_ijjjj)(j0, j1, j2, j3);
    i0 = !(i0);
    if (i0) {goto B159;}
    i0 = l0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 748));
    i2 = 4294967295u;
    i1 += i2;
    i32_store((&M0), (u64)(i0 + 748), i1);
    B159:;
    i0 = l23;
    i1 = 32u;
    i0 |= i1;
    l28 = i0;
    i1 = 97u;
    i0 = i0 != i1;
    if (i0) {goto B172;}
    i0 = l27;
    i1 = 9u;
    i0 += i1;
    i1 = l27;
    i2 = l23;
    i3 = 32u;
    i2 &= i3;
    l17 = i2;
    i0 = i2 ? i0 : i1;
    l21 = i0;
    i0 = l11;
    i1 = 26u;
    i0 = i0 > i1;
    if (i0) {goto B170;}
    i0 = 27u;
    i1 = l11;
    i0 -= i1;
    i0 = !(i0);
    if (i0) {goto B170;}
    i0 = l11;
    i1 = 4294967269u;
    i0 += i1;
    l10 = i0;
    j0 = 4612248968380809216ull;
    l29 = j0;
    j0 = 0ull;
    l30 = j0;
    L173: vm_checktime();
      i0 = l0;
      i1 = 208u;
      i0 += i1;
      j1 = l30;
      j2 = l29;
      j3 = 0ull;
      j4 = 4612530443357519872ull;
      (*Z_envZ___multf3Z_vijjjj)(i0, j1, j2, j3, j4);
      i0 = l0;
      i1 = 208u;
      i0 += i1;
      i1 = 8u;
      i0 += i1;
      j0 = i64_load((&M0), (u64)(i0));
      l29 = j0;
      i0 = l0;
      j0 = i64_load((&M0), (u64)(i0 + 208));
      l30 = j0;
      i0 = l10;
      i1 = 1u;
      i0 += i1;
      l10 = i0;
      if (i0) {goto L173;}
    i0 = l21;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 45u;
    i0 = i0 != i1;
    if (i0) {goto B171;}
    i0 = l0;
    i1 = 160u;
    i0 += i1;
    j1 = l24;
    j2 = l25;
    j3 = 9223372036854775808ull;
    j2 ^= j3;
    j3 = l30;
    j4 = l29;
    (*Z_envZ___subtf3Z_vijjjj)(i0, j1, j2, j3, j4);
    i0 = l0;
    i1 = 144u;
    i0 += i1;
    j1 = l30;
    j2 = l29;
    i3 = l0;
    j3 = i64_load((&M0), (u64)(i3 + 160));
    i4 = l0;
    i5 = 160u;
    i4 += i5;
    i5 = 8u;
    i4 += i5;
    j4 = i64_load((&M0), (u64)(i4));
    (*Z_envZ___addtf3Z_vijjjj)(i0, j1, j2, j3, j4);
    i0 = l0;
    i1 = 144u;
    i0 += i1;
    i1 = 8u;
    i0 += i1;
    j0 = i64_load((&M0), (u64)(i0));
    j1 = 9223372036854775808ull;
    j0 ^= j1;
    l25 = j0;
    i0 = l0;
    j0 = i64_load((&M0), (u64)(i0 + 144));
    l24 = j0;
    goto B170;
    B172:;
    i0 = l11;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    l10 = i0;
    j0 = l24;
    j1 = l25;
    j2 = 0ull;
    j3 = 0ull;
    i0 = (*Z_envZ___netf2Z_ijjjj)(j0, j1, j2, j3);
    i0 = !(i0);
    if (i0) {goto B175;}
    i0 = l0;
    i1 = 288u;
    i0 += i1;
    j1 = l24;
    j2 = l25;
    j3 = 0ull;
    j4 = 4619285842798575616ull;
    (*Z_envZ___multf3Z_vijjjj)(i0, j1, j2, j3, j4);
    i0 = l0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 748));
    i2 = 4294967268u;
    i1 += i2;
    l12 = i1;
    i32_store((&M0), (u64)(i0 + 748), i1);
    i0 = l0;
    i1 = 288u;
    i0 += i1;
    i1 = 8u;
    i0 += i1;
    j0 = i64_load((&M0), (u64)(i0));
    l25 = j0;
    i0 = l0;
    j0 = i64_load((&M0), (u64)(i0 + 288));
    l24 = j0;
    goto B174;
    B175:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 748));
    l12 = i0;
    B174:;
    i0 = 6u;
    i1 = l11;
    i2 = l10;
    i0 = i2 ? i0 : i1;
    l21 = i0;
    i0 = l0;
    i1 = 752u;
    i0 += i1;
    i1 = l4;
    i2 = l12;
    i3 = 0u;
    i2 = (u32)((s32)i2 < (s32)i3);
    i0 = i2 ? i0 : i1;
    l22 = i0;
    l14 = i0;
    L176: vm_checktime();
      i0 = l0;
      i1 = 272u;
      i0 += i1;
      j1 = l24;
      j2 = l25;
      i1 = (*Z_envZ___fixunstfsiZ_ijj)(j1, j2);
      l10 = i1;
      (*Z_envZ___floatunsitfZ_vii)(i0, i1);
      i0 = l0;
      i1 = 256u;
      i0 += i1;
      j1 = l24;
      j2 = l25;
      i3 = l0;
      j3 = i64_load((&M0), (u64)(i3 + 272));
      i4 = l0;
      i5 = 272u;
      i4 += i5;
      i5 = 8u;
      i4 += i5;
      j4 = i64_load((&M0), (u64)(i4));
      (*Z_envZ___subtf3Z_vijjjj)(i0, j1, j2, j3, j4);
      i0 = l0;
      i1 = 240u;
      i0 += i1;
      i1 = l0;
      j1 = i64_load((&M0), (u64)(i1 + 256));
      i2 = l0;
      i3 = 256u;
      i2 += i3;
      i3 = 8u;
      i2 += i3;
      j2 = i64_load((&M0), (u64)(i2));
      j3 = 0ull;
      j4 = 4619810130798575616ull;
      (*Z_envZ___multf3Z_vijjjj)(i0, j1, j2, j3, j4);
      i0 = l14;
      i1 = l10;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l14;
      i1 = 4u;
      i0 += i1;
      l14 = i0;
      i0 = l0;
      j0 = i64_load((&M0), (u64)(i0 + 240));
      l24 = j0;
      i1 = l0;
      i2 = 240u;
      i1 += i2;
      i2 = 8u;
      i1 += i2;
      j1 = i64_load((&M0), (u64)(i1));
      l25 = j1;
      j2 = 0ull;
      j3 = 0ull;
      i0 = (*Z_envZ___netf2Z_ijjjj)(j0, j1, j2, j3);
      if (i0) {goto L176;}
    i0 = l12;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B178;}
    i0 = l22;
    l13 = i0;
    L179: vm_checktime();
      i0 = l12;
      i1 = 29u;
      i2 = l12;
      i3 = 29u;
      i2 = (u32)((s32)i2 < (s32)i3);
      i0 = i2 ? i0 : i1;
      l12 = i0;
      i0 = l14;
      i1 = 4294967292u;
      i0 += i1;
      l10 = i0;
      i1 = l13;
      i0 = i0 < i1;
      if (i0) {goto B180;}
      i0 = l12;
      j0 = (u64)(i0);
      l25 = j0;
      j0 = 0ull;
      l24 = j0;
      L181: vm_checktime();
        i0 = l10;
        i1 = l10;
        j1 = i64_load32_u((&M0), (u64)(i1));
        j2 = l25;
        j1 <<= (j2 & 63);
        j2 = l24;
        j3 = 4294967295ull;
        j2 &= j3;
        j1 += j2;
        l24 = j1;
        j2 = l24;
        j3 = 1000000000ull;
        j2 = DIV_U(j2, j3);
        l24 = j2;
        j3 = 1000000000ull;
        j2 *= j3;
        j1 -= j2;
        i64_store32((&M0), (u64)(i0), j1);
        i0 = l10;
        i1 = 4294967292u;
        i0 += i1;
        l10 = i0;
        i1 = l13;
        i0 = i0 >= i1;
        if (i0) {goto L181;}
      j0 = l24;
      i0 = (u32)(j0);
      l10 = i0;
      i0 = !(i0);
      if (i0) {goto B180;}
      i0 = l13;
      i1 = 4294967292u;
      i0 += i1;
      l13 = i0;
      i1 = l10;
      i32_store((&M0), (u64)(i0), i1);
      B180:;
      L183: vm_checktime();
        i0 = l14;
        l10 = i0;
        i1 = l13;
        i0 = i0 <= i1;
        if (i0) {goto B182;}
        i0 = l10;
        i1 = 4294967292u;
        i0 += i1;
        l14 = i0;
        i0 = i32_load((&M0), (u64)(i0));
        i0 = !(i0);
        if (i0) {goto L183;}
      B182:;
      i0 = l0;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 748));
      i2 = l12;
      i1 -= i2;
      l12 = i1;
      i32_store((&M0), (u64)(i0 + 748), i1);
      i0 = l10;
      l14 = i0;
      i0 = l12;
      i1 = 0u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L179;}
      goto B177;
    B178:;
    i0 = l14;
    l10 = i0;
    i0 = l22;
    l13 = i0;
    B177:;
    i0 = l12;
    i1 = 4294967295u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B184;}
    i0 = l21;
    i1 = 45u;
    i0 += i1;
    i1 = 9u;
    i0 = DIV_U(i0, i1);
    i1 = 1u;
    i0 += i1;
    l19 = i0;
    i0 = l28;
    i1 = 102u;
    i0 = i0 != i1;
    if (i0) {goto B185;}
    i0 = l22;
    i1 = l19;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l31 = i0;
    L186: vm_checktime();
      i0 = 0u;
      i1 = l12;
      i0 -= i1;
      l14 = i0;
      i1 = 9u;
      i2 = l14;
      i3 = 9u;
      i2 = (u32)((s32)i2 < (s32)i3);
      i0 = i2 ? i0 : i1;
      l17 = i0;
      i0 = l13;
      i1 = l10;
      i0 = i0 >= i1;
      if (i0) {goto B188;}
      i0 = 1000000000u;
      i1 = l17;
      i0 >>= (i1 & 31);
      l18 = i0;
      i0 = 4294967295u;
      i1 = l17;
      i0 <<= (i1 & 31);
      i1 = 4294967295u;
      i0 ^= i1;
      l20 = i0;
      i0 = 0u;
      l12 = i0;
      i0 = l13;
      l14 = i0;
      L189: vm_checktime();
        i0 = l14;
        i1 = l14;
        i1 = i32_load((&M0), (u64)(i1));
        l11 = i1;
        i2 = l17;
        i1 >>= (i2 & 31);
        i2 = l12;
        i1 += i2;
        i32_store((&M0), (u64)(i0), i1);
        i0 = l11;
        i1 = l20;
        i0 &= i1;
        i1 = l18;
        i0 *= i1;
        l12 = i0;
        i0 = l14;
        i1 = 4u;
        i0 += i1;
        l14 = i0;
        i1 = l10;
        i0 = i0 < i1;
        if (i0) {goto L189;}
      i0 = l13;
      i1 = l13;
      i2 = 4u;
      i1 += i2;
      i2 = l13;
      i2 = i32_load((&M0), (u64)(i2));
      i0 = i2 ? i0 : i1;
      l13 = i0;
      i0 = l12;
      i0 = !(i0);
      if (i0) {goto B187;}
      i0 = l10;
      i1 = l12;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l10;
      i1 = 4u;
      i0 += i1;
      l10 = i0;
      goto B187;
      B188:;
      i0 = l13;
      i1 = l13;
      i2 = 4u;
      i1 += i2;
      i2 = l13;
      i2 = i32_load((&M0), (u64)(i2));
      i0 = i2 ? i0 : i1;
      l13 = i0;
      B187:;
      i0 = l0;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 748));
      i2 = l17;
      i1 += i2;
      l12 = i1;
      i32_store((&M0), (u64)(i0 + 748), i1);
      i0 = l31;
      i1 = l10;
      i2 = l10;
      i3 = l22;
      i2 -= i3;
      i3 = 2u;
      i2 = (u32)((s32)i2 >> (i3 & 31));
      i3 = l19;
      i2 = (u32)((s32)i2 > (s32)i3);
      i0 = i2 ? i0 : i1;
      l10 = i0;
      i0 = l12;
      i1 = 0u;
      i0 = (u32)((s32)i0 < (s32)i1);
      if (i0) {goto L186;}
      goto B184;
    B185:;
    L190: vm_checktime();
      i0 = 0u;
      i1 = l12;
      i0 -= i1;
      l14 = i0;
      i1 = 9u;
      i2 = l14;
      i3 = 9u;
      i2 = (u32)((s32)i2 < (s32)i3);
      i0 = i2 ? i0 : i1;
      l17 = i0;
      i0 = l13;
      i1 = l10;
      i0 = i0 >= i1;
      if (i0) {goto B192;}
      i0 = 1000000000u;
      i1 = l17;
      i0 >>= (i1 & 31);
      l18 = i0;
      i0 = 4294967295u;
      i1 = l17;
      i0 <<= (i1 & 31);
      i1 = 4294967295u;
      i0 ^= i1;
      l20 = i0;
      i0 = 0u;
      l12 = i0;
      i0 = l13;
      l14 = i0;
      L193: vm_checktime();
        i0 = l14;
        i1 = l14;
        i1 = i32_load((&M0), (u64)(i1));
        l11 = i1;
        i2 = l17;
        i1 >>= (i2 & 31);
        i2 = l12;
        i1 += i2;
        i32_store((&M0), (u64)(i0), i1);
        i0 = l11;
        i1 = l20;
        i0 &= i1;
        i1 = l18;
        i0 *= i1;
        l12 = i0;
        i0 = l14;
        i1 = 4u;
        i0 += i1;
        l14 = i0;
        i1 = l10;
        i0 = i0 < i1;
        if (i0) {goto L193;}
      i0 = l13;
      i1 = l13;
      i2 = 4u;
      i1 += i2;
      i2 = l13;
      i2 = i32_load((&M0), (u64)(i2));
      i0 = i2 ? i0 : i1;
      l13 = i0;
      i0 = l12;
      i0 = !(i0);
      if (i0) {goto B191;}
      i0 = l10;
      i1 = l12;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l10;
      i1 = 4u;
      i0 += i1;
      l10 = i0;
      goto B191;
      B192:;
      i0 = l13;
      i1 = l13;
      i2 = 4u;
      i1 += i2;
      i2 = l13;
      i2 = i32_load((&M0), (u64)(i2));
      i0 = i2 ? i0 : i1;
      l13 = i0;
      B191:;
      i0 = l0;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 748));
      i2 = l17;
      i1 += i2;
      l12 = i1;
      i32_store((&M0), (u64)(i0 + 748), i1);
      i0 = l13;
      i1 = l19;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      i1 = l10;
      i2 = l10;
      i3 = l13;
      i2 -= i3;
      i3 = 2u;
      i2 = (u32)((s32)i2 >> (i3 & 31));
      i3 = l19;
      i2 = (u32)((s32)i2 > (s32)i3);
      i0 = i2 ? i0 : i1;
      l10 = i0;
      i0 = l12;
      i1 = 0u;
      i0 = (u32)((s32)i0 < (s32)i1);
      if (i0) {goto L190;}
    B184:;
    i0 = 0u;
    l14 = i0;
    i0 = l13;
    i1 = l10;
    i0 = i0 >= i1;
    if (i0) {goto B194;}
    i0 = l22;
    i1 = l13;
    i0 -= i1;
    i1 = 2u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    i1 = 9u;
    i0 *= i1;
    l14 = i0;
    i0 = l13;
    i0 = i32_load((&M0), (u64)(i0));
    l11 = i0;
    i1 = 10u;
    i0 = i0 < i1;
    if (i0) {goto B194;}
    i0 = 10u;
    l12 = i0;
    L195: vm_checktime();
      i0 = l14;
      i1 = 1u;
      i0 += i1;
      l14 = i0;
      i0 = l11;
      i1 = l12;
      i2 = 10u;
      i1 *= i2;
      l12 = i1;
      i0 = i0 >= i1;
      if (i0) {goto L195;}
    B194:;
    i0 = l21;
    i1 = 0u;
    i2 = l14;
    i3 = l28;
    i4 = 102u;
    i3 = i3 == i4;
    i1 = i3 ? i1 : i2;
    l11 = i1;
    i0 -= i1;
    i1 = l21;
    i2 = 0u;
    i1 = i1 != i2;
    i2 = l28;
    i3 = 103u;
    i2 = i2 == i3;
    l18 = i2;
    i1 &= i2;
    l20 = i1;
    i0 -= i1;
    l12 = i0;
    i1 = l10;
    i2 = l22;
    i1 -= i2;
    i2 = 2u;
    i1 = (u32)((s32)i1 >> (i2 & 31));
    i2 = 9u;
    i1 *= i2;
    i2 = 4294967287u;
    i1 += i2;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B196;}
    i0 = l22;
    i1 = l12;
    i2 = 147456u;
    i1 += i2;
    l19 = i1;
    i2 = 9u;
    i1 = I32_DIV_S(i1, i2);
    l31 = i1;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l28 = i0;
    i1 = 4294901764u;
    i0 += i1;
    l17 = i0;
    i0 = 10u;
    l12 = i0;
    i0 = l19;
    i1 = l31;
    i2 = 9u;
    i1 *= i2;
    l31 = i1;
    i0 -= i1;
    i1 = 7u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B197;}
    i0 = l21;
    i1 = 0u;
    i2 = l20;
    i1 -= i2;
    i0 += i1;
    i1 = 147455u;
    i0 += i1;
    i1 = l11;
    i0 -= i1;
    i1 = l31;
    i0 -= i1;
    l11 = i0;
    i0 = 10u;
    l12 = i0;
    L198: vm_checktime();
      i0 = l12;
      i1 = 10u;
      i0 *= i1;
      l12 = i0;
      i0 = l11;
      i1 = 1u;
      i0 += i1;
      l11 = i0;
      i1 = 7u;
      i0 = (u32)((s32)i0 < (s32)i1);
      if (i0) {goto L198;}
    B197:;
    i0 = l17;
    i0 = i32_load((&M0), (u64)(i0));
    l20 = i0;
    i1 = l20;
    i2 = l12;
    i1 = DIV_U(i1, i2);
    l19 = i1;
    i2 = l12;
    i1 *= i2;
    i0 -= i1;
    l11 = i0;
    i0 = l17;
    i1 = 4u;
    i0 += i1;
    l31 = i0;
    i1 = l10;
    i0 = i0 != i1;
    if (i0) {goto B200;}
    i0 = l11;
    i0 = !(i0);
    if (i0) {goto B199;}
    B200:;
    i0 = l19;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B202;}
    j0 = 4643211215818981376ull;
    l24 = j0;
    j0 = 0ull;
    l25 = j0;
    i0 = l17;
    i1 = l13;
    i0 = i0 <= i1;
    if (i0) {goto B201;}
    i0 = l12;
    i1 = 1000000000u;
    i0 = i0 != i1;
    if (i0) {goto B201;}
    i0 = l17;
    i1 = 4294967292u;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 1u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B201;}
    B202:;
    j0 = 4643211215818981376ull;
    l24 = j0;
    j0 = 1ull;
    l25 = j0;
    B201:;
    j0 = 4611123068473966592ull;
    l29 = j0;
    i0 = l11;
    i1 = l12;
    i2 = 1u;
    i1 >>= (i2 & 31);
    l19 = i1;
    i0 = i0 < i1;
    if (i0) {goto B203;}
    j0 = 4611404543450677248ull;
    j1 = 4611545280939032576ull;
    i2 = l11;
    i3 = l19;
    i2 = i2 == i3;
    j0 = i2 ? j0 : j1;
    j1 = 4611545280939032576ull;
    i2 = l31;
    i3 = l10;
    i2 = i2 == i3;
    j0 = i2 ? j0 : j1;
    l29 = j0;
    B203:;
    i0 = l26;
    i0 = !(i0);
    if (i0) {goto B204;}
    i0 = l27;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 45u;
    i0 = i0 != i1;
    if (i0) {goto B204;}
    j0 = l29;
    j1 = 9223372036854775808ull;
    j0 ^= j1;
    l29 = j0;
    j0 = l24;
    j1 = 9223372036854775808ull;
    j0 ^= j1;
    l24 = j0;
    B204:;
    i0 = l0;
    i1 = 224u;
    i0 += i1;
    j1 = l25;
    j2 = l24;
    j3 = 0ull;
    j4 = l29;
    (*Z_envZ___addtf3Z_vijjjj)(i0, j1, j2, j3, j4);
    i0 = l17;
    i1 = l20;
    i2 = l11;
    i1 -= i2;
    l11 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    j0 = i64_load((&M0), (u64)(i0 + 224));
    i1 = l0;
    i2 = 224u;
    i1 += i2;
    i2 = 8u;
    i1 += i2;
    j1 = i64_load((&M0), (u64)(i1));
    j2 = l25;
    j3 = l24;
    i0 = (*Z_envZ___eqtf2Z_ijjjj)(j0, j1, j2, j3);
    i0 = !(i0);
    if (i0) {goto B199;}
    i0 = l17;
    i1 = l11;
    i2 = l12;
    i1 += i2;
    l14 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l14;
    i1 = 1000000000u;
    i0 = i0 < i1;
    if (i0) {goto B205;}
    i0 = l28;
    i1 = 4294901760u;
    i0 += i1;
    l14 = i0;
    L206: vm_checktime();
      i0 = l14;
      i1 = 4u;
      i0 += i1;
      i1 = 0u;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l14;
      i1 = l13;
      i0 = i0 >= i1;
      if (i0) {goto B207;}
      i0 = l13;
      i1 = 4294967292u;
      i0 += i1;
      l13 = i0;
      i1 = 0u;
      i32_store((&M0), (u64)(i0), i1);
      B207:;
      i0 = l14;
      i1 = l14;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = 1u;
      i1 += i2;
      l12 = i1;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l14;
      i1 = 4294967292u;
      i0 += i1;
      l14 = i0;
      i0 = l12;
      i1 = 999999999u;
      i0 = i0 > i1;
      if (i0) {goto L206;}
    i0 = l14;
    i1 = 4u;
    i0 += i1;
    l17 = i0;
    B205:;
    i0 = l22;
    i1 = l13;
    i0 -= i1;
    i1 = 2u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    i1 = 9u;
    i0 *= i1;
    l14 = i0;
    i0 = l13;
    i0 = i32_load((&M0), (u64)(i0));
    l11 = i0;
    i1 = 10u;
    i0 = i0 < i1;
    if (i0) {goto B199;}
    i0 = 10u;
    l12 = i0;
    L208: vm_checktime();
      i0 = l14;
      i1 = 1u;
      i0 += i1;
      l14 = i0;
      i0 = l11;
      i1 = l12;
      i2 = 10u;
      i1 *= i2;
      l12 = i1;
      i0 = i0 >= i1;
      if (i0) {goto L208;}
    B199:;
    i0 = l17;
    i1 = 4u;
    i0 += i1;
    l12 = i0;
    i1 = l10;
    i2 = l10;
    i3 = l12;
    i2 = i2 > i3;
    i0 = i2 ? i0 : i1;
    l10 = i0;
    B196:;
    i0 = 0u;
    i1 = l14;
    i0 -= i1;
    l17 = i0;
    L211: vm_checktime();
      i0 = l10;
      l11 = i0;
      i1 = l13;
      i0 = i0 <= i1;
      if (i0) {goto B210;}
      i0 = l11;
      i1 = 4294967292u;
      i0 += i1;
      l10 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = !(i0);
      if (i0) {goto L211;}
    i0 = 1u;
    l19 = i0;
    i0 = l18;
    if (i0) {goto B209;}
    goto B161;
    B210:;
    i0 = 0u;
    l19 = i0;
    i0 = l18;
    i0 = !(i0);
    if (i0) {goto B161;}
    B209:;
    i0 = l21;
    i1 = l21;
    i1 = !(i1);
    i0 += i1;
    l10 = i0;
    i1 = l14;
    i0 = (u32)((s32)i0 <= (s32)i1);
    if (i0) {goto B169;}
    i0 = l14;
    i1 = 4294967292u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B169;}
    i0 = l23;
    i1 = 4294967295u;
    i0 += i1;
    l23 = i0;
    i0 = l10;
    i1 = 4294967295u;
    i0 += i1;
    i1 = l14;
    i0 -= i1;
    l21 = i0;
    i0 = l16;
    i1 = 8u;
    i0 &= i1;
    l18 = i0;
    i0 = !(i0);
    if (i0) {goto B168;}
    goto B160;
    B171:;
    i0 = l0;
    i1 = 192u;
    i0 += i1;
    j1 = l24;
    j2 = l25;
    j3 = l30;
    j4 = l29;
    (*Z_envZ___addtf3Z_vijjjj)(i0, j1, j2, j3, j4);
    i0 = l0;
    i1 = 176u;
    i0 += i1;
    i1 = l0;
    j1 = i64_load((&M0), (u64)(i1 + 192));
    i2 = l0;
    i3 = 192u;
    i2 += i3;
    i3 = 8u;
    i2 += i3;
    j2 = i64_load((&M0), (u64)(i2));
    j3 = l30;
    j4 = l29;
    (*Z_envZ___subtf3Z_vijjjj)(i0, j1, j2, j3, j4);
    i0 = l0;
    i1 = 176u;
    i0 += i1;
    i1 = 8u;
    i0 += i1;
    j0 = i64_load((&M0), (u64)(i0));
    l25 = j0;
    i0 = l0;
    j0 = i64_load((&M0), (u64)(i0 + 176));
    l24 = j0;
    B170:;
    i0 = l5;
    l14 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 748));
    l18 = i0;
    i1 = l18;
    i2 = 31u;
    i1 = (u32)((s32)i1 >> (i2 & 31));
    l10 = i1;
    i0 += i1;
    i1 = l10;
    i0 ^= i1;
    l10 = i0;
    i0 = !(i0);
    if (i0) {goto B213;}
    i0 = 0u;
    l13 = i0;
    L214: vm_checktime();
      i0 = l0;
      i1 = 692u;
      i0 += i1;
      i1 = l13;
      i0 += i1;
      i1 = 11u;
      i0 += i1;
      i1 = l10;
      i2 = l10;
      i3 = 10u;
      i2 = DIV_U(i2, i3);
      l14 = i2;
      i3 = 10u;
      i2 *= i3;
      i1 -= i2;
      i2 = 48u;
      i1 |= i2;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = l13;
      i1 = 4294967295u;
      i0 += i1;
      l13 = i0;
      i0 = l10;
      i1 = 9u;
      i0 = i0 > i1;
      l12 = i0;
      i0 = l14;
      l10 = i0;
      i0 = l12;
      if (i0) {goto L214;}
    i0 = l0;
    i1 = 692u;
    i0 += i1;
    i1 = l13;
    i0 += i1;
    i1 = 12u;
    i0 += i1;
    l14 = i0;
    i0 = l13;
    if (i0) {goto B212;}
    B213:;
    i0 = l14;
    i1 = 4294967295u;
    i0 += i1;
    l14 = i0;
    i1 = 48u;
    i32_store8((&M0), (u64)(i0), i1);
    B212:;
    i0 = l26;
    i1 = 2u;
    i0 |= i1;
    l20 = i0;
    i0 = l14;
    i1 = 4294967294u;
    i0 += i1;
    l19 = i0;
    i1 = l23;
    i2 = 15u;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l14;
    i1 = 4294967295u;
    i0 += i1;
    i1 = 45u;
    i2 = 43u;
    i3 = l18;
    i4 = 0u;
    i3 = (u32)((s32)i3 < (s32)i4);
    i1 = i3 ? i1 : i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l16;
    i1 = 8u;
    i0 &= i1;
    if (i0) {goto B215;}
    i0 = l11;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B167;}
    i0 = l0;
    i1 = 704u;
    i0 += i1;
    l10 = i0;
    L216: vm_checktime();
      i0 = l0;
      i1 = 80u;
      i0 += i1;
      j1 = l24;
      j2 = l25;
      i1 = (*Z_envZ___fixtfsiZ_ijj)(j1, j2);
      l13 = i1;
      (*Z_envZ___floatsitfZ_vii)(i0, i1);
      i0 = l0;
      i1 = 64u;
      i0 += i1;
      j1 = l24;
      j2 = l25;
      i3 = l0;
      j3 = i64_load((&M0), (u64)(i3 + 80));
      i4 = l0;
      i5 = 80u;
      i4 += i5;
      i5 = 8u;
      i4 += i5;
      j4 = i64_load((&M0), (u64)(i4));
      (*Z_envZ___subtf3Z_vijjjj)(i0, j1, j2, j3, j4);
      i0 = l0;
      i1 = 48u;
      i0 += i1;
      i1 = l0;
      j1 = i64_load((&M0), (u64)(i1 + 64));
      i2 = l0;
      i3 = 64u;
      i2 += i3;
      i3 = 8u;
      i2 += i3;
      j2 = i64_load((&M0), (u64)(i2));
      j3 = 0ull;
      j4 = 4612530443357519872ull;
      (*Z_envZ___multf3Z_vijjjj)(i0, j1, j2, j3, j4);
      i0 = l10;
      i1 = l13;
      i2 = 12592u;
      i1 += i2;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i2 = l17;
      i1 |= i2;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = l0;
      i1 = 48u;
      i0 += i1;
      i1 = 8u;
      i0 += i1;
      j0 = i64_load((&M0), (u64)(i0));
      l25 = j0;
      i0 = l0;
      j0 = i64_load((&M0), (u64)(i0 + 48));
      l24 = j0;
      i0 = l10;
      i1 = 1u;
      i0 += i1;
      l13 = i0;
      i1 = l0;
      i2 = 704u;
      i1 += i2;
      i0 -= i1;
      i1 = 1u;
      i0 = i0 != i1;
      if (i0) {goto B217;}
      i0 = l10;
      i1 = 1u;
      i0 += i1;
      i1 = 46u;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = l10;
      i1 = 2u;
      i0 += i1;
      l13 = i0;
      B217:;
      i0 = l13;
      l10 = i0;
      j0 = l24;
      j1 = l25;
      j2 = 0ull;
      j3 = 0ull;
      i0 = (*Z_envZ___netf2Z_ijjjj)(j0, j1, j2, j3);
      if (i0) {goto L216;}
      goto B166;
    B215:;
    i0 = l0;
    i1 = 704u;
    i0 += i1;
    l10 = i0;
    L218: vm_checktime();
      i0 = l0;
      i1 = 128u;
      i0 += i1;
      j1 = l24;
      j2 = l25;
      i1 = (*Z_envZ___fixtfsiZ_ijj)(j1, j2);
      l13 = i1;
      (*Z_envZ___floatsitfZ_vii)(i0, i1);
      i0 = l0;
      i1 = 112u;
      i0 += i1;
      j1 = l24;
      j2 = l25;
      i3 = l0;
      j3 = i64_load((&M0), (u64)(i3 + 128));
      i4 = l0;
      i5 = 128u;
      i4 += i5;
      i5 = 8u;
      i4 += i5;
      j4 = i64_load((&M0), (u64)(i4));
      (*Z_envZ___subtf3Z_vijjjj)(i0, j1, j2, j3, j4);
      i0 = l0;
      i1 = 96u;
      i0 += i1;
      i1 = l0;
      j1 = i64_load((&M0), (u64)(i1 + 112));
      i2 = l0;
      i3 = 112u;
      i2 += i3;
      i3 = 8u;
      i2 += i3;
      j2 = i64_load((&M0), (u64)(i2));
      j3 = 0ull;
      j4 = 4612530443357519872ull;
      (*Z_envZ___multf3Z_vijjjj)(i0, j1, j2, j3, j4);
      i0 = l10;
      i1 = l13;
      i2 = 12592u;
      i1 += i2;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i2 = l17;
      i1 |= i2;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = l0;
      i1 = 96u;
      i0 += i1;
      i1 = 8u;
      i0 += i1;
      j0 = i64_load((&M0), (u64)(i0));
      l25 = j0;
      i0 = l0;
      j0 = i64_load((&M0), (u64)(i0 + 96));
      l24 = j0;
      i0 = l10;
      i1 = 1u;
      i0 += i1;
      l13 = i0;
      i1 = l0;
      i2 = 704u;
      i1 += i2;
      i0 -= i1;
      i1 = 1u;
      i0 = i0 != i1;
      if (i0) {goto B219;}
      i0 = l10;
      i1 = 1u;
      i0 += i1;
      i1 = 46u;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = l10;
      i1 = 2u;
      i0 += i1;
      l13 = i0;
      B219:;
      i0 = l13;
      l10 = i0;
      j0 = l24;
      j1 = l25;
      j2 = 0ull;
      j3 = 0ull;
      i0 = (*Z_envZ___netf2Z_ijjjj)(j0, j1, j2, j3);
      if (i0) {goto L218;}
      goto B166;
    B169:;
    i0 = l10;
    i1 = 4294967295u;
    i0 += i1;
    l21 = i0;
    i0 = l23;
    i1 = 4294967294u;
    i0 += i1;
    l23 = i0;
    i0 = l16;
    i1 = 8u;
    i0 &= i1;
    l18 = i0;
    if (i0) {goto B160;}
    B168:;
    i0 = 9u;
    l10 = i0;
    i0 = l19;
    i0 = !(i0);
    if (i0) {goto B220;}
    i0 = l11;
    i1 = 4294967292u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l18 = i0;
    i0 = !(i0);
    if (i0) {goto B220;}
    i0 = 0u;
    l10 = i0;
    i0 = l18;
    i1 = 10u;
    i0 = REM_U(i0, i1);
    if (i0) {goto B220;}
    i0 = 10u;
    l12 = i0;
    i0 = 0u;
    l10 = i0;
    L221: vm_checktime();
      i0 = l10;
      i1 = 1u;
      i0 += i1;
      l10 = i0;
      i0 = l18;
      i1 = l12;
      i2 = 10u;
      i1 *= i2;
      l12 = i1;
      i0 = REM_U(i0, i1);
      i0 = !(i0);
      if (i0) {goto L221;}
    B220:;
    i0 = l11;
    i1 = l22;
    i0 -= i1;
    i1 = 2u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    i1 = 9u;
    i0 *= i1;
    i1 = 4294967287u;
    i0 += i1;
    l12 = i0;
    i0 = l23;
    i1 = 32u;
    i0 |= i1;
    i1 = 102u;
    i0 = i0 != i1;
    if (i0) {goto B165;}
    i0 = 0u;
    l18 = i0;
    i0 = l21;
    i1 = l12;
    i2 = l10;
    i1 -= i2;
    l10 = i1;
    i2 = 0u;
    i3 = l10;
    i4 = 0u;
    i3 = (u32)((s32)i3 > (s32)i4);
    i1 = i3 ? i1 : i2;
    l10 = i1;
    i2 = l21;
    i3 = l10;
    i2 = (u32)((s32)i2 < (s32)i3);
    i0 = i2 ? i0 : i1;
    l21 = i0;
    goto B160;
    B167:;
    i0 = l0;
    i1 = 704u;
    i0 += i1;
    l13 = i0;
    L222: vm_checktime();
      i0 = l0;
      i1 = 32u;
      i0 += i1;
      j1 = l24;
      j2 = l25;
      i1 = (*Z_envZ___fixtfsiZ_ijj)(j1, j2);
      l14 = i1;
      (*Z_envZ___floatsitfZ_vii)(i0, i1);
      i0 = l0;
      i1 = 16u;
      i0 += i1;
      j1 = l24;
      j2 = l25;
      i3 = l0;
      j3 = i64_load((&M0), (u64)(i3 + 32));
      i4 = l0;
      i5 = 32u;
      i4 += i5;
      i5 = 8u;
      i4 += i5;
      j4 = i64_load((&M0), (u64)(i4));
      (*Z_envZ___subtf3Z_vijjjj)(i0, j1, j2, j3, j4);
      i0 = l0;
      i1 = l0;
      j1 = i64_load((&M0), (u64)(i1 + 16));
      i2 = l0;
      i3 = 16u;
      i2 += i3;
      i3 = 8u;
      i2 += i3;
      j2 = i64_load((&M0), (u64)(i2));
      j3 = 0ull;
      j4 = 4612530443357519872ull;
      (*Z_envZ___multf3Z_vijjjj)(i0, j1, j2, j3, j4);
      i0 = l13;
      l10 = i0;
      i1 = l14;
      i2 = 12592u;
      i1 += i2;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i2 = l17;
      i1 |= i2;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = l0;
      i1 = 8u;
      i0 += i1;
      j0 = i64_load((&M0), (u64)(i0));
      l25 = j0;
      i0 = l0;
      j0 = i64_load((&M0), (u64)(i0));
      l24 = j0;
      i0 = l10;
      i1 = 1u;
      i0 += i1;
      l13 = i0;
      i1 = l0;
      i2 = 704u;
      i1 += i2;
      i0 -= i1;
      i1 = 1u;
      i0 = i0 != i1;
      if (i0) {goto B223;}
      j0 = l24;
      j1 = l25;
      j2 = 0ull;
      j3 = 0ull;
      i0 = (*Z_envZ___eqtf2Z_ijjjj)(j0, j1, j2, j3);
      i0 = !(i0);
      if (i0) {goto B223;}
      i0 = l10;
      i1 = 1u;
      i0 += i1;
      i1 = 46u;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = l10;
      i1 = 2u;
      i0 += i1;
      l13 = i0;
      B223:;
      j0 = l24;
      j1 = l25;
      j2 = 0ull;
      j3 = 0ull;
      i0 = (*Z_envZ___netf2Z_ijjjj)(j0, j1, j2, j3);
      if (i0) {goto L222;}
    B166:;
    i0 = 4294967295u;
    l10 = i0;
    i0 = 2147483645u;
    i1 = l20;
    i0 -= i1;
    i1 = l5;
    i2 = l19;
    i1 -= i2;
    l17 = i1;
    i0 -= i1;
    i1 = l11;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B4;}
    i0 = l17;
    i1 = l20;
    i0 += i1;
    i1 = l11;
    i2 = 2u;
    i1 += i2;
    i2 = l13;
    i3 = l0;
    i4 = 704u;
    i3 += i4;
    i2 -= i3;
    l18 = i2;
    i3 = l3;
    i4 = l13;
    i3 += i4;
    i4 = l11;
    i3 = (u32)((s32)i3 < (s32)i4);
    i1 = i3 ? i1 : i2;
    i2 = l18;
    i3 = l11;
    i1 = i3 ? i1 : i2;
    l23 = i1;
    i0 += i1;
    l11 = i0;
    i0 = l16;
    i1 = 73728u;
    i0 &= i1;
    l16 = i0;
    if (i0) {goto B162;}
    i0 = l15;
    i1 = l11;
    i0 = (u32)((s32)i0 <= (s32)i1);
    if (i0) {goto B162;}
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = 32u;
    i2 = l15;
    i3 = l11;
    i2 -= i3;
    l22 = i2;
    i3 = 256u;
    i4 = l22;
    i5 = 256u;
    i4 = i4 < i5;
    l10 = i4;
    i2 = i4 ? i2 : i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l14 = i0;
    i1 = 32u;
    i0 &= i1;
    l13 = i0;
    i0 = l10;
    if (i0) {goto B164;}
    i0 = l13;
    i0 = !(i0);
    l10 = i0;
    i0 = l22;
    l13 = i0;
    L224: vm_checktime();
      i0 = l10;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B225;}
      i0 = l0;
      i1 = 432u;
      i0 += i1;
      i1 = 256u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l14 = i0;
      B225:;
      i0 = l14;
      i1 = 32u;
      i0 &= i1;
      l12 = i0;
      i0 = !(i0);
      l10 = i0;
      i0 = l13;
      i1 = 4294967040u;
      i0 += i1;
      l13 = i0;
      i1 = 255u;
      i0 = i0 > i1;
      if (i0) {goto L224;}
    i0 = l12;
    if (i0) {goto B162;}
    i0 = l22;
    i1 = 255u;
    i0 &= i1;
    l22 = i0;
    goto B163;
    B165:;
    i0 = 0u;
    l18 = i0;
    i0 = l21;
    i1 = l12;
    i2 = l14;
    i1 += i2;
    i2 = l10;
    i1 -= i2;
    l10 = i1;
    i2 = 0u;
    i3 = l10;
    i4 = 0u;
    i3 = (u32)((s32)i3 > (s32)i4);
    i1 = i3 ? i1 : i2;
    l10 = i1;
    i2 = l21;
    i3 = l10;
    i2 = (u32)((s32)i2 < (s32)i3);
    i0 = i2 ? i0 : i1;
    l21 = i0;
    goto B160;
    B164:;
    i0 = l13;
    if (i0) {goto B162;}
    B163:;
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = l22;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B162:;
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 32u;
    i0 &= i1;
    if (i0) {goto B226;}
    i0 = l21;
    i1 = l20;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B226:;
    i0 = l16;
    i1 = 65536u;
    i0 = i0 != i1;
    if (i0) {goto B227;}
    i0 = l15;
    i1 = l11;
    i0 = (u32)((s32)i0 <= (s32)i1);
    if (i0) {goto B227;}
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = 48u;
    i2 = l15;
    i3 = l11;
    i2 -= i3;
    l20 = i2;
    i3 = 256u;
    i4 = l20;
    i5 = 256u;
    i4 = i4 < i5;
    l10 = i4;
    i2 = i4 ? i2 : i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l14 = i0;
    i1 = 32u;
    i0 &= i1;
    l13 = i0;
    i0 = l10;
    if (i0) {goto B229;}
    i0 = l13;
    i0 = !(i0);
    l10 = i0;
    i0 = l20;
    l13 = i0;
    L230: vm_checktime();
      i0 = l10;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B231;}
      i0 = l0;
      i1 = 432u;
      i0 += i1;
      i1 = 256u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l14 = i0;
      B231:;
      i0 = l14;
      i1 = 32u;
      i0 &= i1;
      l12 = i0;
      i0 = !(i0);
      l10 = i0;
      i0 = l13;
      i1 = 4294967040u;
      i0 += i1;
      l13 = i0;
      i1 = 255u;
      i0 = i0 > i1;
      if (i0) {goto L230;}
    i0 = l12;
    if (i0) {goto B227;}
    i0 = l20;
    i1 = 255u;
    i0 &= i1;
    l20 = i0;
    goto B228;
    B229:;
    i0 = l13;
    if (i0) {goto B227;}
    B228:;
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = l20;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B227:;
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 32u;
    i0 &= i1;
    if (i0) {goto B232;}
    i0 = l0;
    i1 = 704u;
    i0 += i1;
    i1 = l18;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B232:;
    i0 = l23;
    i1 = l18;
    i0 -= i1;
    l18 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B233;}
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = 48u;
    i2 = l18;
    i3 = 256u;
    i4 = l18;
    i5 = 256u;
    i4 = i4 < i5;
    l10 = i4;
    i2 = i4 ? i2 : i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l14 = i0;
    i1 = 32u;
    i0 &= i1;
    l13 = i0;
    i0 = l10;
    if (i0) {goto B235;}
    i0 = l13;
    i0 = !(i0);
    l10 = i0;
    i0 = l18;
    l13 = i0;
    L236: vm_checktime();
      i0 = l10;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B237;}
      i0 = l0;
      i1 = 432u;
      i0 += i1;
      i1 = 256u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l14 = i0;
      B237:;
      i0 = l14;
      i1 = 32u;
      i0 &= i1;
      l12 = i0;
      i0 = !(i0);
      l10 = i0;
      i0 = l13;
      i1 = 4294967040u;
      i0 += i1;
      l13 = i0;
      i1 = 255u;
      i0 = i0 > i1;
      if (i0) {goto L236;}
    i0 = l12;
    if (i0) {goto B233;}
    i0 = l18;
    i1 = 255u;
    i0 &= i1;
    l18 = i0;
    goto B234;
    B235:;
    i0 = l13;
    if (i0) {goto B233;}
    B234:;
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = l18;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B233:;
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 32u;
    i0 &= i1;
    if (i0) {goto B238;}
    i0 = l19;
    i1 = l17;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B238:;
    i0 = l16;
    i1 = 8192u;
    i0 = i0 != i1;
    if (i0) {goto B239;}
    i0 = l15;
    i1 = l11;
    i0 = (u32)((s32)i0 <= (s32)i1);
    if (i0) {goto B239;}
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = 32u;
    i2 = l15;
    i3 = l11;
    i2 -= i3;
    l17 = i2;
    i3 = 256u;
    i4 = l17;
    i5 = 256u;
    i4 = i4 < i5;
    l10 = i4;
    i2 = i4 ? i2 : i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l14 = i0;
    i1 = 32u;
    i0 &= i1;
    l13 = i0;
    i0 = l10;
    if (i0) {goto B241;}
    i0 = l13;
    i0 = !(i0);
    l10 = i0;
    i0 = l17;
    l13 = i0;
    L242: vm_checktime();
      i0 = l10;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B243;}
      i0 = l0;
      i1 = 432u;
      i0 += i1;
      i1 = 256u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l14 = i0;
      B243:;
      i0 = l14;
      i1 = 32u;
      i0 &= i1;
      l12 = i0;
      i0 = !(i0);
      l10 = i0;
      i0 = l13;
      i1 = 4294967040u;
      i0 += i1;
      l13 = i0;
      i1 = 255u;
      i0 = i0 > i1;
      if (i0) {goto L242;}
    i0 = l12;
    if (i0) {goto B239;}
    i0 = l17;
    i1 = 255u;
    i0 &= i1;
    l17 = i0;
    goto B240;
    B241:;
    i0 = l13;
    if (i0) {goto B239;}
    B240:;
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = l17;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B239:;
    i0 = l15;
    i1 = l11;
    i2 = l15;
    i3 = l11;
    i2 = (u32)((s32)i2 > (s32)i3);
    i0 = i2 ? i0 : i1;
    l10 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto L3;}
    goto B2;
    B161:;
    i0 = l16;
    i1 = 8u;
    i0 &= i1;
    l18 = i0;
    B160:;
    i0 = 4294967295u;
    l10 = i0;
    i0 = l21;
    i1 = 2147483645u;
    i2 = 2147483646u;
    i3 = l21;
    i4 = l18;
    i3 |= i4;
    l20 = i3;
    i1 = i3 ? i1 : i2;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B4;}
    i0 = l21;
    i1 = l20;
    i2 = 0u;
    i1 = i1 != i2;
    i0 += i1;
    i1 = 1u;
    i0 += i1;
    l31 = i0;
    i0 = l23;
    i1 = 32u;
    i0 |= i1;
    i1 = 102u;
    i0 = i0 != i1;
    l32 = i0;
    if (i0) {goto B245;}
    i0 = l14;
    i1 = 2147483647u;
    i2 = l31;
    i1 -= i2;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B4;}
    i0 = l14;
    i1 = 0u;
    i2 = l14;
    i3 = 0u;
    i2 = (u32)((s32)i2 > (s32)i3);
    i0 = i2 ? i0 : i1;
    l14 = i0;
    goto B244;
    B245:;
    i0 = l5;
    l12 = i0;
    i0 = l17;
    i1 = l14;
    i2 = l14;
    i3 = 0u;
    i2 = (u32)((s32)i2 < (s32)i3);
    l33 = i2;
    i0 = i2 ? i0 : i1;
    l10 = i0;
    i0 = !(i0);
    if (i0) {goto B246;}
    L247: vm_checktime();
      i0 = l12;
      i1 = 4294967295u;
      i0 += i1;
      l12 = i0;
      i1 = l10;
      i2 = l10;
      i3 = 10u;
      i2 = DIV_U(i2, i3);
      l14 = i2;
      i3 = 10u;
      i2 *= i3;
      i1 -= i2;
      i2 = 48u;
      i1 |= i2;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = l10;
      i1 = 9u;
      i0 = i0 > i1;
      l17 = i0;
      i0 = l14;
      l10 = i0;
      i0 = l17;
      if (i0) {goto L247;}
    B246:;
    i0 = l5;
    i1 = l12;
    i0 -= i1;
    i1 = 1u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B248;}
    i0 = l12;
    i1 = 4294967295u;
    i0 += i1;
    l10 = i0;
    L249: vm_checktime();
      i0 = l10;
      i1 = 48u;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = l5;
      i1 = l10;
      i0 -= i1;
      l14 = i0;
      i0 = l10;
      i1 = 4294967295u;
      i0 += i1;
      l12 = i0;
      l10 = i0;
      i0 = l14;
      i1 = 2u;
      i0 = (u32)((s32)i0 < (s32)i1);
      if (i0) {goto L249;}
    i0 = l12;
    i1 = 1u;
    i0 += i1;
    l12 = i0;
    B248:;
    i0 = l12;
    i1 = 4294967294u;
    i0 += i1;
    l28 = i0;
    i1 = l23;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 4294967295u;
    l10 = i0;
    i0 = l12;
    i1 = 4294967295u;
    i0 += i1;
    i1 = 45u;
    i2 = 43u;
    i3 = l33;
    i1 = i3 ? i1 : i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l5;
    i1 = l28;
    i0 -= i1;
    l14 = i0;
    i1 = 2147483647u;
    i2 = l31;
    i1 -= i2;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B4;}
    B244:;
    i0 = 4294967295u;
    l10 = i0;
    i0 = l14;
    i1 = l31;
    i0 += i1;
    l14 = i0;
    i1 = l26;
    i2 = 2147483647u;
    i1 ^= i2;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B4;}
    i0 = l14;
    i1 = l26;
    i0 += i1;
    l23 = i0;
    i0 = l16;
    i1 = 73728u;
    i0 &= i1;
    l16 = i0;
    if (i0) {goto B250;}
    i0 = l15;
    i1 = l23;
    i0 = (u32)((s32)i0 <= (s32)i1);
    if (i0) {goto B250;}
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = 32u;
    i2 = l15;
    i3 = l23;
    i2 -= i3;
    l31 = i2;
    i3 = 256u;
    i4 = l31;
    i5 = 256u;
    i4 = i4 < i5;
    l10 = i4;
    i2 = i4 ? i2 : i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l12 = i0;
    i1 = 32u;
    i0 &= i1;
    l14 = i0;
    i0 = l10;
    if (i0) {goto B252;}
    i0 = l14;
    i0 = !(i0);
    l10 = i0;
    i0 = l31;
    l14 = i0;
    L253: vm_checktime();
      i0 = l10;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B254;}
      i0 = l0;
      i1 = 432u;
      i0 += i1;
      i1 = 256u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l12 = i0;
      B254:;
      i0 = l12;
      i1 = 32u;
      i0 &= i1;
      l17 = i0;
      i0 = !(i0);
      l10 = i0;
      i0 = l14;
      i1 = 4294967040u;
      i0 += i1;
      l14 = i0;
      i1 = 255u;
      i0 = i0 > i1;
      if (i0) {goto L253;}
    i0 = l17;
    if (i0) {goto B250;}
    i0 = l31;
    i1 = 255u;
    i0 &= i1;
    l31 = i0;
    goto B251;
    B252:;
    i0 = l14;
    if (i0) {goto B250;}
    B251:;
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = l31;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B250:;
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 32u;
    i0 &= i1;
    if (i0) {goto B255;}
    i0 = l27;
    i1 = l26;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B255:;
    i0 = l16;
    i1 = 65536u;
    i0 = i0 != i1;
    if (i0) {goto B256;}
    i0 = l15;
    i1 = l23;
    i0 = (u32)((s32)i0 <= (s32)i1);
    if (i0) {goto B256;}
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = 48u;
    i2 = l15;
    i3 = l23;
    i2 -= i3;
    l26 = i2;
    i3 = 256u;
    i4 = l26;
    i5 = 256u;
    i4 = i4 < i5;
    l10 = i4;
    i2 = i4 ? i2 : i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l12 = i0;
    i1 = 32u;
    i0 &= i1;
    l14 = i0;
    i0 = l10;
    if (i0) {goto B258;}
    i0 = l14;
    i0 = !(i0);
    l10 = i0;
    i0 = l26;
    l14 = i0;
    L259: vm_checktime();
      i0 = l10;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B260;}
      i0 = l0;
      i1 = 432u;
      i0 += i1;
      i1 = 256u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l12 = i0;
      B260:;
      i0 = l12;
      i1 = 32u;
      i0 &= i1;
      l17 = i0;
      i0 = !(i0);
      l10 = i0;
      i0 = l14;
      i1 = 4294967040u;
      i0 += i1;
      l14 = i0;
      i1 = 255u;
      i0 = i0 > i1;
      if (i0) {goto L259;}
    i0 = l17;
    if (i0) {goto B256;}
    i0 = l26;
    i1 = 255u;
    i0 &= i1;
    l26 = i0;
    goto B257;
    B258:;
    i0 = l14;
    if (i0) {goto B256;}
    B257:;
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = l26;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B256:;
    i0 = l32;
    if (i0) {goto B271;}
    i0 = l22;
    i1 = l13;
    i2 = l13;
    i3 = l22;
    i2 = i2 > i3;
    i0 = i2 ? i0 : i1;
    l18 = i0;
    l17 = i0;
    L272: vm_checktime();
      i0 = l17;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      i0 = !(i0);
      if (i0) {goto B274;}
      i0 = 0u;
      l13 = i0;
      L275: vm_checktime();
        i0 = l1;
        i1 = l13;
        i0 += i1;
        i1 = l10;
        i2 = l10;
        i3 = 10u;
        i2 = DIV_U(i2, i3);
        l14 = i2;
        i3 = 10u;
        i2 *= i3;
        i1 -= i2;
        i2 = 48u;
        i1 |= i2;
        i32_store8((&M0), (u64)(i0), i1);
        i0 = l13;
        i1 = 4294967295u;
        i0 += i1;
        l13 = i0;
        i0 = l10;
        i1 = 9u;
        i0 = i0 > i1;
        l12 = i0;
        i0 = l14;
        l10 = i0;
        i0 = l12;
        if (i0) {goto L275;}
        goto B273;
      B274:;
      i0 = 0u;
      l13 = i0;
      B273:;
      i0 = l2;
      i1 = l13;
      i0 += i1;
      l10 = i0;
      i0 = l17;
      i1 = l18;
      i0 = i0 == i1;
      if (i0) {goto B279;}
      i0 = l10;
      i1 = l0;
      i2 = 704u;
      i1 += i2;
      i0 = i0 <= i1;
      if (i0) {goto B278;}
      L280: vm_checktime();
        i0 = l10;
        i1 = 4294967295u;
        i0 += i1;
        l10 = i0;
        i1 = 48u;
        i32_store8((&M0), (u64)(i0), i1);
        i0 = l10;
        i1 = l0;
        i2 = 704u;
        i1 += i2;
        i0 = i0 > i1;
        if (i0) {goto L280;}
      i0 = l0;
      i1 = 704u;
      i0 += i1;
      l10 = i0;
      i0 = p0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i1 = 32u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B277;}
      goto B276;
      B279:;
      i0 = l13;
      if (i0) {goto B278;}
      i0 = l10;
      i1 = 4294967295u;
      i0 += i1;
      l10 = i0;
      i1 = 48u;
      i32_store8((&M0), (u64)(i0), i1);
      B278:;
      i0 = p0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i1 = 32u;
      i0 &= i1;
      if (i0) {goto B276;}
      B277:;
      i0 = l10;
      i1 = l2;
      i2 = l10;
      i1 -= i2;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      B276:;
      i0 = l17;
      i1 = 4u;
      i0 += i1;
      l17 = i0;
      i1 = l22;
      i0 = i0 <= i1;
      if (i0) {goto L272;}
    i0 = l20;
    i0 = !(i0);
    if (i0) {goto B281;}
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 32u;
    i0 &= i1;
    if (i0) {goto B281;}
    i0 = 15938u;
    i1 = 1u;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B281:;
    i0 = l21;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B270;}
    i0 = l17;
    i1 = l11;
    i0 = i0 >= i1;
    if (i0) {goto B269;}
    L282: vm_checktime();
      i0 = l2;
      l10 = i0;
      i0 = l17;
      i0 = i32_load((&M0), (u64)(i0));
      l13 = i0;
      i0 = !(i0);
      if (i0) {goto B284;}
      i0 = l2;
      l10 = i0;
      L285: vm_checktime();
        i0 = l10;
        i1 = 4294967295u;
        i0 += i1;
        l10 = i0;
        i1 = l13;
        i2 = l13;
        i3 = 10u;
        i2 = DIV_U(i2, i3);
        l14 = i2;
        i3 = 10u;
        i2 *= i3;
        i1 -= i2;
        i2 = 48u;
        i1 |= i2;
        i32_store8((&M0), (u64)(i0), i1);
        i0 = l13;
        i1 = 9u;
        i0 = i0 > i1;
        l12 = i0;
        i0 = l14;
        l13 = i0;
        i0 = l12;
        if (i0) {goto L285;}
      i0 = l10;
      i1 = l0;
      i2 = 704u;
      i1 += i2;
      i0 = i0 <= i1;
      if (i0) {goto B283;}
      B284:;
      L286: vm_checktime();
        i0 = l10;
        i1 = 4294967295u;
        i0 += i1;
        l10 = i0;
        i1 = 48u;
        i32_store8((&M0), (u64)(i0), i1);
        i0 = l10;
        i1 = l0;
        i2 = 704u;
        i1 += i2;
        i0 = i0 > i1;
        if (i0) {goto L286;}
      B283:;
      i0 = p0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i1 = 32u;
      i0 &= i1;
      if (i0) {goto B287;}
      i0 = l10;
      i1 = l21;
      i2 = 9u;
      i3 = l21;
      i4 = 9u;
      i3 = (u32)((s32)i3 < (s32)i4);
      i1 = i3 ? i1 : i2;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      B287:;
      i0 = l21;
      i1 = 4294967287u;
      i0 += i1;
      l10 = i0;
      i0 = l21;
      i1 = 10u;
      i0 = (u32)((s32)i0 < (s32)i1);
      if (i0) {goto B268;}
      i0 = l10;
      l21 = i0;
      i0 = l17;
      i1 = 4u;
      i0 += i1;
      l17 = i0;
      i1 = l11;
      i0 = i0 < i1;
      if (i0) {goto L282;}
      goto B268;
    B271:;
    i0 = l21;
    i1 = 4294967295u;
    i0 = (u32)((s32)i0 <= (s32)i1);
    if (i0) {goto B264;}
    i0 = l11;
    i1 = l13;
    i2 = 4u;
    i1 += i2;
    i2 = l19;
    i0 = i2 ? i0 : i1;
    l20 = i0;
    i0 = l18;
    i0 = !(i0);
    if (i0) {goto B266;}
    i0 = l13;
    l17 = i0;
    L288: vm_checktime();
      i0 = l2;
      l12 = i0;
      i0 = l17;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      i0 = !(i0);
      if (i0) {goto B290;}
      i0 = 0u;
      l14 = i0;
      L291: vm_checktime();
        i0 = l0;
        i1 = 704u;
        i0 += i1;
        i1 = l14;
        i0 += i1;
        i1 = 8u;
        i0 += i1;
        i1 = l10;
        i2 = l10;
        i3 = 10u;
        i2 = DIV_U(i2, i3);
        l12 = i2;
        i3 = 10u;
        i2 *= i3;
        i1 -= i2;
        i2 = 48u;
        i1 |= i2;
        i32_store8((&M0), (u64)(i0), i1);
        i0 = l14;
        i1 = 4294967295u;
        i0 += i1;
        l14 = i0;
        i0 = l10;
        i1 = 9u;
        i0 = i0 > i1;
        l11 = i0;
        i0 = l12;
        l10 = i0;
        i0 = l11;
        if (i0) {goto L291;}
      i0 = l0;
      i1 = 704u;
      i0 += i1;
      i1 = l14;
      i0 += i1;
      i1 = 9u;
      i0 += i1;
      l12 = i0;
      i0 = l14;
      if (i0) {goto B289;}
      B290:;
      i0 = l12;
      i1 = 4294967295u;
      i0 += i1;
      l12 = i0;
      i1 = 48u;
      i32_store8((&M0), (u64)(i0), i1);
      B289:;
      i0 = l17;
      i1 = l13;
      i0 = i0 == i1;
      if (i0) {goto B293;}
      i0 = l12;
      i1 = l0;
      i2 = 704u;
      i1 += i2;
      i0 = i0 <= i1;
      if (i0) {goto B292;}
      L294: vm_checktime();
        i0 = l12;
        i1 = 4294967295u;
        i0 += i1;
        l12 = i0;
        i1 = 48u;
        i32_store8((&M0), (u64)(i0), i1);
        i0 = l12;
        i1 = l0;
        i2 = 704u;
        i1 += i2;
        i0 = i0 > i1;
        if (i0) {goto L294;}
        goto B292;
      B293:;
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      i1 = 32u;
      i0 &= i1;
      if (i0) {goto B295;}
      i0 = l12;
      i1 = 1u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      B295:;
      i0 = l12;
      i1 = 1u;
      i0 += i1;
      l12 = i0;
      i0 = l10;
      i1 = 32u;
      i0 &= i1;
      if (i0) {goto B292;}
      i0 = 15938u;
      i1 = 1u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      B292:;
      i0 = l2;
      i1 = l12;
      i0 -= i1;
      l10 = i0;
      i0 = p0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i1 = 32u;
      i0 &= i1;
      if (i0) {goto B296;}
      i0 = l12;
      i1 = l10;
      i2 = l21;
      i3 = l21;
      i4 = l10;
      i3 = (u32)((s32)i3 > (s32)i4);
      i1 = i3 ? i1 : i2;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      B296:;
      i0 = l21;
      i1 = l10;
      i0 -= i1;
      l21 = i0;
      i0 = l17;
      i1 = 4u;
      i0 += i1;
      l17 = i0;
      i1 = l20;
      i0 = i0 >= i1;
      if (i0) {goto B265;}
      i0 = l21;
      i1 = 4294967295u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L288;}
      goto B265;
    B270:;
    i0 = l21;
    l10 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B267;}
    goto B263;
    B269:;
    i0 = l21;
    l10 = i0;
    B268:;
    i0 = l10;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B263;}
    B267:;
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = 48u;
    i2 = l10;
    i3 = 256u;
    i4 = l10;
    i5 = 256u;
    i4 = i4 < i5;
    l13 = i4;
    i2 = i4 ? i2 : i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l12 = i0;
    i1 = 32u;
    i0 &= i1;
    l14 = i0;
    i0 = l13;
    if (i0) {goto B298;}
    i0 = l14;
    i0 = !(i0);
    l13 = i0;
    i0 = l10;
    l14 = i0;
    L299: vm_checktime();
      i0 = l13;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B300;}
      i0 = l0;
      i1 = 432u;
      i0 += i1;
      i1 = 256u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l12 = i0;
      B300:;
      i0 = l12;
      i1 = 32u;
      i0 &= i1;
      l11 = i0;
      i0 = !(i0);
      l13 = i0;
      i0 = l14;
      i1 = 4294967040u;
      i0 += i1;
      l14 = i0;
      i1 = 255u;
      i0 = i0 > i1;
      if (i0) {goto L299;}
    i0 = l11;
    if (i0) {goto B263;}
    i0 = l10;
    i1 = 255u;
    i0 &= i1;
    l10 = i0;
    goto B297;
    B298:;
    i0 = l14;
    if (i0) {goto B263;}
    B297:;
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = l10;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    i0 = l16;
    i1 = 8192u;
    i0 = i0 == i1;
    if (i0) {goto B262;}
    goto B261;
    B266:;
    i0 = l13;
    l17 = i0;
    L301: vm_checktime();
      i0 = l2;
      l12 = i0;
      i0 = l17;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      i0 = !(i0);
      if (i0) {goto B303;}
      i0 = 0u;
      l14 = i0;
      L304: vm_checktime();
        i0 = l0;
        i1 = 704u;
        i0 += i1;
        i1 = l14;
        i0 += i1;
        i1 = 8u;
        i0 += i1;
        i1 = l10;
        i2 = l10;
        i3 = 10u;
        i2 = DIV_U(i2, i3);
        l12 = i2;
        i3 = 10u;
        i2 *= i3;
        i1 -= i2;
        i2 = 48u;
        i1 |= i2;
        i32_store8((&M0), (u64)(i0), i1);
        i0 = l14;
        i1 = 4294967295u;
        i0 += i1;
        l14 = i0;
        i0 = l10;
        i1 = 9u;
        i0 = i0 > i1;
        l11 = i0;
        i0 = l12;
        l10 = i0;
        i0 = l11;
        if (i0) {goto L304;}
      i0 = l0;
      i1 = 704u;
      i0 += i1;
      i1 = l14;
      i0 += i1;
      i1 = 9u;
      i0 += i1;
      l12 = i0;
      i0 = l14;
      if (i0) {goto B302;}
      B303:;
      i0 = l12;
      i1 = 4294967295u;
      i0 += i1;
      l12 = i0;
      i1 = 48u;
      i32_store8((&M0), (u64)(i0), i1);
      B302:;
      i0 = l17;
      i1 = l13;
      i0 = i0 == i1;
      if (i0) {goto B306;}
      i0 = l12;
      i1 = l0;
      i2 = 704u;
      i1 += i2;
      i0 = i0 <= i1;
      if (i0) {goto B305;}
      L307: vm_checktime();
        i0 = l12;
        i1 = 4294967295u;
        i0 += i1;
        l12 = i0;
        i1 = 48u;
        i32_store8((&M0), (u64)(i0), i1);
        i0 = l12;
        i1 = l0;
        i2 = 704u;
        i1 += i2;
        i0 = i0 > i1;
        if (i0) {goto L307;}
        goto B305;
      B306:;
      i0 = p0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i1 = 32u;
      i0 &= i1;
      if (i0) {goto B308;}
      i0 = l12;
      i1 = 1u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      B308:;
      i0 = l12;
      i1 = 1u;
      i0 += i1;
      l12 = i0;
      i0 = l21;
      i1 = 1u;
      i0 = (u32)((s32)i0 < (s32)i1);
      if (i0) {goto B305;}
      i0 = p0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i1 = 32u;
      i0 &= i1;
      if (i0) {goto B305;}
      i0 = 15938u;
      i1 = 1u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      B305:;
      i0 = l2;
      i1 = l12;
      i0 -= i1;
      l10 = i0;
      i0 = p0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i1 = 32u;
      i0 &= i1;
      if (i0) {goto B309;}
      i0 = l12;
      i1 = l10;
      i2 = l21;
      i3 = l21;
      i4 = l10;
      i3 = (u32)((s32)i3 > (s32)i4);
      i1 = i3 ? i1 : i2;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      B309:;
      i0 = l21;
      i1 = l10;
      i0 -= i1;
      l21 = i0;
      i0 = l17;
      i1 = 4u;
      i0 += i1;
      l17 = i0;
      i1 = l20;
      i0 = i0 >= i1;
      if (i0) {goto B265;}
      i0 = l21;
      i1 = 4294967295u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L301;}
    B265:;
    i0 = l21;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B264;}
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = 48u;
    i2 = l21;
    i3 = 256u;
    i4 = l21;
    i5 = 256u;
    i4 = i4 < i5;
    l13 = i4;
    i2 = i4 ? i2 : i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l14 = i0;
    i1 = 32u;
    i0 &= i1;
    l10 = i0;
    i0 = l13;
    if (i0) {goto B311;}
    i0 = l10;
    i0 = !(i0);
    l10 = i0;
    i0 = l21;
    l13 = i0;
    L312: vm_checktime();
      i0 = l10;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B313;}
      i0 = l0;
      i1 = 432u;
      i0 += i1;
      i1 = 256u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l14 = i0;
      B313:;
      i0 = l14;
      i1 = 32u;
      i0 &= i1;
      l12 = i0;
      i0 = !(i0);
      l10 = i0;
      i0 = l13;
      i1 = 4294967040u;
      i0 += i1;
      l13 = i0;
      i1 = 255u;
      i0 = i0 > i1;
      if (i0) {goto L312;}
    i0 = l12;
    if (i0) {goto B264;}
    i0 = l21;
    i1 = 255u;
    i0 &= i1;
    l21 = i0;
    goto B310;
    B311:;
    i0 = l10;
    if (i0) {goto B264;}
    B310:;
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = l21;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B264:;
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 32u;
    i0 &= i1;
    if (i0) {goto B263;}
    i0 = l28;
    i1 = l5;
    i2 = l28;
    i1 -= i2;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B263:;
    i0 = l16;
    i1 = 8192u;
    i0 = i0 != i1;
    if (i0) {goto B261;}
    B262:;
    i0 = l15;
    i1 = l23;
    i0 = (u32)((s32)i0 <= (s32)i1);
    if (i0) {goto B261;}
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = 32u;
    i2 = l15;
    i3 = l23;
    i2 -= i3;
    l11 = i2;
    i3 = 256u;
    i4 = l11;
    i5 = 256u;
    i4 = i4 < i5;
    l10 = i4;
    i2 = i4 ? i2 : i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l14 = i0;
    i1 = 32u;
    i0 &= i1;
    l13 = i0;
    i0 = l10;
    if (i0) {goto B315;}
    i0 = l13;
    i0 = !(i0);
    l10 = i0;
    i0 = l11;
    l13 = i0;
    L316: vm_checktime();
      i0 = l10;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B317;}
      i0 = l0;
      i1 = 432u;
      i0 += i1;
      i1 = 256u;
      i2 = p0;
      i0 = __fwritex(i0, i1, i2);
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l14 = i0;
      B317:;
      i0 = l14;
      i1 = 32u;
      i0 &= i1;
      l12 = i0;
      i0 = !(i0);
      l10 = i0;
      i0 = l13;
      i1 = 4294967040u;
      i0 += i1;
      l13 = i0;
      i1 = 255u;
      i0 = i0 > i1;
      if (i0) {goto L316;}
    i0 = l12;
    if (i0) {goto B261;}
    i0 = l11;
    i1 = 255u;
    i0 &= i1;
    l11 = i0;
    goto B314;
    B315:;
    i0 = l13;
    if (i0) {goto B261;}
    B314:;
    i0 = l0;
    i1 = 432u;
    i0 += i1;
    i1 = l11;
    i2 = p0;
    i0 = __fwritex(i0, i1, i2);
    B261:;
    i0 = l15;
    i1 = l23;
    i2 = l15;
    i3 = l23;
    i2 = (u32)((s32)i2 > (s32)i3);
    i0 = i2 ? i0 : i1;
    l10 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto L3;}
    goto B2;
    B4:;
    i0 = l10;
    i1 = 0u;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto L3;}
  B2:;
  i0 = __errno_location();
  i1 = 75u;
  i32_store((&M0), (u64)(i0), i1);
  B1:;
  i0 = 4294967295u;
  l9 = i0;
  B0:;
  i0 = l0;
  i1 = 8128u;
  i0 += i1;
  g0 = i0;
  i0 = l9;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void pop_arg(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  f64 d1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 4294967287u;
  i0 += i1;
  p1 = i0;
  i1 = 17u;
  i0 = i0 > i1;
  if (i0) {goto B17;}
  i0 = p1;
  switch (i0) {
    case 0: goto B18;
    case 1: goto B16;
    case 2: goto B15;
    case 3: goto B14;
    case 4: goto B13;
    case 5: goto B12;
    case 6: goto B11;
    case 7: goto B10;
    case 8: goto B9;
    case 9: goto B8;
    case 10: goto B7;
    case 11: goto B6;
    case 12: goto B5;
    case 13: goto B4;
    case 14: goto B3;
    case 15: goto B2;
    case 16: goto B1;
    case 17: goto B0;
    default: goto B18;
  }
  B18:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i2 = 4u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  B17:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B16:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i2 = 4u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  j1 = i64_load32_s((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B15:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i2 = 4u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  j1 = i64_load32_u((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B14:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 7u;
  i1 += i2;
  i2 = 4294967288u;
  i1 &= i2;
  p1 = i1;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B13:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i2 = 4u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  j1 = i64_load32_s((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B12:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i2 = 4u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  j1 = i64_load32_u((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B11:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i2 = 4u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  j1 = i64_load16_s((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B10:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i2 = 4u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  j1 = i32_load16_u((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B9:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i2 = 4u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  j1 = i64_load8_s((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B8:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i2 = 4u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  j1 = i64_load8_u((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B7:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 7u;
  i1 += i2;
  i2 = 4294967288u;
  i1 &= i2;
  p1 = i1;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B6:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i2 = 4u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  j1 = i64_load32_u((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B5:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 7u;
  i1 += i2;
  i2 = 4294967288u;
  i1 &= i2;
  p1 = i1;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B4:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 7u;
  i1 += i2;
  i2 = 4294967288u;
  i1 &= i2;
  p1 = i1;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B3:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i2 = 4u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  j1 = i64_load32_s((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i2 = 4u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  j1 = i64_load32_u((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 7u;
  i1 += i2;
  i2 = 4294967288u;
  i1 &= i2;
  p1 = i1;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p1;
  d1 = f64_load((&M0), (u64)(i1));
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 15u;
  i1 += i2;
  i2 = 4294967280u;
  i1 &= i2;
  p1 = i1;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l1 = j0;
  i0 = p0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p0;
  j1 = l1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 _fprintf(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i0 = v_fprintf(i0, i1, i2);
  p2 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  FUNC_EPILOGUE;
  return i0;
}

static void std____1____basic_string_common_true_____throw_length_error___const(u32 p0) {
  FUNC_PROLOGUE;
  (*Z_envZ_abortZ_vv)();
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static void std____1____vector_base_common_true_____throw_length_error___const(u32 p0) {
  FUNC_PROLOGUE;
  (*Z_envZ_abortZ_vv)();
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static void eosio__token__create_eosio__name_const___eosio__asset_const__(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l5 = 0, l6 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  u64 j0, j1, j2, j3, j4, j5;
  i0 = g0;
  i1 = 128u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  j0 = i64_load((&M0), (u64)(i0));
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = 0u;
  l1 = i0;
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l2 = j0;
  l3 = j0;
  L2: vm_checktime();
    j0 = l3;
    i0 = (u32)(j0);
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 3221225471u;
    i0 += i1;
    i1 = 452984830u;
    i0 = i0 > i1;
    if (i0) {goto B1;}
    j0 = l3;
    j1 = 8ull;
    j0 >>= (j1 & 63);
    l4 = j0;
    j0 = l3;
    j1 = 65280ull;
    j0 &= j1;
    j1 = 0ull;
    i0 = j0 == j1;
    if (i0) {goto B3;}
    j0 = l4;
    l3 = j0;
    i0 = l1;
    l5 = i0;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l5;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L2;}
    goto B0;
    B3:;
    j0 = l4;
    l3 = j0;
    L4: vm_checktime();
      j0 = l3;
      j1 = 65280ull;
      j0 &= j1;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto B1;}
      j0 = l3;
      j1 = 8ull;
      j0 >>= (j1 & 63);
      l3 = j0;
      i0 = l1;
      i1 = 6u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l5 = i0;
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      l1 = i0;
      i0 = l5;
      if (i0) {goto L4;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l6;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L2;}
    goto B0;
  B1:;
  i0 = 0u;
  i1 = 9814u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0));
  l7 = j0;
  j1 = 4611686018427387903ull;
  j0 += j1;
  j1 = 9223372036854775806ull;
  i0 = j0 > j1;
  if (i0) {goto B6;}
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l3 = j0;
  i0 = 0u;
  l1 = i0;
  L7: vm_checktime();
    j0 = l3;
    i0 = (u32)(j0);
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 3221225471u;
    i0 += i1;
    i1 = 452984830u;
    i0 = i0 > i1;
    if (i0) {goto B6;}
    j0 = l3;
    j1 = 8ull;
    j0 >>= (j1 & 63);
    l4 = j0;
    j0 = l3;
    j1 = 65280ull;
    j0 &= j1;
    j1 = 0ull;
    i0 = j0 == j1;
    if (i0) {goto B8;}
    j0 = l4;
    l3 = j0;
    i0 = l1;
    l5 = i0;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l5;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L7;}
    goto B5;
    B8:;
    j0 = l4;
    l3 = j0;
    L9: vm_checktime();
      j0 = l3;
      j1 = 65280ull;
      j0 &= j1;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto B6;}
      j0 = l3;
      j1 = 8ull;
      j0 >>= (j1 & 63);
      l3 = j0;
      i0 = l1;
      i1 = 6u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l5 = i0;
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      l1 = i0;
      i0 = l5;
      if (i0) {goto L9;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l6;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L7;}
    goto B5;
  B6:;
  i0 = 0u;
  i1 = 11295u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0));
  l7 = j0;
  B5:;
  j0 = l7;
  j1 = 0ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B10;}
  i0 = 0u;
  i1 = 16432u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B10:;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  l3 = j1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 16), j1);
  j0 = l3;
  j1 = l2;
  j2 = 14289235522390851584ull;
  j3 = l2;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l1 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B11;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i0 = eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___load_object_by_primary_iterator_int__const(i0, i1);
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  i0 = 0u;
  i1 = 20837u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B12:;
  i0 = 0u;
  i1 = 12627u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B11:;
  i0 = p0;
  j0 = i64_load((&M0), (u64)(i0));
  l4 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i0 = j0 == j1;
  if (i0) {goto B13;}
  i0 = 0u;
  i1 = 21355u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B13:;
  i0 = 56u;
  i0 = operator_new_unsigned_int_(i0);
  l1 = i0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l1;
  i1 = p2;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  l3 = j1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l1;
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l1;
  j1 = l3;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l1;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i2 = 40u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 96), i1);
  i0 = l0;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 92), i1);
  i0 = l0;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 88), i1);
  i0 = l0;
  i1 = l0;
  i2 = 88u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 104), i1);
  i0 = l0;
  i1 = l1;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 116), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = l0;
  i1 = l1;
  i2 = 32u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 120), i1);
  i0 = l0;
  i1 = 112u;
  i0 += i1;
  i1 = l0;
  i2 = 104u;
  i1 += i2;
  void_boost__pfr__detail__for_each_field_impl_boost__pfr__detail__sequence_tuple__tuple_eosio__asset_const___eosio__asset_const___eosio__name_const____eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__token__currency_stats___void__0__eosio__datastream_char_____eosio__token__currency_stats_const_____lambda__eosio__datastream_char___const____0u__1u__2u__eosio__datastream_char_____eosio__token__currency_stats____std____1__integer_sequence_unsigned_int__0u__1u__2u___std____1__integral_constant_bool__false__(i0, i1);
  i0 = l1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 14289235522390851584ull;
  j3 = l4;
  i4 = l1;
  j4 = i64_load((&M0), (u64)(i4 + 8));
  j5 = 8ull;
  j4 >>= (j5 & 63);
  l3 = j4;
  i5 = l0;
  i6 = 48u;
  i5 += i6;
  i6 = 40u;
  i1 = (*Z_envZ_db_store_i64Z_ijjjjii)(j1, j2, j3, j4, i5, i6);
  l6 = i1;
  i32_store((&M0), (u64)(i0 + 44), i1);
  j0 = l3;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 16u;
  i1 += i2;
  l5 = i1;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 < j1;
  if (i0) {goto B14;}
  i0 = l5;
  j1 = l3;
  j2 = 1ull;
  j1 += j2;
  i64_store((&M0), (u64)(i0), j1);
  B14:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = l0;
  i1 = l1;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 8ull;
  j1 >>= (j2 & 63);
  l3 = j1;
  i64_store((&M0), (u64)(i0 + 48), j1);
  i0 = l0;
  i1 = l6;
  i32_store((&M0), (u64)(i0 + 88), i1);
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l5 = i0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 32u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 >= i1;
  if (i0) {goto B17;}
  i0 = l5;
  j1 = l3;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l5;
  i1 = l6;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = l5;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l5;
  i2 = 24u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 112));
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = l1;
  if (i0) {goto B16;}
  goto B15;
  B17:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = l0;
  i2 = 112u;
  i1 += i2;
  i2 = l0;
  i3 = 48u;
  i2 += i3;
  i3 = l0;
  i4 = 88u;
  i3 += i4;
  void_std____1__vector_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_______unsigned_long_long_____int____(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 112));
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B15;}
  B16:;
  i0 = l1;
  operator_delete_void__(i0);
  B15:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B18;}
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = l6;
  i0 = i0 == i1;
  if (i0) {goto B20;}
  L21: vm_checktime();
    i0 = l1;
    i1 = 4294967272u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i0 = l1;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    i0 = !(i0);
    if (i0) {goto B22;}
    i0 = l5;
    operator_delete_void__(i0);
    B22:;
    i0 = l6;
    i1 = l1;
    i0 = i0 != i1;
    if (i0) {goto L21;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B19;
  B20:;
  i0 = l6;
  l1 = i0;
  B19:;
  i0 = p2;
  i1 = l6;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  operator_delete_void__(i0);
  B18:;
  i0 = l0;
  i1 = 128u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___load_object_by_primary_iterator_int__const(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l6 = 0;
  u64 l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1, j2;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  l1 = i0;
  i0 = l0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l2 = i0;
  i1 = p0;
  i2 = 28u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  L2: vm_checktime();
    i0 = l3;
    i1 = 4294967288u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p1;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    i0 = l2;
    i1 = l3;
    i2 = 4294967272u;
    i1 += i2;
    l3 = i1;
    i0 = i0 != i1;
    if (i0) {goto L2;}
    goto B0;
  B1:;
  i0 = l2;
  i1 = l3;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l3;
  i1 = 4294967272u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = l1;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = 0u;
  i2 = 0u;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  l3 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B5;}
  i0 = l3;
  i1 = 513u;
  i0 = i0 >= i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = l3;
  i2 = 15u;
  i1 += i2;
  i2 = 4294967280u;
  i1 &= i2;
  i0 -= i1;
  l2 = i0;
  g0 = i0;
  i0 = 0u;
  l4 = i0;
  goto B3;
  B5:;
  i0 = 0u;
  i1 = 21112u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B4:;
  i0 = l3;
  i0 = malloc_0(i0);
  l2 = i0;
  i0 = 1u;
  l4 = i0;
  B3:;
  i0 = p1;
  i1 = l2;
  i2 = l3;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = l2;
  i2 = l3;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 56u;
  i0 = operator_new_unsigned_int_(i0);
  l3 = i0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l3;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l3;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l3;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l3;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l3;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l1;
  i1 = l1;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l1;
  i1 = l3;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l1;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l1;
  i1 = l3;
  i2 = 32u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l1;
  i1 = 32u;
  i0 += i1;
  i1 = l1;
  i2 = 24u;
  i1 += i2;
  void_boost__pfr__detail__for_each_field_impl_boost__pfr__detail__sequence_tuple__tuple_eosio__asset___eosio__asset___eosio__name____eosio__datastream_char_const____eosio__operator___eosio__datastream_char_const____eosio__token__currency_stats___void__0__eosio__datastream_char_const_____eosio__token__currency_stats_____lambda__eosio__datastream_char_const______0u__1u__2u__eosio__datastream_char_const_____eosio__token__currency_stats____std____1__integer_sequence_unsigned_int__0u__1u__2u___std____1__integral_constant_bool__false__(i0, i1);
  i0 = l3;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = l1;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l1;
  i1 = l3;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  j2 = 8ull;
  j1 >>= (j2 & 63);
  l5 = j1;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 28u;
  i0 += i1;
  l6 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = p0;
  i2 = 32u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 >= i1;
  if (i0) {goto B8;}
  i0 = l0;
  j1 = l5;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l6;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  if (i0) {goto B7;}
  goto B6;
  B8:;
  i0 = p0;
  i1 = 24u;
  i0 += i1;
  i1 = l1;
  i2 = 24u;
  i1 += i2;
  i2 = l1;
  i3 = 32u;
  i2 += i3;
  i3 = l1;
  i4 = 4u;
  i3 += i4;
  void_std____1__vector_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_______unsigned_long_long_____int____(i0, i1, i2, i3);
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B6;}
  B7:;
  i0 = l2;
  free_0(i0);
  B6:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p1 = i0;
  i0 = l1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p1;
  operator_delete_void__(i0);
  B9:;
  i0 = l1;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void void_boost__pfr__detail__for_each_field_impl_boost__pfr__detail__sequence_tuple__tuple_eosio__asset_const___eosio__asset_const___eosio__name_const____eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__token__currency_stats___void__0__eosio__datastream_char_____eosio__token__currency_stats_const_____lambda__eosio__datastream_char___const____0u__1u__2u__eosio__datastream_char_____eosio__token__currency_stats____std____1__integer_sequence_unsigned_int__0u__1u__2u___std____1__integral_constant_bool__false__(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l3 = i1;
  i0 -= i1;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 21539u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  B0:;
  i0 = l3;
  i1 = l1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  l4 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l2;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l4;
  i0 -= i1;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 21539u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  B1:;
  i0 = l4;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l3;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l3 = i1;
  i0 -= i1;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B2;}
  i0 = 0u;
  i1 = 21539u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  B2:;
  i0 = l3;
  i1 = l1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  l4 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l2;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l4;
  i0 -= i1;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 21539u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  B3:;
  i0 = l4;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l3;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l3 = i1;
  i0 -= i1;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B4;}
  i0 = 0u;
  i1 = 21539u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  B4:;
  i0 = l3;
  i1 = p0;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void void_std____1__vector_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_______unsigned_long_long_____int____(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l0 = i1;
  i0 -= i1;
  i1 = 24u;
  i0 = I32_DIV_S(i0, i1);
  l1 = i0;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  i1 = 178956971u;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = 178956970u;
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 24u;
  i0 = I32_DIV_S(i0, i1);
  l0 = i0;
  i1 = 89478484u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = l2;
  i1 = l0;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l3 = i1;
  i2 = l3;
  i3 = l2;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  B3:;
  i0 = l3;
  i1 = 24u;
  i0 *= i1;
  i0 = operator_new_unsigned_int_(i0);
  l0 = i0;
  goto B0;
  B2:;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l0 = i0;
  goto B0;
  B1:;
  i0 = p0;
  std____1____vector_base_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = p1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l1;
  i2 = 24u;
  i1 *= i2;
  l4 = i1;
  i0 += i1;
  p1 = i0;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l3;
  i2 = 24u;
  i1 *= i2;
  i0 += i1;
  l1 = i0;
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  l2 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l0;
  i1 = l4;
  i0 += i1;
  i1 = 4294967272u;
  i0 += i1;
  p1 = i0;
  L6: vm_checktime();
    i0 = p2;
    i1 = 4294967272u;
    i0 += i1;
    l0 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    p3 = i0;
    i0 = l0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = p3;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 16u;
    i0 += i1;
    i1 = p2;
    i2 = 4294967288u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 8u;
    i0 += i1;
    i1 = p2;
    i2 = 4294967280u;
    i1 += i2;
    j1 = i64_load((&M0), (u64)(i1));
    i64_store((&M0), (u64)(i0), j1);
    i0 = p1;
    i1 = 4294967272u;
    i0 += i1;
    p1 = i0;
    i0 = l0;
    p2 = i0;
    i0 = l3;
    i1 = l0;
    i0 = i0 != i1;
    if (i0) {goto L6;}
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  p1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  goto B4;
  B5:;
  i0 = l3;
  p2 = i0;
  B4:;
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = p2;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  L8: vm_checktime();
    i0 = l3;
    i1 = 4294967272u;
    i0 += i1;
    l3 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i0 = l3;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B9;}
    i0 = p1;
    operator_delete_void__(i0);
    B9:;
    i0 = p2;
    i1 = l3;
    i0 = i0 != i1;
    if (i0) {goto L8;}
  B7:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = p2;
  operator_delete_void__(i0);
  B10:;
  FUNC_EPILOGUE;
}

static void eosio__token__issue_eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const__(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l5 = 0, l6 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l2 = j0;
  l3 = j0;
  L3: vm_checktime();
    j0 = l3;
    i0 = (u32)(j0);
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 3221225471u;
    i0 += i1;
    i1 = 452984830u;
    i0 = i0 > i1;
    if (i0) {goto B2;}
    j0 = l3;
    j1 = 8ull;
    j0 >>= (j1 & 63);
    l4 = j0;
    j0 = l3;
    j1 = 65280ull;
    j0 &= j1;
    j1 = 0ull;
    i0 = j0 == j1;
    if (i0) {goto B5;}
    j0 = l4;
    l3 = j0;
    i0 = l1;
    l5 = i0;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l5;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L3;}
    goto B4;
    B5:;
    j0 = l4;
    l3 = j0;
    L6: vm_checktime();
      j0 = l3;
      j1 = 65280ull;
      j0 &= j1;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto B2;}
      j0 = l3;
      j1 = 8ull;
      j0 >>= (j1 & 63);
      l3 = j0;
      i0 = l1;
      i1 = 6u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l5 = i0;
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      l1 = i0;
      i0 = l5;
      if (i0) {goto L6;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l6;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L3;}
    B4:;
  i0 = p3;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B1;
  B2:;
  i0 = 0u;
  i1 = 9814u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p3;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 257u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 13413u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = 0u;
  p3 = i0;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  l3 = j1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 16), j1);
  j0 = l3;
  j1 = l2;
  j2 = 14289235522390851584ull;
  j3 = l2;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l1 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B9;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i0 = eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___load_object_by_primary_iterator_int__const(i0, i1);
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  i0 = 0u;
  i1 = 20837u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B10:;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l3 = j0;
  i1 = p3;
  j1 = i64_load((&M0), (u64)(i1 + 32));
  i0 = j0 == j1;
  if (i0) {goto B7;}
  goto B8;
  B9:;
  i0 = 0u;
  i1 = 14104u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l3 = j0;
  i1 = 0u;
  j1 = i64_load((&M0), (u64)(i1 + 32));
  i0 = j0 == j1;
  if (i0) {goto B7;}
  B8:;
  i0 = 0u;
  i1 = 14809u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p3;
  j0 = i64_load((&M0), (u64)(i0 + 32));
  l3 = j0;
  B7:;
  j0 = l3;
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  j1 = 4611686018427387903ull;
  j0 += j1;
  j1 = 9223372036854775806ull;
  i0 = j0 > j1;
  if (i0) {goto B12;}
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l3 = j0;
  i0 = 0u;
  l1 = i0;
  L13: vm_checktime();
    j0 = l3;
    i0 = (u32)(j0);
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 3221225471u;
    i0 += i1;
    i1 = 452984830u;
    i0 = i0 > i1;
    if (i0) {goto B12;}
    j0 = l3;
    j1 = 8ull;
    j0 >>= (j1 & 63);
    l4 = j0;
    j0 = l3;
    j1 = 65280ull;
    j0 &= j1;
    j1 = 0ull;
    i0 = j0 == j1;
    if (i0) {goto B14;}
    j0 = l4;
    l3 = j0;
    i0 = l1;
    l5 = i0;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l5;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L13;}
    goto B11;
    B14:;
    j0 = l4;
    l3 = j0;
    L15: vm_checktime();
      j0 = l3;
      j1 = 65280ull;
      j0 &= j1;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto B12;}
      j0 = l3;
      j1 = 8ull;
      j0 >>= (j1 & 63);
      l3 = j0;
      i0 = l1;
      i1 = 6u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l5 = i0;
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      l1 = i0;
      i0 = l5;
      if (i0) {goto L15;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l6;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L13;}
    goto B11;
  B12:;
  i0 = 0u;
  i1 = 15570u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  B11:;
  j0 = l2;
  j1 = 0ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B16;}
  i0 = 0u;
  i1 = 15940u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B16:;
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = p3;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i0 = j0 == j1;
  if (i0) {goto B17;}
  i0 = 0u;
  i1 = 17347u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B17:;
  i0 = p3;
  i1 = 32u;
  i0 += i1;
  l1 = i0;
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = p3;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i2 = p3;
  j2 = i64_load((&M0), (u64)(i2));
  j1 -= j2;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B18;}
  i0 = 0u;
  i1 = 17719u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B18:;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p3;
  i2 = l0;
  void_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___modify_eosio__token__issue_eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______1__eosio__token__currency_stats_const___eosio__name__eosio__token__issue_eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______1___(i0, i1, i2);
  i0 = p0;
  i1 = l1;
  i2 = p2;
  i3 = l1;
  eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const__(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B19;}
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = l6;
  i0 = i0 == i1;
  if (i0) {goto B21;}
  L22: vm_checktime();
    i0 = l1;
    i1 = 4294967272u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i0 = l1;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    i0 = !(i0);
    if (i0) {goto B23;}
    i0 = l5;
    operator_delete_void__(i0);
    B23:;
    i0 = l6;
    i1 = l1;
    i0 = i0 != i1;
    if (i0) {goto L22;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B20;
  B21:;
  i0 = l6;
  l1 = i0;
  B20:;
  i0 = p2;
  i1 = l6;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  operator_delete_void__(i0);
  B19:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void void_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___modify_eosio__token__issue_eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______1__eosio__token__currency_stats_const___eosio__name__eosio__token__issue_eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______1___(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  l1 = i0;
  i0 = l0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 21692u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 == j1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 21812u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B1:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  l2 = j1;
  i0 = j0 == j1;
  if (i0) {goto B2;}
  i0 = 0u;
  i1 = 22045u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B2:;
  i0 = p1;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = p2;
  j2 = i64_load((&M0), (u64)(i2));
  j1 += j2;
  l3 = j1;
  i64_store((&M0), (u64)(i0), j1);
  j0 = l3;
  j1 = 13835058055282163712ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 22125u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l3 = j0;
  B3:;
  j0 = l2;
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l2 = j0;
  j0 = l3;
  j1 = 4611686018427387904ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B4;}
  i0 = 0u;
  i1 = 22183u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B4:;
  j0 = l2;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 8ull;
  j1 >>= (j2 & 63);
  i0 = j0 == j1;
  if (i0) {goto B5;}
  i0 = 0u;
  i1 = 21945u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B5:;
  i0 = l0;
  p2 = i0;
  i1 = 4294967248u;
  i0 += i1;
  l0 = i0;
  g0 = i0;
  i0 = l1;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = p2;
  i2 = 4294967288u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l1;
  i1 = l1;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l1;
  i1 = p1;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l1;
  i1 = p1;
  i2 = 32u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l1;
  i1 = 32u;
  i0 += i1;
  i1 = l1;
  i2 = 24u;
  i1 += i2;
  void_boost__pfr__detail__for_each_field_impl_boost__pfr__detail__sequence_tuple__tuple_eosio__asset_const___eosio__asset_const___eosio__name_const____eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__token__currency_stats___void__0__eosio__datastream_char_____eosio__token__currency_stats_const_____lambda__eosio__datastream_char___const____0u__1u__2u__eosio__datastream_char_____eosio__token__currency_stats____std____1__integer_sequence_unsigned_int__0u__1u__2u___std____1__integral_constant_bool__false__(i0, i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 44));
  j1 = 0ull;
  i2 = l0;
  i3 = 40u;
  (*Z_envZ_db_update_i64Z_vijii)(i0, j1, i2, i3);
  j0 = l2;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i0 = j0 < j1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  j1 = l2;
  j2 = 1ull;
  j1 += j2;
  i64_store((&M0), (u64)(i0), j1);
  B6:;
  i0 = l1;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const__(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  u64 j0, j1, j2, j3, j4, j5;
  i0 = g0;
  i1 = 80u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  l1 = j1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  l2 = j1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  j0 = l1;
  j1 = l2;
  j2 = 3607749779137757184ull;
  i3 = p2;
  j3 = i64_load((&M0), (u64)(i3 + 8));
  j4 = 8ull;
  j3 >>= (j4 & 63);
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  p1 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = p1;
  i0 = eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___load_object_by_primary_iterator_int__const(i0, i1);
  p1 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 20837u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B3:;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 48), i1);
  i0 = l0;
  i1 = p1;
  i2 = l0;
  i3 = 48u;
  i2 += i3;
  void_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___modify_eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const______5__eosio__token__account_const___eosio__name__eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const______5___(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p0 = i0;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = p3;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 == j1;
  if (i0) {goto B4;}
  i0 = 0u;
  i1 = 21355u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B4:;
  i0 = 32u;
  i0 = operator_new_unsigned_int_(i0);
  p1 = i0;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = p1;
  i1 = p2;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 72), j1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  i1 = 8u;
  i0 |= i1;
  i1 = l0;
  i2 = 72u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 3607749779137757184ull;
  j3 = l2;
  i4 = p1;
  j4 = i64_load((&M0), (u64)(i4 + 8));
  j5 = 8ull;
  j4 >>= (j5 & 63);
  l1 = j4;
  i5 = l0;
  i6 = 48u;
  i5 += i6;
  i6 = 16u;
  i1 = (*Z_envZ_db_store_i64Z_ijjjjii)(j1, j2, j3, j4, i5, i6);
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 20), i1);
  j0 = l1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  p2 = i1;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 < j1;
  if (i0) {goto B5;}
  i0 = p2;
  j1 = l1;
  j2 = 1ull;
  j1 += j2;
  i64_store((&M0), (u64)(i0), j1);
  B5:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 72), i1);
  i0 = l0;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 8ull;
  j1 >>= (j2 & 63);
  l1 = j1;
  i64_store((&M0), (u64)(i0 + 48), j1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = l0;
  i1 = 28u;
  i0 += i1;
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = l0;
  i2 = 32u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 >= i1;
  if (i0) {goto B8;}
  i0 = p2;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p2;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 72), i1);
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  i1 = p2;
  i2 = 24u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 72));
  p1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 72), i1);
  i0 = p1;
  if (i0) {goto B7;}
  goto B6;
  B8:;
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i1 = l0;
  i2 = 72u;
  i1 += i2;
  i2 = l0;
  i3 = 48u;
  i2 += i3;
  i3 = l0;
  i4 = 44u;
  i3 += i4;
  void_std____1__vector_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_______unsigned_long_long_____int____(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 72));
  p1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 72), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B6;}
  B7:;
  i0 = p1;
  operator_delete_void__(i0);
  B6:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 28u;
  i0 += i1;
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  L11: vm_checktime();
    i0 = p1;
    i1 = 4294967272u;
    i0 += i1;
    p1 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    p2 = i0;
    i0 = p1;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p2;
    i0 = !(i0);
    if (i0) {goto B12;}
    i0 = p2;
    operator_delete_void__(i0);
    B12:;
    i0 = p0;
    i1 = p1;
    i0 = i0 != i1;
    if (i0) {goto L11;}
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  goto B9;
  B10:;
  i0 = p0;
  p1 = i0;
  B9:;
  i0 = p3;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  operator_delete_void__(i0);
  B0:;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___load_object_by_primary_iterator_int__const(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  u64 l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1, j2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  l1 = i0;
  i0 = l0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l2 = i0;
  i1 = p0;
  i2 = 28u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  L2: vm_checktime();
    i0 = l3;
    i1 = 4294967288u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p1;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    i0 = l2;
    i1 = l3;
    i2 = 4294967272u;
    i1 += i2;
    l3 = i1;
    i0 = i0 != i1;
    if (i0) {goto L2;}
    goto B0;
  B1:;
  i0 = l2;
  i1 = l3;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l3;
  i1 = 4294967272u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = l1;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = 0u;
  i2 = 0u;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  l2 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B5;}
  i0 = l2;
  i1 = 513u;
  i0 = i0 >= i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = l2;
  i2 = 15u;
  i1 += i2;
  i2 = 4294967280u;
  i1 &= i2;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l4 = i0;
  goto B3;
  B5:;
  i0 = 0u;
  i1 = 21112u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B4:;
  i0 = l2;
  i0 = malloc_0(i0);
  l0 = i0;
  i0 = 1u;
  l4 = i0;
  B3:;
  i0 = p1;
  i1 = l0;
  i2 = l2;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  i0 = 32u;
  i0 = operator_new_unsigned_int_(i0);
  l3 = i0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l3;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l3;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l2;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B6;}
  i0 = 0u;
  i1 = 21243u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B6:;
  i0 = l3;
  i1 = l0;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  l5 = i0;
  i0 = l2;
  i1 = 4294967288u;
  i0 &= i1;
  i1 = 8u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = 0u;
  i1 = 21243u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B7:;
  i0 = l1;
  i1 = 24u;
  i0 += i1;
  i1 = l5;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l3;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  j1 = i64_load((&M0), (u64)(i1 + 24));
  l6 = j1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l3;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l1;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l1;
  j1 = l6;
  j2 = 8ull;
  j1 >>= (j2 & 63);
  l6 = j1;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = 28u;
  i0 += i1;
  l5 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = p0;
  i2 = 32u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 >= i1;
  if (i0) {goto B10;}
  i0 = l2;
  j1 = l6;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l2;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l2;
  i1 = l3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l5;
  i1 = l2;
  i2 = 24u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  if (i0) {goto B9;}
  goto B8;
  B10:;
  i0 = p0;
  i1 = 24u;
  i0 += i1;
  i1 = l1;
  i2 = 16u;
  i1 += i2;
  i2 = l1;
  i3 = 24u;
  i2 += i3;
  i3 = l1;
  i4 = 12u;
  i3 += i4;
  void_std____1__vector_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_______unsigned_long_long_____int____(i0, i1, i2, i3);
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B8;}
  B9:;
  i0 = l0;
  free_0(i0);
  B8:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p1 = i0;
  i0 = l1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = p1;
  operator_delete_void__(i0);
  B11:;
  i0 = l1;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void void_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___modify_eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const______5__eosio__token__account_const___eosio__name__eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const______5___(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l4 = 0;
  u64 l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  l1 = i0;
  i0 = l0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 21692u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 == j1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 21812u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B1:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  l2 = j1;
  i0 = j0 == j1;
  if (i0) {goto B2;}
  i0 = 0u;
  i1 = 22045u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B2:;
  i0 = p1;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = p2;
  j2 = i64_load((&M0), (u64)(i2));
  j1 += j2;
  l3 = j1;
  i64_store((&M0), (u64)(i0), j1);
  j0 = l3;
  j1 = 13835058055282163712ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 22125u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l3 = j0;
  B3:;
  j0 = l2;
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l2 = j0;
  j0 = l3;
  j1 = 4611686018427387904ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B4;}
  i0 = 0u;
  i1 = 22183u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B4:;
  j0 = l2;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  p2 = i1;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 8ull;
  j1 >>= (j2 & 63);
  i0 = j0 == j1;
  if (i0) {goto B5;}
  i0 = 0u;
  i1 = 21945u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B5:;
  i0 = l0;
  l4 = i0;
  i1 = 4294967280u;
  i0 += i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l4;
  i1 = 4294967288u;
  i0 += i1;
  i1 = l1;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  j1 = 0ull;
  i2 = l0;
  i3 = 16u;
  (*Z_envZ_db_update_i64Z_vijii)(i0, j1, i2, i3);
  j0 = l2;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i0 = j0 < j1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  j1 = l2;
  j2 = 1ull;
  j1 += j2;
  i64_store((&M0), (u64)(i0), j1);
  B6:;
  i0 = l1;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void void_std____1__vector_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_______unsigned_long_long_____int____(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l0 = i1;
  i0 -= i1;
  i1 = 24u;
  i0 = I32_DIV_S(i0, i1);
  l1 = i0;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  i1 = 178956971u;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = 178956970u;
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 24u;
  i0 = I32_DIV_S(i0, i1);
  l0 = i0;
  i1 = 89478484u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = l2;
  i1 = l0;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l3 = i1;
  i2 = l3;
  i3 = l2;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  B3:;
  i0 = l3;
  i1 = 24u;
  i0 *= i1;
  i0 = operator_new_unsigned_int_(i0);
  l0 = i0;
  goto B0;
  B2:;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l0 = i0;
  goto B0;
  B1:;
  i0 = p0;
  std____1____vector_base_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = p1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l1;
  i2 = 24u;
  i1 *= i2;
  l4 = i1;
  i0 += i1;
  p1 = i0;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l3;
  i2 = 24u;
  i1 *= i2;
  i0 += i1;
  l1 = i0;
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  l2 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l0;
  i1 = l4;
  i0 += i1;
  i1 = 4294967272u;
  i0 += i1;
  p1 = i0;
  L6: vm_checktime();
    i0 = p2;
    i1 = 4294967272u;
    i0 += i1;
    l0 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    p3 = i0;
    i0 = l0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = p3;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 16u;
    i0 += i1;
    i1 = p2;
    i2 = 4294967288u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 8u;
    i0 += i1;
    i1 = p2;
    i2 = 4294967280u;
    i1 += i2;
    j1 = i64_load((&M0), (u64)(i1));
    i64_store((&M0), (u64)(i0), j1);
    i0 = p1;
    i1 = 4294967272u;
    i0 += i1;
    p1 = i0;
    i0 = l0;
    p2 = i0;
    i0 = l3;
    i1 = l0;
    i0 = i0 != i1;
    if (i0) {goto L6;}
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  p1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  goto B4;
  B5:;
  i0 = l3;
  p2 = i0;
  B4:;
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = p2;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  L8: vm_checktime();
    i0 = l3;
    i1 = 4294967272u;
    i0 += i1;
    l3 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i0 = l3;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B9;}
    i0 = p1;
    operator_delete_void__(i0);
    B9:;
    i0 = p2;
    i1 = l3;
    i0 = i0 != i1;
    if (i0) {goto L8;}
  B7:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = p2;
  operator_delete_void__(i0);
  B10:;
  FUNC_EPILOGUE;
}

static void eosio__token__retire_eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const__(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l5 = 0, l6 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l2 = j0;
  l3 = j0;
  L3: vm_checktime();
    j0 = l3;
    i0 = (u32)(j0);
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 3221225471u;
    i0 += i1;
    i1 = 452984830u;
    i0 = i0 > i1;
    if (i0) {goto B2;}
    j0 = l3;
    j1 = 8ull;
    j0 >>= (j1 & 63);
    l4 = j0;
    j0 = l3;
    j1 = 65280ull;
    j0 &= j1;
    j1 = 0ull;
    i0 = j0 == j1;
    if (i0) {goto B5;}
    j0 = l4;
    l3 = j0;
    i0 = l1;
    l5 = i0;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l5;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L3;}
    goto B4;
    B5:;
    j0 = l4;
    l3 = j0;
    L6: vm_checktime();
      j0 = l3;
      j1 = 65280ull;
      j0 &= j1;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto B2;}
      j0 = l3;
      j1 = 8ull;
      j0 >>= (j1 & 63);
      l3 = j0;
      i0 = l1;
      i1 = 6u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l5 = i0;
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      l1 = i0;
      i0 = l5;
      if (i0) {goto L6;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l6;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L3;}
    B4:;
  i0 = p2;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B1;
  B2:;
  i0 = 0u;
  i1 = 9814u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p2;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 257u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 13413u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = 0u;
  p2 = i0;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  l3 = j1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 16), j1);
  j0 = l3;
  j1 = l2;
  j2 = 14289235522390851584ull;
  j3 = l2;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l1 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i0 = eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___load_object_by_primary_iterator_int__const(i0, i1);
  p2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = 0u;
  i1 = 20837u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  goto B7;
  B8:;
  i0 = 0u;
  i1 = 18174u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B7:;
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0 + 32));
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  j1 = 4611686018427387903ull;
  j0 += j1;
  j1 = 9223372036854775806ull;
  i0 = j0 > j1;
  if (i0) {goto B10;}
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l3 = j0;
  i0 = 0u;
  l1 = i0;
  L11: vm_checktime();
    j0 = l3;
    i0 = (u32)(j0);
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 3221225471u;
    i0 += i1;
    i1 = 452984830u;
    i0 = i0 > i1;
    if (i0) {goto B10;}
    j0 = l3;
    j1 = 8ull;
    j0 >>= (j1 & 63);
    l4 = j0;
    j0 = l3;
    j1 = 65280ull;
    j0 &= j1;
    j1 = 0ull;
    i0 = j0 == j1;
    if (i0) {goto B12;}
    j0 = l4;
    l3 = j0;
    i0 = l1;
    l5 = i0;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l5;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L11;}
    goto B9;
    B12:;
    j0 = l4;
    l3 = j0;
    L13: vm_checktime();
      j0 = l3;
      j1 = 65280ull;
      j0 &= j1;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto B10;}
      j0 = l3;
      j1 = 8ull;
      j0 >>= (j1 & 63);
      l3 = j0;
      i0 = l1;
      i1 = 6u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l5 = i0;
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      l1 = i0;
      i0 = l5;
      if (i0) {goto L13;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l6;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L11;}
    goto B9;
  B10:;
  i0 = 0u;
  i1 = 15570u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  B9:;
  j0 = l2;
  j1 = 0ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B14;}
  i0 = 0u;
  i1 = 18374u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B14:;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i0 = j0 == j1;
  if (i0) {goto B15;}
  i0 = 0u;
  i1 = 17347u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B15:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p2;
  i2 = l0;
  void_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___modify_eosio__token__retire_eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______2__eosio__token__currency_stats_const___eosio__name__eosio__token__retire_eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______2___(i0, i1, i2);
  i0 = p0;
  i1 = p2;
  i2 = 32u;
  i1 += i2;
  i2 = p1;
  eosio__token__sub_balance_eosio__name_const___eosio__asset_const__(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = l6;
  i0 = i0 == i1;
  if (i0) {goto B18;}
  L19: vm_checktime();
    i0 = l1;
    i1 = 4294967272u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i0 = l1;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    i0 = !(i0);
    if (i0) {goto B20;}
    i0 = l5;
    operator_delete_void__(i0);
    B20:;
    i0 = l6;
    i1 = l1;
    i0 = i0 != i1;
    if (i0) {goto L19;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B17;
  B18:;
  i0 = l6;
  l1 = i0;
  B17:;
  i0 = p1;
  i1 = l6;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  operator_delete_void__(i0);
  B16:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void void_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___modify_eosio__token__retire_eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______2__eosio__token__currency_stats_const___eosio__name__eosio__token__retire_eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______2___(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  l1 = i0;
  i0 = l0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 21692u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 == j1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 21812u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B1:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  l2 = j1;
  i0 = j0 == j1;
  if (i0) {goto B2;}
  i0 = 0u;
  i1 = 22260u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B2:;
  i0 = p1;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = p2;
  j2 = i64_load((&M0), (u64)(i2));
  j1 -= j2;
  l3 = j1;
  i64_store((&M0), (u64)(i0), j1);
  j0 = l3;
  j1 = 13835058055282163712ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 22366u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l3 = j0;
  B3:;
  j0 = l2;
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l2 = j0;
  j0 = l3;
  j1 = 4611686018427387904ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B4;}
  i0 = 0u;
  i1 = 22450u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B4:;
  j0 = l2;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 8ull;
  j1 >>= (j2 & 63);
  i0 = j0 == j1;
  if (i0) {goto B5;}
  i0 = 0u;
  i1 = 21945u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B5:;
  i0 = l0;
  p2 = i0;
  i1 = 4294967248u;
  i0 += i1;
  l0 = i0;
  g0 = i0;
  i0 = l1;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = p2;
  i2 = 4294967288u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l1;
  i1 = l1;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l1;
  i1 = p1;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l1;
  i1 = p1;
  i2 = 32u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l1;
  i1 = 32u;
  i0 += i1;
  i1 = l1;
  i2 = 24u;
  i1 += i2;
  void_boost__pfr__detail__for_each_field_impl_boost__pfr__detail__sequence_tuple__tuple_eosio__asset_const___eosio__asset_const___eosio__name_const____eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__token__currency_stats___void__0__eosio__datastream_char_____eosio__token__currency_stats_const_____lambda__eosio__datastream_char___const____0u__1u__2u__eosio__datastream_char_____eosio__token__currency_stats____std____1__integer_sequence_unsigned_int__0u__1u__2u___std____1__integral_constant_bool__false__(i0, i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 44));
  j1 = 0ull;
  i2 = l0;
  i3 = 40u;
  (*Z_envZ_db_update_i64Z_vijii)(i0, j1, i2, i3);
  j0 = l2;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i0 = j0 < j1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  j1 = l2;
  j2 = 1ull;
  j1 += j2;
  i64_store((&M0), (u64)(i0), j1);
  B6:;
  i0 = l1;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void eosio__token__sub_balance_eosio__name_const___eosio__asset_const__(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2, j3, j4;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  l2 = j1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  l3 = j1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  j0 = l2;
  j1 = l3;
  j2 = 3607749779137757184ull;
  i3 = p2;
  j3 = i64_load((&M0), (u64)(i3 + 8));
  j4 = 8ull;
  j3 >>= (j4 & 63);
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  p0 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i0 = eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___load_object_by_primary_iterator_int__const(i0, i1);
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 20837u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B3:;
  i0 = l1;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = (u64)((s64)j0 >= (s64)j1);
  if (i0) {goto B0;}
  goto B1;
  B2:;
  i0 = 0u;
  i1 = 19442u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = (u64)((s64)j0 >= (s64)j1);
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  i1 = 19628u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  j2 = l2;
  i3 = l0;
  void_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___modify_eosio__token__sub_balance_eosio__name_const___eosio__asset_const______3__eosio__token__account_const___eosio__name__eosio__token__sub_balance_eosio__name_const___eosio__asset_const______3___(i0, i1, j2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p0 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  L7: vm_checktime();
    i0 = p2;
    i1 = 4294967272u;
    i0 += i1;
    p2 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i0 = p2;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B8;}
    i0 = l1;
    operator_delete_void__(i0);
    B8:;
    i0 = p1;
    i1 = p2;
    i0 = i0 != i1;
    if (i0) {goto L7;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  goto B5;
  B6:;
  i0 = p1;
  p2 = i0;
  B5:;
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  operator_delete_void__(i0);
  B4:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void void_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___modify_eosio__token__sub_balance_eosio__name_const___eosio__asset_const______3__eosio__token__account_const___eosio__name__eosio__token__sub_balance_eosio__name_const___eosio__asset_const______3___(u32 p0, u32 p1, u64 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l4 = 0;
  u64 l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  l1 = i0;
  i0 = l0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 21692u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 == j1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 21812u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B1:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p3 = i0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  l2 = j1;
  i0 = j0 == j1;
  if (i0) {goto B2;}
  i0 = 0u;
  i1 = 22260u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B2:;
  i0 = p1;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = p3;
  j2 = i64_load((&M0), (u64)(i2));
  j1 -= j2;
  l3 = j1;
  i64_store((&M0), (u64)(i0), j1);
  j0 = l3;
  j1 = 13835058055282163712ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 22366u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l3 = j0;
  B3:;
  j0 = l2;
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l2 = j0;
  j0 = l3;
  j1 = 4611686018427387904ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B4;}
  i0 = 0u;
  i1 = 22450u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B4:;
  j0 = l2;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  p3 = i1;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 8ull;
  j1 >>= (j2 & 63);
  i0 = j0 == j1;
  if (i0) {goto B5;}
  i0 = 0u;
  i1 = 21945u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B5:;
  i0 = l0;
  l4 = i0;
  i1 = 4294967280u;
  i0 += i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p3;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l4;
  i1 = 4294967288u;
  i0 += i1;
  i1 = l1;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  j1 = p2;
  i2 = l0;
  i3 = 16u;
  (*Z_envZ_db_update_i64Z_vijii)(i0, j1, i2, i3);
  j0 = l2;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i0 = j0 < j1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  j1 = l2;
  j2 = 1ull;
  j1 += j2;
  i64_store((&M0), (u64)(i0), j1);
  B6:;
  i0 = l1;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void eosio__token__transfer_eosio__name_const___eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const__(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l2 = 0, l4 = 0, l6 = 0, l7 = 0;
  u64 l1 = 0, l3 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l1 = j0;
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 != j1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 18660u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l1 = j0;
  B0:;
  j0 = l1;
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0));
  i0 = (*Z_envZ_is_accountZ_ij)(j0);
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 18825u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B1:;
  i0 = p3;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l1 = j0;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = l1;
  j2 = 8ull;
  j1 >>= (j2 & 63);
  l1 = j1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  j1 = l1;
  i2 = 19027u;
  i0 = eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___get_unsigned_long_long__char_const___const(i0, j1, i2);
  l2 = i0;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  (*Z_envZ_require_recipientZ_vj)(j0);
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0));
  (*Z_envZ_require_recipientZ_vj)(j0);
  i0 = p3;
  j0 = i64_load((&M0), (u64)(i0));
  l3 = j0;
  j1 = 4611686018427387903ull;
  j0 += j1;
  j1 = 9223372036854775806ull;
  i0 = j0 > j1;
  if (i0) {goto B3;}
  i0 = p3;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l1 = j0;
  i0 = 0u;
  l4 = i0;
  L4: vm_checktime();
    j0 = l1;
    i0 = (u32)(j0);
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 3221225471u;
    i0 += i1;
    i1 = 452984830u;
    i0 = i0 > i1;
    if (i0) {goto B3;}
    j0 = l1;
    j1 = 8ull;
    j0 >>= (j1 & 63);
    l5 = j0;
    j0 = l1;
    j1 = 65280ull;
    j0 &= j1;
    j1 = 0ull;
    i0 = j0 == j1;
    if (i0) {goto B5;}
    j0 = l5;
    l1 = j0;
    i0 = l4;
    l6 = i0;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i0 = l6;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L4;}
    goto B2;
    B5:;
    j0 = l5;
    l1 = j0;
    L6: vm_checktime();
      j0 = l1;
      j1 = 65280ull;
      j0 &= j1;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto B3;}
      j0 = l1;
      j1 = 8ull;
      j0 >>= (j1 & 63);
      l1 = j0;
      i0 = l4;
      i1 = 6u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l6 = i0;
      i0 = l4;
      i1 = 1u;
      i0 += i1;
      l7 = i0;
      l4 = i0;
      i0 = l6;
      if (i0) {goto L6;}
    i0 = l7;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i0 = l7;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L4;}
    goto B2;
  B3:;
  i0 = 0u;
  i1 = 15570u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p3;
  j0 = i64_load((&M0), (u64)(i0));
  l3 = j0;
  B2:;
  j0 = l3;
  j1 = 0ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B7;}
  i0 = 0u;
  i1 = 19229u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B7:;
  i0 = p3;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = l2;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i0 = j0 == j1;
  if (i0) {goto B8;}
  i0 = 0u;
  i1 = 17347u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B8:;
  i0 = p4;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p4;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 257u;
  i0 = i0 < i1;
  if (i0) {goto B9;}
  i0 = 0u;
  i1 = 13413u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B9:;
  i0 = l0;
  i1 = p2;
  i2 = p1;
  i3 = p2;
  j3 = i64_load((&M0), (u64)(i3));
  i3 = (*Z_envZ_has_authZ_ij)(j3);
  i1 = i3 ? i1 : i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i1 = p1;
  i2 = p3;
  eosio__token__sub_balance_eosio__name_const___eosio__asset_const__(i0, i1, i2);
  i0 = p0;
  i1 = p2;
  i2 = p3;
  i3 = l0;
  eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const__(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  l7 = i0;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i1 = l7;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  L13: vm_checktime();
    i0 = l4;
    i1 = 4294967272u;
    i0 += i1;
    l4 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l6 = i0;
    i0 = l4;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    i0 = !(i0);
    if (i0) {goto B14;}
    i0 = l6;
    operator_delete_void__(i0);
    B14:;
    i0 = l7;
    i1 = l4;
    i0 = i0 != i1;
    if (i0) {goto L13;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  goto B11;
  B12:;
  i0 = l7;
  l4 = i0;
  B11:;
  i0 = p3;
  i1 = l7;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  operator_delete_void__(i0);
  B10:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___get_unsigned_long_long__char_const___const(u32 p0, u64 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l0 = i0;
  i1 = p0;
  i2 = 28u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  L3: vm_checktime();
    i0 = l1;
    i1 = 4294967272u;
    i0 += i1;
    l2 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    j0 = i64_load((&M0), (u64)(i0 + 8));
    j1 = 8ull;
    j0 >>= (j1 & 63);
    j1 = p1;
    i0 = j0 == j1;
    if (i0) {goto B2;}
    i0 = l2;
    l1 = i0;
    i0 = l0;
    i1 = l2;
    i0 = i0 != i1;
    if (i0) {goto L3;}
    goto B1;
  B2:;
  i0 = l0;
  i1 = l1;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 20837u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l3;
  goto Bfunc;
  B1:;
  i0 = 0u;
  l3 = i0;
  i0 = p0;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  j2 = 14289235522390851584ull;
  j3 = p1;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l2 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B4;}
  i0 = p0;
  i1 = l2;
  i0 = eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___load_object_by_primary_iterator_int__const(i0, i1);
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 20837u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l3;
  goto Bfunc;
  B4:;
  i0 = 0u;
  i1 = p2;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = l3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const__(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 128u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p3;
  j0 = i64_load((&M0), (u64)(i0));
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  i0 = (*Z_envZ_is_accountZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 19815u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0));
  l1 = j0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  i1 = 32u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = l1;
  j2 = 8ull;
  j1 >>= (j2 & 63);
  l1 = j1;
  i64_store((&M0), (u64)(i0 + 56), j1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 64), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 72), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 48), j1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  j1 = l1;
  i2 = 19967u;
  i0 = eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___get_unsigned_long_long__char_const___const(i0, j1, i2);
  j0 = i64_load((&M0), (u64)(i0 + 8));
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 == j1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 17347u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B1:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 32u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  l2 = j1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  l3 = j1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  j0 = l2;
  j1 = l3;
  j2 = 3607749779137757184ull;
  j3 = l1;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  p0 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B5;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i0 = eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___load_object_by_primary_iterator_int__const(i0, i1);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = 0u;
  i1 = 20837u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  p1 = i0;
  if (i0) {goto B3;}
  goto B2;
  B5:;
  i0 = p3;
  j0 = i64_load((&M0), (u64)(i0));
  l1 = j0;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 120), j1);
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i0 = j0 == j1;
  if (i0) {goto B6;}
  i0 = 0u;
  i1 = 21355u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B6:;
  i0 = l0;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 100), i1);
  i0 = l0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 96), i1);
  i0 = l0;
  i1 = l0;
  i2 = 120u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 104), i1);
  i0 = 32u;
  i0 = operator_new_unsigned_int_(i0);
  p2 = i0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p2;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = 96u;
  i0 += i1;
  i1 = p2;
  auto_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___const_iterator_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___emplace_eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6__eosio__name__eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6______lambda__eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6____operator___eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6___const(i0, i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = l0;
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  j2 = 8ull;
  j1 >>= (j2 & 63);
  l1 = j1;
  i64_store((&M0), (u64)(i0 + 96), j1);
  i0 = l0;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 92), i1);
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 32u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 >= i1;
  if (i0) {goto B8;}
  i0 = p0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = p0;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  i1 = p0;
  i2 = 24u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 112));
  p2 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = p2;
  if (i0) {goto B7;}
  goto B4;
  B8:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = l0;
  i2 = 112u;
  i1 += i2;
  i2 = l0;
  i3 = 96u;
  i2 += i3;
  i3 = l0;
  i4 = 92u;
  i3 += i4;
  void_std____1__vector_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_______unsigned_long_long_____int____(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 112));
  p2 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B4;}
  B7:;
  i0 = p2;
  operator_delete_void__(i0);
  B4:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  B3:;
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  L11: vm_checktime();
    i0 = p2;
    i1 = 4294967272u;
    i0 += i1;
    p2 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    i0 = p2;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B12;}
    i0 = p0;
    operator_delete_void__(i0);
    B12:;
    i0 = p1;
    i1 = p2;
    i0 = i0 != i1;
    if (i0) {goto L11;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  goto B9;
  B10:;
  i0 = p1;
  p2 = i0;
  B9:;
  i0 = p3;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  operator_delete_void__(i0);
  B2:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 72));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = l0;
  i1 = 76u;
  i0 += i1;
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B15;}
  L16: vm_checktime();
    i0 = p2;
    i1 = 4294967272u;
    i0 += i1;
    p2 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    i0 = p2;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B17;}
    i0 = p0;
    operator_delete_void__(i0);
    B17:;
    i0 = p1;
    i1 = p2;
    i0 = i0 != i1;
    if (i0) {goto L16;}
  i0 = l0;
  i1 = 72u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  goto B14;
  B15:;
  i0 = p1;
  p2 = i0;
  B14:;
  i0 = p3;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  operator_delete_void__(i0);
  B13:;
  i0 = l0;
  i1 = 128u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void auto_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___const_iterator_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___emplace_eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6__eosio__name__eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6______lambda__eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6____operator___eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6___const(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l4 = 0, l5 = 0, l7 = 0, l8 = 0;
  u64 l2 = 0, l3 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  u64 j0, j1, j2, j3, j4, j5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  l1 = i0;
  i0 = l0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = i32_load((&M0), (u64)(i0));
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l3 = j0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = 0u;
  l5 = i0;
  L2: vm_checktime();
    j0 = l3;
    i0 = (u32)(j0);
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 3221225471u;
    i0 += i1;
    i1 = 452984830u;
    i0 = i0 > i1;
    if (i0) {goto B1;}
    j0 = l3;
    j1 = 8ull;
    j0 >>= (j1 & 63);
    l6 = j0;
    j0 = l3;
    j1 = 65280ull;
    j0 &= j1;
    j1 = 0ull;
    i0 = j0 == j1;
    if (i0) {goto B3;}
    j0 = l6;
    l3 = j0;
    i0 = l5;
    l7 = i0;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    i0 = l7;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L2;}
    goto B0;
    B3:;
    j0 = l6;
    l3 = j0;
    L4: vm_checktime();
      j0 = l3;
      j1 = 65280ull;
      j0 &= j1;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto B1;}
      j0 = l3;
      j1 = 8ull;
      j0 >>= (j1 & 63);
      l3 = j0;
      i0 = l5;
      i1 = 6u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l7 = i0;
      i0 = l5;
      i1 = 1u;
      i0 += i1;
      l8 = i0;
      l5 = i0;
      i0 = l7;
      if (i0) {goto L4;}
    i0 = l8;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    i0 = l8;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L2;}
    goto B0;
  B1:;
  i0 = 0u;
  i1 = 9814u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p1;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  l7 = i0;
  i1 = 4294967280u;
  i0 += i1;
  l5 = i0;
  g0 = i0;
  i0 = l5;
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l7;
  i1 = 4294967288u;
  i0 += i1;
  i1 = l1;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = l4;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  j2 = 3607749779137757184ull;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 8));
  j3 = i64_load((&M0), (u64)(i3));
  i4 = p1;
  j4 = i64_load((&M0), (u64)(i4 + 8));
  j5 = 8ull;
  j4 >>= (j5 & 63);
  l3 = j4;
  i5 = l5;
  i6 = 16u;
  i1 = (*Z_envZ_db_store_i64Z_ijjjjii)(j1, j2, j3, j4, i5, i6);
  i32_store((&M0), (u64)(i0 + 20), i1);
  j0 = l3;
  i1 = l4;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i0 = j0 < j1;
  if (i0) {goto B5;}
  i0 = l4;
  i1 = 16u;
  i0 += i1;
  j1 = l3;
  j2 = 1ull;
  j1 += j2;
  i64_store((&M0), (u64)(i0), j1);
  B5:;
  i0 = l1;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void eosio__token__close_eosio__name_const___eosio__symbol_const__(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2, j3, j4;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  l2 = j1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  l3 = j1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  j0 = l2;
  j1 = l3;
  j2 = 3607749779137757184ull;
  i3 = p2;
  j3 = i64_load((&M0), (u64)(i3));
  j4 = 8ull;
  j3 >>= (j4 & 63);
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  p1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = p1;
  i0 = eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___load_object_by_primary_iterator_int__const(i0, i1);
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 20837u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B3:;
  i0 = l1;
  j0 = i64_load((&M0), (u64)(i0));
  i0 = !(j0);
  if (i0) {goto B0;}
  goto B1;
  B2:;
  i0 = 0u;
  i1 = 20127u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  j0 = i64_load((&M0), (u64)(i0));
  i0 = !(j0);
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  i1 = 20296u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = l1;
  if (i0) {goto B4;}
  i0 = 0u;
  i1 = 22531u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  i1 = 22640u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B4:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  i1 = l0;
  i2 = 40u;
  i1 += i2;
  i0 = (*Z_envZ_db_next_i64Z_iii)(i0, i1);
  p1 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B5;}
  i0 = l0;
  i1 = p1;
  i0 = eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___load_object_by_primary_iterator_int__const(i0, i1);
  B5:;
  i0 = l0;
  i1 = l1;
  eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___erase_eosio__token__account_const__(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l0;
  i1 = 28u;
  i0 += i1;
  p0 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = p2;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  L9: vm_checktime();
    i0 = l1;
    i1 = 4294967272u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i0 = l1;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B10;}
    i0 = p1;
    operator_delete_void__(i0);
    B10:;
    i0 = p2;
    i1 = l1;
    i0 = i0 != i1;
    if (i0) {goto L9;}
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B7;
  B8:;
  i0 = p2;
  l1 = i0;
  B7:;
  i0 = p0;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  operator_delete_void__(i0);
  B6:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___erase_eosio__token__account_const__(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l5 = 0, l6 = 0, l7 = 0;
  u64 l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 22712u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 == j1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 22795u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l0 = i0;
  i1 = p0;
  i2 = 28u;
  i1 += i2;
  l1 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  l2 = i1;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = l2;
  l3 = i0;
  i0 = l2;
  i1 = 4294967272u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = i64_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  l4 = j1;
  j0 ^= j1;
  j1 = 256ull;
  i0 = j0 < j1;
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  l5 = i0;
  i0 = l2;
  l6 = i0;
  L9: vm_checktime();
    i0 = l5;
    i1 = l6;
    i0 = i0 == i1;
    if (i0) {goto B7;}
    i0 = l6;
    i1 = 4294967248u;
    i0 += i1;
    l7 = i0;
    i0 = l6;
    i1 = 4294967272u;
    i0 += i1;
    l3 = i0;
    l6 = i0;
    i0 = l7;
    i0 = i32_load((&M0), (u64)(i0));
    j0 = i64_load((&M0), (u64)(i0 + 8));
    j1 = l4;
    j0 ^= j1;
    j1 = 256ull;
    i0 = j0 >= j1;
    if (i0) {goto L9;}
  B8:;
  i0 = l0;
  i1 = l3;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = 4294967272u;
  l7 = i0;
  i0 = l3;
  i1 = l2;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  goto B4;
  B7:;
  i0 = l0;
  l3 = i0;
  B6:;
  i0 = 0u;
  i1 = 22883u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 4294967272u;
  l7 = i0;
  i0 = l3;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  l2 = i1;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  B5:;
  i0 = l3;
  i1 = l7;
  i0 += i1;
  l5 = i0;
  goto B3;
  B4:;
  i0 = l3;
  l6 = i0;
  L10: vm_checktime();
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i0 = l6;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    i1 = l7;
    i0 += i1;
    l0 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i0 = l0;
    i1 = l5;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B11;}
    i0 = l3;
    operator_delete_void__(i0);
    B11:;
    i0 = l6;
    i1 = 4294967288u;
    i0 += i1;
    i1 = l6;
    i2 = 16u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    i1 = 4294967280u;
    i0 += i1;
    i1 = l6;
    i2 = 8u;
    i1 += i2;
    j1 = i64_load((&M0), (u64)(i1));
    i64_store((&M0), (u64)(i0), j1);
    i0 = l2;
    i1 = l6;
    i2 = 24u;
    i1 += i2;
    l6 = i1;
    i0 = i0 != i1;
    if (i0) {goto L10;}
  i0 = l6;
  i1 = 4294967272u;
  i0 += i1;
  l5 = i0;
  i0 = p0;
  i1 = 28u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i1 = 24u;
  i0 += i1;
  i1 = l6;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B3:;
  L12: vm_checktime();
    i0 = l3;
    i1 = l7;
    i0 += i1;
    l3 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l6 = i0;
    i0 = l3;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    i0 = !(i0);
    if (i0) {goto B13;}
    i0 = l6;
    operator_delete_void__(i0);
    B13:;
    i0 = l5;
    i1 = l3;
    i0 = i0 != i1;
    if (i0) {goto L12;}
  B2:;
  i0 = p0;
  i1 = 28u;
  i0 += i1;
  i1 = l5;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  (*Z_envZ_db_remove_i64Z_vi)(i0);
  FUNC_EPILOGUE;
}

static void token_create(u64 p0, u64 p1, u64 p2) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  i0 = g0;
  i1 = 64u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l1 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l2 = j0;
  i0 = l0;
  i1 = 56u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 40), j1);
  i0 = l0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 48), j1);
  i0 = l0;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  eosio__token__create_eosio__name_const___eosio__asset_const__(i0, i1, i2);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void token_issue(u64 p0, u64 p1, u64 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  u64 l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 80u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 72u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 64), j1);
  i0 = p4;
  i1 = 4294967280u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = p4;
  i1 = 11u;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = p4;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 64), i1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  i1 = 1u;
  i0 |= i1;
  l1 = i0;
  i0 = p4;
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = p4;
  i1 = 16u;
  i0 += i1;
  i1 = 4294967280u;
  i0 &= i1;
  l2 = i0;
  i0 = operator_new_unsigned_int_(i0);
  l1 = i0;
  i0 = l0;
  i1 = l2;
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 64), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 72), i1);
  i0 = l0;
  i1 = p4;
  i32_store((&M0), (u64)(i0 + 68), i1);
  B2:;
  i0 = l1;
  i1 = p3;
  i2 = p4;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B1:;
  i0 = l1;
  i1 = p4;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l4 = j0;
  i0 = l0;
  i1 = 56u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = l4;
  i64_store((&M0), (u64)(i0 + 40), j1);
  i0 = l0;
  j1 = l3;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 48), j1);
  i0 = l0;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i3 = l0;
  i4 = 64u;
  i3 += i4;
  eosio__token__issue_eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const__(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 64));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 72));
  operator_delete_void__(i0);
  B4:;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  std____1____basic_string_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void token_transfer(u64 p0, u64 p1, u64 p2, u64 p3, u32 p4, u32 p5) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  u64 l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1;
  i0 = g0;
  i1 = 80u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 72u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 64), j1);
  i0 = p5;
  i1 = 4294967280u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = p5;
  i1 = 11u;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = p5;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 64), i1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  i1 = 1u;
  i0 |= i1;
  l1 = i0;
  i0 = p5;
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = p5;
  i1 = 16u;
  i0 += i1;
  i1 = 4294967280u;
  i0 &= i1;
  l2 = i0;
  i0 = operator_new_unsigned_int_(i0);
  l1 = i0;
  i0 = l0;
  i1 = l2;
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 64), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 72), i1);
  i0 = l0;
  i1 = p5;
  i32_store((&M0), (u64)(i0 + 68), i1);
  B2:;
  i0 = l1;
  i1 = p4;
  i2 = p5;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B1:;
  i0 = l1;
  i1 = p5;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l4 = j0;
  i0 = l0;
  i1 = 56u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = l4;
  i64_store((&M0), (u64)(i0 + 40), j1);
  i0 = l0;
  j1 = l3;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 48), j1);
  i0 = l0;
  j1 = p3;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 64u;
  i4 += i5;
  eosio__token__transfer_eosio__name_const___eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const__(i0, i1, i2, i3, i4);
  i0 = l0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 64));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 72));
  operator_delete_void__(i0);
  B4:;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  std____1____basic_string_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void token_open(u64 p0, u64 p1, u64 p2) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 64u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 56), j1);
  j0 = (*Z_envZ_current_receiverZ_jv)();
  p1 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l1 = j0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 40), j1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = l0;
  i3 = 56u;
  i2 += i3;
  i3 = l0;
  i4 = 8u;
  i3 += i4;
  eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const__(i0, i1, i2, i3);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void token_retire(u64 p0, u64 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  u64 l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  i0 = g0;
  i1 = 64u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 56u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 48), j1);
  i0 = p3;
  i1 = 4294967280u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = p3;
  i1 = 11u;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = p3;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 48), i1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  i1 = 1u;
  i0 |= i1;
  l1 = i0;
  i0 = p3;
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = p3;
  i1 = 16u;
  i0 += i1;
  i1 = 4294967280u;
  i0 &= i1;
  l2 = i0;
  i0 = operator_new_unsigned_int_(i0);
  l1 = i0;
  i0 = l0;
  i1 = l2;
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 48), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 56), i1);
  i0 = l0;
  i1 = p3;
  i32_store((&M0), (u64)(i0 + 52), i1);
  B2:;
  i0 = l1;
  i1 = p2;
  i2 = p3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B1:;
  i0 = l1;
  i1 = p3;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l4 = j0;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = l4;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = l3;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = l0;
  i2 = l0;
  i3 = 48u;
  i2 += i3;
  eosio__token__retire_eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const__(i0, i1, i2);
  i0 = l0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 48));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 56));
  operator_delete_void__(i0);
  B4:;
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  std____1____basic_string_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void token_close(u64 p0, u64 p1) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 40), j1);
  j0 = (*Z_envZ_current_receiverZ_jv)();
  p1 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l1 = j0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = l0;
  i3 = 40u;
  i2 += i3;
  eosio__token__close_eosio__name_const___eosio__symbol_const__(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u64 token_get_balance(u64 p0, u32 p1) {
  u32 l0 = 0, l3 = 0, l4 = 0, l5 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l1 = j0;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  j0 = 0ull;
  l2 = j0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = p1;
  i0 = strlen_0(i0);
  l3 = i0;
  i1 = 8u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = 0u;
  i1 = 20463u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  goto B1;
  B2:;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  j0 = 0ull;
  l2 = j0;
  L3: vm_checktime();
    i0 = p1;
    i1 = l3;
    i0 += i1;
    i1 = 4294967295u;
    i0 += i1;
    l4 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    i1 = 4294967231u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 26u;
    i0 = i0 < i1;
    if (i0) {goto B4;}
    i0 = 0u;
    i1 = 20681u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    B4:;
    j0 = l2;
    j1 = 8ull;
    j0 <<= (j1 & 63);
    i1 = l5;
    j1 = (u64)(i1);
    j2 = 56ull;
    j1 <<= (j2 & 63);
    j2 = 56ull;
    j1 = (u64)((s64)j1 >> (j2 & 63));
    j0 |= j1;
    l2 = j0;
    i0 = l3;
    i1 = 4294967295u;
    i0 += i1;
    l3 = i0;
    if (i0) {goto L3;}
  j0 = l2;
  j1 = 72057594037927935ull;
  j0 &= j1;
  l2 = j0;
  B0:;
  j0 = l1;
  j1 = p0;
  j2 = 3607749779137757184ull;
  j3 = l2;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l3 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l3;
  i0 = eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___load_object_by_primary_iterator_int__const(i0, i1);
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = 0u;
  i1 = 20837u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B9:;
  i0 = l3;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  l4 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i1 = l4;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  L10: vm_checktime();
    i0 = l3;
    i1 = 4294967272u;
    i0 += i1;
    l3 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i0 = l3;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    i0 = !(i0);
    if (i0) {goto B11;}
    i0 = l5;
    operator_delete_void__(i0);
    B11:;
    i0 = l4;
    i1 = l3;
    i0 = i0 != i1;
    if (i0) {goto L10;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  goto B5;
  B8:;
  j0 = 0ull;
  l2 = j0;
  B7:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  j0 = l2;
  goto Bfunc;
  B6:;
  i0 = l4;
  l3 = i0;
  B5:;
  i0 = p1;
  i1 = l4;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  operator_delete_void__(i0);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  j0 = l2;
  Bfunc:;
  FUNC_EPILOGUE;
  return j0;
}

static void token_set_balance(u64 p0, u64 p1, u32 p2) {
  u32 l0 = 0, l3 = 0, l4 = 0, l5 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  u64 j0, j1, j2, j3, j4, j5;
  i0 = g0;
  i1 = 96u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 48), j1);
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l1 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l2 = j0;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = p2;
  i0 = strlen_0(i0);
  l3 = i0;
  i1 = 8u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 20463u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  goto B2;
  B3:;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  j0 = 0ull;
  p1 = j0;
  L4: vm_checktime();
    i0 = p2;
    i1 = l3;
    i0 += i1;
    i1 = 4294967295u;
    i0 += i1;
    l4 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    i1 = 4294967231u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 26u;
    i0 = i0 < i1;
    if (i0) {goto B5;}
    i0 = 0u;
    i1 = 20681u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    B5:;
    j0 = p1;
    j1 = 8ull;
    j0 <<= (j1 & 63);
    i1 = l5;
    j1 = (u64)(i1);
    j2 = 56ull;
    j1 <<= (j2 & 63);
    j2 = 56ull;
    j1 = (u64)((s64)j1 >> (j2 & 63));
    j0 |= j1;
    p1 = j0;
    i0 = l3;
    i1 = 4294967295u;
    i0 += i1;
    l3 = i0;
    if (i0) {goto L4;}
  j0 = p1;
  j1 = 8ull;
  j0 <<= (j1 & 63);
  j1 = 4ull;
  j0 |= j1;
  p1 = j0;
  goto B0;
  B1:;
  j0 = 4ull;
  p1 = j0;
  B0:;
  j0 = l2;
  j1 = p0;
  j2 = 3607749779137757184ull;
  j3 = p1;
  j4 = 8ull;
  j3 >>= (j4 & 63);
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l3 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l3;
  i0 = eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___load_object_by_primary_iterator_int__const(i0, i1);
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = 0u;
  i1 = 20837u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B9:;
  i0 = l0;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 64), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l3;
  i2 = l0;
  i3 = 64u;
  i2 += i3;
  void_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___modify_token_set_balance____8__eosio__token__account_const___eosio__name__token_set_balance____8___(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  l4 = i0;
  if (i0) {goto B7;}
  goto B6;
  B8:;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i0 = j0 == j1;
  if (i0) {goto B10;}
  i0 = 0u;
  i1 = 21355u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B10:;
  i0 = 32u;
  i0 = operator_new_unsigned_int_(i0);
  l3 = i0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l3;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l3;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 48));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  i1 = l3;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = l3;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 88), j1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  i1 = 8u;
  i0 |= i1;
  i1 = l0;
  i2 = 88u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l3;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 3607749779137757184ull;
  j3 = l1;
  i4 = l3;
  j4 = i64_load((&M0), (u64)(i4 + 8));
  j5 = 8ull;
  j4 >>= (j5 & 63);
  p1 = j4;
  i5 = l0;
  i6 = 64u;
  i5 += i6;
  i6 = 16u;
  i1 = (*Z_envZ_db_store_i64Z_ijjjjii)(j1, j2, j3, j4, i5, i6);
  l4 = i1;
  i32_store((&M0), (u64)(i0 + 20), i1);
  j0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 16u;
  i1 += i2;
  l5 = i1;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 < j1;
  if (i0) {goto B11;}
  i0 = l5;
  j1 = p1;
  j2 = 1ull;
  j1 += j2;
  i64_store((&M0), (u64)(i0), j1);
  B11:;
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 88), i1);
  i0 = l0;
  i1 = l3;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 8ull;
  j1 >>= (j2 & 63);
  p1 = j1;
  i64_store((&M0), (u64)(i0 + 64), j1);
  i0 = l0;
  i1 = l4;
  i32_store((&M0), (u64)(i0 + 60), i1);
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l5 = i0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 32u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 >= i1;
  if (i0) {goto B14;}
  i0 = l5;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l5;
  i1 = l4;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 88), i1);
  i0 = l5;
  i1 = l3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l5;
  i2 = 24u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 88));
  l3 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 88), i1);
  i0 = l3;
  if (i0) {goto B13;}
  goto B12;
  B14:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = l0;
  i2 = 88u;
  i1 += i2;
  i2 = l0;
  i3 = 64u;
  i2 += i3;
  i3 = l0;
  i4 = 60u;
  i3 += i4;
  void_std____1__vector_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_______unsigned_long_long_____int____(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 88));
  l3 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 88), i1);
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B12;}
  B13:;
  i0 = l3;
  operator_delete_void__(i0);
  B12:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  l4 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  B7:;
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i1 = l4;
  i0 = i0 == i1;
  if (i0) {goto B16;}
  L17: vm_checktime();
    i0 = l3;
    i1 = 4294967272u;
    i0 += i1;
    l3 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i0 = l3;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    i0 = !(i0);
    if (i0) {goto B18;}
    i0 = l5;
    operator_delete_void__(i0);
    B18:;
    i0 = l4;
    i1 = l3;
    i0 = i0 != i1;
    if (i0) {goto L17;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  goto B15;
  B16:;
  i0 = l4;
  l3 = i0;
  B15:;
  i0 = p2;
  i1 = l4;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  operator_delete_void__(i0);
  B6:;
  i0 = l0;
  i1 = 96u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void void_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___modify_token_set_balance____8__eosio__token__account_const___eosio__name__token_set_balance____8___(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  l1 = i0;
  i0 = l0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 21692u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 == j1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 21812u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B1:;
  i0 = p1;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l2 = j0;
  i0 = l0;
  p2 = i0;
  i1 = 4294967280u;
  i0 += i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p2;
  i1 = 4294967288u;
  i0 += i1;
  i1 = l1;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  j1 = 0ull;
  i2 = l0;
  i3 = 16u;
  (*Z_envZ_db_update_i64Z_vijii)(i0, j1, i2, i3);
  j0 = l2;
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l2 = j0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i0 = j0 < j1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  j1 = l2;
  j2 = 1ull;
  j1 += j2;
  i64_store((&M0), (u64)(i0), j1);
  B2:;
  i0 = l1;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void void_boost__pfr__detail__for_each_field_impl_boost__pfr__detail__sequence_tuple__tuple_eosio__asset___eosio__asset___eosio__name____eosio__datastream_char_const____eosio__operator___eosio__datastream_char_const____eosio__token__currency_stats___void__0__eosio__datastream_char_const_____eosio__token__currency_stats_____lambda__eosio__datastream_char_const______0u__1u__2u__eosio__datastream_char_const_____eosio__token__currency_stats____std____1__integer_sequence_unsigned_int__0u__1u__2u___std____1__integral_constant_bool__false__(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l3 = i1;
  i0 -= i1;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 21243u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  B0:;
  i0 = l1;
  i1 = l3;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  l4 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l2;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l4;
  i0 -= i1;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 21243u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  B1:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l4;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l3;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l3 = i1;
  i0 -= i1;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = 0u;
  i1 = 21243u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  B2:;
  i0 = l1;
  i1 = l3;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  l4 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l2;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l4;
  i0 -= i1;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 21243u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  B3:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l4;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l3;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l3 = i1;
  i0 -= i1;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = 0u;
  i1 = 21243u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  B4:;
  i0 = p0;
  i1 = l3;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void __cxa_finalize(u32 p0) {
  FUNC_PROLOGUE;
  FUNC_EPILOGUE;
}

static void vm_send_inline(u64 p0, u64 p1, u64 p2, u64 p3, u32 p4, u32 p5) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  i0 = g0;
  i1 = 96u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = p3;
  i64_store((&M0), (u64)(i0 + 56), j1);
  i0 = l0;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 48), j1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  l1 = i0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  void_std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level_______emplace_back_slow_path_eosio__permission_level___eosio__permission_level____(i0, i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 36));
  l1 = i1;
  i0 -= i1;
  l2 = i0;
  i1 = p5;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  l1 = i0;
  i1 = p5;
  i2 = l2;
  i1 -= i2;
  std____1__vector_char__std____1__allocator_char_______append_unsigned_int_(i0, i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B0;
  B1:;
  i0 = l2;
  i1 = p5;
  i0 = i0 <= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = l1;
  i2 = p5;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = l1;
  i1 = p4;
  i2 = p5;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 72), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 64), j1);
  i0 = 16u;
  p5 = i0;
  i0 = l0;
  i1 = 28u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 16u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  p4 = i1;
  i0 -= i1;
  l2 = i0;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(i0);
  p1 = j0;
  L2: vm_checktime();
    i0 = p5;
    i1 = 1u;
    i0 += i1;
    p5 = i0;
    j0 = p1;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    p1 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L2;}
  i0 = p4;
  i1 = l1;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = l2;
  i1 = 4294967280u;
  i0 &= i1;
  i1 = p5;
  i0 += i1;
  p5 = i0;
  B3:;
  i0 = p5;
  i1 = l0;
  i2 = 40u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i0 += i1;
  i1 = l0;
  i2 = 36u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  p4 = i1;
  i0 -= i1;
  p5 = i0;
  i0 = l1;
  i1 = p4;
  i0 -= i1;
  j0 = (u64)(i0);
  p1 = j0;
  L4: vm_checktime();
    i0 = p5;
    i1 = 1u;
    i0 += i1;
    p5 = i0;
    j0 = p1;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    p1 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L4;}
  i0 = p5;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  i1 = p5;
  std____1__vector_char__std____1__allocator_char_______append_unsigned_int_(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 68));
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 64));
  p5 = i0;
  goto B5;
  B6:;
  i0 = 0u;
  l1 = i0;
  i0 = 0u;
  p5 = i0;
  B5:;
  i0 = l0;
  i1 = p5;
  i32_store((&M0), (u64)(i0 + 84), i1);
  i0 = l0;
  i1 = p5;
  i32_store((&M0), (u64)(i0 + 80), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 88), i1);
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__action_const__(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 64));
  p5 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 68));
  i2 = p5;
  i1 -= i2;
  (*Z_envZ_send_inlineZ_vii)(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 64));
  p5 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l0;
  i1 = p5;
  i32_store((&M0), (u64)(i0 + 68), i1);
  i0 = p5;
  operator_delete_void__(i0);
  B7:;
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p5 = i0;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = p5;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p5;
  operator_delete_void__(i0);
  B8:;
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p5 = i0;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l0;
  i1 = 28u;
  i0 += i1;
  i1 = p5;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p5;
  operator_delete_void__(i0);
  B9:;
  i0 = l0;
  i1 = 96u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void void_std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level_______emplace_back_slow_path_eosio__permission_level___eosio__permission_level____(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i0 -= i1;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  l2 = i0;
  i1 = 1u;
  i0 += i1;
  l3 = i0;
  i1 = 268435456u;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  i0 = 268435455u;
  l4 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l1;
  i0 -= i1;
  l5 = i0;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = 134217726u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = l3;
  i1 = l5;
  i2 = 3u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  l4 = i1;
  i2 = l4;
  i3 = l3;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l4;
  i1 = 268435456u;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  B4:;
  i0 = l4;
  i1 = 4u;
  i0 <<= (i1 & 31);
  i0 = operator_new_unsigned_int_(i0);
  l3 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B0;
  B3:;
  i0 = 0u;
  l4 = i0;
  i0 = 0u;
  l3 = i0;
  goto B0;
  B2:;
  i0 = p0;
  std____1____vector_base_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  B1:;
  (*Z_envZ_abortZ_vv)();
  UNREACHABLE;
  B0:;
  i0 = l3;
  i1 = l2;
  i2 = 4u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l2 = i0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l2;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l2;
  i1 = l0;
  i2 = l1;
  i1 -= i2;
  p1 = i1;
  i0 -= i1;
  l0 = i0;
  i0 = l3;
  i1 = l4;
  i2 = 4u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l4 = i0;
  i0 = l2;
  i1 = 16u;
  i0 += i1;
  l2 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B5;}
  i0 = l0;
  i1 = l1;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  B5:;
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l4;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l1;
  operator_delete_void__(i0);
  B6:;
  FUNC_EPILOGUE;
}

static void std____1__vector_char__std____1__allocator_char_______append_unsigned_int_(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l1 = i1;
  i0 -= i1;
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B4;}
  i0 = l1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l2 = i1;
  i0 -= i1;
  l3 = i0;
  i1 = p1;
  i0 += i1;
  l4 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B2;}
  i0 = 2147483647u;
  l5 = i0;
  i0 = l0;
  i1 = l2;
  i0 -= i1;
  l0 = i0;
  i1 = 1073741822u;
  i0 = i0 > i1;
  if (i0) {goto B5;}
  i0 = l4;
  i1 = l0;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l0 = i1;
  i2 = l0;
  i3 = l4;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  l5 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  B5:;
  i0 = l5;
  i0 = operator_new_unsigned_int_(i0);
  l0 = i0;
  goto B1;
  B4:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  L6: vm_checktime();
    i0 = l1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    l1 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    if (i0) {goto L6;}
    goto B0;
  B3:;
  i0 = 0u;
  l5 = i0;
  i0 = 0u;
  l0 = i0;
  goto B1;
  B2:;
  i0 = p0;
  std____1____vector_base_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  B1:;
  i0 = l0;
  i1 = l5;
  i0 += i1;
  l5 = i0;
  i0 = l1;
  i1 = p1;
  i0 += i1;
  i1 = l2;
  i0 -= i1;
  l2 = i0;
  i0 = l0;
  i1 = l3;
  i0 += i1;
  l3 = i0;
  l1 = i0;
  L7: vm_checktime();
    i0 = l1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    if (i0) {goto L7;}
  i0 = l0;
  i1 = l2;
  i0 += i1;
  l2 = i0;
  i0 = l3;
  i1 = p0;
  i2 = 4u;
  i1 += i2;
  l4 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2));
  p1 = i2;
  i1 -= i2;
  l1 = i1;
  i0 -= i1;
  l0 = i0;
  i0 = l1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B8;}
  i0 = l0;
  i1 = p1;
  i2 = l1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  B8:;
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l5;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  operator_delete_void__(i0);
  goto Bfunc;
  B0:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__action_const__(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l0 = i1;
  i0 -= i1;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 12660u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B0:;
  i0 = l0;
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l1;
  i0 -= i1;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 12660u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  B1:;
  i0 = l1;
  i1 = l2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 16u;
  i1 += i2;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__permission_level__eosio__datastream_char_____std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level____const__(i0, i1);
  i1 = p1;
  i2 = 28u;
  i1 += i2;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____std____1__vector_char__std____1__allocator_char____const__(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static void vm_send_context_free_inline(u64 p0, u64 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  l1 = i0;
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i1 = p3;
  std____1__vector_char__std____1__allocator_char_______append_unsigned_int_(i0, i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  goto B0;
  B1:;
  i0 = 0u;
  l2 = i0;
  B0:;
  i0 = l2;
  i1 = p2;
  i2 = p3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  eosio__action__send_context_free___const(i0);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  p3 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  operator_delete_void__(i0);
  B2:;
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p3 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 28u;
  i0 += i1;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  operator_delete_void__(i0);
  B3:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void eosio__action__send_context_free___const(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  u64 l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 20u;
  i0 += i1;
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  l3 = i0;
  i0 = l2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 13442u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  B0:;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l3;
  i1 = l2;
  i0 -= i1;
  l4 = i0;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(i0);
  l5 = j0;
  i0 = 16u;
  l1 = i0;
  L1: vm_checktime();
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    j0 = l5;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    l5 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L1;}
  i0 = l2;
  i1 = l3;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = l4;
  i1 = 4294967280u;
  i0 &= i1;
  i1 = l1;
  i0 += i1;
  l1 = i0;
  B2:;
  i0 = l1;
  i1 = p0;
  i2 = 32u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l2 = i1;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 28));
  l3 = i1;
  i0 -= i1;
  l1 = i0;
  i0 = l2;
  i1 = l3;
  i0 -= i1;
  j0 = (u64)(i0);
  l5 = j0;
  L3: vm_checktime();
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    j0 = l5;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    l5 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L3;}
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = l0;
  i1 = l1;
  std____1__vector_char__std____1__allocator_char_______append_unsigned_int_(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B4;
  B5:;
  i0 = 0u;
  l2 = i0;
  i0 = 0u;
  l1 = i0;
  B4:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p0;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__action_const__(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = l1;
  i1 -= i2;
  (*Z_envZ_send_context_free_inlineZ_vii)(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  operator_delete_void__(i0);
  B6:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 write_hex(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p3;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l0 = i0;
  i1 = p1;
  i0 = i0 <= i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 11310u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B1;}
  L2: vm_checktime();
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    i1 = p2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    p1 = i1;
    i2 = 15u;
    i1 &= i2;
    i2 = 9834u;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = p1;
    i2 = 4u;
    i1 >>= (i2 & 31);
    i2 = 9834u;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 2u;
    i0 += i1;
    p0 = i0;
    i0 = p2;
    i1 = 1u;
    i0 += i1;
    p2 = i0;
    i0 = p3;
    i1 = 4294967295u;
    i0 += i1;
    p3 = i0;
    if (i0) {goto L2;}
  B1:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 write_str(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p3;
  l0 = i0;
  L1: vm_checktime();
    i0 = p0;
    i1 = p2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i0 = p2;
    i1 = 1u;
    i0 += i1;
    p2 = i0;
    i0 = l0;
    i1 = 4294967295u;
    i0 += i1;
    l0 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = p3;
  FUNC_EPILOGUE;
  return i0;
}

static u64 s2n(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l3 = 0;
  u64 l2 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1, j2;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i0 = p1;
  j0 = (u64)(i0);
  l2 = j0;
  i0 = 0u;
  l3 = i0;
  j0 = 0ull;
  l4 = j0;
  j0 = 4294967355ull;
  l5 = j0;
  j0 = 0ull;
  l6 = j0;
  L4: vm_checktime();
    i0 = l3;
    p1 = i0;
    j0 = l4;
    j1 = l2;
    i0 = j0 >= j1;
    if (i0) {goto B2;}
    j0 = l4;
    j1 = 11ull;
    i0 = j0 > j1;
    if (i0) {goto B2;}
    i0 = l0;
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 24u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l3 = i0;
    i0 = l0;
    i1 = 4294967199u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 25u;
    i0 = i0 > i1;
    if (i0) {goto B6;}
    i0 = l3;
    i1 = 4294967205u;
    i0 += i1;
    j0 = (u64)(s64)(s32)(i0);
    l7 = j0;
    goto B5;
    B6:;
    j0 = 0ull;
    l7 = j0;
    i0 = l0;
    i1 = 4294967247u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 4u;
    i0 = i0 > i1;
    if (i0) {goto B5;}
    i0 = l3;
    i1 = 4294967248u;
    i0 += i1;
    j0 = (u64)(s64)(s32)(i0);
    l7 = j0;
    B5:;
    j0 = l7;
    j1 = 31ull;
    j0 &= j1;
    j1 = l5;
    j2 = 4294967295ull;
    j1 &= j2;
    j0 <<= (j1 & 63);
    j1 = l6;
    j0 |= j1;
    l6 = j0;
    j0 = l5;
    j1 = 4294967291ull;
    j0 += j1;
    l5 = j0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    j0 = l4;
    j1 = 1ull;
    j0 += j1;
    l4 = j0;
    i0 = l1;
    i1 = p1;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l0 = i0;
    if (i0) {goto L4;}
  i0 = l3;
  i1 = 12u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  goto B0;
  B3:;
  j0 = 0ull;
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = 12u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  j0 = l6;
  goto Bfunc;
  B0:;
  i0 = p0;
  i0 = i32_load8_s((&M0), (u64)(i0 + 12));
  l0 = i0;
  i1 = 4294967199u;
  i0 += i1;
  i1 = 255u;
  i0 &= i1;
  i1 = 25u;
  i0 = i0 > i1;
  if (i0) {goto B7;}
  i0 = l0;
  i1 = 4294967205u;
  i0 += i1;
  j0 = (u64)(s64)(s32)(i0);
  j1 = 15ull;
  j0 &= j1;
  j1 = l6;
  j0 |= j1;
  goto Bfunc;
  B7:;
  j0 = 0ull;
  l4 = j0;
  i0 = l0;
  i1 = 4294967247u;
  i0 += i1;
  i1 = 255u;
  i0 &= i1;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 4294967248u;
  i0 += i1;
  j0 = (u64)(s64)(s32)(i0);
  l4 = j0;
  B8:;
  j0 = l4;
  j1 = 15ull;
  j0 &= j1;
  j1 = l6;
  j0 |= j1;
  Bfunc:;
  FUNC_EPILOGUE;
  return j0;
}

static u32 n2s(u64 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i4, i5;
  u64 j0, j1, j2, j3;
  i0 = 0u;
  l0 = i0;
  j0 = p0;
  i0 = !(j0);
  if (i0) {goto B0;}
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  l1 = i0;
  L1: vm_checktime();
    i0 = p1;
    i1 = l1;
    i0 += i1;
    j1 = p0;
    j2 = 17870283321406128128ull;
    j1 &= j2;
    j2 = 60ull;
    j3 = 59ull;
    i4 = l1;
    i5 = 12u;
    i4 = i4 == i5;
    j2 = i4 ? j2 : j3;
    j1 >>= (j2 & 63);
    i1 = (u32)(j1);
    i2 = 16460u;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    j0 = p0;
    j1 = 5ull;
    j0 <<= (j1 & 63);
    p0 = j0;
    i0 = !(j0);
    if (i0) {goto B0;}
    i0 = l1;
    i1 = 11u;
    i0 = i0 > i1;
    if (i0) {goto B0;}
    i0 = l0;
    l1 = i0;
    i0 = l0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 db_store_i256(u64 p0, u64 p1, u64 p2, u32 p3, u32 p4, u32 p5, u32 p6) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 23010u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static void db_update_i256(u32 p0, u64 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 23024u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  FUNC_EPILOGUE;
}

static void db_remove_i256(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 23039u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  FUNC_EPILOGUE;
}

static u32 db_get_i256(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 23054u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 db_find_i256(u64 p0, u64 p1, u64 p2, u32 p3, u32 p4) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 23066u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 db_previous_i256(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 23079u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 db_next_i256(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 23096u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 db_end_i256(u64 p0, u64 p1, u64 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 23109u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 db_lowerbound_i256(u64 p0, u64 p1, u64 p2, u32 p3, u32 p4) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 23121u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 db_upperbound_i256(u64 p0, u64 p1, u64 p2, u32 p3, u32 p4) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 23140u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 db_get_table_row_count(u64 p0, u64 p1, u64 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 23159u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static void apply(u64 p0, u64 p1, u64 p2) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1, j2;
  __wasm_call_ctors();
  j0 = p0;
  j1 = p1;
  j2 = p2;
  eosio_apply(j0, j1, j2);
  i0 = 0u;
  __cxa_finalize(i0);
  FUNC_EPILOGUE;
}

static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__permission_level__eosio__datastream_char_____std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level____const__(u32 p0, u32 p1) {
  u32 l0 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i0 -= i1;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(i0);
  l1 = j0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  L0: vm_checktime();
    j0 = l1;
    i0 = (u32)(j0);
    l4 = i0;
    i0 = l0;
    j1 = l1;
    j2 = 7ull;
    j1 >>= (j2 & 63);
    l1 = j1;
    j2 = 0ull;
    i1 = j1 != j2;
    l5 = i1;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i2 = l4;
    i3 = 127u;
    i2 &= i3;
    i1 |= i2;
    i32_store8((&M0), (u64)(i0 + 15), i1);
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B1;}
    i0 = 0u;
    i1 = 12660u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    B1:;
    i0 = l2;
    i1 = l0;
    i2 = 15u;
    i1 += i2;
    i2 = 1u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    l2 = i0;
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    l2 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    if (i0) {goto L0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l5 = i0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  L3: vm_checktime();
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 7u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B4;}
    i0 = 0u;
    i1 = 12660u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    B4:;
    i0 = l2;
    i1 = l5;
    i2 = 8u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 8u;
    i1 += i2;
    l2 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 7u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B5;}
    i0 = 0u;
    i1 = 12660u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    B5:;
    i0 = l2;
    i1 = l5;
    i2 = 8u;
    i1 += i2;
    i2 = 8u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 8u;
    i1 += i2;
    l2 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    i1 = 16u;
    i0 += i1;
    l5 = i0;
    i1 = p1;
    i0 = i0 != i1;
    if (i0) {goto L3;}
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____std____1__vector_char__std____1__allocator_char____const__(u32 p0, u32 p1) {
  u32 l0 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i0 -= i1;
  j0 = (u64)(i0);
  l1 = j0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  L0: vm_checktime();
    j0 = l1;
    i0 = (u32)(j0);
    l5 = i0;
    i0 = l0;
    j1 = l1;
    j2 = 7ull;
    j1 >>= (j2 & 63);
    l1 = j1;
    j2 = 0ull;
    i1 = j1 != j2;
    l6 = i1;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i2 = l5;
    i3 = 127u;
    i2 &= i3;
    i1 |= i2;
    i32_store8((&M0), (u64)(i0 + 15), i1);
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B1;}
    i0 = 0u;
    i1 = 12660u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    B1:;
    i0 = l2;
    i1 = l0;
    i2 = 15u;
    i1 += i2;
    i2 = 1u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    l2 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    if (i0) {goto L0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l2;
  i0 -= i1;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2));
  l5 = i2;
  i1 -= i2;
  l4 = i1;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B2;}
  i0 = 0u;
  i1 = 12660u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  B2:;
  i0 = l2;
  i1 = l5;
  i2 = l4;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l4;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 get_current_memory(void) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5148));
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5152));
  i0 += i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 malloc_0(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5148));
  l1 = i0;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 0u;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 7u;
  i1 += i2;
  i2 = 4294967288u;
  i1 &= i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 5148), i1);
  B1:;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5152));
  l2 = i0;
  i0 = M0.pages;
  l3 = i0;
  i1 = 16u;
  i0 <<= (i1 & 31);
  i1 = l1;
  i2 = l2;
  i1 += i2;
  l1 = i1;
  i2 = p0;
  i3 = 7u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  p0 = i2;
  i1 += i2;
  l4 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  i0 = l4;
  i1 = 65535u;
  i0 += i1;
  i1 = 16u;
  i0 >>= (i1 & 31);
  i1 = l3;
  i0 -= i1;
  i0 = wasm_rt_grow_memory((&M0), i0);
  i1 = 4294967295u;
  i0 = i0 != i1;
  i1 = 9851u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5148));
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5152));
  l2 = i1;
  i0 += i1;
  l1 = i0;
  B2:;
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5156), i1);
  i0 = 0u;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 5160), i1);
  i0 = 0u;
  i1 = l2;
  i2 = p0;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 5152), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 4294967295u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void free_0(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5160));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  goto Bfunc;
  B0:;
  i0 = 0u;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5152));
  i2 = 0u;
  i2 = i32_load((&M0), (u64)(i2 + 5156));
  i1 -= i2;
  i32_store((&M0), (u64)(i0 + 5152), i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_hal_stdout_tx_strn_cooked(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  L1: vm_checktime();
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 10u;
    i0 = i0 != i1;
    if (i0) {goto B2;}
    i0 = 9876u;
    i1 = 1u;
    mp_hal_stdout_tx_strn(i0, i1);
    B2:;
    i0 = p0;
    i1 = 1u;
    mp_hal_stdout_tx_strn(i0, i1);
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i0 = p1;
    if (i0) {goto L1;}
  B0:;
  FUNC_EPILOGUE;
}

static u32 __stdio_close(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 __stdio_write(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  i2 = l0;
  i1 -= i2;
  (*Z_envZ_prints_lZ_vii)(i0, i1);
  i0 = p1;
  i1 = p2;
  (*Z_envZ_prints_lZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  i1 = p2;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 28));
  i0 -= i1;
  FUNC_EPILOGUE;
  return i0;
}

static u64 __stdio_seek(u32 p0, u64 p1, u32 p2) {
  FUNC_PROLOGUE;
  u64 j0;
  j0 = 18446744073709551615ull;
  FUNC_EPILOGUE;
  return j0;
}

static u32 _fflush(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 76));
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B4;}
  i0 = p0;
  i0 = __lockfile(i0);
  l0 = i0;
  B4:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 28));
  i0 = i0 <= i1;
  if (i0) {goto B5;}
  i0 = p0;
  i1 = 0u;
  i2 = 0u;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 36));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 1, i3, i0, i1, i2);
  i0 = p0;
  i1 = 20u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B2;}
  B5:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = l1;
  i2 = l2;
  i1 -= i2;
  j1 = (u64)(s64)(s32)(i1);
  i2 = 1u;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 40));
  j0 = CALL_INDIRECT(T0, u64 (*)(u32, u64, u32), 2, i3, i0, j1, i2);
  B6:;
  i0 = p0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 28u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B1;
  B3:;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5144));
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5144));
  i0 = _fflush(i0);
  l3 = i0;
  B7:;
  i0 = __ofl_lock();
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B8;}
  L9: vm_checktime();
    i0 = 0u;
    l0 = i0;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0 + 76));
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B10;}
    i0 = p0;
    i0 = __lockfile(i0);
    l0 = i0;
    B10:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0 + 20));
    l1 = i0;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1 + 28));
    l2 = i1;
    i0 = i0 <= i1;
    if (i0) {goto B11;}
    i0 = 0u;
    l4 = i0;
    i0 = p0;
    i1 = 76u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B12;}
    i0 = p0;
    i0 = __lockfile(i0);
    l4 = i0;
    i0 = p0;
    i1 = 28u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    i0 = p0;
    i1 = 20u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    B12:;
    i0 = l1;
    i1 = l2;
    i0 = i0 <= i1;
    if (i0) {goto B15;}
    i0 = p0;
    i1 = 0u;
    i2 = 0u;
    i3 = p0;
    i3 = i32_load((&M0), (u64)(i3 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 1, i3, i0, i1, i2);
    i0 = p0;
    i1 = 20u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    if (i0) {goto B15;}
    i0 = 4294967295u;
    l1 = i0;
    i0 = l4;
    if (i0) {goto B14;}
    goto B13;
    B15:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    l1 = i0;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1 + 8));
    l2 = i1;
    i0 = i0 >= i1;
    if (i0) {goto B16;}
    i0 = p0;
    i1 = l1;
    i2 = l2;
    i1 -= i2;
    j1 = (u64)(s64)(s32)(i1);
    i2 = 1u;
    i3 = p0;
    i3 = i32_load((&M0), (u64)(i3 + 40));
    j0 = CALL_INDIRECT(T0, u64 (*)(u32, u64, u32), 2, i3, i0, j1, i2);
    B16:;
    i0 = p0;
    j1 = 0ull;
    i64_store((&M0), (u64)(i0 + 16), j1);
    i0 = 0u;
    l1 = i0;
    i0 = p0;
    i1 = 28u;
    i0 += i1;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    j1 = 0ull;
    i64_store((&M0), (u64)(i0), j1);
    i0 = l4;
    i0 = !(i0);
    if (i0) {goto B13;}
    B14:;
    i0 = p0;
    __unlockfile(i0);
    B13:;
    i0 = l1;
    i1 = l3;
    i0 |= i1;
    l3 = i0;
    B11:;
    i0 = l0;
    i0 = !(i0);
    if (i0) {goto B17;}
    i0 = p0;
    __unlockfile(i0);
    B17:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0 + 56));
    p0 = i0;
    if (i0) {goto L9;}
  B8:;
  __ofl_unlock();
  i0 = l3;
  goto Bfunc;
  B2:;
  i0 = 4294967295u;
  l1 = i0;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  __unlockfile(i0);
  B0:;
  i0 = l1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void __assert_fail(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p3;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 38752));
  i1 = 9878u;
  i2 = l0;
  i0 = _fprintf(i0, i1, i2);
  i0 = 0u;
  i0 = _fflush(i0);
  (*Z_envZ_abortZ_vv)();
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static void mpz_init_zero(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  FUNC_EPILOGUE;
}

static void mpz_init_from_int(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = 0u;
  i2 = 4u;
  i1 = m_realloc(i1, i2);
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  l2 = i1;
  i2 = 8u;
  i1 |= i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = l0;
  i2 = 10u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  goto B1;
  B2:;
  i0 = p0;
  i1 = l2;
  i2 = 9u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  i1 = p1;
  i0 -= i1;
  p1 = i0;
  B1:;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  L3: vm_checktime();
    i0 = l1;
    i1 = p1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = p1;
    i1 = 16u;
    i0 >>= (i1 & 31);
    p1 = i0;
    if (i0) {goto L3;}
  B0:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mpz_init_fixed_from_int(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  l1 = i1;
  i2 = 2u;
  i1 |= i2;
  p2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 7u;
  i0 = i0 <= i1;
  if (i0) {goto B0;}
  i0 = p3;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B3;}
  i0 = p0;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  goto B2;
  B3:;
  i0 = p0;
  i1 = l1;
  i2 = 3u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  i1 = p3;
  i0 -= i1;
  p3 = i0;
  B2:;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  L4: vm_checktime();
    i0 = p1;
    i1 = p3;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = p3;
    i1 = 16u;
    i0 >>= (i1 & 31);
    p3 = i0;
    if (i0) {goto L4;}
  B1:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mpz_deinit(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  m_free(i0);
  B0:;
  FUNC_EPILOGUE;
}

static void mpz_set_from_ll(u32 p0, u64 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 15u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  B3:;
  i0 = l0;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i2 = 8u;
  i1 = m_realloc(i1, i2);
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = 16u;
  i1 |= i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B2:;
  j0 = p1;
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B5;}
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p0;
  i1 = l0;
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  j0 = 0ull;
  j1 = p1;
  j0 -= j1;
  p1 = j0;
  i0 = !(j0);
  i0 = !(i0);
  if (i0) {goto B4;}
  goto B0;
  B5:;
  i0 = p0;
  i1 = l0;
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  j0 = p1;
  i0 = !(j0);
  if (i0) {goto B0;}
  B4:;
  L6: vm_checktime();
    i0 = l1;
    j1 = p1;
    i64_store16((&M0), (u64)(i0), j1);
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    j0 = p1;
    j1 = 16ull;
    j0 >>= (j1 & 63);
    p1 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L6;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mpz_set_from_float(u32 p0, f64 p1) {
  u32 l0 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2, j3;
  f64 d2;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l0 = i1;
  i2 = 4294967294u;
  i1 &= i2;
  d2 = p1;
  j2 = i64_reinterpret_f64(d2);
  l1 = j2;
  j3 = 63ull;
  j2 >>= (j3 & 63);
  i2 = (u32)(j2);
  i1 |= i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  j0 = l1;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l3 = i0;
  i1 = 2047u;
  i0 &= i1;
  l4 = i0;
  i1 = 2047u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l4;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  goto Bfunc;
  B0:;
  i0 = l4;
  i1 = 1022u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  goto Bfunc;
  B2:;
  i0 = l4;
  i1 = 1023u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l4 = i0;
  i0 = l2;
  i1 = 8u;
  i0 = i0 < i1;
  if (i0) {goto B7;}
  i0 = l4;
  if (i0) {goto B6;}
  B7:;
  i0 = l0;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l4;
  i2 = 4u;
  i1 = m_realloc(i1, i2);
  l4 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = 8u;
  i1 |= i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B6:;
  i0 = p0;
  i1 = l2;
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l4;
  i1 = 1u;
  i32_store16((&M0), (u64)(i0), i1);
  goto Bfunc;
  B5:;
  j0 = l1;
  j1 = 4503599627370495ull;
  j0 &= j1;
  j1 = 4503599627370496ull;
  j0 |= j1;
  l1 = j0;
  i0 = l4;
  i1 = 4294966289u;
  i0 += i1;
  i1 = 16u;
  i0 = I32_DIV_S(i0, i1);
  l2 = i0;
  i0 = l4;
  i1 = 1074u;
  i0 = i0 > i1;
  if (i0) {goto B9;}
  j0 = l1;
  i1 = 1075u;
  i2 = l4;
  i1 -= i2;
  j1 = (u64)(i1);
  j0 >>= (j1 & 63);
  l1 = j0;
  i0 = 0u;
  l4 = i0;
  i0 = 0u;
  l5 = i0;
  goto B8;
  B9:;
  i0 = l4;
  i1 = 4294966221u;
  i0 += i1;
  i1 = 16u;
  i0 = I32_DIV_S(i0, i1);
  l4 = i0;
  i0 = l3;
  i1 = 13u;
  i0 += i1;
  i1 = 15u;
  i0 &= i1;
  l5 = i0;
  B8:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i0 = l0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l2;
  i2 = 2u;
  i3 = l2;
  i4 = 2u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  l6 = i1;
  i0 = i0 < i1;
  if (i0) {goto B11;}
  i0 = l3;
  if (i0) {goto B10;}
  B11:;
  i0 = l0;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l3;
  i2 = l6;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l3 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l6;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  B10:;
  i0 = p0;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = l3;
  i1 = 0u;
  i2 = l4;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  B12:;
  i0 = l5;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l4;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  j1 = l1;
  i2 = l5;
  j2 = (u64)(i2);
  j1 <<= (j2 & 63);
  i64_store16((&M0), (u64)(i0), j1);
  i0 = l4;
  i1 = 1u;
  i0 += i1;
  l4 = i0;
  j0 = l1;
  i1 = 16u;
  i2 = l5;
  i1 -= i2;
  j1 = (u64)(i1);
  j0 >>= (j1 & 63);
  l1 = j0;
  B13:;
  i0 = l4;
  i1 = l2;
  i0 = i0 == i1;
  if (i0) {goto B14;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l4;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p0 = i0;
  i0 = l2;
  i1 = l4;
  i0 -= i1;
  l4 = i0;
  L15: vm_checktime();
    i0 = p0;
    j1 = l1;
    i64_store16((&M0), (u64)(i0), j1);
    i0 = p0;
    i1 = 2u;
    i0 += i1;
    p0 = i0;
    j0 = l1;
    j1 = 16ull;
    j0 >>= (j1 & 63);
    l1 = j0;
    i0 = l4;
    i1 = 4294967295u;
    i0 += i1;
    l4 = i0;
    if (i0) {goto L15;}
  B14:;
  goto Bfunc;
  B4:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B3:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mpz_set_from_str(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p4;
  i1 = 37u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 1u;
  i0 >>= (i1 & 31);
  i1 = 268435455u;
  i0 &= i1;
  i1 = 1u;
  i0 += i1;
  l0 = i0;
  i1 = 2u;
  i2 = l0;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  B3:;
  i0 = l0;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  i2 = l1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B2:;
  i0 = 0u;
  l3 = i0;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  i2 = 1u;
  i1 |= i2;
  i2 = l0;
  i3 = 4294967294u;
  i2 &= i3;
  i3 = p3;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  p3 = i0;
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = p2;
  i0 += i1;
  l4 = i0;
  i0 = p4;
  i1 = 65535u;
  i0 &= i1;
  l1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l5 = i0;
  i0 = p1;
  p3 = i0;
  L5: vm_checktime();
    i0 = 4294967248u;
    p0 = i0;
    i0 = p3;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l0 = i0;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 10u;
    i0 = i0 < i1;
    if (i0) {goto B6;}
    i0 = 4294967241u;
    p0 = i0;
    i0 = l0;
    i1 = 4294967231u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 26u;
    i0 = i0 < i1;
    if (i0) {goto B6;}
    i0 = 4294967209u;
    p0 = i0;
    i0 = l0;
    i1 = 4294967199u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 25u;
    i0 = i0 > i1;
    if (i0) {goto B4;}
    B6:;
    i0 = p0;
    i1 = l0;
    i0 += i1;
    p0 = i0;
    i1 = p4;
    i0 = i0 >= i1;
    if (i0) {goto B4;}
    i0 = p0;
    i1 = 65535u;
    i0 &= i1;
    l0 = i0;
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B9;}
    i0 = l2;
    p0 = i0;
    i0 = l3;
    p2 = i0;
    L10: vm_checktime();
      i0 = p0;
      i1 = l1;
      i2 = p0;
      i2 = i32_load16_u((&M0), (u64)(i2));
      i1 *= i2;
      i2 = l0;
      i1 += i2;
      l0 = i1;
      i32_store16((&M0), (u64)(i0), i1);
      i0 = p0;
      i1 = 2u;
      i0 += i1;
      p0 = i0;
      i0 = l0;
      i1 = 16u;
      i0 >>= (i1 & 31);
      l0 = i0;
      i0 = p2;
      i1 = 4294967295u;
      i0 += i1;
      p2 = i0;
      if (i0) {goto L10;}
    i0 = l2;
    i1 = l3;
    i2 = 1u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p0 = i0;
    i0 = l0;
    i0 = !(i0);
    if (i0) {goto B7;}
    goto B8;
    B9:;
    i0 = l2;
    p0 = i0;
    i0 = l0;
    i0 = !(i0);
    if (i0) {goto B7;}
    B8:;
    i0 = p0;
    i1 = l0;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 2u;
    i0 += i1;
    p0 = i0;
    B7:;
    i0 = l5;
    i1 = p0;
    i2 = l2;
    i1 -= i2;
    i2 = 1u;
    i1 = (u32)((s32)i1 >> (i2 & 31));
    l3 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p3;
    i1 = 1u;
    i0 += i1;
    p3 = i0;
    i1 = l4;
    i0 = i0 < i1;
    if (i0) {goto L5;}
  B4:;
  i0 = p3;
  i1 = p1;
  i0 -= i1;
  goto Bfunc;
  B1:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = 9913u;
  i1 = 11330u;
  i2 = 838u;
  i3 = 38756u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mpz_set_from_bytes(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p2;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 15u;
  i0 += i1;
  i1 = 4u;
  i0 >>= (i1 & 31);
  l0 = i0;
  i1 = 2u;
  i2 = l0;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  B2:;
  i0 = l0;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  i2 = l1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B1:;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 4294967295u;
  i1 = 1u;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = p3;
  i1 = p2;
  i0 += i1;
  i1 = 4294967295u;
  i0 += i1;
  i1 = p3;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l5 = i0;
  i0 = 0u;
  l0 = i0;
  L4: vm_checktime();
    i0 = l1;
    l6 = i0;
    i0 = p2;
    i0 = !(i0);
    if (i0) {goto B6;}
    i0 = l0;
    i1 = 15u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B6;}
    i0 = 0u;
    p1 = i0;
    i0 = l4;
    l1 = i0;
    i0 = p2;
    p3 = i0;
    L7: vm_checktime();
      i0 = p3;
      i1 = 4294967295u;
      i0 += i1;
      p2 = i0;
      i0 = l1;
      i1 = l3;
      i0 += i1;
      l4 = i0;
      i0 = l0;
      i1 = 8u;
      i0 += i1;
      l7 = i0;
      i0 = p1;
      i1 = l1;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i2 = l0;
      i1 <<= (i2 & 31);
      i0 |= i1;
      p1 = i0;
      i0 = p3;
      i1 = 1u;
      i0 = i0 == i1;
      if (i0) {goto B5;}
      i0 = l0;
      i1 = 8u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l8 = i0;
      i0 = l7;
      l0 = i0;
      i0 = l4;
      l1 = i0;
      i0 = p2;
      p3 = i0;
      i0 = l8;
      if (i0) {goto L7;}
      goto B5;
    B6:;
    i0 = 0u;
    p1 = i0;
    i0 = l0;
    l7 = i0;
    B5:;
    i0 = l5;
    i1 = l6;
    i2 = 1u;
    i1 += i2;
    l1 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = l6;
    i2 = 1u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = p1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l7;
    i1 = 4294967280u;
    i0 += i1;
    l0 = i0;
    i0 = p2;
    if (i0) {goto L4;}
  B3:;
  i0 = l2;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l1 = i0;
  L9: vm_checktime();
    i0 = l1;
    l0 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto B8;}
    i0 = l0;
    i1 = 4294967294u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto L9;}
  B8:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i2 = 2u;
  i1 += i2;
  i2 = l2;
  i1 -= i2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mpz_cmp(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 &= i2;
  l1 = i1;
  i0 -= i1;
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l2;
  goto Bfunc;
  B3:;
  i0 = 4294967295u;
  l3 = i0;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l2 = i1;
  i0 = i0 < i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = l2;
  i0 = i0 > i1;
  l3 = i0;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i1 = l2;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 4294967294u;
  i1 += i2;
  l2 = i1;
  i0 += i1;
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i0 += i1;
  p0 = i0;
  i0 = 4294967295u;
  l3 = i0;
  L5: vm_checktime();
    i0 = p0;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i1 = p1;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 -= i1;
    l2 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B4;}
    i0 = l2;
    if (i0) {goto B0;}
    i0 = p1;
    i1 = 4294967294u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4294967294u;
    i0 += i1;
    p0 = i0;
    i0 = l0;
    i1 = 4294967295u;
    i0 += i1;
    l0 = i0;
    if (i0) {goto L5;}
  i0 = 0u;
  l3 = i0;
  B4:;
  i0 = 0u;
  i1 = l3;
  i0 -= i1;
  i1 = l3;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = 0u;
  i1 = 1u;
  i0 -= i1;
  i1 = 1u;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mpz_abs_inpl(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 2u;
  i2 = l0;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  B3:;
  i0 = l0;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  i2 = l1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B2:;
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 &= i2;
  i2 = l0;
  i3 = 4294967294u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B1:;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mpz_neg_inpl(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 2u;
  i2 = l0;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  B3:;
  i0 = l0;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  i2 = l1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B2:;
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 &= i2;
  i2 = l0;
  i3 = 4294967294u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B1:;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 ^= i2;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mpz_not_inpl(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 2u;
  i2 = l0;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B5;}
  B6:;
  i0 = l0;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  i2 = l1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B5:;
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 &= i2;
  i2 = l0;
  i3 = 4294967294u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  goto B0;
  B4:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  if (i0) {goto B0;}
  B3:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B7;}
  B8:;
  i0 = l0;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  i2 = 4u;
  i1 = m_realloc(i1, i2);
  p1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = 8u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  B7:;
  i0 = p1;
  i1 = 1u;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = 1u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B2:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B1:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B10;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i0 = p1;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i2 = 1u;
  i1 += i2;
  l0 = i1;
  i2 = 2u;
  i3 = l0;
  i4 = 2u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  l0 = i1;
  i0 = i0 < i1;
  if (i0) {goto B12;}
  i0 = l3;
  if (i0) {goto B11;}
  B12:;
  i0 = p1;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B9;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l3;
  i2 = l0;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l3 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l0;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  B11:;
  i0 = l3;
  i1 = l3;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  l0 = i1;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 >>= (i1 & 31);
  l0 = i0;
  i0 = l1;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B13;}
  i0 = 1u;
  i1 = l1;
  i0 -= i1;
  l2 = i0;
  L14: vm_checktime();
    i0 = p1;
    i1 = l0;
    i2 = p1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = l0;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l0 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    if (i0) {goto L14;}
  i0 = l3;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  B13:;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B15;}
  i0 = p1;
  i1 = l0;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  B15:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = l3;
  i1 -= i2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B10:;
  i0 = p0;
  i1 = p1;
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i1 = p0;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i2 = 4294967295u;
  i1 += i2;
  l0 = i1;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  i0 = l1;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B16;}
  i0 = 1u;
  i1 = l1;
  i0 -= i1;
  l2 = i0;
  L17: vm_checktime();
    i0 = p1;
    i1 = l0;
    i2 = 16u;
    i1 = (u32)((s32)i1 >> (i2 & 31));
    i2 = p1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    if (i0) {goto L17;}
  i0 = p0;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  B16:;
  i0 = p1;
  i1 = 4294967294u;
  i0 += i1;
  l0 = i0;
  L19: vm_checktime();
    i0 = l0;
    p1 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto B18;}
    i0 = p1;
    i1 = 4294967294u;
    i0 += i1;
    l0 = i0;
    i0 = p1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto L19;}
  B18:;
  i0 = l3;
  i1 = p1;
  i2 = 2u;
  i1 += i2;
  i2 = p0;
  i1 -= i2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B9:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mpz_shl_inpl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l0;
  i1 = p2;
  i2 = 15u;
  i1 += i2;
  i2 = 4u;
  i1 >>= (i2 & 31);
  l1 = i1;
  i0 += i1;
  l2 = i0;
  i1 = 2u;
  i2 = l2;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l5 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = l4;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l3;
  i0 = i0 < i1;
  if (i0) {goto B5;}
  i0 = p2;
  i1 = 15u;
  i0 &= i1;
  l3 = i0;
  i1 = 16u;
  i2 = l3;
  i0 = i2 ? i0 : i1;
  p2 = i0;
  i0 = l5;
  i1 = l2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l3 = i0;
  goto B4;
  B6:;
  i0 = l0;
  i1 = 2u;
  i2 = l0;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = l3;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i0 = i0 >= i1;
  if (i0) {goto B7;}
  B8:;
  i0 = l3;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = p2;
  i2 = l0;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  p2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l0;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l3 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B7:;
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 &= i2;
  i2 = l3;
  i3 = 4294967294u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  l3 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l3;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  goto Bfunc;
  B5:;
  i0 = l4;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = l5;
  i1 = l3;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = m_realloc(i0, i1);
  l5 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l5;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l5;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l0 = i1;
  i2 = l1;
  i1 += i2;
  l2 = i1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l3 = i0;
  i0 = p2;
  i1 = 15u;
  i0 &= i1;
  p2 = i0;
  i1 = 16u;
  i2 = p2;
  i0 = i2 ? i0 : i1;
  p2 = i0;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B3;}
  B4:;
  i0 = 16u;
  i1 = p2;
  i0 -= i1;
  l6 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  p2 = i0;
  i0 = 0u;
  l4 = i0;
  L9: vm_checktime();
    i0 = l3;
    i1 = l4;
    i2 = p2;
    i2 = i32_load16_u((&M0), (u64)(i2));
    l7 = i2;
    i1 |= i2;
    i2 = l6;
    i1 >>= (i2 & 31);
    i32_store16((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = 4294967294u;
    i0 += i1;
    p2 = i0;
    i0 = l3;
    i1 = 4294967294u;
    i0 += i1;
    l3 = i0;
    i0 = l7;
    i1 = 16u;
    i0 <<= (i1 & 31);
    l4 = i0;
    i0 = l0;
    i1 = 4294967295u;
    i0 += i1;
    l0 = i0;
    if (i0) {goto L9;}
  i0 = l5;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l3 = i0;
  goto B0;
  B3:;
  i0 = 16u;
  i1 = p2;
  i0 -= i1;
  l6 = i0;
  i0 = 0u;
  l4 = i0;
  goto B0;
  B2:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B1:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = l3;
  i1 = l4;
  i2 = l6;
  i1 >>= (i2 & 31);
  i32_store16((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = 1u;
  i2 = l1;
  i1 -= i2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = l1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i3 = 4294967294u;
  i2 += i3;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l3;
  i1 = l2;
  i2 = l1;
  i1 -= i2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l3 = i0;
  L11: vm_checktime();
    i0 = l2;
    p2 = i0;
    i0 = !(i0);
    if (i0) {goto B10;}
    i0 = p2;
    i1 = 4294967295u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i0 = i32_load16_u((&M0), (u64)(i0));
    l0 = i0;
    i0 = l3;
    i1 = 4294967294u;
    i0 += i1;
    l3 = i0;
    i0 = l0;
    i0 = !(i0);
    if (i0) {goto L11;}
  B10:;
  i0 = p0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mpz_shr_inpl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = !(i0);
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i2 = 2u;
  i1 >>= (i2 & 31);
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  l2 = i2;
  i3 = 2u;
  i4 = l2;
  i5 = 2u;
  i4 = i4 > i5;
  i2 = i4 ? i2 : i3;
  l3 = i2;
  i1 = i1 < i2;
  i0 |= i1;
  l4 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l1;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = l3;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = m_realloc(i0, i1);
  l0 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  B7:;
  i0 = p2;
  i1 = 15u;
  i0 &= i1;
  l5 = i0;
  i0 = 0u;
  l6 = i0;
  i0 = l2;
  i1 = p2;
  i2 = 4u;
  i1 >>= (i2 & 31);
  l4 = i1;
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  i0 = l0;
  p2 = i0;
  i0 = l2;
  i1 = l4;
  i0 -= i1;
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i1 = l4;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load16_u((&M0), (u64)(i0));
  p2 = i0;
  i0 = l6;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = l0;
  l2 = i0;
  goto B4;
  B6:;
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = l1;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = l3;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B8:;
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 &= i2;
  i2 = l1;
  i3 = 4294967294u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  l2 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  goto Bfunc;
  B5:;
  i0 = l4;
  i1 = 1u;
  i0 += i1;
  l7 = i0;
  i1 = l2;
  i0 -= i1;
  l3 = i0;
  i0 = l2;
  i1 = 4294967295u;
  i0 += i1;
  i1 = l4;
  i0 -= i1;
  l8 = i0;
  i0 = l1;
  i1 = l7;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l2 = i0;
  i0 = l0;
  l1 = i0;
  L9: vm_checktime();
    i0 = l1;
    i1 = l2;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i2 = 16u;
    i1 <<= (i2 & 31);
    i2 = p2;
    i1 |= i2;
    i2 = l5;
    i1 >>= (i2 & 31);
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l2;
    i0 = i32_load16_u((&M0), (u64)(i0));
    p2 = i0;
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    if (i0) {goto L9;}
  i0 = l0;
  i1 = l8;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l2 = i0;
  B4:;
  i0 = l2;
  i1 = p2;
  i2 = l5;
  i1 >>= (i2 & 31);
  i32_store16((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l6;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  B3:;
  i0 = l6;
  i1 = p2;
  i2 = 4294967294u;
  i1 += i2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i1 = !(i1);
  i0 -= i1;
  l6 = i0;
  B2:;
  i0 = p0;
  i1 = l6;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l1;
  i2 = 4294967294u;
  i1 &= i2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  l2 = i2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = 0u;
  l7 = i0;
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = 1u;
  l2 = i0;
  L17: vm_checktime();
    i0 = l1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    if (i0) {goto B15;}
    i0 = l2;
    i1 = l4;
    i0 = i0 >= i1;
    if (i0) {goto B16;}
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l2;
    i1 = l3;
    i0 = i0 >= i1;
    p2 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = p2;
    i0 = !(i0);
    if (i0) {goto L17;}
  B16:;
  i0 = l4;
  i1 = l3;
  i0 = i0 < i1;
  if (i0) {goto B14;}
  goto B13;
  B15:;
  i0 = 1u;
  l7 = i0;
  i0 = l4;
  i1 = l3;
  i0 = i0 >= i1;
  if (i0) {goto B13;}
  B14:;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l4;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load16_u((&M0), (u64)(i0));
  i1 = 4294967295u;
  i2 = l5;
  i1 <<= (i2 & 31);
  i2 = 4294967295u;
  i1 ^= i2;
  i0 &= i1;
  if (i0) {goto B12;}
  B13:;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B11;}
  B12:;
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = l0;
  i1 = l0;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  l1 = i1;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 2u;
  i0 += i1;
  l2 = i0;
  i0 = l1;
  i1 = 16u;
  i0 >>= (i1 & 31);
  l1 = i0;
  i0 = l6;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B18;}
  i0 = 1u;
  i1 = l6;
  i0 -= i1;
  p2 = i0;
  L19: vm_checktime();
    i0 = l2;
    i1 = l1;
    i2 = l2;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    l1 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l1 = i0;
    i0 = p2;
    i1 = 1u;
    i0 += i1;
    p2 = i0;
    if (i0) {goto L19;}
  i0 = l0;
  i1 = l6;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l2 = i0;
  B18:;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B20;}
  i0 = l2;
  i1 = l1;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 2u;
  i0 += i1;
  l2 = i0;
  B20:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l2;
  i2 = l0;
  i1 -= i2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0), i1);
  B11:;
  goto Bfunc;
  B10:;
  i0 = l0;
  i1 = 1u;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = 1u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mpz_add_inpl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l1 = i1;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 4294967295u;
  i0 += i1;
  l2 = i0;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  i0 = 1u;
  i1 = l0;
  i0 -= i1;
  l3 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l1 = i1;
  i0 += i1;
  l0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l1;
  i0 += i1;
  l1 = i0;
  L3: vm_checktime();
    i0 = l1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i1 = l0;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 -= i1;
    l2 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B1;}
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l0;
    i1 = 4294967294u;
    i0 += i1;
    l0 = i0;
    i0 = l1;
    i1 = 4294967294u;
    i0 += i1;
    l1 = i0;
    i0 = l2;
    i0 = !(i0);
    if (i0) {goto L3;}
  B2:;
  i0 = p2;
  l0 = i0;
  i0 = p1;
  p2 = i0;
  goto B0;
  B1:;
  i0 = p1;
  l0 = i0;
  B0:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l4 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 ^= i1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B17;}
  i0 = l4;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i1 = 2u;
  i2 = l1;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l5 = i0;
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = l3;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 < i1;
  if (i0) {goto B16;}
  i0 = l4;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l6 = i1;
  i0 -= i1;
  l7 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B15;}
  goto B7;
  B17:;
  i0 = l4;
  i1 = 2u;
  i2 = l4;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l5 = i0;
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = l3;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 < i1;
  if (i0) {goto B14;}
  i0 = l4;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l6 = i1;
  i0 -= i1;
  l7 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B13;}
  goto B10;
  B16:;
  i0 = l3;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B12;}
  i0 = l5;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = m_realloc(i0, i1);
  l5 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l5;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l6 = i1;
  i0 -= i1;
  l7 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = l6;
  if (i0) {goto B7;}
  B15:;
  i0 = 0u;
  l0 = i0;
  i0 = l5;
  p1 = i0;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B5;}
  goto B6;
  B14:;
  i0 = l3;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B11;}
  i0 = l5;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = m_realloc(i0, i1);
  l5 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l5;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l6 = i1;
  i0 -= i1;
  l7 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = l6;
  if (i0) {goto B10;}
  B13:;
  i0 = 0u;
  l0 = i0;
  i0 = l5;
  p1 = i0;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B8;}
  goto B9;
  B12:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B11:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B10:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i0 = 0u;
  l0 = i0;
  i0 = l5;
  l2 = i0;
  i0 = l6;
  l8 = i0;
  i0 = l1;
  p1 = i0;
  L18: vm_checktime();
    i0 = l2;
    i1 = p1;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i2 = l3;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 -= i2;
    i2 = l0;
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 2u;
    i0 += i1;
    l3 = i0;
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i0 = l0;
    i1 = 16u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l0 = i0;
    i0 = l8;
    i1 = 4294967295u;
    i0 += i1;
    l8 = i0;
    if (i0) {goto L18;}
  i0 = l1;
  i1 = l6;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l3 = i1;
  i0 += i1;
  l1 = i0;
  i0 = l5;
  i1 = l3;
  i0 += i1;
  p1 = i0;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B8;}
  B9:;
  i0 = l6;
  i1 = l4;
  i0 -= i1;
  l2 = i0;
  i0 = p1;
  l3 = i0;
  L19: vm_checktime();
    i0 = l3;
    i1 = l0;
    i2 = l1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    i1 = 2u;
    i0 += i1;
    l3 = i0;
    i0 = l0;
    i1 = 16u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l0 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    if (i0) {goto L19;}
  i0 = p1;
  i1 = l7;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  B8:;
  i0 = p1;
  i1 = 4294967294u;
  i0 += i1;
  l1 = i0;
  L21: vm_checktime();
    i0 = l1;
    l0 = i0;
    i1 = l5;
    i0 = i0 < i1;
    if (i0) {goto B20;}
    i0 = l0;
    i1 = 4294967294u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto L21;}
  B20:;
  i0 = l0;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  goto B4;
  B7:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i0 = 0u;
  l0 = i0;
  i0 = l5;
  l2 = i0;
  i0 = l6;
  l8 = i0;
  i0 = l1;
  p1 = i0;
  L22: vm_checktime();
    i0 = l2;
    i1 = l0;
    i2 = p1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    i2 = l3;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 2u;
    i0 += i1;
    l3 = i0;
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i0 = l0;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l0 = i0;
    i0 = l8;
    i1 = 4294967295u;
    i0 += i1;
    l8 = i0;
    if (i0) {goto L22;}
  i0 = l1;
  i1 = l6;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l3 = i1;
  i0 += i1;
  l1 = i0;
  i0 = l5;
  i1 = l3;
  i0 += i1;
  p1 = i0;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B5;}
  B6:;
  i0 = l6;
  i1 = l4;
  i0 -= i1;
  l2 = i0;
  i0 = p1;
  l3 = i0;
  L23: vm_checktime();
    i0 = l3;
    i1 = l0;
    i2 = l1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    i1 = 2u;
    i0 += i1;
    l3 = i0;
    i0 = l0;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l0 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    if (i0) {goto L23;}
  i0 = p1;
  i1 = l7;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  B5:;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = l0;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  B4:;
  i0 = p0;
  i1 = p1;
  i2 = l5;
  i1 -= i2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mpz_sub_inpl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l1 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = p1;
  l0 = i0;
  i0 = 1u;
  l2 = i0;
  goto B0;
  B1:;
  i0 = 0u;
  l2 = i0;
  i0 = l0;
  i1 = 4294967295u;
  i0 += i1;
  l3 = i0;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B4;}
  i0 = 1u;
  l2 = i0;
  i0 = 1u;
  i1 = l0;
  i0 -= i1;
  l4 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l3;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l1 = i1;
  i0 += i1;
  l0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l1;
  i0 += i1;
  l1 = i0;
  L5: vm_checktime();
    i0 = l1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i1 = l0;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B2;}
    i0 = l4;
    i0 = !(i0);
    if (i0) {goto B6;}
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i0 = l0;
    i1 = 4294967294u;
    i0 += i1;
    l0 = i0;
    i0 = l1;
    i1 = 4294967294u;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto L5;}
    B6:;
  i0 = p2;
  l0 = i0;
  i0 = 0u;
  l2 = i0;
  goto B3;
  B4:;
  i0 = p2;
  l0 = i0;
  B3:;
  i0 = p1;
  p2 = i0;
  goto B0;
  B2:;
  i0 = p1;
  l0 = i0;
  B0:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l5 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 ^= i1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B20;}
  i0 = l5;
  i1 = 2u;
  i2 = l5;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B19;}
  i0 = l4;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 < i1;
  if (i0) {goto B19;}
  i0 = l5;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l7 = i1;
  i0 -= i1;
  l8 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B18;}
  goto B10;
  B20:;
  i0 = l5;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i1 = 2u;
  i2 = l1;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B17;}
  i0 = l4;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 < i1;
  if (i0) {goto B17;}
  i0 = l5;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l7 = i1;
  i0 -= i1;
  l8 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B16;}
  goto B13;
  B19:;
  i0 = l4;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B15;}
  i0 = l6;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = m_realloc(i0, i1);
  l6 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l6;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l5 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l7 = i1;
  i0 -= i1;
  l8 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = l7;
  if (i0) {goto B10;}
  B18:;
  i0 = 0u;
  l0 = i0;
  i0 = l6;
  p1 = i0;
  i0 = l8;
  i0 = !(i0);
  if (i0) {goto B8;}
  goto B9;
  B17:;
  i0 = l4;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B14;}
  i0 = l6;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = m_realloc(i0, i1);
  l6 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l6;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l5 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l7 = i1;
  i0 -= i1;
  l8 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = l7;
  if (i0) {goto B13;}
  B16:;
  i0 = 0u;
  l0 = i0;
  i0 = l6;
  p1 = i0;
  i0 = l8;
  i0 = !(i0);
  if (i0) {goto B11;}
  goto B12;
  B15:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B14:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B13:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l4 = i0;
  i0 = 0u;
  l0 = i0;
  i0 = l6;
  l3 = i0;
  i0 = l7;
  l9 = i0;
  i0 = l1;
  p1 = i0;
  L21: vm_checktime();
    i0 = l3;
    i1 = l0;
    i2 = p1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    i2 = l4;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l4;
    i1 = 2u;
    i0 += i1;
    l4 = i0;
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = l3;
    i1 = 2u;
    i0 += i1;
    l3 = i0;
    i0 = l0;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l0 = i0;
    i0 = l9;
    i1 = 4294967295u;
    i0 += i1;
    l9 = i0;
    if (i0) {goto L21;}
  i0 = l1;
  i1 = l7;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l4 = i1;
  i0 += i1;
  l1 = i0;
  i0 = l6;
  i1 = l4;
  i0 += i1;
  p1 = i0;
  i0 = l8;
  i0 = !(i0);
  if (i0) {goto B11;}
  B12:;
  i0 = l7;
  i1 = l5;
  i0 -= i1;
  l3 = i0;
  i0 = p1;
  l4 = i0;
  L22: vm_checktime();
    i0 = l4;
    i1 = l0;
    i2 = l1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l4;
    i1 = 2u;
    i0 += i1;
    l4 = i0;
    i0 = l0;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l0 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    if (i0) {goto L22;}
  i0 = p1;
  i1 = l8;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  B11:;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = p1;
  i1 = l0;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  goto B7;
  B10:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l4 = i0;
  i0 = 0u;
  l0 = i0;
  i0 = l6;
  l3 = i0;
  i0 = l7;
  l9 = i0;
  i0 = l1;
  p1 = i0;
  L23: vm_checktime();
    i0 = l3;
    i1 = p1;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i2 = l4;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 -= i2;
    i2 = l0;
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l4;
    i1 = 2u;
    i0 += i1;
    l4 = i0;
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = l3;
    i1 = 2u;
    i0 += i1;
    l3 = i0;
    i0 = l0;
    i1 = 16u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l0 = i0;
    i0 = l9;
    i1 = 4294967295u;
    i0 += i1;
    l9 = i0;
    if (i0) {goto L23;}
  i0 = l1;
  i1 = l7;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l4 = i1;
  i0 += i1;
  l1 = i0;
  i0 = l6;
  i1 = l4;
  i0 += i1;
  p1 = i0;
  i0 = l8;
  i0 = !(i0);
  if (i0) {goto B8;}
  B9:;
  i0 = l7;
  i1 = l5;
  i0 -= i1;
  l3 = i0;
  i0 = p1;
  l4 = i0;
  L24: vm_checktime();
    i0 = l4;
    i1 = l0;
    i2 = l1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l4;
    i1 = 2u;
    i0 += i1;
    l4 = i0;
    i0 = l0;
    i1 = 16u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l0 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    if (i0) {goto L24;}
  i0 = p1;
  i1 = l8;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  B8:;
  i0 = p1;
  i1 = 4294967294u;
  i0 += i1;
  l1 = i0;
  L26: vm_checktime();
    i0 = l1;
    l0 = i0;
    i1 = l6;
    i0 = i0 < i1;
    if (i0) {goto B25;}
    i0 = l0;
    i1 = 4294967294u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto L26;}
  B25:;
  i0 = l0;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  B7:;
  i0 = p0;
  i1 = p1;
  i2 = l6;
  i1 -= i2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  i1 |= i2;
  i2 = l2;
  i1 ^= i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mpz_and_inpl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p1;
  i1 = p2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p2;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  i2 = i2 < i3;
  l0 = i2;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = 1u;
  l2 = i0;
  i0 = p2;
  i1 = p1;
  i2 = l0;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l4 = i0;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  l5 = i0;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  l2 = i0;
  B0:;
  i0 = l2;
  i1 = l4;
  i0 += i1;
  p1 = i0;
  i1 = 2u;
  i2 = p1;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p2;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B4;}
  B5:;
  i0 = p2;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l6;
  i2 = p1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l6 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = p1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  l5 = i0;
  i0 = l3;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  B4:;
  i0 = l5;
  i1 = 0u;
  i2 = l5;
  i3 = l1;
  i3 = i32_load((&M0), (u64)(i3));
  i4 = 1u;
  i3 &= i4;
  l7 = i3;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l8 = i0;
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = 0u;
  i1 = l7;
  i0 -= i1;
  l9 = i0;
  i0 = 65535u;
  i1 = 0u;
  i2 = l8;
  i0 = i2 ? i0 : i1;
  l10 = i0;
  i0 = 65535u;
  i1 = 0u;
  i2 = l5;
  i0 = i2 ? i0 : i1;
  l11 = i0;
  i0 = l4;
  i1 = 4294967295u;
  i0 += i1;
  p1 = i0;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 4294967295u;
  i0 += i1;
  p2 = i0;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l12 = i0;
  i0 = l6;
  l0 = i0;
  L7: vm_checktime();
    i0 = l11;
    i1 = l2;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 ^= i1;
    i1 = l5;
    i0 += i1;
    l5 = i0;
    i0 = p2;
    i1 = p1;
    i0 = i0 <= i1;
    if (i0) {goto B9;}
    i0 = l9;
    l13 = i0;
    goto B8;
    B9:;
    i0 = l12;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i1 = l9;
    i0 ^= i1;
    l13 = i0;
    i0 = l12;
    i1 = 2u;
    i0 += i1;
    l12 = i0;
    B8:;
    i0 = l0;
    i1 = l5;
    i2 = l7;
    i3 = l13;
    i4 = 65535u;
    i3 &= i4;
    i2 += i3;
    l7 = i2;
    i1 &= i2;
    i2 = 65535u;
    i1 &= i2;
    i2 = l10;
    i1 ^= i2;
    i2 = l8;
    i1 += i2;
    l8 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = 4294967295u;
    i0 += i1;
    p2 = i0;
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i0 = l0;
    i1 = 2u;
    i0 += i1;
    l0 = i0;
    i0 = l5;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l5 = i0;
    i0 = l7;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l7 = i0;
    i0 = l8;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l8 = i0;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    i1 = 4294967295u;
    i0 = i0 != i1;
    if (i0) {goto L7;}
  i0 = l6;
  i1 = l4;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  i0 = l8;
  i0 = !(i0);
  if (i0) {goto B1;}
  goto B2;
  B6:;
  i0 = l6;
  p1 = i0;
  i0 = l8;
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B2:;
  i0 = p1;
  i1 = l8;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  B1:;
  i0 = p1;
  i1 = 4294967294u;
  i0 += i1;
  p2 = i0;
  L11: vm_checktime();
    i0 = p2;
    p1 = i0;
    i1 = l6;
    i0 = i0 < i1;
    if (i0) {goto B10;}
    i0 = p1;
    i1 = 4294967294u;
    i0 += i1;
    p2 = i0;
    i0 = p1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto L11;}
  B10:;
  i0 = p0;
  i1 = p1;
  i2 = 2u;
  i1 += i2;
  i2 = l6;
  i1 -= i2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i2 = l3;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = l1;
  i3 = i32_load((&M0), (u64)(i3));
  i2 &= i3;
  i3 = 1u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mpz_or_inpl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = p2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p2;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  i2 = i2 < i3;
  l0 = i2;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = 1u;
  l2 = i0;
  i0 = p2;
  i1 = p1;
  i2 = l0;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l4 = i0;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  l2 = i0;
  B0:;
  i0 = l2;
  i1 = l4;
  i0 += i1;
  p1 = i0;
  i1 = 2u;
  i2 = p1;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l5 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  B4:;
  i0 = l2;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = l5;
  i1 = p1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = m_realloc(i0, i1);
  l5 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = p1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l5;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  B3:;
  i0 = 1u;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 &= i2;
  l6 = i1;
  i2 = p2;
  i3 = 1u;
  i2 &= i3;
  l7 = i2;
  i0 = i2 ? i0 : i1;
  l8 = i0;
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = 0u;
  i1 = l6;
  i0 -= i1;
  l9 = i0;
  i0 = 65535u;
  i1 = 0u;
  i2 = l8;
  i0 = i2 ? i0 : i1;
  l10 = i0;
  i0 = 65535u;
  i1 = 0u;
  i2 = l7;
  i0 = i2 ? i0 : i1;
  l11 = i0;
  i0 = l4;
  i1 = 4294967295u;
  i0 += i1;
  p1 = i0;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 4294967295u;
  i0 += i1;
  p2 = i0;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l12 = i0;
  i0 = l5;
  l0 = i0;
  L7: vm_checktime();
    i0 = l11;
    i1 = l2;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 ^= i1;
    i1 = l7;
    i0 += i1;
    l7 = i0;
    i0 = p2;
    i1 = p1;
    i0 = i0 <= i1;
    if (i0) {goto B9;}
    i0 = l9;
    l13 = i0;
    goto B8;
    B9:;
    i0 = l12;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i1 = l9;
    i0 ^= i1;
    l13 = i0;
    i0 = l12;
    i1 = 2u;
    i0 += i1;
    l12 = i0;
    B8:;
    i0 = l0;
    i1 = l6;
    i2 = l13;
    i3 = 65535u;
    i2 &= i3;
    i1 += i2;
    l6 = i1;
    i2 = l7;
    i1 |= i2;
    i2 = 65535u;
    i1 &= i2;
    i2 = l10;
    i1 ^= i2;
    i2 = l8;
    i1 += i2;
    l8 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = 4294967295u;
    i0 += i1;
    p2 = i0;
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i0 = l0;
    i1 = 2u;
    i0 += i1;
    l0 = i0;
    i0 = l7;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l7 = i0;
    i0 = l6;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l6 = i0;
    i0 = l8;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l8 = i0;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    i1 = 4294967295u;
    i0 = i0 != i1;
    if (i0) {goto L7;}
  i0 = l5;
  i1 = l4;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  i0 = l8;
  if (i0) {goto B5;}
  goto B1;
  B6:;
  i0 = l5;
  p1 = i0;
  i0 = l8;
  i0 = !(i0);
  if (i0) {goto B1;}
  B5:;
  i0 = 14853u;
  i1 = 11330u;
  i2 = 345u;
  i3 = 38818u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B2:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B1:;
  i0 = p1;
  i1 = 4294967294u;
  i0 += i1;
  p2 = i0;
  L11: vm_checktime();
    i0 = p2;
    p1 = i0;
    i1 = l5;
    i0 = i0 < i1;
    if (i0) {goto B10;}
    i0 = p1;
    i1 = 4294967294u;
    i0 += i1;
    p2 = i0;
    i0 = p1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto L11;}
  B10:;
  i0 = p0;
  i1 = p1;
  i2 = 2u;
  i1 += i2;
  i2 = l5;
  i1 -= i2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i2 = l1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = l3;
  i3 = i32_load((&M0), (u64)(i3));
  i2 |= i3;
  i3 = 1u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mpz_xor_inpl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = p2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p2;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  i2 = i2 < i3;
  l0 = i2;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = 1u;
  l2 = i0;
  i0 = p2;
  i1 = p1;
  i2 = l0;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l4 = i0;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  p2 = i0;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  l2 = i0;
  B0:;
  i0 = l2;
  i1 = l4;
  i0 += i1;
  p1 = i0;
  i1 = 2u;
  i2 = p1;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l5 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = l2;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B4;}
  B5:;
  i0 = l2;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l5;
  i2 = p1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l5 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = p1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  p2 = i0;
  i0 = l3;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  B4:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  l2 = i0;
  i1 = p2;
  i0 ^= i1;
  l6 = i0;
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l4;
  i1 = 4294967295u;
  i0 += i1;
  p1 = i0;
  i0 = p2;
  i1 = 1u;
  i0 ^= i1;
  l7 = i0;
  i0 = l2;
  i1 = 1u;
  i0 ^= i1;
  l8 = i0;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 4294967295u;
  i0 += i1;
  p2 = i0;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l9 = i0;
  i0 = l5;
  l0 = i0;
  L7: vm_checktime();
    i0 = l7;
    i1 = l2;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 += i1;
    i1 = 65535u;
    i0 += i1;
    l7 = i0;
    i0 = p2;
    i1 = p1;
    i0 = i0 <= i1;
    if (i0) {goto B9;}
    i0 = 65535u;
    l10 = i0;
    goto B8;
    B9:;
    i0 = l9;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i1 = 65535u;
    i0 += i1;
    l10 = i0;
    i0 = l9;
    i1 = 2u;
    i0 += i1;
    l9 = i0;
    B8:;
    i0 = l0;
    i1 = l10;
    i2 = l8;
    i1 += i2;
    l8 = i1;
    i2 = l7;
    i1 ^= i2;
    i2 = 65535u;
    i1 &= i2;
    i2 = l6;
    i1 += i2;
    l6 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = 4294967295u;
    i0 += i1;
    p2 = i0;
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i0 = l0;
    i1 = 2u;
    i0 += i1;
    l0 = i0;
    i0 = l7;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l7 = i0;
    i0 = l8;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l8 = i0;
    i0 = l6;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l6 = i0;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    i1 = 4294967295u;
    i0 = i0 != i1;
    if (i0) {goto L7;}
  i0 = l5;
  i1 = l4;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B1;}
  goto B2;
  B6:;
  i0 = l5;
  p1 = i0;
  i0 = l6;
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B2:;
  i0 = p1;
  i1 = l6;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  B1:;
  i0 = p1;
  i1 = 4294967294u;
  i0 += i1;
  p2 = i0;
  L11: vm_checktime();
    i0 = p2;
    p1 = i0;
    i1 = l5;
    i0 = i0 < i1;
    if (i0) {goto B10;}
    i0 = p1;
    i1 = 4294967294u;
    i0 += i1;
    p2 = i0;
    i0 = p1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto L11;}
  B10:;
  i0 = p0;
  i1 = p1;
  i2 = 2u;
  i1 += i2;
  i2 = l5;
  i1 -= i2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i2 = l1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = l3;
  i3 = i32_load((&M0), (u64)(i3));
  i2 ^= i3;
  i3 = 1u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mpz_mul_inpl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p1;
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p2;
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p1;
  l2 = i0;
  i0 = p2;
  l3 = i0;
  goto B2;
  B5:;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  goto Bfunc;
  B4:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 3u;
  i0 = i0 <= i1;
  if (i0) {goto B1;}
  i0 = 12u;
  i0 = m_malloc(i0);
  l2 = i0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967292u;
  i1 &= i2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  l0 = i2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  l4 = i1;
  i2 = 4294967292u;
  i1 &= i2;
  i2 = l0;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = l4;
  i2 = 1u;
  i1 >>= (i2 & 31);
  i2 = 2147483646u;
  i1 &= i2;
  i1 = m_malloc(i1);
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 >>= (i3 & 31);
  i3 = 2147483646u;
  i2 &= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = p2;
  i2 = p2;
  i3 = p1;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i0 = l2;
  l1 = i0;
  goto B2;
  B3:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 3u;
  i0 = i0 <= i1;
  if (i0) {goto B0;}
  i0 = 12u;
  i0 = m_malloc(i0);
  l3 = i0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967292u;
  i1 &= i2;
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  l4 = i2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  l5 = i1;
  i2 = 4294967292u;
  i1 &= i2;
  i2 = l4;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = p2;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l3;
  i1 = l5;
  i2 = 1u;
  i1 >>= (i2 & 31);
  i2 = 2147483646u;
  i1 &= i2;
  i1 = m_malloc(i1);
  l4 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l4;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 >>= (i3 & 31);
  i3 = 2147483646u;
  i2 &= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  l2 = i0;
  i0 = l3;
  l1 = i0;
  B2:;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 += i1;
  p1 = i0;
  i1 = 2u;
  i2 = p1;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = l4;
  i1 = 2u;
  i0 >>= (i1 & 31);
  l5 = i0;
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B7;}
  B8:;
  i0 = l4;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = p2;
  i2 = p1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  p2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = p1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 1073741823u;
  i0 &= i1;
  l5 = i0;
  B7:;
  i0 = 0u;
  p1 = i0;
  i0 = p2;
  i1 = 0u;
  i2 = l5;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l3;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l7 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l8 = i0;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l5 = i0;
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l9 = i0;
  i0 = l7;
  i1 = l8;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l10 = i0;
  i1 = 4294967294u;
  i0 += i1;
  l11 = i0;
  i0 = l7;
  l12 = i0;
  L12: vm_checktime();
    i0 = 0u;
    p1 = i0;
    i0 = l8;
    l0 = i0;
    i0 = 0u;
    p2 = i0;
    L13: vm_checktime();
      i0 = l12;
      i1 = p1;
      i0 += i1;
      l4 = i0;
      i1 = p2;
      i2 = l4;
      i2 = i32_load16_u((&M0), (u64)(i2));
      i1 += i2;
      i2 = l5;
      i2 = i32_load16_u((&M0), (u64)(i2));
      i3 = l9;
      i4 = p1;
      i3 += i4;
      i3 = i32_load16_u((&M0), (u64)(i3));
      i2 *= i3;
      i1 += i2;
      p2 = i1;
      i32_store16((&M0), (u64)(i0), i1);
      i0 = p2;
      i1 = 16u;
      i0 >>= (i1 & 31);
      p2 = i0;
      i0 = p1;
      i1 = 2u;
      i0 += i1;
      p1 = i0;
      i0 = l0;
      i1 = 4294967295u;
      i0 += i1;
      l0 = i0;
      if (i0) {goto L13;}
    i0 = l10;
    p1 = i0;
    i0 = p2;
    i0 = !(i0);
    if (i0) {goto B14;}
    i0 = l10;
    i1 = p2;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l11;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    B14:;
    i0 = l10;
    i1 = 2u;
    i0 += i1;
    l10 = i0;
    i0 = l11;
    i1 = 2u;
    i0 += i1;
    l11 = i0;
    i0 = l5;
    i1 = 2u;
    i0 += i1;
    l5 = i0;
    i0 = l12;
    i1 = 2u;
    i0 += i1;
    l12 = i0;
    i0 = l6;
    i1 = 4294967295u;
    i0 += i1;
    l6 = i0;
    if (i0) {goto L12;}
    goto B10;
  B11:;
  i0 = l7;
  i1 = l6;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  p1 = i0;
  B10:;
  i0 = p1;
  i1 = l7;
  i0 -= i1;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  p1 = i0;
  B9:;
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i2 = 1u;
  i1 |= i2;
  i2 = p1;
  i3 = 4294967294u;
  i2 &= i3;
  i3 = l3;
  i3 = i32_load((&M0), (u64)(i3));
  i4 = l2;
  i4 = i32_load((&M0), (u64)(i4));
  i3 ^= i4;
  i4 = 1u;
  i3 &= i4;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B15;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  m_free(i0);
  i0 = l1;
  m_free(i0);
  B15:;
  goto Bfunc;
  B6:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B1:;
  i0 = 15587u;
  i1 = 11330u;
  i2 = 714u;
  i3 = 38829u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = 15587u;
  i1 = 11330u;
  i2 = 714u;
  i3 = 38829u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mpz_pow_inpl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = p2;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B8;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 3u;
  i0 = i0 <= i1;
  if (i0) {goto B5;}
  i0 = 12u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967292u;
  i1 &= i2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  l1 = i2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  l2 = i1;
  i2 = 4294967292u;
  i1 &= i2;
  i2 = l1;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l2;
  i2 = 1u;
  i1 >>= (i2 & 31);
  i2 = 2147483646u;
  i1 &= i2;
  i1 = m_malloc(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 >>= (i3 & 31);
  i3 = 2147483646u;
  i2 &= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 3u;
  i0 = i0 <= i1;
  if (i0) {goto B4;}
  i0 = 12u;
  i0 = m_malloc(i0);
  l3 = i0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967292u;
  i1 &= i2;
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  p1 = i2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i2 = 4294967292u;
  i1 &= i2;
  i2 = p1;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = p2;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l3;
  i1 = l1;
  i2 = 1u;
  i1 >>= (i2 & 31);
  i2 = 2147483646u;
  i1 &= i2;
  i1 = m_malloc(i1);
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 >>= (i3 & 31);
  i3 = 2147483646u;
  i2 &= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = p1;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B9;}
  B10:;
  i0 = p1;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = p2;
  i2 = 4u;
  i1 = m_realloc(i1, i2);
  p2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = 8u;
  i1 |= i2;
  p1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B9:;
  i0 = p0;
  i1 = p1;
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 1u;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l3;
  i1 = 8u;
  i0 += i1;
  l5 = i0;
  L12: vm_checktime();
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 1u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B13;}
    i0 = p0;
    i1 = p0;
    i2 = l0;
    mpz_mul_inpl(i0, i1, i2);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    i0 = !(i0);
    if (i0) {goto B6;}
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    B13:;
    i0 = p1;
    i1 = 4294967294u;
    i0 += i1;
    l6 = i0;
    i0 = p1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    p2 = i0;
    i0 = l2;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B15;}
    i0 = l6;
    i1 = l2;
    i2 = 1u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l1 = i0;
    goto B14;
    B15:;
    i0 = 1u;
    i1 = l2;
    i0 -= i1;
    l1 = i0;
    L16: vm_checktime();
      i0 = p1;
      i1 = p2;
      i2 = 65534u;
      i1 &= i2;
      i2 = p1;
      i2 = i32_load16_u((&M0), (u64)(i2 + 2));
      p2 = i2;
      i3 = 16u;
      i2 <<= (i3 & 31);
      i1 |= i2;
      i2 = 1u;
      i1 >>= (i2 & 31);
      i32_store16((&M0), (u64)(i0), i1);
      i0 = p1;
      i1 = 2u;
      i0 += i1;
      p1 = i0;
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      l1 = i0;
      if (i0) {goto L16;}
    i0 = l6;
    i1 = l2;
    i2 = 1u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l1 = i0;
    p1 = i0;
    B14:;
    i0 = p1;
    i1 = p2;
    i2 = 65534u;
    i1 &= i2;
    i2 = 1u;
    i1 >>= (i2 & 31);
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l4;
    i1 = l2;
    i2 = l1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i2 = !(i2);
    i1 -= i2;
    p1 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B11;}
    i0 = l0;
    i1 = l0;
    i2 = l0;
    mpz_mul_inpl(i0, i1, i2);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    if (i0) {goto L12;}
  B11:;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B1;
  B8:;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  goto Bfunc;
  B7:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B18;}
  i0 = p1;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B17;}
  B18:;
  i0 = p1;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = p2;
  i2 = 4u;
  i1 = m_realloc(i1, i2);
  p2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = 8u;
  i1 |= i2;
  p1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B17:;
  i0 = p0;
  i1 = p1;
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 1u;
  i32_store16((&M0), (u64)(i0), i1);
  goto Bfunc;
  B6:;
  i0 = l3;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  if (i0) {goto B1;}
  goto B0;
  B5:;
  i0 = 15587u;
  i1 = 11330u;
  i2 = 714u;
  i3 = 38829u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B4:;
  i0 = 15587u;
  i1 = 11330u;
  i2 = 714u;
  i3 = 38829u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B3:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B2:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B1:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  m_free(i0);
  i0 = l0;
  m_free(i0);
  B0:;
  i0 = l3;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  m_free(i0);
  i0 = l3;
  m_free(i0);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mpz_pow3_inpl(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p2;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = i32_load16_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  goto B0;
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l1;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B6;}
  B7:;
  i0 = l1;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  i2 = 4u;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = 8u;
  i1 |= i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B6:;
  i0 = p0;
  i1 = l1;
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = 1u;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 3u;
  i0 = i0 <= i1;
  if (i0) {goto B9;}
  i0 = 12u;
  i0 = m_malloc(i0);
  l2 = i0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967292u;
  i1 &= i2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  l1 = i2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i2 = 4294967292u;
  i1 &= i2;
  i2 = l1;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = l3;
  i2 = 1u;
  i1 >>= (i2 & 31);
  i2 = 2147483646u;
  i1 &= i2;
  i1 = m_malloc(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 >>= (i3 & 31);
  i3 = 2147483646u;
  i2 &= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 3u;
  i0 = i0 <= i1;
  if (i0) {goto B8;}
  i0 = 12u;
  i0 = m_malloc(i0);
  l4 = i0;
  i1 = l4;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967292u;
  i1 &= i2;
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  p1 = i2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i2 = 4294967292u;
  i1 &= i2;
  i2 = p1;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = p2;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l4;
  i1 = l1;
  i2 = 1u;
  i1 >>= (i2 & 31);
  i2 = 2147483646u;
  i1 &= i2;
  i1 = m_malloc(i1);
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 >>= (i3 & 31);
  i3 = 2147483646u;
  i2 &= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l4;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l4;
  i1 = 8u;
  i0 += i1;
  l5 = i0;
  i0 = l4;
  i1 = 4u;
  i0 += i1;
  l6 = i0;
  L12: vm_checktime();
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 1u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B13;}
    i0 = p0;
    i1 = p0;
    i2 = l2;
    mpz_mul_inpl(i0, i1, i2);
    i0 = l0;
    i1 = p0;
    i2 = p0;
    i3 = p3;
    mpz_divmod_inpl(i0, i1, i2, i3);
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B10;}
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    B13:;
    i0 = p1;
    i1 = 4294967294u;
    i0 += i1;
    l7 = i0;
    i0 = p1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    p2 = i0;
    i0 = l3;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B15;}
    i0 = l7;
    i1 = l3;
    i2 = 1u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l1 = i0;
    goto B14;
    B15:;
    i0 = 1u;
    i1 = l3;
    i0 -= i1;
    l1 = i0;
    L16: vm_checktime();
      i0 = p1;
      i1 = p2;
      i2 = 65534u;
      i1 &= i2;
      i2 = p1;
      i2 = i32_load16_u((&M0), (u64)(i2 + 2));
      p2 = i2;
      i3 = 16u;
      i2 <<= (i3 & 31);
      i1 |= i2;
      i2 = 1u;
      i1 >>= (i2 & 31);
      i32_store16((&M0), (u64)(i0), i1);
      i0 = p1;
      i1 = 2u;
      i0 += i1;
      p1 = i0;
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      l1 = i0;
      if (i0) {goto L16;}
    i0 = l7;
    i1 = l3;
    i2 = 1u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l1 = i0;
    p1 = i0;
    B14:;
    i0 = p1;
    i1 = p2;
    i2 = 65534u;
    i1 &= i2;
    i2 = 1u;
    i1 >>= (i2 & 31);
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l6;
    i1 = l3;
    i2 = l1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i2 = !(i2);
    i1 -= i2;
    p1 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B11;}
    i0 = l2;
    i1 = l2;
    i2 = l2;
    mpz_mul_inpl(i0, i1, i2);
    i0 = l0;
    i1 = l2;
    i2 = l2;
    i3 = p3;
    mpz_divmod_inpl(i0, i1, i2, i3);
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    if (i0) {goto L12;}
  B11:;
  i0 = l0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B3;}
  goto B4;
  B10:;
  i0 = l4;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B4;}
  goto B3;
  B9:;
  i0 = 15587u;
  i1 = 11330u;
  i2 = 714u;
  i3 = 38829u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B8:;
  i0 = 15587u;
  i1 = 11330u;
  i2 = 714u;
  i3 = 38829u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B5:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B4:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  m_free(i0);
  B3:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B17;}
  i0 = l2;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  m_free(i0);
  i0 = l2;
  m_free(i0);
  B17:;
  i0 = l4;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  m_free(i0);
  i0 = l4;
  m_free(i0);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mpz_divmod_inpl(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0, l15 = 0, 
      l16 = 0, l17 = 0, l18 = 0, l19 = 0, l20 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p3;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  i1 = 2u;
  i2 = l2;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = l4;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l3;
  i0 = i0 >= i1;
  if (i0) {goto B7;}
  B8:;
  i0 = l4;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = l2;
  i1 = l3;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = m_realloc(i0, i1);
  l2 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  B7:;
  i0 = l2;
  i1 = 0u;
  i2 = l1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i3 = 2u;
  i2 += i3;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  i1 = 2u;
  i2 = l2;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = l3;
  i1 = 2u;
  i0 >>= (i1 & 31);
  l5 = i0;
  i1 = l4;
  i0 = i0 >= i1;
  if (i0) {goto B9;}
  B10:;
  i0 = l3;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = l2;
  i1 = l4;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = m_realloc(i0, i1);
  l2 = i0;
  i0 = p1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l4;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l3 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = 1073741823u;
  i0 &= i1;
  l5 = i0;
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  B9:;
  i0 = l1;
  i1 = 2u;
  i2 = l1;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = l5;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B11;}
  B12:;
  i0 = l3;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  i2 = l1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l3 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B11:;
  i0 = p1;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 &= i2;
  i2 = l3;
  i3 = 4294967294u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i1 = p2;
  i2 = 4u;
  i1 += i2;
  l1 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  l6 = i0;
  i1 = p3;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l7 = i1;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l8 = i0;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l9 = i0;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l10 = i0;
  i0 = l6;
  i1 = l7;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = l10;
  i1 = l6;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 4294967294u;
  i1 += i2;
  l3 = i1;
  i0 += i1;
  l2 = i0;
  i0 = l9;
  i1 = l3;
  i0 += i1;
  l3 = i0;
  i0 = l6;
  l4 = i0;
  L14: vm_checktime();
    i0 = l3;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i1 = l2;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 -= i1;
    l1 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B1;}
    i0 = l1;
    if (i0) {goto B2;}
    i0 = l2;
    i1 = 4294967294u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i1 = 4294967294u;
    i0 += i1;
    l3 = i0;
    i0 = l4;
    i1 = 4294967295u;
    i0 += i1;
    l4 = i0;
    if (i0) {goto L14;}
  B13:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l8;
  i1 = 1u;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = 1u;
  i32_store((&M0), (u64)(i0), i1);
  goto B0;
  B6:;
  i0 = 16493u;
  i1 = 11330u;
  i2 = 1504u;
  i3 = 38773u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B5:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B4:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B3:;
  i0 = 14164u;
  i1 = 11330u;
  i2 = 707u;
  i3 = 38805u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B2:;
  i0 = 0u;
  l5 = i0;
  i0 = l10;
  i1 = l7;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l11 = i0;
  i0 = i32_load16_s((&M0), (u64)(i0));
  l3 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B15;}
  i0 = 0u;
  l2 = i0;
  L16: vm_checktime();
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i1 = 17u;
    i0 <<= (i1 & 31);
    i1 = 16u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l3 = i0;
    i1 = 4294967295u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L16;}
  i0 = l2;
  i1 = 65535u;
  i0 &= i1;
  l5 = i0;
  B15:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i1 = l6;
  i2 = 1u;
  i1 += i2;
  l12 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l9;
  i1 = l6;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l13 = i0;
  i1 = 0u;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = l12;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B17;}
  i0 = l9;
  i1 = l12;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l4 = i0;
  i0 = 16u;
  i1 = l5;
  i0 -= i1;
  l14 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = l9;
  l2 = i0;
  L18: vm_checktime();
    i0 = l2;
    i1 = l2;
    i1 = i32_load16_u((&M0), (u64)(i1));
    l1 = i1;
    i2 = l5;
    i1 <<= (i2 & 31);
    i2 = l3;
    i1 |= i2;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = l14;
    i0 >>= (i1 & 31);
    l3 = i0;
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i1 = l4;
    i0 = i0 < i1;
    if (i0) {goto L18;}
  B17:;
  i0 = l11;
  i0 = i32_load16_u((&M0), (u64)(i0));
  i1 = l5;
  i0 <<= (i1 & 31);
  l15 = i0;
  i0 = l7;
  i1 = 1u;
  i0 = i0 <= i1;
  if (i0) {goto B19;}
  i0 = l10;
  i1 = l7;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967292u;
  i0 += i1;
  i0 = i32_load16_u((&M0), (u64)(i0));
  i1 = 16u;
  i2 = l5;
  i1 -= i2;
  i0 >>= (i1 & 31);
  i1 = l15;
  i0 |= i1;
  l15 = i0;
  B19:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l12;
  i2 = l7;
  i1 -= i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l16 = i0;
  i1 = l7;
  i0 = i0 <= i1;
  if (i0) {goto B23;}
  i0 = l8;
  i1 = l2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l17 = i0;
  i0 = 0u;
  i1 = l7;
  i0 -= i1;
  l2 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B22;}
  i0 = l9;
  i1 = l6;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l2 = i0;
  L25: vm_checktime();
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    if (i0) {goto B24;}
    i0 = l17;
    i1 = l2;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i2 = l15;
    i1 = DIV_U(i1, i2);
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = 4294967294u;
    i0 += i1;
    l2 = i0;
    i0 = l17;
    i1 = 4294967294u;
    i0 += i1;
    l17 = i0;
    i0 = l16;
    i1 = 4294967295u;
    i0 += i1;
    l16 = i0;
    i1 = l7;
    i0 = i0 > i1;
    if (i0) {goto L25;}
    goto B21;
  B24:;
  L26: vm_checktime();
    goto L26;
  B23:;
  i0 = l16;
  l7 = i0;
  goto B20;
  B22:;
  i0 = l2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l18 = i0;
  L27: vm_checktime();
    i0 = l13;
    l14 = i0;
    i1 = 4294967294u;
    i0 += i1;
    l13 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l15;
    i0 = DIV_U(i0, i1);
    l6 = i0;
    i0 = 0u;
    l1 = i0;
    i0 = l14;
    i1 = l18;
    i0 += i1;
    l19 = i0;
    l2 = i0;
    i0 = 0u;
    l11 = i0;
    i0 = l10;
    l3 = i0;
    L29: vm_checktime();
      i0 = l3;
      i0 = i32_load16_u((&M0), (u64)(i0));
      i1 = l5;
      i0 <<= (i1 & 31);
      i1 = l11;
      i2 = 16u;
      i1 >>= (i2 & 31);
      i0 |= i1;
      l11 = i0;
      i1 = 65535u;
      i0 &= i1;
      i1 = l6;
      i0 *= i1;
      l4 = i0;
      i1 = l2;
      i1 = i32_load16_u((&M0), (u64)(i1));
      l12 = i1;
      i0 = i0 >= i1;
      if (i0) {goto B30;}
      i0 = l12;
      i1 = l4;
      i0 -= i1;
      l20 = i0;
      i1 = l1;
      i0 = i0 <= i1;
      if (i0) {goto B30;}
      i0 = l2;
      i1 = l20;
      i2 = l1;
      i1 -= i2;
      i32_store16((&M0), (u64)(i0), i1);
      i0 = 0u;
      l1 = i0;
      i0 = l3;
      i1 = 2u;
      i0 += i1;
      l3 = i0;
      i0 = l2;
      i1 = 2u;
      i0 += i1;
      l2 = i0;
      i1 = l14;
      i0 = i0 < i1;
      if (i0) {goto L29;}
      goto B28;
      B30:;
      i0 = l2;
      i1 = 0u;
      i2 = l4;
      i3 = l12;
      i2 -= i3;
      i3 = l1;
      i2 += i3;
      l1 = i2;
      i1 -= i2;
      i32_store16((&M0), (u64)(i0), i1);
      i0 = l1;
      i1 = 16u;
      i0 >>= (i1 & 31);
      i1 = l1;
      i2 = 65535u;
      i1 &= i2;
      i2 = 0u;
      i1 = i1 != i2;
      i0 += i1;
      l1 = i0;
      i0 = l3;
      i1 = 2u;
      i0 += i1;
      l3 = i0;
      i0 = l2;
      i1 = 2u;
      i0 += i1;
      l2 = i0;
      i1 = l14;
      i0 = i0 < i1;
      if (i0) {goto L29;}
    B28:;
    i0 = l1;
    i1 = l14;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 -= i1;
    l12 = i0;
    i0 = !(i0);
    if (i0) {goto B31;}
    L32: vm_checktime();
      i0 = 0u;
      l1 = i0;
      i0 = l19;
      l2 = i0;
      i0 = 0u;
      l4 = i0;
      i0 = l10;
      l3 = i0;
      L33: vm_checktime();
        i0 = l2;
        i1 = l1;
        i2 = l2;
        i2 = i32_load16_u((&M0), (u64)(i2));
        i1 += i2;
        i2 = l3;
        i2 = i32_load16_u((&M0), (u64)(i2));
        i3 = l5;
        i2 <<= (i3 & 31);
        i3 = l4;
        i4 = 16u;
        i3 >>= (i4 & 31);
        i2 |= i3;
        l4 = i2;
        i3 = 65535u;
        i2 &= i3;
        i1 += i2;
        l1 = i1;
        i32_store16((&M0), (u64)(i0), i1);
        i0 = l1;
        i1 = 16u;
        i0 >>= (i1 & 31);
        l1 = i0;
        i0 = l3;
        i1 = 2u;
        i0 += i1;
        l3 = i0;
        i0 = l2;
        i1 = 2u;
        i0 += i1;
        l2 = i0;
        i1 = l14;
        i0 = i0 < i1;
        if (i0) {goto L33;}
      i0 = l6;
      i1 = 4294967295u;
      i0 += i1;
      l6 = i0;
      i0 = l12;
      i1 = l1;
      i0 -= i1;
      l12 = i0;
      if (i0) {goto L32;}
    B31:;
    i0 = l17;
    i1 = l6;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l17;
    i1 = 4294967294u;
    i0 += i1;
    l17 = i0;
    i0 = l16;
    i1 = 4294967295u;
    i0 += i1;
    l16 = i0;
    i1 = l7;
    i0 = i0 > i1;
    if (i0) {goto L27;}
  B21:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i1 = l7;
  i32_store((&M0), (u64)(i0), i1);
  B20:;
  i0 = l9;
  i1 = l7;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l2 = i0;
  i1 = l9;
  i0 = i0 < i1;
  if (i0) {goto B34;}
  i0 = 16u;
  i1 = l5;
  i0 -= i1;
  l4 = i0;
  i0 = 0u;
  l3 = i0;
  L35: vm_checktime();
    i0 = l2;
    i1 = l2;
    i1 = i32_load16_u((&M0), (u64)(i1));
    l1 = i1;
    i2 = l5;
    i1 >>= (i2 & 31);
    i2 = l3;
    i1 |= i2;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = l4;
    i0 <<= (i1 & 31);
    l3 = i0;
    i0 = l2;
    i1 = 4294967294u;
    i0 += i1;
    l2 = i0;
    i1 = l9;
    i0 = i0 >= i1;
    if (i0) {goto L35;}
  B34:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B36;}
  i0 = l8;
  i1 = l2;
  i2 = 4294967295u;
  i1 += i2;
  l3 = i1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l2 = i0;
  L38: vm_checktime();
    i0 = l2;
    i0 = i32_load16_u((&M0), (u64)(i0));
    if (i0) {goto B37;}
    i0 = l1;
    i1 = l3;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = 4294967294u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i1 = 4294967295u;
    i0 += i1;
    l3 = i0;
    i1 = 4294967295u;
    i0 = i0 != i1;
    if (i0) {goto L38;}
  B37:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l7 = i0;
  B36:;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l9;
  i1 = l7;
  i2 = 4294967295u;
  i1 += i2;
  l3 = i1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l2 = i0;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  L39: vm_checktime();
    i0 = l2;
    i0 = i32_load16_u((&M0), (u64)(i0));
    if (i0) {goto B0;}
    i0 = l1;
    i1 = l3;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = 4294967294u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i1 = 4294967295u;
    i0 += i1;
    l3 = i0;
    i1 = 4294967295u;
    i0 = i0 != i1;
    if (i0) {goto L39;}
    goto B0;
  B1:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 ^= i1;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B40;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B40;}
  i0 = 0u;
  i1 = 4u;
  i0 = m_realloc(i0, i1);
  l2 = i0;
  i1 = 1u;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  j1 = 4294967305ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i1 = p0;
  i2 = l0;
  mpz_add_inpl(i0, i1, i2);
  i0 = p1;
  i1 = p1;
  i2 = p3;
  mpz_add_inpl(i0, i1, i2);
  B40:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 mpz_hash(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l1 = i0;
  i0 = 0u;
  l0 = i0;
  L1: vm_checktime();
    i0 = l0;
    i1 = 16u;
    i0 <<= (i1 & 31);
    i1 = l1;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 |= i1;
    l0 = i0;
    i0 = l1;
    i1 = l2;
    i0 = i0 > i1;
    l3 = i0;
    i0 = l1;
    i1 = 4294967294u;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    if (i0) {goto L1;}
  B0:;
  i0 = 0u;
  i1 = l0;
  i0 -= i1;
  i1 = l0;
  i2 = p0;
  i2 = i32_load8_u((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mpz_as_int_checked(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l1 = i0;
  i0 = 0u;
  l0 = i0;
  L2: vm_checktime();
    i0 = l0;
    i1 = 32767u;
    i0 = i0 > i1;
    if (i0) {goto B0;}
    i0 = l0;
    i1 = 16u;
    i0 <<= (i1 & 31);
    i1 = l1;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 |= i1;
    l0 = i0;
    i0 = l1;
    i1 = l2;
    i0 = i0 > i1;
    l3 = i0;
    i0 = l1;
    i1 = 4294967294u;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    if (i0) {goto L2;}
  B1:;
  i0 = p1;
  i1 = 0u;
  i2 = l0;
  i1 -= i2;
  i2 = l0;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3));
  i4 = 1u;
  i3 &= i4;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 1u;
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mpz_as_uint_checked(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  p0 = i0;
  i0 = 0u;
  l0 = i0;
  i0 = 0u;
  l1 = i0;
  L3: vm_checktime();
    i0 = l1;
    i1 = 65535u;
    i0 = i0 > i1;
    if (i0) {goto B0;}
    i0 = l1;
    i1 = 16u;
    i0 <<= (i1 & 31);
    i1 = p0;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 |= i1;
    l1 = i0;
    i0 = p0;
    i1 = l2;
    i0 = i0 > i1;
    l3 = i0;
    i0 = p0;
    i1 = 4294967294u;
    i0 += i1;
    p0 = i0;
    i0 = l3;
    if (i0) {goto L3;}
    goto B1;
  B2:;
  i0 = 0u;
  l1 = i0;
  B1:;
  i0 = p1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 1u;
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mpz_as_bytes(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p3;
  i1 = p2;
  i0 += i1;
  p2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 0u;
  l2 = i0;
  i0 = 1u;
  l3 = i0;
  i0 = 0u;
  l4 = i0;
  i0 = 0u;
  p1 = i0;
  L3: vm_checktime();
    i0 = l2;
    i1 = 16u;
    i0 <<= (i1 & 31);
    i1 = l1;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 |= i1;
    l2 = i0;
    i0 = l4;
    i1 = 4294967288u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B4;}
    i0 = p2;
    i1 = 4294967295u;
    i0 += i1;
    p2 = i0;
    i0 = l4;
    i1 = 24u;
    i0 += i1;
    l4 = i0;
    L5: vm_checktime();
      i0 = p0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i1 = 1u;
      i0 &= i1;
      if (i0) {goto B7;}
      i0 = p2;
      i1 = l2;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i0 = p3;
      i1 = p2;
      i0 = i0 != i1;
      if (i0) {goto B6;}
      goto B0;
      B7:;
      i0 = l2;
      i1 = 4294967295u;
      i0 ^= i1;
      i1 = 255u;
      i0 &= i1;
      i1 = l3;
      i0 += i1;
      l5 = i0;
      i1 = 8u;
      i0 >>= (i1 & 31);
      i1 = 255u;
      i0 &= i1;
      l3 = i0;
      i0 = p2;
      i1 = l5;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i0 = p3;
      i1 = p2;
      i0 = i0 == i1;
      if (i0) {goto B0;}
      B6:;
      i0 = p2;
      i1 = 4294967295u;
      i0 += i1;
      p2 = i0;
      i0 = l2;
      i1 = 8u;
      i0 >>= (i1 & 31);
      l2 = i0;
      i0 = l4;
      i1 = 4294967288u;
      i0 += i1;
      l4 = i0;
      i1 = 15u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L5;}
    i0 = p2;
    i1 = 1u;
    i0 += i1;
    p2 = i0;
    i0 = l4;
    i1 = 4294967288u;
    i0 += i1;
    l4 = i0;
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 4294967295u;
    i0 += i1;
    l0 = i0;
    if (i0) {goto L3;}
    goto B0;
    B4:;
    i0 = l4;
    i1 = 16u;
    i0 += i1;
    l4 = i0;
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 4294967295u;
    i0 += i1;
    l0 = i0;
    if (i0) {goto L3;}
    goto B0;
  B2:;
  i0 = 0u;
  i1 = 24u;
  i0 <<= (i1 & 31);
  i1 = 24u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = 4294967295u;
  i0 += i1;
  l4 = i0;
  i0 = 0u;
  p2 = i0;
  i0 = 1u;
  l3 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = 0u;
  p1 = i0;
  L8: vm_checktime();
    i0 = p2;
    i1 = 16u;
    i0 <<= (i1 & 31);
    i1 = l1;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 |= i1;
    p2 = i0;
    i0 = l2;
    i1 = 4294967288u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B9;}
    i0 = l2;
    i1 = 24u;
    i0 += i1;
    l2 = i0;
    L10: vm_checktime();
      i0 = p0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i1 = 1u;
      i0 &= i1;
      if (i0) {goto B12;}
      i0 = p3;
      i1 = p2;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i0 = l4;
      i1 = p3;
      i0 = i0 != i1;
      if (i0) {goto B11;}
      goto B0;
      B12:;
      i0 = p2;
      i1 = 4294967295u;
      i0 ^= i1;
      i1 = 255u;
      i0 &= i1;
      i1 = l3;
      i0 += i1;
      l5 = i0;
      i1 = 8u;
      i0 >>= (i1 & 31);
      i1 = 255u;
      i0 &= i1;
      l3 = i0;
      i0 = p3;
      i1 = l5;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i0 = l4;
      i1 = p3;
      i0 = i0 == i1;
      if (i0) {goto B0;}
      B11:;
      i0 = p3;
      i1 = 1u;
      i0 += i1;
      p3 = i0;
      i0 = p2;
      i1 = 8u;
      i0 >>= (i1 & 31);
      p2 = i0;
      i0 = l2;
      i1 = 4294967288u;
      i0 += i1;
      l2 = i0;
      i1 = 15u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L10;}
    i0 = l2;
    i1 = 4294967288u;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 4294967295u;
    i0 += i1;
    l0 = i0;
    if (i0) {goto L8;}
    goto B0;
    B9:;
    i0 = l2;
    i1 = 16u;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 4294967295u;
    i0 += i1;
    l0 = i0;
    if (i0) {goto L8;}
  B0:;
  i0 = p1;
  i1 = 24u;
  i0 <<= (i1 & 31);
  i1 = 24u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static f64 mpz_as_float(u32 p0) {
  u32 l0 = 0, l1 = 0, l3 = 0;
  f64 l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  f64 d0, d1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i1 = l0;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l0 = i0;
  d0 = 0;
  l2 = d0;
  L2: vm_checktime();
    d0 = l2;
    d1 = 65536;
    d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
    i1 = l0;
    i1 = i32_load16_u((&M0), (u64)(i1));
    d1 = (f64)(i1);
    d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
    l2 = d0;
    i0 = l0;
    i1 = l1;
    i0 = i0 > i1;
    l3 = i0;
    i0 = l0;
    i1 = 4294967294u;
    i0 += i1;
    l0 = i0;
    i0 = l3;
    if (i0) {goto L2;}
    goto B0;
  B1:;
  d0 = 0;
  l2 = d0;
  B0:;
  d0 = l2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = l2;
  i2 = p0;
  i2 = i32_load8_u((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  d0 = i2 ? d0 : d1;
  FUNC_EPILOGUE;
  return d0;
}

static u32 mpz_as_str_inpl(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = p5;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p1;
  i1 = 4294967294u;
  i0 += i1;
  i1 = 31u;
  i0 = i0 >= i1;
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l0 = i0;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = l0;
  i0 += i1;
  l2 = i0;
  i1 = 4294967294u;
  i0 += i1;
  l3 = i0;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  i0 = p5;
  l0 = i0;
  i0 = p5;
  l4 = i0;
  L5: vm_checktime();
    i0 = l0;
    p3 = i0;
    i1 = 48u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 0u;
    p1 = i0;
    i0 = l2;
    i1 = l1;
    i0 = i0 <= i1;
    if (i0) {goto B9;}
    i0 = l1;
    l0 = i0;
    L10: vm_checktime();
      i0 = l0;
      i0 = i32_load16_u((&M0), (u64)(i0));
      if (i0) {goto B8;}
      i0 = l0;
      i1 = 2u;
      i0 += i1;
      l0 = i0;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto L10;}
    B9:;
    i0 = p3;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = p4;
    i0 = !(i0);
    if (i0) {goto B6;}
    goto B7;
    B8:;
    i0 = 1u;
    p1 = i0;
    i0 = p3;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = p4;
    i0 = !(i0);
    if (i0) {goto B6;}
    B7:;
    i0 = l0;
    i1 = l4;
    i0 -= i1;
    i1 = 3u;
    i0 = i0 != i1;
    if (i0) {goto B6;}
    i0 = p3;
    i1 = 1u;
    i0 += i1;
    i1 = p4;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p3;
    i1 = 2u;
    i0 += i1;
    l0 = i0;
    l4 = i0;
    i0 = p1;
    if (i0) {goto L5;}
    goto B1;
    B6:;
    i0 = p1;
    if (i0) {goto L5;}
    goto B1;
  B4:;
  i0 = 13490u;
  i1 = 11330u;
  i2 = 1679u;
  i3 = 38789u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B3:;
  i0 = 12666u;
  i1 = 11330u;
  i2 = 1678u;
  i3 = 38789u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B2:;
  i0 = p3;
  i1 = 255u;
  i0 &= i1;
  i1 = 198u;
  i0 += i1;
  l5 = i0;
  i0 = p5;
  l0 = i0;
  i0 = p5;
  l6 = i0;
  L11: vm_checktime();
    i0 = l0;
    l7 = i0;
    i0 = 0u;
    p3 = i0;
    i0 = l3;
    l0 = i0;
    L12: vm_checktime();
      i0 = l0;
      i1 = p3;
      i2 = 16u;
      i1 <<= (i2 & 31);
      i2 = l0;
      i2 = i32_load16_u((&M0), (u64)(i2));
      i1 |= i2;
      p3 = i1;
      i2 = p1;
      i1 = DIV_U(i1, i2);
      l4 = i1;
      i32_store16((&M0), (u64)(i0), i1);
      i0 = p3;
      i1 = l4;
      i2 = p1;
      i1 *= i2;
      i0 -= i1;
      p3 = i0;
      i0 = l0;
      i1 = 4294967294u;
      i0 += i1;
      l0 = i0;
      i1 = l1;
      i0 = i0 >= i1;
      if (i0) {goto L12;}
    i0 = 0u;
    l4 = i0;
    i0 = l7;
    i1 = p3;
    i2 = 48u;
    i1 += i2;
    l0 = i1;
    i2 = l5;
    i3 = 0u;
    i4 = l0;
    i5 = 57u;
    i4 = i4 > i5;
    i2 = i4 ? i2 : i3;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = l1;
    i0 = i0 <= i1;
    if (i0) {goto B16;}
    i0 = l1;
    l0 = i0;
    L17: vm_checktime();
      i0 = l0;
      i0 = i32_load16_u((&M0), (u64)(i0));
      if (i0) {goto B15;}
      i0 = l0;
      i1 = 2u;
      i0 += i1;
      l0 = i0;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto L17;}
    B16:;
    i0 = l7;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = p4;
    i0 = !(i0);
    if (i0) {goto B13;}
    goto B14;
    B15:;
    i0 = 1u;
    l4 = i0;
    i0 = l7;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = p4;
    i0 = !(i0);
    if (i0) {goto B13;}
    B14:;
    i0 = l0;
    i1 = l6;
    i0 -= i1;
    i1 = 3u;
    i0 = i0 != i1;
    if (i0) {goto B13;}
    i0 = l7;
    i1 = 1u;
    i0 += i1;
    i1 = p4;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l7;
    i1 = 2u;
    i0 += i1;
    l0 = i0;
    l6 = i0;
    i0 = l4;
    if (i0) {goto L11;}
    goto B1;
    B13:;
    i0 = l4;
    if (i0) {goto L11;}
  B1:;
  i0 = l1;
  m_free(i0);
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B18;}
  i0 = p2;
  i0 = strlen_0(i0);
  p3 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B18;}
  i0 = p2;
  i1 = p3;
  i0 += i1;
  p3 = i0;
  L19: vm_checktime();
    i0 = l0;
    i1 = p3;
    i2 = 4294967295u;
    i1 += i2;
    p3 = i1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = p3;
    i1 = p2;
    i0 = i0 > i1;
    if (i0) {goto L19;}
  B18:;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B20;}
  i0 = l0;
  i1 = 45u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  l0 = i0;
  B20:;
  i0 = l0;
  i1 = 4294967295u;
  i0 += i1;
  p3 = i0;
  i1 = p5;
  i0 = i0 <= i1;
  if (i0) {goto B21;}
  i0 = p5;
  p1 = i0;
  L22: vm_checktime();
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    i0 = p1;
    i1 = p3;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p3;
    i1 = l4;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p3;
    i2 = 4294967295u;
    i1 += i2;
    p3 = i1;
    i0 = i0 < i1;
    if (i0) {goto L22;}
  B21:;
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p5;
  i0 -= i1;
  goto Bfunc;
  B0:;
  i0 = p5;
  l0 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B23;}
  i0 = p5;
  l0 = i0;
  i0 = p2;
  i0 = i32_load8_u((&M0), (u64)(i0));
  p3 = i0;
  i0 = !(i0);
  if (i0) {goto B23;}
  i0 = p2;
  i1 = 1u;
  i0 += i1;
  p1 = i0;
  i0 = p5;
  l0 = i0;
  L24: vm_checktime();
    i0 = l0;
    i1 = p3;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p3 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i0 = p3;
    if (i0) {goto L24;}
  B23:;
  i0 = l0;
  i1 = 48u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  l0 = i0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p5;
  i0 -= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_format_float(f64 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5) {
  u32 l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l7 = 0, l8 = 0, l9 = 0, 
      l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0;
  u64 l0 = 0;
  f64 l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1;
  f64 d0, d1, d2, d3, d4;
  i0 = p2;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B5;}
  i0 = p2;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 63u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 1u;
  i0 += i1;
  p1 = i0;
  goto B3;
  B5:;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B6;}
  j0 = l0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B6;}
  i0 = p1;
  i1 = 45u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 1u;
  i0 += i1;
  p5 = i0;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  p0 = d0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  goto B0;
  B6:;
  i0 = p5;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i1 = p5;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 1u;
  i0 += i1;
  p5 = i0;
  goto B0;
  B4:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B2;}
  B3:;
  i0 = p1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  B2:;
  i0 = p2;
  i1 = 1u;
  i0 = i0 > i1;
  goto Bfunc;
  B1:;
  i0 = p1;
  p5 = i0;
  B0:;
  i0 = p3;
  i1 = 32u;
  i0 &= i1;
  l1 = i0;
  j0 = l0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l0 = j0;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B9;}
  i0 = p5;
  i1 = l1;
  i2 = 78u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = p5;
  i1 = l1;
  i2 = 73u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p5;
  i1 = l1;
  i2 = 70u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 2), i1);
  goto B8;
  B9:;
  j0 = l0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B7;}
  i0 = p5;
  i1 = l1;
  i2 = 65u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = p5;
  i1 = l1;
  i2 = 78u;
  i1 |= i2;
  p3 = i1;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p5;
  i1 = p3;
  i32_store8((&M0), (u64)(i0 + 2), i1);
  B8:;
  i0 = p5;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 3), i1);
  i0 = p5;
  i1 = 3u;
  i0 += i1;
  i1 = p1;
  i0 -= i1;
  goto Bfunc;
  B7:;
  i0 = p2;
  i1 = p1;
  i2 = p5;
  i1 -= i2;
  i0 += i1;
  i1 = 4294967295u;
  i0 += i1;
  l2 = i0;
  i0 = 6u;
  i1 = p4;
  i2 = p4;
  i3 = 0u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  p4 = i0;
  i1 = 1u;
  i2 = p4;
  i0 = i2 ? i0 : i1;
  i1 = p4;
  i2 = p3;
  i3 = 32u;
  i2 |= i3;
  l3 = i2;
  i3 = 103u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  p3 = i0;
  d0 = p0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B34;}
  i0 = l3;
  i1 = 102u;
  i0 = i0 != i1;
  if (i0) {goto B33;}
  i0 = l2;
  i1 = 4294967294u;
  i0 += i1;
  i1 = p3;
  i2 = p3;
  i3 = 2u;
  i2 += i3;
  i3 = l2;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  p3 = i0;
  i1 = 1u;
  i0 += i1;
  l4 = i0;
  i0 = 0u;
  l5 = i0;
  d0 = p0;
  l6 = d0;
  i0 = 0u;
  l7 = i0;
  goto B20;
  B34:;
  d0 = p0;
  d1 = 1;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i0 = !(i0);
  if (i0) {goto B32;}
  d0 = p0;
  d1 = 9.9999999999999998e-257;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  p4 = i0;
  i1 = 8u;
  i0 <<= (i1 & 31);
  l4 = i0;
  i1 = 128u;
  i0 |= i1;
  i1 = l4;
  d2 = p0;
  d3 = 1e+256;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = p0;
  i4 = p4;
  d2 = i4 ? d2 : d3;
  l6 = d2;
  d3 = 1.0000000000000001e-128;
  i2 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d2, d3);
  p4 = i2;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i1 = 64u;
  i0 |= i1;
  i1 = l4;
  d2 = l6;
  d3 = 1.0000000000000001e+128;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l6;
  i4 = p4;
  d2 = i4 ? d2 : d3;
  l6 = d2;
  d3 = 9.9999999999999997e-65;
  i2 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d2, d3);
  p4 = i2;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i1 = 32u;
  i0 |= i1;
  i1 = l4;
  d2 = l6;
  d3 = 1e+64;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l6;
  i4 = p4;
  d2 = i4 ? d2 : d3;
  l6 = d2;
  d3 = 1.0000000000000001e-32;
  i2 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d2, d3);
  p4 = i2;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i1 = 16u;
  i0 += i1;
  i1 = l4;
  d2 = l6;
  d3 = 1.0000000000000001e+32;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l6;
  i4 = p4;
  d2 = i4 ? d2 : d3;
  l6 = d2;
  d3 = 9.9999999999999998e-17;
  i2 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d2, d3);
  p4 = i2;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i1 = 8u;
  i0 += i1;
  i1 = l4;
  d2 = l6;
  d3 = 10000000000000000;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l6;
  i4 = p4;
  d2 = i4 ? d2 : d3;
  l6 = d2;
  d3 = 1e-08;
  i2 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d2, d3);
  p4 = i2;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i1 = 4u;
  i0 += i1;
  i1 = l4;
  d2 = l6;
  d3 = 100000000;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l6;
  i4 = p4;
  d2 = i4 ? d2 : d3;
  l6 = d2;
  d3 = 0.0001;
  i2 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d2, d3);
  p4 = i2;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i1 = 2u;
  i0 += i1;
  i1 = l4;
  d2 = l6;
  d3 = 10000;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l6;
  i4 = p4;
  d2 = i4 ? d2 : d3;
  l6 = d2;
  d3 = 0.01;
  i2 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d2, d3);
  p4 = i2;
  i0 = i2 ? i0 : i1;
  d1 = l6;
  d2 = 100;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = l6;
  i3 = p4;
  d1 = i3 ? d1 : d2;
  l6 = d1;
  d2 = 0.10000000000000001;
  i1 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d1, d2);
  p4 = i1;
  i0 += i1;
  l5 = i0;
  d0 = l6;
  d1 = 10;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l6;
  i2 = p4;
  d0 = i2 ? d0 : d1;
  l6 = d0;
  d1 = 1;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B31;}
  d0 = l6;
  d1 = 0.999999999995;
  i0 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B31;}
  i0 = 45u;
  i1 = 43u;
  i2 = l5;
  i0 = i2 ? i0 : i1;
  l8 = i0;
  d0 = 1;
  l6 = d0;
  goto B30;
  B33:;
  i0 = l2;
  i1 = 4294967290u;
  i0 += i1;
  i1 = p3;
  i2 = p3;
  i3 = 6u;
  i2 += i3;
  i3 = l2;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  p3 = i0;
  i0 = 0u;
  l5 = i0;
  i0 = 43u;
  i1 = 0u;
  i2 = l3;
  i3 = 101u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l8 = i0;
  i0 = l3;
  p4 = i0;
  goto B23;
  B32:;
  d0 = p0;
  d1 = p0;
  d2 = 9.9999999999999998e-257;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 1e+256;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  p4 = i2;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d1 = p0;
  d2 = 1.0000000000000001e-128;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 1.0000000000000001e+128;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  l4 = i2;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d1 = p0;
  d2 = 9.9999999999999997e-65;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 1e+64;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  l7 = i2;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d1 = p0;
  d2 = 1.0000000000000001e-32;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 1.0000000000000001e+32;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  l5 = i2;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d1 = p0;
  d2 = 9.9999999999999998e-17;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 10000000000000000;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  l8 = i2;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d1 = p0;
  d2 = 1e-08;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 100000000;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  l9 = i2;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d1 = p0;
  d2 = 0.0001;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 10000;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  l10 = i2;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d1 = p0;
  d2 = 0.01;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 100;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  l11 = i2;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d1 = p0;
  d2 = 0.10000000000000001;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 10;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  l12 = i2;
  i3 = 1u;
  i2 ^= i3;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B29;}
  i0 = 2147483648u;
  l13 = i0;
  goto B28;
  B31:;
  i0 = 45u;
  l8 = i0;
  d0 = l6;
  d1 = 1;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B30;}
  d0 = l6;
  d1 = 10;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  i0 = l5;
  i1 = 1u;
  i0 += i1;
  l5 = i0;
  B30:;
  i0 = l3;
  i1 = 103u;
  i0 = i0 == i1;
  p4 = i0;
  i0 = 102u;
  l9 = i0;
  i0 = l3;
  i1 = 102u;
  i0 = i0 == i1;
  if (i0) {goto B27;}
  i0 = p4;
  i1 = l5;
  i2 = 5u;
  i1 = (u32)((s32)i1 < (s32)i2);
  i0 &= i1;
  if (i0) {goto B27;}
  i0 = p3;
  i1 = l2;
  i2 = 4294967289u;
  i1 += i2;
  p4 = i1;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B35;}
  i0 = l2;
  i1 = 4294967290u;
  i0 += i1;
  i1 = p4;
  i2 = l3;
  i3 = 103u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  p3 = i0;
  B35:;
  i0 = l3;
  p4 = i0;
  goto B24;
  B29:;
  d0 = p0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  l13 = i0;
  B28:;
  d0 = p0;
  d1 = 0.10000000000000001;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  i0 = 0u;
  i1 = 256u;
  i2 = p4;
  i0 = i2 ? i0 : i1;
  p4 = i0;
  i1 = p4;
  i2 = 128u;
  i1 |= i2;
  i2 = l4;
  i0 = i2 ? i0 : i1;
  p4 = i0;
  i1 = p4;
  i2 = 64u;
  i1 |= i2;
  i2 = l7;
  i0 = i2 ? i0 : i1;
  p4 = i0;
  i1 = p4;
  i2 = 32u;
  i1 |= i2;
  i2 = l5;
  i0 = i2 ? i0 : i1;
  p4 = i0;
  i1 = p4;
  i2 = 16u;
  i1 += i2;
  i2 = l8;
  i0 = i2 ? i0 : i1;
  p4 = i0;
  i1 = p4;
  i2 = 8u;
  i1 += i2;
  i2 = l9;
  i0 = i2 ? i0 : i1;
  p4 = i0;
  i1 = p4;
  i2 = 4u;
  i1 += i2;
  i2 = l10;
  i0 = i2 ? i0 : i1;
  p4 = i0;
  i1 = p4;
  i2 = 2u;
  i1 += i2;
  i2 = l11;
  i0 = i2 ? i0 : i1;
  i1 = l12;
  i0 += i1;
  i1 = l13;
  i2 = 9u;
  i1 = (u32)((s32)i1 > (s32)i2);
  l4 = i1;
  i0 += i1;
  l5 = i0;
  i0 = 101u;
  p4 = i0;
  i0 = l3;
  i1 = 101u;
  i0 = i0 == i1;
  if (i0) {goto B36;}
  i0 = l3;
  i1 = 255u;
  i0 &= i1;
  i1 = 102u;
  i0 = i0 != i1;
  if (i0) {goto B26;}
  i0 = l2;
  i1 = l5;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B36;}
  i0 = 102u;
  p4 = i0;
  i0 = p3;
  i1 = l5;
  i0 += i1;
  i1 = 2u;
  i0 += i1;
  i1 = l2;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B25;}
  i0 = 4294967295u;
  i1 = 4294967294u;
  i2 = l2;
  i3 = l5;
  i2 -= i3;
  p3 = i2;
  i3 = 2u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  i1 = p3;
  i0 += i1;
  p3 = i0;
  goto B25;
  B36:;
  i0 = l2;
  i1 = 4294967289u;
  i0 += i1;
  l7 = i0;
  i1 = p3;
  i2 = p3;
  i3 = l7;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  p3 = i0;
  goto B25;
  B27:;
  i0 = p5;
  i1 = 48u;
  i2 = 49u;
  d3 = p0;
  d4 = 0.999999999995;
  i3 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d3, d4);
  i4 = 1u;
  i3 ^= i4;
  i1 = i3 ? i1 : i2;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = 4294967295u;
  l7 = i0;
  i0 = 0u;
  l4 = i0;
  i0 = l2;
  i1 = 4294967294u;
  i0 += i1;
  i1 = l5;
  i2 = 4294967295u;
  i1 += i2;
  l8 = i1;
  i2 = 0u;
  i3 = p4;
  i1 = i3 ? i1 : i2;
  i2 = p3;
  i1 += i2;
  p3 = i1;
  i2 = p3;
  i3 = 2u;
  i2 += i3;
  i3 = l2;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  p3 = i0;
  i0 = !(i0);
  if (i0) {goto B22;}
  i0 = p5;
  i1 = 1u;
  i0 += i1;
  i1 = 46u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p5;
  i1 = 2u;
  i0 += i1;
  p5 = i0;
  i0 = l8;
  i0 = !(i0);
  if (i0) {goto B21;}
  i0 = p3;
  i1 = 4294967295u;
  i0 += i1;
  l2 = i0;
  i0 = l5;
  i1 = 4294967294u;
  i0 += i1;
  l8 = i0;
  i0 = 0u;
  p4 = i0;
  L38: vm_checktime();
    i0 = p5;
    i1 = p4;
    i0 += i1;
    i1 = 48u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i0 = l2;
    i1 = p4;
    i0 = i0 == i1;
    if (i0) {goto B37;}
    i0 = l8;
    i1 = p4;
    i0 = i0 != i1;
    l7 = i0;
    i0 = l4;
    p4 = i0;
    i0 = l7;
    if (i0) {goto L38;}
  B37:;
  i0 = p5;
  i1 = l4;
  i0 += i1;
  p5 = i0;
  i0 = 4294967295u;
  l7 = i0;
  i0 = l5;
  i1 = l4;
  i0 -= i1;
  i1 = 4294967295u;
  i0 += i1;
  l5 = i0;
  i0 = p3;
  i1 = 3u;
  i0 += i1;
  i1 = l4;
  i0 -= i1;
  i1 = 4294967293u;
  i0 += i1;
  l4 = i0;
  goto B20;
  B26:;
  i0 = l3;
  p4 = i0;
  B25:;
  d0 = l6;
  d1 = p0;
  i2 = l4;
  d0 = i2 ? d0 : d1;
  l6 = d0;
  i0 = l2;
  i1 = 4294967290u;
  i0 += i1;
  i1 = p3;
  i2 = p3;
  i3 = 6u;
  i2 += i3;
  i3 = l2;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  i1 = p3;
  i2 = p4;
  i3 = 103u;
  i2 = i2 == i3;
  l4 = i2;
  i0 = i2 ? i0 : i1;
  p3 = i0;
  i1 = l5;
  i2 = 1u;
  i1 += i2;
  l7 = i1;
  i2 = 0u;
  i3 = l4;
  i4 = l5;
  i5 = p3;
  i4 = (u32)((s32)i4 < (s32)i5);
  i3 &= i4;
  l4 = i3;
  i1 = i3 ? i1 : i2;
  i0 -= i1;
  p3 = i0;
  i0 = 43u;
  l8 = i0;
  i0 = 102u;
  i1 = p4;
  i2 = l4;
  i0 = i2 ? i0 : i1;
  p4 = i0;
  i1 = 102u;
  i0 = i0 != i1;
  if (i0) {goto B24;}
  i0 = l7;
  i1 = p3;
  i0 += i1;
  l4 = i0;
  i0 = l5;
  l7 = i0;
  goto B20;
  B24:;
  d0 = l6;
  p0 = d0;
  B23:;
  i0 = 0u;
  l4 = i0;
  i0 = p3;
  i1 = 0u;
  i2 = p3;
  i3 = 0u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  l2 = i0;
  i0 = 103u;
  l9 = i0;
  i0 = p4;
  i1 = 103u;
  i0 = i0 == i1;
  if (i0) {goto B40;}
  i0 = 101u;
  l9 = i0;
  i0 = p4;
  i1 = 255u;
  i0 &= i1;
  i1 = 101u;
  i0 = i0 != i1;
  if (i0) {goto B39;}
  i0 = l2;
  i1 = 1u;
  i0 += i1;
  l4 = i0;
  i0 = 0u;
  l7 = i0;
  d0 = p0;
  l6 = d0;
  i0 = l2;
  if (i0) {goto B19;}
  goto B18;
  B40:;
  i0 = 0u;
  l7 = i0;
  i0 = 1u;
  i1 = l2;
  i2 = p3;
  i3 = 1u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  l2 = i0;
  l4 = i0;
  goto B16;
  B39:;
  i0 = p4;
  l9 = i0;
  d0 = p0;
  l6 = d0;
  i0 = l3;
  i1 = 102u;
  i0 = i0 == i1;
  if (i0) {goto B14;}
  goto B15;
  B22:;
  i0 = p5;
  i1 = 1u;
  i0 += i1;
  p5 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = 0u;
  l8 = i0;
  i0 = l3;
  i1 = 102u;
  i0 = i0 == i1;
  if (i0) {goto B14;}
  goto B15;
  B21:;
  i0 = 0u;
  l5 = i0;
  i0 = p3;
  l4 = i0;
  B20:;
  i0 = 0u;
  l8 = i0;
  i0 = p3;
  i1 = 0u;
  i2 = p3;
  i3 = 0u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  l2 = i0;
  i0 = 102u;
  l9 = i0;
  i0 = l4;
  i1 = 0u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B17;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B18;}
  B19:;
  d0 = l6;
  p0 = d0;
  goto B16;
  B18:;
  i0 = 0u;
  p3 = i0;
  L41: vm_checktime();
    d0 = l6;
    d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
    d1 = 2147483648;
    i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
    if (i0) {goto B43;}
    i0 = 2147483648u;
    p4 = i0;
    goto B42;
    B43:;
    d0 = l6;
    i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
    p4 = i0;
    B42:;
    i0 = p5;
    i1 = p3;
    i0 += i1;
    i1 = 48u;
    i2 = p4;
    i3 = 48u;
    i2 += i3;
    i3 = p4;
    i4 = 0u;
    i3 = (u32)((s32)i3 < (s32)i4);
    i1 = i3 ? i1 : i2;
    i32_store8((&M0), (u64)(i0), i1);
    d0 = l6;
    d1 = l6;
    d1 = (*Z_eosio_injectionZ__eosio_f64_truncZ_dd)(d1);
    d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
    d1 = 10;
    d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
    l6 = d0;
    i0 = l4;
    i1 = p3;
    i2 = 1u;
    i1 += i2;
    p3 = i1;
    i0 = i0 != i1;
    if (i0) {goto L41;}
  i0 = p5;
  i1 = l4;
  i0 += i1;
  p5 = i0;
  B17:;
  i0 = l3;
  i1 = 102u;
  i0 = i0 != i1;
  if (i0) {goto B15;}
  goto B14;
  B16:;
  i0 = 0u;
  p4 = i0;
  L44: vm_checktime();
    d0 = p0;
    d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
    d1 = 2147483648;
    i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
    if (i0) {goto B46;}
    i0 = 2147483648u;
    p3 = i0;
    goto B45;
    B46:;
    d0 = p0;
    i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
    p3 = i0;
    B45:;
    i0 = p5;
    i1 = 48u;
    i2 = p3;
    i3 = 48u;
    i2 += i3;
    i3 = p3;
    i4 = 0u;
    i3 = (u32)((s32)i3 < (s32)i4);
    i1 = i3 ? i1 : i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l7;
    i1 = p4;
    i0 = i0 != i1;
    if (i0) {goto B48;}
    i0 = p5;
    i1 = 1u;
    i0 += i1;
    i1 = 46u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p5;
    i1 = 2u;
    i0 += i1;
    p5 = i0;
    goto B47;
    B48:;
    i0 = p5;
    i1 = 1u;
    i0 += i1;
    p5 = i0;
    B47:;
    d0 = p0;
    i1 = p3;
    d1 = (f64)(s32)(i1);
    d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
    d1 = 10;
    d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
    p0 = d0;
    i0 = l4;
    i1 = p4;
    i2 = 1u;
    i1 += i2;
    p4 = i1;
    i0 = i0 != i1;
    if (i0) {goto L44;}
  d0 = p0;
  l6 = d0;
  i0 = l3;
  i1 = 102u;
  i0 = i0 == i1;
  if (i0) {goto B14;}
  B15:;
  d0 = l6;
  d1 = 5;
  i0 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = 5u;
  l14 = i0;
  goto B10;
  B14:;
  i0 = l5;
  i1 = l4;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B12;}
  d0 = l6;
  d1 = 5;
  i0 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d0, d1);
  i0 = !(i0);
  if (i0) {goto B11;}
  B13:;
  i0 = p5;
  i1 = 4294967295u;
  i0 += i1;
  p3 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  p4 = i0;
  i1 = 46u;
  i0 = i0 != i1;
  if (i0) {goto B49;}
  i0 = 1u;
  l14 = i0;
  goto B10;
  B49:;
  i0 = 2u;
  l14 = i0;
  goto B10;
  B12:;
  i0 = 5u;
  l14 = i0;
  goto B10;
  B11:;
  i0 = 5u;
  l14 = i0;
  B10:;
  L50: vm_checktime();
    i0 = l14;
    switch (i0) {
      case 0: goto B107;
      case 1: goto B106;
      case 2: goto B105;
      case 3: goto B108;
      case 4: goto B102;
      case 5: goto B92;
      case 6: goto B91;
      case 7: goto B85;
      case 8: goto B84;
      case 9: goto B82;
      case 10: goto B81;
      case 11: goto B80;
      case 12: goto B79;
      case 13: goto B77;
      case 14: goto B83;
      case 15: goto B90;
      case 16: goto B89;
      case 17: goto B88;
      case 18: goto B87;
      case 19: goto B86;
      case 20: goto B78;
      case 21: goto B104;
      case 22: goto B103;
      case 23: goto B100;
      case 24: goto B99;
      case 25: goto B96;
      case 26: goto B93;
      case 27: goto B95;
      case 28: goto B94;
      case 29: goto B98;
      case 30: goto B97;
      case 31: goto B101;
      default: goto B101;
    }
    B108:;
    i0 = p4;
    i1 = 57u;
    i0 = i0 != i1;
    if (i0) {goto B75;}
    i0 = 0u;
    l14 = i0;
    goto L50;
    B107:;
    i0 = p3;
    i1 = 48u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = p3;
    i0 = i0 == i1;
    if (i0) {goto B76;}
    i0 = 1u;
    l14 = i0;
    goto L50;
    B106:;
    i0 = p3;
    i1 = 4294967295u;
    i0 += i1;
    p3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p4 = i0;
    i1 = 46u;
    i0 = i0 == i1;
    if (i0) {goto B74;}
    i0 = 2u;
    l14 = i0;
    goto L50;
    B105:;
    i0 = p4;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 9u;
    i0 = i0 <= i1;
    if (i0) {goto B73;}
    i0 = 21u;
    l14 = i0;
    goto L50;
    B104:;
    i0 = p3;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 48u;
    i0 = i0 != i1;
    if (i0) {goto B71;}
    i0 = 22u;
    l14 = i0;
    goto L50;
    B103:;
    i0 = l9;
    i1 = 102u;
    i0 = i0 != i1;
    if (i0) {goto B60;}
    goto B61;
    B102:;
    i0 = p3;
    i1 = p4;
    i2 = 1u;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    goto B72;
    B101:;
    i0 = p1;
    l4 = i0;
    i0 = l9;
    i1 = 102u;
    i0 = i0 == i1;
    if (i0) {goto B59;}
    i0 = 23u;
    l14 = i0;
    goto L50;
    B100:;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0 + 1));
    i1 = 255u;
    i0 &= i1;
    i1 = 46u;
    i0 = i0 != i1;
    if (i0) {goto B58;}
    i0 = 24u;
    l14 = i0;
    goto L50;
    B99:;
    i0 = l4;
    i1 = 12334u;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l8;
    i1 = 45u;
    i0 = i0 != i1;
    if (i0) {goto B57;}
    i0 = 29u;
    l14 = i0;
    goto L50;
    B98:;
    i0 = 45u;
    i1 = 43u;
    i2 = l5;
    i3 = 4294967295u;
    i2 += i3;
    l5 = i2;
    i0 = i2 ? i0 : i1;
    l8 = i0;
    i0 = p5;
    i1 = l4;
    i0 = i0 > i1;
    if (i0) {goto B55;}
    goto B54;
    B97:;
    i0 = p5;
    i1 = 1u;
    i0 += i1;
    p5 = i0;
    i1 = l4;
    i0 = i0 > i1;
    if (i0) {goto B53;}
    goto B52;
    B96:;
    i0 = l5;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    i0 = p5;
    i1 = l4;
    i0 = i0 <= i1;
    if (i0) {goto B51;}
    i0 = 27u;
    l14 = i0;
    goto L50;
    B95:;
    i0 = p5;
    p3 = i0;
    i0 = 28u;
    l14 = i0;
    goto L50;
    B94:;
    i0 = p3;
    i1 = p3;
    i2 = 4294967295u;
    i1 += i2;
    p4 = i1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p4;
    p3 = i0;
    i0 = p4;
    i1 = l4;
    i0 = i0 > i1;
    if (i0) {goto B56;}
    i0 = 26u;
    l14 = i0;
    goto L50;
    B93:;
    i0 = l4;
    i1 = 49u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 5u;
    l14 = i0;
    goto L50;
    B92:;
    i0 = p5;
    i1 = 1u;
    i0 += i1;
    i1 = p1;
    i0 -= i1;
    i1 = p2;
    i0 = i0 > i1;
    if (i0) {goto B70;}
    i0 = 6u;
    l14 = i0;
    goto L50;
    B91:;
    i0 = l3;
    i1 = 103u;
    i0 = i0 != i1;
    if (i0) {goto B69;}
    i0 = 15u;
    l14 = i0;
    goto L50;
    B90:;
    i0 = l2;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B68;}
    i0 = 16u;
    l14 = i0;
    goto L50;
    B89:;
    i0 = 17u;
    l14 = i0;
    goto L50;
    B88:;
    i0 = p5;
    i1 = 4294967295u;
    i0 += i1;
    p5 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p3 = i0;
    i1 = 48u;
    i0 = i0 == i1;
    if (i0) {goto B62;}
    i0 = 18u;
    l14 = i0;
    goto L50;
    B87:;
    i0 = p3;
    i1 = 46u;
    i0 = i0 == i1;
    if (i0) {goto B67;}
    i0 = 19u;
    l14 = i0;
    goto L50;
    B86:;
    i0 = p5;
    i1 = 1u;
    i0 += i1;
    p5 = i0;
    i0 = 7u;
    l14 = i0;
    goto L50;
    B85:;
    i0 = l8;
    i0 = !(i0);
    if (i0) {goto B66;}
    i0 = 8u;
    l14 = i0;
    goto L50;
    B84:;
    i0 = p5;
    i1 = l8;
    i32_store8((&M0), (u64)(i0 + 1), i1);
    i0 = p5;
    i1 = l1;
    i2 = 69u;
    i1 |= i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l5;
    i1 = 100u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B65;}
    i0 = 14u;
    l14 = i0;
    goto L50;
    B83:;
    i0 = p5;
    i1 = 2u;
    i0 += i1;
    i1 = l5;
    i2 = 100u;
    i1 = DIV_U(i1, i2);
    i2 = 48u;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p5;
    i1 = 3u;
    i0 += i1;
    p5 = i0;
    goto B64;
    B82:;
    i0 = p5;
    i1 = 2u;
    i0 += i1;
    p5 = i0;
    i0 = 10u;
    l14 = i0;
    goto L50;
    B81:;
    i0 = p5;
    i1 = l5;
    i2 = 10u;
    i1 = I32_DIV_S(i1, i2);
    p3 = i1;
    i2 = 10u;
    i1 = I32_REM_S(i1, i2);
    i2 = 48u;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p5;
    i1 = l5;
    i2 = p3;
    i3 = 10u;
    i2 *= i3;
    i1 -= i2;
    i2 = 48u;
    i1 += i2;
    i32_store8((&M0), (u64)(i0 + 1), i1);
    i0 = p5;
    i1 = 2u;
    i0 += i1;
    p5 = i0;
    i0 = 11u;
    l14 = i0;
    goto L50;
    B80:;
    i0 = p5;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p5;
    i1 = 1u;
    i0 += i1;
    i1 = p1;
    i0 -= i1;
    i1 = p2;
    i0 = i0 > i1;
    if (i0) {goto B63;}
    i0 = 12u;
    l14 = i0;
    goto L50;
    B79:;
    i0 = p5;
    i1 = p1;
    i0 -= i1;
    goto Bfunc;
    B78:;
    i0 = 9924u;
    i1 = 11336u;
    i2 = 409u;
    i3 = 38839u;
    __assert_fail(i0, i1, i2, i3);
    UNREACHABLE;
    B77:;
    i0 = 9924u;
    i1 = 11336u;
    i2 = 433u;
    i3 = 38839u;
    __assert_fail(i0, i1, i2, i3);
    UNREACHABLE;
    B76:;
    i0 = 31u;
    l14 = i0;
    goto L50;
    B75:;
    i0 = 4u;
    l14 = i0;
    goto L50;
    B74:;
    i0 = 1u;
    l14 = i0;
    goto L50;
    B73:;
    i0 = 3u;
    l14 = i0;
    goto L50;
    B72:;
    i0 = 5u;
    l14 = i0;
    goto L50;
    B71:;
    i0 = 5u;
    l14 = i0;
    goto L50;
    B70:;
    i0 = 20u;
    l14 = i0;
    goto L50;
    B69:;
    i0 = 7u;
    l14 = i0;
    goto L50;
    B68:;
    i0 = 7u;
    l14 = i0;
    goto L50;
    B67:;
    i0 = 7u;
    l14 = i0;
    goto L50;
    B66:;
    i0 = 11u;
    l14 = i0;
    goto L50;
    B65:;
    i0 = 9u;
    l14 = i0;
    goto L50;
    B64:;
    i0 = 10u;
    l14 = i0;
    goto L50;
    B63:;
    i0 = 13u;
    l14 = i0;
    goto L50;
    B62:;
    i0 = 17u;
    l14 = i0;
    goto L50;
    B61:;
    i0 = 30u;
    l14 = i0;
    goto L50;
    B60:;
    i0 = 23u;
    l14 = i0;
    goto L50;
    B59:;
    i0 = 30u;
    l14 = i0;
    goto L50;
    B58:;
    i0 = 30u;
    l14 = i0;
    goto L50;
    B57:;
    i0 = 25u;
    l14 = i0;
    goto L50;
    B56:;
    i0 = 28u;
    l14 = i0;
    goto L50;
    B55:;
    i0 = 27u;
    l14 = i0;
    goto L50;
    B54:;
    i0 = 26u;
    l14 = i0;
    goto L50;
    B53:;
    i0 = 27u;
    l14 = i0;
    goto L50;
    B52:;
    i0 = 26u;
    l14 = i0;
    goto L50;
    B51:;
    i0 = 26u;
    l14 = i0;
    goto L50;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 __strchrnul(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = 255u;
  i0 &= i1;
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  L3: vm_checktime();
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l1 = i0;
    i0 = !(i0);
    if (i0) {goto B1;}
    i0 = l1;
    i1 = p1;
    i2 = 255u;
    i1 &= i2;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = 3u;
    i0 &= i1;
    if (i0) {goto L3;}
  B2:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 4294967295u;
  i0 ^= i1;
  i1 = l1;
  i2 = 4278124287u;
  i1 += i2;
  i0 &= i1;
  i1 = 2155905152u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = 16843009u;
  i0 *= i1;
  l0 = i0;
  L5: vm_checktime();
    i0 = l1;
    i1 = l0;
    i0 ^= i1;
    l1 = i0;
    i1 = 4294967295u;
    i0 ^= i1;
    i1 = l1;
    i2 = 4278124287u;
    i1 += i2;
    i0 &= i1;
    i1 = 2155905152u;
    i0 &= i1;
    if (i0) {goto B4;}
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    l1 = i0;
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = l1;
    i1 = 4294967295u;
    i0 ^= i1;
    i1 = l1;
    i2 = 4278124287u;
    i1 += i2;
    i0 &= i1;
    i1 = 2155905152u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto L5;}
  B4:;
  i0 = p0;
  i1 = 4294967295u;
  i0 += i1;
  p0 = i0;
  L6: vm_checktime();
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l1 = i0;
    i0 = !(i0);
    if (i0) {goto B1;}
    i0 = l1;
    i1 = p1;
    i2 = 255u;
    i1 &= i2;
    i0 = i0 != i1;
    if (i0) {goto L6;}
  B1:;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = p0;
  i1 = strlen_0(i1);
  i0 += i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 strchr_0(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i1 = p1;
  i0 = __strchrnul(i0, i1);
  p0 = i0;
  i1 = 0u;
  i2 = p0;
  i2 = i32_load8_u((&M0), (u64)(i2));
  i3 = p1;
  i4 = 255u;
  i3 &= i4;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static void vstr_init(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i3 = p1;
  i1 = i3 ? i1 : i2;
  p1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i1 = m_malloc(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 12));
  i2 = 254u;
  i1 &= i2;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  FUNC_EPILOGUE;
}

static void vstr_init_len(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i1 += i2;
  l0 = i1;
  i2 = 1u;
  i3 = l0;
  i1 = i3 ? i1 : i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = l0;
  i1 = m_malloc(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 12));
  i2 = 254u;
  i1 &= i2;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  FUNC_EPILOGUE;
}

static void vstr_init_fixed_buf(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 12));
  i2 = 1u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  FUNC_EPILOGUE;
}

static void vstr_init_print(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i3 = p1;
  i1 = i3 ? i1 : i2;
  p1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = m_malloc(i0);
  p1 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 12));
  i2 = 254u;
  i1 &= i2;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = 4u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void vstr_add_strn(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = p2;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l1;
  i3 = 24u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  l0 = i2;
  i1 = m_realloc(i1, i2);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  goto B1;
  B2:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  B1:;
  i0 = l1;
  i1 = l0;
  i0 += i1;
  i1 = p1;
  i2 = p2;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p2;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 37136u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void vstr_clear(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  m_free(i0);
  B0:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static u32 vstr_new(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p0;
  i2 = 1u;
  i3 = p0;
  i1 = i3 ? i1 : i2;
  p0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p0;
  i1 = m_malloc(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 12));
  i2 = 254u;
  i1 &= i2;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void vstr_free(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  m_free(i0);
  B1:;
  i0 = p0;
  m_free(i0);
  B0:;
  FUNC_EPILOGUE;
}

static u32 vstr_extend(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = p1;
  i2 += i3;
  i1 = m_realloc(i1, i2);
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i2 = p1;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l1;
  i0 += i1;
  goto Bfunc;
  B0:;
  i0 = 37136u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 vstr_add_len(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = p1;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l1;
  i3 = 24u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  l1 = i2;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = p1;
  i0 += i1;
  l1 = i0;
  goto B1;
  B2:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  B1:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l0;
  i0 += i1;
  goto Bfunc;
  B0:;
  i0 = 37136u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 vstr_null_terminated_str(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l1 = i1;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i3 = 1u;
  i2 += i3;
  i1 = m_realloc(i1, i2);
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B1;
  B2:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  B1:;
  i0 = l0;
  i1 = l1;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  goto Bfunc;
  B0:;
  i0 = 37136u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void vstr_add_byte(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i3 = 25u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  l0 = i2;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  goto B1;
  B2:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  B1:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l0;
  i0 += i1;
  i1 = p1;
  i32_store8((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 37136u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void vstr_add_char(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = 127u;
  i0 = i0 > i1;
  if (i0) {goto B15;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B14;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i3 = 25u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  l0 = i2;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  goto B13;
  B15:;
  i0 = p1;
  i1 = 2047u;
  i0 = i0 > i1;
  if (i0) {goto B12;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 2u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B11;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i3 = 26u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  l0 = i2;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 2u;
  i0 += i1;
  l1 = i0;
  goto B10;
  B14:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  B13:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l0;
  i0 += i1;
  i1 = p1;
  i32_store8((&M0), (u64)(i0), i1);
  goto Bfunc;
  B12:;
  i0 = p1;
  i1 = 65535u;
  i0 = i0 > i1;
  if (i0) {goto B9;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 3u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B8;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i3 = 27u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  l0 = i2;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 3u;
  i0 += i1;
  l1 = i0;
  goto B7;
  B11:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  B10:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l0;
  i0 += i1;
  p0 = i0;
  i1 = p1;
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = p0;
  i1 = p1;
  i2 = 6u;
  i1 >>= (i2 & 31);
  i2 = 192u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0), i1);
  goto Bfunc;
  B9:;
  i0 = p1;
  i1 = 1114112u;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B6;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i3 = 28u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  l0 = i2;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  goto B5;
  B8:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  B7:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l0;
  i0 += i1;
  p0 = i0;
  i1 = p1;
  i2 = 12u;
  i1 >>= (i2 & 31);
  i2 = 224u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 2), i1);
  i0 = p0;
  i1 = p1;
  i2 = 6u;
  i1 >>= (i2 & 31);
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  goto Bfunc;
  B6:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  B5:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l0;
  i0 += i1;
  p0 = i0;
  i1 = p1;
  i2 = 18u;
  i1 >>= (i2 & 31);
  i2 = 240u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 3), i1);
  i0 = p0;
  i1 = p1;
  i2 = 12u;
  i1 >>= (i2 & 31);
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = p0;
  i1 = p1;
  i2 = 6u;
  i1 >>= (i2 & 31);
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 2), i1);
  goto Bfunc;
  B4:;
  i0 = 37136u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B3:;
  i0 = 37136u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B2:;
  i0 = 9958u;
  i1 = 11350u;
  i2 = 164u;
  i3 = 38855u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B1:;
  i0 = 37136u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B0:;
  i0 = 37136u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void vstr_add_str(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = strlen_0(i0);
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l1 = i1;
  i0 += i1;
  l2 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l2;
  i3 = 24u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  l1 = i2;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B1;
  B2:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  B1:;
  i0 = l2;
  i1 = l1;
  i0 += i1;
  i1 = p1;
  i2 = l0;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l0;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 37136u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void vstr_ins_byte(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i3 = 25u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  l1 = i2;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  goto B1;
  B2:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  B1:;
  i0 = l2;
  i1 = l0;
  i2 = p1;
  i3 = l0;
  i4 = p1;
  i3 = i3 < i4;
  i1 = i3 ? i1 : i2;
  p1 = i1;
  i0 += i1;
  l2 = i0;
  i1 = 1u;
  i0 += i1;
  i1 = l2;
  i2 = l0;
  i3 = p1;
  i2 -= i3;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i0 += i1;
  i1 = p2;
  i32_store8((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 37136u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void vstr_cut_tail_bytes(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i1 = p1;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  l0 = i2;
  i3 = l0;
  i4 = p1;
  i3 = i3 < i4;
  i1 = i3 ? i1 : i2;
  i2 = p1;
  i1 -= i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  FUNC_EPILOGUE;
}

static u32 mp_obj_new_name_from_ull(u64 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = 25184u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_name_unary_op(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j2;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = 14u;
  i1 = 30u;
  i2 = p1;
  j2 = i64_load((&M0), (u64)(i2 + 8));
  i2 = !(j2);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B2:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B1:;
  i0 = 0u;
  p1 = i0;
  B0:;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_name_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l1 = 0;
  u64 l0 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j2, j3;
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 25184u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l0 = j0;
  i0 = 1u;
  l1 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B4;}
  goto B2;
  B5:;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(s64)(s32)(i0);
  l0 = j0;
  i0 = 1u;
  l1 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  B4:;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B7;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 25184u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  B7:;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i0 = mp_obj_name_binary_op_extra_cases(i0, i1, i2);
  goto Bfunc;
  B6:;
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l2 = j0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 <= i1;
  if (i0) {goto B1;}
  goto B0;
  B3:;
  i0 = 12678u;
  i1 = 16511u;
  i2 = 128u;
  i3 = 38869u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B2:;
  i0 = p2;
  i1 = l1;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(s64)(s32)(i0);
  l2 = j0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  switch (i0) {
    case 0: goto B12;
    case 1: goto B9;
    case 2: goto B10;
    case 3: goto B8;
    case 4: goto B11;
    default: goto B12;
  }
  B12:;
  i0 = 30u;
  i1 = 14u;
  j2 = l0;
  j3 = l2;
  i2 = (u64)((s64)j2 < (s64)j3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B11:;
  i0 = 14u;
  i1 = 30u;
  j2 = l0;
  j3 = l2;
  i2 = (u64)((s64)j2 < (s64)j3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B10:;
  i0 = 30u;
  i1 = 14u;
  j2 = l0;
  j3 = l2;
  i2 = j2 == j3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B9:;
  i0 = 30u;
  i1 = 14u;
  j2 = l0;
  j3 = l2;
  i2 = (u64)((s64)j2 > (s64)j3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B8:;
  i0 = 14u;
  i1 = 30u;
  j2 = l0;
  j3 = l2;
  i2 = (u64)((s64)j2 > (s64)j3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 utf8_get_char(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l0 = i0;
  i1 = 128u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 127u;
  i0 &= i1;
  l1 = i0;
  i0 = 64u;
  l2 = i0;
  i0 = l0;
  i1 = 64u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  L2: vm_checktime();
    i0 = l2;
    i1 = 4294967295u;
    i0 ^= i1;
    l0 = i0;
    i0 = l2;
    i1 = 1u;
    i0 >>= (i1 & 31);
    l3 = i0;
    l2 = i0;
    i0 = l3;
    i1 = l1;
    i2 = l0;
    i1 &= i2;
    l1 = i1;
    i0 &= i1;
    if (i0) {goto L2;}
  B1:;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 1));
  l2 = i0;
  i1 = 192u;
  i0 &= i1;
  i1 = 128u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 2u;
  i0 += i1;
  l0 = i0;
  L4: vm_checktime();
    i0 = l2;
    i1 = 63u;
    i0 &= i1;
    i1 = l1;
    i2 = 6u;
    i1 <<= (i2 & 31);
    i0 |= i1;
    l1 = i0;
    i0 = l0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l2 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = l2;
    i1 = 192u;
    i0 &= i1;
    i1 = 128u;
    i0 = i0 == i1;
    if (i0) {goto L4;}
  B3:;
  i0 = l1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 utf8_next_char(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  L0: vm_checktime();
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0 + 1));
    l0 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    p0 = i0;
    i0 = l0;
    i1 = 192u;
    i0 &= i1;
    i1 = 128u;
    i0 = i0 == i1;
    if (i0) {goto L0;}
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 utf8_ptr_to_index(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = p1;
  i1 = p0;
  i0 = i0 <= i1;
  if (i0) {goto B0;}
  i0 = 0u;
  l0 = i0;
  L1: vm_checktime();
    i0 = l0;
    i1 = p1;
    i2 = 4294967295u;
    i1 += i2;
    p1 = i1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i2 = 192u;
    i1 &= i2;
    i2 = 128u;
    i1 = i1 != i2;
    i0 += i1;
    l0 = i0;
    i0 = p1;
    i1 = p0;
    i0 = i0 > i1;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 utf8_charlen(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i0 += i1;
  l0 = i0;
  i0 = 0u;
  p1 = i0;
  L1: vm_checktime();
    i0 = p1;
    i1 = p0;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i2 = 192u;
    i1 &= i2;
    i2 = 128u;
    i1 = i1 != i2;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L1;}
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 unichar_isspace(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 127u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 38896u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  i1 = 1u;
  i0 >>= (i1 & 31);
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 unichar_isalpha(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 127u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 38896u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 8u;
  i0 &= i1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 unichar_isdigit(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 128u;
  i0 = i0 < i1;
  i1 = p0;
  i2 = 4294967248u;
  i1 += i2;
  i2 = 10u;
  i1 = i1 < i2;
  i0 &= i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 unichar_isxdigit(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 127u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 38896u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 64u;
  i0 &= i1;
  i1 = 6u;
  i0 >>= (i1 & 31);
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 unichar_isupper(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 128u;
  i0 = i0 < i1;
  i1 = p0;
  i2 = 4294967231u;
  i1 += i2;
  i2 = 26u;
  i1 = i1 < i2;
  i0 &= i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 unichar_islower(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 128u;
  i0 = i0 < i1;
  i1 = p0;
  i2 = 4294967199u;
  i1 += i2;
  i2 = 26u;
  i1 = i1 < i2;
  i0 &= i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 unichar_tolower(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 32u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 4294967231u;
  i2 += i3;
  i3 = 26u;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  i1 = p0;
  i2 = p0;
  i3 = 128u;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 unichar_toupper(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 4294967264u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 4294967199u;
  i2 += i3;
  i3 = 26u;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  i1 = p0;
  i2 = p0;
  i3 = 128u;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 unichar_xdigit_value(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 4294967248u;
  i0 += i1;
  p0 = i0;
  i1 = 4294967263u;
  i0 &= i1;
  i1 = 4294967289u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 9u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 utf8_check(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B4;}
  i0 = p0;
  i1 = p1;
  i0 += i1;
  l0 = i0;
  i0 = 0u;
  p1 = i0;
  L5: vm_checktime();
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l1 = i0;
    i0 = p1;
    i1 = 255u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B6;}
    i0 = l1;
    i1 = 192u;
    i0 &= i1;
    i1 = 128u;
    i0 = i0 != i1;
    if (i0) {goto B1;}
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L5;}
    goto B3;
    B6:;
    i0 = l1;
    i1 = 192u;
    i0 = i0 < i1;
    if (i0) {goto B7;}
    i0 = l1;
    i1 = 247u;
    i0 = i0 > i1;
    if (i0) {goto B0;}
    i0 = 229u;
    i1 = l1;
    i2 = 3u;
    i1 >>= (i2 & 31);
    i2 = 6u;
    i1 &= i2;
    i0 >>= (i1 & 31);
    i1 = 3u;
    i0 &= i1;
    p1 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L5;}
    goto B3;
    B7:;
    i0 = 0u;
    p1 = i0;
    i0 = l1;
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 24u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B2;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L5;}
    goto B3;
  B4:;
  i0 = 0u;
  p1 = i0;
  B3:;
  i0 = p1;
  i1 = 255u;
  i0 &= i1;
  i0 = !(i0);
  p1 = i0;
  B2:;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_parse_num_base(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = 2u;
  i0 = i0 >= i1;
  if (i0) {goto B6;}
  i0 = p0;
  p1 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  if (i0) {goto B0;}
  goto B5;
  B6:;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 255u;
  i0 &= i1;
  i1 = 48u;
  i0 = i0 != i1;
  p1 = i0;
  if (i0) {goto B9;}
  i0 = l1;
  i1 = 16u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  B9:;
  i0 = p1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 8u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 2u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 1u;
  i2 += i3;
  i2 = i32_load8_u((&M0), (u64)(i2));
  i3 = 32u;
  i2 |= i3;
  i3 = 111u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  i1 = p0;
  i0 -= i1;
  goto Bfunc;
  B8:;
  i0 = l0;
  i1 = 255u;
  i0 &= i1;
  i1 = 48u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  B7:;
  i0 = p0;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 32u;
  i0 |= i1;
  l0 = i0;
  i1 = 255u;
  i0 &= i1;
  i1 = 120u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p2;
  i1 = 16u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  i0 -= i1;
  goto Bfunc;
  B5:;
  i0 = p2;
  i1 = 10u;
  i32_store((&M0), (u64)(i0), i1);
  goto B1;
  B4:;
  i0 = l1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 255u;
  i0 &= i1;
  i1 = 111u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = 8u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  i0 -= i1;
  goto Bfunc;
  B3:;
  i0 = p0;
  p1 = i0;
  i0 = l0;
  i1 = 255u;
  i0 &= i1;
  i1 = 48u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  p1 = i0;
  i0 = l1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 2u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 1u;
  i2 += i3;
  i2 = i32_load8_u((&M0), (u64)(i2));
  i3 = 32u;
  i2 |= i3;
  i3 = 98u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  i1 = p0;
  i0 -= i1;
  goto Bfunc;
  B2:;
  i0 = l1;
  if (i0) {goto B10;}
  i0 = l0;
  i1 = 255u;
  i0 &= i1;
  i1 = 98u;
  i0 = i0 != i1;
  if (i0) {goto B10;}
  i0 = p2;
  i1 = 2u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  i0 -= i1;
  goto Bfunc;
  B10:;
  i0 = p0;
  p1 = i0;
  i0 = l1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 10u;
  i32_store((&M0), (u64)(i0), i1);
  B1:;
  i0 = p0;
  p1 = i0;
  B0:;
  i0 = p1;
  i1 = p0;
  i0 -= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_small_int_mul_overflow(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B3;}
  i0 = 1u;
  l0 = i0;
  i0 = 1073741823u;
  i1 = p1;
  i0 = DIV_U(i0, i1);
  i1 = p0;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B1;}
  goto B0;
  B4:;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = 1u;
  l0 = i0;
  i0 = 3221225472u;
  i1 = p1;
  i0 = I32_DIV_S(i0, i1);
  i1 = p0;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  goto B1;
  B3:;
  i0 = 1u;
  l0 = i0;
  i0 = 3221225472u;
  i1 = p0;
  i0 = I32_DIV_S(i0, i1);
  i1 = p1;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  goto B1;
  B2:;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 1u;
  l0 = i0;
  i0 = 1073741823u;
  i1 = p0;
  i0 = I32_DIV_S(i0, i1);
  i1 = p1;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_small_int_modulo(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  i0 = I32_REM_S(i0, i1);
  p0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  B2:;
  i0 = p1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = p1;
  i0 += i1;
  p0 = i0;
  B0:;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_small_int_floor_divide(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 4294967295u;
  i0 ^= i1;
  i1 = p0;
  i0 += i1;
  i1 = p1;
  i0 = I32_DIV_S(i0, i1);
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  i1 = p1;
  i0 -= i1;
  p0 = i0;
  B0:;
  i0 = p0;
  i1 = p1;
  i0 = I32_DIV_S(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static f64 nan_0(u32 p0) {
  FUNC_PROLOGUE;
  f64 d0;
  d0 = f64_reinterpret_i64(0x7ff8000000000000) /* nan:0x8000000000000 */;
  FUNC_EPILOGUE;
  return d0;
}

static f64 sqrt_0(f64 p0) {
  u32 l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, l8 = 0, 
      l9 = 0;
  u64 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  f64 d0, d1;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i1 = 2146435072u;
  i0 &= i1;
  i1 = 2146435072u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  j0 = l0;
  i0 = (u32)(j0);
  l2 = i0;
  i0 = l1;
  i1 = 0u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 2147483647u;
  i0 &= i1;
  i1 = l2;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B2;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B2:;
  j0 = l0;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l3 = i0;
  if (i0) {goto B3;}
  i0 = 0u;
  l4 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = 0u;
  l3 = i0;
  i0 = l2;
  l5 = i0;
  i0 = l1;
  i1 = 1048576u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B6;}
  goto B5;
  B7:;
  i0 = 0u;
  l3 = i0;
  L8: vm_checktime();
    i0 = l2;
    i1 = 11u;
    i0 >>= (i1 & 31);
    l1 = i0;
    i0 = l3;
    i1 = 4294967275u;
    i0 += i1;
    l3 = i0;
    i0 = l2;
    i1 = 21u;
    i0 <<= (i1 & 31);
    l5 = i0;
    l2 = i0;
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto L8;}
  i0 = l1;
  i1 = 1048576u;
  i0 &= i1;
  if (i0) {goto B5;}
  B6:;
  i0 = 0u;
  l4 = i0;
  L9: vm_checktime();
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i0 = l1;
    i1 = 524288u;
    i0 &= i1;
    l2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 <<= (i1 & 31);
    l6 = i0;
    l1 = i0;
    i0 = l2;
    i0 = !(i0);
    if (i0) {goto L9;}
    goto B4;
  B5:;
  i0 = l1;
  l6 = i0;
  B4:;
  i0 = l5;
  i1 = l4;
  i0 <<= (i1 & 31);
  l2 = i0;
  i0 = l3;
  i1 = 1u;
  i0 += i1;
  i1 = l4;
  i0 -= i1;
  l3 = i0;
  i0 = l5;
  i1 = 32u;
  i2 = l4;
  i1 -= i2;
  i0 >>= (i1 & 31);
  i1 = l6;
  i0 |= i1;
  l1 = i0;
  B3:;
  i0 = l1;
  i1 = 1048575u;
  i0 &= i1;
  i1 = 1048576u;
  i0 |= i1;
  l1 = i0;
  i0 = l3;
  i1 = 4294966273u;
  i0 += i1;
  l6 = i0;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 31u;
  i1 >>= (i2 & 31);
  i0 |= i1;
  l1 = i0;
  i0 = l2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l2 = i0;
  B10:;
  i0 = 0u;
  i1 = 2097152u;
  i2 = l2;
  i3 = 31u;
  i2 >>= (i3 & 31);
  i3 = l1;
  i4 = 1u;
  i3 <<= (i4 & 31);
  i2 |= i3;
  l4 = i2;
  i3 = 2097152u;
  i2 = (u32)((s32)i2 < (s32)i3);
  l1 = i2;
  i0 = i2 ? i0 : i1;
  l7 = i0;
  i0 = l4;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l4 = i0;
  i1 = l4;
  i2 = 4290772992u;
  i1 += i2;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  i1 = l2;
  i2 = 30u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l3 = i0;
  i1 = 0u;
  i2 = 4194304u;
  i3 = l1;
  i1 = i3 ? i1 : i2;
  l4 = i1;
  i2 = 1048576u;
  i1 |= i2;
  l1 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B11;}
  i0 = l7;
  i1 = 1048576u;
  i0 |= i1;
  l7 = i0;
  i0 = l3;
  i1 = l1;
  i0 -= i1;
  l3 = i0;
  i0 = l1;
  i1 = 1048576u;
  i0 += i1;
  l4 = i0;
  B11:;
  i0 = l3;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 29u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 524288u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B12;}
  i0 = l7;
  i1 = 524288u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 1048576u;
  i0 += i1;
  l4 = i0;
  B12:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 28u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 262144u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B13;}
  i0 = l7;
  i1 = 262144u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 524288u;
  i0 += i1;
  l4 = i0;
  B13:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 27u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 131072u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B14;}
  i0 = l7;
  i1 = 131072u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 262144u;
  i0 += i1;
  l4 = i0;
  B14:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 26u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 65536u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B15;}
  i0 = l7;
  i1 = 65536u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 131072u;
  i0 += i1;
  l4 = i0;
  B15:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 25u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 32768u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B16;}
  i0 = l7;
  i1 = 32768u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 65536u;
  i0 += i1;
  l4 = i0;
  B16:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 24u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 16384u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B17;}
  i0 = l7;
  i1 = 16384u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 32768u;
  i0 += i1;
  l4 = i0;
  B17:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 23u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 8192u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B18;}
  i0 = l7;
  i1 = 8192u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 16384u;
  i0 += i1;
  l4 = i0;
  B18:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 22u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 4096u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B19;}
  i0 = l7;
  i1 = 4096u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 8192u;
  i0 += i1;
  l4 = i0;
  B19:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 21u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 2048u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B20;}
  i0 = l7;
  i1 = 2048u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 4096u;
  i0 += i1;
  l4 = i0;
  B20:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 20u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 1024u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B21;}
  i0 = l7;
  i1 = 1024u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 2048u;
  i0 += i1;
  l4 = i0;
  B21:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 19u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 512u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B22;}
  i0 = l7;
  i1 = 512u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 1024u;
  i0 += i1;
  l4 = i0;
  B22:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 18u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 256u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B23;}
  i0 = l7;
  i1 = 256u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 512u;
  i0 += i1;
  l4 = i0;
  B23:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 17u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 128u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B24;}
  i0 = l7;
  i1 = 128u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 256u;
  i0 += i1;
  l4 = i0;
  B24:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 16u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 64u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B25;}
  i0 = l7;
  i1 = 64u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 128u;
  i0 += i1;
  l4 = i0;
  B25:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 15u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 32u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B26;}
  i0 = l7;
  i1 = 32u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 64u;
  i0 += i1;
  l4 = i0;
  B26:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 14u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 16u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B27;}
  i0 = l7;
  i1 = 16u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 32u;
  i0 += i1;
  l4 = i0;
  B27:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 13u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 8u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B28;}
  i0 = l7;
  i1 = 8u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 16u;
  i0 += i1;
  l4 = i0;
  B28:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 12u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 4u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B29;}
  i0 = l7;
  i1 = 4u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 8u;
  i0 += i1;
  l4 = i0;
  B29:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 11u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 2u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B30;}
  i0 = l7;
  i1 = 2u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  B30:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 10u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l3 = i0;
  i1 = l4;
  i2 = 1u;
  i1 += i2;
  l1 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B31;}
  i0 = l7;
  i1 = 1u;
  i0 += i1;
  l7 = i0;
  i0 = l3;
  i1 = l1;
  i0 -= i1;
  l3 = i0;
  i0 = l4;
  i1 = 2u;
  i0 += i1;
  l4 = i0;
  B31:;
  i0 = l2;
  i1 = 23u;
  i0 <<= (i1 & 31);
  l1 = i0;
  i0 = l3;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 9u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l2 = i0;
  i0 = l6;
  i1 = 1u;
  i0 >>= (i1 & 31);
  l8 = i0;
  i0 = 2147483648u;
  l3 = i0;
  i0 = 0u;
  l9 = i0;
  i0 = 0u;
  l5 = i0;
  L32: vm_checktime();
    i0 = l5;
    i1 = l3;
    i0 += i1;
    l6 = i0;
    i0 = l2;
    i1 = l4;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B34;}
    i0 = l2;
    i1 = l4;
    i0 = i0 != i1;
    if (i0) {goto B33;}
    i0 = l1;
    i1 = l6;
    i0 = i0 < i1;
    if (i0) {goto B33;}
    B34:;
    i0 = l2;
    i1 = l4;
    i0 -= i1;
    i1 = l1;
    i2 = l6;
    i1 = i1 < i2;
    i0 -= i1;
    l2 = i0;
    i0 = l4;
    i1 = l6;
    i2 = 0u;
    i1 = (u32)((s32)i1 < (s32)i2);
    i2 = l6;
    i3 = l3;
    i2 += i3;
    l5 = i2;
    i3 = 4294967295u;
    i2 = (u32)((s32)i2 > (s32)i3);
    i1 &= i2;
    i0 += i1;
    l4 = i0;
    i0 = l9;
    i1 = l3;
    i0 += i1;
    l9 = i0;
    i0 = l1;
    i1 = l6;
    i0 -= i1;
    l1 = i0;
    B33:;
    i0 = l1;
    i1 = 31u;
    i0 >>= (i1 & 31);
    i1 = l2;
    i2 = 1u;
    i1 <<= (i2 & 31);
    i0 |= i1;
    l2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 <<= (i1 & 31);
    l1 = i0;
    i0 = l3;
    i1 = 1u;
    i0 >>= (i1 & 31);
    l3 = i0;
    if (i0) {goto L32;}
  i0 = l1;
  i1 = l2;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B35;}
  i0 = l9;
  i1 = 4294967295u;
  i0 = i0 == i1;
  if (i0) {goto B36;}
  i0 = l9;
  i1 = 1u;
  i0 &= i1;
  i1 = l9;
  i0 += i1;
  l9 = i0;
  goto B35;
  B36:;
  i0 = l7;
  i1 = 1u;
  i0 += i1;
  l7 = i0;
  i0 = 0u;
  l9 = i0;
  B35:;
  i0 = l8;
  i1 = 20u;
  i0 <<= (i1 & 31);
  i1 = l7;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i0 += i1;
  i1 = 1071644672u;
  i0 += i1;
  j0 = (u64)(i0);
  j1 = 32ull;
  j0 <<= (j1 & 63);
  i1 = l9;
  i2 = 1u;
  i1 >>= (i2 & 31);
  i2 = l7;
  i3 = 31u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  j1 = (u64)(i1);
  j0 |= j1;
  d0 = f64_reinterpret_i64(j0);
  p0 = d0;
  B1:;
  d0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 pow_0(f64 p0, f64 p1) {
  u32 l2 = 0, l3 = 0, l4 = 0, l6 = 0, l7 = 0, l8 = 0, l9 = 0, l10 = 0;
  u64 l1 = 0, l5 = 0;
  f64 l0 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0, l15 = 0, l16 = 0, l17 = 0, 
      l18 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i7, i8, i9;
  u64 j0, j1, j2, j3, j7, j8;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9, d10;
  d0 = 1;
  l0 = d0;
  d0 = p1;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l2 = i0;
  i1 = 2147483647u;
  i0 &= i1;
  l3 = i0;
  j1 = l1;
  i1 = (u32)(j1);
  l4 = i1;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l5 = j0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l6 = i0;
  j0 = l5;
  i0 = (u32)(j0);
  l7 = i0;
  if (i0) {goto B1;}
  i0 = l6;
  i1 = 1072693248u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l6;
  i1 = 2147483647u;
  i0 &= i1;
  l8 = i0;
  i1 = 2146435072u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = l7;
  i1 = 0u;
  i0 = i0 != i1;
  i1 = l8;
  i2 = 2146435072u;
  i1 = i1 == i2;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = l3;
  i1 = 2146435072u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l3;
  i1 = 2146435072u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  B3:;
  d0 = p0;
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B2:;
  i0 = 0u;
  l9 = i0;
  i0 = l6;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B7;}
  i0 = 2u;
  l9 = i0;
  i0 = l3;
  i1 = 1128267775u;
  i0 = i0 > i1;
  if (i0) {goto B7;}
  i0 = 0u;
  l9 = i0;
  i0 = l3;
  i1 = 1072693248u;
  i0 = i0 < i1;
  if (i0) {goto B7;}
  i0 = l3;
  i1 = 20u;
  i0 >>= (i1 & 31);
  l10 = i0;
  i0 = l3;
  i1 = 1094713344u;
  i0 = i0 < i1;
  if (i0) {goto B6;}
  i0 = 2u;
  i1 = l4;
  i2 = 1075u;
  i3 = l10;
  i2 -= i3;
  l9 = i2;
  i1 >>= (i2 & 31);
  l10 = i1;
  i2 = 1u;
  i1 &= i2;
  i0 -= i1;
  i1 = 0u;
  i2 = l10;
  i3 = l9;
  i2 <<= (i3 & 31);
  i3 = l4;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l9 = i0;
  B7:;
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B5;}
  goto B4;
  B6:;
  i0 = 0u;
  l9 = i0;
  i0 = l4;
  if (i0) {goto B4;}
  i0 = 2u;
  i1 = l3;
  i2 = 1043u;
  i3 = l10;
  i2 -= i3;
  l4 = i2;
  i1 >>= (i2 & 31);
  l9 = i1;
  i2 = 1u;
  i1 &= i2;
  i0 -= i1;
  i1 = 0u;
  i2 = l9;
  i3 = l4;
  i2 <<= (i3 & 31);
  i3 = l3;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l9 = i0;
  B5:;
  i0 = l3;
  i1 = 2146435072u;
  i0 = i0 != i1;
  if (i0) {goto B11;}
  i0 = l8;
  i1 = 3222274048u;
  i0 += i1;
  i1 = l7;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l8;
  i1 = 1072693248u;
  i0 = i0 < i1;
  if (i0) {goto B10;}
  d0 = p1;
  d1 = 0;
  i2 = l2;
  i3 = 4294967295u;
  i2 = (u32)((s32)i2 > (s32)i3);
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B11:;
  i0 = l3;
  i1 = 1072693248u;
  i0 = i0 != i1;
  if (i0) {goto B12;}
  i0 = l2;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B8;}
  d0 = p0;
  goto Bfunc;
  B12:;
  i0 = l2;
  i1 = 1073741824u;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B10:;
  d0 = 0;
  d1 = p1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  i2 = l2;
  i3 = 4294967295u;
  i2 = (u32)((s32)i2 > (s32)i3);
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B9:;
  i0 = l6;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 1071644672u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  d0 = p0;
  d0 = sqrt_0(d0);
  goto Bfunc;
  B8:;
  d0 = 1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B4:;
  d0 = p0;
  d0 = fabs_0(d0);
  l0 = d0;
  i0 = l7;
  if (i0) {goto B25;}
  i0 = l8;
  i0 = !(i0);
  if (i0) {goto B24;}
  i0 = l8;
  i1 = 1073741824u;
  i0 |= i1;
  i1 = 2146435072u;
  i0 = i0 == i1;
  if (i0) {goto B24;}
  B25:;
  d0 = 1;
  l11 = d0;
  i0 = l6;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B21;}
  i0 = l9;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B23;}
  i0 = l9;
  if (i0) {goto B21;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p1 = d0;
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B24:;
  d0 = 1;
  d1 = l0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = l0;
  i2 = l2;
  i3 = 0u;
  i2 = (u32)((s32)i2 < (s32)i3);
  d0 = i2 ? d0 : d1;
  l0 = d0;
  i0 = l6;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = l9;
  i1 = l8;
  i2 = 3222274048u;
  i1 += i2;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B22;}
  d0 = l0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = l0;
  i2 = l9;
  i3 = 1u;
  i2 = i2 == i3;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B23:;
  d0 = -1;
  l11 = d0;
  i0 = l3;
  i1 = 1105199105u;
  i0 = i0 >= i1;
  if (i0) {goto B20;}
  goto B19;
  B22:;
  d0 = l0;
  d1 = l0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p1 = d0;
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B21:;
  i0 = l3;
  i1 = 1105199105u;
  i0 = i0 < i1;
  if (i0) {goto B19;}
  B20:;
  i0 = l3;
  i1 = 1139802113u;
  i0 = i0 < i1;
  if (i0) {goto B26;}
  i0 = l8;
  i1 = 1072693247u;
  i0 = i0 > i1;
  if (i0) {goto B18;}
  d0 = INFINITY;
  d1 = 0;
  i2 = l2;
  i3 = 0u;
  i2 = (u32)((s32)i2 < (s32)i3);
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B26:;
  i0 = l8;
  i1 = 1072693246u;
  i0 = i0 > i1;
  if (i0) {goto B17;}
  d0 = l11;
  d1 = 1.0000000000000001e+300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 1.0000000000000001e+300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l11;
  d2 = 1e-300;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1e-300;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i2 = l2;
  i3 = 0u;
  i2 = (u32)((s32)i2 < (s32)i3);
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B19:;
  i0 = 0u;
  l3 = i0;
  i0 = l8;
  i1 = 1048575u;
  i0 = i0 > i1;
  if (i0) {goto B28;}
  d0 = l0;
  d1 = 9007199254740992;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l0 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l8 = i0;
  i0 = 4294967243u;
  l2 = i0;
  goto B27;
  B28:;
  i0 = 0u;
  l2 = i0;
  B27:;
  i0 = l8;
  i1 = 1048575u;
  i0 &= i1;
  l4 = i0;
  i1 = 1072693248u;
  i0 |= i1;
  l6 = i0;
  i0 = l8;
  i1 = 20u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = l2;
  i0 += i1;
  i1 = 4294966273u;
  i0 += i1;
  l2 = i0;
  i0 = l4;
  i1 = 235663u;
  i0 = i0 < i1;
  if (i0) {goto B15;}
  i0 = l4;
  i1 = 767610u;
  i0 = i0 >= i1;
  if (i0) {goto B16;}
  i0 = 1u;
  l3 = i0;
  goto B15;
  B18:;
  d0 = INFINITY;
  d1 = 0;
  i2 = l2;
  i3 = 0u;
  i2 = (u32)((s32)i2 > (s32)i3);
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B17:;
  i0 = l8;
  i1 = 1072693249u;
  i0 = i0 < i1;
  if (i0) {goto B14;}
  d0 = l11;
  d1 = 1.0000000000000001e+300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 1.0000000000000001e+300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l11;
  d2 = 1e-300;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1e-300;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i2 = l2;
  i3 = 0u;
  i2 = (u32)((s32)i2 > (s32)i3);
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B16:;
  i0 = l6;
  i1 = 4293918720u;
  i0 += i1;
  l6 = i0;
  i0 = l2;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  B15:;
  i0 = l3;
  i1 = 3u;
  i0 <<= (i1 & 31);
  l4 = i0;
  i1 = 39056u;
  i0 += i1;
  d0 = f64_load((&M0), (u64)(i0));
  l12 = d0;
  i1 = l6;
  j1 = (u64)(i1);
  j2 = 32ull;
  j1 <<= (j2 & 63);
  d2 = l0;
  j2 = i64_reinterpret_f64(d2);
  j3 = 4294967295ull;
  j2 &= j3;
  j1 |= j2;
  d1 = f64_reinterpret_i64(j1);
  l13 = d1;
  i2 = l4;
  i3 = 39024u;
  i2 += i3;
  d2 = f64_load((&M0), (u64)(i2));
  l14 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  l15 = d1;
  d2 = 1;
  d3 = l14;
  d4 = l13;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d2, d3);
  l16 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l0 = d1;
  j1 = i64_reinterpret_f64(d1);
  j2 = 18446744069414584320ull;
  j1 &= j2;
  d1 = f64_reinterpret_i64(j1);
  p0 = d1;
  d2 = p0;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  l17 = d2;
  d3 = 3;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d3 = l0;
  d4 = p0;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d4 = l16;
  d5 = l15;
  d6 = p0;
  i7 = l6;
  i8 = 1u;
  i7 = (u32)((s32)i7 >> (i8 & 31));
  i8 = 536870912u;
  i7 |= i8;
  i8 = l3;
  i9 = 18u;
  i8 <<= (i9 & 31);
  i7 += i8;
  i8 = 524288u;
  i7 += i8;
  j7 = (u64)(i7);
  j8 = 32ull;
  j7 <<= (j8 & 63);
  d7 = f64_reinterpret_i64(j7);
  l18 = d7;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d5, d6);
  d6 = p0;
  d7 = l13;
  d8 = l18;
  d9 = l14;
  d8 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  l13 = d4;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = l0;
  d5 = l0;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  p0 = d4;
  d5 = p0;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = p0;
  d6 = p0;
  d7 = p0;
  d8 = p0;
  d9 = p0;
  d10 = 0.20697501780033842;
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = 0.23066074577556175;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 0.27272812380853401;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.33333332981837743;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.42857142857855018;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.59999999999999465;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  l14 = d3;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  j2 = i64_reinterpret_f64(d2);
  j3 = 18446744069414584320ull;
  j2 &= j3;
  d2 = f64_reinterpret_i64(j2);
  p0 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l15 = d1;
  d2 = l13;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l0;
  d4 = l14;
  d5 = p0;
  d6 = -3;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d6 = l17;
  d5 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  l0 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  j1 = i64_reinterpret_f64(d1);
  j2 = 18446744069414584320ull;
  j1 &= j2;
  d1 = f64_reinterpret_i64(j1);
  p0 = d1;
  d2 = 0.96179670095443726;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l13 = d1;
  i2 = l4;
  i3 = 39040u;
  i2 += i3;
  d2 = f64_load((&M0), (u64)(i2));
  d3 = l0;
  d4 = p0;
  d5 = l15;
  d4 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d4 = 0.96179669392597555;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = p0;
  d5 = -7.0284616509527583e-09;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  l14 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  i1 = l2;
  d1 = (f64)(s32)(i1);
  l0 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  j0 = i64_reinterpret_f64(d0);
  j1 = 18446744069414584320ull;
  j0 &= j1;
  d0 = f64_reinterpret_i64(j0);
  p0 = d0;
  d1 = l0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = l12;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = l13;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l12 = d0;
  goto B13;
  B14:;
  d0 = l0;
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d1 = 1.4426950216293335;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l0 = d0;
  d1 = p0;
  d2 = 1.9259629911266175e-08;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 0.5;
  d4 = p0;
  d5 = p0;
  d6 = -0.25;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.33333333333333331;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -1.4426950408889634;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l14 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  j0 = i64_reinterpret_f64(d0);
  j1 = 18446744069414584320ull;
  j0 &= j1;
  d0 = f64_reinterpret_i64(j0);
  p0 = d0;
  d1 = l0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l12 = d0;
  B13:;
  d0 = p0;
  j1 = l1;
  j2 = 18446744069414584320ull;
  j1 &= j2;
  d1 = f64_reinterpret_i64(j1);
  l13 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l0 = d0;
  d1 = l14;
  d2 = l12;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = p1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p1;
  d3 = l13;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p1 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  i0 = (u32)(j0);
  l3 = i0;
  j0 = l1;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l6 = i0;
  i1 = 1083179008u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B33;}
  i0 = l6;
  i1 = 3211788288u;
  i0 += i1;
  i1 = l3;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B32;}
  d0 = l11;
  d1 = 1.0000000000000001e+300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 1.0000000000000001e+300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B33:;
  i0 = l6;
  i1 = 2147482624u;
  i0 &= i1;
  i1 = 1083231232u;
  i0 = i0 < i1;
  if (i0) {goto B30;}
  i0 = l6;
  i1 = 1064252416u;
  i0 += i1;
  i1 = l3;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B31;}
  d0 = l11;
  d1 = 1e-300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 1e-300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B32:;
  d0 = p1;
  d1 = 8.0085662595372941e-17;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p0;
  d2 = l0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  i0 = (*Z_eosio_injectionZ__eosio_f64_gtZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B30;}
  d0 = l11;
  d1 = 1.0000000000000001e+300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 1.0000000000000001e+300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B31:;
  d0 = p1;
  d1 = p0;
  d2 = l0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  i0 = (*Z_eosio_injectionZ__eosio_f64_leZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  i0 = !(i0);
  if (i0) {goto B29;}
  B30:;
  i0 = 0u;
  l3 = i0;
  i0 = l6;
  i1 = 2147483647u;
  i0 &= i1;
  l4 = i0;
  i1 = 1071644673u;
  i0 = i0 < i1;
  if (i0) {goto B34;}
  i0 = 0u;
  i1 = 1048576u;
  i2 = l4;
  i3 = 20u;
  i2 >>= (i3 & 31);
  i3 = 4294966274u;
  i2 += i3;
  i1 >>= (i2 & 31);
  i2 = l6;
  i1 += i2;
  l4 = i1;
  i2 = 1048575u;
  i1 &= i2;
  i2 = 1048576u;
  i1 |= i2;
  i2 = 1043u;
  i3 = l4;
  i4 = 20u;
  i3 >>= (i4 & 31);
  i4 = 2047u;
  i3 &= i4;
  l2 = i3;
  i2 -= i3;
  i1 >>= (i2 & 31);
  l3 = i1;
  i0 -= i1;
  i1 = l3;
  i2 = l6;
  i3 = 0u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  l3 = i0;
  d0 = p1;
  d1 = l0;
  i2 = 4293918720u;
  i3 = l2;
  i4 = 4294966273u;
  i3 += i4;
  i2 = (u32)((s32)i2 >> (i3 & 31));
  i3 = l4;
  i2 &= i3;
  j2 = (u64)(i2);
  j3 = 32ull;
  j2 <<= (j3 & 63);
  d2 = f64_reinterpret_i64(j2);
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  l0 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  B34:;
  i0 = l3;
  i1 = 20u;
  i0 <<= (i1 & 31);
  j1 = l1;
  j2 = 18446744069414584320ull;
  j1 &= j2;
  d1 = f64_reinterpret_i64(j1);
  p0 = d1;
  d2 = 0.69314718246459961;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l13 = d1;
  d2 = p1;
  d3 = p0;
  d4 = l0;
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d3 = 0.69314718055994529;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = p0;
  d4 = -1.904654299957768e-09;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  l0 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p1 = d1;
  d2 = p1;
  d3 = p1;
  d4 = p1;
  d5 = p1;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  p0 = d4;
  d5 = p0;
  d6 = p0;
  d7 = p0;
  d8 = p0;
  d9 = 4.1381367970572385e-08;
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = -1.6533902205465252e-06;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 6.6137563214379344e-05;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = -0.0027777777777015593;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.16666666666666602;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  p0 = d3;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = p0;
  d4 = -2;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d2, d3);
  d3 = l0;
  d4 = p1;
  d5 = l13;
  d4 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  p0 = d3;
  d4 = p1;
  d5 = p0;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p1 = d1;
  j1 = i64_reinterpret_f64(d1);
  l1 = j1;
  j2 = 32ull;
  j1 >>= (j2 & 63);
  i1 = (u32)(j1);
  i0 += i1;
  l6 = i0;
  i1 = 1048575u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B35;}
  d0 = l11;
  d1 = p1;
  i2 = l3;
  d1 = scalbn_0(d1, i2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B35:;
  d0 = l11;
  i1 = l6;
  j1 = (u64)(i1);
  j2 = 32ull;
  j1 <<= (j2 & 63);
  j2 = l1;
  j3 = 4294967295ull;
  j2 &= j3;
  j1 |= j2;
  d1 = f64_reinterpret_i64(j1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B29:;
  d0 = l11;
  d1 = 1e-300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 1e-300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  d0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 log_0(f64 p0) {
  u32 l1 = 0, l2 = 0;
  u64 l0 = 0, l3 = 0;
  f64 l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9, d10;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 0ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B3;}
  j0 = l0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i1 = 1048575u;
  i0 = i0 <= i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 2146435071u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = 4294966273u;
  l2 = i0;
  j0 = l0;
  j1 = 4294967295ull;
  j0 &= j1;
  l0 = j0;
  j1 = 0ull;
  i0 = j0 != j1;
  if (i0) {goto B2;}
  d0 = 0;
  p0 = d0;
  i0 = l1;
  i1 = 1072693248u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  B4:;
  d0 = p0;
  goto Bfunc;
  B3:;
  j0 = l0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 0ull;
  i0 = j0 == j1;
  if (i0) {goto B1;}
  j0 = l0;
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B0;}
  d0 = p0;
  d1 = 18014398509481984;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  j0 = i64_reinterpret_f64(d0);
  l3 = j0;
  j1 = 4294967295ull;
  j0 &= j1;
  l0 = j0;
  j0 = l3;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i0 = 4294966219u;
  l2 = i0;
  B2:;
  i0 = l2;
  i1 = l1;
  i2 = 614242u;
  i1 += i2;
  l1 = i1;
  i2 = 20u;
  i1 >>= (i2 & 31);
  i0 += i1;
  d0 = (f64)(s32)(i0);
  l4 = d0;
  d1 = 0.69314718036912382;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l1;
  i2 = 1048575u;
  i1 &= i2;
  i2 = 1072079006u;
  i1 += i2;
  j1 = (u64)(i1);
  j2 = 32ull;
  j1 <<= (j2 & 63);
  j2 = l0;
  j1 |= j2;
  d1 = f64_reinterpret_i64(j1);
  d2 = -1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = l4;
  d3 = 1.9082149292705877e-10;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = p0;
  d4 = p0;
  d5 = 2;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d3, d4);
  l4 = d3;
  d4 = p0;
  d5 = p0;
  d6 = 0.5;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  l5 = d4;
  d5 = l4;
  d6 = l4;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  l4 = d5;
  d6 = l4;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  p0 = d5;
  d6 = p0;
  d7 = p0;
  d8 = 0.15313837699209373;
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.22222198432149784;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.39999999999409419;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = l4;
  d7 = p0;
  d8 = p0;
  d9 = p0;
  d10 = 0.14798198605116586;
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = 0.1818357216161805;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 0.28571428743662391;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.66666666666667351;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d3 = l5;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  d0 = -1;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 atan_0(f64 p0) {
  u32 l0 = 0, l2 = 0, l3 = 0, l4 = 0;
  u64 l1 = 0;
  f64 l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  f32 f1;
  f64 d0, d1, d2, d3, d4, d5, d6;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 63ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l2 = i0;
  j0 = l1;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l3 = i0;
  i1 = 1141899264u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  j0 = l1;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = -1.5707963267948966;
  d1 = 1.5707963267948966;
  i2 = l2;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B3:;
  i0 = l3;
  i1 = 1071382527u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = 4294967295u;
  l4 = i0;
  i0 = l3;
  i1 = 1044381695u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = l3;
  i1 = 1048575u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l0;
  d1 = p0;
  f1 = (*Z_eosio_injectionZ__eosio_f64_demoteZ_fd)(d1);
  f32_store((&M0), (u64)(i0 + 12), f1);
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B1:;
  d0 = p0;
  d0 = fabs_0(d0);
  p0 = d0;
  i0 = l3;
  i1 = 1072889855u;
  i0 = i0 > i1;
  if (i0) {goto B6;}
  i0 = l3;
  i1 = 1072037887u;
  i0 = i0 > i1;
  if (i0) {goto B5;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p0;
  d2 = 2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p0 = d0;
  i0 = 0u;
  l4 = i0;
  goto B0;
  B6:;
  i0 = l3;
  i1 = 1073971199u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  d0 = p0;
  d1 = -1.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p0;
  d2 = 1.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p0 = d0;
  i0 = 2u;
  l4 = i0;
  goto B0;
  B5:;
  d0 = p0;
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p0;
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p0 = d0;
  i0 = 1u;
  l4 = i0;
  goto B0;
  B4:;
  d0 = -1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p0 = d0;
  i0 = 3u;
  l4 = i0;
  B0:;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l5 = d0;
  d1 = l5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  d1 = l6;
  d2 = l6;
  d3 = l6;
  d4 = l6;
  d5 = -0.036531572744216916;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -0.058335701337905735;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = -0.0769187620504483;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.11111110405462356;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -0.19999999999876483;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l7 = d0;
  d0 = l5;
  d1 = l6;
  d2 = l6;
  d3 = l6;
  d4 = l6;
  d5 = l6;
  d6 = 0.016285820115365782;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.049768779946159324;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.066610731373875312;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.090908871334365066;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 0.14285714272503466;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 0.33333333333332932;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  i0 = l4;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B7;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  i1 = 3u;
  i0 <<= (i1 & 31);
  l3 = i0;
  i1 = 39072u;
  i0 += i1;
  d0 = f64_load((&M0), (u64)(i0));
  d1 = p0;
  d2 = l7;
  d3 = l6;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i2 = l3;
  i3 = 39104u;
  i2 += i3;
  d2 = f64_load((&M0), (u64)(i2));
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p0 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = p0;
  i2 = l2;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B7:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = p0;
  d2 = l7;
  d3 = l6;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 atan2_0(f64 p0, f64 p1) {
  u32 l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  u64 l0 = 0, l1 = 0;
  f64 l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2;
  f64 d0, d1, d2;
  d0 = p1;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B0;}
  B1:;
  d0 = p0;
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  j0 = l0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l2 = i0;
  i1 = 3222274048u;
  i0 += i1;
  j1 = l0;
  i1 = (u32)(j1);
  l3 = i1;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B12;}
  j0 = l0;
  j1 = 62ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2u;
  i0 &= i1;
  l4 = i0;
  j1 = l1;
  j2 = 63ull;
  j1 >>= (j2 & 63);
  i1 = (u32)(j1);
  l5 = i1;
  i0 |= i1;
  l6 = i0;
  j0 = l1;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l7 = i0;
  j1 = l1;
  i1 = (u32)(j1);
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l2;
  i1 = 2147483647u;
  i0 &= i1;
  l2 = i0;
  i1 = l3;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = l2;
  i1 = 2146435072u;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  i0 = l6;
  i1 = 2u;
  i0 ^= i1;
  i1 = 3u;
  i0 &= i1;
  l2 = i0;
  i0 = l7;
  i1 = 2146435072u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  i0 = l2;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 39136u;
  i0 += i1;
  d0 = f64_load((&M0), (u64)(i0));
  goto Bfunc;
  B12:;
  d0 = p0;
  d0 = atan_0(d0);
  goto Bfunc;
  B11:;
  i0 = l6;
  i1 = 3u;
  i0 &= i1;
  l2 = i0;
  i1 = 3u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = l2;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  d0 = p0;
  goto Bfunc;
  B10:;
  d0 = -1.5707963267948966;
  d1 = 1.5707963267948966;
  i2 = l5;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B9:;
  i0 = l7;
  i1 = 2146435072u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = l2;
  i1 = 67108864u;
  i0 += i1;
  i1 = l7;
  i0 = i0 < i1;
  if (i0) {goto B7;}
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B14;}
  d0 = 0;
  l8 = d0;
  i0 = l7;
  i1 = 67108864u;
  i0 += i1;
  i1 = l2;
  i0 = i0 < i1;
  if (i0) {goto B13;}
  B14:;
  d0 = p0;
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d0 = fabs_0(d0);
  d0 = atan_0(d0);
  l8 = d0;
  B13:;
  i0 = l6;
  i1 = 3u;
  i0 &= i1;
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = l2;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  d0 = l8;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  goto Bfunc;
  B8:;
  i0 = l2;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 39168u;
  i0 += i1;
  d0 = f64_load((&M0), (u64)(i0));
  goto Bfunc;
  B7:;
  d0 = -1.5707963267948966;
  d1 = 1.5707963267948966;
  i2 = l5;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B6:;
  d0 = -3.1415926535897931;
  goto Bfunc;
  B5:;
  d0 = 3.1415926535897931;
  goto Bfunc;
  B4:;
  d0 = l8;
  goto Bfunc;
  B3:;
  d0 = 3.1415926535897931;
  d1 = l8;
  d2 = -1.2246467991473532e-16;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B2:;
  d0 = l8;
  d1 = -1.2246467991473532e-16;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = -3.1415926535897931;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 exp_0(f64 p0) {
  u32 l0 = 0, l2 = 0, l3 = 0;
  u64 l1 = 0;
  f64 l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  f32 f1;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 63ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l2 = i0;
  j0 = l1;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l3 = i0;
  i1 = 1082532651u;
  i0 = i0 < i1;
  if (i0) {goto B9;}
  j0 = l1;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 <= j1;
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B9:;
  i0 = l3;
  i1 = 1071001155u;
  i0 = i0 < i1;
  if (i0) {goto B7;}
  i0 = l3;
  i1 = 1072734898u;
  i0 = i0 >= i1;
  if (i0) {goto B5;}
  i0 = l2;
  i1 = 1u;
  i0 ^= i1;
  i1 = l2;
  i0 -= i1;
  l3 = i0;
  goto B2;
  B8:;
  d0 = p0;
  d1 = 709.78271289338397;
  i0 = (*Z_eosio_injectionZ__eosio_f64_gtZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B6;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = 8.9884656743115795e+307;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B7:;
  i0 = l3;
  i1 = 1043333120u;
  i0 = i0 <= i1;
  if (i0) {goto B4;}
  i0 = 0u;
  l3 = i0;
  d0 = 0;
  l4 = d0;
  d0 = p0;
  l5 = d0;
  goto B1;
  B6:;
  d0 = p0;
  d1 = -708.39641853226408;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B5;}
  i0 = l0;
  d1 = -1.4012984643248171e-45;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  f1 = (*Z_eosio_injectionZ__eosio_f64_demoteZ_fd)(d1);
  f32_store((&M0), (u64)(i0 + 12), f1);
  d0 = 0;
  l6 = d0;
  d0 = p0;
  d1 = -745.13321910194111;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B0;}
  B5:;
  d0 = p0;
  d1 = 1.4426950408889634;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 39200u;
  i1 += i2;
  d1 = f64_load((&M0), (u64)(i1));
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l6 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B3;}
  i0 = 2147483648u;
  l3 = i0;
  goto B2;
  B4:;
  i0 = l0;
  d1 = p0;
  d2 = 8.9884656743115795e+307;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0), d1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B3:;
  d0 = l6;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  l3 = i0;
  B2:;
  d0 = p0;
  i1 = l3;
  d1 = (f64)(s32)(i1);
  l6 = d1;
  d2 = -0.69314718036912382;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d1 = l6;
  d2 = 1.9082149292705877e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l4 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l5 = d0;
  B1:;
  d0 = p0;
  d1 = l5;
  d2 = l5;
  d3 = l5;
  d4 = l5;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  l6 = d3;
  d4 = l6;
  d5 = l6;
  d6 = l6;
  d7 = l6;
  d8 = 4.1381367970572385e-08;
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = -1.6533902205465252e-06;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 6.6137563214379344e-05;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -0.0027777777777015593;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.16666666666666602;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  l6 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 2;
  d3 = l6;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d2 = l4;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l6 = d0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B0;}
  d0 = l6;
  i1 = l3;
  d0 = scalbn_0(d0, i1);
  l6 = d0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = l6;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 __cos(f64 p0, f64 p1) {
  f64 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  f64 d0, d1, d2, d3, d4, d5, d6, d7;
  d0 = 1;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l0 = d1;
  d2 = 0.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l1 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l2 = d0;
  d1 = 1;
  d2 = l2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = l1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = l0;
  d3 = l0;
  d4 = l0;
  d5 = l0;
  d6 = 2.4801587289476729e-05;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -0.001388888888887411;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.041666666666666602;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = l0;
  d5 = l0;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  l1 = d4;
  d5 = l1;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = l0;
  d6 = l0;
  d7 = -1.1359647557788195e-11;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 2.0875723212981748e-09;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -2.7557314351390663e-07;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = p0;
  d4 = p1;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  FUNC_EPILOGUE;
  return d0;
}

static f64 floor_0(f64 p0) {
  u32 l0 = 0, l2 = 0;
  u64 l1 = 0;
  f64 l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  d0 = p0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B0;}
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2047u;
  i0 &= i1;
  l2 = i0;
  i1 = 1074u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  d0 = p0;
  d1 = -4503599627370496;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 4503599627370496;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p0;
  d2 = 4503599627370496;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = -4503599627370496;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  j2 = l1;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  d0 = i2 ? d0 : d1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l3 = d0;
  i0 = l2;
  i1 = 1022u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l0;
  d1 = l3;
  f64_store((&M0), (u64)(i0 + 8), d1);
  j0 = l1;
  j1 = 63ull;
  j0 = (u64)((s64)j0 >> (j1 & 63));
  i0 = (u32)(j0);
  d0 = (f64)(s32)(i0);
  goto Bfunc;
  B1:;
  d0 = l3;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d0 = l3;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_gtZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B0;}
  d0 = p0;
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  B0:;
  d0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static u32 __rem_pio2_large(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l8 = 0, 
      l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0, l15 = 0, l16 = 0, 
      l17 = 0, l18 = 0, l20 = 0, l21 = 0, l22 = 0;
  f64 l7 = 0, l19 = 0, l23 = 0, l24 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1;
  f64 d0, d1, d2, d3;
  i0 = g0;
  i1 = 560u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = p2;
  i2 = 4294967293u;
  i1 += i2;
  i2 = 24u;
  i1 = I32_DIV_S(i1, i2);
  l1 = i1;
  i2 = 0u;
  i3 = l1;
  i4 = 0u;
  i3 = (u32)((s32)i3 > (s32)i4);
  i1 = i3 ? i1 : i2;
  l2 = i1;
  i2 = 4294967272u;
  i1 *= i2;
  i0 += i1;
  l3 = i0;
  i0 = p4;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 39216u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i1 = p3;
  i2 = 4294967295u;
  i1 += i2;
  p2 = i1;
  i0 += i1;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = l4;
  i1 = p3;
  i0 += i1;
  l5 = i0;
  i0 = l2;
  i1 = p2;
  i0 -= i1;
  p2 = i0;
  i0 = l2;
  i1 = 1u;
  i0 += i1;
  i1 = p3;
  i0 -= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 39232u;
  i0 += i1;
  l6 = i0;
  i0 = l0;
  i1 = 320u;
  i0 += i1;
  l1 = i0;
  L1: vm_checktime();
    i0 = p2;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B3;}
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0));
    d0 = (f64)(s32)(i0);
    l7 = d0;
    goto B2;
    B3:;
    d0 = 0;
    l7 = d0;
    B2:;
    i0 = l1;
    d1 = l7;
    f64_store((&M0), (u64)(i0), d1);
    i0 = l1;
    i1 = 8u;
    i0 += i1;
    l1 = i0;
    i0 = l6;
    i1 = 4u;
    i0 += i1;
    l6 = i0;
    i0 = p2;
    i1 = 1u;
    i0 += i1;
    p2 = i0;
    i0 = l5;
    i1 = 4294967295u;
    i0 += i1;
    l5 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l3;
  i1 = 4294967272u;
  i0 += i1;
  l8 = i0;
  i0 = p3;
  i1 = 0u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B5;}
  i0 = l0;
  i1 = 320u;
  i0 += i1;
  i1 = p3;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967288u;
  i0 += i1;
  l9 = i0;
  i0 = 0u;
  l5 = i0;
  L6: vm_checktime();
    d0 = 0;
    l7 = d0;
    i0 = p0;
    p2 = i0;
    i0 = p3;
    l6 = i0;
    i0 = l9;
    l1 = i0;
    L7: vm_checktime();
      d0 = l7;
      i1 = p2;
      d1 = f64_load((&M0), (u64)(i1));
      i2 = l1;
      d2 = f64_load((&M0), (u64)(i2));
      d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
      d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
      l7 = d0;
      i0 = p2;
      i1 = 8u;
      i0 += i1;
      p2 = i0;
      i0 = l1;
      i1 = 4294967288u;
      i0 += i1;
      l1 = i0;
      i0 = l6;
      i1 = 4294967295u;
      i0 += i1;
      l6 = i0;
      if (i0) {goto L7;}
    i0 = l0;
    i1 = l5;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    d1 = l7;
    f64_store((&M0), (u64)(i0), d1);
    i0 = l9;
    i1 = 8u;
    i0 += i1;
    l9 = i0;
    i0 = l5;
    i1 = l4;
    i0 = (u32)((s32)i0 < (s32)i1);
    p2 = i0;
    i0 = l5;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    i0 = p2;
    if (i0) {goto L6;}
    goto B4;
  B5:;
  i0 = 4294967295u;
  l1 = i0;
  i0 = l0;
  p2 = i0;
  L8: vm_checktime();
    i0 = p2;
    j1 = 0ull;
    i64_store((&M0), (u64)(i0), j1);
    i0 = p2;
    i1 = 8u;
    i0 += i1;
    p2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i1 = l4;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L8;}
  B4:;
  i0 = 23u;
  i1 = l8;
  i0 -= i1;
  l10 = i0;
  i0 = 24u;
  i1 = l8;
  i0 -= i1;
  l11 = i0;
  i0 = l0;
  i1 = 480u;
  i0 += i1;
  i1 = l4;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967292u;
  i0 += i1;
  l12 = i0;
  i0 = l0;
  i1 = 8u;
  i0 |= i1;
  l13 = i0;
  i0 = l0;
  i1 = 480u;
  i0 += i1;
  i1 = 4294967292u;
  i0 += i1;
  l14 = i0;
  i0 = l0;
  i1 = 4294967288u;
  i0 += i1;
  l15 = i0;
  i0 = p3;
  i1 = 0u;
  i0 = (u32)((s32)i0 > (s32)i1);
  l16 = i0;
  i0 = l4;
  l6 = i0;
  L9: vm_checktime();
    i0 = l0;
    i1 = l6;
    i2 = 3u;
    i1 <<= (i2 & 31);
    l17 = i1;
    i0 += i1;
    d0 = f64_load((&M0), (u64)(i0));
    l7 = d0;
    i0 = l6;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    l18 = i0;
    if (i0) {goto B10;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    i0 = l15;
    i1 = l17;
    i0 += i1;
    p2 = i0;
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    l1 = i0;
    L11: vm_checktime();
      d0 = l7;
      d1 = l7;
      d2 = 5.9604644775390625e-08;
      d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
      d1 = (*Z_eosio_injectionZ__eosio_f64_truncZ_dd)(d1);
      l19 = d1;
      d2 = -16777216;
      d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
      d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
      l7 = d0;
      d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
      d1 = 2147483648;
      i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
      if (i0) {goto B13;}
      i0 = 2147483648u;
      l9 = i0;
      goto B12;
      B13:;
      d0 = l7;
      i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
      l9 = i0;
      B12:;
      i0 = l1;
      i1 = l9;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l1;
      i1 = 4u;
      i0 += i1;
      l1 = i0;
      i0 = p2;
      d0 = f64_load((&M0), (u64)(i0));
      d1 = l19;
      d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
      l7 = d0;
      i0 = p2;
      i1 = 4294967288u;
      i0 += i1;
      p2 = i0;
      i0 = l5;
      i1 = 4294967295u;
      i0 += i1;
      l5 = i0;
      i1 = 1u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L11;}
    B10:;
    d0 = l7;
    i1 = l8;
    d0 = scalbn_0(d0, i1);
    l7 = d0;
    d1 = l7;
    d2 = 0.125;
    d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
    d1 = floor_0(d1);
    d2 = -8;
    d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
    d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
    l7 = d0;
    d0 = (*Z_eosio_injectionZ__eosio_f64_truncZ_dd)(d0);
    l19 = d0;
    d0 = l7;
    d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
    d1 = 2147483648;
    i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
    if (i0) {goto B22;}
    i0 = 2147483648u;
    l20 = i0;
    d0 = l7;
    d1 = l19;
    d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
    l7 = d0;
    i0 = l8;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    l21 = i0;
    i0 = !(i0);
    if (i0) {goto B21;}
    goto B20;
    B22:;
    d0 = l7;
    i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
    l20 = i0;
    d0 = l7;
    d1 = l19;
    d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
    l7 = d0;
    i0 = l8;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    l21 = i0;
    if (i0) {goto B20;}
    B21:;
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    i1 = l6;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = 4294967292u;
    i0 += i1;
    p2 = i0;
    i1 = p2;
    i1 = i32_load((&M0), (u64)(i1));
    p2 = i1;
    i2 = p2;
    i3 = l11;
    i2 = (u32)((s32)i2 >> (i3 & 31));
    p2 = i2;
    i3 = l11;
    i2 <<= (i3 & 31);
    i1 -= i2;
    l1 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = l20;
    i0 += i1;
    l20 = i0;
    i0 = l1;
    i1 = l10;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l22 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B18;}
    goto B19;
    B20:;
    i0 = l8;
    i0 = !(i0);
    if (i0) {goto B23;}
    i0 = 2u;
    l22 = i0;
    d0 = l7;
    d1 = 0.5;
    i0 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d0, d1);
    i1 = 1u;
    i0 ^= i1;
    i0 = !(i0);
    if (i0) {goto B19;}
    i0 = 0u;
    l22 = i0;
    d0 = l7;
    d1 = 0;
    i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
    if (i0) {goto B17;}
    goto B16;
    B23:;
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    i1 = l6;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = 4294967292u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 23u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l22 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B18;}
    B19:;
    i0 = l18;
    if (i0) {goto B25;}
    i0 = 0u;
    l18 = i0;
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    p2 = i0;
    i0 = l6;
    l9 = i0;
    L26: vm_checktime();
      i0 = p2;
      i0 = i32_load((&M0), (u64)(i0));
      l1 = i0;
      i0 = 16777215u;
      l5 = i0;
      i0 = l18;
      if (i0) {goto B28;}
      i0 = l1;
      i0 = !(i0);
      if (i0) {goto B27;}
      i0 = 1u;
      l18 = i0;
      i0 = 16777216u;
      l5 = i0;
      B28:;
      i0 = p2;
      i1 = l5;
      i2 = l1;
      i1 -= i2;
      i32_store((&M0), (u64)(i0), i1);
      i0 = p2;
      i1 = 4u;
      i0 += i1;
      p2 = i0;
      i0 = l9;
      i1 = 4294967295u;
      i0 += i1;
      l9 = i0;
      if (i0) {goto L26;}
      goto B24;
      B27:;
      i0 = 0u;
      l18 = i0;
      i0 = p2;
      i1 = 4u;
      i0 += i1;
      p2 = i0;
      i0 = l9;
      i1 = 4294967295u;
      i0 += i1;
      l9 = i0;
      if (i0) {goto L26;}
      goto B24;
    B25:;
    i0 = 0u;
    l18 = i0;
    B24:;
    i0 = l21;
    if (i0) {goto B31;}
    i0 = l8;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B30;}
    i0 = l8;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B31;}
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    i1 = l6;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = 4294967292u;
    i0 += i1;
    p2 = i0;
    i1 = p2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 8388607u;
    i1 &= i2;
    i32_store((&M0), (u64)(i0), i1);
    B31:;
    i0 = l20;
    i1 = 1u;
    i0 += i1;
    l20 = i0;
    i0 = l22;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B18;}
    goto B29;
    B30:;
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    i1 = l6;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = 4294967292u;
    i0 += i1;
    p2 = i0;
    i1 = p2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 4194303u;
    i1 &= i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l20;
    i1 = 1u;
    i0 += i1;
    l20 = i0;
    i0 = l22;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B18;}
    B29:;
    d0 = 1;
    d1 = l7;
    d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
    l7 = d0;
    i0 = 2u;
    l22 = i0;
    i0 = l18;
    i0 = !(i0);
    if (i0) {goto B18;}
    d0 = l7;
    d1 = 1;
    i2 = l8;
    d1 = scalbn_0(d1, i2);
    d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
    l7 = d0;
    d1 = 0;
    i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
    if (i0) {goto B16;}
    goto B17;
    B18:;
    d0 = l7;
    d1 = 0;
    i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
    if (i0) {goto B16;}
    B17:;
    d0 = l7;
    i1 = 0u;
    i2 = l8;
    i1 -= i2;
    d0 = scalbn_0(d0, i1);
    l7 = d0;
    d1 = 16777216;
    i0 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d0, d1);
    i1 = 1u;
    i0 ^= i1;
    i0 = !(i0);
    if (i0) {goto B36;}
    d0 = l7;
    d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
    d1 = 2147483648;
    i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
    if (i0) {goto B35;}
    i0 = 2147483648u;
    p2 = i0;
    goto B32;
    B36:;
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    i1 = l6;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p2 = i0;
    d0 = l7;
    d1 = l7;
    d2 = 5.9604644775390625e-08;
    d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
    l19 = d1;
    d1 = (*Z_eosio_injectionZ__eosio_f64_truncZ_dd)(d1);
    d2 = -16777216;
    d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
    d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
    l7 = d0;
    d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
    d1 = 2147483648;
    i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
    if (i0) {goto B34;}
    i0 = 2147483648u;
    l1 = i0;
    goto B33;
    B35:;
    d0 = l7;
    i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
    p2 = i0;
    goto B32;
    B34:;
    d0 = l7;
    i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
    l1 = i0;
    B33:;
    i0 = p2;
    i1 = l1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l6 = i0;
    d0 = l19;
    d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
    d1 = 2147483648;
    i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
    if (i0) {goto B38;}
    i0 = 2147483648u;
    p2 = i0;
    goto B37;
    B38:;
    d0 = l19;
    i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
    p2 = i0;
    B37:;
    i0 = l3;
    l8 = i0;
    B32:;
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    i1 = l6;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = p2;
    i32_store((&M0), (u64)(i0), i1);
    goto B15;
    B16:;
    i0 = l6;
    i1 = l4;
    i0 = (u32)((s32)i0 <= (s32)i1);
    if (i0) {goto B40;}
    i0 = l14;
    i1 = l6;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p2 = i0;
    i0 = 0u;
    l1 = i0;
    i0 = l6;
    l5 = i0;
    L41: vm_checktime();
      i0 = p2;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l1;
      i0 |= i1;
      l1 = i0;
      i0 = p2;
      i1 = 4294967292u;
      i0 += i1;
      p2 = i0;
      i0 = l5;
      i1 = 4294967295u;
      i0 += i1;
      l5 = i0;
      i1 = l4;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L41;}
    i0 = l1;
    if (i0) {goto B39;}
    B40:;
    i0 = l12;
    p2 = i0;
    i0 = l6;
    l9 = i0;
    L42: vm_checktime();
      i0 = l9;
      i1 = 1u;
      i0 += i1;
      l9 = i0;
      i0 = p2;
      i0 = i32_load((&M0), (u64)(i0));
      l1 = i0;
      i0 = p2;
      i1 = 4294967292u;
      i0 += i1;
      p2 = i0;
      i0 = l1;
      i0 = !(i0);
      if (i0) {goto L42;}
    i0 = l16;
    i0 = !(i0);
    if (i0) {goto B43;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    p2 = i0;
    i0 = l0;
    i1 = 320u;
    i0 += i1;
    i1 = p3;
    i2 = l6;
    i1 += i2;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l18 = i0;
    L44: vm_checktime();
      i0 = l0;
      i1 = 320u;
      i0 += i1;
      i1 = l6;
      i2 = p3;
      i1 += i2;
      i2 = 3u;
      i1 <<= (i2 & 31);
      i0 += i1;
      i1 = p2;
      l5 = i1;
      i2 = l2;
      i1 += i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i2 = 39232u;
      i1 += i2;
      i1 = i32_load((&M0), (u64)(i1));
      d1 = (f64)(s32)(i1);
      f64_store((&M0), (u64)(i0), d1);
      d0 = 0;
      l7 = d0;
      i0 = p0;
      p2 = i0;
      i0 = l18;
      l1 = i0;
      i0 = p3;
      l6 = i0;
      L45: vm_checktime();
        d0 = l7;
        i1 = p2;
        d1 = f64_load((&M0), (u64)(i1));
        i2 = l1;
        d2 = f64_load((&M0), (u64)(i2));
        d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
        d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
        l7 = d0;
        i0 = p2;
        i1 = 8u;
        i0 += i1;
        p2 = i0;
        i0 = l1;
        i1 = 4294967288u;
        i0 += i1;
        l1 = i0;
        i0 = l6;
        i1 = 4294967295u;
        i0 += i1;
        l6 = i0;
        if (i0) {goto L45;}
      i0 = l0;
      i1 = l5;
      i2 = 3u;
      i1 <<= (i2 & 31);
      i0 += i1;
      d1 = l7;
      f64_store((&M0), (u64)(i0), d1);
      i0 = l18;
      i1 = 8u;
      i0 += i1;
      l18 = i0;
      i0 = l5;
      i1 = 1u;
      i0 += i1;
      p2 = i0;
      i0 = l5;
      l6 = i0;
      i0 = l5;
      i1 = l9;
      i0 = (u32)((s32)i0 < (s32)i1);
      if (i0) {goto L44;}
      goto B14;
    B43:;
    i0 = l13;
    i1 = l17;
    i0 += i1;
    p2 = i0;
    i0 = l2;
    i1 = l6;
    i0 += i1;
    i1 = 2u;
    i0 <<= (i1 & 31);
    i1 = 39236u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 320u;
    i0 += i1;
    i1 = p3;
    i2 = l6;
    i1 += i2;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l5 = i0;
    L46: vm_checktime();
      i0 = p2;
      j1 = 0ull;
      i64_store((&M0), (u64)(i0), j1);
      i0 = l5;
      i1 = l1;
      i1 = i32_load((&M0), (u64)(i1));
      d1 = (f64)(s32)(i1);
      f64_store((&M0), (u64)(i0), d1);
      i0 = l1;
      i1 = 4u;
      i0 += i1;
      l1 = i0;
      i0 = p2;
      i1 = 8u;
      i0 += i1;
      p2 = i0;
      i0 = l5;
      i1 = 8u;
      i0 += i1;
      l5 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      i1 = l9;
      i0 = (u32)((s32)i0 < (s32)i1);
      if (i0) {goto L46;}
    i0 = l9;
    l6 = i0;
    goto L9;
    B39:;
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    i1 = l6;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = 4294967292u;
    i0 += i1;
    p2 = i0;
    L47: vm_checktime();
      i0 = l6;
      i1 = 4294967295u;
      i0 += i1;
      l6 = i0;
      i0 = l8;
      i1 = 4294967272u;
      i0 += i1;
      l8 = i0;
      i0 = p2;
      i0 = i32_load((&M0), (u64)(i0));
      l1 = i0;
      i0 = p2;
      i1 = 4294967292u;
      i0 += i1;
      p2 = i0;
      i0 = l1;
      i0 = !(i0);
      if (i0) {goto L47;}
    B15:;
    d0 = 1;
    i1 = l8;
    d0 = scalbn_0(d0, i1);
    l7 = d0;
    i0 = l6;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B48;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    i0 = l0;
    i1 = l6;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p2 = i0;
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    i1 = l6;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l1 = i0;
    L49: vm_checktime();
      i0 = p2;
      d1 = l7;
      i2 = l1;
      i2 = i32_load((&M0), (u64)(i2));
      d2 = (f64)(s32)(i2);
      d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
      f64_store((&M0), (u64)(i0), d1);
      i0 = p2;
      i1 = 4294967288u;
      i0 += i1;
      p2 = i0;
      i0 = l1;
      i1 = 4294967292u;
      i0 += i1;
      l1 = i0;
      d0 = l7;
      d1 = 5.9604644775390625e-08;
      d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
      l7 = d0;
      i0 = l5;
      i1 = 4294967295u;
      i0 += i1;
      l5 = i0;
      i1 = 0u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L49;}
    i0 = l6;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B48;}
    i0 = l0;
    i1 = l6;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l9 = i0;
    i0 = l6;
    p2 = i0;
    L50: vm_checktime();
      i0 = l6;
      i1 = p2;
      p3 = i1;
      i0 -= i1;
      l18 = i0;
      d0 = 0;
      l7 = d0;
      i0 = 0u;
      p2 = i0;
      i0 = 0u;
      l1 = i0;
      L52: vm_checktime();
        d0 = l7;
        i1 = p2;
        i2 = 42000u;
        i1 += i2;
        d1 = f64_load((&M0), (u64)(i1));
        i2 = l9;
        i3 = p2;
        i2 += i3;
        d2 = f64_load((&M0), (u64)(i2));
        d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
        d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
        l7 = d0;
        i0 = l1;
        i1 = l4;
        i0 = (u32)((s32)i0 >= (s32)i1);
        if (i0) {goto B51;}
        i0 = p2;
        i1 = 8u;
        i0 += i1;
        p2 = i0;
        i0 = l1;
        i1 = l18;
        i0 = i0 < i1;
        l5 = i0;
        i0 = l1;
        i1 = 1u;
        i0 += i1;
        l1 = i0;
        i0 = l5;
        if (i0) {goto L52;}
      B51:;
      i0 = l0;
      i1 = 160u;
      i0 += i1;
      i1 = l18;
      i2 = 3u;
      i1 <<= (i2 & 31);
      i0 += i1;
      d1 = l7;
      f64_store((&M0), (u64)(i0), d1);
      i0 = l9;
      i1 = 4294967288u;
      i0 += i1;
      l9 = i0;
      i0 = p3;
      i1 = 4294967295u;
      i0 += i1;
      p2 = i0;
      i0 = p3;
      i1 = 0u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L50;}
    B48:;
    i0 = p4;
    i1 = 4294967295u;
    i0 += i1;
    i1 = 2u;
    i0 = i0 < i1;
    if (i0) {goto B60;}
    i0 = p4;
    i0 = !(i0);
    if (i0) {goto B59;}
    i0 = p4;
    i1 = 3u;
    i0 = i0 != i1;
    if (i0) {goto B53;}
    d0 = 0;
    l23 = d0;
    i0 = l6;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B61;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 160u;
    i0 += i1;
    i1 = l6;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l5 = i0;
    i1 = 4294967288u;
    i0 += i1;
    p2 = i0;
    i0 = l5;
    d0 = f64_load((&M0), (u64)(i0));
    l7 = d0;
    L62: vm_checktime();
      i0 = p2;
      i1 = p2;
      d1 = f64_load((&M0), (u64)(i1));
      l24 = d1;
      d2 = l7;
      d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
      l19 = d1;
      f64_store((&M0), (u64)(i0), d1);
      i0 = p2;
      i1 = 8u;
      i0 += i1;
      d1 = l7;
      d2 = l24;
      d3 = l19;
      d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
      d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
      f64_store((&M0), (u64)(i0), d1);
      i0 = p2;
      i1 = 4294967288u;
      i0 += i1;
      p2 = i0;
      d0 = l19;
      l7 = d0;
      i0 = l1;
      i1 = 4294967295u;
      i0 += i1;
      l1 = i0;
      i1 = 1u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L62;}
    i0 = l6;
    i1 = 2u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B61;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 160u;
    i0 += i1;
    i1 = l6;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l5 = i0;
    i1 = 4294967288u;
    i0 += i1;
    p2 = i0;
    i0 = l5;
    d0 = f64_load((&M0), (u64)(i0));
    l7 = d0;
    L63: vm_checktime();
      i0 = p2;
      i1 = p2;
      d1 = f64_load((&M0), (u64)(i1));
      l24 = d1;
      d2 = l7;
      d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
      l19 = d1;
      f64_store((&M0), (u64)(i0), d1);
      i0 = p2;
      i1 = 8u;
      i0 += i1;
      d1 = l7;
      d2 = l24;
      d3 = l19;
      d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
      d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
      f64_store((&M0), (u64)(i0), d1);
      i0 = p2;
      i1 = 4294967288u;
      i0 += i1;
      p2 = i0;
      d0 = l19;
      l7 = d0;
      i0 = l1;
      i1 = 4294967295u;
      i0 += i1;
      l1 = i0;
      i1 = 2u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L63;}
    i0 = l6;
    i1 = 2u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B61;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 160u;
    i0 += i1;
    i1 = l6;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p2 = i0;
    d0 = 0;
    l23 = d0;
    L64: vm_checktime();
      d0 = l23;
      i1 = p2;
      d1 = f64_load((&M0), (u64)(i1));
      d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
      l23 = d0;
      i0 = p2;
      i1 = 4294967288u;
      i0 += i1;
      p2 = i0;
      i0 = l1;
      i1 = 4294967295u;
      i0 += i1;
      l1 = i0;
      i1 = 2u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L64;}
    B61:;
    i0 = l0;
    d0 = f64_load((&M0), (u64)(i0 + 160));
    l7 = d0;
    i0 = l22;
    i0 = !(i0);
    if (i0) {goto B56;}
    i0 = p1;
    d1 = l7;
    d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
    f64_store((&M0), (u64)(i0), d1);
    i0 = p1;
    i1 = l0;
    d1 = f64_load((&M0), (u64)(i1 + 168));
    d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
    f64_store((&M0), (u64)(i0 + 8), d1);
    i0 = p1;
    d1 = l23;
    d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
    f64_store((&M0), (u64)(i0 + 16), d1);
    goto B53;
    B60:;
    i0 = l6;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B58;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 160u;
    i0 += i1;
    i1 = l6;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p2 = i0;
    d0 = 0;
    l7 = d0;
    L65: vm_checktime();
      d0 = l7;
      i1 = p2;
      d1 = f64_load((&M0), (u64)(i1));
      d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
      l7 = d0;
      i0 = p2;
      i1 = 4294967288u;
      i0 += i1;
      p2 = i0;
      i0 = l1;
      i1 = 4294967295u;
      i0 += i1;
      l1 = i0;
      i1 = 0u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L65;}
      goto B57;
    B59:;
    i0 = l6;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B55;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 160u;
    i0 += i1;
    i1 = l6;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p2 = i0;
    d0 = 0;
    l7 = d0;
    L66: vm_checktime();
      d0 = l7;
      i1 = p2;
      d1 = f64_load((&M0), (u64)(i1));
      d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
      l7 = d0;
      i0 = p2;
      i1 = 4294967288u;
      i0 += i1;
      p2 = i0;
      i0 = l1;
      i1 = 4294967295u;
      i0 += i1;
      l1 = i0;
      i1 = 0u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L66;}
      goto B54;
    B58:;
    d0 = 0;
    l7 = d0;
    B57:;
    i0 = p1;
    d1 = l7;
    d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
    d2 = l7;
    i3 = l22;
    d1 = i3 ? d1 : d2;
    f64_store((&M0), (u64)(i0), d1);
    i0 = l0;
    d0 = f64_load((&M0), (u64)(i0 + 160));
    d1 = l7;
    d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
    l7 = d0;
    i0 = l6;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B67;}
    i0 = l0;
    i1 = 160u;
    i0 += i1;
    i1 = 8u;
    i0 |= i1;
    p2 = i0;
    L68: vm_checktime();
      d0 = l7;
      i1 = p2;
      d1 = f64_load((&M0), (u64)(i1));
      d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
      l7 = d0;
      i0 = p2;
      i1 = 8u;
      i0 += i1;
      p2 = i0;
      i0 = l6;
      i1 = 4294967295u;
      i0 += i1;
      l6 = i0;
      if (i0) {goto L68;}
    B67:;
    i0 = p1;
    d1 = l7;
    d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
    d2 = l7;
    i3 = l22;
    d1 = i3 ? d1 : d2;
    f64_store((&M0), (u64)(i0 + 8), d1);
    goto B53;
    B56:;
    i0 = p1;
    d1 = l7;
    f64_store((&M0), (u64)(i0), d1);
    i0 = p1;
    i1 = l0;
    j1 = i64_load((&M0), (u64)(i1 + 168));
    i64_store((&M0), (u64)(i0 + 8), j1);
    i0 = p1;
    d1 = l23;
    f64_store((&M0), (u64)(i0 + 16), d1);
    goto B53;
    B55:;
    d0 = 0;
    l7 = d0;
    B54:;
    i0 = p1;
    d1 = l7;
    d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
    d2 = l7;
    i3 = l22;
    d1 = i3 ? d1 : d2;
    f64_store((&M0), (u64)(i0), d1);
    B53:;
    i0 = l0;
    i1 = 560u;
    i0 += i1;
    g0 = i0;
    i0 = l20;
    i1 = 7u;
    i0 &= i1;
    goto Bfunc;
    B14:;
    i0 = l9;
    l6 = i0;
    goto L9;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 __rem_pio2(f64 p0, u32 p1) {
  u32 l0 = 0, l2 = 0, l3 = 0, l4 = 0, l8 = 0;
  u64 l1 = 0;
  f64 l5 = 0, l6 = 0, l7 = 0, l9 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2;
  f64 d0, d1, d2, d3, d4;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 63ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l2 = i0;
  j0 = l1;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l3 = i0;
  i1 = 2147483647u;
  i0 &= i1;
  l4 = i0;
  i1 = 1074752122u;
  i0 = i0 > i1;
  if (i0) {goto B12;}
  i0 = l3;
  i1 = 1048575u;
  i0 &= i1;
  i1 = 598523u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = l4;
  i1 = 1073928572u;
  i0 = i0 > i1;
  if (i0) {goto B11;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p1;
  d1 = p0;
  d2 = 1.5707963267341256;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = 6.0771005065061922e-11;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l5 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = 6.0771005065061922e-11;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 4294967295u;
  goto Bfunc;
  B12:;
  i0 = l4;
  i1 = 1075594811u;
  i0 = i0 > i1;
  if (i0) {goto B13;}
  i0 = l4;
  i1 = 1075183036u;
  i0 = i0 > i1;
  if (i0) {goto B10;}
  i0 = l4;
  i1 = 1074977148u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  d1 = p0;
  d2 = 4.7123889802023768;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = 1.8231301519518578e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l5 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = 1.8231301519518578e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 4294967293u;
  goto Bfunc;
  B13:;
  i0 = l4;
  i1 = 1094263290u;
  i0 = i0 <= i1;
  if (i0) {goto B9;}
  i0 = l4;
  i1 = 2146435072u;
  i0 = i0 < i1;
  if (i0) {goto B8;}
  i0 = p1;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  p0 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  d1 = p0;
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B11:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p1;
  d1 = p0;
  d2 = 3.1415926534682512;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = 1.2154201013012384e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l5 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = 1.2154201013012384e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 4294967294u;
  goto Bfunc;
  B10:;
  i0 = l4;
  i1 = 1075388923u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  B9:;
  i0 = p1;
  d1 = p0;
  d2 = p0;
  d3 = 0.63661977236758138;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 6755399441055744;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d3 = -6755399441055744;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  l5 = d2;
  d3 = -1.5707963267341256;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l6 = d1;
  d2 = l5;
  d3 = 6.0771005065061922e-11;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  l7 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  p0 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = l4;
  i1 = 20u;
  i0 >>= (i1 & 31);
  l8 = i0;
  d1 = p0;
  j1 = i64_reinterpret_f64(d1);
  j2 = 52ull;
  j1 >>= (j2 & 63);
  i1 = (u32)(j1);
  i2 = 2047u;
  i1 &= i2;
  i0 -= i1;
  i1 = 17u;
  i0 = (u32)((s32)i0 < (s32)i1);
  l3 = i0;
  d0 = l5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B16;}
  i0 = 2147483648u;
  l4 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B15;}
  goto B14;
  B16:;
  d0 = l5;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  l4 = i0;
  i0 = l3;
  if (i0) {goto B14;}
  B15:;
  i0 = p1;
  d1 = l6;
  d2 = l5;
  d3 = 6.077100506303966e-11;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  p0 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  l9 = d1;
  d2 = l5;
  d3 = 2.0222662487959506e-21;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l6;
  d4 = l9;
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d4 = p0;
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  l7 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  p0 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = l8;
  d1 = p0;
  j1 = i64_reinterpret_f64(d1);
  j2 = 52ull;
  j1 >>= (j2 & 63);
  i1 = (u32)(j1);
  i2 = 2047u;
  i1 &= i2;
  i0 -= i1;
  i1 = 50u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B17;}
  i0 = p1;
  d1 = l9;
  d2 = l5;
  d3 = 2.0222662487111665e-21;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  p0 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  l6 = d1;
  d2 = l5;
  d3 = 8.4784276603688996e-32;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l9;
  d4 = l6;
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d4 = p0;
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  l7 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  p0 = d1;
  f64_store((&M0), (u64)(i0), d1);
  goto B14;
  B17:;
  d0 = l9;
  l6 = d0;
  B14:;
  i0 = p1;
  d1 = l6;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = l7;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B8:;
  i0 = l0;
  j1 = l1;
  j2 = 4503599627370495ull;
  j1 &= j2;
  j2 = 4710765210229538816ull;
  j1 |= j2;
  d1 = f64_reinterpret_i64(j1);
  p0 = d1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_truncZ_dd)(d1);
  l5 = d1;
  f64_store((&M0), (u64)(i0 + 16), d1);
  i0 = l0;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = 16777216;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  p0 = d1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_truncZ_dd)(d1);
  l5 = d1;
  f64_store((&M0), (u64)(i0 + 24), d1);
  i0 = l0;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = 16777216;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  p0 = d1;
  f64_store((&M0), (u64)(i0 + 32), d1);
  d0 = p0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 8u;
  i0 |= i1;
  l3 = i0;
  i0 = 2u;
  l8 = i0;
  L18: vm_checktime();
    i0 = l8;
    i1 = 4294967295u;
    i0 += i1;
    l8 = i0;
    i0 = l3;
    d0 = f64_load((&M0), (u64)(i0));
    p0 = d0;
    i0 = l3;
    i1 = 4294967288u;
    i0 += i1;
    l3 = i0;
    d0 = p0;
    d1 = 0;
    i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
    if (i0) {goto L18;}
    goto B2;
  B7:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  d1 = p0;
  d2 = 6.2831853069365025;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = 2.4308402026024769e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l5 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = 2.4308402026024769e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 4294967292u;
  goto Bfunc;
  B6:;
  i0 = p1;
  d1 = p0;
  d2 = -1.5707963267341256;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = -6.0771005065061922e-11;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l5 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = -6.0771005065061922e-11;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 1u;
  goto Bfunc;
  B5:;
  i0 = p1;
  d1 = p0;
  d2 = -3.1415926534682512;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = -1.2154201013012384e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l5 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = -1.2154201013012384e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 2u;
  goto Bfunc;
  B4:;
  i0 = p1;
  d1 = p0;
  d2 = -4.7123889802023768;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = -1.8231301519518578e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l5 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = -1.8231301519518578e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 3u;
  goto Bfunc;
  B3:;
  i0 = 2u;
  l8 = i0;
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = l0;
  i2 = l4;
  i3 = 20u;
  i2 >>= (i3 & 31);
  i3 = 4294966250u;
  i2 += i3;
  i3 = l8;
  i4 = 1u;
  i3 += i4;
  i4 = 1u;
  i0 = __rem_pio2_large(i0, i1, i2, i3, i4);
  l3 = i0;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  p0 = d0;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  d1 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  i1 = l3;
  i0 -= i1;
  goto Bfunc;
  B1:;
  i0 = p1;
  d1 = p0;
  d2 = -6.2831853069365025;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = -2.4308402026024769e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l5 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = -2.4308402026024769e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 4u;
  goto Bfunc;
  B0:;
  i0 = p1;
  d1 = p0;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static f64 __sin(f64 p0, f64 p1, u32 p2) {
  f64 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  f64 d0, d1, d2, d3, d4, d5;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l0 = d0;
  d1 = l0;
  d2 = l0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l0;
  d2 = 1.5896909952115501e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -2.5050760253406863e-08;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l0;
  d2 = l0;
  d3 = 2.7557313707070068e-06;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.00019841269829857949;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 0.0083333333333224895;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l1 = d0;
  d0 = l0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l2 = d0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  d0 = p0;
  d1 = l2;
  d2 = 0.16666666666666632;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = l0;
  d3 = p1;
  d4 = 0.5;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = l2;
  d5 = l1;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = p1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  d0 = l2;
  d1 = l0;
  d2 = l1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -0.16666666666666632;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 cos_0(f64 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l1 = i0;
  i1 = 1072243195u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 1044816029u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l0;
  d1 = p0;
  d2 = 1.3292279957849159e+36;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0), d1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = 1;
  goto Bfunc;
  B2:;
  i0 = l1;
  i1 = 2146435072u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  d0 = p0;
  d1 = 0;
  d0 = __cos(d0, d1);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B0:;
  d0 = p0;
  i1 = l0;
  i0 = __rem_pio2(d0, i1);
  i1 = 3u;
  i0 &= i1;
  l1 = i0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l1;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l1;
  if (i0) {goto B3;}
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  d0 = __cos(d0, d1);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B5:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  d0 = __cos(d0, d1);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  goto Bfunc;
  B4:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  i2 = 1u;
  d0 = __sin(d0, d1, i2);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  goto Bfunc;
  B3:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  i2 = 1u;
  d0 = __sin(d0, d1, i2);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 sin_0(f64 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  f64 d0, d1, d2, d3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l1 = i0;
  i1 = 1072243195u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 1045430271u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l0;
  d1 = p0;
  d2 = 7.5231638452626401e-37;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 1.3292279957849159e+36;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  i3 = l1;
  i4 = 1048576u;
  i3 = i3 < i4;
  d1 = i3 ? d1 : d2;
  f64_store((&M0), (u64)(i0), d1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B2:;
  i0 = l1;
  i1 = 2146435072u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  d0 = p0;
  d1 = 0;
  i2 = 0u;
  d0 = __sin(d0, d1, i2);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B0:;
  d0 = p0;
  i1 = l0;
  i0 = __rem_pio2(d0, i1);
  i1 = 3u;
  i0 &= i1;
  l1 = i0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l1;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l1;
  if (i0) {goto B3;}
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  i2 = 1u;
  d0 = __sin(d0, d1, i2);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B5:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  i2 = 1u;
  d0 = __sin(d0, d1, i2);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  goto Bfunc;
  B4:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  d0 = __cos(d0, d1);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B3:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  d0 = __cos(d0, d1);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static void complex_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  f64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1;
  f64 d0, d1;
  i0 = g0;
  i1 = 80u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l1 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B0;}
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i2 = 32u;
  i3 = 103u;
  i4 = 16u;
  i5 = 0u;
  i0 = mp_format_float(d0, i1, i2, i3, i4, i5);
  i0 = l0;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 14178u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  d0 = l1;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i2 = 32u;
  i3 = 103u;
  i4 = 16u;
  i5 = 0u;
  i0 = mp_format_float(d0, i1, i2, i3, i4, i5);
  i0 = l0;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = p0;
  i1 = 14865u;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  i0 = mp_printf(i0, i1, i2);
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 16));
  l1 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d0, d1);
  if (i0) {goto B2;}
  d0 = l1;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i1 = 15603u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i1 = 16u;
  i0 += i1;
  d0 = f64_load((&M0), (u64)(i0));
  l1 = d0;
  B1:;
  d0 = l1;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i2 = 32u;
  i3 = 103u;
  i4 = 16u;
  i5 = 0u;
  i0 = mp_format_float(d0, i1, i2, i3, i4, i5);
  i0 = l0;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = p0;
  i1 = 15969u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 complex_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  u64 l2 = 0;
  f64 l1 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 4u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = p1;
  if (i0) {goto B8;}
  i0 = 24u;
  i0 = m_malloc(i0);
  p1 = i0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  i1 = 23328u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B9:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  goto B0;
  B8:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B10;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 23328u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  B10:;
  i0 = p1;
  d0 = mp_obj_get_float(i0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  l2 = j0;
  d0 = 0;
  l3 = d0;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  goto B4;
  B7:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = 33304u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 23328u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  goto B1;
  B6:;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 16));
  l3 = d0;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l2 = j0;
  d0 = f64_reinterpret_i64(j0);
  l1 = d0;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B4;}
  goto B3;
  B5:;
  i0 = p1;
  d0 = mp_obj_get_float(i0);
  l3 = d0;
  i0 = 24u;
  i0 = m_malloc(i0);
  p1 = i0;
  d1 = l3;
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = p1;
  i1 = 23328u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 23328u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  d0 = l1;
  i1 = p1;
  d1 = f64_load((&M0), (u64)(i1 + 16));
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  j0 = i64_reinterpret_f64(d0);
  l2 = j0;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l1 = d0;
  goto B2;
  B3:;
  i0 = p1;
  d0 = mp_obj_get_float(i0);
  l1 = d0;
  B2:;
  i0 = 24u;
  i0 = m_malloc(i0);
  p1 = i0;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  i1 = 23328u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  d1 = l3;
  d2 = l1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 16), d1);
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = 1u;
  i3 = 1u;
  i4 = 0u;
  i0 = mp_parse_num_decimal(i0, i1, i2, i3, i4);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 complex_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0;
  f64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0, d1, d2, d3;
  i0 = p0;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B7;}
  i0 = p1;
  l0 = i0;
  i0 = p0;
  switch (i0) {
    case 0: goto B5;
    case 1: goto B8;
    case 2: goto B7;
    case 3: goto B7;
    case 4: goto B6;
    case 5: goto B7;
    case 6: goto B4;
    case 7: goto B3;
    default: goto B5;
  }
  B8:;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 16));
  l1 = d0;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l2 = d0;
  i0 = 24u;
  i0 = m_malloc(i0);
  p1 = i0;
  d1 = l2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = p1;
  i1 = 23328u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  d1 = l1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  f64_store((&M0), (u64)(i0 + 16), d1);
  i0 = p1;
  goto Bfunc;
  B7:;
  i0 = 0u;
  goto Bfunc;
  B6:;
  i0 = 30u;
  l0 = i0;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B0;}
  B5:;
  i0 = l0;
  goto Bfunc;
  B4:;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l1 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B2;}
  i0 = 2147483648u;
  p0 = i0;
  goto B1;
  B3:;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l1 = d0;
  d1 = l1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = p1;
  d1 = f64_load((&M0), (u64)(i1 + 16));
  l1 = d1;
  d2 = l1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = sqrt_0(d0);
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B2:;
  d0 = l1;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  p0 = i0;
  B1:;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 16));
  l1 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B10;}
  i0 = 2147483648u;
  p1 = i0;
  goto B9;
  B10:;
  d0 = l1;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  p1 = i0;
  B9:;
  i0 = p1;
  i1 = p0;
  i0 ^= i1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = 14u;
  i1 = 30u;
  i2 = p1;
  d2 = f64_load((&M0), (u64)(i2 + 16));
  d3 = 0;
  i2 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d2, d3);
  i0 = i2 ? i0 : i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 complex_binary_op(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  f64 d1, d2;
  i0 = p0;
  i1 = p1;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  i2 = p1;
  d2 = f64_load((&M0), (u64)(i2 + 16));
  i3 = p2;
  i0 = mp_obj_complex_binary_op(i0, d1, d2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_complex_binary_op(u32 p0, f64 p1, f64 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  f64 l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  f64 d0, d1, d2, d3, d4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p3;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i0 = mp_obj_get_complex_maybe(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = p0;
  i1 = 4294967294u;
  i0 += i1;
  p3 = i0;
  i1 = 32u;
  i0 = i0 > i1;
  if (i0) {goto B7;}
  i0 = p3;
  switch (i0) {
    case 0: goto B8;
    case 1: goto B7;
    case 2: goto B7;
    case 3: goto B7;
    case 4: goto B7;
    case 5: goto B7;
    case 6: goto B7;
    case 7: goto B7;
    case 8: goto B7;
    case 9: goto B7;
    case 10: goto B7;
    case 11: goto B7;
    case 12: goto B12;
    case 13: goto B10;
    case 14: goto B4;
    case 15: goto B7;
    case 16: goto B2;
    case 17: goto B9;
    case 18: goto B7;
    case 19: goto B11;
    case 20: goto B7;
    case 21: goto B7;
    case 22: goto B7;
    case 23: goto B7;
    case 24: goto B7;
    case 25: goto B12;
    case 26: goto B10;
    case 27: goto B4;
    case 28: goto B7;
    case 29: goto B2;
    case 30: goto B9;
    case 31: goto B7;
    case 32: goto B11;
    default: goto B8;
  }
  B12:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  d1 = p2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l2 = d0;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l3 = d0;
  goto B3;
  B11:;
  d0 = p1;
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p2;
  d2 = p2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = sqrt_0(d0);
  l2 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B6;}
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B1;}
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  p1 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B1;}
  d0 = 1;
  d1 = 0;
  d2 = p1;
  d3 = 0;
  i2 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d2, d3);
  d0 = i2 ? d0 : d1;
  l3 = d0;
  d0 = p2;
  l2 = d0;
  goto B3;
  B10:;
  d0 = p2;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l2 = d0;
  d0 = p1;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l3 = d0;
  goto B3;
  B9:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l3 = d0;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  l2 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B5;}
  d0 = l3;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B0;}
  d0 = p2;
  d1 = l3;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l2 = d0;
  d0 = p1;
  d1 = l3;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l3 = d0;
  goto B3;
  B8:;
  i0 = 14u;
  i1 = 14u;
  i2 = 30u;
  i3 = l0;
  d3 = f64_load((&M0), (u64)(i3));
  d4 = p2;
  i3 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d3, d4);
  i1 = i3 ? i1 : i2;
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2 + 8));
  d3 = p1;
  i2 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d2, d3);
  i0 = i2 ? i0 : i1;
  l1 = i0;
  B7:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B6:;
  d0 = l2;
  d0 = log_0(d0);
  l2 = d0;
  d0 = p2;
  d1 = p1;
  d0 = atan2_0(d0, d1);
  p2 = d0;
  d0 = l2;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  p1 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p2;
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2));
  l3 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d0 = exp_0(d0);
  l4 = d0;
  d1 = p2;
  d2 = p1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = l2;
  d3 = l3;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p2 = d1;
  d1 = cos_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l3 = d0;
  d0 = l4;
  d1 = p2;
  d1 = sin_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l2 = d0;
  goto B3;
  B5:;
  d0 = l3;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B13;}
  d0 = p2;
  d1 = l2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l3 = d0;
  d0 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = l2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l2 = d0;
  goto B3;
  B13:;
  i0 = l0;
  d1 = l3;
  d2 = l2;
  d3 = l2;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l3;
  d4 = l3;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  l4 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  d1 = l2;
  d2 = l4;
  d2 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d2);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0), d1);
  B4:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l3 = d0;
  d1 = p2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  l4 = d1;
  d2 = p1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l2 = d0;
  d0 = l3;
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l4;
  d2 = p2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l3 = d0;
  B3:;
  i0 = 24u;
  i0 = m_malloc(i0);
  p3 = i0;
  d1 = l3;
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = p3;
  i1 = 23328u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  d1 = l2;
  f64_store((&M0), (u64)(i0 + 16), d1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p3;
  goto Bfunc;
  B2:;
  i0 = 16530u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B1:;
  i0 = 36476u;
  i1 = 13514u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B0:;
  i0 = 36476u;
  i1 = 12716u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void complex_attr(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  f64 d1;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 338u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 391u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = p0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  i1 = mp_obj_new_float(d1);
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = p0;
  d1 = f64_load((&M0), (u64)(i1 + 16));
  i1 = mp_obj_new_float(d1);
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_new_complex(f64 p0, f64 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  f64 d1;
  i0 = 24u;
  i0 = m_malloc(i0);
  l0 = i0;
  d1 = p0;
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 23328u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  d1 = p1;
  f64_store((&M0), (u64)(i0 + 16), d1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_complex_get(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 23328u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0), j1);
  i0 = p2;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i64_store((&M0), (u64)(i0), j1);
  goto Bfunc;
  B0:;
  i0 = 9971u;
  i1 = 11357u;
  i2 = 173u;
  i3 = 42064u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static f64 fmod_0(f64 p0, f64 p1) {
  u32 l3 = 0, l5 = 0, l6 = 0;
  u64 l0 = 0, l1 = 0, l2 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f64 d0, d1;
  d0 = p1;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 1ull;
  j0 <<= (j1 & 63);
  l1 = j0;
  i0 = !(j0);
  if (i0) {goto B5;}
  j0 = l0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B5;}
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l2 = j0;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2047u;
  i0 &= i1;
  l3 = i0;
  i1 = 2047u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  j0 = l2;
  j1 = 1ull;
  j0 <<= (j1 & 63);
  l4 = j0;
  j1 = l1;
  i0 = j0 <= j1;
  if (i0) {goto B4;}
  j0 = l0;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2047u;
  i0 &= i1;
  l5 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B3;}
  j0 = l2;
  j1 = 4503599627370495ull;
  j0 &= j1;
  j1 = 4503599627370496ull;
  j0 |= j1;
  l1 = j0;
  i0 = l5;
  i0 = !(i0);
  if (i0) {goto B2;}
  goto B1;
  B5:;
  d0 = p0;
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p1 = d0;
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B4:;
  d0 = p0;
  d1 = 0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  j2 = l4;
  j3 = l1;
  i2 = j2 == j3;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B3:;
  i0 = 0u;
  l3 = i0;
  j0 = l2;
  j1 = 12ull;
  j0 <<= (j1 & 63);
  l1 = j0;
  j1 = 0ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B6;}
  L7: vm_checktime();
    i0 = l3;
    i1 = 4294967295u;
    i0 += i1;
    l3 = i0;
    j0 = l1;
    j1 = 1ull;
    j0 <<= (j1 & 63);
    l1 = j0;
    j1 = 18446744073709551615ull;
    i0 = (u64)((s64)j0 > (s64)j1);
    if (i0) {goto L7;}
  B6:;
  j0 = l2;
  i1 = 1u;
  i2 = l3;
  i1 -= i2;
  j1 = (u64)(i1);
  j0 <<= (j1 & 63);
  l1 = j0;
  i0 = l5;
  if (i0) {goto B1;}
  B2:;
  i0 = 0u;
  l5 = i0;
  j0 = l0;
  j1 = 12ull;
  j0 <<= (j1 & 63);
  l4 = j0;
  j1 = 0ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B8;}
  L9: vm_checktime();
    i0 = l5;
    i1 = 4294967295u;
    i0 += i1;
    l5 = i0;
    j0 = l4;
    j1 = 1ull;
    j0 <<= (j1 & 63);
    l4 = j0;
    j1 = 18446744073709551615ull;
    i0 = (u64)((s64)j0 > (s64)j1);
    if (i0) {goto L9;}
  B8:;
  j0 = l0;
  i1 = 1u;
  i2 = l5;
  i1 -= i2;
  j1 = (u64)(i1);
  j0 <<= (j1 & 63);
  l0 = j0;
  goto B0;
  B1:;
  j0 = l0;
  j1 = 4503599627370495ull;
  j0 &= j1;
  j1 = 4503599627370496ull;
  j0 |= j1;
  l0 = j0;
  B0:;
  j0 = l1;
  j1 = l0;
  j0 -= j1;
  l4 = j0;
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  l6 = i0;
  i0 = l3;
  i1 = l5;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B12;}
  L13: vm_checktime();
    i0 = l6;
    i1 = 1u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B14;}
    j0 = l4;
    l1 = j0;
    j0 = l4;
    j1 = 0ull;
    i0 = j0 == j1;
    if (i0) {goto B11;}
    B14:;
    j0 = l1;
    j1 = 1ull;
    j0 <<= (j1 & 63);
    l1 = j0;
    j1 = l0;
    j0 -= j1;
    l4 = j0;
    j1 = 18446744073709551615ull;
    i0 = (u64)((s64)j0 > (s64)j1);
    l6 = i0;
    i0 = l3;
    i1 = 4294967295u;
    i0 += i1;
    l3 = i0;
    i1 = l5;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L13;}
  B12:;
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B15;}
  j0 = l4;
  l1 = j0;
  j0 = l4;
  j1 = 0ull;
  i0 = j0 == j1;
  if (i0) {goto B10;}
  B15:;
  j0 = l1;
  j1 = 4503599627370495ull;
  i0 = j0 > j1;
  if (i0) {goto B16;}
  L17: vm_checktime();
    i0 = l3;
    i1 = 4294967295u;
    i0 += i1;
    l3 = i0;
    j0 = l1;
    j1 = 1ull;
    j0 <<= (j1 & 63);
    l1 = j0;
    j1 = 4503599627370496ull;
    i0 = j0 < j1;
    if (i0) {goto L17;}
  B16:;
  j0 = l2;
  j1 = 9223372036854775808ull;
  j0 &= j1;
  l4 = j0;
  i0 = l3;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B18;}
  j0 = l1;
  j1 = 18442240474082181120ull;
  j0 += j1;
  i1 = l3;
  j1 = (u64)(i1);
  j2 = 52ull;
  j1 <<= (j2 & 63);
  j0 |= j1;
  j1 = l4;
  j0 |= j1;
  d0 = f64_reinterpret_i64(j0);
  goto Bfunc;
  B18:;
  j0 = l1;
  i1 = 1u;
  i2 = l3;
  i1 -= i2;
  j1 = (u64)(i1);
  j0 >>= (j1 & 63);
  j1 = l4;
  j0 |= j1;
  d0 = f64_reinterpret_i64(j0);
  goto Bfunc;
  B11:;
  d0 = p0;
  d1 = 0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B10:;
  d0 = p0;
  d1 = 0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 copysign_0(f64 p0, f64 p1) {
  FUNC_PROLOGUE;
  u64 j0, j1, j2;
  f64 d0, d1;
  d0 = p1;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775808ull;
  j0 &= j1;
  d1 = p0;
  j1 = i64_reinterpret_f64(d1);
  j2 = 9223372036854775807ull;
  j1 &= j2;
  j0 |= j1;
  d0 = f64_reinterpret_i64(j0);
  FUNC_EPILOGUE;
  return d0;
}

static u32 mp_obj_cell_get(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_cell_set(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  FUNC_EPILOGUE;
}

static u32 mp_obj_new_cell(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 8u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 23388u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_setup_code_state(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0, l15 = 0, 
      l16 = 0, l17 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 64u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i1 += i2;
  l2 = i1;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l3 = i0;
  i1 = 3u;
  i0 &= i1;
  l4 = i0;
  i0 = p0;
  i0 = i32_load16_u((&M0), (u64)(i0 + 12));
  l5 = i0;
  i0 = l3;
  i1 = 24u;
  i0 <<= (i1 & 31);
  i1 = 24u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B1;}
  i0 = 0u;
  l6 = i0;
  i0 = 0u;
  l7 = i0;
  i0 = 0u;
  l8 = i0;
  goto B0;
  B1:;
  i0 = 0u;
  l8 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l7 = i0;
  i0 = 0u;
  l6 = i0;
  L2: vm_checktime();
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    i1 = l2;
    i2 = l3;
    i1 += i2;
    l9 = i1;
    i2 = 2u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l9;
    i1 = 1u;
    i0 += i1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l9 = i0;
    i1 = 1u;
    i0 &= i1;
    i1 = l3;
    i0 <<= (i1 & 31);
    i1 = l7;
    i0 |= i1;
    l7 = i0;
    i0 = l9;
    i1 = 4u;
    i0 &= i1;
    i1 = l3;
    i0 <<= (i1 & 31);
    i1 = l4;
    i0 |= i1;
    l4 = i0;
    i0 = l9;
    i1 = 255u;
    i0 &= i1;
    l10 = i0;
    i1 = 3u;
    i0 >>= (i1 & 31);
    i1 = 1u;
    i0 &= i1;
    i1 = l3;
    i0 <<= (i1 & 31);
    i1 = l6;
    i0 |= i1;
    l6 = i0;
    i0 = l10;
    i1 = 6u;
    i0 >>= (i1 & 31);
    i1 = 1u;
    i0 &= i1;
    i1 = l3;
    i0 <<= (i1 & 31);
    i1 = l8;
    i0 |= i1;
    l8 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l9;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L2;}
  B0:;
  i0 = p0;
  i1 = 0u;
  i32_store16((&M0), (u64)(i0 + 14), i1);
  i0 = p0;
  i1 = p0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = 20u;
  i0 += i1;
  l3 = i0;
  i1 = 0u;
  i2 = l5;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l3;
  i1 = l5;
  i2 = 4294967295u;
  i1 += i2;
  l11 = i1;
  i2 = l4;
  i1 -= i2;
  i2 = l6;
  i1 -= i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l2 = i0;
  i0 = l8;
  i1 = 4u;
  i0 &= i1;
  l3 = i0;
  i0 = l4;
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B10;}
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l2;
  i1 = p1;
  i2 = l4;
  i1 -= i2;
  i2 = p3;
  i3 = l4;
  i4 = 2u;
  i3 <<= (i4 & 31);
  i2 += i3;
  i1 = mp_obj_new_tuple(i1, i2);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 4294967292u;
  i0 += i1;
  l2 = i0;
  i0 = l4;
  l10 = i0;
  if (i0) {goto B9;}
  goto B8;
  B10:;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l2;
  i1 = 33864u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 4294967292u;
  i0 += i1;
  l2 = i0;
  B11:;
  i0 = l8;
  i1 = 8u;
  i0 &= i1;
  i1 = p2;
  i0 |= i1;
  if (i0) {goto B12;}
  i0 = l4;
  i1 = l7;
  i0 -= i1;
  l3 = i0;
  i1 = p1;
  i0 = i0 > i1;
  if (i0) {goto B5;}
  i0 = l4;
  i1 = p1;
  i0 = i0 <= i1;
  if (i0) {goto B12;}
  i0 = p0;
  i1 = l5;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i2 = 16u;
  i1 += i2;
  i2 = p1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 -= i2;
  i0 += i1;
  l3 = i0;
  i0 = l1;
  i1 = l7;
  i2 = p1;
  i1 += i2;
  i2 = l4;
  i1 -= i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 16u;
  i0 += i1;
  l9 = i0;
  i0 = l4;
  l10 = i0;
  L13: vm_checktime();
    i0 = l3;
    i1 = l9;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 4294967292u;
    i0 += i1;
    l3 = i0;
    i0 = l9;
    i1 = 4u;
    i0 += i1;
    l9 = i0;
    i0 = p1;
    i1 = l10;
    i2 = 4294967295u;
    i1 += i2;
    l10 = i1;
    i0 = i0 != i1;
    if (i0) {goto L13;}
  B12:;
  i0 = p1;
  l10 = i0;
  i0 = !(i0);
  if (i0) {goto B8;}
  B9:;
  i0 = p0;
  i1 = l5;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 16u;
  i0 += i1;
  l3 = i0;
  i0 = p3;
  l9 = i0;
  L14: vm_checktime();
    i0 = l3;
    i1 = l9;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 4294967292u;
    i0 += i1;
    l3 = i0;
    i0 = l9;
    i1 = 4u;
    i0 += i1;
    l9 = i0;
    i0 = l10;
    i1 = 4294967295u;
    i0 += i1;
    l10 = i0;
    if (i0) {goto L14;}
  B8:;
  i0 = l8;
  i1 = 8u;
  i0 &= i1;
  l12 = i0;
  i1 = p2;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B20;}
  i0 = 0u;
  l13 = i0;
  i0 = l8;
  i1 = 2u;
  i0 &= i1;
  l14 = i0;
  i0 = !(i0);
  if (i0) {goto B21;}
  i0 = l2;
  i1 = p2;
  i1 = mp_obj_new_dict(i1);
  l13 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B21:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l15 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B18;}
  i0 = p3;
  i1 = p1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l16 = i0;
  i0 = l4;
  i1 = l6;
  i0 += i1;
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B19;}
  i0 = p0;
  i1 = l5;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 16u;
  i0 += i1;
  l17 = i0;
  i0 = 0u;
  p1 = i0;
  L22: vm_checktime();
    i0 = p1;
    i1 = 1u;
    i0 <<= (i1 & 31);
    p3 = i0;
    i0 = l16;
    i1 = p1;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l8 = i0;
    i0 = l15;
    l3 = i0;
    i0 = l17;
    l9 = i0;
    i0 = 0u;
    l10 = i0;
    L24: vm_checktime();
      i0 = l8;
      i1 = l3;
      i1 = i32_load((&M0), (u64)(i1));
      i0 = i0 == i1;
      if (i0) {goto B23;}
      i0 = l3;
      i1 = 4u;
      i0 += i1;
      l3 = i0;
      i0 = l9;
      i1 = 4294967292u;
      i0 += i1;
      l9 = i0;
      i0 = l10;
      i1 = 1u;
      i0 += i1;
      l10 = i0;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto L24;}
    i0 = l14;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = l13;
    i1 = l8;
    i2 = l16;
    i3 = p3;
    i4 = 2u;
    i3 <<= (i4 & 31);
    i4 = 4u;
    i3 |= i4;
    i2 += i3;
    i2 = i32_load((&M0), (u64)(i2));
    i0 = mp_obj_dict_store(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L22;}
    goto B18;
    B23:;
    i0 = l9;
    i0 = i32_load((&M0), (u64)(i0));
    if (i0) {goto B15;}
    i0 = l9;
    i1 = l16;
    i2 = p3;
    i3 = 2u;
    i2 <<= (i3 & 31);
    i3 = 4u;
    i2 |= i3;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L22;}
    goto B18;
  B20:;
  i0 = l6;
  if (i0) {goto B6;}
  i0 = l8;
  i1 = 2u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B17;}
  i0 = l2;
  i1 = 0u;
  i1 = mp_obj_new_dict(i1);
  i32_store((&M0), (u64)(i0), i1);
  goto B17;
  B19:;
  i0 = l14;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p3;
  i1 = p1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  L25: vm_checktime();
    i0 = l13;
    i1 = l3;
    i2 = 4294967292u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l3;
    i2 = i32_load((&M0), (u64)(i2));
    i0 = mp_obj_dict_store(i0, i1, i2);
    i0 = l3;
    i1 = 8u;
    i0 += i1;
    l3 = i0;
    i0 = p2;
    i1 = 4294967295u;
    i0 += i1;
    p2 = i0;
    if (i0) {goto L25;}
  B18:;
  i0 = p0;
  i1 = l5;
  i2 = l4;
  i1 -= i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 20u;
  i0 += i1;
  l9 = i0;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B27;}
  i0 = l1;
  i1 = l7;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 12u;
  i0 += i1;
  l10 = i0;
  i0 = p0;
  i1 = l7;
  i2 = l5;
  i1 += i2;
  i2 = l4;
  i1 -= i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 20u;
  i0 += i1;
  l3 = i0;
  i0 = l7;
  l8 = i0;
  L28: vm_checktime();
    i0 = l9;
    i0 = i32_load((&M0), (u64)(i0));
    if (i0) {goto B29;}
    i0 = l9;
    i1 = l10;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    B29:;
    i0 = l10;
    i1 = 4294967292u;
    i0 += i1;
    l10 = i0;
    i0 = l9;
    i1 = 4u;
    i0 += i1;
    l9 = i0;
    i0 = l8;
    i1 = 4294967295u;
    i0 += i1;
    l8 = i0;
    if (i0) {goto L28;}
    goto B26;
  B27:;
  i0 = l9;
  l3 = i0;
  B26:;
  i0 = p0;
  i1 = l5;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 20u;
  i0 += i1;
  l10 = i0;
  L31: vm_checktime();
    i0 = l3;
    i1 = l10;
    i0 = i0 >= i1;
    if (i0) {goto B30;}
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    l9 = i0;
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l8 = i0;
    l3 = i0;
    i0 = l9;
    if (i0) {goto L31;}
  i0 = l0;
  i1 = l10;
  i2 = l8;
  i1 -= i2;
  i2 = 2u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 16569u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B30:;
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B17;}
  i0 = l12;
  if (i0) {goto B32;}
  i0 = p0;
  i1 = l5;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i2 = 16u;
  i1 += i2;
  i2 = l4;
  i3 = 2u;
  i2 <<= (i3 & 31);
  l3 = i2;
  i1 -= i2;
  i0 += i1;
  l9 = i0;
  i0 = l15;
  i1 = l3;
  i0 += i1;
  l3 = i0;
  i0 = 0u;
  l10 = i0;
  L33: vm_checktime();
    i0 = l9;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto B16;}
    i0 = l9;
    i1 = 4294967292u;
    i0 += i1;
    l9 = i0;
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l3 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    l10 = i0;
    i1 = l6;
    i0 = i0 < i1;
    if (i0) {goto L33;}
    goto B17;
  B32:;
  i0 = l1;
  i1 = l7;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 16u;
  i0 += i1;
  l2 = i0;
  i0 = p0;
  i1 = l5;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i2 = 16u;
  i1 += i2;
  i2 = l4;
  i3 = 2u;
  i2 <<= (i3 & 31);
  l3 = i2;
  i1 -= i2;
  i0 += i1;
  l9 = i0;
  i0 = l15;
  i1 = l3;
  i0 += i1;
  l3 = i0;
  i0 = 0u;
  l10 = i0;
  L34: vm_checktime();
    i0 = l9;
    i0 = i32_load((&M0), (u64)(i0));
    if (i0) {goto B35;}
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 4u;
    i0 += i1;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 0u;
    i0 = mp_map_lookup(i0, i1, i2);
    l8 = i0;
    i0 = !(i0);
    if (i0) {goto B16;}
    i0 = l9;
    i1 = l8;
    i1 = i32_load((&M0), (u64)(i1 + 4));
    i32_store((&M0), (u64)(i0), i1);
    B35:;
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l3 = i0;
    i0 = l9;
    i1 = 4294967292u;
    i0 += i1;
    l9 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    l10 = i0;
    i1 = l6;
    i0 = i0 < i1;
    if (i0) {goto L34;}
  B17:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l6 = i0;
  i0 = 0u;
  l10 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = 0u;
  l9 = i0;
  i0 = 0u;
  l3 = i0;
  L36: vm_checktime();
    i0 = l6;
    i1 = l3;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l8 = i0;
    i1 = 1u;
    i0 &= i1;
    i1 = l3;
    i0 <<= (i1 & 31);
    i1 = l9;
    i0 |= i1;
    l9 = i0;
    i0 = l8;
    i1 = 1u;
    i0 >>= (i1 & 31);
    i1 = 63u;
    i0 &= i1;
    i1 = l10;
    i0 <<= (i1 & 31);
    i1 = l2;
    i0 |= i1;
    l2 = i0;
    i0 = l10;
    i1 = 6u;
    i0 += i1;
    l10 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = l8;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L36;}
  i0 = l6;
  i1 = l2;
  i2 = p1;
  i1 += i2;
  i0 += i1;
  l3 = i0;
  i0 = l9;
  i0 = !(i0);
  if (i0) {goto B37;}
  i0 = l9;
  i1 = l2;
  i0 += i1;
  l8 = i0;
  L38: vm_checktime();
    i0 = p0;
    i1 = l11;
    i2 = l3;
    i2 = i32_load8_u((&M0), (u64)(i2));
    i1 -= i2;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = 20u;
    i0 += i1;
    l10 = i0;
    i1 = l10;
    i1 = i32_load((&M0), (u64)(i1));
    i1 = mp_obj_new_cell(i1);
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l9;
    i1 = 4294967295u;
    i0 += i1;
    l9 = i0;
    if (i0) {goto L38;}
  i0 = l6;
  i1 = l8;
  i0 += i1;
  i1 = p1;
  i0 += i1;
  l3 = i0;
  B37:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B16:;
  i0 = l0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 >>= (i2 & 31);
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 37376u;
  i1 = 12739u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B15:;
  i0 = l0;
  i1 = l8;
  i2 = 3u;
  i1 >>= (i2 & 31);
  i32_store((&M0), (u64)(i0 + 48), i1);
  i0 = 37376u;
  i1 = 10013u;
  i2 = l0;
  i3 = 48u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B7:;
  i0 = l4;
  i1 = p1;
  fun_pos_args_mismatch(i0, i1);
  UNREACHABLE;
  B6:;
  i0 = 13537u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B5:;
  i0 = l3;
  i1 = p1;
  fun_pos_args_mismatch(i0, i1);
  UNREACHABLE;
  B4:;
  i0 = l16;
  i0 = i32_load((&M0), (u64)(i0));
  l8 = i0;
  B3:;
  i0 = l0;
  i1 = l8;
  i2 = 3u;
  i1 >>= (i2 & 31);
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = 37376u;
  i1 = 11370u;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void fun_pos_args_mismatch(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 14182u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static u32 mp_opcode_format(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 932u;
  i1 = p0;
  i1 = i32_load8_u((&M0), (u64)(i1));
  l0 = i1;
  i2 = 3u;
  i1 >>= (i2 & 31);
  i2 = 30u;
  i1 &= i2;
  i0 >>= (i1 & 31);
  i1 = 3u;
  i0 &= i1;
  l1 = i0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = p0;
  i2 = 3u;
  i1 += i2;
  i2 = p0;
  i1 -= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 158u;
  i0 &= i1;
  i0 = !(i0);
  l2 = i0;
  i0 = l1;
  i1 = 3u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  l0 = i0;
  i0 = l1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B1;}
  L4: vm_checktime();
    i0 = l0;
    i0 = i32_load8_s((&M0), (u64)(i0));
    p2 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    l0 = i0;
    i0 = p2;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L4;}
  i0 = p1;
  i1 = l3;
  i2 = l2;
  i1 += i2;
  i2 = p0;
  i1 -= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  goto Bfunc;
  B3:;
  i0 = p1;
  i1 = p0;
  i2 = 3u;
  i1 += i2;
  i2 = l2;
  i1 += i2;
  i2 = p0;
  i1 -= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = l0;
  i2 = l2;
  i1 += i2;
  i2 = p0;
  i1 -= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = l0;
  i2 = l2;
  i1 += i2;
  i2 = p0;
  i1 -= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 nlr_push_tail(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5188));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 168), i1);
  i0 = p0;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5176));
  i32_store((&M0), (u64)(i0 + 164), i1);
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5188), i1);
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static void nlr_pop(void) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5188));
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 5188), i1);
  FUNC_EPILOGUE;
}

static u32 gen_wrap_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = i32_load8_s((&M0), (u64)(i0));
  l1 = i0;
  i1 = 255u;
  i0 &= i1;
  l2 = i0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = 1u;
  i0 &= i1;
  l3 = i0;
  i0 = l2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = 15u;
  i0 &= i1;
  l4 = i0;
  i0 = l1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  l5 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = 0u;
  l1 = i0;
  L1: vm_checktime();
    i0 = l5;
    i1 = l1;
    i0 += i1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l0 = i0;
    i1 = 2u;
    i0 &= i1;
    i1 = l1;
    i0 <<= (i1 & 31);
    i1 = l3;
    i0 |= i1;
    l3 = i0;
    i0 = l0;
    i1 = 48u;
    i0 &= i1;
    i1 = l2;
    i0 <<= (i1 & 31);
    i1 = l4;
    i0 |= i1;
    l4 = i0;
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L1;}
  B0:;
  i0 = l3;
  i1 = 12u;
  i0 *= i1;
  i1 = l4;
  i2 = 1u;
  i1 += i2;
  l2 = i1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 28u;
  i0 += i1;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = 6u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = 23524u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = l2;
  i32_store16((&M0), (u64)(i0 + 20), i1);
  i0 = l1;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  mp_setup_code_state(i0, i1, i2, i3);
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_gen_resume(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  p2 = i0;
  B5:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l0 = i0;
  i1 = p0;
  i2 = 24u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  goto B2;
  B4:;
  i0 = p3;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  goto Bfunc;
  B3:;
  i0 = p1;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B2:;
  i0 = p0;
  i1 = 24u;
  i0 += i1;
  p1 = i0;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5184));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0 + 5184), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = p2;
  i0 = mp_execute_bytecode(i0, i1);
  p2 = i0;
  i0 = l0;
  i1 = 6u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 5184), i1);
  i0 = p2;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = p2;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  i1 = p0;
  i2 = 28u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  p0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i1 = 35996u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = p3;
  i1 = 37136u;
  i2 = 16619u;
  i1 = mp_obj_new_exception_msg(i1, i2);
  i32_store((&M0), (u64)(i0), i1);
  B8:;
  i0 = 2u;
  goto Bfunc;
  B7:;
  i0 = p3;
  i1 = p0;
  i2 = 16u;
  i1 += i2;
  p0 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 6u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 1u;
  goto Bfunc;
  B6:;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  i1 = p0;
  i2 = 16u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  goto Bfunc;
  B1:;
  i0 = 10060u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = 11403u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void gen_instance_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_fun_get_name(i0);
  l1 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 12787u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 gen_instance_iternext(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 6u;
  i2 = 0u;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i0 = mp_obj_gen_resume(i0, i1, i2, i3);
  p0 = i0;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B3:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B2:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  nlr_jump(i0);
  UNREACHABLE;
  B0:;
  i0 = 35996u;
  i1 = p0;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 gen_instance_close(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 6u;
  i2 = 23448u;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i0 = mp_obj_gen_resume(i0, i1, i2, i3);
  p0 = i0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = 37136u;
  i1 = 14869u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B2:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = mp_obj_get_type(i0);
  i1 = 36236u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = p0;
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 gen_instance_send(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = p1;
  i2 = 0u;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i0 = mp_obj_gen_resume(i0, i1, i2, i3);
  p0 = i0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B2:;
  i0 = p0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  nlr_jump(i0);
  UNREACHABLE;
  B3:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = 35996u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B0:;
  i0 = 35996u;
  i1 = l0;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 gen_instance_throw(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  p0 = i1;
  i2 = p0;
  i3 = 6u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 6u;
  i2 = l1;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i0 = mp_obj_gen_resume(i0, i1, i2, i3);
  p1 = i0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B3:;
  i0 = p1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  nlr_jump(i0);
  UNREACHABLE;
  B4:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  B2:;
  i0 = 35996u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B1:;
  i0 = 35996u;
  i1 = l0;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 gen_instance_pend_throw(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 10060u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 closure_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = p1;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i0 += i1;
  l3 = i0;
  i1 = 5u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p0;
  i2 = 12u;
  i1 += i2;
  i2 = l2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  l2 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i1 += i2;
  i2 = p2;
  i3 = l0;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l3;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i0 = m_malloc(i0);
  l2 = i0;
  i1 = p0;
  i2 = 12u;
  i1 += i2;
  i2 = p0;
  i3 = 8u;
  i2 += i3;
  l3 = i2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i1 += i2;
  i2 = p2;
  i3 = l2;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  p0 = i0;
  i0 = l2;
  m_free(i0);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_closure(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  l0 = i0;
  i1 = 12u;
  i0 += i1;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = 23668u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = 12u;
  i0 += i1;
  i1 = p2;
  i2 = l0;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_emit_glue_new_raw_code(void) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 12u;
  i0 = m_malloc0(i0);
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967288u;
  i1 &= i2;
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_emit_glue_assign_bytecode(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p3;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 1016u;
  i1 &= i2;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 4294966272u;
  i2 &= i3;
  i1 |= i2;
  i2 = 2u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static u32 mp_make_function_from_raw_code(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33872u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  B4:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 31652u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  B5:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = p2;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 8));
  i0 = mp_obj_new_fun_bc(i0, i1, i2, i3);
  p1 = i0;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 8u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p1;
  i1 = 23464u;
  i32_store((&M0), (u64)(i0), i1);
  B6:;
  i0 = p1;
  goto Bfunc;
  B3:;
  i0 = 16650u;
  i1 = 11457u;
  i2 = 153u;
  i3 = 42083u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B2:;
  i0 = 12817u;
  i1 = 11457u;
  i2 = 156u;
  i3 = 42083u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B1:;
  i0 = 10088u;
  i1 = 11457u;
  i2 = 150u;
  i3 = 42083u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = 13576u;
  i1 = 11457u;
  i2 = 178u;
  i3 = 42083u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_make_closure_from_raw_code(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p1;
  i1 = 256u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 0u;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 8));
  i0 = mp_obj_new_fun_bc(i0, i1, i2, i3);
  l0 = i0;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 8u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 23464u;
  i32_store((&M0), (u64)(i0), i1);
  goto B2;
  B3:;
  i0 = p0;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i0 = mp_make_function_from_raw_code(i0, i1, i2);
  l0 = i0;
  B2:;
  i0 = l0;
  i1 = p1;
  i2 = 255u;
  i1 &= i2;
  i2 = p2;
  i3 = p1;
  i4 = 5u;
  i3 >>= (i4 & 31);
  i4 = 8u;
  i3 &= i4;
  i2 += i3;
  i0 = mp_obj_new_closure(i0, i1, i2);
  goto Bfunc;
  B1:;
  i0 = 10088u;
  i1 = 11457u;
  i2 = 150u;
  i3 = 42083u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = 13576u;
  i1 = 11457u;
  i2 = 178u;
  i3 = 42083u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 polymorph_it_iternext(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i1, i0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 op_getitem(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i2 = 4u;
  i3 = p0;
  i3 = mp_obj_get_type(i3);
  i3 = i32_load((&M0), (u64)(i3 + 32));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 1, i3, i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 op_setitem(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = p0;
  i3 = mp_obj_get_type(i3);
  i3 = i32_load((&M0), (u64)(i3 + 32));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 1, i3, i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 op_delitem(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i2 = 0u;
  i3 = p0;
  i3 = mp_obj_get_type(i3);
  i3 = i32_load((&M0), (u64)(i3 + 32));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 1, i3, i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 op_contains(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 36u;
  i1 = p0;
  i2 = p1;
  i3 = p0;
  i3 = mp_obj_get_type(i3);
  i3 = i32_load((&M0), (u64)(i3 + 24));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 1, i3, i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static void set_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = !(i0);
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 23880u;
  i0 = i0 == i1;
  l0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 10099u;
  i0 = mp_print_str(i0, i1);
  B3:;
  i0 = p0;
  i1 = 11468u;
  i0 = mp_print_str(i0, i1);
  goto Bfunc;
  B0:;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 16718u;
  i0 = mp_print_str(i0, i1);
  B4:;
  i0 = p0;
  i1 = 12890u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = 0u;
  l3 = i0;
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  i0 = 0u;
  p1 = i0;
  i0 = 1u;
  l5 = i0;
  L6: vm_checktime();
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l3;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l6 = i0;
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 != i1;
    if (i0) {goto B7;}
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l3 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L6;}
    goto B5;
    B7:;
    i0 = l5;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B8;}
    i0 = p0;
    i1 = 13605u;
    i0 = mp_print_str(i0, i1);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l3;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l6 = i0;
    B8:;
    i0 = p0;
    i1 = l6;
    i2 = 1u;
    mp_obj_print_helper(i0, i1, i2);
    i0 = 0u;
    l5 = i0;
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l3 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = i0 < i1;
    if (i0) {goto L6;}
  B5:;
  i0 = p0;
  i1 = 14239u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p0;
  i1 = 14901u;
  i0 = mp_print_str(i0, i1);
  B9:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 set_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 23820u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  p2 = i0;
  i1 = 0u;
  mp_set_init(i0, i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  p3 = i0;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  L1: vm_checktime();
    i0 = p2;
    i1 = p1;
    i2 = 1u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = p3;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B3:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = 23880u;
  l0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 23880u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B2:;
  i0 = 0u;
  goto Bfunc;
  B1:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = 23880u;
  l0 = i0;
  i0 = 0u;
  p0 = i0;
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  l2 = i0;
  L5: vm_checktime();
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p0;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 != i1;
    if (i0) {goto B6;}
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    if (i0) {goto L5;}
    goto B4;
    B6:;
    i0 = 6u;
    i1 = p1;
    i0 = mp_unary_op(i0, i1);
    i1 = 1u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    i1 = l0;
    i0 += i1;
    l0 = i0;
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    if (i0) {goto L5;}
  B4:;
  i0 = l0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = 0u;
  l0 = i0;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 36u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 23820u;
  i0 = i0 == i1;
  l0 = i0;
  i0 = p0;
  i1 = 36u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  l1 = i0;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 23820u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 23880u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  B4:;
  i0 = p0;
  i1 = 28u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = p0;
  switch (i0) {
    case 0: goto B25;
    case 1: goto B24;
    case 2: goto B23;
    case 3: goto B22;
    case 4: goto B21;
    case 5: goto B3;
    case 6: goto B3;
    case 7: goto B3;
    case 8: goto B3;
    case 9: goto B20;
    case 10: goto B19;
    case 11: goto B18;
    case 12: goto B3;
    case 13: goto B3;
    case 14: goto B3;
    case 15: goto B17;
    case 16: goto B3;
    case 17: goto B3;
    case 18: goto B3;
    case 19: goto B3;
    case 20: goto B3;
    case 21: goto B3;
    case 22: goto B16;
    case 23: goto B15;
    case 24: goto B14;
    case 25: goto B3;
    case 26: goto B3;
    case 27: goto B3;
    case 28: goto B13;
    default: goto B25;
  }
  B25:;
  i0 = p1;
  i1 = p2;
  i2 = 1u;
  i0 = set_issubset_internal(i0, i1, i2);
  goto Bfunc;
  B24:;
  i0 = p2;
  i1 = p1;
  i2 = 1u;
  i0 = set_issubset_internal(i0, i1, i2);
  goto Bfunc;
  B23:;
  i0 = 14u;
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p1;
  i1 = p2;
  i2 = 0u;
  i0 = set_issubset_internal(i0, i1, i2);
  goto Bfunc;
  B22:;
  i0 = p1;
  i1 = p2;
  i2 = 0u;
  i0 = set_issubset_internal(i0, i1, i2);
  goto Bfunc;
  B21:;
  i0 = p2;
  i1 = p1;
  i2 = 0u;
  i0 = set_issubset_internal(i0, i1, i2);
  goto Bfunc;
  B20:;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = p2;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  p0 = i0;
  i0 = mp_iternext(i0);
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  L26: vm_checktime();
    i0 = l0;
    i1 = p2;
    i2 = 1u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = p0;
    i0 = mp_iternext(i0);
    p2 = i0;
    if (i0) {goto L26;}
  i0 = p1;
  goto Bfunc;
  B19:;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = p2;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  p0 = i0;
  i0 = mp_iternext(i0);
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  L27: vm_checktime();
    i0 = l0;
    i1 = p2;
    i2 = 3u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = p0;
    i0 = mp_iternext(i0);
    p2 = i0;
    if (i0) {goto L27;}
  i0 = p1;
  goto Bfunc;
  B18:;
  i0 = p1;
  i1 = p1;
  i2 = p2;
  i3 = l0;
  i1 = set_intersect_int(i1, i2, i3);
  i2 = l0;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B17:;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = p1;
  l1 = i0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i0 = l1;
  i1 = p2;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  goto B5;
  B16:;
  i0 = p1;
  i1 = p2;
  i0 = set_union(i0, i1);
  goto Bfunc;
  B15:;
  i0 = p1;
  i1 = p2;
  i0 = set_symmetric_difference(i0, i1);
  goto Bfunc;
  B14:;
  i0 = p1;
  i1 = p2;
  i2 = 0u;
  i0 = set_intersect_int(i0, i1, i2);
  goto Bfunc;
  B13:;
  i0 = 16u;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  mp_set_init(i0, i1);
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p2;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  i0 = p2;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  p2 = i0;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  L28: vm_checktime();
    i0 = p0;
    i1 = p1;
    i2 = 2u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = p2;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L28;}
    goto B3;
  B12:;
  i0 = p1;
  i1 = p2;
  i0 = set_union(i0, i1);
  goto Bfunc;
  B11:;
  i0 = p1;
  i1 = p2;
  i0 = set_symmetric_difference(i0, i1);
  goto Bfunc;
  B10:;
  i0 = 16u;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  mp_set_init(i0, i1);
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i0 = l1;
  i1 = p2;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  B9:;
  i0 = p2;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  p2 = i0;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  L29: vm_checktime();
    i0 = p0;
    i1 = p1;
    i2 = 2u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = p2;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L29;}
    goto B3;
  B8:;
  i0 = p0;
  mp_set_clear(i0);
  i0 = l1;
  goto Bfunc;
  B7:;
  i0 = p1;
  goto Bfunc;
  B6:;
  i0 = p1;
  goto Bfunc;
  B5:;
  i0 = p0;
  mp_set_clear(i0);
  i0 = l1;
  goto Bfunc;
  B3:;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i3 = 4u;
  i2 += i3;
  i3 = p2;
  i4 = 0u;
  i2 = mp_set_lookup(i2, i3, i4);
  i0 = i2 ? i0 : i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_issubset_internal(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 23820u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l2;
  i1 = 23880u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = 1u;
  l1 = i0;
  i0 = 23820u;
  i1 = 1u;
  i2 = 0u;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i0 = set_make_new(i0, i1, i2, i3);
  p0 = i0;
  B0:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = 0u;
  l3 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 23820u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = l2;
  i1 = 23880u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B3:;
  i0 = 1u;
  l3 = i0;
  i0 = 23820u;
  i1 = 1u;
  i2 = 0u;
  i3 = l0;
  i4 = 8u;
  i3 += i4;
  i0 = set_make_new(i0, i1, i2, i3);
  p1 = i0;
  B2:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = 14u;
  l4 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 = i0 == i1;
  if (i0) {goto B4;}
  B5:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  l5 = i0;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l6 = i0;
  i0 = 0u;
  l2 = i0;
  L6: vm_checktime();
    i0 = 30u;
    l4 = i0;
    i0 = l2;
    i1 = p0;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l7 = i1;
    i0 = i0 >= i1;
    if (i0) {goto B4;}
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p2 = i0;
    L8: vm_checktime();
      i0 = p2;
      i0 = i32_load((&M0), (u64)(i0));
      l8 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B7;}
      i0 = p2;
      i1 = 4u;
      i0 += i1;
      p2 = i0;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l2 = i0;
      i1 = l7;
      i0 = i0 < i1;
      if (i0) {goto L8;}
      goto B4;
    B7:;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = l5;
    i1 = l8;
    i2 = 0u;
    i0 = mp_set_lookup(i0, i1, i2);
    if (i0) {goto L6;}
  i0 = 14u;
  l4 = i0;
  B4:;
  i0 = l1;
  if (i0) {goto B11;}
  i0 = l3;
  if (i0) {goto B10;}
  goto B9;
  B11:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  mp_set_clear(i0);
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B9;}
  B10:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  mp_set_clear(i0);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B9:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_intersect_int(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = p0;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 23820u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i1 = 0u;
  mp_set_init(i0, i1);
  i0 = p1;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  l2 = i0;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  L2: vm_checktime();
    i0 = l3;
    i1 = p1;
    i2 = 0u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = l1;
    i1 = p1;
    i2 = 1u;
    i0 = mp_set_lookup(i0, i1, i2);
    B3:;
    i0 = l2;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L2;}
  B1:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  m_free(i0);
  i0 = p0;
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = p0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0 + 12), i1);
  B4:;
  i0 = 6u;
  i1 = l0;
  i2 = p2;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B0:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = 6u;
  goto Bfunc;
  B5:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  mp_set_init(i0, i1);
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_union(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  mp_set_init(i0, i1);
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  p1 = i0;
  i0 = mp_iternext(i0);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  L1: vm_checktime();
    i0 = l1;
    i1 = p0;
    i2 = 1u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = p1;
    i0 = mp_iternext(i0);
    p0 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_symmetric_difference(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  mp_set_init(i0, i1);
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  p1 = i0;
  i0 = mp_iternext(i0);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  L1: vm_checktime();
    i0 = l1;
    i1 = p0;
    i2 = 3u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = p1;
    i0 = mp_iternext(i0);
    p0 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_getiter(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 26u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 23728u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_it_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l1 = i1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l2 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 12u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l1 = i0;
  L2: vm_checktime();
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L2;}
  i0 = 0u;
  goto Bfunc;
  B1:;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = l0;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_set(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 23820u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  mp_set_init(i0, i1);
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  L1: vm_checktime();
    i0 = l1;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_set_store(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 1u;
  i0 = mp_set_lookup(i0, i1, i2);
  FUNC_EPILOGUE;
}

static u32 set_intersect(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i2 = 0u;
  i0 = set_intersect_int(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_diff(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i2 = 0u;
  i0 = set_diff_int(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_diff_int(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = p2;
  if (i0) {goto B0;}
  i0 = l0;
  i0 = set_copy(i0);
  l0 = i0;
  B0:;
  i0 = p0;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = 1u;
  l2 = i0;
  L2: vm_checktime();
    i0 = l0;
    i1 = p1;
    i2 = l2;
    i3 = 2u;
    i2 <<= (i3 & 31);
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    p2 = i1;
    i0 = i0 == i1;
    if (i0) {goto B3;}
    i0 = p2;
    i1 = 0u;
    i0 = mp_getiter(i0, i1);
    l3 = i0;
    i0 = mp_iternext(i0);
    p2 = i0;
    i0 = !(i0);
    if (i0) {goto B4;}
    L5: vm_checktime();
      i0 = l1;
      i1 = p2;
      i2 = 2u;
      i0 = mp_set_lookup(i0, i1, i2);
      i0 = l3;
      i0 = mp_iternext(i0);
      p2 = i0;
      if (i0) {goto L5;}
    B4:;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = p0;
    i0 = i0 != i1;
    if (i0) {goto L2;}
    goto B1;
    B3:;
    i0 = l1;
    mp_set_clear(i0);
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = p0;
    i0 = i0 != i1;
    if (i0) {goto L2;}
  B1:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_update(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = 1u;
  l0 = i0;
  L1: vm_checktime();
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i0 = p1;
    i1 = l0;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 0u;
    i0 = mp_getiter(i0, i1);
    l2 = i0;
    i0 = mp_iternext(i0);
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    L3: vm_checktime();
      i0 = l1;
      i1 = l3;
      i2 = 1u;
      i0 = mp_set_lookup(i0, i1, i2);
      i0 = l2;
      i0 = mp_iternext(i0);
      l3 = i0;
      if (i0) {goto L3;}
    B2:;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i1 = p0;
    i0 = i0 != i1;
    if (i0) {goto L1;}
  B0:;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_symmetric_difference_update(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  l0 = i0;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  L1: vm_checktime();
    i0 = p0;
    i1 = p1;
    i2 = 3u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = l0;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_copy(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  mp_set_init(i0, i1);
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_issubset(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i2 = 0u;
  i0 = set_issubset_internal(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_issuperset(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p0;
  i2 = 0u;
  i0 = set_issubset_internal(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_add(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 1u;
  i0 = mp_set_lookup(i0, i1, i2);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_clear(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  mp_set_clear(i0);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_discard(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 2u;
  i0 = mp_set_lookup(i0, i1, i2);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_diff_update(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = 1u;
  l2 = i0;
  L1: vm_checktime();
    i0 = l0;
    i1 = p1;
    i2 = l2;
    i3 = 2u;
    i2 <<= (i3 & 31);
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l3 = i1;
    i0 = i0 == i1;
    if (i0) {goto B2;}
    i0 = l3;
    i1 = 0u;
    i0 = mp_getiter(i0, i1);
    l4 = i0;
    i0 = mp_iternext(i0);
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B3;}
    L4: vm_checktime();
      i0 = l1;
      i1 = l3;
      i2 = 2u;
      i0 = mp_set_lookup(i0, i1, i2);
      i0 = l4;
      i0 = mp_iternext(i0);
      l3 = i0;
      if (i0) {goto L4;}
    B3:;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = p0;
    i0 = i0 != i1;
    if (i0) {goto L1;}
    goto B0;
    B2:;
    i0 = l1;
    mp_set_clear(i0);
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = p0;
    i0 = i0 != i1;
    if (i0) {goto L1;}
  B0:;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_intersect_update(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i0 = set_intersect_int(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_isdisjoint(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = p1;
  i1 = l0;
  i0 = mp_getiter(i0, i1);
  p0 = i0;
  L1: vm_checktime();
    i0 = p0;
    i0 = mp_iternext(i0);
    p1 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l1;
    i1 = p1;
    i2 = 0u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto L1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_pop(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = mp_set_remove_first(i0);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 36896u;
  i1 = 19989u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_remove(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 2u;
  i0 = mp_set_lookup(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 36896u;
  i1 = p1;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void slice_print(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 11474u;
  i0 = mp_print_str(i0, i1);
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 1u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = p0;
  i1 = 16729u;
  i0 = mp_print_str(i0, i1);
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = 1u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = p0;
  i1 = 16729u;
  i0 = mp_print_str(i0, i1);
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = 1u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = p0;
  i1 = 12892u;
  i0 = mp_print_str(i0, i1);
  FUNC_EPILOGUE;
}

static void slice_attr(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 150u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 149u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 146u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B2:;
  i0 = p2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_new_slice(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 24360u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_slice_indices(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = l0;
  i0 = mp_obj_get_int(i0);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = l0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B5;}
  i0 = l1;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  goto B2;
  B7:;
  i0 = 1u;
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  B6:;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  goto B0;
  B5:;
  i0 = l1;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = l1;
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i1 = 31u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = p1;
  i0 &= i1;
  i1 = l1;
  i0 += i1;
  l1 = i0;
  i1 = 4294967295u;
  i2 = l1;
  i3 = 4294967295u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i1 = p1;
  i2 = 4294967295u;
  i1 += i2;
  i2 = l1;
  i3 = p1;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  goto B3;
  B9:;
  i0 = p1;
  i1 = 4294967295u;
  i0 += i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  B8:;
  i0 = p2;
  i1 = 4294967295u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  goto Bfunc;
  B4:;
  i0 = 10106u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B3:;
  i0 = p2;
  i1 = p0;
  i1 = mp_obj_get_int(i1);
  p0 = i1;
  i2 = 31u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = p1;
  i1 &= i2;
  i2 = p0;
  i1 += i2;
  p0 = i1;
  i2 = 4294967295u;
  i3 = p0;
  i4 = 4294967295u;
  i3 = (u32)((s32)i3 > (s32)i4);
  i1 = i3 ? i1 : i2;
  p0 = i1;
  i2 = p1;
  i3 = 4294967295u;
  i2 += i3;
  i3 = p0;
  i4 = p1;
  i3 = (u32)((s32)i3 < (s32)i4);
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = l1;
  i1 = mp_obj_get_int(i1);
  l1 = i1;
  i2 = 31u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = p1;
  i1 &= i2;
  i2 = l1;
  i1 += i2;
  l1 = i1;
  i2 = 0u;
  i3 = l1;
  i4 = 0u;
  i3 = (u32)((s32)i3 > (s32)i4);
  i1 = i3 ? i1 : i2;
  l1 = i1;
  i2 = l1;
  i3 = p1;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p2;
  i1 = p1;
  i2 = p0;
  i2 = mp_obj_get_int(i2);
  p0 = i2;
  i3 = 31u;
  i2 = (u32)((s32)i2 >> (i3 & 31));
  i3 = p1;
  i2 &= i3;
  i3 = p0;
  i2 += i3;
  p0 = i2;
  i3 = 0u;
  i4 = p0;
  i5 = 0u;
  i4 = (u32)((s32)i4 > (s32)i5);
  i2 = i4 ? i2 : i3;
  p0 = i2;
  i3 = p0;
  i4 = p1;
  i3 = (u32)((s32)i3 > (s32)i4);
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  goto Bfunc;
  B0:;
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_seq_multiply(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = p1;
  i0 *= i1;
  p1 = i0;
  L1: vm_checktime();
    i0 = p4;
    i1 = p0;
    i2 = p1;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = p4;
    i1 = p1;
    i0 += i1;
    p4 = i0;
    i0 = p3;
    i1 = 4294967295u;
    i0 += i1;
    p3 = i0;
    if (i0) {goto L1;}
  B0:;
  FUNC_EPILOGUE;
}

static u32 mp_seq_get_fast_slice_indexes(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p0;
  i2 = p2;
  mp_obj_slice_indices(i0, i1, i2);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 1u;
  i0 = i0 == i1;
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  p0 = i1;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = p0;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = p1;
  i1 = 1u;
  i0 = i0 == i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_seq_extract_slice(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i0 = 0u;
  i1 = 0u;
  i0 = mp_obj_new_list(i0, i1);
  l2 = i0;
  i0 = l0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  i0 = p2;
  i1 = l1;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  l3 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  L2: vm_checktime();
    i0 = l2;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = mp_obj_list_append(i0, i1);
    i0 = p1;
    i1 = l3;
    i0 += i1;
    p1 = i0;
    i0 = p2;
    i1 = l0;
    i0 += i1;
    p2 = i0;
    i1 = l1;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L2;}
    goto B0;
  B1:;
  i0 = p2;
  i1 = l1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  l3 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  L3: vm_checktime();
    i0 = l2;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = mp_obj_list_append(i0, i1);
    i0 = p1;
    i1 = l3;
    i0 += i1;
    p1 = i0;
    i0 = p2;
    i1 = l0;
    i0 += i1;
    p2 = i0;
    i1 = l1;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto L3;}
  B0:;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_seq_cmp_bytes(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = p0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = 0u;
  l0 = i0;
  i0 = p2;
  i1 = p4;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = 3u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = p0;
  if (i0) {goto B3;}
  i0 = 1u;
  p0 = i0;
  goto B4;
  B5:;
  i0 = 4u;
  p0 = i0;
  B4:;
  i0 = p1;
  l0 = i0;
  i0 = p2;
  l1 = i0;
  goto B2;
  B3:;
  i0 = p3;
  l0 = i0;
  i0 = p4;
  l1 = i0;
  i0 = p2;
  p4 = i0;
  i0 = p1;
  p3 = i0;
  B2:;
  i0 = p3;
  i1 = l0;
  i2 = p4;
  i3 = l1;
  i4 = p4;
  i5 = l1;
  i4 = i4 < i5;
  p1 = i4;
  i2 = i4 ? i2 : i3;
  i0 = memcmp_0(i0, i1, i2);
  p2 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p2;
  i0 = !(i0);
  goto Bfunc;
  B6:;
  i0 = 0u;
  l0 = i0;
  i0 = p2;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = p2;
  if (i0) {goto B7;}
  i0 = p4;
  i1 = l1;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  i0 = p0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  goto B0;
  B8:;
  i0 = p1;
  if (i0) {goto B0;}
  B7:;
  i0 = 1u;
  l0 = i0;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_seq_cmp_objs(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = p4;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i1 = 3u;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  i0 = p0;
  if (i0) {goto B6;}
  i0 = 1u;
  p0 = i0;
  goto B7;
  B8:;
  i0 = 4u;
  p0 = i0;
  B7:;
  i0 = p1;
  l1 = i0;
  i0 = p4;
  l2 = i0;
  i1 = p2;
  i2 = l2;
  i3 = p2;
  i2 = i2 < i3;
  l3 = i2;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  if (i0) {goto B5;}
  goto B4;
  B6:;
  i0 = p3;
  l1 = i0;
  i0 = p1;
  p3 = i0;
  i0 = p2;
  l2 = i0;
  i1 = p4;
  p2 = i1;
  i2 = l2;
  i3 = p2;
  i2 = i2 < i3;
  l3 = i2;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  B5:;
  i0 = 0u;
  p4 = i0;
  L9: vm_checktime();
    i0 = p3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = mp_obj_equal(i0, i1);
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = p3;
    i1 = 4u;
    i0 += i1;
    p3 = i0;
    i0 = p4;
    i1 = 1u;
    i0 += i1;
    p4 = i0;
    i1 = p1;
    i0 = i0 < i1;
    if (i0) {goto L9;}
  B4:;
  i0 = l2;
  i1 = p2;
  i0 = i0 != i1;
  if (i0) {goto B11;}
  i0 = p0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B10;}
  goto B1;
  B11:;
  i0 = l3;
  if (i0) {goto B1;}
  B10:;
  i0 = 1u;
  goto Bfunc;
  B3:;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l1;
  i2 = i32_load((&M0), (u64)(i2));
  i0 = mp_binary_op(i0, i1, i2);
  i1 = 30u;
  i0 = i0 == i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_seq_index_obj(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l0 = i0;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p2;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i2 = p3;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = 1u;
  i0 = mp_get_index(i0, i1, i2, i3);
  l2 = i0;
  i0 = p2;
  i1 = 3u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i2 = p3;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i3 = 1u;
  i0 = mp_get_index(i0, i1, i2, i3);
  p1 = i0;
  B0:;
  i0 = l2;
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = l2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p3 = i0;
  i0 = l2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  p2 = i0;
  L3: vm_checktime();
    i0 = p3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l1;
    i0 = mp_obj_equal(i0, i1);
    if (i0) {goto B1;}
    i0 = p3;
    i1 = 4u;
    i0 += i1;
    p3 = i0;
    i0 = p2;
    i1 = 2u;
    i0 += i1;
    p2 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = p1;
    i0 = i0 < i1;
    if (i0) {goto L3;}
  B2:;
  i0 = 10131u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B1:;
  i0 = p2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_seq_count_obj(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  l0 = i0;
  L1: vm_checktime();
    i0 = l0;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = p2;
    i1 = mp_obj_equal(i1, i2);
    i0 += i1;
    l0 = i0;
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    if (i0) {goto L1;}
  i0 = l0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = 1u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_list_append(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l1 = i1;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l1;
  i3 = 3u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 <<= (i2 & 31);
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  l2 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  l3 = i1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = l1;
  i3 = l3;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B0:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_list_sort(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 4294967295u;
  i0 += i1;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i2 = p2;
  i3 = 2u;
  i4 = 42128u;
  i5 = l0;
  i6 = 8u;
  i5 += i6;
  mp_arg_parse_all(i0, i1, i2, i3, i4, i5);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p2 = i0;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i1 = p1;
  i2 = p2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i2 = 4294967292u;
  i1 += i2;
  i2 = 0u;
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 8));
  p1 = i3;
  i4 = p1;
  i5 = 6u;
  i4 = i4 == i5;
  i2 = i4 ? i2 : i3;
  i3 = 14u;
  i4 = 30u;
  i5 = l0;
  i5 = i32_load8_u((&M0), (u64)(i5 + 12));
  i3 = i5 ? i3 : i4;
  mp_quicksort(i0, i1, i2, i3);
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_quicksort(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  L1: vm_checktime();
    i0 = p0;
    i1 = 4294967292u;
    i0 += i1;
    l0 = i0;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i0 = p2;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = p2;
    i1 = l1;
    i0 = mp_call_function_1(i0, i1);
    l1 = i0;
    i0 = p1;
    l2 = i0;
    L4: vm_checktime();
      i0 = l0;
      i1 = 4u;
      i0 += i1;
      l3 = i0;
      L6: vm_checktime();
        i0 = l3;
        l0 = i0;
        i1 = l2;
        i0 = i0 >= i1;
        if (i0) {goto B5;}
        i0 = l0;
        i1 = 4u;
        i0 += i1;
        l3 = i0;
        i0 = 0u;
        i1 = p2;
        i2 = l0;
        i2 = i32_load((&M0), (u64)(i2));
        i1 = mp_call_function_1(i1, i2);
        i2 = l1;
        i0 = mp_binary_op(i0, i1, i2);
        i1 = p3;
        i0 = i0 == i1;
        if (i0) {goto L6;}
      B5:;
      i0 = l2;
      i1 = 4294967292u;
      i0 += i1;
      l3 = i0;
      L7: vm_checktime();
        i0 = l0;
        i1 = l3;
        i0 = i0 >= i1;
        if (i0) {goto B2;}
        i0 = l3;
        i0 = i32_load((&M0), (u64)(i0));
        l2 = i0;
        i0 = l3;
        i1 = 4294967292u;
        i0 += i1;
        l4 = i0;
        l3 = i0;
        i0 = 0u;
        i1 = l1;
        i2 = p2;
        i3 = l2;
        i2 = mp_call_function_1(i2, i3);
        i0 = mp_binary_op(i0, i1, i2);
        i1 = p3;
        i0 = i0 == i1;
        if (i0) {goto L7;}
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0));
      l3 = i0;
      i0 = l0;
      i1 = l4;
      i2 = 4u;
      i1 += i2;
      l2 = i1;
      i1 = i32_load((&M0), (u64)(i1));
      i32_store((&M0), (u64)(i0), i1);
      i0 = l2;
      i1 = l3;
      i32_store((&M0), (u64)(i0), i1);
      goto L4;
    B3:;
    i0 = p1;
    l2 = i0;
    L8: vm_checktime();
      i0 = l0;
      i1 = 4u;
      i0 += i1;
      l3 = i0;
      L10: vm_checktime();
        i0 = l3;
        l0 = i0;
        i1 = l2;
        i0 = i0 >= i1;
        if (i0) {goto B9;}
        i0 = l0;
        i1 = 4u;
        i0 += i1;
        l3 = i0;
        i0 = 0u;
        i1 = l0;
        i1 = i32_load((&M0), (u64)(i1));
        i2 = l1;
        i0 = mp_binary_op(i0, i1, i2);
        i1 = p3;
        i0 = i0 == i1;
        if (i0) {goto L10;}
      B9:;
      i0 = l2;
      i1 = 4294967292u;
      i0 += i1;
      l3 = i0;
      L11: vm_checktime();
        i0 = l0;
        i1 = l3;
        i0 = i0 >= i1;
        if (i0) {goto B2;}
        i0 = l3;
        i0 = i32_load((&M0), (u64)(i0));
        l2 = i0;
        i0 = l3;
        i1 = 4294967292u;
        i0 += i1;
        l3 = i0;
        i0 = 0u;
        i1 = l1;
        i2 = l2;
        i0 = mp_binary_op(i0, i1, i2);
        i1 = p3;
        i0 = i0 == i1;
        if (i0) {goto L11;}
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0));
      l4 = i0;
      i0 = l0;
      i1 = l3;
      i2 = 4u;
      i1 += i2;
      l2 = i1;
      i1 = i32_load((&M0), (u64)(i1));
      i32_store((&M0), (u64)(i0), i1);
      i0 = l2;
      i1 = l4;
      i32_store((&M0), (u64)(i0), i1);
      goto L8;
    B2:;
    i0 = l0;
    i1 = 4294967292u;
    i0 += i1;
    l2 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i0 = l0;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = l1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = p0;
    i0 -= i1;
    i1 = 2u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    i1 = p1;
    i2 = l0;
    i1 -= i2;
    i2 = 2u;
    i1 = (u32)((s32)i1 >> (i2 & 31));
    i2 = 4294967295u;
    i1 += i2;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B12;}
    i0 = p0;
    i1 = l3;
    i2 = p2;
    i3 = p3;
    mp_quicksort(i0, i1, i2, i3);
    i0 = l2;
    i1 = 8u;
    i0 += i1;
    p0 = i0;
    i1 = p1;
    i0 = i0 < i1;
    if (i0) {goto L1;}
    goto B0;
    B12:;
    i0 = l2;
    i1 = 8u;
    i0 += i1;
    i1 = p1;
    i2 = p2;
    i3 = p3;
    mp_quicksort(i0, i1, i2, i3);
    i0 = p0;
    i1 = l3;
    p1 = i1;
    i0 = i0 < i1;
    if (i0) {goto L1;}
  B0:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_list_remove(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = 2u;
  i4 = l0;
  i5 = 8u;
  i4 += i5;
  i1 = mp_seq_index_obj(i1, i2, i3, i4);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = list_pop(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_pop(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = 4294967295u;
  l3 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l3 = i0;
  B1:;
  i0 = l2;
  i1 = l1;
  i2 = l3;
  i3 = 0u;
  i0 = mp_get_index(i0, i1, i2, i3);
  p1 = i0;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967295u;
  i1 += i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p0 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = p0;
  i1 = p0;
  i2 = 4u;
  i1 += i2;
  i2 = l1;
  i3 = p1;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i1 = 5u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = l3;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  l3 = i0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i3 = 4294967292u;
  i2 &= i3;
  i1 = m_realloc(i1, i2);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 >>= (i2 & 31);
  i32_store((&M0), (u64)(i0), i1);
  B2:;
  i0 = l2;
  goto Bfunc;
  B0:;
  i0 = 36836u;
  i1 = 10154u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_index(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p0;
  i3 = p1;
  i0 = mp_seq_index_obj(i0, i1, i2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static void list_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 11481u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 3u;
  i1 = 1u;
  i2 = p2;
  i3 = 3u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l0 = i0;
  i0 = 0u;
  p2 = i0;
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  l1 = i0;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i0 = 0u;
  p1 = i0;
  L1: vm_checktime();
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = p0;
    i1 = 16732u;
    i0 = mp_print_str(i0, i1);
    B2:;
    i0 = p0;
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = p2;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l0;
    mp_obj_print_helper(i0, i1, i2);
    i0 = p2;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = i0 < i1;
    if (i0) {goto L1;}
  B0:;
  i0 = p0;
  i1 = 12894u;
  i0 = mp_print_str(i0, i1);
  FUNC_EPILOGUE;
}

static u32 list_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = 24420u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  j1 = 4ull;
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = p2;
  i1 = 16u;
  i1 = m_malloc(i1);
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 0u;
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = list_extend_from_iter(i0, i1);
  p2 = i0;
  B0:;
  i0 = p2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_extend_from_iter(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  l0 = i0;
  i0 = mp_iternext(i0);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  L1: vm_checktime();
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    l5 = i1;
    i0 = i0 < i1;
    if (i0) {goto B2;}
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l5;
    i3 = 3u;
    i2 <<= (i3 & 31);
    i1 = m_realloc(i1, i2);
    p1 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 <<= (i2 & 31);
    l5 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    l6 = i1;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = 0u;
    i2 = l5;
    i3 = l6;
    i2 -= i3;
    i3 = 2u;
    i2 <<= (i3 & 31);
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    B2:;
    i0 = l3;
    i1 = p1;
    i2 = 1u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p1;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = l1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i0 = mp_iternext(i0);
    l1 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l0 = i0;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 29u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  switch (i0) {
    case 0: goto B5;
    case 1: goto B5;
    case 2: goto B5;
    case 3: goto B5;
    case 4: goto B5;
    case 5: goto B0;
    case 6: goto B0;
    case 7: goto B0;
    case 8: goto B0;
    case 9: goto B0;
    case 10: goto B0;
    case 11: goto B0;
    case 12: goto B0;
    case 13: goto B0;
    case 14: goto B4;
    case 15: goto B0;
    case 16: goto B0;
    case 17: goto B0;
    case 18: goto B0;
    case 19: goto B0;
    case 20: goto B0;
    case 21: goto B0;
    case 22: goto B0;
    case 23: goto B0;
    case 24: goto B0;
    case 25: goto B0;
    case 26: goto B0;
    case 27: goto B3;
    case 28: goto B0;
    case 29: goto B2;
    default: goto B5;
  }
  B5:;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B6;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 24420u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B6:;
  i0 = 14u;
  i1 = 0u;
  i2 = p0;
  i3 = 2u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  goto B0;
  B4:;
  i0 = p1;
  i1 = p2;
  i0 = list_extend(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B3:;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 24420u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = 24420u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = l1;
  i2 = l2;
  i1 += i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l1;
  i2 = 4u;
  i3 = l1;
  i4 = 4u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i1 = m_malloc(i1);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l2;
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = l1;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B2:;
  i0 = 0u;
  l1 = i0;
  i0 = p2;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_get_int_maybe(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B7;}
  i0 = 0u;
  p2 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  B7:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = 24420u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p2;
  i2 = l1;
  i1 *= i2;
  p2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p2;
  i2 = 4u;
  i3 = p2;
  i4 = 4u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i1 = m_malloc(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p2;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 4u;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  i4 = p0;
  i4 = i32_load((&M0), (u64)(i4 + 12));
  mp_seq_multiply(i0, i1, i2, i3, i4);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = p2;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  i4 = p2;
  i4 = i32_load((&M0), (u64)(i4 + 8));
  i0 = mp_seq_cmp_objs(i0, i1, i2, i3, i4);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = p0;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_extend(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 24420u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = p1;
  i0 = list_extend_from_iter(i0, i1);
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l1 = i1;
  i0 += i1;
  l2 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i3 = 16u;
  i2 += i3;
  i1 = m_realloc(i1, i2);
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  l1 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p0;
  i3 = 8u;
  i2 += i3;
  l2 = i2;
  i2 = i32_load((&M0), (u64)(i2));
  i1 += i2;
  l3 = i1;
  i2 = 4u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l3;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = 16u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  B2:;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = l0;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i3 = 8u;
  i2 += i3;
  i2 = i32_load((&M0), (u64)(i2));
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 6u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_subscr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B11;}
  i0 = p2;
  if (i0) {goto B10;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B12;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 24360u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  B12:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = list_pop(i0, i1);
  goto B3;
  B11:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B13;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 24360u;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  B13:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p1;
  i3 = 0u;
  i0 = mp_get_index(i0, i1, i2, i3);
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B10:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p1;
  i3 = 0u;
  i0 = mp_get_index(i0, i1, i2, i3);
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  goto B3;
  B14:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 24360u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p1;
  i3 = 0u;
  i0 = mp_get_index(i0, i1, i2, i3);
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  goto B3;
  B9:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_seq_get_fast_slice_indexes(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p2 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  i0 -= i1;
  p1 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = l1;
  i2 = 0u;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 20));
  l1 = i2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i2 = p0;
  i3 = 8u;
  i2 += i3;
  p2 = i2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = l1;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i1 += i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = 0u;
  i3 = p1;
  i4 = 2u;
  i3 <<= (i4 & 31);
  i2 -= i3;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  goto B3;
  B8:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_seq_get_fast_slice_indexes(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l1 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = 24420u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = l1;
  i2 = p2;
  i1 -= i2;
  p2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = p2;
  i2 = 4u;
  i3 = p2;
  i4 = 4u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i1 = m_malloc(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p2;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 16));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B7:;
  i0 = p2;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_obj_get_array(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_seq_get_fast_slice_indexes(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  l2 = i1;
  i0 -= i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  l3 = i1;
  i0 += i1;
  p1 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B5;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l4 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l5 = i0;
  i1 = p1;
  i0 += i1;
  l6 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = i0 <= i1;
  if (i0) {goto B15;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = p2;
  i2 = l6;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  p2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l4;
  i1 = i32_load((&M0), (u64)(i1));
  l5 = i1;
  i2 = p1;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  B15:;
  i0 = p2;
  i1 = l3;
  i2 = l1;
  i1 += i2;
  l1 = i1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p2;
  i2 = l2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i2 = p1;
  i3 = l1;
  i2 -= i3;
  i3 = l5;
  i2 += i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  goto B4;
  B6:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_seq_extract_slice(i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B5:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 16));
  i1 += i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 20));
  l1 = i2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i2 = p0;
  i3 = 8u;
  i2 += i3;
  p2 = i2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = l1;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i1 += i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = 0u;
  i3 = p1;
  i4 = 2u;
  i3 <<= (i4 & 31);
  i2 -= i3;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  B4:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  B3:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B2:;
  i0 = 0u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  B1:;
  i0 = 13608u;
  i1 = 14241u;
  i2 = 168u;
  i3 = 42144u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = 0u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_getiter(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 51u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 23728u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_it_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = l1;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_list_init(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i1 = 24420u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p1;
  i2 = 4u;
  i3 = p1;
  i4 = 4u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i1 = m_malloc(i1);
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p1;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  FUNC_EPILOGUE;
}

static u32 mp_obj_new_list(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 24420u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p0;
  i2 = 4u;
  i3 = p0;
  i4 = 4u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i1 = m_malloc(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p0;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p0;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  l2 = i0;
  L1: vm_checktime();
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l1;
    i0 += i1;
    i1 = p1;
    i2 = l1;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_list_get(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mp_obj_list_set_len(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  FUNC_EPILOGUE;
}

static u32 list_clear(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 16u;
  i0 = m_realloc(i0, i1);
  l0 = i0;
  i0 = p0;
  i1 = 4u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 0u;
  i2 = 16u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_copy(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  l2 = i0;
  i1 = 24420u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l2;
  i1 = l1;
  i2 = 4u;
  i3 = l1;
  i4 = 4u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = p0;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i1 = m_malloc(i1);
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = l2;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = l1;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  p0 = i0;
  i0 = l2;
  i1 = 12u;
  i0 += i1;
  l3 = i0;
  L1: vm_checktime();
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p0;
    i0 += i1;
    i1 = l0;
    i2 = p0;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_count(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p1;
  i0 = mp_seq_count_obj(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_insert(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i1 = p1;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = l0;
  i3 = p1;
  i4 = 31u;
  i3 = (u32)((s32)i3 >> (i4 & 31));
  i2 &= i3;
  i1 += i2;
  p1 = i1;
  i2 = 0u;
  i3 = p1;
  i4 = 0u;
  i3 = (u32)((s32)i3 > (s32)i4);
  i1 = i3 ? i1 : i2;
  p1 = i1;
  i2 = p1;
  i3 = l0;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  p1 = i1;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i3 = 3u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  p1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 <<= (i2 & 31);
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  l2 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  l3 = i1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = l0;
  i3 = l3;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B0:;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 2u;
  i1 <<= (i2 & 31);
  p1 = i1;
  i0 += i1;
  i1 = 6u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = l1;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B1;}
  L2: vm_checktime();
    i0 = p0;
    i1 = p1;
    i0 += i1;
    p0 = i0;
    i1 = p0;
    i2 = 4294967292u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 4294967292u;
    i0 += i1;
    p1 = i0;
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    i0 = l0;
    i1 = 4294967295u;
    i0 += i1;
    l0 = i0;
    i1 = l1;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L2;}
  B1:;
  i0 = p0;
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_reverse(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i1 = 2u;
  i0 = I32_DIV_S(i0, i1);
  l1 = i0;
  i0 = l0;
  i1 = 2u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 4294967292u;
  i0 += i1;
  l0 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  p0 = i0;
  L1: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i1 = l2;
    i0 += i1;
    l4 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i0 = l4;
    i1 = l3;
    i2 = l0;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i0 += i1;
    i1 = l5;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 4294967292u;
    i0 += i1;
    l0 = i0;
    i0 = l2;
    i1 = 4u;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_warning(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 33856u;
  i1 = p0;
  i2 = 10174u;
  i3 = p0;
  i1 = i3 ? i1 : i2;
  i0 = mp_print_str(i0, i1);
  i0 = 33856u;
  i1 = 11483u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 33856u;
  i1 = p1;
  i2 = p2;
  i0 = mp_vprintf(i0, i1, i2);
  i0 = 33856u;
  i1 = 16735u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 mp_call_function_1_protected(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = g0;
  i1 = 176u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i0 = nlr_push_tail(i0);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = setjmp_ex(i0);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 33856u;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  mp_obj_print_exception(i0, i1);
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = p1;
  i0 = mp_call_function_1(i0, i1);
  p0 = i0;
  nlr_pop();
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_handle_pending_tail(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 0u;
  i1 = 65535u;
  i32_store16((&M0), (u64)(i0 + 5356), i1);
  i0 = 0u;
  i0 = i32_load8_u((&M0), (u64)(i0 + 5358));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load8_u((&M0), (u64)(i0 + 5359));
  i1 = 3u;
  i0 <<= (i1 & 31);
  l1 = i0;
  i1 = 5252u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = 0u;
  i1 = l0;
  i2 = 4294967295u;
  i1 += i2;
  i32_store8((&M0), (u64)(i0 + 5358), i1);
  i0 = 0u;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 5359), i1);
  i0 = l1;
  i1 = 5248u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l2;
  i0 = mp_call_function_1_protected(i0, i1);
  B0:;
  i0 = 0u;
  i0 = i32_load16_s((&M0), (u64)(i0 + 5356));
  i1 = 0u;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 0u;
  i1 = i32_load16_u((&M0), (u64)(i1 + 5356));
  i2 = 1u;
  i1 += i2;
  l0 = i1;
  i32_store16((&M0), (u64)(i0 + 5356), i1);
  i0 = l0;
  i1 = 65535u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  goto Bfunc;
  B2:;
  i0 = 0u;
  i1 = 0u;
  i1 = i32_load8_u((&M0), (u64)(i1 + 5358));
  i2 = 0u;
  i2 = i32_load((&M0), (u64)(i2 + 5244));
  i1 |= i2;
  i1 = !(i1);
  i32_store16((&M0), (u64)(i0 + 5356), i1);
  goto Bfunc;
  B1:;
  i0 = 10182u;
  i1 = 11486u;
  i2 = 111u;
  i3 = 42156u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_sched_schedule(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = 0u;
  i0 = i32_load8_u((&M0), (u64)(i0 + 5358));
  l1 = i0;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load16_u((&M0), (u64)(i0 + 5356));
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 0u;
  i32_store16((&M0), (u64)(i0 + 5356), i1);
  B1:;
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5248), i1);
  i0 = 0u;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 5252), i1);
  i0 = 1u;
  l0 = i0;
  i0 = 0u;
  i1 = l1;
  i2 = 1u;
  i1 += i2;
  i32_store8((&M0), (u64)(i0 + 5358), i1);
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void add_trace(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  L0: vm_checktime();
    i0 = l0;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l1 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    l0 = i0;
    i0 = l1;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L0;}
  i0 = 0u;
  l1 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l4 = i0;
  i0 = 0u;
  l0 = i0;
  L1: vm_checktime();
    i0 = l2;
    i1 = l0;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    i1 = 1u;
    i0 &= i1;
    i1 = l0;
    i0 <<= (i1 & 31);
    i1 = l4;
    i0 |= i1;
    l4 = i0;
    i0 = l5;
    i1 = 1u;
    i0 >>= (i1 & 31);
    i1 = 63u;
    i0 &= i1;
    i1 = l1;
    i0 <<= (i1 & 31);
    i1 = l3;
    i0 |= i1;
    l3 = i0;
    i0 = l1;
    i1 = 6u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l6 = i0;
    l0 = i0;
    i0 = l5;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L1;}
  i0 = l2;
  i1 = l6;
  i0 += i1;
  l0 = i0;
  i1 = 3u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 8u;
  i0 <<= (i1 & 31);
  i1 = l0;
  i2 = 2u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i0 |= i1;
  l7 = i0;
  i0 = 1u;
  l8 = i0;
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 8u;
  i0 <<= (i1 & 31);
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i0 |= i1;
  l9 = i0;
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l10 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l2;
  i2 = l3;
  i3 = l4;
  i2 += i3;
  i3 = l6;
  i2 += i3;
  i1 += i2;
  i0 -= i1;
  l0 = i0;
  L3: vm_checktime();
    i0 = l10;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l1 = i0;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l1;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto B5;}
    i0 = l1;
    i1 = 5u;
    i0 >>= (i1 & 31);
    l2 = i0;
    i0 = l1;
    i1 = 31u;
    i0 &= i1;
    l5 = i0;
    i0 = 1u;
    l1 = i0;
    goto B4;
    B5:;
    i0 = l1;
    i1 = 15u;
    i0 &= i1;
    l5 = i0;
    i0 = l1;
    i1 = 4u;
    i0 <<= (i1 & 31);
    i1 = 1792u;
    i0 &= i1;
    i1 = l10;
    i1 = i32_load8_u((&M0), (u64)(i1 + 1));
    i0 |= i1;
    l2 = i0;
    i0 = 2u;
    l1 = i0;
    B4:;
    i0 = l10;
    i1 = l1;
    i0 += i1;
    l10 = i0;
    i0 = 0u;
    i1 = l2;
    i2 = l0;
    i3 = l5;
    i2 = i2 < i3;
    l1 = i2;
    i0 = i2 ? i0 : i1;
    i1 = l8;
    i0 += i1;
    l8 = i0;
    i0 = l0;
    i1 = l5;
    i0 = i0 >= i1;
    l2 = i0;
    i0 = l0;
    i1 = 0u;
    i2 = l5;
    i3 = l1;
    i1 = i3 ? i1 : i2;
    i0 -= i1;
    l0 = i0;
    i0 = l2;
    if (i0) {goto L3;}
  B2:;
  i0 = p1;
  i1 = l7;
  i2 = l8;
  i3 = l9;
  mp_obj_exception_add_traceback(i0, i1, i2, i3);
  FUNC_EPILOGUE;
}

static void mp_print_exception(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5188));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  L1: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 168));
    l1 = i0;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l1;
    i1 = p0;
    add_trace(i0, i1);
    B2:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    l0 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = 33856u;
  i1 = p0;
  mp_obj_print_exception(i0, i1);
  FUNC_EPILOGUE;
}

static u32 mp_execute_bytecode(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0, l15 = 0, 
      l16 = 0, l17 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j1;
  i0 = g0;
  i1 = 192u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 188), i1);
  i0 = l0;
  i1 = p0;
  i2 = p0;
  i2 = i32_load16_u((&M0), (u64)(i2 + 12));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 += i2;
  p1 = i1;
  i2 = 20u;
  i1 += i2;
  l1 = i1;
  i2 = p0;
  i2 = i32_load16_u((&M0), (u64)(i2 + 14));
  i3 = 12u;
  i2 *= i3;
  i1 += i2;
  i2 = 4294967284u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 184), i1);
  i0 = p1;
  i1 = 16u;
  i0 += i1;
  l2 = i0;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  l4 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l5 = i0;
  L2: vm_checktime();
    i0 = l0;
    i1 = 8u;
    i0 += i1;
    i0 = nlr_push_tail(i0);
    i0 = l3;
    i0 = setjmp_ex(i0);
    i0 = !(i0);
    if (i0) {goto B5;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 35996u;
    i0 = mp_obj_is_subclass_fast(i0, i1);
    i0 = !(i0);
    if (i0) {goto B3;}
    goto B4;
    B5:;
    i0 = l4;
    i1 = p0;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l8 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l6 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 188));
    i0 = !(i0);
    if (i0) {goto B7;}
    i0 = l6;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 104u;
    i0 = i0 == i1;
    if (i0) {goto B7;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 188));
    p1 = i0;
    i0 = l0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0 + 188), i1);
    i0 = p1;
    i0 = mp_make_raise_obj(i0);
    p1 = i0;
    goto B6;
    B7:;
    L8: vm_checktime();
      i0 = l8;
      l7 = i0;
      i0 = l5;
      i1 = l6;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l9 = i0;
      i1 = 4294967280u;
      i0 += i1;
      l8 = i0;
      i1 = 89u;
      i0 = i0 > i1;
      if (i0) {goto B78;}
      i0 = l8;
      switch (i0) {
        case 0: goto B91;
        case 1: goto B92;
        case 2: goto B82;
        case 3: goto B84;
        case 4: goto B98;
        case 5: goto B103;
        case 6: goto B102;
        case 7: goto B108;
        case 8: goto B104;
        case 9: goto B114;
        case 10: goto B106;
        case 11: goto B94;
        case 12: goto B96;
        case 13: goto B78;
        case 14: goto B78;
        case 15: goto B78;
        case 16: goto B111;
        case 17: goto B83;
        case 18: goto B81;
        case 19: goto B77;
        case 20: goto B79;
        case 21: goto B116;
        case 22: goto B95;
        case 23: goto B70;
        case 24: goto B113;
        case 25: goto B97;
        case 26: goto B109;
        case 27: goto B90;
        case 28: goto B110;
        case 29: goto B118;
        case 30: goto B68;
        case 31: goto B105;
        case 32: goto B100;
        case 33: goto B86;
        case 34: goto B99;
        case 35: goto B122;
        case 36: goto B112;
        case 37: goto B80;
        case 38: goto B65;
        case 39: goto B119;
        case 40: goto B78;
        case 41: goto B78;
        case 42: goto B78;
        case 43: goto B78;
        case 44: goto B78;
        case 45: goto B78;
        case 46: goto B78;
        case 47: goto B78;
        case 48: goto B88;
        case 49: goto B78;
        case 50: goto B120;
        case 51: goto B121;
        case 52: goto B107;
        case 53: goto B93;
        case 54: goto B76;
        case 55: goto B127;
        case 56: goto B128;
        case 57: goto B128;
        case 58: goto B87;
        case 59: goto B64;
        case 60: goto B78;
        case 61: goto B78;
        case 62: goto B78;
        case 63: goto B78;
        case 64: goto B89;
        case 65: goto B123;
        case 66: goto B126;
        case 67: goto B62;
        case 68: goto B66;
        case 69: goto B124;
        case 70: goto B85;
        case 71: goto B75;
        case 72: goto B125;
        case 73: goto B69;
        case 74: goto B74;
        case 75: goto B61;
        case 76: goto B63;
        case 77: goto B73;
        case 78: goto B71;
        case 79: goto B115;
        case 80: goto B78;
        case 81: goto B78;
        case 82: goto B67;
        case 83: goto B72;
        case 84: goto B34;
        case 85: goto B33;
        case 86: goto B32;
        case 87: goto B27;
        case 88: goto B101;
        case 89: goto B117;
        default: goto B91;
      }
      B128:;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      p1 = i0;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      l8 = i0;
      i0 = l0;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 184));
      i2 = 12u;
      i1 += i2;
      i32_store((&M0), (u64)(i0 + 184), i1);
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i1 = l6;
      i2 = 3u;
      i1 += i2;
      l9 = i1;
      i2 = p1;
      i3 = l8;
      i4 = 8u;
      i3 <<= (i4 & 31);
      i2 |= i3;
      i1 += i2;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0));
      p1 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      l6 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i1 = 0u;
      i32_store((&M0), (u64)(i0 + 8), i1);
      i0 = l6;
      i1 = p1;
      i2 = 73u;
      i1 = i1 == i2;
      i2 = 1u;
      i1 <<= (i2 & 31);
      i2 = l7;
      i1 |= i2;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      l8 = i0;
      i0 = l9;
      l6 = i0;
      goto L8;
      B127:;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      p1 = i0;
      i1 = 13u;
      i2 = l7;
      mp_load_method(i0, i1, i2);
      i0 = p1;
      i1 = 12u;
      i2 = l7;
      i3 = 8u;
      i2 += i3;
      l8 = i2;
      mp_load_method(i0, i1, i2);
      i0 = 0u;
      i1 = 0u;
      i2 = l8;
      i0 = mp_call_method_n_kw(i0, i1, i2);
      p1 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l9 = i0;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      l10 = i0;
      i0 = l0;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 184));
      i2 = 12u;
      i1 += i2;
      i32_store((&M0), (u64)(i0 + 184), i1);
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i1 = l6;
      i2 = 3u;
      i1 += i2;
      l6 = i1;
      i2 = l9;
      i3 = l10;
      i4 = 8u;
      i3 <<= (i4 & 31);
      i2 |= i3;
      i1 += i2;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i1 = l7;
      i2 = 4u;
      i1 += i2;
      i2 = 2u;
      i1 |= i2;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i1 = 0u;
      i32_store((&M0), (u64)(i0 + 8), i1);
      i0 = l7;
      i1 = p1;
      i32_store((&M0), (u64)(i0 + 8), i1);
      goto L8;
      B126:;
      i0 = l7;
      i1 = 30u;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B125:;
      i0 = l7;
      i1 = l7;
      i2 = 4294967292u;
      i1 += i2;
      j1 = i64_load((&M0), (u64)(i1));
      i64_store((&M0), (u64)(i0 + 4), j1);
      i0 = l7;
      i1 = 8u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B124:;
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i1 = l8;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l7;
      i2 = i32_load((&M0), (u64)(i2));
      i3 = 4u;
      i1 = mp_obj_subscr(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      goto B9;
      B123:;
      i0 = l7;
      i1 = 6u;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B122:;
      i0 = 0u;
      l6 = i0;
      L129: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L129;}
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i1 = p0;
      i1 = i32_load((&M0), (u64)(i1));
      i1 = i32_load((&M0), (u64)(i1 + 12));
      i2 = l6;
      i3 = 2u;
      i2 <<= (i3 & 31);
      i1 += i2;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l8;
      i2 = i32_load((&M0), (u64)(i2));
      i3 = l7;
      i3 = i32_load((&M0), (u64)(i3));
      i1 = mp_make_function_from_raw_code(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      goto B9;
      B121:;
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      p1 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l9 = i0;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      l6 = i0;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = mp_obj_is_true(i0);
      i0 = !(i0);
      if (i0) {goto B60;}
      i0 = p1;
      i1 = l6;
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l9;
      i1 |= i2;
      i0 += i1;
      i1 = 4294934528u;
      i0 += i1;
      l6 = i0;
      goto B40;
      B120:;
      i0 = l6;
      i1 = l6;
      i1 = i32_load8_u((&M0), (u64)(i1 + 2));
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l6;
      i3 = 1u;
      i2 += i3;
      i2 = i32_load8_u((&M0), (u64)(i2));
      i1 |= i2;
      i0 += i1;
      i1 = 4294934531u;
      i0 += i1;
      l6 = i0;
      goto B55;
      B119:;
      i0 = 0u;
      l6 = i0;
      L130: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        l9 = i1;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L130;}
      i0 = l7;
      i1 = 4294967293u;
      i2 = l9;
      i3 = 510u;
      i2 &= i3;
      i1 -= i2;
      i2 = l6;
      i3 = 255u;
      i2 &= i3;
      i1 -= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l8 = i0;
      i1 = 1u;
      i2 = l6;
      i3 = l8;
      i1 = mp_call_method_n_kw_var(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      goto B9;
      B118:;
      i0 = 0u;
      l6 = i0;
      L131: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L131;}
      i0 = l7;
      i1 = 1u;
      i2 = l6;
      i1 -= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l8 = i0;
      i1 = l6;
      i2 = l8;
      i1 = mp_obj_new_set(i1, i2);
      i32_store((&M0), (u64)(i0), i1);
      goto B9;
      B117:;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      mp_import_all(i0);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B116:;
      i0 = 0u;
      l6 = i0;
      L132: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L132;}
      i0 = l2;
      i1 = l6;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 -= i1;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = mp_obj_cell_get(i0);
      l6 = i0;
      if (i0) {goto B10;}
      goto B31;
      B115:;
      i0 = l7;
      i1 = 12u;
      i0 += i1;
      l8 = i0;
      i0 = p1;
      l6 = i0;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l7;
      i0 = mp_getiter(i0, i1);
      l9 = i0;
      i1 = l7;
      i0 = i0 == i1;
      if (i0) {goto L8;}
      i0 = l7;
      i1 = l9;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 0u;
      i32_store((&M0), (u64)(i0), i1);
      goto B9;
      B114:;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      i1 = 8u;
      i0 <<= (i1 & 31);
      i1 = l6;
      i2 = 1u;
      i1 += i2;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i0 |= i1;
      mp_delete_name(i0);
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      i0 = l7;
      l8 = i0;
      goto L8;
      B113:;
      i0 = 0u;
      l6 = i0;
      L133: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L133;}
      i0 = l2;
      i1 = l6;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 -= i1;
      l6 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = !(i0);
      if (i0) {goto B31;}
      i0 = l6;
      i1 = 0u;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l7;
      l8 = i0;
      goto B9;
      B112:;
      i0 = 0u;
      l6 = i0;
      L134: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        l9 = i1;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L134;}
      i0 = l7;
      i1 = l9;
      i2 = 510u;
      i1 &= i2;
      i2 = l6;
      i3 = 255u;
      i2 &= i3;
      l6 = i2;
      i1 += i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 -= i1;
      l8 = i0;
      i1 = l8;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l6;
      i3 = l9;
      i4 = 1u;
      i3 >>= (i4 & 31);
      i4 = 255u;
      i3 &= i4;
      i4 = l8;
      i5 = 4u;
      i4 += i5;
      i1 = mp_call_function_n_kw(i1, i2, i3, i4);
      i32_store((&M0), (u64)(i0), i1);
      goto B9;
      B111:;
      i0 = l6;
      i1 = 2u;
      i0 += i1;
      l6 = i0;
      i0 = 0u;
      p1 = i0;
      L135: vm_checktime();
        i0 = l6;
        i1 = 4294967295u;
        i0 += i1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = p1;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        p1 = i0;
        i0 = l6;
        i1 = 1u;
        i0 += i1;
        l6 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L135;}
      i0 = l7;
      i1 = 1u;
      i2 = l6;
      i3 = 4294967295u;
      i2 += i3;
      i2 = i32_load8_u((&M0), (u64)(i2));
      l9 = i2;
      i1 -= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l8 = i0;
      i1 = p0;
      i1 = i32_load((&M0), (u64)(i1));
      i1 = i32_load((&M0), (u64)(i1 + 12));
      i2 = p1;
      i3 = 2u;
      i2 <<= (i3 & 31);
      i1 += i2;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l9;
      i3 = l8;
      i1 = mp_make_closure_from_raw_code(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      goto L8;
      B110:;
      i0 = 0u;
      l6 = i0;
      L136: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L136;}
      i0 = l7;
      i1 = l6;
      i1 = mp_obj_new_dict(i1);
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B109:;
      i0 = 0u;
      l6 = i0;
      L137: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L137;}
      i0 = l7;
      i1 = 1u;
      i2 = l6;
      i1 -= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l8 = i0;
      i1 = l6;
      i2 = l8;
      i1 = mp_obj_new_tuple(i1, i2);
      i32_store((&M0), (u64)(i0), i1);
      goto B9;
      B108:;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      i1 = 8u;
      i0 <<= (i1 & 31);
      i1 = l6;
      i2 = 1u;
      i1 += i2;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i0 |= i1;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      mp_store_global(i0, i1);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L8;
      B107:;
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      p1 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l9 = i0;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      l6 = i0;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = mp_obj_is_true(i0);
      i0 = !(i0);
      if (i0) {goto B59;}
      i0 = p1;
      l6 = i0;
      goto B40;
      B106:;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      i1 = 8u;
      i0 <<= (i1 & 31);
      i1 = l6;
      i2 = 1u;
      i1 += i2;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i0 |= i1;
      mp_delete_global(i0);
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      i0 = l7;
      l8 = i0;
      goto L8;
      B105:;
      i0 = 0u;
      l6 = i0;
      L138: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L138;}
      i0 = l7;
      i1 = l6;
      i2 = 4294967292u;
      i1 &= i2;
      i0 -= i1;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      i0 = l8;
      i1 = 3u;
      i0 &= i1;
      l8 = i0;
      i0 = !(i0);
      if (i0) {goto B51;}
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      l9 = i0;
      i0 = l8;
      i1 = 1u;
      i0 = i0 != i1;
      if (i0) {goto B44;}
      i0 = l6;
      i1 = l9;
      i2 = l7;
      i3 = 4294967292u;
      i2 += i3;
      i2 = i32_load((&M0), (u64)(i2));
      i0 = mp_obj_dict_store(i0, i1, i2);
      i0 = l7;
      i1 = 4294967288u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B104:;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l6;
      i1 = i32_load8_u((&M0), (u64)(i1 + 2));
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l6;
      i3 = 1u;
      i2 += i3;
      i2 = i32_load8_u((&M0), (u64)(i2));
      i1 |= i2;
      i2 = l7;
      i3 = 4294967292u;
      i2 += i3;
      i2 = i32_load((&M0), (u64)(i2));
      mp_store_attr(i0, i1, i2);
      i0 = l7;
      i1 = 4294967288u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L8;
      B103:;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      i1 = 8u;
      i0 <<= (i1 & 31);
      i1 = l6;
      i2 = 1u;
      i1 += i2;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i0 |= i1;
      i1 = l7;
      i2 = 4294967288u;
      i1 += i2;
      mp_load_super_method(i0, i1);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L8;
      B102:;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      i1 = 8u;
      i0 <<= (i1 & 31);
      i1 = l6;
      i2 = 1u;
      i1 += i2;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i0 |= i1;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      mp_store_name(i0, i1);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L8;
      B101:;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      i0 = p0;
      i1 = 8u;
      i0 += i1;
      i1 = l7;
      i2 = 4294967292u;
      i1 += i2;
      l8 = i1;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 188));
      i0 = !(i0);
      if (i0) {goto B50;}
      i0 = l8;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 188));
      l9 = i0;
      i0 = l0;
      i1 = 0u;
      i32_store((&M0), (u64)(i0 + 188), i1);
      i0 = l10;
      i1 = 0u;
      i2 = l9;
      i3 = l0;
      i4 = 4u;
      i3 += i4;
      i0 = mp_resume(i0, i1, i2, i3);
      l10 = i0;
      if (i0) {goto B35;}
      goto B49;
      B100:;
      i0 = 0u;
      l6 = i0;
      L139: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L139;}
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l6;
      i2 = l7;
      mp_unpack_sequence(i0, i1, i2);
      i0 = l7;
      i1 = l6;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B99:;
      i0 = 0u;
      l6 = i0;
      L140: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L140;}
      i0 = l7;
      i1 = p0;
      i1 = i32_load((&M0), (u64)(i1));
      i1 = i32_load((&M0), (u64)(i1 + 12));
      i2 = l6;
      i3 = 2u;
      i2 <<= (i3 & 31);
      i1 += i2;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = 0u;
      i3 = 0u;
      i1 = mp_make_function_from_raw_code(i1, i2, i3);
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B98:;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l6;
      i1 = i32_load8_u((&M0), (u64)(i1 + 2));
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l6;
      i3 = 1u;
      i2 += i3;
      i2 = i32_load8_u((&M0), (u64)(i2));
      i1 |= i2;
      i2 = l7;
      mp_load_method(i0, i1, i2);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L8;
      B97:;
      i0 = 0u;
      l6 = i0;
      L141: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L141;}
      i0 = l2;
      i1 = l6;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 -= i1;
      l6 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = mp_obj_cell_get(i0);
      i0 = !(i0);
      if (i0) {goto B31;}
      i0 = l6;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = 0u;
      mp_obj_cell_set(i0, i1);
      i0 = l7;
      l8 = i0;
      goto B9;
      B96:;
      i0 = l7;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l6;
      i2 = i32_load8_u((&M0), (u64)(i2 + 2));
      i3 = 8u;
      i2 <<= (i3 & 31);
      i3 = l6;
      i4 = 1u;
      i3 += i4;
      i3 = i32_load8_u((&M0), (u64)(i3));
      i2 |= i3;
      i1 = mp_import_from(i1, i2);
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L8;
      B95:;
      i0 = 0u;
      l6 = i0;
      L142: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L142;}
      i0 = l2;
      i1 = l6;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 -= i1;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      i32_store((&M0), (u64)(i0), i1);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B94:;
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i1 = l6;
      i1 = i32_load8_u((&M0), (u64)(i1 + 2));
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l6;
      i3 = 1u;
      i2 += i3;
      i2 = i32_load8_u((&M0), (u64)(i2));
      i1 |= i2;
      i2 = l7;
      i2 = i32_load((&M0), (u64)(i2));
      i3 = l8;
      i3 = i32_load((&M0), (u64)(i3));
      i1 = mp_import_name(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L8;
      B93:;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      p1 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l8 = i0;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      l6 = i0;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = mp_obj_is_true(i0);
      i0 = !(i0);
      if (i0) {goto B58;}
      i0 = p1;
      i1 = l6;
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l8;
      i1 |= i2;
      i0 += i1;
      i1 = 4294934528u;
      i0 += i1;
      l6 = i0;
      goto B55;
      B92:;
      i0 = l7;
      i1 = l6;
      i1 = i32_load8_u((&M0), (u64)(i1 + 2));
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l6;
      i3 = 1u;
      i2 += i3;
      i2 = i32_load8_u((&M0), (u64)(i2));
      i1 |= i2;
      i1 = mp_load_name(i1);
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L8;
      B91:;
      i0 = l7;
      i1 = l6;
      i1 = i32_load8_u((&M0), (u64)(i1 + 2));
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l6;
      i3 = 1u;
      i2 += i3;
      i2 = i32_load8_u((&M0), (u64)(i2));
      i1 |= i2;
      i2 = 3u;
      i1 <<= (i2 & 31);
      i2 = 2u;
      i1 |= i2;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L8;
      B90:;
      i0 = 0u;
      l6 = i0;
      L143: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L143;}
      i0 = l7;
      i1 = 1u;
      i2 = l6;
      i1 -= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l8 = i0;
      i1 = l6;
      i2 = l8;
      i1 = mp_obj_new_list(i1, i2);
      i32_store((&M0), (u64)(i0), i1);
      goto B9;
      B89:;
      i0 = l7;
      i1 = 14u;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B88:;
      i0 = l7;
      i1 = l6;
      i2 = 3u;
      i1 += i2;
      p1 = i1;
      i2 = l6;
      i2 = i32_load8_u((&M0), (u64)(i2 + 2));
      i3 = 8u;
      i2 <<= (i3 & 31);
      i3 = l6;
      i4 = 1u;
      i3 += i4;
      i3 = i32_load8_u((&M0), (u64)(i3));
      i2 |= i3;
      i1 += i2;
      i2 = 4294934528u;
      i1 += i2;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = l6;
      i1 = i32_load8_u((&M0), (u64)(i1 + 3));
      l8 = i1;
      i32_store((&M0), (u64)(i0 + 8), i1);
      i0 = l7;
      i1 = 8u;
      i0 += i1;
      l7 = i0;
      goto B41;
      B87:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i1 = l1;
      i0 = i0 < i1;
      if (i0) {goto B22;}
      i0 = l0;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 184));
      i2 = 4294967284u;
      i1 += i2;
      i32_store((&M0), (u64)(i0 + 184), i1);
      i0 = l6;
      i1 = l6;
      i1 = i32_load8_u((&M0), (u64)(i1 + 2));
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l6;
      i3 = 1u;
      i2 += i3;
      i2 = i32_load8_u((&M0), (u64)(i2));
      i1 |= i2;
      i0 += i1;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto B55;
      B86:;
      i0 = 0u;
      l6 = i0;
      L144: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        l9 = i1;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L144;}
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l6;
      i2 = l7;
      mp_unpack_ex(i0, i1, i2);
      i0 = l7;
      i1 = l6;
      i2 = 255u;
      i1 &= i2;
      i2 = l9;
      i3 = 1u;
      i2 >>= (i3 & 31);
      i3 = 255u;
      i2 &= i3;
      i1 += i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l8 = i0;
      goto B9;
      B85:;
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l7;
      i3 = 4294967288u;
      i2 += i3;
      i2 = i32_load((&M0), (u64)(i2));
      i0 = mp_obj_subscr(i0, i1, i2);
      i0 = l7;
      i1 = 4294967284u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B84:;
      i0 = l7;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l6;
      i2 = i32_load8_u((&M0), (u64)(i2 + 2));
      i3 = 8u;
      i2 <<= (i3 & 31);
      i3 = l6;
      i4 = 1u;
      i3 += i4;
      i3 = i32_load8_u((&M0), (u64)(i3));
      i2 |= i3;
      i1 = mp_load_attr(i1, i2);
      i32_store((&M0), (u64)(i0), i1);
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      i0 = l7;
      l8 = i0;
      goto L8;
      B83:;
      i0 = l6;
      i1 = 2u;
      i0 += i1;
      l6 = i0;
      i0 = 0u;
      p1 = i0;
      L145: vm_checktime();
        i0 = l6;
        i1 = 4294967295u;
        i0 += i1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = p1;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        p1 = i0;
        i0 = l6;
        i1 = 1u;
        i0 += i1;
        l6 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L145;}
      i0 = l7;
      i1 = l6;
      i2 = 4294967295u;
      i1 += i2;
      i1 = i32_load8_u((&M0), (u64)(i1));
      l9 = i1;
      i2 = 4294967295u;
      i1 ^= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l8 = i0;
      i1 = p0;
      i1 = i32_load((&M0), (u64)(i1));
      i1 = i32_load((&M0), (u64)(i1 + 12));
      i2 = p1;
      i3 = 2u;
      i2 <<= (i3 & 31);
      i1 += i2;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l9;
      i3 = 256u;
      i2 |= i3;
      i3 = l8;
      i1 = mp_make_closure_from_raw_code(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      goto L8;
      B82:;
      i0 = l7;
      i1 = l6;
      i1 = i32_load8_u((&M0), (u64)(i1 + 2));
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l6;
      i3 = 1u;
      i2 += i3;
      i2 = i32_load8_u((&M0), (u64)(i2));
      i1 |= i2;
      i1 = mp_load_global(i1);
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L8;
      B81:;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l8 = i0;
      i1 = 127u;
      i0 &= i1;
      i1 = l8;
      i2 = 25u;
      i1 <<= (i2 & 31);
      i2 = 24u;
      i1 = (u32)((s32)i1 >> (i2 & 31));
      i2 = 4294967168u;
      i1 &= i2;
      i0 |= i1;
      p1 = i0;
      i0 = l6;
      i1 = 2u;
      i0 += i1;
      l6 = i0;
      i0 = l8;
      i1 = 128u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B146;}
      L147: vm_checktime();
        i0 = l6;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = p1;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        p1 = i0;
        i0 = l6;
        i1 = 1u;
        i0 += i1;
        l6 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L147;}
      B146:;
      i0 = l7;
      i1 = p1;
      i2 = 1u;
      i1 <<= (i2 & 31);
      i2 = 1u;
      i1 |= i2;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto L8;
      B80:;
      i0 = 0u;
      l6 = i0;
      L148: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        l9 = i1;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L148;}
      i0 = l7;
      i1 = 4294967294u;
      i2 = l9;
      i3 = 510u;
      i2 &= i3;
      i1 -= i2;
      i2 = l6;
      i3 = 255u;
      i2 &= i3;
      i1 -= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l8 = i0;
      i1 = 0u;
      i2 = l6;
      i3 = l8;
      i1 = mp_call_method_n_kw_var(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      goto B9;
      B79:;
      i0 = 0u;
      l6 = i0;
      L149: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L149;}
      i0 = l2;
      i1 = l6;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 -= i1;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      i0 = !(i0);
      if (i0) {goto B31;}
      goto B10;
      B78:;
      i0 = l9;
      i1 = 175u;
      i0 = i0 > i1;
      if (i0) {goto B57;}
      i0 = l7;
      i1 = l9;
      i2 = 1u;
      i1 <<= (i2 & 31);
      i2 = 4294967040u;
      i1 += i2;
      i2 = 1u;
      i1 |= i2;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B77:;
      i0 = 0u;
      l6 = i0;
      L150: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L150;}
      i0 = l7;
      i1 = p0;
      i1 = i32_load((&M0), (u64)(i1));
      i1 = i32_load((&M0), (u64)(i1 + 12));
      i2 = l6;
      i3 = 2u;
      i2 <<= (i3 & 31);
      i1 += i2;
      i1 = i32_load((&M0), (u64)(i1));
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B76:;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      p1 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l8 = i0;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      l6 = i0;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = mp_obj_is_true(i0);
      i0 = !(i0);
      if (i0) {goto B56;}
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i0 = p1;
      l6 = i0;
      goto B40;
      B75:;
      i0 = l7;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B74:;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      i0 = l7;
      i1 = l7;
      i2 = 4294967292u;
      i1 += i2;
      l8 = i1;
      i1 = i32_load((&M0), (u64)(i1));
      i32_store((&M0), (u64)(i0), i1);
      i0 = l8;
      i1 = l6;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l7;
      l8 = i0;
      goto B9;
      B73:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i1 = l1;
      i0 = i0 < i1;
      if (i0) {goto B21;}
      i0 = l0;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 184));
      i2 = 4294967284u;
      i1 += i2;
      i32_store((&M0), (u64)(i0 + 184), i1);
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      i1 = 6u;
      i0 = i0 == i1;
      if (i0) {goto B48;}
      i0 = l6;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B30;}
      i0 = l6;
      i1 = 0u;
      i0 = (u32)((s32)i0 >= (s32)i1);
      if (i0) {goto B42;}
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l7 = i0;
      B72:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i1 = l1;
      i0 = i0 < i1;
      if (i0) {goto B26;}
      L151: vm_checktime();
        i0 = l0;
        i0 = i32_load((&M0), (u64)(i0 + 184));
        i0 = i32_load8_u((&M0), (u64)(i0 + 4));
        i1 = 2u;
        i0 &= i1;
        if (i0) {goto B153;}
        i0 = l7;
        l6 = i0;
        goto B152;
        B153:;
        i0 = l0;
        i0 = i32_load((&M0), (u64)(i0 + 184));
        i0 = i32_load((&M0), (u64)(i0));
        i1 = p1;
        i0 = i0 > i1;
        if (i0) {goto B52;}
        i0 = l7;
        i1 = 4294967292u;
        i0 += i1;
        l6 = i0;
        i0 = i32_load((&M0), (u64)(i0));
        l8 = i0;
        i1 = 1u;
        i0 &= i1;
        if (i0) {goto B155;}
        i0 = l8;
        i1 = 6u;
        i0 = i0 == i1;
        if (i0) {goto B154;}
        i0 = l8;
        i0 = mp_obj_is_exception_instance(i0);
        if (i0) {goto B154;}
        goto B17;
        B155:;
        i0 = l7;
        i1 = 4294967288u;
        i0 += i1;
        l6 = i0;
        B154:;
        i0 = l6;
        i1 = l7;
        i1 = i32_load((&M0), (u64)(i1));
        i32_store((&M0), (u64)(i0), i1);
        i0 = l6;
        l7 = i0;
        B152:;
        i0 = l0;
        i1 = l0;
        i1 = i32_load((&M0), (u64)(i1 + 184));
        i2 = 4294967284u;
        i1 += i2;
        i32_store((&M0), (u64)(i0 + 184), i1);
        i0 = l0;
        i0 = i32_load((&M0), (u64)(i0 + 184));
        i1 = l1;
        i0 = i0 >= i1;
        if (i0) {goto L151;}
        goto B25;
      B71:;
      i0 = l7;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = 0u;
      i1 = mp_getiter(i1, i2);
      i32_store((&M0), (u64)(i0), i1);
      i0 = l7;
      l8 = i0;
      goto B9;
      B70:;
      i0 = 0u;
      l6 = i0;
      L156: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L156;}
      i0 = l2;
      i1 = l6;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 -= i1;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      mp_obj_cell_set(i0, i1);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B69:;
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B68:;
      i0 = 6u;
      l9 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i1 = 3u;
      i0 = i0 != i1;
      if (i0) {goto B54;}
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      p1 = i0;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      l9 = i0;
      goto B53;
      B67:;
      i0 = l7;
      i1 = 4294967288u;
      i0 += i1;
      l8 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l7;
      i3 = 4294967292u;
      i2 += i3;
      i2 = i32_load((&M0), (u64)(i2));
      i0 = mp_obj_dict_store(i0, i1, i2);
      goto B9;
      B66:;
      i0 = l7;
      i1 = mp_load_build_class();
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B65:;
      i0 = 0u;
      l6 = i0;
      L157: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        l9 = i1;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L157;}
      i0 = l7;
      i1 = l6;
      i2 = 255u;
      i1 &= i2;
      l6 = i1;
      i2 = l9;
      i3 = 510u;
      i2 &= i3;
      i1 += i2;
      i2 = 4294967295u;
      i1 ^= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l8 = i0;
      i1 = l6;
      i2 = l9;
      i3 = 1u;
      i2 >>= (i3 & 31);
      i3 = 255u;
      i2 &= i3;
      i3 = l8;
      i1 = mp_call_method_n_kw(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      goto B9;
      B64:;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l8 = i0;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      l9 = i0;
      i0 = p0;
      i1 = 8u;
      i0 += i1;
      i1 = l7;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l7;
      i1 = 4294967284u;
      i0 += i1;
      p1 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = !(i0);
      if (i0) {goto B47;}
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      i0 = p1;
      i0 = mp_iternext_allow_raise(i0);
      p1 = i0;
      i0 = !(i0);
      if (i0) {goto B46;}
      goto B11;
      B63:;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      i1 = 6u;
      i0 = i0 == i1;
      if (i0) {goto B45;}
      i0 = l6;
      i1 = 1u;
      i0 &= i1;
      if (i0) {goto B43;}
      i0 = l6;
      i0 = mp_obj_is_exception_instance(i0);
      i0 = !(i0);
      if (i0) {goto B20;}
      i0 = l7;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      l6 = i1;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l6;
      i0 = mp_obj_get_type(i0);
      l6 = i0;
      i0 = l7;
      i1 = 6u;
      i32_store((&M0), (u64)(i0 + 8), i1);
      i0 = l7;
      i1 = l6;
      i32_store((&M0), (u64)(i0), i1);
      i0 = 3u;
      i1 = 0u;
      i2 = l7;
      i3 = 4294967288u;
      i2 += i3;
      l8 = i2;
      i0 = mp_call_method_n_kw(i0, i1, i2);
      i0 = mp_obj_is_true(i0);
      i0 = !(i0);
      if (i0) {goto B37;}
      i0 = l8;
      i1 = 6u;
      i32_store((&M0), (u64)(i0), i1);
      goto B9;
      B62:;
      i0 = l7;
      i1 = 0u;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B61:;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      i0 = l7;
      i1 = l7;
      i2 = 4294967292u;
      i1 += i2;
      l8 = i1;
      i1 = i32_load((&M0), (u64)(i1));
      i32_store((&M0), (u64)(i0), i1);
      i0 = l7;
      i1 = 4294967288u;
      i0 += i1;
      l9 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      i0 = l9;
      i1 = l6;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l8;
      i1 = l10;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l7;
      l8 = i0;
      goto B9;
      B60:;
      i0 = p1;
      l6 = i0;
      goto B40;
      B59:;
      i0 = p1;
      i1 = l6;
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l9;
      i1 |= i2;
      i0 += i1;
      i1 = 4294934528u;
      i0 += i1;
      l6 = i0;
      goto B40;
      B58:;
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i0 = p1;
      l6 = i0;
      goto B40;
      B57:;
      i0 = l9;
      i1 = 191u;
      i0 = i0 > i1;
      if (i0) {goto B38;}
      i0 = l2;
      i1 = 176u;
      i2 = l9;
      i1 -= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      if (i0) {goto B10;}
      goto B31;
      B56:;
      i0 = p1;
      i1 = l6;
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l8;
      i1 |= i2;
      i0 += i1;
      i1 = 4294934528u;
      i0 += i1;
      l6 = i0;
      B55:;
      i0 = l7;
      l8 = i0;
      goto B40;
      B54:;
      i0 = l7;
      p1 = i0;
      B53:;
      i0 = l6;
      i1 = 2u;
      i0 += i1;
      l6 = i0;
      i0 = p1;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i1 = l8;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = p1;
      i2 = i32_load((&M0), (u64)(i2));
      i3 = l9;
      i1 = mp_obj_new_slice(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      goto L8;
      B52:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      p1 = i0;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      i0 = p1;
      i0 = i32_load((&M0), (u64)(i0 + 4));
      i1 = 4294967292u;
      i0 &= i1;
      p1 = i0;
      i1 = 4294967295u;
      i32_store((&M0), (u64)(i0 + 8), i1);
      i0 = p1;
      i1 = l6;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = p1;
      i1 = 8u;
      i0 += i1;
      l8 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      goto L8;
      B51:;
      i0 = l6;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      i0 = mp_obj_list_append(i0, i1);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B50:;
      i0 = 0u;
      l9 = i0;
      i0 = l8;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l10;
      i2 = 0u;
      i3 = l0;
      i4 = 4u;
      i3 += i4;
      i0 = mp_resume(i0, i1, i2, i3);
      l10 = i0;
      if (i0) {goto B35;}
      B49:;
      i0 = l8;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 4));
      l6 = i1;
      i2 = 6u;
      i3 = l6;
      i1 = i3 ? i1 : i2;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l9;
      i0 = !(i0);
      if (i0) {goto B9;}
      i0 = l9;
      i1 = 36236u;
      i0 = mp_obj_exception_match(i0, i1);
      i0 = !(i0);
      if (i0) {goto B9;}
      goto B29;
      B48:;
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B47:;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      i0 = l7;
      i1 = 4294967288u;
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = mp_iternext_allow_raise(i0);
      p1 = i0;
      if (i0) {goto B11;}
      B46:;
      i0 = l6;
      i1 = l9;
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l8;
      i1 |= i2;
      i0 += i1;
      l6 = i0;
      i0 = l7;
      i1 = 4294967280u;
      i0 += i1;
      l8 = i0;
      goto L8;
      B45:;
      i0 = l7;
      j1 = 25769803782ull;
      i64_store((&M0), (u64)(i0 + 4), j1);
      i0 = 3u;
      i1 = 0u;
      i2 = l7;
      i3 = 4294967288u;
      i2 += i3;
      l8 = i2;
      i0 = mp_call_method_n_kw(i0, i1, i2);
      i0 = l8;
      i1 = 6u;
      i32_store((&M0), (u64)(i0), i1);
      goto B9;
      B44:;
      i0 = l6;
      i1 = l9;
      mp_obj_set_store(i0, i1);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B43:;
      i0 = l7;
      j1 = 25769803782ull;
      i64_store((&M0), (u64)(i0), j1);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      l9 = i0;
      i0 = l8;
      i1 = 6u;
      i32_store((&M0), (u64)(i0), i1);
      i0 = 3u;
      i1 = 0u;
      i2 = l7;
      i3 = 4294967284u;
      i2 += i3;
      l10 = i2;
      i0 = mp_call_method_n_kw(i0, i1, i2);
      i0 = l7;
      i1 = 4294967288u;
      i0 += i1;
      l8 = i0;
      i1 = l6;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l10;
      i1 = l9;
      i32_store((&M0), (u64)(i0), i1);
      goto B9;
      B42:;
      i0 = l7;
      i1 = l6;
      i2 = 1u;
      i1 >>= (i2 & 31);
      l8 = i1;
      i32_store((&M0), (u64)(i0), i1);
      B41:;
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l7 = i0;
      i0 = l8;
      i1 = 127u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B159;}
      i0 = l8;
      i1 = 1u;
      i0 <<= (i1 & 31);
      i1 = 4294967295u;
      i0 += i1;
      l9 = i0;
      L160: vm_checktime();
        i0 = l0;
        i0 = i32_load((&M0), (u64)(i0 + 184));
        i1 = l1;
        i0 = i0 < i1;
        if (i0) {goto B23;}
        i0 = l0;
        i0 = i32_load((&M0), (u64)(i0 + 184));
        i0 = i32_load8_u((&M0), (u64)(i0 + 4));
        i1 = 2u;
        i0 &= i1;
        if (i0) {goto B162;}
        i0 = l7;
        l6 = i0;
        goto B161;
        B162:;
        i0 = l7;
        i1 = 4294967292u;
        i0 += i1;
        l6 = i0;
        i0 = l0;
        i0 = i32_load((&M0), (u64)(i0 + 184));
        i0 = i32_load((&M0), (u64)(i0));
        i1 = p1;
        i0 = i0 > i1;
        if (i0) {goto B39;}
        i0 = l6;
        i0 = i32_load((&M0), (u64)(i0));
        l10 = i0;
        i1 = 1u;
        i0 &= i1;
        if (i0) {goto B164;}
        i0 = l10;
        i1 = 6u;
        i0 = i0 == i1;
        if (i0) {goto B163;}
        i0 = l10;
        i0 = mp_obj_is_exception_instance(i0);
        if (i0) {goto B163;}
        goto B19;
        B164:;
        i0 = l7;
        i1 = 4294967288u;
        i0 += i1;
        l6 = i0;
        B163:;
        i0 = l6;
        i1 = l7;
        i1 = i32_load((&M0), (u64)(i1));
        i32_store((&M0), (u64)(i0), i1);
        i0 = l6;
        l7 = i0;
        B161:;
        i0 = l0;
        i1 = l0;
        i1 = i32_load((&M0), (u64)(i1 + 184));
        i2 = 4294967284u;
        i1 += i2;
        i32_store((&M0), (u64)(i0 + 184), i1);
        i0 = l9;
        i1 = 4294967294u;
        i0 += i1;
        l9 = i0;
        i0 = l8;
        i1 = 4294967295u;
        i0 += i1;
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        if (i0) {goto L160;}
        goto B158;
      B159:;
      i0 = l7;
      l6 = i0;
      B158:;
      i0 = l6;
      i1 = 4294967276u;
      i2 = 4294967292u;
      i3 = l8;
      i1 = i3 ? i1 : i2;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      B40:;
      i0 = 0u;
      i1 = 0u;
      i1 = i32_load((&M0), (u64)(i1 + 24684));
      i2 = 4294967295u;
      i1 += i2;
      p1 = i1;
      i32_store((&M0), (u64)(i0 + 24684), i1);
      i0 = p1;
      i0 = !(i0);
      if (i0) {goto B165;}
      i0 = 0u;
      i0 = i32_load16_u((&M0), (u64)(i0 + 5356));
      if (i0) {goto L8;}
      goto B12;
      B165:;
      i0 = 0u;
      i1 = 10u;
      i32_store((&M0), (u64)(i0 + 24684), i1);
      mp_js_hook();
      i0 = 0u;
      i0 = i32_load16_u((&M0), (u64)(i0 + 5356));
      if (i0) {goto L8;}
      goto B12;
      B39:;
      i0 = l6;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 184));
      i1 = i32_load((&M0), (u64)(i1 + 4));
      i2 = 4294967292u;
      i1 &= i2;
      i0 = i0 != i1;
      if (i0) {goto B18;}
      i0 = l7;
      i1 = l9;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      goto L8;
      B38:;
      i0 = l9;
      i1 = 207u;
      i0 = i0 > i1;
      if (i0) {goto B36;}
      i0 = l2;
      i1 = 192u;
      i2 = l9;
      i1 -= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      i32_store((&M0), (u64)(i0), i1);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      goto B9;
      B37:;
      i0 = l8;
      i1 = l7;
      i2 = 4u;
      i1 += i2;
      i1 = i32_load((&M0), (u64)(i1));
      i32_store((&M0), (u64)(i0), i1);
      goto B9;
      B36:;
      i0 = l9;
      i1 = 211u;
      i0 = i0 > i1;
      if (i0) {goto B166;}
      i0 = l7;
      i1 = l9;
      i2 = 4294967088u;
      i1 += i2;
      i2 = l7;
      i2 = i32_load((&M0), (u64)(i2));
      i1 = mp_unary_op(i1, i2);
      i32_store((&M0), (u64)(i0), i1);
      i0 = l7;
      l8 = i0;
      goto B9;
      B166:;
      i0 = l9;
      i1 = 249u;
      i0 = i0 > i1;
      if (i0) {goto B24;}
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i1 = l9;
      i2 = 4294967081u;
      i1 += i2;
      i2 = l8;
      i2 = i32_load((&M0), (u64)(i2));
      i3 = l7;
      i3 = i32_load((&M0), (u64)(i3));
      i1 = mp_binary_op(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      goto B9;
      B35:;
      i0 = l10;
      i1 = 2u;
      i0 = i0 != i1;
      if (i0) {goto B28;}
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 4));
      i1 = 35996u;
      i0 = mp_obj_exception_match(i0, i1);
      if (i0) {goto B15;}
      nlr_pop();
      i0 = l0;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 4));
      p1 = i1;
      i32_store((&M0), (u64)(i0 + 12), i1);
      i0 = p1;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = 35996u;
      i0 = mp_obj_is_subclass_fast(i0, i1);
      if (i0) {goto B4;}
      goto B3;
      B34:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      l6 = i0;
      i1 = l1;
      i0 = i0 < i1;
      if (i0) {goto B167;}
      L168: vm_checktime();
        i0 = l6;
        i1 = 8u;
        i0 += i1;
        i0 = i32_load((&M0), (u64)(i0));
        p1 = i0;
        if (i0) {goto B6;}
        i0 = l6;
        i1 = 4294967284u;
        i0 += i1;
        l6 = i0;
        i1 = l1;
        i0 = i0 >= i1;
        if (i0) {goto L168;}
      B167:;
      i0 = 37136u;
      i1 = 15605u;
      i0 = mp_obj_new_exception_msg(i0, i1);
      p1 = i0;
      goto B6;
      B33:;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = mp_make_raise_obj(i0);
      p1 = i0;
      goto B6;
      B32:;
      i0 = 0u;
      i1 = 15974u;
      i2 = 0u;
      mp_warning(i0, i1, i2);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = mp_make_raise_obj(i0);
      p1 = i0;
      goto B6;
      B31:;
      i0 = 37016u;
      i1 = 10211u;
      i0 = mp_obj_new_exception_msg(i0, i1);
      p1 = i0;
      goto B6;
      B30:;
      i0 = l6;
      i0 = mp_obj_is_exception_instance(i0);
      i0 = !(i0);
      if (i0) {goto B16;}
      nlr_pop();
      i0 = l0;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      p1 = i1;
      i32_store((&M0), (u64)(i0 + 12), i1);
      i0 = p1;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = 35996u;
      i0 = mp_obj_is_subclass_fast(i0, i1);
      if (i0) {goto B4;}
      goto B3;
      B29:;
      i0 = l9;
      i0 = mp_make_raise_obj(i0);
      p1 = i0;
      goto B6;
      B28:;
      i0 = l10;
      i1 = 1u;
      i0 = i0 != i1;
      if (i0) {goto B14;}
      i0 = l7;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 4));
      i32_store((&M0), (u64)(i0), i1);
      i0 = l6;
      p1 = i0;
      B27:;
      nlr_pop();
      i0 = p0;
      i1 = 8u;
      i0 += i1;
      i1 = l7;
      i32_store((&M0), (u64)(i0), i1);
      i0 = p0;
      i1 = 4u;
      i0 += i1;
      i1 = p1;
      i32_store((&M0), (u64)(i0), i1);
      i0 = p0;
      i1 = 14u;
      i0 += i1;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 184));
      i2 = 12u;
      i1 += i2;
      i2 = l1;
      i1 -= i2;
      i2 = 12u;
      i1 = I32_DIV_S(i1, i2);
      i32_store16((&M0), (u64)(i0), i1);
      i0 = l0;
      i1 = 192u;
      i0 += i1;
      g0 = i0;
      i0 = 1u;
      goto Bfunc;
      B26:;
      i0 = l7;
      l6 = i0;
      B25:;
      nlr_pop();
      i0 = p0;
      i1 = 8u;
      i0 += i1;
      i1 = l6;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i1 = l1;
      i2 = 4294967284u;
      i1 += i2;
      i0 = i0 != i1;
      if (i0) {goto B13;}
      i0 = 0u;
      i1 = 0u;
      i1 = i32_load((&M0), (u64)(i1 + 24684));
      i2 = 4294967295u;
      i1 += i2;
      p1 = i1;
      i32_store((&M0), (u64)(i0 + 24684), i1);
      i0 = p1;
      i0 = !(i0);
      if (i0) {goto B169;}
      i0 = l0;
      i1 = 192u;
      i0 += i1;
      g0 = i0;
      i0 = 0u;
      goto Bfunc;
      B169:;
      i0 = 0u;
      i1 = 10u;
      i32_store((&M0), (u64)(i0 + 24684), i1);
      mp_js_hook();
      i0 = l0;
      i1 = 192u;
      i0 += i1;
      g0 = i0;
      i0 = 0u;
      goto Bfunc;
      B24:;
      i0 = 37196u;
      i1 = 18207u;
      i0 = mp_obj_new_exception_msg(i0, i1);
      p1 = i0;
      nlr_pop();
      i0 = p0;
      i1 = 20u;
      i0 += i1;
      i1 = p1;
      i32_store((&M0), (u64)(i0), i1);
      goto B1;
      B23:;
      i0 = 12896u;
      i1 = 16737u;
      i2 = 759u;
      i3 = 42172u;
      __assert_fail(i0, i1, i2, i3);
      UNREACHABLE;
      B22:;
      i0 = 12896u;
      i1 = 16737u;
      i2 = 883u;
      i3 = 42172u;
      __assert_fail(i0, i1, i2, i3);
      UNREACHABLE;
      B21:;
      i0 = 12896u;
      i1 = 16737u;
      i2 = 809u;
      i3 = 42172u;
      __assert_fail(i0, i1, i2, i3);
      UNREACHABLE;
      B20:;
      i0 = 11498u;
      i1 = 16737u;
      i2 = 727u;
      i3 = 42172u;
      __assert_fail(i0, i1, i2, i3);
      UNREACHABLE;
      B19:;
      i0 = 14251u;
      i1 = 16737u;
      i2 = 780u;
      i3 = 42172u;
      __assert_fail(i0, i1, i2, i3);
      UNREACHABLE;
      B18:;
      i0 = 13621u;
      i1 = 16737u;
      i2 = 768u;
      i3 = 42172u;
      __assert_fail(i0, i1, i2, i3);
      UNREACHABLE;
      B17:;
      i0 = 14251u;
      i1 = 16737u;
      i2 = 1206u;
      i3 = 42172u;
      __assert_fail(i0, i1, i2, i3);
      UNREACHABLE;
      B16:;
      i0 = 11498u;
      i1 = 16737u;
      i2 = 827u;
      i3 = 42172u;
      __assert_fail(i0, i1, i2, i3);
      UNREACHABLE;
      B15:;
      i0 = 17753u;
      i1 = 16737u;
      i2 = 1313u;
      i3 = 42172u;
      __assert_fail(i0, i1, i2, i3);
      UNREACHABLE;
      B14:;
      i0 = 17373u;
      i1 = 16737u;
      i2 = 1312u;
      i3 = 42172u;
      __assert_fail(i0, i1, i2, i3);
      UNREACHABLE;
      B13:;
      i0 = 14903u;
      i1 = 16737u;
      i2 = 1213u;
      i3 = 42172u;
      __assert_fail(i0, i1, i2, i3);
      UNREACHABLE;
      B12:;
      i0 = 0u;
      i0 = i32_load16_u((&M0), (u64)(i0 + 5356));
      if (i0) {goto L8;}
      i0 = 0u;
      i0 = i32_load((&M0), (u64)(i0 + 5244));
      p1 = i0;
      if (i0) {goto B170;}
      i0 = 0u;
      mp_handle_pending_tail(i0);
      goto L8;
      B170:;
      i0 = 0u;
      i1 = 0u;
      i32_store((&M0), (u64)(i0 + 5244), i1);
      i0 = 0u;
      i0 = i32_load8_u((&M0), (u64)(i0 + 5358));
      if (i0) {goto B6;}
      i0 = 0u;
      i1 = 1u;
      i32_store16((&M0), (u64)(i0 + 5356), i1);
      goto B6;
      B11:;
      i0 = l7;
      i1 = p1;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto L8;
      B10:;
      i0 = l7;
      i1 = l6;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      B9:;
      i0 = p1;
      l6 = i0;
      goto L8;
    B6:;
    nlr_pop();
    i0 = l0;
    i1 = p1;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 35996u;
    i0 = mp_obj_is_subclass_fast(i0, i1);
    i0 = !(i0);
    if (i0) {goto B3;}
    B4:;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l6 = i0;
    i1 = 104u;
    i0 = i0 == i1;
    if (i0) {goto B171;}
    i0 = l6;
    i1 = 75u;
    i0 = i0 != i1;
    if (i0) {goto B3;}
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0 + 1));
    l6 = i0;
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0 + 2));
    l7 = i0;
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    l8 = i0;
    i1 = l8;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 4294967280u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    i1 = p1;
    i2 = l6;
    i3 = l7;
    i4 = 8u;
    i3 <<= (i4 & 31);
    i2 |= i3;
    i1 += i2;
    i2 = 3u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    goto L2;
    B171:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    i0 = mp_obj_exception_get_value(i0);
    p1 = i0;
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    i1 = l5;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    goto L2;
    B3:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    l11 = i0;
    i1 = 23448u;
    i0 = i0 == i1;
    if (i0) {goto B172;}
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l12 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p1 = i0;
    i1 = 93u;
    i0 = i0 == i1;
    if (i0) {goto B172;}
    i0 = p1;
    i1 = 100u;
    i0 = i0 == i1;
    if (i0) {goto B172;}
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = i32_load((&M0), (u64)(i0 + 8));
    p1 = i0;
    L173: vm_checktime();
      i0 = p1;
      i0 = i32_load8_s((&M0), (u64)(i0));
      l6 = i0;
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      l8 = i0;
      p1 = i0;
      i0 = l6;
      i1 = 0u;
      i0 = (u32)((s32)i0 < (s32)i1);
      if (i0) {goto L173;}
    i0 = 0u;
    l6 = i0;
    i0 = 0u;
    l9 = i0;
    i0 = 0u;
    l10 = i0;
    i0 = 0u;
    p1 = i0;
    L174: vm_checktime();
      i0 = l8;
      i1 = p1;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l7 = i0;
      i1 = 1u;
      i0 &= i1;
      i1 = p1;
      i0 <<= (i1 & 31);
      i1 = l10;
      i0 |= i1;
      l10 = i0;
      i0 = l7;
      i1 = 1u;
      i0 >>= (i1 & 31);
      i1 = 63u;
      i0 &= i1;
      i1 = l6;
      i0 <<= (i1 & 31);
      i1 = l9;
      i0 |= i1;
      l9 = i0;
      i0 = l6;
      i1 = 6u;
      i0 += i1;
      l6 = i0;
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      l13 = i0;
      p1 = i0;
      i0 = l7;
      i1 = 128u;
      i0 &= i1;
      if (i0) {goto L174;}
    i0 = l8;
    i1 = l13;
    i0 += i1;
    p1 = i0;
    i1 = 3u;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 8u;
    i0 <<= (i1 & 31);
    i1 = p1;
    i2 = 2u;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i0 |= i1;
    l14 = i0;
    i0 = 1u;
    l15 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 8u;
    i0 <<= (i1 & 31);
    i1 = p1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i0 |= i1;
    l16 = i0;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    l17 = i0;
    i0 = l12;
    i1 = l8;
    i2 = l9;
    i3 = l10;
    i2 += i3;
    i1 += i2;
    i2 = l13;
    i1 += i2;
    i0 -= i1;
    p1 = i0;
    L176: vm_checktime();
      i0 = l17;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l6 = i0;
      i0 = !(i0);
      if (i0) {goto B175;}
      i0 = l6;
      i1 = 128u;
      i0 &= i1;
      if (i0) {goto B178;}
      i0 = l6;
      i1 = 5u;
      i0 >>= (i1 & 31);
      l8 = i0;
      i0 = l6;
      i1 = 31u;
      i0 &= i1;
      l7 = i0;
      i0 = 1u;
      l6 = i0;
      goto B177;
      B178:;
      i0 = l6;
      i1 = 15u;
      i0 &= i1;
      l7 = i0;
      i0 = l6;
      i1 = 4u;
      i0 <<= (i1 & 31);
      i1 = 1792u;
      i0 &= i1;
      i1 = l17;
      i1 = i32_load8_u((&M0), (u64)(i1 + 1));
      i0 |= i1;
      l8 = i0;
      i0 = 2u;
      l6 = i0;
      B177:;
      i0 = l17;
      i1 = l6;
      i0 += i1;
      l17 = i0;
      i0 = 0u;
      i1 = l8;
      i2 = p1;
      i3 = l7;
      i2 = i2 < i3;
      l6 = i2;
      i0 = i2 ? i0 : i1;
      i1 = l15;
      i0 += i1;
      l15 = i0;
      i0 = p1;
      i1 = l7;
      i0 = i0 >= i1;
      l8 = i0;
      i0 = p1;
      i1 = 0u;
      i2 = l7;
      i3 = l6;
      i1 = i3 ? i1 : i2;
      i0 -= i1;
      p1 = i0;
      i0 = l8;
      if (i0) {goto L176;}
    B175:;
    i0 = l11;
    i1 = l14;
    i2 = l15;
    i3 = l16;
    mp_obj_exception_add_traceback(i0, i1, i2, i3);
    B172:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 184));
    l6 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 184));
    p1 = i0;
    i0 = l6;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto B182;}
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l7 = i0;
    L183: vm_checktime();
      i0 = p1;
      i0 = i32_load((&M0), (u64)(i0));
      p1 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      l6 = i0;
      i0 = p1;
      i1 = l7;
      i0 = i0 > i1;
      if (i0) {goto B181;}
      i0 = l6;
      i1 = l1;
      i0 = i0 < i1;
      if (i0) {goto B0;}
      i0 = l0;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 184));
      i2 = 4294967284u;
      i1 += i2;
      i32_store((&M0), (u64)(i0 + 184), i1);
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      l6 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      p1 = i0;
      i0 = l6;
      i1 = l1;
      i0 = i0 >= i1;
      if (i0) {goto L183;}
    B182:;
    i0 = p1;
    i1 = l1;
    i0 = i0 >= i1;
    if (i0) {goto B180;}
    goto B179;
    B181:;
    i0 = l6;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto B179;}
    B180:;
    i0 = l5;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 184));
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 184));
    l6 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    p1 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 184));
    i1 = p1;
    i32_store((&M0), (u64)(i0 + 8), i1);
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    i1 = 4294967292u;
    i0 &= i1;
    l6 = i0;
    i1 = p1;
    i32_store((&M0), (u64)(i0 + 4), i1);
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    i1 = l6;
    i2 = 4u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    goto L2;
    B179:;
  i0 = p0;
  i1 = 20u;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0), i1);
  B1:;
  i0 = l0;
  i1 = 192u;
  i0 += i1;
  g0 = i0;
  i0 = 2u;
  goto Bfunc;
  B0:;
  i0 = 12896u;
  i1 = 16737u;
  i2 = 1537u;
  i3 = 42172u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 fun_builtin_0_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 24688u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = p2;
  i2 = 0u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = CALL_INDIRECT(T0, u32 (*)(void), 4, i0);
  goto Bfunc;
  B0:;
  i0 = 16742u;
  i1 = 11534u;
  i2 = 53u;
  i3 = 42210u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 fun_builtin_1_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 24748u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = p2;
  i2 = 131074u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i1, i0);
  goto Bfunc;
  B0:;
  i0 = 12916u;
  i1 = 11534u;
  i2 = 68u;
  i3 = 42229u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 fun_builtin_2_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 24808u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = p2;
  i2 = 262148u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32), 5, i2, i0, i1);
  goto Bfunc;
  B0:;
  i0 = 13662u;
  i1 = 11534u;
  i2 = 83u;
  i3 = 42248u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 fun_builtin_3_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 24868u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = p2;
  i2 = 393222u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = p3;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 1, i3, i0, i1, i2);
  goto Bfunc;
  B0:;
  i0 = 14315u;
  i1 = 11534u;
  i2 = 98u;
  i3 = 42267u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 fun_builtin_var_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 24928u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = p2;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = p3;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32), 5, i2, i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = p2;
  i2 = p3;
  i3 = p1;
  i4 = 2u;
  i3 <<= (i4 & 31);
  i2 += i3;
  mp_map_init_fixed_table(i0, i1, i2);
  i0 = p1;
  i1 = p3;
  i2 = l0;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 8));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 1, i3, i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 14927u;
  i1 = 11534u;
  i2 = 113u;
  i3 = 42286u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_fun_get_name(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  L0: vm_checktime();
    i0 = p0;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l0 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    p0 = i0;
    i0 = l0;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L0;}
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  p0 = i0;
  L1: vm_checktime();
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    l0 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    p0 = i0;
    i0 = l0;
    i0 = i32_load8_s((&M0), (u64)(i0));
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L1;}
  i0 = l1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 8u;
  i0 <<= (i1 & 31);
  i1 = l1;
  i2 = 4294967295u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i0 |= i1;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_fun_bc_attr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = 23u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  L1: vm_checktime();
    i0 = p1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    p0 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    p1 = i0;
    i0 = p0;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L1;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  p1 = i0;
  L2: vm_checktime();
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    p1 = i0;
    i0 = p0;
    i0 = i32_load8_s((&M0), (u64)(i0));
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L2;}
  i0 = p2;
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i2 = 8u;
  i1 <<= (i2 & 31);
  i2 = l0;
  i3 = 4294967295u;
  i2 += i3;
  i2 = i32_load8_u((&M0), (u64)(i2));
  i1 |= i2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  FUNC_EPILOGUE;
}

static void fun_bc_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  L0: vm_checktime();
    i0 = l1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    l1 = i0;
    i0 = l2;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L0;}
  i0 = l3;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  L1: vm_checktime();
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    l1 = i0;
    i0 = l2;
    i0 = i32_load8_s((&M0), (u64)(i0));
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L1;}
  i0 = l3;
  i1 = 4294967295u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l1 = i0;
  i0 = l3;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l2 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l1;
  i2 = l2;
  i3 = 8u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 15636u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 fun_bc_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = i32_load8_s((&M0), (u64)(i0));
  l1 = i0;
  i1 = 255u;
  i0 &= i1;
  l2 = i0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = 1u;
  i0 &= i1;
  l3 = i0;
  i0 = l2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = 15u;
  i0 &= i1;
  l4 = i0;
  i0 = l1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  l5 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = 0u;
  l1 = i0;
  L1: vm_checktime();
    i0 = l5;
    i1 = l1;
    i0 += i1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l0 = i0;
    i1 = 2u;
    i0 &= i1;
    i1 = l1;
    i0 <<= (i1 & 31);
    i1 = l3;
    i0 |= i1;
    l3 = i0;
    i0 = l0;
    i1 = 48u;
    i0 &= i1;
    i1 = l2;
    i0 <<= (i1 & 31);
    i1 = l4;
    i0 |= i1;
    l4 = i0;
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L1;}
  B0:;
  i0 = l3;
  i1 = 12u;
  i0 *= i1;
  i1 = l4;
  i2 = 1u;
  i1 += i2;
  l2 = i1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 20u;
  i0 += i1;
  i0 = mp_pystack_alloc(i0);
  l1 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = l2;
  i32_store16((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  mp_setup_code_state(i0, i1, i2, i3);
  i0 = l1;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5184));
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 0u;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0 + 5184), i1);
  i0 = l1;
  i1 = 0u;
  i0 = mp_execute_bytecode(i0, i1);
  l2 = i0;
  i0 = 0u;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i32_store((&M0), (u64)(i0 + 5184), i1);
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = l2;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 20u;
  i0 += i1;
  l0 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5168));
  i1 = l1;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  goto B2;
  B5:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5168));
  i1 = l1;
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  B4:;
  i0 = 17408u;
  i1 = 17816u;
  i2 = 44u;
  i3 = 42319u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B3:;
  i0 = 16007u;
  i1 = 11534u;
  i2 = 328u;
  i3 = 42307u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B2:;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 5176));
  i1 = l1;
  i0 = i0 < i1;
  if (i0) {goto B7;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = 0u;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 5176), i1);
  i0 = l2;
  if (i0) {goto B6;}
  i0 = l0;
  goto Bfunc;
  B7:;
  i0 = 18214u;
  i1 = 17816u;
  i2 = 45u;
  i3 = 42319u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B6:;
  i0 = l0;
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_fun_bc(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33872u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  B1:;
  i0 = l0;
  i1 = p1;
  i2 = 0u;
  i1 = i1 != i2;
  i0 += i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 16u;
  i0 += i1;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = 24988u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5184));
  l2 = i0;
  i0 = l1;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = p3;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 16u;
  i0 += i1;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B2:;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l1;
  i1 = l0;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 16u;
  i0 += i1;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  B3:;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 10255u;
  i1 = 11534u;
  i2 = 380u;
  i3 = 42192u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void float128_print(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 16u;
  i0 += i1;
  (*Z_envZ_printqfZ_vi)(i0);
  FUNC_EPILOGUE;
}

static u32 float128_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  u64 l2 = 0, l3 = 0;
  f64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  f64 d0, d1;
  i0 = g0;
  i1 = 64u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i2 = 1u;
  i0 = mp_get_buffer(i0, i1, i2);
  p1 = i0;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = 3u;
  i0 &= i1;
  p3 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p3;
  if (i0) {goto B5;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33004u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B5:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 48));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 52));
  i2 = 0u;
  i3 = 0u;
  i4 = 0u;
  i0 = mp_parse_num_decimal_float128(i0, i1, i2, i3, i4);
  p1 = i0;
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = 32u;
  i0 = m_malloc(i0);
  p1 = i0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p1;
  i1 = 25048u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B3:;
  i0 = p3;
  if (i0) {goto B6;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33608u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B6:;
  i0 = p2;
  d0 = mp_obj_get_float(i0);
  l1 = d0;
  i0 = 32u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = 25048u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  d1 = l1;
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B2:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 52));
  i1 = 16u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 48));
  i2 = 16u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 40));
  l2 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 32));
  l3 = j0;
  i0 = 32u;
  i0 = m_malloc(i0);
  p1 = i0;
  j1 = l3;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p1;
  i1 = 25048u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  j1 = l2;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = p2;
  d0 = mp_obj_get_float(i0);
  l1 = d0;
  i0 = 32u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = 25048u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  d1 = l1;
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 12964u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 float128_unary_op(u32 p0, u32 p1) {
  u64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2, j3, j4, j5;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33608u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B5;}
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l0 = j0;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  l1 = j0;
  i0 = p0;
  switch (i0) {
    case 0: goto B1;
    case 1: goto B6;
    case 2: goto B5;
    case 3: goto B5;
    case 4: goto B4;
    case 5: goto B5;
    case 6: goto B3;
    case 7: goto B2;
    default: goto B1;
  }
  B6:;
  i0 = 32u;
  i0 = m_malloc(i0);
  p1 = i0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p1;
  i1 = 25048u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  j1 = l0;
  j2 = 9223372036854775808ull;
  j1 ^= j2;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  goto Bfunc;
  B5:;
  i0 = 0u;
  p1 = i0;
  goto B1;
  B4:;
  i0 = 30u;
  i1 = 14u;
  j2 = l1;
  j3 = l0;
  j4 = 0ull;
  j5 = 0ull;
  i2 = (*Z_envZ___eqtf2Z_ijjjj)(j2, j3, j4, j5);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B3:;
  j0 = l1;
  j1 = l0;
  i0 = (*Z_envZ___fixtfsiZ_ijj)(j0, j1);
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B2:;
  j0 = l1;
  j1 = l0;
  i0 = __signbitl(j0, j1);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 32u;
  i0 = m_malloc(i0);
  p1 = i0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p1;
  i1 = 25048u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  j1 = l0;
  j2 = 9223372036854775808ull;
  j1 ^= j2;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 10299u;
  i1 = 11543u;
  i2 = 180u;
  i3 = 42383u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 float128_binary_op(u32 p0, u32 p1, u32 p2) {
  u64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  f64 d1, d2;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33608u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l0 = j0;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  l1 = j0;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 23328u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  j1 = l1;
  j2 = l0;
  i3 = p2;
  i0 = mp_obj_float128_binary_op(i0, j1, j2, i3);
  goto Bfunc;
  B1:;
  i0 = p0;
  j1 = l1;
  j2 = l0;
  d1 = (*Z_envZ___trunctfdf2Z_djj)(j1, j2);
  d2 = 0;
  i3 = p2;
  i0 = mp_obj_complex_binary_op(i0, d1, d2, i3);
  goto Bfunc;
  B0:;
  i0 = 10299u;
  i1 = 11543u;
  i2 = 180u;
  i3 = 42383u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_float128_binary_op(u32 p0, u64 p1, u64 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0;
  f64 l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2, j3, j4;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 192u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 184), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 176), j1);
  i0 = 0u;
  l1 = i0;
  i0 = p3;
  i1 = l0;
  i2 = 160u;
  i1 += i2;
  i0 = mp_obj_get_float128_maybe(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 35u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  switch (i0) {
    case 0: goto B8;
    case 1: goto B7;
    case 2: goto B9;
    case 3: goto B6;
    case 4: goto B5;
    case 5: goto B0;
    case 6: goto B0;
    case 7: goto B0;
    case 8: goto B0;
    case 9: goto B0;
    case 10: goto B0;
    case 11: goto B0;
    case 12: goto B0;
    case 13: goto B0;
    case 14: goto B18;
    case 15: goto B15;
    case 16: goto B14;
    case 17: goto B0;
    case 18: goto B16;
    case 19: goto B12;
    case 20: goto B17;
    case 21: goto B13;
    case 22: goto B0;
    case 23: goto B0;
    case 24: goto B0;
    case 25: goto B0;
    case 26: goto B0;
    case 27: goto B18;
    case 28: goto B15;
    case 29: goto B14;
    case 30: goto B0;
    case 31: goto B16;
    case 32: goto B12;
    case 33: goto B17;
    case 34: goto B13;
    case 35: goto B10;
    default: goto B8;
  }
  B18:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 160));
  i2 = l0;
  j2 = i64_load((&M0), (u64)(i2 + 168));
  i3 = l0;
  j3 = i64_load((&M0), (u64)(i3 + 176));
  i4 = l0;
  j4 = i64_load((&M0), (u64)(i4 + 184));
  (*Z_envZ___addtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  p2 = j1;
  i64_store((&M0), (u64)(i0 + 184), j1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  p1 = j0;
  goto B2;
  B17:;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 160));
  l2 = j0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 168));
  l3 = j1;
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___eqtf2Z_ijjjj)(j0, j1, j2, j3);
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 104u;
  i0 += i1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 176));
  i2 = l0;
  j2 = i64_load((&M0), (u64)(i2 + 184));
  d1 = (*Z_envZ___trunctfdf2Z_djj)(j1, j2);
  j2 = l2;
  j3 = l3;
  d2 = (*Z_envZ___trunctfdf2Z_djj)(j2, j3);
  l4 = d2;
  d1 = fmod_0(d1, d2);
  l5 = d1;
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  i1 = l0;
  i2 = 104u;
  i1 += i2;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  p2 = j1;
  i64_store((&M0), (u64)(i0 + 184), j1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 104));
  p1 = j1;
  i64_store((&M0), (u64)(i0 + 176), j1);
  d0 = l5;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B4;}
  i0 = l0;
  i1 = 72u;
  i0 += i1;
  d1 = 0;
  d2 = l4;
  d1 = copysign_0(d1, d2);
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  i1 = l0;
  i2 = 72u;
  i1 += i2;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  p2 = j1;
  i64_store((&M0), (u64)(i0 + 184), j1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 72));
  p1 = j0;
  goto B2;
  B16:;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 160));
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 168));
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___netf2Z_ijjjj)(j0, j1, j2, j3);
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  i1 = l0;
  i2 = 160u;
  i1 += i2;
  mp_obj_float128_divmod(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 184));
  p2 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 176));
  p1 = j0;
  goto B1;
  B15:;
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 176));
  i2 = l0;
  j2 = i64_load((&M0), (u64)(i2 + 184));
  i3 = l0;
  j3 = i64_load((&M0), (u64)(i3 + 160));
  i4 = l0;
  j4 = i64_load((&M0), (u64)(i4 + 168));
  (*Z_envZ___subtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = l0;
  i2 = 32u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  p2 = j1;
  i64_store((&M0), (u64)(i0 + 184), j1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 24));
  p1 = j0;
  goto B2;
  B14:;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 160));
  i2 = l0;
  j2 = i64_load((&M0), (u64)(i2 + 168));
  i3 = l0;
  j3 = i64_load((&M0), (u64)(i3 + 176));
  i4 = l0;
  j4 = i64_load((&M0), (u64)(i4 + 184));
  (*Z_envZ___multf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  p2 = j1;
  i64_store((&M0), (u64)(i0 + 184), j1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 40));
  p1 = j0;
  goto B2;
  B13:;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 176));
  l2 = j0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 184));
  l3 = j1;
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___netf2Z_ijjjj)(j0, j1, j2, j3);
  l1 = i0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 168));
  p1 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 160));
  p2 = j0;
  i0 = l1;
  if (i0) {goto B19;}
  j0 = p2;
  j1 = p1;
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___lttf2Z_ijjjj)(j0, j1, j2, j3);
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B19;}
  j0 = p2;
  j1 = p1;
  i0 = ____fpclassifyl(j0, j1);
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  B19:;
  j0 = l2;
  j1 = l3;
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___lttf2Z_ijjjj)(j0, j1, j2, j3);
  l1 = i0;
  j0 = p2;
  j1 = p1;
  d0 = (*Z_envZ___trunctfdf2Z_djj)(j0, j1);
  l5 = d0;
  i0 = l1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B11;}
  i0 = l0;
  i1 = 136u;
  i0 += i1;
  d1 = l5;
  d1 = floor_0(d1);
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  j0 = p2;
  j1 = p1;
  i2 = l0;
  j2 = i64_load((&M0), (u64)(i2 + 136));
  i3 = l0;
  i4 = 144u;
  i3 += i4;
  j3 = i64_load((&M0), (u64)(i3));
  i0 = (*Z_envZ___eqtf2Z_ijjjj)(j0, j1, j2, j3);
  i0 = !(i0);
  if (i0) {goto B11;}
  j0 = p2;
  j1 = p1;
  i0 = ____fpclassifyl(j0, j1);
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = 34u;
  j1 = l2;
  j2 = l3;
  d1 = (*Z_envZ___trunctfdf2Z_djj)(j1, j2);
  d2 = 0;
  i3 = p3;
  i0 = mp_obj_complex_binary_op(i0, d1, d2, i3);
  l1 = i0;
  i0 = l0;
  i1 = 192u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B12:;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 160));
  p1 = j0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 168));
  p2 = j1;
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___eqtf2Z_ijjjj)(j0, j1, j2, j3);
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 56u;
  i0 += i1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 176));
  i2 = l0;
  j2 = i64_load((&M0), (u64)(i2 + 184));
  j3 = p1;
  j4 = p2;
  (*Z_envZ___divtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = l0;
  i2 = 64u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  p2 = j1;
  i64_store((&M0), (u64)(i0 + 184), j1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 56));
  p1 = j0;
  goto B2;
  B11:;
  i0 = l0;
  i1 = 120u;
  i0 += i1;
  j1 = l2;
  j2 = l3;
  d1 = (*Z_envZ___trunctfdf2Z_djj)(j1, j2);
  d2 = l5;
  d1 = pow_0(d1, d2);
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  i1 = l0;
  i2 = 128u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  p2 = j1;
  i64_store((&M0), (u64)(i0 + 184), j1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 120));
  p1 = j0;
  goto B2;
  B10:;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 160));
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 168));
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___eqtf2Z_ijjjj)(j0, j1, j2, j3);
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  i1 = l0;
  i2 = 160u;
  i1 += i2;
  mp_obj_float128_divmod(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 184));
  p1 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 176));
  p2 = j0;
  i0 = 32u;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = 25048u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l1;
  i1 = 24u;
  i0 += i1;
  j1 = p1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 152), i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 168));
  p1 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 160));
  p2 = j0;
  i0 = 32u;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = 25048u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l1;
  i1 = 24u;
  i0 += i1;
  j1 = p1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 156), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 152u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  l1 = i0;
  i0 = l0;
  i1 = 192u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B9:;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 176));
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 184));
  i2 = l0;
  j2 = i64_load((&M0), (u64)(i2 + 160));
  i3 = l0;
  j3 = i64_load((&M0), (u64)(i3 + 168));
  i0 = (*Z_envZ___netf2Z_ijjjj)(j0, j1, j2, j3);
  l1 = i0;
  i0 = l0;
  i1 = 192u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B8:;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 176));
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 184));
  i2 = l0;
  j2 = i64_load((&M0), (u64)(i2 + 160));
  i3 = l0;
  j3 = i64_load((&M0), (u64)(i3 + 168));
  i0 = (*Z_envZ___lttf2Z_ijjjj)(j0, j1, j2, j3);
  l1 = i0;
  i0 = l0;
  i1 = 192u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = l1;
  i3 = 4294967295u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B7:;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 176));
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 184));
  i2 = l0;
  j2 = i64_load((&M0), (u64)(i2 + 160));
  i3 = l0;
  j3 = i64_load((&M0), (u64)(i3 + 168));
  i0 = (*Z_envZ___gttf2Z_ijjjj)(j0, j1, j2, j3);
  l1 = i0;
  i0 = l0;
  i1 = 192u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = l1;
  i3 = 1u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B6:;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 176));
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 184));
  i2 = l0;
  j2 = i64_load((&M0), (u64)(i2 + 160));
  i3 = l0;
  j3 = i64_load((&M0), (u64)(i3 + 168));
  i0 = (*Z_envZ___letf2Z_ijjjj)(j0, j1, j2, j3);
  l1 = i0;
  i0 = l0;
  i1 = 192u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = l1;
  i3 = 0u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B5:;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 176));
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 184));
  i2 = l0;
  j2 = i64_load((&M0), (u64)(i2 + 160));
  i3 = l0;
  j3 = i64_load((&M0), (u64)(i3 + 168));
  i0 = (*Z_envZ___getf2Z_ijjjj)(j0, j1, j2, j3);
  l1 = i0;
  i0 = l0;
  i1 = 192u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = l1;
  i3 = 0u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B4:;
  d0 = l5;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  j1 = l2;
  j2 = l3;
  j3 = 0ull;
  j4 = 0ull;
  i1 = (*Z_envZ___lttf2Z_ijjjj)(j1, j2, j3, j4);
  i2 = 0u;
  i1 = (u32)((s32)i1 < (s32)i2);
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 88u;
  i0 += i1;
  j1 = l2;
  j2 = l3;
  j3 = p1;
  j4 = p2;
  (*Z_envZ___addtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = l0;
  i2 = 96u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  p2 = j1;
  i64_store((&M0), (u64)(i0 + 184), j1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 88));
  p1 = j0;
  goto B2;
  B3:;
  i0 = 36476u;
  i1 = 16790u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B2:;
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 176), j1);
  B1:;
  i0 = 32u;
  i0 = m_malloc(i0);
  l1 = i0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l1;
  i1 = 25048u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 24u;
  i0 += i1;
  j1 = p2;
  i64_store((&M0), (u64)(i0), j1);
  B0:;
  i0 = l0;
  i1 = 192u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_float128(u64 p0, u64 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = 32u;
  i0 = m_malloc(i0);
  l0 = i0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 25048u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  j1 = p1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_float128_get(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33608u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i1 = p1;
  i2 = 24u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 8), j1);
  goto Bfunc;
  B0:;
  i0 = 10299u;
  i1 = 11543u;
  i2 = 180u;
  i3 = 42383u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_get_float128_maybe(u32 p0, u32 p1) {
  u32 l0 = 0, l3 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  f64 d1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  j0 = 0ull;
  l1 = j0;
  i0 = p0;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 30u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  j0 = 4611404543450677248ull;
  l2 = j0;
  goto B0;
  B2:;
  j0 = 0ull;
  l2 = j0;
  goto B0;
  B1:;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B7;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l3;
  i1 = 33608u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l3;
  i1 = 25048u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  B7:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B6:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = p0;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  (*Z_envZ___floatsitfZ_vii)(i0, i1);
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 32));
  l1 = j0;
  goto B0;
  B5:;
  i0 = l0;
  i1 = p0;
  d1 = mp_obj_int_as_float_impl(i1);
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  l1 = j0;
  goto B0;
  B4:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p0;
  d1 = mp_obj_float_get(i1);
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  l1 = j0;
  goto B0;
  B3:;
  i0 = 10299u;
  i1 = 11543u;
  i2 = 180u;
  i3 = 42383u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = p1;
  j1 = l1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 1u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_float128_divmod(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l3 = 0;
  u64 l4 = 0, l5 = 0, l6 = 0, l7 = 0, l8 = 0, l9 = 0, l10 = 0;
  f64 l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1, j2, j3, j4;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 176u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  l1 = i1;
  j1 = i64_load((&M0), (u64)(i1));
  d0 = (*Z_envZ___trunctfdf2Z_djj)(j0, j1);
  l2 = d0;
  i0 = l0;
  i1 = 160u;
  i0 += i1;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = p0;
  i3 = 8u;
  i2 += i3;
  l3 = i2;
  j2 = i64_load((&M0), (u64)(i2));
  d1 = (*Z_envZ___trunctfdf2Z_djj)(j1, j2);
  d2 = l2;
  d1 = fmod_0(d1, d2);
  l2 = d1;
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  i1 = 144u;
  i0 += i1;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = l3;
  j2 = i64_load((&M0), (u64)(i2));
  i3 = l0;
  j3 = i64_load((&M0), (u64)(i3 + 160));
  l4 = j3;
  i4 = l0;
  i5 = 160u;
  i4 += i5;
  i5 = 8u;
  i4 += i5;
  j4 = i64_load((&M0), (u64)(i4));
  l5 = j4;
  (*Z_envZ___subtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = 128u;
  i0 += i1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 144));
  i2 = l0;
  i3 = 144u;
  i2 += i3;
  i3 = 8u;
  i2 += i3;
  j2 = i64_load((&M0), (u64)(i2));
  i3 = p1;
  j3 = i64_load((&M0), (u64)(i3));
  l6 = j3;
  i4 = l1;
  j4 = i64_load((&M0), (u64)(i4));
  l7 = j4;
  (*Z_envZ___divtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = 128u;
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l8 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 128));
  l9 = j0;
  d0 = l2;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  d1 = 0;
  j2 = l6;
  j3 = l7;
  d2 = (*Z_envZ___trunctfdf2Z_djj)(j2, j3);
  d1 = copysign_0(d1, d2);
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l5 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 80));
  l4 = j0;
  j0 = 0ull;
  l10 = j0;
  j0 = l9;
  j1 = l8;
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___netf2Z_ijjjj)(j0, j1, j2, j3);
  i0 = !(i0);
  if (i0) {goto B2;}
  goto B1;
  B3:;
  d0 = l2;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  j1 = l6;
  j2 = l7;
  j3 = 0ull;
  j4 = 0ull;
  i1 = (*Z_envZ___lttf2Z_ijjjj)(j1, j2, j3, j4);
  i2 = 0u;
  i1 = (u32)((s32)i1 < (s32)i2);
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = 96u;
  i0 += i1;
  j1 = l9;
  j2 = l8;
  j3 = 0ull;
  j4 = 13834776580305453056ull;
  (*Z_envZ___addtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = 112u;
  i0 += i1;
  j1 = l6;
  j2 = l7;
  j3 = l4;
  j4 = l5;
  (*Z_envZ___addtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = 96u;
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l8 = j0;
  i0 = l0;
  i1 = 112u;
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l5 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 96));
  l9 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 112));
  l4 = j0;
  B4:;
  j0 = 0ull;
  l10 = j0;
  j0 = l9;
  j1 = l8;
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___netf2Z_ijjjj)(j0, j1, j2, j3);
  if (i0) {goto B1;}
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = p0;
  i3 = 8u;
  i2 += i3;
  j2 = i64_load((&M0), (u64)(i2));
  i3 = p1;
  j3 = i64_load((&M0), (u64)(i3));
  i4 = p1;
  i5 = 8u;
  i4 += i5;
  j4 = i64_load((&M0), (u64)(i4));
  (*Z_envZ___divtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  d1 = 0;
  i2 = l0;
  j2 = i64_load((&M0), (u64)(i2 + 16));
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = 8u;
  i3 += i4;
  j3 = i64_load((&M0), (u64)(i3));
  d2 = (*Z_envZ___trunctfdf2Z_djj)(j2, j3);
  d1 = copysign_0(d1, d2);
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l6 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  l7 = j0;
  goto B0;
  B1:;
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  j1 = l9;
  j2 = l8;
  d1 = (*Z_envZ___trunctfdf2Z_djj)(j1, j2);
  d1 = floor_0(d1);
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  j1 = l9;
  j2 = l8;
  i3 = l0;
  j3 = i64_load((&M0), (u64)(i3 + 64));
  l7 = j3;
  i4 = l0;
  i5 = 64u;
  i4 += i5;
  i5 = 8u;
  i4 += i5;
  j4 = i64_load((&M0), (u64)(i4));
  l6 = j4;
  (*Z_envZ___subtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 48));
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = l10;
  j3 = 4611123068473966592ull;
  i0 = (*Z_envZ___gttf2Z_ijjjj)(j0, j1, j2, j3);
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  j1 = l7;
  j2 = l6;
  j3 = 0ull;
  j4 = 4611404543450677248ull;
  (*Z_envZ___addtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l6 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 32));
  l7 = j0;
  B0:;
  i0 = p0;
  j1 = l7;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  j1 = l6;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  j1 = l5;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  j1 = l4;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 float128_from_bytes(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33004u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = p1;
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  i1 = 16u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i2 = 16u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l1 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  i0 = 32u;
  i0 = m_malloc(i0);
  p1 = i0;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p1;
  i1 = 25048u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  j1 = l1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 14363u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = 14977u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 float128_to_bytes(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 16u;
  i0 += i1;
  i1 = 16u;
  i0 = mp_obj_new_bytes(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_parse_num_integer(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p2;
  i1 = 36u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B2;}
  i0 = p2;
  i1 = 0u;
  i0 = i0 != i1;
  i1 = p2;
  i2 = 2u;
  i1 = (u32)((s32)i1 < (s32)i2);
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = p1;
  i0 += i1;
  p2 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B4;}
  L6: vm_checktime();
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_isspace(i0);
    i0 = !(i0);
    if (i0) {goto B5;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L6;}
    goto B4;
  B5:;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  p1 = i0;
  i1 = 43u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = p1;
  i1 = 45u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = 1u;
  l2 = i0;
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  p0 = i0;
  goto B3;
  B7:;
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  p0 = i0;
  B4:;
  i0 = 0u;
  l2 = i0;
  B3:;
  i0 = p0;
  i1 = p0;
  i2 = p2;
  i3 = p0;
  i2 -= i3;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i1 = mp_parse_num_base(i1, i2, i3);
  i0 += i1;
  l3 = i0;
  p0 = i0;
  i0 = l3;
  i1 = p2;
  i0 = i0 >= i1;
  if (i0) {goto B9;}
  i0 = l3;
  p0 = i0;
  i0 = 0u;
  l1 = i0;
  L10: vm_checktime();
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    i1 = 4294967248u;
    i0 += i1;
    p1 = i0;
    i1 = 255u;
    i0 &= i1;
    i1 = 9u;
    i0 = i0 <= i1;
    if (i0) {goto B12;}
    i0 = l4;
    i1 = 95u;
    i0 = i0 == i1;
    if (i0) {goto B11;}
    i0 = l4;
    i1 = 32u;
    i0 |= i1;
    p1 = i0;
    i1 = 4294967199u;
    i0 += i1;
    i1 = 25u;
    i0 = i0 > i1;
    if (i0) {goto B9;}
    i0 = p1;
    i1 = 4294967209u;
    i0 += i1;
    p1 = i0;
    B12:;
    i0 = p1;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    l4 = i1;
    i0 = i0 >= i1;
    if (i0) {goto B9;}
    i0 = l1;
    i1 = l4;
    i0 = mp_small_int_mul_overflow(i0, i1);
    l5 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    l4 = i0;
    i0 = l5;
    if (i0) {goto B8;}
    i0 = l4;
    i1 = l1;
    i0 *= i1;
    i1 = p1;
    i0 += i1;
    l1 = i0;
    i1 = 1u;
    i0 <<= (i1 & 31);
    i1 = l1;
    i0 ^= i1;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B8;}
    B11:;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L10;}
  B9:;
  i0 = 0u;
  i1 = l1;
  i0 -= i1;
  i1 = l1;
  i2 = l2;
  i0 = i2 ? i0 : i1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l1 = i0;
  i0 = p0;
  i1 = l3;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  goto B1;
  B8:;
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p2;
  i2 = l3;
  i1 -= i2;
  i2 = l2;
  i3 = l4;
  i0 = mp_obj_new_int_from_str_len(i0, i1, i2, i3);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i1 = l3;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = 10324u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B1:;
  i0 = p0;
  i1 = p2;
  i0 = i0 >= i1;
  if (i0) {goto B13;}
  L14: vm_checktime();
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_isspace(i0);
    i0 = !(i0);
    if (i0) {goto B13;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L14;}
  B13:;
  i0 = p0;
  i1 = p2;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37436u;
  i1 = 11557u;
  i2 = l0;
  i0 = mp_obj_new_exception_msg_varg(i0, i1, i2);
  i1 = p3;
  raise_exc(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void raise_exc(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 37256u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 56));
  i3 = 0u;
  mp_obj_exception_add_traceback(i0, i1, i2, i3);
  B0:;
  i0 = p0;
  nlr_jump(i0);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static u32 _mp_parse_num_decimal(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l5 = 0, l6 = 0, l7 = 0, l8 = 0, 
      l9 = 0;
  f64 l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = p1;
  i0 += i1;
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B7;}
  L9: vm_checktime();
    i0 = p0;
    i0 = i32_load8_s((&M0), (u64)(i0));
    i0 = unichar_isspace(i0);
    i0 = !(i0);
    if (i0) {goto B8;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L9;}
    goto B7;
  B8:;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  p1 = i0;
  i1 = 43u;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  i0 = p1;
  i1 = 45u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = 1u;
  l3 = i0;
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  p0 = i0;
  i1 = l1;
  i0 = i0 < i1;
  if (i0) {goto B6;}
  goto B5;
  B10:;
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  p0 = i0;
  B7:;
  i0 = 0u;
  l3 = i0;
  i0 = p0;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B5;}
  B6:;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 32u;
  i0 |= i1;
  p1 = i0;
  i1 = 110u;
  i0 = i0 == i1;
  if (i0) {goto B13;}
  i0 = p1;
  i1 = 105u;
  i0 = i0 != i1;
  if (i0) {goto B11;}
  i0 = p0;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 1));
  i1 = 32u;
  i0 |= i1;
  i1 = 110u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 32u;
  i0 |= i1;
  i1 = 102u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 3u;
  i0 += i1;
  p1 = i0;
  d0 = INFINITY;
  l4 = d0;
  i0 = p0;
  i1 = 7u;
  i0 += i1;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B12;}
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 32u;
  i0 |= i1;
  i1 = 105u;
  i0 = i0 != i1;
  if (i0) {goto B12;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i1 = 32u;
  i0 |= i1;
  i1 = 110u;
  i0 = i0 != i1;
  if (i0) {goto B12;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 5));
  i1 = 32u;
  i0 |= i1;
  i1 = 105u;
  i0 = i0 != i1;
  if (i0) {goto B12;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 6));
  i1 = 32u;
  i0 |= i1;
  i1 = 116u;
  i0 = i0 != i1;
  if (i0) {goto B12;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  i2 = p0;
  i3 = 7u;
  i2 += i3;
  i2 = i32_load8_u((&M0), (u64)(i2));
  i3 = 32u;
  i2 |= i3;
  i3 = 121u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  goto B12;
  B13:;
  i0 = p0;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 1));
  i1 = 32u;
  i0 |= i1;
  i1 = 97u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 32u;
  i0 |= i1;
  i1 = 110u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 3u;
  i0 += i1;
  p1 = i0;
  i0 = 16805u;
  d0 = nan_0(i0);
  l4 = d0;
  B12:;
  d0 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = l4;
  i2 = l3;
  d0 = i2 ? d0 : d1;
  l4 = d0;
  i0 = 0u;
  p2 = i0;
  i0 = p1;
  i1 = l1;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  goto B2;
  B11:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B17;}
  d0 = 0;
  l4 = d0;
  i0 = 0u;
  l2 = i0;
  i0 = 0u;
  l6 = i0;
  i0 = 0u;
  l7 = i0;
  i0 = 0u;
  p2 = i0;
  i0 = p0;
  p1 = i0;
  L18: vm_checktime();
    i0 = p1;
    l5 = i0;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i0 = l5;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l8 = i0;
    i1 = 4294967248u;
    i0 += i1;
    l9 = i0;
    i1 = 255u;
    i0 &= i1;
    i1 = 10u;
    i0 = i0 >= i1;
    if (i0) {goto B25;}
    i0 = p2;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B24;}
    i0 = 2u;
    p2 = i0;
    i0 = l6;
    i1 = 107374180u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B19;}
    i0 = l9;
    i1 = l6;
    i2 = 10u;
    i1 *= i2;
    i0 += i1;
    l6 = i0;
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L18;}
    goto B16;
    B25:;
    i0 = p2;
    if (i0) {goto B23;}
    i0 = l8;
    i1 = 46u;
    i0 = i0 != i1;
    if (i0) {goto B23;}
    i0 = 1u;
    p2 = i0;
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L18;}
    goto B16;
    B24:;
    d0 = l4;
    d1 = 9.9999999999999997e+199;
    i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
    i0 = !(i0);
    if (i0) {goto B22;}
    i0 = l2;
    i1 = p2;
    i2 = 1u;
    i1 = i1 == i2;
    i0 -= i1;
    l2 = i0;
    d0 = l4;
    d1 = 10;
    d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
    i1 = l9;
    d1 = (f64)(i1);
    d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
    l4 = d0;
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L18;}
    goto B16;
    B23:;
    i0 = l8;
    i1 = 32u;
    i0 |= i1;
    l9 = i0;
    i0 = p2;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B26;}
    i0 = l9;
    i1 = 101u;
    i0 = i0 != i1;
    if (i0) {goto B26;}
    i0 = p1;
    i1 = l1;
    i0 = i0 >= i1;
    if (i0) {goto B20;}
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p2 = i0;
    i1 = 43u;
    i0 = i0 == i1;
    if (i0) {goto B21;}
    i0 = p2;
    i1 = 45u;
    i0 = i0 != i1;
    if (i0) {goto B20;}
    i0 = 1u;
    l7 = i0;
    i0 = 2u;
    p2 = i0;
    i0 = l5;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 != i1;
    if (i0) {goto B19;}
    goto B1;
    B26:;
    i0 = l9;
    i1 = 106u;
    i0 = i0 == i1;
    if (i0) {goto B15;}
    i0 = p1;
    i1 = l5;
    i2 = l8;
    i3 = 95u;
    i2 = i2 == i3;
    i0 = i2 ? i0 : i1;
    p1 = i0;
    i0 = l8;
    i1 = 95u;
    i0 = i0 == i1;
    if (i0) {goto B19;}
    goto B16;
    B22:;
    i0 = l2;
    i1 = p2;
    i1 = !(i1);
    i0 += i1;
    l2 = i0;
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L18;}
    goto B16;
    B21:;
    i0 = l5;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    B20:;
    i0 = 2u;
    p2 = i0;
    i0 = p1;
    i1 = l1;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    B19:;
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L18;}
    goto B16;
  B17:;
  d0 = 0;
  l4 = d0;
  i0 = 0u;
  l2 = i0;
  i0 = 0u;
  l6 = i0;
  i0 = 0u;
  l7 = i0;
  i0 = 0u;
  p2 = i0;
  i0 = p0;
  p1 = i0;
  L27: vm_checktime();
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    i0 = p1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l8 = i0;
    i1 = 4294967248u;
    i0 += i1;
    l9 = i0;
    i1 = 255u;
    i0 &= i1;
    i1 = 9u;
    i0 = i0 > i1;
    if (i0) {goto B35;}
    i0 = p2;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B34;}
    i0 = 2u;
    p2 = i0;
    i0 = l6;
    i1 = 107374180u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B36;}
    i0 = l9;
    i1 = l6;
    i2 = 10u;
    i1 *= i2;
    i0 += i1;
    l6 = i0;
    B36:;
    i0 = l5;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L27;}
    goto B16;
    B35:;
    i0 = p2;
    if (i0) {goto B33;}
    i0 = l8;
    i1 = 46u;
    i0 = i0 != i1;
    if (i0) {goto B33;}
    i0 = 1u;
    p2 = i0;
    i0 = l5;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L27;}
    goto B16;
    B34:;
    d0 = l4;
    d1 = 9.9999999999999997e+199;
    i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
    i1 = 1u;
    i0 ^= i1;
    if (i0) {goto B32;}
    i0 = l2;
    i1 = p2;
    i2 = 1u;
    i1 = i1 == i2;
    i0 -= i1;
    l2 = i0;
    d0 = l4;
    d1 = 10;
    d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
    i1 = l9;
    d1 = (f64)(i1);
    d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
    l4 = d0;
    i0 = l5;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L27;}
    goto B16;
    B33:;
    i0 = p2;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B31;}
    i0 = l8;
    i1 = 32u;
    i0 |= i1;
    i1 = 101u;
    i0 = i0 != i1;
    if (i0) {goto B31;}
    i0 = l5;
    i1 = l1;
    i0 = i0 >= i1;
    if (i0) {goto B30;}
    i0 = l5;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p2 = i0;
    i1 = 45u;
    i0 = i0 == i1;
    if (i0) {goto B29;}
    i0 = p2;
    i1 = 43u;
    i0 = i0 != i1;
    if (i0) {goto B30;}
    i0 = 2u;
    p2 = i0;
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 != i1;
    if (i0) {goto B28;}
    goto B1;
    B32:;
    i0 = l2;
    i1 = p2;
    i1 = !(i1);
    i0 += i1;
    l2 = i0;
    i0 = l5;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L27;}
    goto B16;
    B31:;
    i0 = l5;
    i1 = p1;
    i2 = l8;
    i3 = 95u;
    i2 = i2 == i3;
    i0 = i2 ? i0 : i1;
    p1 = i0;
    i0 = l8;
    i1 = 95u;
    i0 = i0 == i1;
    if (i0) {goto B28;}
    goto B16;
    B30:;
    i0 = 2u;
    p2 = i0;
    i0 = l5;
    p1 = i0;
    i1 = l1;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    goto B28;
    B29:;
    i0 = 1u;
    l7 = i0;
    i0 = 2u;
    p2 = i0;
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    B28:;
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L27;}
  B16:;
  i0 = 0u;
  p2 = i0;
  goto B14;
  B15:;
  i0 = 1u;
  p2 = i0;
  B14:;
  i0 = 0u;
  i1 = l6;
  i0 -= i1;
  i1 = l6;
  i2 = l7;
  i3 = 1u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  l5 = i0;
  goto B4;
  B5:;
  d0 = 0;
  l4 = d0;
  i0 = 0u;
  p2 = i0;
  i0 = p0;
  p1 = i0;
  i0 = 0u;
  l5 = i0;
  B4:;
  d0 = l4;
  d1 = 9.9999999999999991e-308;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l4;
  i2 = l5;
  i3 = l2;
  i2 += i3;
  l5 = i2;
  i3 = 4294966989u;
  i2 = (u32)((s32)i2 < (s32)i3);
  l8 = i2;
  d0 = i2 ? d0 : d1;
  l4 = d0;
  i0 = l5;
  i1 = 307u;
  i0 += i1;
  i1 = l5;
  i2 = l8;
  i0 = i2 ? i0 : i1;
  l5 = i0;
  i1 = 4294967274u;
  i0 = i0 < i1;
  if (i0) {goto B38;}
  d0 = l4;
  d1 = 10;
  i2 = 0u;
  i3 = l5;
  i2 -= i3;
  d2 = (f64)(s32)(i2);
  d1 = pow_0(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l4 = d0;
  i0 = p1;
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  goto B37;
  B38:;
  d0 = l4;
  d1 = 10;
  i2 = l5;
  d2 = (f64)(s32)(i2);
  d1 = pow_0(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l4 = d0;
  i0 = p1;
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B37:;
  d0 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = l4;
  i2 = l3;
  d0 = i2 ? d0 : d1;
  l4 = d0;
  i0 = p1;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  B3:;
  L39: vm_checktime();
    i0 = p1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    i0 = unichar_isspace(i0);
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L39;}
  B2:;
  i0 = p1;
  i1 = l1;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B40;}
  d0 = 0;
  d1 = l4;
  i0 = mp_obj_new_complex(d0, d1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B40:;
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B0;}
  d0 = l4;
  d1 = 0;
  i0 = mp_obj_new_complex(d0, d1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 37436u;
  i1 = 12994u;
  i0 = mp_obj_new_exception_msg(i0, i1);
  i1 = p4;
  raise_exc(i0, i1);
  UNREACHABLE;
  B0:;
  i0 = p5;
  i0 = !(i0);
  if (i0) {goto B41;}
  i0 = l0;
  d1 = l4;
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = mp_obj_new_float128(j0, j1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B41:;
  d0 = l4;
  i0 = mp_obj_new_float(d0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_parse_num_decimal(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i4 = p4;
  i5 = 0u;
  i0 = _mp_parse_num_decimal(i0, i1, i2, i3, i4, i5);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_parse_num_decimal_float128(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i4 = p4;
  i5 = 1u;
  i0 = _mp_parse_num_decimal(i0, i1, i2, i3, i4, i5);
  FUNC_EPILOGUE;
  return i0;
}

static u64 mp_obj_name_to_ull(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 25184u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  goto Bfunc;
  B0:;
  i0 = 10359u;
  i1 = 11597u;
  i2 = 46u;
  i3 = 42403u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return j0;
}

static u32 mp_obj_name_to_str_obj(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 2u;
  i0 += i1;
  i1 = 0u;
  i2 = 14u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 25184u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 2u;
  i0 += i1;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i3 = 2u;
  i2 += i3;
  i3 = 14u;
  i1 = n2s(j1, i2, i3);
  i0 = mp_obj_new_str(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 10359u;
  i1 = 11597u;
  i2 = 46u;
  i3 = 42403u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_name_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = l0;
  i1 = 2u;
  i0 += i1;
  i1 = 0u;
  i2 = 14u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  j0 = l1;
  i1 = l0;
  i2 = 2u;
  i1 += i2;
  i2 = 14u;
  i0 = n2s(j0, i1, i2);
  i0 = p0;
  i1 = l0;
  i2 = 2u;
  i1 += i2;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 mp_obj_name_binary_op_extra_cases(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p2;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = 0u;
  l0 = i0;
  i0 = p2;
  i1 = 30u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 3u;
  p2 = i0;
  goto B1;
  B2:;
  i0 = 1u;
  p2 = i0;
  B1:;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i0 = mp_binary_op(i0, i1, i2);
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_name_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 4u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = p1;
  if (i0) {goto B6;}
  j0 = 0ull;
  i0 = mp_obj_new_name_from_ull(j0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B7:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  p2 = i0;
  if (i0) {goto B8;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  B8:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p2;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  p2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33004u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  goto B0;
  B6:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i2 = p3;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i2 = mp_obj_get_int(i2);
  i3 = 0u;
  i0 = mp_parse_num_integer(i0, i1, i2, i3);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B5:;
  i0 = p1;
  i1 = 0u;
  i2 = 16u;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  i1 = 8u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  i0 = mp_obj_new_name_from_ull(j0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = p2;
  if (i0) {goto B10;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 82u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  B10:;
  i0 = 8u;
  i1 = p1;
  i0 = mp_unary_op(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B9:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  p2 = i0;
  i0 = p3;
  i1 = 33004u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B3:;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 8u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p2;
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  i0 = u64_to_name(j0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B2:;
  i0 = 13710u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B1:;
  i0 = 14386u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = p1;
  j1 = obj_to_u64(i1);
  l1 = j1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  j0 = l1;
  i0 = u64_to_name(j0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 name_from_bytes(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33004u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 8u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  i0 = mp_obj_new_name_from_ull(j0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 15658u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = 16048u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 name_to_bytes(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = mp_obj_new_bytes(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static u32 name_to_int(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 25184u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = 0u;
  i1 = 8u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i0 = mp_obj_int_from_bytes_impl(i0, i1, i2);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 10359u;
  i1 = 11597u;
  i2 = 46u;
  i3 = 42403u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_name_to_str(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 25184u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l1 = j0;
  i0 = l0;
  i1 = 2u;
  i0 += i1;
  i1 = 0u;
  i2 = 14u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 2u;
  i0 += i1;
  j1 = l1;
  i2 = l0;
  i3 = 2u;
  i2 += i3;
  i3 = 14u;
  i1 = n2s(j1, i2, i3);
  i0 = mp_obj_new_str(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 10359u;
  i1 = 11597u;
  i2 = 46u;
  i3 = 42403u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u64 mp_obj_int_get_ull(u32 p0) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 0u;
  i2 = 8u;
  i3 = l0;
  i4 = 8u;
  i3 += i4;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l1 = j0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  j0 = l1;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(s64)(s32)(i0);
  goto Bfunc;
  B0:;
  i0 = 10398u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return j0;
}

static u64 obj_to_u64(u32 p0) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  l1 = i0;
  if (i0) {goto B3;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 25184u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B3:;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = l1;
  if (i0) {goto B5;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B5:;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = l1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 82u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B6:;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  j0 = s2n(i0, i1);
  l2 = j0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  j0 = l2;
  goto Bfunc;
  B4:;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(s64)(s32)(i0);
  goto Bfunc;
  B2:;
  i0 = p0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l2 = j0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  j0 = l2;
  goto Bfunc;
  B1:;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p0;
  i1 = 0u;
  i2 = 8u;
  i3 = l0;
  i4 = 8u;
  i3 += i4;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l2 = j0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  j0 = l2;
  goto Bfunc;
  B0:;
  i0 = 16806u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return j0;
}

static void obj_int_to_u128(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 0u;
  i2 = 16u;
  i3 = l0;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l1 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  goto B1;
  B2:;
  i0 = l0;
  i1 = p1;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  j1 = (u64)(s64)(s32)(i1);
  l2 = j1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  j1 = l2;
  j2 = 63ull;
  j1 = (u64)((s64)j1 >> (j2 & 63));
  l1 = j1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  B1:;
  i0 = p0;
  j1 = l2;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = 13020u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void obj_int_to_u256(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = 32u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 0u;
  i2 = 32u;
  i3 = p1;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = p0;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = 13750u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = 14444u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 u64_to_name(u64 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  j0 = p0;
  i0 = mp_obj_new_name_from_ull(j0);
  FUNC_EPILOGUE;
  return i0;
}

static void micropython_raise_exception(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static void pointer_add(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5664));
  i0 = !(i0);
  if (i0) {goto B31;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5668));
  i0 = !(i0);
  if (i0) {goto B30;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5672));
  i0 = !(i0);
  if (i0) {goto B29;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5676));
  i0 = !(i0);
  if (i0) {goto B28;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5680));
  i0 = !(i0);
  if (i0) {goto B27;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5684));
  i0 = !(i0);
  if (i0) {goto B26;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5688));
  i0 = !(i0);
  if (i0) {goto B25;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5692));
  i0 = !(i0);
  if (i0) {goto B24;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5696));
  i0 = !(i0);
  if (i0) {goto B23;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5700));
  i0 = !(i0);
  if (i0) {goto B22;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5704));
  i0 = !(i0);
  if (i0) {goto B21;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5708));
  i0 = !(i0);
  if (i0) {goto B20;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5712));
  i0 = !(i0);
  if (i0) {goto B19;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5716));
  i0 = !(i0);
  if (i0) {goto B18;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5720));
  i0 = !(i0);
  if (i0) {goto B17;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5724));
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5728));
  i0 = !(i0);
  if (i0) {goto B15;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5732));
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5736));
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5740));
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5744));
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5748));
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5752));
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5756));
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5760));
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5764));
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5768));
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5772));
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5776));
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5780));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5784));
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5788));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 10443u;
  micropython_raise_exception(i0);
  goto Bfunc;
  B31:;
  i0 = 5664u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B30:;
  i0 = 5668u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B29:;
  i0 = 5672u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B28:;
  i0 = 5676u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B27:;
  i0 = 5680u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B26:;
  i0 = 5684u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B25:;
  i0 = 5688u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B24:;
  i0 = 5692u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B23:;
  i0 = 5696u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B22:;
  i0 = 5700u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B21:;
  i0 = 5704u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B20:;
  i0 = 5708u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B19:;
  i0 = 5712u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B18:;
  i0 = 5716u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B17:;
  i0 = 5720u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B16:;
  i0 = 5724u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B15:;
  i0 = 5728u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B14:;
  i0 = 5732u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B13:;
  i0 = 5736u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B12:;
  i0 = 5740u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B11:;
  i0 = 5744u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B10:;
  i0 = 5748u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B9:;
  i0 = 5752u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B8:;
  i0 = 5756u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B7:;
  i0 = 5760u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B6:;
  i0 = 5764u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B5:;
  i0 = 5768u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B4:;
  i0 = 5772u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B3:;
  i0 = 5776u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B2:;
  i0 = 5780u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = 5784u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 5788u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 pointer_check(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 1u;
  l0 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5664));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5668));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5672));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5676));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5680));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5684));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5688));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5692));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5696));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5700));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5704));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5708));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5712));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5716));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5720));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5724));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5728));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5732));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5736));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5740));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5744));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5748));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5752));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5756));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5760));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5764));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5768));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5772));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5776));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5780));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5784));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5788));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 11607u;
  micropython_raise_exception(i0);
  i0 = 0u;
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void pointer_free(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5664));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B31;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5668));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B30;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5672));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B29;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5676));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B28;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5680));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B27;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5684));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B26;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5688));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B25;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5692));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B24;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5696));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B23;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5700));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B22;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5704));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B21;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5708));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B20;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5712));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B19;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5716));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B18;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5720));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B17;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5724));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B16;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5728));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B15;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5732));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B14;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5736));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B13;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5740));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5744));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B11;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5748));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5752));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5756));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5760));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5764));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5768));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5772));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5776));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5780));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5784));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5788));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 11607u;
  micropython_raise_exception(i0);
  goto Bfunc;
  B31:;
  i0 = 5664u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B30:;
  i0 = 5668u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B29:;
  i0 = 5672u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B28:;
  i0 = 5676u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B27:;
  i0 = 5680u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B26:;
  i0 = 5684u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B25:;
  i0 = 5688u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B24:;
  i0 = 5692u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B23:;
  i0 = 5696u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B22:;
  i0 = 5700u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B21:;
  i0 = 5704u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B20:;
  i0 = 5708u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B19:;
  i0 = 5712u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B18:;
  i0 = 5716u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B17:;
  i0 = 5720u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B16:;
  i0 = 5724u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B15:;
  i0 = 5728u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B14:;
  i0 = 5732u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B13:;
  i0 = 5736u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B12:;
  i0 = 5740u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B11:;
  i0 = 5744u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B10:;
  i0 = 5748u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B9:;
  i0 = 5752u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B8:;
  i0 = 5756u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B7:;
  i0 = 5760u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B6:;
  i0 = 5764u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B5:;
  i0 = 5768u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B4:;
  i0 = 5772u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B3:;
  i0 = 5776u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B2:;
  i0 = 5780u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = 5784u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 5788u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 action_new(u64 p0, u64 p1, u64 p2, u64 p3, u32 p4, u32 p5) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 40u;
  i0 = malloc_0(i0);
  l1 = i0;
  j1 = p0;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l1;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = p3;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = p2;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l2 = i0;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 24));
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l2;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l2;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l1;
  i1 = 20u;
  i0 += i1;
  l2 = i0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  goto B0;
  B1:;
  i0 = l1;
  i1 = 16u;
  i0 += i1;
  i1 = l0;
  void_std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level_______push_back_slow_path_eosio__permission_level_const___eosio__permission_level_const____(i0, i1);
  B0:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 28));
  l2 = i1;
  i0 -= i1;
  l3 = i0;
  i1 = p5;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 28u;
  i0 += i1;
  l2 = i0;
  i1 = p5;
  i2 = l3;
  i1 -= i2;
  std____1__vector_char__std____1__allocator_char_______append_unsigned_int_(i0, i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  goto B2;
  B3:;
  i0 = l3;
  i1 = p5;
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 32u;
  i0 += i1;
  i1 = l2;
  i2 = p5;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  B2:;
  i0 = l2;
  i1 = p4;
  i2 = p5;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  pointer_add(i0);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static void void_std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level_______push_back_slow_path_eosio__permission_level_const___eosio__permission_level_const____(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i0 -= i1;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  l2 = i0;
  i1 = 1u;
  i0 += i1;
  l3 = i0;
  i1 = 268435456u;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  i0 = 268435455u;
  l4 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l1;
  i0 -= i1;
  l5 = i0;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = 134217726u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = l3;
  i1 = l5;
  i2 = 3u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  l4 = i1;
  i2 = l4;
  i3 = l3;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l4;
  i1 = 268435456u;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  B4:;
  i0 = l4;
  i1 = 4u;
  i0 <<= (i1 & 31);
  i0 = operator_new_unsigned_int_(i0);
  l3 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B0;
  B3:;
  i0 = 0u;
  l4 = i0;
  i0 = 0u;
  l3 = i0;
  goto B0;
  B2:;
  i0 = p0;
  std____1____vector_base_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  B1:;
  (*Z_envZ_abortZ_vv)();
  UNREACHABLE;
  B0:;
  i0 = l3;
  i1 = l2;
  i2 = 4u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l2 = i0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l2;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l2;
  i1 = l0;
  i2 = l1;
  i1 -= i2;
  p1 = i1;
  i0 -= i1;
  l0 = i0;
  i0 = l3;
  i1 = l4;
  i2 = 4u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l4 = i0;
  i0 = l2;
  i1 = 16u;
  i0 += i1;
  l2 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B5;}
  i0 = l0;
  i1 = l1;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  B5:;
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l4;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l1;
  operator_delete_void__(i0);
  B6:;
  FUNC_EPILOGUE;
}

static void action_add_permission(u32 p0, u64 p1, u64 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = pointer_check(i0);
  i0 = l0;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 24));
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l1;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i1 = 20u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  i1 = l0;
  void_std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level_______push_back_slow_path_eosio__permission_level_const___eosio__permission_level_const____(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void action_send(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = pointer_check(i0);
  i0 = l0;
  i1 = p0;
  std____1__vector_char__std____1__allocator_char____eosio__pack_eosio__action__eosio__action_const__(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = p0;
  i1 -= i2;
  (*Z_envZ_send_inlineZ_vii)(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  operator_delete_void__(i0);
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void std____1__vector_char__std____1__allocator_char____eosio__pack_eosio__action__eosio__action_const__(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  u64 l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = 16u;
  l1 = i0;
  i0 = p1;
  i1 = 16u;
  i0 += i1;
  l2 = i0;
  i0 = p1;
  i1 = 20u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  l4 = i1;
  i0 -= i1;
  l5 = i0;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(i0);
  l6 = j0;
  L0: vm_checktime();
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    j0 = l6;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    l6 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L0;}
  i0 = l4;
  i1 = l3;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l5;
  i1 = 4294967280u;
  i0 &= i1;
  i1 = l1;
  i0 += i1;
  l1 = i0;
  B1:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  l3 = i0;
  i1 = l1;
  i0 -= i1;
  i1 = p1;
  i2 = 32u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l4 = i1;
  i0 -= i1;
  l1 = i0;
  i0 = p1;
  i1 = 28u;
  i0 += i1;
  l5 = i0;
  i0 = l4;
  i1 = l3;
  i0 -= i1;
  j0 = (u64)(i0);
  l6 = j0;
  L2: vm_checktime();
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    j0 = l6;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    l6 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L2;}
  i0 = 0u;
  l3 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 0u;
  i2 = l1;
  i1 -= i2;
  std____1__vector_char__std____1__allocator_char_______append_unsigned_int_(i0, i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B3;
  B4:;
  i0 = 0u;
  l1 = i0;
  B3:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l3;
  i1 = l1;
  i0 -= i1;
  p0 = i0;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 16826u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l1;
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 4294967288u;
  i0 += i1;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 16826u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l1;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = l1;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l2;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__permission_level__eosio__datastream_char_____std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level____const__(i0, i1);
  i1 = l5;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____std____1__vector_char__std____1__allocator_char____const__(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void action_free(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = pointer_check(i0);
  i0 = p0;
  pointer_free(i0);
  i0 = p0;
  free_0(i0);
  FUNC_EPILOGUE;
}

static u32 transaction_new(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 60u;
  i0 = malloc_0(i0);
  l0 = i0;
  i1 = p1;
  i32_store16((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p3;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p4;
  i32_store8((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = p5;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  pointer_add(i0);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void transaction_add_action(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = pointer_check(i0);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 44));
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i0 = eosio__action__action_eosio__action_const__(i0, i1);
  i0 = p0;
  i1 = 40u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 40u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 36u;
  i0 += i1;
  i1 = p1;
  void_std____1__vector_eosio__action__std____1__allocator_eosio__action_______push_back_slow_path_eosio__action_const___eosio__action_const____(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 eosio__action__action_eosio__action_const__(u32 p0, u32 p1) {
  u32 l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  u64 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  i0 = p0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l0 = j0;
  i0 = p0;
  i1 = 20u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  j1 = l0;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = p1;
  i1 = 20u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i0 -= i1;
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  l2 = i0;
  i1 = 268435456u;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  i1 = l1;
  i1 = operator_new_unsigned_int_(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 24u;
  i0 += i1;
  i1 = l1;
  i2 = l2;
  i3 = 4u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 20u;
  i0 += i1;
  l2 = i0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 20u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i2 = 16u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i0 -= i1;
  l4 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = l1;
  i1 = l3;
  i2 = l4;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l4;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  B2:;
  i0 = p0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 28), j1);
  i0 = p0;
  i1 = 36u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 28));
  i0 -= i1;
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 28u;
  i0 += i1;
  i1 = l1;
  i1 = operator_new_unsigned_int_(i1);
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 36u;
  i0 += i1;
  i1 = l2;
  i2 = l1;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 32u;
  i0 += i1;
  l1 = i0;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i2 = 28u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l4 = i1;
  i0 -= i1;
  p1 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B3;}
  i0 = l2;
  i1 = l4;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  B3:;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  std____1____vector_base_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  B0:;
  i0 = p0;
  i1 = 28u;
  i0 += i1;
  std____1____vector_base_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void void_std____1__vector_eosio__action__std____1__allocator_eosio__action_______push_back_slow_path_eosio__action_const___eosio__action_const____(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l0 = i1;
  i0 -= i1;
  i1 = 40u;
  i0 = I32_DIV_S(i0, i1);
  l1 = i0;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  i1 = 107374183u;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = 107374182u;
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 40u;
  i0 = I32_DIV_S(i0, i1);
  l0 = i0;
  i1 = 53687090u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = l2;
  i1 = l0;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l3 = i1;
  i2 = l3;
  i3 = l2;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  B3:;
  i0 = l3;
  i1 = 40u;
  i0 *= i1;
  i0 = operator_new_unsigned_int_(i0);
  l0 = i0;
  goto B0;
  B2:;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l0 = i0;
  goto B0;
  B1:;
  i0 = p0;
  std____1____vector_base_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = l3;
  i2 = 40u;
  i1 *= i2;
  i0 += i1;
  l4 = i0;
  i0 = l0;
  i1 = l1;
  i2 = 40u;
  i1 *= i2;
  i0 += i1;
  l5 = i0;
  i1 = p1;
  i0 = eosio__action__action_eosio__action_const__(i0, i1);
  l0 = i0;
  i1 = 40u;
  i0 += i1;
  l6 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l7 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l3;
  i1 = l7;
  i0 -= i1;
  l8 = i0;
  i0 = 0u;
  p1 = i0;
  L6: vm_checktime();
    i0 = l5;
    i1 = p1;
    i0 += i1;
    l3 = i0;
    i1 = 4294967264u;
    i0 += i1;
    i1 = l7;
    i2 = p1;
    i1 += i2;
    l0 = i1;
    i2 = 4294967264u;
    i1 += i2;
    j1 = i64_load((&M0), (u64)(i1));
    i64_store((&M0), (u64)(i0), j1);
    i0 = l3;
    i1 = 4294967256u;
    i0 += i1;
    i1 = l0;
    i2 = 4294967256u;
    i1 += i2;
    j1 = i64_load((&M0), (u64)(i1));
    i64_store((&M0), (u64)(i0), j1);
    i0 = l3;
    i1 = 4294967272u;
    i0 += i1;
    l1 = i0;
    j1 = 0ull;
    i64_store((&M0), (u64)(i0), j1);
    i0 = l3;
    i1 = 4294967280u;
    i0 += i1;
    l2 = i0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = l0;
    i2 = 4294967272u;
    i1 += i2;
    l9 = i1;
    j1 = i64_load((&M0), (u64)(i1));
    i64_store((&M0), (u64)(i0), j1);
    i0 = l2;
    i1 = l0;
    i2 = 4294967280u;
    i1 += i2;
    l1 = i1;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 4294967284u;
    i0 += i1;
    l1 = i0;
    j1 = 0ull;
    i64_store((&M0), (u64)(i0), j1);
    i0 = l3;
    i1 = 4294967292u;
    i0 += i1;
    l3 = i0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = l0;
    i2 = 4294967284u;
    i1 += i2;
    l2 = i1;
    j1 = i64_load((&M0), (u64)(i1));
    i64_store((&M0), (u64)(i0), j1);
    i0 = l9;
    j1 = 0ull;
    i64_store((&M0), (u64)(i0), j1);
    i0 = l3;
    i1 = l0;
    i2 = 4294967292u;
    i1 += i2;
    l0 = i1;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l2;
    j1 = 0ull;
    i64_store((&M0), (u64)(i0), j1);
    i0 = l8;
    i1 = p1;
    i2 = 4294967256u;
    i1 += i2;
    p1 = i1;
    i0 = i0 != i1;
    if (i0) {goto L6;}
  i0 = l5;
  i1 = p1;
  i0 += i1;
  l0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B4;
  B5:;
  i0 = l3;
  l1 = i0;
  B4:;
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l6;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l4;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = l1;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  L8: vm_checktime();
    i0 = l3;
    i1 = 4294967284u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l0 = i0;
    i0 = !(i0);
    if (i0) {goto B9;}
    i0 = l3;
    i1 = 4294967288u;
    i0 += i1;
    i1 = l0;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    operator_delete_void__(i0);
    B9:;
    i0 = l3;
    i1 = 4294967256u;
    i0 += i1;
    l0 = i0;
    i0 = l3;
    i1 = 4294967272u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i0 = !(i0);
    if (i0) {goto B10;}
    i0 = l3;
    i1 = 4294967276u;
    i0 += i1;
    i1 = p1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    operator_delete_void__(i0);
    B10:;
    i0 = l0;
    l3 = i0;
    i0 = l1;
    i1 = l0;
    i0 = i0 != i1;
    if (i0) {goto L8;}
  B7:;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l1;
  operator_delete_void__(i0);
  B11:;
  FUNC_EPILOGUE;
}

static void transaction_add_context_free_action(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = pointer_check(i0);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 32));
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i0 = eosio__action__action_eosio__action_const__(i0, i1);
  i0 = p0;
  i1 = 28u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 40u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 24u;
  i0 += i1;
  i1 = p1;
  void_std____1__vector_eosio__action__std____1__allocator_eosio__action_______push_back_slow_path_eosio__action_const___eosio__action_const____(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void transaction_send(u32 p0, u64 p1, u64 p2, u64 p3, u32 p4) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p0;
  i0 = pointer_check(i0);
  i0 = l0;
  i1 = p0;
  std____1__vector_char__std____1__allocator_char____eosio__pack_eosio__transaction__eosio__transaction_const__(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  j1 = p3;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2));
  p0 = i2;
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  i4 = p0;
  i3 -= i4;
  i4 = p4;
  (*Z_envZ_send_deferredZ_vijiii)(i0, j1, i2, i3, i4);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  operator_delete_void__(i0);
  B0:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void std____1__vector_char__std____1__allocator_char____eosio__pack_eosio__transaction__eosio__transaction_const__(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p1;
  i0 = eosio__datastream_unsigned_int___eosio__operator___eosio__datastream_unsigned_int____eosio__datastream_unsigned_int____eosio__transaction_const__(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = l2;
  std____1__vector_char__std____1__allocator_char_______append_unsigned_int_(i0, i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  goto B0;
  B1:;
  i0 = 0u;
  p0 = i0;
  B0:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p1;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__transaction_header_const__(i0, i1);
  i0 = l0;
  i1 = p1;
  i2 = 24u;
  i1 += i2;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__action__eosio__datastream_char_____std____1__vector_eosio__action__std____1__allocator_eosio__action____const__(i0, i1);
  i1 = p1;
  i2 = 36u;
  i1 += i2;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__action__eosio__datastream_char_____std____1__vector_eosio__action__std____1__allocator_eosio__action____const__(i0, i1);
  i1 = p1;
  i2 = 48u;
  i1 += i2;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char____std____1__tuple_unsigned_short__std____1__vector_char__std____1__allocator_char________eosio__datastream_char_____std____1__vector_std____1__tuple_unsigned_short__std____1__vector_char__std____1__allocator_char_______std____1__allocator_std____1__tuple_unsigned_short__std____1__vector_char__std____1__allocator_char__________const__(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 eosio__datastream_unsigned_int___eosio__operator___eosio__datastream_unsigned_int____eosio__datastream_unsigned_int____eosio__transaction_const__(u32 p0, u32 p1) {
  u32 l0 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l0 = i1;
  i2 = 10u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 11u;
  i0 += i1;
  l0 = i0;
  i0 = p1;
  j0 = i64_load32_u((&M0), (u64)(i0 + 12));
  l1 = j0;
  L0: vm_checktime();
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    j0 = l1;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    l1 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L0;}
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  j0 = i64_load32_u((&M0), (u64)(i0 + 20));
  l1 = j0;
  L1: vm_checktime();
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    j0 = l1;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    l1 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L1;}
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 28u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 24));
  l3 = i1;
  i0 -= i1;
  i1 = 40u;
  i0 = I32_DIV_S(i0, i1);
  j0 = (u64)(i0);
  l1 = j0;
  L2: vm_checktime();
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    j0 = l1;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    l1 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L2;}
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = l2;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  L4: vm_checktime();
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    l0 = i0;
    i0 = l3;
    i1 = 20u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1 + 16));
    l5 = i1;
    i0 -= i1;
    l6 = i0;
    i1 = 4u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    j0 = (u64)(i0);
    l1 = j0;
    L5: vm_checktime();
      i0 = l0;
      i1 = 1u;
      i0 += i1;
      l0 = i0;
      j0 = l1;
      j1 = 7ull;
      j0 >>= (j1 & 63);
      l1 = j0;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto L5;}
    i0 = l5;
    i1 = l4;
    i0 = i0 == i1;
    if (i0) {goto B6;}
    i0 = l6;
    i1 = 4294967280u;
    i0 &= i1;
    i1 = l0;
    i0 += i1;
    l0 = i0;
    B6:;
    i0 = l0;
    i1 = l3;
    i2 = 32u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l4 = i1;
    i0 += i1;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1 + 28));
    l5 = i1;
    i0 -= i1;
    l0 = i0;
    i0 = l4;
    i1 = l5;
    i0 -= i1;
    j0 = (u64)(i0);
    l1 = j0;
    L7: vm_checktime();
      i0 = l0;
      i1 = 1u;
      i0 += i1;
      l0 = i0;
      j0 = l1;
      j1 = 7ull;
      j0 >>= (j1 & 63);
      l1 = j0;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto L7;}
    i0 = l3;
    i1 = 40u;
    i0 += i1;
    l3 = i0;
    i1 = l2;
    i0 = i0 != i1;
    if (i0) {goto L4;}
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  B3:;
  i0 = p1;
  i1 = 40u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 36));
  l3 = i1;
  i0 -= i1;
  i1 = 40u;
  i0 = I32_DIV_S(i0, i1);
  j0 = (u64)(i0);
  l1 = j0;
  L8: vm_checktime();
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    j0 = l1;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    l1 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L8;}
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = l2;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  L10: vm_checktime();
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    l0 = i0;
    i0 = l3;
    i1 = 20u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1 + 16));
    l5 = i1;
    i0 -= i1;
    l6 = i0;
    i1 = 4u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    j0 = (u64)(i0);
    l1 = j0;
    L11: vm_checktime();
      i0 = l0;
      i1 = 1u;
      i0 += i1;
      l0 = i0;
      j0 = l1;
      j1 = 7ull;
      j0 >>= (j1 & 63);
      l1 = j0;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto L11;}
    i0 = l5;
    i1 = l4;
    i0 = i0 == i1;
    if (i0) {goto B12;}
    i0 = l6;
    i1 = 4294967280u;
    i0 &= i1;
    i1 = l0;
    i0 += i1;
    l0 = i0;
    B12:;
    i0 = l0;
    i1 = l3;
    i2 = 32u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l4 = i1;
    i0 += i1;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1 + 28));
    l5 = i1;
    i0 -= i1;
    l0 = i0;
    i0 = l4;
    i1 = l5;
    i0 -= i1;
    j0 = (u64)(i0);
    l1 = j0;
    L13: vm_checktime();
      i0 = l0;
      i1 = 1u;
      i0 += i1;
      l0 = i0;
      j0 = l1;
      j1 = 7ull;
      j0 >>= (j1 & 63);
      l1 = j0;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto L13;}
    i0 = l3;
    i1 = 40u;
    i0 += i1;
    l3 = i0;
    i1 = l2;
    i0 = i0 != i1;
    if (i0) {goto L10;}
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  B9:;
  i0 = p1;
  i1 = 52u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l6 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 48));
  l3 = i1;
  i0 -= i1;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(i0);
  l1 = j0;
  L14: vm_checktime();
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    j0 = l1;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    l1 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L14;}
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = l6;
  i0 = i0 == i1;
  if (i0) {goto B15;}
  L16: vm_checktime();
    i0 = l0;
    i1 = l3;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l4 = i1;
    i0 += i1;
    i1 = 2u;
    i0 += i1;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1 + 4));
    l5 = i1;
    i0 -= i1;
    l0 = i0;
    i0 = l4;
    i1 = l5;
    i0 -= i1;
    j0 = (u64)(i0);
    l1 = j0;
    L17: vm_checktime();
      i0 = l0;
      i1 = 1u;
      i0 += i1;
      l0 = i0;
      j0 = l1;
      j1 = 7ull;
      j0 >>= (j1 & 63);
      l1 = j0;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto L17;}
    i0 = l3;
    i1 = 16u;
    i0 += i1;
    l3 = i0;
    i1 = l6;
    i0 = i0 != i1;
    if (i0) {goto L16;}
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  B15:;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__transaction_header_const__(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l4 = 0, l5 = 0;
  u64 l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 16826u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l1;
  i0 -= i1;
  i1 = 1u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 16826u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i2 = 2u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i1 += i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l1;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 16826u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  j0 = i64_load32_u((&M0), (u64)(i0 + 12));
  l3 = j0;
  L0: vm_checktime();
    j0 = l3;
    i0 = (u32)(j0);
    l1 = i0;
    i0 = l0;
    j1 = l3;
    j2 = 7ull;
    j1 >>= (j2 & 63);
    l3 = j1;
    j2 = 0ull;
    i1 = j1 != j2;
    l4 = i1;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i2 = l1;
    i3 = 127u;
    i2 &= i3;
    i1 |= i2;
    i32_store8((&M0), (u64)(i0 + 14), i1);
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    i1 = 16826u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i2 = 14u;
    i1 += i2;
    i2 = 1u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l1;
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    l2 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l4;
    if (i0) {goto L0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l5 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l2;
  i0 -= i1;
  i1 = 0u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 16826u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i2 = 16u;
  i1 += i2;
  i2 = 1u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  j0 = i64_load32_u((&M0), (u64)(i0 + 20));
  l3 = j0;
  L1: vm_checktime();
    j0 = l3;
    i0 = (u32)(j0);
    l4 = i0;
    i0 = l0;
    j1 = l3;
    j2 = 7ull;
    j1 >>= (j2 & 63);
    l3 = j1;
    j2 = 0ull;
    i1 = j1 != j2;
    p1 = i1;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i2 = l4;
    i3 = 127u;
    i2 &= i3;
    i1 |= i2;
    i32_store8((&M0), (u64)(i0 + 15), i1);
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    i1 = 16826u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i2 = 15u;
    i1 += i2;
    i2 = 1u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l1;
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    l2 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    if (i0) {goto L1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__action__eosio__datastream_char_____std____1__vector_eosio__action__std____1__allocator_eosio__action____const__(u32 p0, u32 p1) {
  u32 l0 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i0 -= i1;
  i1 = 40u;
  i0 = I32_DIV_S(i0, i1);
  j0 = (u64)(i0);
  l1 = j0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  L0: vm_checktime();
    j0 = l1;
    i0 = (u32)(j0);
    l5 = i0;
    i0 = l0;
    j1 = l1;
    j2 = 7ull;
    j1 >>= (j2 & 63);
    l1 = j1;
    j2 = 0ull;
    i1 = j1 != j2;
    l6 = i1;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i2 = l5;
    i3 = 127u;
    i2 &= i3;
    i1 |= i2;
    i32_store8((&M0), (u64)(i0 + 15), i1);
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    i1 = 16826u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i2 = 15u;
    i1 += i2;
    i2 = 1u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    l2 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    if (i0) {goto L0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l5 = i0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  L2: vm_checktime();
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    l6 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 7u;
    i0 = (u32)((s32)i0 > (s32)i1);
    i1 = 16826u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i2 = 8u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 8u;
    i1 += i2;
    l2 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 7u;
    i0 = (u32)((s32)i0 > (s32)i1);
    i1 = 16826u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i2 = 8u;
    i1 += i2;
    i2 = 8u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 8u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = l5;
    i2 = 16u;
    i1 += i2;
    i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__permission_level__eosio__datastream_char_____std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level____const__(i0, i1);
    i1 = l5;
    i2 = 28u;
    i1 += i2;
    i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____std____1__vector_char__std____1__allocator_char____const__(i0, i1);
    i0 = l5;
    i1 = 40u;
    i0 += i1;
    l5 = i0;
    i1 = l3;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    goto L2;
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char____std____1__tuple_unsigned_short__std____1__vector_char__std____1__allocator_char________eosio__datastream_char_____std____1__vector_std____1__tuple_unsigned_short__std____1__vector_char__std____1__allocator_char_______std____1__allocator_std____1__tuple_unsigned_short__std____1__vector_char__std____1__allocator_char__________const__(u32 p0, u32 p1) {
  u32 l0 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i0 -= i1;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(i0);
  l1 = j0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  L0: vm_checktime();
    j0 = l1;
    i0 = (u32)(j0);
    l4 = i0;
    i0 = l0;
    j1 = l1;
    j2 = 7ull;
    j1 >>= (j2 & 63);
    l1 = j1;
    j2 = 0ull;
    i1 = j1 != j2;
    l5 = i1;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i2 = l4;
    i3 = 127u;
    i2 &= i3;
    i1 |= i2;
    i32_store8((&M0), (u64)(i0 + 15), i1);
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    i1 = 16826u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    l4 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i2 = 15u;
    i1 += i2;
    i2 = 1u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    l2 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    if (i0) {goto L0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l5 = i1;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  L2: vm_checktime();
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 1u;
    i0 = (u32)((s32)i0 > (s32)i1);
    i1 = 16826u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    l2 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l4;
    i2 = 2u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l2;
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 2u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = l4;
    i2 = 4u;
    i1 += i2;
    i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____std____1__vector_char__std____1__allocator_char____const__(i0, i1);
    i0 = l4;
    i1 = 16u;
    i0 += i1;
    l4 = i0;
    i1 = l5;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    goto L2;
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 transaction_cancel(u64 p0, u64 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i0 = (*Z_envZ_cancel_deferredZ_ii)(i0);
  l1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static void transaction_free(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = pointer_check(i0);
  i0 = p0;
  pointer_free(i0);
  i0 = p0;
  free_0(i0);
  FUNC_EPILOGUE;
}

static void set_blockchain_parameters(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 112u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = l0;
  i2 = 104u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p0;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__blockchain_parameters_const__(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2));
  i1 -= i2;
  (*Z_envZ_set_blockchain_parameters_packedZ_vii)(i0, i1);
  i0 = l0;
  i1 = 112u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__blockchain_parameters_const__(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 -= i1;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11626u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 8u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11626u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11626u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 12u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11626u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 16u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11626u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 20u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11626u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 24u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11626u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 28u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11626u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 32u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11626u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 36u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11626u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 40u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11626u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 44u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11626u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 64u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11626u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 68u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11626u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 72u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11626u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 76u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 1u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11626u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 80u;
  i1 += i2;
  i2 = 2u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 1u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11626u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 82u;
  i1 += i2;
  i2 = 2u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static void get_blockchain_parameters(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 112u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 88u;
  i0 = (*Z_envZ_get_blockchain_parameters_packedZ_iii)(i0, i1);
  l1 = i0;
  i1 = 89u;
  i0 = i0 < i1;
  i1 = 10465u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  i1 = l1;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p0;
  i0 = eosio__datastream_char_const____eosio__operator___eosio__datastream_char_const_____eosio__datastream_char_const_____eosio__blockchain_parameters__(i0, i1);
  i0 = l0;
  i1 = 112u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 eosio__datastream_char_const____eosio__operator___eosio__datastream_char_const_____eosio__datastream_char_const_____eosio__blockchain_parameters__(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 -= i1;
  i1 = 7u;
  i0 = i0 > i1;
  i1 = 16832u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 8u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 16832u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 16832u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 16832u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 16u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 16832u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 20u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 16832u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 16832u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 28u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 16832u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 32u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 16832u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 36u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 16832u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 40u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 16832u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 44u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 16832u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 64u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 16832u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 68u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 16832u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 72u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 16832u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 76u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 1u;
  i0 = i0 > i1;
  i1 = 16832u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 80u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 1u;
  i0 = i0 > i1;
  i1 = 16832u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 82u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static f64 rint_0(f64 p0) {
  u32 l1 = 0;
  u64 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i2;
  u64 j0, j1, j2, j3;
  f64 d0, d1, d2;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 9218868437227405312ull;
  j0 &= j1;
  j1 = 4836865999795912704ull;
  i0 = j0 > j1;
  if (i0) {goto B0;}
  d0 = p0;
  d1 = -4503599627370496;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 4503599627370496;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p0;
  d2 = 4503599627370496;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = -4503599627370496;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  j2 = l0;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  l1 = i2;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B0;}
  d0 = -0.0;
  d1 = 0;
  i2 = l1;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  B0:;
  d0 = p0;
  FUNC_EPILOGUE;
  return d0;
}

static f64 nearbyint_0(f64 p0) {
  FUNC_PROLOGUE;
  f64 d0;
  d0 = p0;
  d0 = rint_0(d0);
  FUNC_EPILOGUE;
  return d0;
}

static u32 mp_call_method_self_n_kw(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p3;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = p2;
  i0 += i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  l0 = i0;
  i1 = 4u;
  i0 += i1;
  i0 = mp_pystack_alloc(i0);
  l1 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = p4;
  i2 = l0;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p2;
  i2 = 1u;
  i1 += i2;
  i2 = p3;
  i3 = l1;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  p2 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5168));
  i1 = l1;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5176));
  i1 = l1;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 5176), i1);
  i0 = p2;
  goto Bfunc;
  B1:;
  i0 = 10485u;
  i1 = 11632u;
  i2 = 44u;
  i3 = 42335u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = 16837u;
  i1 = 11632u;
  i2 = 45u;
  i3 = 42335u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_bound_meth(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 12u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 25352u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 bound_meth_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = p2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = p1;
  i0 += i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  l2 = i0;
  i1 = 4u;
  i0 += i1;
  i0 = mp_pystack_alloc(i0);
  p0 = i0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p3;
  i2 = l2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = p1;
  i2 = 1u;
  i1 += i2;
  i2 = p2;
  i3 = p0;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  p1 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5168));
  i1 = p0;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5176));
  i1 = p0;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5176), i1);
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 10485u;
  i1 = 11632u;
  i2 = 44u;
  i3 = 42335u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = 16837u;
  i1 = 11632u;
  i2 = 45u;
  i3 = 42335u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void bound_meth_attr(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B0;}
  goto Bfunc;
  B0:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = p2;
  mp_load_method_maybe(i0, i1, i2);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 strstr_0(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0, l15 = 0, 
      l16 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  u64 j1;
  i0 = g0;
  i1 = 1056u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load8_s((&M0), (u64)(i0));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = p0;
  i1 = l1;
  i0 = strchr_0(i0, i1);
  l1 = i0;
  i0 = 0u;
  p0 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = p1;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B19;}
  i0 = l1;
  i0 = i32_load8_u((&M0), (u64)(i0 + 1));
  l4 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p1;
  i1 = 2u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l5 = i0;
  i0 = !(i0);
  if (i0) {goto B17;}
  i0 = l1;
  i0 = i32_load8_u((&M0), (u64)(i0 + 2));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0 + 3));
  l7 = i0;
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = l1;
  i0 = i32_load8_u((&M0), (u64)(i0 + 3));
  l8 = i0;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B15;}
  i0 = l0;
  i1 = 1048u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 1040u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 1032), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 1024), j1);
  i0 = 4294967295u;
  l8 = i0;
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = 0u;
  p0 = i0;
  i0 = 0u;
  l4 = i0;
  L20: vm_checktime();
    i0 = l1;
    i1 = l4;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l0;
    i1 = l6;
    i2 = 255u;
    i1 &= i2;
    l7 = i1;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = l4;
    i2 = 1u;
    i1 += i2;
    l5 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 1024u;
    i0 += i1;
    i1 = l7;
    i2 = 3u;
    i1 >>= (i2 & 31);
    i2 = 28u;
    i1 &= i2;
    i0 += i1;
    l7 = i0;
    i1 = l7;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i3 = l6;
    i4 = 31u;
    i3 &= i4;
    i2 <<= (i3 & 31);
    i1 |= i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = l4;
    i0 += i1;
    l6 = i0;
    i0 = l5;
    l4 = i0;
    i0 = l6;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l6 = i0;
    if (i0) {goto L20;}
  i0 = 1u;
  l7 = i0;
  i0 = l5;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B13;}
  i0 = 4294967295u;
  l8 = i0;
  i0 = 0u;
  l6 = i0;
  i0 = l3;
  l2 = i0;
  i0 = 1u;
  l4 = i0;
  i0 = 1u;
  l7 = i0;
  i0 = 1u;
  p0 = i0;
  goto B18;
  B19:;
  i0 = l1;
  p0 = i0;
  i0 = 15u;
  l9 = i0;
  goto B0;
  B18:;
  L22: vm_checktime();
    i0 = p1;
    i1 = l8;
    i2 = p0;
    i1 += i2;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l10 = i0;
    i1 = l2;
    i2 = 255u;
    i1 &= i2;
    l2 = i1;
    i0 = i0 != i1;
    if (i0) {goto B26;}
    i0 = p0;
    i1 = l7;
    i0 = i0 != i1;
    if (i0) {goto B25;}
    i0 = 1u;
    p0 = i0;
    i0 = 1u;
    i1 = l6;
    i2 = l7;
    i1 += i2;
    l6 = i1;
    i0 += i1;
    l4 = i0;
    i1 = l5;
    i0 = i0 < i1;
    if (i0) {goto B23;}
    goto B21;
    B26:;
    i0 = l10;
    i1 = l2;
    i0 = i0 <= i1;
    if (i0) {goto B24;}
    i0 = l4;
    i1 = l8;
    i0 -= i1;
    l7 = i0;
    i0 = 1u;
    p0 = i0;
    i0 = 1u;
    i1 = l4;
    l6 = i1;
    i0 += i1;
    l4 = i0;
    i1 = l5;
    i0 = i0 < i1;
    if (i0) {goto B23;}
    goto B21;
    B25:;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l6;
    i0 += i1;
    l4 = i0;
    i1 = l5;
    i0 = i0 < i1;
    if (i0) {goto B23;}
    goto B21;
    B24:;
    i0 = 1u;
    p0 = i0;
    i0 = l6;
    l8 = i0;
    i0 = 1u;
    l7 = i0;
    i0 = 1u;
    i1 = l6;
    i2 = 1u;
    i1 += i2;
    l6 = i1;
    i0 += i1;
    l4 = i0;
    i1 = l5;
    i0 = i0 >= i1;
    if (i0) {goto B21;}
    B23:;
    i0 = p1;
    i1 = l4;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l2 = i0;
    goto L22;
  B21:;
  i0 = 4294967295u;
  l2 = i0;
  i0 = 0u;
  l6 = i0;
  i0 = 1u;
  l4 = i0;
  i0 = 1u;
  l10 = i0;
  i0 = 1u;
  p0 = i0;
  L27: vm_checktime();
    i0 = p1;
    i1 = l2;
    i2 = p0;
    i1 += i2;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l11 = i0;
    i1 = l3;
    i2 = 255u;
    i1 &= i2;
    l3 = i1;
    i0 = i0 != i1;
    if (i0) {goto B31;}
    i0 = p0;
    i1 = l10;
    i0 = i0 != i1;
    if (i0) {goto B30;}
    i0 = 1u;
    p0 = i0;
    i0 = 1u;
    i1 = l6;
    i2 = l10;
    i1 += i2;
    l6 = i1;
    i0 += i1;
    l4 = i0;
    i1 = l5;
    i0 = i0 < i1;
    if (i0) {goto B28;}
    goto B12;
    B31:;
    i0 = l11;
    i1 = l3;
    i0 = i0 >= i1;
    if (i0) {goto B29;}
    i0 = l4;
    i1 = l2;
    i0 -= i1;
    l10 = i0;
    i0 = 1u;
    p0 = i0;
    i0 = 1u;
    i1 = l4;
    l6 = i1;
    i0 += i1;
    l4 = i0;
    i1 = l5;
    i0 = i0 < i1;
    if (i0) {goto B28;}
    goto B12;
    B30:;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l6;
    i0 += i1;
    l4 = i0;
    i1 = l5;
    i0 = i0 < i1;
    if (i0) {goto B28;}
    goto B12;
    B29:;
    i0 = 1u;
    p0 = i0;
    i0 = l6;
    l2 = i0;
    i0 = 1u;
    l10 = i0;
    i0 = 1u;
    i1 = l6;
    i2 = 1u;
    i1 += i2;
    l6 = i1;
    i0 += i1;
    l4 = i0;
    i1 = l5;
    i0 = i0 >= i1;
    if (i0) {goto B12;}
    B28:;
    i0 = p1;
    i1 = l4;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l3 = i0;
    goto L27;
  B17:;
  i0 = l1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 8u;
  i0 <<= (i1 & 31);
  i1 = l4;
  i0 |= i1;
  l4 = i0;
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 8u;
  i0 <<= (i1 & 31);
  i1 = l3;
  i0 |= i1;
  l5 = i0;
  L33: vm_checktime();
    i0 = l4;
    i1 = 65535u;
    i0 &= i1;
    p1 = i0;
    i1 = l5;
    i0 = i0 == i1;
    if (i0) {goto B32;}
    i0 = p1;
    i1 = 8u;
    i0 <<= (i1 & 31);
    i1 = l1;
    i2 = 2u;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    p1 = i1;
    i0 |= i1;
    l4 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = p1;
    if (i0) {goto L33;}
    goto B5;
  B32:;
  i0 = l0;
  i1 = 1056u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B16:;
  i0 = l6;
  i1 = 8u;
  i0 <<= (i1 & 31);
  i1 = l4;
  i2 = 16u;
  i1 <<= (i2 & 31);
  i0 |= i1;
  i1 = l1;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i2 = 24u;
  i1 <<= (i2 & 31);
  i0 |= i1;
  p0 = i0;
  i1 = l3;
  i2 = 16u;
  i1 <<= (i2 & 31);
  i2 = p1;
  i2 = i32_load8_u((&M0), (u64)(i2));
  i3 = 24u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i2 = l5;
  i3 = 8u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l5 = i1;
  i0 = i0 != i1;
  if (i0) {goto B34;}
  i0 = l0;
  i1 = 1056u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B34:;
  L36: vm_checktime();
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i0 = l1;
    i1 = 3u;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B35;}
    i0 = p1;
    l1 = i0;
    i0 = p0;
    i1 = l4;
    i0 |= i1;
    i1 = 8u;
    i0 <<= (i1 & 31);
    p0 = i0;
    i1 = l5;
    i0 = i0 != i1;
    if (i0) {goto L36;}
  B35:;
  i0 = l0;
  i1 = 1056u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 0u;
  i2 = l4;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B15:;
  i0 = l6;
  i1 = 8u;
  i0 <<= (i1 & 31);
  i1 = l4;
  i2 = 16u;
  i1 <<= (i2 & 31);
  i0 |= i1;
  i1 = l8;
  i0 |= i1;
  i1 = l1;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i2 = 24u;
  i1 <<= (i2 & 31);
  i0 |= i1;
  p0 = i0;
  i1 = l5;
  i2 = 8u;
  i1 <<= (i2 & 31);
  i2 = l3;
  i3 = 16u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i2 = l7;
  i1 |= i2;
  i2 = p1;
  i2 = i32_load8_u((&M0), (u64)(i2));
  i3 = 24u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l4 = i1;
  i0 = i0 != i1;
  if (i0) {goto B11;}
  i0 = l0;
  i1 = 1056u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B14:;
  i0 = 0u;
  l5 = i0;
  i0 = 1u;
  l7 = i0;
  B13:;
  i0 = 4294967295u;
  l2 = i0;
  i0 = 1u;
  l10 = i0;
  B12:;
  i0 = p1;
  i1 = p1;
  i2 = l10;
  i3 = l7;
  i4 = l2;
  i5 = 1u;
  i4 += i5;
  i5 = l8;
  i6 = 1u;
  i5 += i6;
  i4 = i4 > i5;
  p0 = i4;
  i2 = i4 ? i2 : i3;
  l12 = i2;
  i1 += i2;
  i2 = l2;
  i3 = l8;
  i4 = p0;
  i2 = i4 ? i2 : i3;
  l13 = i2;
  i3 = 1u;
  i2 += i3;
  l11 = i2;
  i0 = memcmp_0(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = l13;
  i1 = l5;
  i2 = l13;
  i1 -= i2;
  i2 = 4294967295u;
  i1 += i2;
  p0 = i1;
  i2 = l13;
  i3 = p0;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  i1 = 1u;
  i0 += i1;
  l12 = i0;
  i0 = l5;
  i1 = 4294967295u;
  i0 += i1;
  l7 = i0;
  i0 = l5;
  i1 = 63u;
  i0 |= i1;
  l10 = i0;
  goto B1;
  B11:;
  L38: vm_checktime();
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p1 = i0;
    i0 = !(i0);
    if (i0) {goto B37;}
    i0 = p0;
    i1 = 8u;
    i0 <<= (i1 & 31);
    i1 = p1;
    i0 |= i1;
    p0 = i0;
    i1 = l4;
    i0 = i0 != i1;
    if (i0) {goto L38;}
  B37:;
  i0 = l0;
  i1 = 1056u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  i1 = 0u;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B10:;
  i0 = l5;
  i1 = 4294967295u;
  i0 += i1;
  l7 = i0;
  i0 = l5;
  i1 = 63u;
  i0 |= i1;
  l10 = i0;
  i0 = l5;
  i1 = l12;
  i0 -= i1;
  l14 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 1u;
  i0 += i1;
  l15 = i0;
  i0 = 0u;
  i1 = l13;
  i0 -= i1;
  l16 = i0;
  i0 = 0u;
  l8 = i0;
  i0 = l1;
  p0 = i0;
  L40: vm_checktime();
    i0 = l1;
    i1 = p0;
    i0 -= i1;
    i1 = l5;
    i0 = i0 >= i1;
    if (i0) {goto B41;}
    i0 = l1;
    i1 = 0u;
    i2 = l10;
    i0 = memchr_0(i0, i1, i2);
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B42;}
    i0 = l4;
    l1 = i0;
    i0 = l4;
    i1 = p0;
    i0 -= i1;
    i1 = l5;
    i0 = i0 >= i1;
    if (i0) {goto B41;}
    goto B39;
    B42:;
    i0 = l1;
    i1 = l10;
    i0 += i1;
    l1 = i0;
    B41:;
    i0 = 1u;
    i1 = p0;
    i2 = l7;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    l4 = i1;
    i2 = 31u;
    i1 &= i2;
    i0 <<= (i1 & 31);
    i1 = l0;
    i2 = 1024u;
    i1 += i2;
    i2 = l4;
    i3 = 3u;
    i2 >>= (i3 & 31);
    i3 = 28u;
    i2 &= i3;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B44;}
    i0 = l5;
    i1 = l0;
    i2 = l4;
    i3 = 2u;
    i2 <<= (i3 & 31);
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 -= i1;
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B45;}
    i0 = l14;
    i1 = l4;
    i2 = l4;
    i3 = l12;
    i2 = i2 < i3;
    i0 = i2 ? i0 : i1;
    i1 = l4;
    i2 = l8;
    i0 = i2 ? i0 : i1;
    l4 = i0;
    i0 = 0u;
    l8 = i0;
    i0 = p0;
    i1 = l4;
    i0 += i1;
    p0 = i0;
    goto L40;
    B45:;
    i0 = p1;
    i1 = l11;
    i2 = l8;
    i3 = l11;
    i4 = l8;
    i3 = i3 > i4;
    i1 = i3 ? i1 : i2;
    l6 = i1;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B46;}
    i0 = p0;
    i1 = l6;
    i0 += i1;
    l3 = i0;
    i0 = l15;
    i1 = l6;
    i0 += i1;
    l2 = i0;
    i0 = l16;
    i1 = l6;
    i0 += i1;
    l6 = i0;
    L47: vm_checktime();
      i0 = l4;
      i1 = 255u;
      i0 &= i1;
      i1 = l3;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i0 = i0 != i1;
      if (i0) {goto B43;}
      i0 = l3;
      i1 = 1u;
      i0 += i1;
      l3 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l2 = i0;
      i0 = l4;
      if (i0) {goto L47;}
    B46:;
    i0 = l13;
    l4 = i0;
    L48: vm_checktime();
      i0 = l4;
      i1 = 1u;
      i0 += i1;
      i1 = l8;
      i0 = i0 <= i1;
      if (i0) {goto B3;}
      i0 = p0;
      i1 = l4;
      i0 += i1;
      l3 = i0;
      i0 = p1;
      i1 = l4;
      i0 += i1;
      l2 = i0;
      i0 = l4;
      i1 = 4294967295u;
      i0 += i1;
      l4 = i0;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i1 = l3;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i0 = i0 == i1;
      if (i0) {goto L48;}
    i0 = l14;
    l8 = i0;
    i0 = p0;
    i1 = l12;
    i0 += i1;
    p0 = i0;
    goto L40;
    B44:;
    i0 = 0u;
    l8 = i0;
    i0 = p0;
    i1 = l5;
    i0 += i1;
    p0 = i0;
    goto L40;
    B43:;
    i0 = 0u;
    l8 = i0;
    i0 = p0;
    i1 = l6;
    i0 += i1;
    p0 = i0;
    goto L40;
  B39:;
  i0 = l0;
  i1 = 1056u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B9:;
  i0 = 15u;
  l9 = i0;
  goto B0;
  B8:;
  i0 = 15u;
  l9 = i0;
  goto B0;
  B7:;
  i0 = 15u;
  l9 = i0;
  goto B0;
  B6:;
  i0 = 15u;
  l9 = i0;
  goto B0;
  B5:;
  i0 = 15u;
  l9 = i0;
  goto B0;
  B4:;
  i0 = 15u;
  l9 = i0;
  goto B0;
  B3:;
  i0 = 15u;
  l9 = i0;
  goto B0;
  B2:;
  i0 = 15u;
  l9 = i0;
  goto B0;
  B1:;
  i0 = p1;
  i1 = l11;
  i0 += i1;
  l8 = i0;
  i0 = p1;
  i1 = l13;
  i2 = 1u;
  i1 += i2;
  l13 = i1;
  i0 += i1;
  l6 = i0;
  i0 = l1;
  i1 = l1;
  p0 = i1;
  i0 -= i1;
  i1 = l5;
  i0 = i0 >= i1;
  if (i0) {goto B49;}
  i0 = 3u;
  l9 = i0;
  goto B0;
  B49:;
  i0 = 0u;
  l9 = i0;
  B0:;
  L51: vm_checktime();
    i0 = l9;
    switch (i0) {
      case 0: goto B75;
      case 1: goto B74;
      case 2: goto B79;
      case 3: goto B78;
      case 4: goto B77;
      case 5: goto B65;
      case 6: goto B76;
      case 7: goto B73;
      case 8: goto B72;
      case 9: goto B71;
      case 10: goto B70;
      case 11: goto B69;
      case 12: goto B68;
      case 13: goto B67;
      case 14: goto B66;
      case 15: goto B50;
      default: goto B50;
    }
    B79:;
    i0 = l1;
    i1 = p0;
    i2 = l4;
    i1 += i2;
    p0 = i1;
    i0 -= i1;
    i1 = l5;
    i0 = i0 >= i1;
    if (i0) {goto B59;}
    i0 = 3u;
    l9 = i0;
    goto L51;
    B78:;
    i0 = l1;
    i1 = 0u;
    i2 = l10;
    i0 = memchr_0(i0, i1, i2);
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B56;}
    i0 = 4u;
    l9 = i0;
    goto L51;
    B77:;
    i0 = l4;
    l1 = i0;
    i0 = l4;
    i1 = p0;
    i0 -= i1;
    i1 = l5;
    i0 = i0 >= i1;
    if (i0) {goto B62;}
    goto B63;
    B76:;
    i0 = l1;
    i1 = l10;
    i0 += i1;
    l1 = i0;
    i0 = 0u;
    l9 = i0;
    goto L51;
    B75:;
    i0 = l5;
    l4 = i0;
    i0 = 1u;
    i1 = p0;
    i2 = l7;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    l3 = i1;
    i2 = 31u;
    i1 &= i2;
    i0 <<= (i1 & 31);
    i1 = l0;
    i2 = 1024u;
    i1 += i2;
    i2 = l3;
    i3 = 3u;
    i2 >>= (i3 & 31);
    i3 = 28u;
    i2 &= i3;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B64;}
    i0 = 1u;
    l9 = i0;
    goto L51;
    B74:;
    i0 = l5;
    i1 = l0;
    i2 = l3;
    i3 = 2u;
    i2 <<= (i3 & 31);
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 -= i1;
    l4 = i0;
    if (i0) {goto B58;}
    i0 = 7u;
    l9 = i0;
    goto L51;
    B73:;
    i0 = l11;
    l4 = i0;
    i0 = l8;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B55;}
    i0 = 8u;
    l9 = i0;
    goto L51;
    B72:;
    i0 = p0;
    i1 = l13;
    i0 += i1;
    l2 = i0;
    i0 = 1u;
    l4 = i0;
    i0 = 9u;
    l9 = i0;
    goto L51;
    B71:;
    i0 = l3;
    i1 = 255u;
    i0 &= i1;
    i1 = l2;
    i2 = l4;
    i1 += i2;
    i2 = 4294967295u;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i0 = i0 != i1;
    if (i0) {goto B57;}
    i0 = 10u;
    l9 = i0;
    goto L51;
    B70:;
    i0 = l6;
    i1 = l4;
    i0 += i1;
    l3 = i0;
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i0 = l3;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l3 = i0;
    if (i0) {goto B54;}
    i0 = 11u;
    l9 = i0;
    goto L51;
    B69:;
    i0 = l11;
    l4 = i0;
    i0 = 12u;
    l9 = i0;
    goto L51;
    B68:;
    i0 = l4;
    i0 = !(i0);
    if (i0) {goto B52;}
    i0 = 13u;
    l9 = i0;
    goto L51;
    B67:;
    i0 = p0;
    i1 = l4;
    i0 += i1;
    l3 = i0;
    i0 = p1;
    i1 = l4;
    i0 += i1;
    l2 = i0;
    i0 = l4;
    i1 = 4294967295u;
    i0 += i1;
    l4 = i0;
    i0 = l2;
    i1 = 4294967295u;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = l3;
    i2 = 4294967295u;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i0 = i0 == i1;
    if (i0) {goto B53;}
    i0 = 14u;
    l9 = i0;
    goto L51;
    B66:;
    i0 = l1;
    i1 = p0;
    i2 = l12;
    i1 += i2;
    p0 = i1;
    i0 -= i1;
    i1 = l5;
    i0 = i0 < i1;
    if (i0) {goto B61;}
    goto B60;
    B65:;
    i0 = l0;
    i1 = 1056u;
    i0 += i1;
    g0 = i0;
    i0 = 0u;
    goto Bfunc;
    B64:;
    i0 = 2u;
    l9 = i0;
    goto L51;
    B63:;
    i0 = 5u;
    l9 = i0;
    goto L51;
    B62:;
    i0 = 0u;
    l9 = i0;
    goto L51;
    B61:;
    i0 = 3u;
    l9 = i0;
    goto L51;
    B60:;
    i0 = 0u;
    l9 = i0;
    goto L51;
    B59:;
    i0 = 0u;
    l9 = i0;
    goto L51;
    B58:;
    i0 = 2u;
    l9 = i0;
    goto L51;
    B57:;
    i0 = 2u;
    l9 = i0;
    goto L51;
    B56:;
    i0 = 6u;
    l9 = i0;
    goto L51;
    B55:;
    i0 = 12u;
    l9 = i0;
    goto L51;
    B54:;
    i0 = 9u;
    l9 = i0;
    goto L51;
    B53:;
    i0 = 12u;
    l9 = i0;
    goto L51;
    B52:;
    i0 = 15u;
    l9 = i0;
    goto L51;
  B50:;
  i0 = l0;
  i1 = 1056u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 vm_load_code(u64 p0, u32 p1, u32 p2) {
  u32 l2 = 0, l5 = 0;
  u64 l0 = 0, l1 = 0, l3 = 0, l4 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1, j2, j3;
  j0 = 0ull;
  l0 = j0;
  j0 = 59ull;
  l1 = j0;
  i0 = 10534u;
  l2 = i0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l3 = j0;
  j0 = 0ull;
  l4 = j0;
  L0: vm_checktime();
    j0 = l0;
    j1 = 8ull;
    i0 = j0 > j1;
    if (i0) {goto B5;}
    i0 = l2;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    i1 = 4294967199u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 25u;
    i0 = i0 > i1;
    if (i0) {goto B4;}
    i0 = l5;
    i1 = 4294967205u;
    i0 += i1;
    l5 = i0;
    goto B3;
    B5:;
    j0 = 0ull;
    l6 = j0;
    j0 = l0;
    j1 = 11ull;
    i0 = j0 <= j1;
    if (i0) {goto B2;}
    goto B1;
    B4:;
    i0 = l5;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 0u;
    i2 = l5;
    i3 = 4294967247u;
    i2 += i3;
    i3 = 255u;
    i2 &= i3;
    i3 = 5u;
    i2 = i2 < i3;
    i0 = i2 ? i0 : i1;
    l5 = i0;
    B3:;
    i0 = l5;
    j0 = (u64)(i0);
    j1 = 56ull;
    j0 <<= (j1 & 63);
    j1 = 56ull;
    j0 = (u64)((s64)j0 >> (j1 & 63));
    l6 = j0;
    B2:;
    j0 = l6;
    j1 = 31ull;
    j0 &= j1;
    j1 = l1;
    j2 = 4294967295ull;
    j1 &= j2;
    j0 <<= (j1 & 63);
    l6 = j0;
    B1:;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    j0 = l0;
    j1 = 1ull;
    j0 += j1;
    l0 = j0;
    j0 = l6;
    j1 = l4;
    j0 |= j1;
    l4 = j0;
    j0 = l1;
    j1 = 4294967291ull;
    j0 += j1;
    l1 = j0;
    j1 = 55834574842ull;
    i0 = j0 != j1;
    if (i0) {goto L0;}
  i0 = 0u;
  l2 = i0;
  j0 = l3;
  j1 = p0;
  j2 = l4;
  j3 = p0;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l5 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B6;}
  i0 = l5;
  i1 = 0u;
  i2 = 0u;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  l2 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l5;
  i1 = p1;
  i2 = p2;
  i3 = l2;
  i4 = l2;
  i5 = p2;
  i4 = i4 > i5;
  i2 = i4 ? i2 : i3;
  l2 = i2;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  B6:;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static void vm_store_code(u64 p0, u64 p1, u32 p2, u32 p3) {
  u32 l2 = 0, l5 = 0;
  u64 l0 = 0, l1 = 0, l3 = 0, l4 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1, j2, j3;
  j0 = 0ull;
  l0 = j0;
  j0 = 59ull;
  l1 = j0;
  i0 = 10534u;
  l2 = i0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l3 = j0;
  j0 = 0ull;
  l4 = j0;
  L0: vm_checktime();
    j0 = l0;
    j1 = 8ull;
    i0 = j0 > j1;
    if (i0) {goto B5;}
    i0 = l2;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    i1 = 4294967199u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 25u;
    i0 = i0 > i1;
    if (i0) {goto B4;}
    i0 = l5;
    i1 = 4294967205u;
    i0 += i1;
    l5 = i0;
    goto B3;
    B5:;
    j0 = 0ull;
    l6 = j0;
    j0 = l0;
    j1 = 11ull;
    i0 = j0 <= j1;
    if (i0) {goto B2;}
    goto B1;
    B4:;
    i0 = l5;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 0u;
    i2 = l5;
    i3 = 4294967247u;
    i2 += i3;
    i3 = 255u;
    i2 &= i3;
    i3 = 5u;
    i2 = i2 < i3;
    i0 = i2 ? i0 : i1;
    l5 = i0;
    B3:;
    i0 = l5;
    j0 = (u64)(i0);
    j1 = 56ull;
    j0 <<= (j1 & 63);
    j1 = 56ull;
    j0 = (u64)((s64)j0 >> (j1 & 63));
    l6 = j0;
    B2:;
    j0 = l6;
    j1 = 31ull;
    j0 &= j1;
    j1 = l1;
    j2 = 4294967295ull;
    j1 &= j2;
    j0 <<= (j1 & 63);
    l6 = j0;
    B1:;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    j0 = l0;
    j1 = 1ull;
    j0 += j1;
    l0 = j0;
    j0 = l6;
    j1 = l4;
    j0 |= j1;
    l4 = j0;
    j0 = l1;
    j1 = 4294967291ull;
    j0 += j1;
    l1 = j0;
    j1 = 55834574842ull;
    i0 = j0 != j1;
    if (i0) {goto L0;}
  j0 = l3;
  j1 = p0;
  j2 = l4;
  j3 = p0;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l2 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B6;}
  i0 = l2;
  j1 = p1;
  i2 = p2;
  i3 = p3;
  (*Z_envZ_db_update_i64Z_vijii)(i0, j1, i2, i3);
  goto Bfunc;
  B6:;
  j0 = p0;
  j1 = l4;
  j2 = p1;
  j3 = p0;
  i4 = p2;
  i5 = p3;
  i0 = (*Z_envZ_db_store_i64Z_ijjjjii)(j0, j1, j2, j3, i4, i5);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void vm_store_abi(u64 p0, u64 p1, u32 p2, u32 p3) {
  u32 l2 = 0, l5 = 0;
  u64 l0 = 0, l1 = 0, l3 = 0, l4 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1, j2, j3;
  j0 = 0ull;
  l0 = j0;
  j0 = 59ull;
  l1 = j0;
  i0 = 11642u;
  l2 = i0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l3 = j0;
  j0 = 0ull;
  l4 = j0;
  L0: vm_checktime();
    j0 = l0;
    j1 = 7ull;
    i0 = j0 > j1;
    if (i0) {goto B5;}
    i0 = l2;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    i1 = 4294967199u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 25u;
    i0 = i0 > i1;
    if (i0) {goto B4;}
    i0 = l5;
    i1 = 4294967205u;
    i0 += i1;
    l5 = i0;
    goto B3;
    B5:;
    j0 = 0ull;
    l6 = j0;
    j0 = l0;
    j1 = 11ull;
    i0 = j0 <= j1;
    if (i0) {goto B2;}
    goto B1;
    B4:;
    i0 = l5;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 0u;
    i2 = l5;
    i3 = 4294967247u;
    i2 += i3;
    i3 = 255u;
    i2 &= i3;
    i3 = 5u;
    i2 = i2 < i3;
    i0 = i2 ? i0 : i1;
    l5 = i0;
    B3:;
    i0 = l5;
    j0 = (u64)(i0);
    j1 = 56ull;
    j0 <<= (j1 & 63);
    j1 = 56ull;
    j0 = (u64)((s64)j0 >> (j1 & 63));
    l6 = j0;
    B2:;
    j0 = l6;
    j1 = 31ull;
    j0 &= j1;
    j1 = l1;
    j2 = 4294967295ull;
    j1 &= j2;
    j0 <<= (j1 & 63);
    l6 = j0;
    B1:;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    j0 = l0;
    j1 = 1ull;
    j0 += j1;
    l0 = j0;
    j0 = l6;
    j1 = l4;
    j0 |= j1;
    l4 = j0;
    j0 = l1;
    j1 = 4294967291ull;
    j0 += j1;
    l1 = j0;
    j1 = 55834574842ull;
    i0 = j0 != j1;
    if (i0) {goto L0;}
  j0 = l3;
  j1 = p0;
  j2 = l4;
  j3 = p0;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l2 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B6;}
  i0 = l2;
  j1 = p1;
  i2 = p2;
  i3 = p3;
  (*Z_envZ_db_update_i64Z_vijii)(i0, j1, i2, i3);
  goto Bfunc;
  B6:;
  j0 = p0;
  j1 = l4;
  j2 = p1;
  j3 = p0;
  i4 = p2;
  i5 = p3;
  i0 = (*Z_envZ_db_store_i64Z_ijjjjii)(j0, j1, j2, j3, i4, i5);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 vm_load_module(u64 p0, u64 p1, u32 p2, u32 p3) {
  u32 l2 = 0, l3 = 0;
  u64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1, j2, j3;
  j0 = 7ull;
  l0 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l1 = j0;
  L0: vm_checktime();
    j0 = l0;
    j1 = 1ull;
    j0 += j1;
    l0 = j0;
    j1 = 13ull;
    i0 = j0 != j1;
    if (i0) {goto L0;}
  i0 = 0u;
  l2 = i0;
  j0 = l1;
  j1 = p0;
  j2 = 10742114988601638912ull;
  j3 = p1;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l3 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  i0 = l3;
  i1 = 0u;
  i2 = 0u;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  l2 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l3;
  i1 = p2;
  i2 = p3;
  i3 = l2;
  i4 = l2;
  i5 = p3;
  i4 = i4 > i5;
  i2 = i4 ? i2 : i3;
  l2 = i2;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  B1:;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 vm_module_exists(u64 p0, u64 p1) {
  u64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1, j2, j3;
  j0 = 7ull;
  l0 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l1 = j0;
  L0: vm_checktime();
    j0 = l0;
    j1 = 1ull;
    j0 += j1;
    l0 = j0;
    j1 = 13ull;
    i0 = j0 != j1;
    if (i0) {goto L0;}
  j0 = l1;
  j1 = p0;
  j2 = 10742114988601638912ull;
  j3 = p1;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  i1 = 31u;
  i0 >>= (i1 & 31);
  i1 = 1u;
  i0 ^= i1;
  FUNC_EPILOGUE;
  return i0;
}

static void vm_store_module(u64 p0, u64 p1, u64 p2, u32 p3, u32 p4) {
  u32 l2 = 0;
  u64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1, j2, j3;
  j0 = 7ull;
  l0 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l1 = j0;
  L0: vm_checktime();
    j0 = l0;
    j1 = 1ull;
    j0 += j1;
    l0 = j0;
    j1 = 13ull;
    i0 = j0 != j1;
    if (i0) {goto L0;}
  j0 = l1;
  j1 = p0;
  j2 = 10742114988601638912ull;
  j3 = p1;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l2 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B1;}
  i0 = l2;
  j1 = p2;
  i2 = p3;
  i3 = p4;
  (*Z_envZ_db_update_i64Z_vijii)(i0, j1, i2, i3);
  goto Bfunc;
  B1:;
  j0 = p0;
  j1 = 10742114988601638912ull;
  j2 = p2;
  j3 = p1;
  i4 = p3;
  i5 = p4;
  i0 = (*Z_envZ_db_store_i64Z_ijjjjii)(j0, j1, j2, j3, i4, i5);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void vm_take_snapshot(u64 p0) {
  u32 l0 = 0, l3 = 0, l6 = 0, l8 = 0;
  u64 l1 = 0, l2 = 0, l4 = 0, l5 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  j0 = 0ull;
  l1 = j0;
  j0 = 59ull;
  l2 = j0;
  i0 = 13056u;
  l3 = i0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l4 = j0;
  j0 = 0ull;
  l5 = j0;
  L0: vm_checktime();
    j0 = l1;
    j1 = 8ull;
    i0 = j0 > j1;
    if (i0) {goto B5;}
    i0 = l3;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l6 = i0;
    i1 = 4294967199u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 25u;
    i0 = i0 > i1;
    if (i0) {goto B4;}
    i0 = l6;
    i1 = 4294967205u;
    i0 += i1;
    l6 = i0;
    goto B3;
    B5:;
    j0 = 0ull;
    l7 = j0;
    j0 = l1;
    j1 = 11ull;
    i0 = j0 <= j1;
    if (i0) {goto B2;}
    goto B1;
    B4:;
    i0 = l6;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 0u;
    i2 = l6;
    i3 = 4294967247u;
    i2 += i3;
    i3 = 255u;
    i2 &= i3;
    i3 = 5u;
    i2 = i2 < i3;
    i0 = i2 ? i0 : i1;
    l6 = i0;
    B3:;
    i0 = l6;
    j0 = (u64)(i0);
    j1 = 56ull;
    j0 <<= (j1 & 63);
    j1 = 56ull;
    j0 = (u64)((s64)j0 >> (j1 & 63));
    l7 = j0;
    B2:;
    j0 = l7;
    j1 = 31ull;
    j0 &= j1;
    j1 = l2;
    j2 = 4294967295ull;
    j1 &= j2;
    j0 <<= (j1 & 63);
    l7 = j0;
    B1:;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    j0 = l1;
    j1 = 1ull;
    j0 += j1;
    l1 = j0;
    j0 = l7;
    j1 = l5;
    j0 |= j1;
    l5 = j0;
    j0 = l2;
    j1 = 4294967291ull;
    j0 += j1;
    l2 = j0;
    j1 = 55834574842ull;
    i0 = j0 != j1;
    if (i0) {goto L0;}
  j0 = l4;
  j1 = p0;
  j2 = l5;
  j3 = p0;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l6 = i0;
  i0 = 12u;
  i0 = malloc_0(i0);
  l3 = i0;
  i1 = 5120u;
  i2 = 12u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = l3;
  i2 = 4294962188u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  j1 = get_code_version();
  i64_store((&M0), (u64)(i0), j1);
  i0 = 5120u;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = 5124u;
  i1 = l0;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l8 = i0;
  i0 = l6;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B7;}
  i0 = l6;
  j1 = p0;
  i2 = 5120u;
  i3 = l8;
  (*Z_envZ_db_update_i64Z_vijii)(i0, j1, i2, i3);
  goto B6;
  B7:;
  j0 = p0;
  j1 = l5;
  j2 = p0;
  j3 = p0;
  i4 = 5120u;
  i5 = l8;
  i0 = (*Z_envZ_db_store_i64Z_ijjjjii)(j0, j1, j2, j3, i4, i5);
  B6:;
  i0 = 5120u;
  i1 = l3;
  i2 = 12u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 vm_restore_from_snapshot(u64 p0) {
  u32 l0 = 0, l3 = 0, l6 = 0, l8 = 0, l9 = 0, l10 = 0;
  u64 l1 = 0, l2 = 0, l4 = 0, l5 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  j0 = 0ull;
  l1 = j0;
  j0 = 59ull;
  l2 = j0;
  i0 = 13056u;
  l3 = i0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l4 = j0;
  j0 = 0ull;
  l5 = j0;
  L0: vm_checktime();
    j0 = l1;
    j1 = 8ull;
    i0 = j0 > j1;
    if (i0) {goto B5;}
    i0 = l3;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l6 = i0;
    i1 = 4294967199u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 25u;
    i0 = i0 > i1;
    if (i0) {goto B4;}
    i0 = l6;
    i1 = 4294967205u;
    i0 += i1;
    l6 = i0;
    goto B3;
    B5:;
    j0 = 0ull;
    l7 = j0;
    j0 = l1;
    j1 = 11ull;
    i0 = j0 <= j1;
    if (i0) {goto B2;}
    goto B1;
    B4:;
    i0 = l6;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 0u;
    i2 = l6;
    i3 = 4294967247u;
    i2 += i3;
    i3 = 255u;
    i2 &= i3;
    i3 = 5u;
    i2 = i2 < i3;
    i0 = i2 ? i0 : i1;
    l6 = i0;
    B3:;
    i0 = l6;
    j0 = (u64)(i0);
    j1 = 56ull;
    j0 <<= (j1 & 63);
    j1 = 56ull;
    j0 = (u64)((s64)j0 >> (j1 & 63));
    l7 = j0;
    B2:;
    j0 = l7;
    j1 = 31ull;
    j0 &= j1;
    j1 = l2;
    j2 = 4294967295ull;
    j1 &= j2;
    j0 <<= (j1 & 63);
    l7 = j0;
    B1:;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    j0 = l1;
    j1 = 1ull;
    j0 += j1;
    l1 = j0;
    j0 = l7;
    j1 = l5;
    j0 |= j1;
    l5 = j0;
    j0 = l2;
    j1 = 4294967291ull;
    j0 += j1;
    l2 = j0;
    j1 = 55834574842ull;
    i0 = j0 != j1;
    if (i0) {goto L0;}
  i0 = 0u;
  l3 = i0;
  j0 = l4;
  j1 = p0;
  j2 = l5;
  j3 = p0;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l6 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B7;}
  i0 = 0u;
  l3 = i0;
  i0 = l6;
  i1 = 0u;
  i2 = 0u;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  l8 = i0;
  i1 = 5120u;
  i0 += i1;
  l9 = i0;
  i1 = get_current_memory();
  l10 = i1;
  i0 = i0 < i1;
  if (i0) {goto B7;}
  i0 = l9;
  i1 = l10;
  i0 -= i1;
  i0 = malloc_0(i0);
  free_0(i0);
  i0 = l6;
  i1 = l0;
  i2 = 20u;
  i1 += i2;
  i2 = 12u;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = l0;
  i2 = 20u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 20u;
  i1 += i2;
  i2 = 4u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = 0u;
  l3 = i0;
  i0 = l8;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i0 = i0 != i1;
  if (i0) {goto B7;}
  j0 = get_code_version();
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i0 = j0 != j1;
  if (i0) {goto B6;}
  i0 = l6;
  i1 = 5120u;
  i2 = l8;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  i0 = 5120u;
  i1 = l8;
  i2 = 5108u;
  i1 += i2;
  i2 = 12u;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = 1u;
  l3 = i0;
  B7:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  goto Bfunc;
  B6:;
  i0 = 13777u;
  (*Z_envZ_printsZ_vi)(i0);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 strcmp_0(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l0 = i0;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l1;
  i1 = l0;
  i2 = 255u;
  i1 &= i2;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  p0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 += i1;
  p1 = i0;
  L1: vm_checktime();
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l0 = i0;
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l1 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i0 = l1;
    i1 = l0;
    i2 = 255u;
    i1 &= i2;
    i0 = i0 == i1;
    if (i0) {goto L1;}
  B0:;
  i0 = l1;
  i1 = l0;
  i2 = 255u;
  i1 &= i2;
  i0 -= i1;
  FUNC_EPILOGUE;
  return i0;
}

static void singleton_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 10544u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void mp_reader_new_mem(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p1;
  i2 = p2;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 94u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 95u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  FUNC_EPILOGUE;
}

static u32 mp_reader_mem_readbyte(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 4294967295u;
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_reader_mem_close(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  m_free(i0);
  B0:;
  i0 = p0;
  m_free(i0);
  FUNC_EPILOGUE;
}

static u32 mp_raw_code_load(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 80u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i1, i0);
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i1, i0);
  l2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i1, i0);
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i1, i0);
  i1 = 255u;
  i0 &= i1;
  i1 = 31u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 255u;
  i0 &= i1;
  i1 = 77u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l2;
  i1 = 255u;
  i0 &= i1;
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l3;
  i1 = 3u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  L2: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i1, i0);
    l2 = i0;
    i1 = 127u;
    i0 &= i1;
    i1 = l1;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i0 |= i1;
    l1 = i0;
    i0 = l2;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L2;}
  i0 = l1;
  i1 = 33u;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = l3;
  i1 = 255u;
  i0 &= i1;
  i1 = 4u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 0u;
  i32_store16((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = load_raw_code(i0, i1);
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  CALL_INDIRECT(T0, void (*)(u32), 6, i1, i0);
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = 10547u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = 11651u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 load_raw_code(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  L0: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i1, i0);
    l3 = i0;
    i1 = 127u;
    i0 &= i1;
    i1 = l1;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i0 |= i1;
    l1 = i0;
    i0 = l3;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L0;}
  i0 = l3;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i0 = l1;
  i1 = 2u;
  i0 >>= (i1 & 31);
  l4 = i0;
  i0 = m_malloc(i0);
  l5 = i0;
  l1 = i0;
  L2: vm_checktime();
    i0 = l1;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l2;
    i2 = i32_load((&M0), (u64)(i2));
    i1 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i2, i1);
    l3 = i1;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L2;}
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  L3: vm_checktime();
    i0 = l1;
    i1 = 4294967292u;
    i0 += i1;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = p0;
    i3 = 4u;
    i2 += i3;
    i2 = i32_load((&M0), (u64)(i2));
    i1 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i2, i1);
    l3 = i1;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L3;}
  i0 = l5;
  i1 = 1u;
  i0 += i1;
  l6 = i0;
  i0 = l5;
  i0 = i32_load8_s((&M0), (u64)(i0));
  l3 = i0;
  i1 = 3u;
  i0 &= i1;
  l7 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = l3;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B5;}
  i0 = 0u;
  l8 = i0;
  i0 = 0u;
  l9 = i0;
  goto B4;
  B5:;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l9 = i0;
  i0 = 0u;
  l8 = i0;
  L6: vm_checktime();
    i0 = l6;
    i1 = l3;
    i0 += i1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l10 = i0;
    i1 = 4u;
    i0 &= i1;
    i1 = l3;
    i0 <<= (i1 & 31);
    i1 = l7;
    i0 |= i1;
    l7 = i0;
    i0 = l10;
    i1 = 255u;
    i0 &= i1;
    l11 = i0;
    i1 = 3u;
    i0 >>= (i1 & 31);
    i1 = 1u;
    i0 &= i1;
    i1 = l3;
    i0 <<= (i1 & 31);
    i1 = l9;
    i0 |= i1;
    l9 = i0;
    i0 = l11;
    i1 = 6u;
    i0 >>= (i1 & 31);
    i1 = 1u;
    i0 &= i1;
    i1 = l3;
    i0 <<= (i1 & 31);
    i1 = l8;
    i0 |= i1;
    l8 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l11 = i0;
    l3 = i0;
    i0 = l10;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L6;}
  i0 = l6;
  i1 = l11;
  i0 += i1;
  l6 = i0;
  B4:;
  i0 = l1;
  i1 = 4294967292u;
  i0 += i1;
  l12 = i0;
  i0 = 0u;
  l11 = i0;
  i0 = 0u;
  l13 = i0;
  i0 = 0u;
  l3 = i0;
  L7: vm_checktime();
    i0 = l6;
    i1 = l3;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l10 = i0;
    i1 = 1u;
    i0 &= i1;
    i1 = l3;
    i0 <<= (i1 & 31);
    i1 = l13;
    i0 |= i1;
    l13 = i0;
    i0 = l10;
    i1 = 1u;
    i0 >>= (i1 & 31);
    i1 = 63u;
    i0 &= i1;
    i1 = l2;
    i0 <<= (i1 & 31);
    i1 = l11;
    i0 |= i1;
    l11 = i0;
    i0 = l2;
    i1 = 6u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l14 = i0;
    l3 = i0;
    i0 = l10;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L7;}
  i0 = l12;
  i1 = p0;
  i2 = p1;
  i1 = load_qstr(i1, i2);
  l3 = i1;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 4294967293u;
  i0 += i1;
  i1 = l3;
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 4294967294u;
  i0 += i1;
  i1 = p0;
  i2 = p1;
  i1 = load_qstr(i1, i2);
  l3 = i1;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 4294967295u;
  i0 += i1;
  i1 = l3;
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l6;
  i1 = l11;
  i2 = l13;
  i1 += i2;
  i0 += i1;
  i1 = l14;
  i0 += i1;
  l2 = i0;
  i1 = l1;
  i0 -= i1;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = l1;
  i1 = l2;
  i0 -= i1;
  l3 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l10 = i0;
  L9: vm_checktime();
    i0 = l1;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l10;
    i2 = i32_load((&M0), (u64)(i2));
    i1 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i2, i1);
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    if (i0) {goto L9;}
  B8:;
  i0 = l2;
  i1 = l5;
  i2 = l4;
  i1 += i2;
  l11 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B10;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l10 = i0;
  L11: vm_checktime();
    i0 = l2;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l10;
    i2 = i32_load((&M0), (u64)(i2));
    i1 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i2, i1);
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = l0;
    i2 = 0u;
    i0 = mp_opcode_format(i0, i1, i2);
    l1 = i0;
    i0 = l0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 4294967295u;
    i1 += i2;
    l3 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 = i0 == i1;
    if (i0) {goto B14;}
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B15;}
    L16: vm_checktime();
      i0 = l2;
      i1 = p0;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l10;
      i2 = i32_load((&M0), (u64)(i2));
      i1 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i2, i1);
      l1 = i1;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l2 = i0;
      i0 = l1;
      i1 = 128u;
      i0 &= i1;
      if (i0) {goto L16;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    B15:;
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B13;}
    goto B12;
    B14:;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    i1 = p0;
    i2 = p1;
    i1 = load_qstr(i1, i2);
    l1 = i1;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = l1;
    i2 = 8u;
    i1 >>= (i2 & 31);
    i32_store8((&M0), (u64)(i0 + 2), i1);
    i0 = l0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 4294967294u;
    i1 += i2;
    l3 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = 3u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    if (i0) {goto B12;}
    B13:;
    i0 = l2;
    i1 = 0u;
    i0 += i1;
    l2 = i0;
    i1 = l11;
    i0 = i0 < i1;
    if (i0) {goto L11;}
    goto B10;
    B12:;
    i0 = l2;
    l1 = i0;
    L17: vm_checktime();
      i0 = l1;
      i1 = p0;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l10;
      i2 = i32_load((&M0), (u64)(i2));
      i1 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i2, i1);
      i32_store8((&M0), (u64)(i0), i1);
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      l1 = i0;
      i0 = l3;
      i1 = 4294967295u;
      i0 += i1;
      l3 = i0;
      if (i0) {goto L17;}
    i0 = l2;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1));
    i0 += i1;
    l2 = i0;
    i1 = l11;
    i0 = i0 < i1;
    if (i0) {goto L11;}
  B10:;
  i0 = 0u;
  l13 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  L18: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i1, i0);
    l1 = i0;
    i1 = 127u;
    i0 &= i1;
    i1 = l13;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i0 |= i1;
    l13 = i0;
    i0 = l1;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L18;}
  i0 = 0u;
  l11 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  L19: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i1, i0);
    l1 = i0;
    i1 = 127u;
    i0 &= i1;
    i1 = l11;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i0 |= i1;
    l11 = i0;
    i0 = l1;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L19;}
  i0 = l13;
  i1 = l9;
  i2 = l7;
  i1 += i2;
  l3 = i1;
  i0 += i1;
  i1 = l11;
  i0 += i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i0 = m_malloc(i0);
  l9 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B23;}
  i0 = l9;
  i1 = l3;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l10 = i0;
  i0 = l9;
  l1 = i0;
  L24: vm_checktime();
    i0 = l1;
    i1 = p0;
    i2 = p1;
    i1 = load_qstr(i1, i2);
    i2 = 3u;
    i1 <<= (i2 & 31);
    i2 = 2u;
    i1 |= i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    i1 = 4294967295u;
    i0 += i1;
    l3 = i0;
    if (i0) {goto L24;}
  i0 = l13;
  if (i0) {goto B22;}
  goto B21;
  B23:;
  i0 = l9;
  l10 = i0;
  i0 = l13;
  i0 = !(i0);
  if (i0) {goto B21;}
  B22:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  l7 = i0;
  i0 = 0u;
  l6 = i0;
  L25: vm_checktime();
    i0 = 25472u;
    l1 = i0;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i1, i0);
    i1 = 255u;
    i0 &= i1;
    l14 = i0;
    i1 = 101u;
    i0 = i0 == i1;
    if (i0) {goto B26;}
    i0 = 0u;
    l1 = i0;
    L27: vm_checktime();
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l2;
      i1 = i32_load((&M0), (u64)(i1));
      i0 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i1, i0);
      l3 = i0;
      i1 = 127u;
      i0 &= i1;
      i1 = l1;
      i2 = 7u;
      i1 <<= (i2 & 31);
      i0 |= i1;
      l1 = i0;
      i0 = l3;
      i1 = 128u;
      i0 &= i1;
      if (i0) {goto L27;}
    i0 = l0;
    i1 = l1;
    vstr_init_len(i0, i1);
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B28;}
    i0 = l7;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    L29: vm_checktime();
      i0 = l3;
      i1 = p0;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l2;
      i2 = i32_load((&M0), (u64)(i2));
      i1 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i2, i1);
      i32_store8((&M0), (u64)(i0), i1);
      i0 = l3;
      i1 = 1u;
      i0 += i1;
      l3 = i0;
      i0 = l1;
      i1 = 4294967295u;
      i0 += i1;
      l1 = i0;
      if (i0) {goto L29;}
    B28:;
    i0 = l14;
    i1 = 4294967198u;
    i0 += i1;
    l1 = i0;
    i1 = 17u;
    i0 = i0 > i1;
    if (i0) {goto B20;}
    i0 = l1;
    switch (i0) {
      case 0: goto B32;
      case 1: goto B31;
      case 2: goto B20;
      case 3: goto B20;
      case 4: goto B31;
      case 5: goto B20;
      case 6: goto B20;
      case 7: goto B30;
      case 8: goto B20;
      case 9: goto B20;
      case 10: goto B20;
      case 11: goto B20;
      case 12: goto B20;
      case 13: goto B20;
      case 14: goto B20;
      case 15: goto B20;
      case 16: goto B20;
      case 17: goto B32;
      default: goto B32;
    }
    B32:;
    i0 = 33304u;
    i1 = 33004u;
    i2 = l14;
    i3 = 115u;
    i2 = i2 == i3;
    i0 = i2 ? i0 : i1;
    i1 = l0;
    i0 = mp_obj_new_str_from_vstr(i0, i1);
    l1 = i0;
    goto B26;
    B31:;
    i0 = l7;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 4));
    i2 = l14;
    i3 = 99u;
    i2 = i2 == i3;
    i3 = 0u;
    i4 = 0u;
    i0 = mp_parse_num_decimal(i0, i1, i2, i3, i4);
    l1 = i0;
    goto B26;
    B30:;
    i0 = l7;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 4));
    i2 = 10u;
    i3 = 0u;
    i0 = mp_parse_num_integer(i0, i1, i2, i3);
    l1 = i0;
    B26:;
    i0 = l10;
    i1 = l1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l10;
    i1 = 4u;
    i0 += i1;
    l10 = i0;
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l6 = i0;
    i1 = l13;
    i0 = i0 < i1;
    if (i0) {goto L25;}
  B21:;
  i0 = l11;
  i0 = !(i0);
  if (i0) {goto B33;}
  L34: vm_checktime();
    i0 = l10;
    i1 = p0;
    i2 = p1;
    i1 = load_raw_code(i1, i2);
    i32_store((&M0), (u64)(i0), i1);
    i0 = l10;
    i1 = 4u;
    i0 += i1;
    l10 = i0;
    i0 = l11;
    i1 = 4294967295u;
    i0 += i1;
    l11 = i0;
    if (i0) {goto L34;}
  B33:;
  i0 = mp_emit_glue_new_raw_code();
  p0 = i0;
  i1 = l5;
  i2 = l9;
  i3 = l8;
  mp_emit_glue_assign_bytecode(i0, i1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B20:;
  i0 = 16884u;
  i1 = 13066u;
  i2 = 299u;
  i3 = 42422u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B1:;
  i0 = 10547u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 load_qstr(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  L0: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i1, i0);
    l2 = i0;
    i1 = 127u;
    i0 &= i1;
    i1 = l0;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i0 |= i1;
    l0 = i0;
    i0 = l2;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L0;}
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 1u;
  i0 >>= (i1 & 31);
  l3 = i0;
  i0 = l2;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = l3;
  i0 = m_malloc(i0);
  l4 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = l3;
  i0 -= i1;
  l2 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = l4;
  l0 = i0;
  L4: vm_checktime();
    i0 = l0;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l1;
    i2 = i32_load((&M0), (u64)(i2));
    i1 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i2, i1);
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    if (i0) {goto L4;}
  B3:;
  i0 = l4;
  i1 = l3;
  i0 = qstr_from_strn(i0, i1);
  l0 = i0;
  i0 = l4;
  m_free(i0);
  i0 = p1;
  i1 = p1;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  i2 = 31u;
  i1 &= i2;
  l2 = i1;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = l2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 2u;
  i0 += i1;
  i1 = l0;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = l0;
  goto Bfunc;
  B2:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i1, i0);
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = p1;
  i1 = i32_load16_u((&M0), (u64)(i1));
  l2 = i1;
  i2 = l3;
  i1 -= i2;
  i2 = 31u;
  i1 &= i2;
  l0 = i1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 2u;
  i0 += i1;
  l1 = i0;
  i0 = i32_load16_u((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = l2;
  i0 = i0 <= i1;
  if (i0) {goto B6;}
  i0 = l1;
  i1 = p1;
  i2 = 2u;
  i1 += i2;
  l3 = i1;
  i2 = l0;
  i3 = 1u;
  i2 <<= (i3 & 31);
  l0 = i2;
  i1 += i2;
  i2 = 2u;
  i1 += i2;
  i2 = 62u;
  i3 = l0;
  i2 -= i3;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = 64u;
  i0 += i1;
  i1 = p1;
  i1 = i32_load16_u((&M0), (u64)(i1 + 2));
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = i32_load16_u((&M0), (u64)(i0));
  l2 = i0;
  i0 = 0u;
  l0 = i0;
  goto B5;
  B6:;
  i0 = l1;
  l3 = i0;
  B5:;
  i0 = l3;
  i1 = p1;
  i2 = 2u;
  i1 += i2;
  l1 = i1;
  i2 = l0;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i2 = 2u;
  i1 += i2;
  i2 = l2;
  i3 = l0;
  i2 -= i3;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p1;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p0;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_raw_code_load_mem(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p0;
  i2 = p1;
  i3 = 0u;
  mp_reader_new_mem(i0, i1, i2, i3);
  i0 = l0;
  i0 = mp_raw_code_load(i0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 db_frozen_stat(u32 p0) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j2, j3;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 16919u;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 10570u;
  i0 = strstr_0(i0, i1);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = l1;
  i2 = p0;
  i1 -= i2;
  j0 = s2n(i0, i1);
  l2 = j0;
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  p0 = i0;
  i1 = 11674u;
  i0 = strstr_0(i0, i1);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 2u;
  i1 = 0u;
  j2 = l2;
  i3 = p0;
  i4 = l1;
  i5 = p0;
  i4 -= i5;
  j3 = s2n(i3, i4);
  i2 = vm_module_exists(j2, j3);
  i0 = i2 ? i0 : i1;
  l0 = i0;
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = p0;
  i1 = strlen_0(i1);
  j0 = s2n(i0, i1);
  i0 = (*Z_envZ_is_accountZ_ij)(j0);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_frozen_stat(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = strlen_0(i0);
  l0 = i0;
  i0 = 0u;
  i0 = i32_load8_u((&M0), (u64)(i0 + 50368));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 50368u;
  l1 = i0;
  L3: vm_checktime();
    i0 = l1;
    i0 = strlen_0(i0);
    l2 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto B4;}
    i0 = p0;
    i1 = l1;
    i2 = l0;
    i0 = memcmp_0(i0, i1, i2);
    if (i0) {goto B4;}
    i0 = l1;
    i1 = l0;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B1;}
    i0 = l3;
    i1 = 47u;
    i0 = i0 == i1;
    if (i0) {goto B0;}
    B4:;
    i0 = l1;
    i1 = l2;
    i0 += i1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    if (i0) {goto L3;}
  B2:;
  i0 = p0;
  i0 = db_frozen_stat(i0);
  goto Bfunc;
  B1:;
  i0 = 2u;
  goto Bfunc;
  B0:;
  i0 = 1u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 vm_find_frozen_str(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l3 = 0;
  u64 l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 10570u;
  i0 = strstr_0(i0, i1);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = l1;
  i2 = p0;
  i1 -= i2;
  j0 = s2n(i0, i1);
  l2 = j0;
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i1 = 11674u;
  i0 = strstr_0(i0, i1);
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  l0 = i0;
  j0 = l2;
  i1 = l1;
  i2 = l3;
  i3 = l1;
  i2 -= i3;
  j1 = s2n(i1, i2);
  i2 = 0u;
  i3 = 0u;
  i0 = vm_load_module(j0, j1, i2, i3);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l1;
  i0 = malloc_0(i0);
  l0 = i0;
  i0 = p0;
  i1 = 10570u;
  i0 = strstr_0(i0, i1);
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = l3;
  i2 = p0;
  i1 -= i2;
  j0 = s2n(i0, i1);
  l2 = j0;
  i0 = l3;
  i1 = 1u;
  i0 += i1;
  p0 = i0;
  i1 = 11674u;
  i0 = strstr_0(i0, i1);
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  j0 = l2;
  i1 = p0;
  i2 = l3;
  i3 = p0;
  i2 -= i3;
  j1 = s2n(i1, i2);
  i2 = l0;
  i3 = l1;
  i0 = vm_load_module(j0, j1, i2, i3);
  B1:;
  i0 = p1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_find_frozen_module(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = 0u;
  i0 = i32_load8_u((&M0), (u64)(i0 + 50368));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 50368u;
  l2 = i0;
  i0 = 37984u;
  l3 = i0;
  L4: vm_checktime();
    i0 = l2;
    i0 = strlen_0(i0);
    l4 = i0;
    i1 = p1;
    i0 = i0 != i1;
    if (i0) {goto B5;}
    i0 = p0;
    i1 = l2;
    i2 = p1;
    i0 = memcmp_0(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto B3;}
    B5:;
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l3 = i0;
    i0 = l2;
    i1 = l4;
    i0 += i1;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    if (i0) {goto L4;}
    goto B2;
  B3:;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p2;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  goto B1;
  B2:;
  i0 = p0;
  i1 = p1;
  i0 += i1;
  i1 = 4294967293u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 109u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = vm_find_frozen_str(i0, i1);
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = l2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i1 = mp_raw_code_load_mem(i1, i2);
  i32_store((&M0), (u64)(i0), i1);
  B1:;
  i0 = 2u;
  l1 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_is_package(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 193u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 0u;
  i0 = i0 != i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin___import__(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 304u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = 6u;
  l2 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  l3 = i0;
  B2:;
  i0 = l1;
  i1 = l0;
  i2 = 288u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p0 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5184));
  i1 = 186u;
  i0 = mp_obj_dict_get(i0, i1);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l1;
  i1 = 4294967288u;
  i0 &= i1;
  i1 = 168u;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5184));
  i1 = 170u;
  i0 = mp_obj_dict_get(i0, i1);
  l1 = i0;
  B9:;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5184));
  i1 = 4u;
  i0 += i1;
  i1 = 1546u;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l4 = i0;
  i0 = l1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p1 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i0 += i1;
  l1 = i0;
  i0 = l4;
  if (i0) {goto B10;}
  L11: vm_checktime();
    i0 = l1;
    i1 = p1;
    i0 = i0 <= i1;
    if (i0) {goto B10;}
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 46u;
    i0 = i0 != i1;
    if (i0) {goto L11;}
  B10:;
  i0 = l3;
  i1 = 4294967295u;
  i0 += i1;
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B12;}
  L13: vm_checktime();
    i0 = l1;
    i1 = p1;
    i0 = i0 <= i1;
    if (i0) {goto B14;}
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 46u;
    i0 = i0 != i1;
    if (i0) {goto L13;}
    B14:;
    i0 = l3;
    i1 = 4294967295u;
    i0 += i1;
    l3 = i0;
    if (i0) {goto L13;}
  B12:;
  i0 = l1;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l1;
  i1 = p1;
  i0 -= i1;
  l4 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 288));
  l1 = i1;
  i0 += i1;
  i1 = 1u;
  i0 += i1;
  i1 = l4;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = mp_pystack_alloc(i0);
  l1 = i0;
  i1 = p1;
  i2 = l4;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 288));
  i0 = !(i0);
  if (i0) {goto B15;}
  i0 = l1;
  i1 = l4;
  i0 += i1;
  p1 = i0;
  i1 = 46u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 288));
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B15:;
  i0 = l1;
  i1 = l3;
  i0 = qstr_from_strn(i0, i1);
  p1 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5168));
  i1 = l1;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5176));
  i1 = l1;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 5176), i1);
  i0 = p1;
  i0 = qstr_str(i0);
  p0 = i0;
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 288), i1);
  i0 = p1;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  l1 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B7;}
  goto B0;
  B8:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 288));
  if (i0) {goto B0;}
  B7:;
  i0 = 0u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B6:;
  i0 = 10572u;
  i1 = 11679u;
  i2 = 282u;
  i3 = 42431u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B5:;
  i0 = 16922u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B4:;
  i0 = 16106u;
  i1 = 17457u;
  i2 = 44u;
  i3 = 42351u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B3:;
  i0 = 17826u;
  i1 = 17457u;
  i2 = 45u;
  i3 = 42351u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B1:;
  i0 = 0u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = l1;
  i0 = mp_obj_str_get_qstr(i0);
  i0 = mp_module_get(i0);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = p0;
  i1 = 46u;
  i0 = strchr_0(i0, i1);
  p1 = i0;
  i0 = l2;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B17;}
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B17;}
  i0 = p0;
  i1 = p1;
  i2 = p0;
  i1 -= i2;
  i0 = qstr_from_strn(i0, i1);
  i0 = mp_module_get(i0);
  l1 = i0;
  B17:;
  i0 = l0;
  i1 = 304u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B16:;
  i0 = l0;
  i1 = 272u;
  i0 += i1;
  i1 = 256u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  vstr_init_fixed_buf(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 288));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B19;}
  i0 = l2;
  i1 = 14u;
  i0 = i0 != i1;
  l5 = i0;
  i0 = l0;
  i1 = 280u;
  i0 += i1;
  l6 = i0;
  i0 = 1u;
  l1 = i0;
  i0 = 0u;
  l7 = i0;
  i0 = 0u;
  l8 = i0;
  i0 = 0u;
  l9 = i0;
  i0 = 0u;
  l3 = i0;
  L21: vm_checktime();
    i0 = l1;
    i1 = p1;
    i0 = i0 == i1;
    if (i0) {goto B35;}
    i0 = p0;
    i1 = l1;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 46u;
    i0 = i0 != i1;
    if (i0) {goto B34;}
    B35:;
    i0 = p0;
    i1 = l1;
    i0 = qstr_from_strn(i0, i1);
    l10 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 276));
    i0 = !(i0);
    if (i0) {goto B36;}
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = 47u;
    vstr_add_char(i0, i1);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = p0;
    i2 = l9;
    i1 += i2;
    i2 = l1;
    i3 = l9;
    i2 -= i3;
    vstr_add_strn(i0, i1, i2);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    l4 = i0;
    i0 = mp_frozen_stat(i0);
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B33;}
    i0 = 1u;
    p1 = i0;
    i0 = l3;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B32;}
    goto B26;
    B36:;
    i0 = 5272u;
    i1 = l0;
    i2 = 300u;
    i1 += i2;
    i2 = l0;
    i3 = 296u;
    i2 += i3;
    mp_obj_list_get(i0, i1, i2);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 300));
    i0 = !(i0);
    if (i0) {goto B31;}
    i0 = 0u;
    l3 = i0;
    i0 = 0u;
    l11 = i0;
    L37: vm_checktime();
      i0 = l0;
      i1 = 0u;
      i32_store((&M0), (u64)(i0 + 276), i1);
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 296));
      i1 = l3;
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l0;
      i2 = 292u;
      i1 += i2;
      i0 = mp_obj_str_get_data(i0, i1);
      p1 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 292));
      l4 = i0;
      i0 = !(i0);
      if (i0) {goto B38;}
      i0 = l0;
      i1 = 272u;
      i0 += i1;
      i1 = p1;
      i2 = l4;
      vstr_add_strn(i0, i1, i2);
      i0 = l0;
      i1 = 272u;
      i0 += i1;
      i1 = 47u;
      vstr_add_char(i0, i1);
      B38:;
      i0 = l0;
      i1 = 272u;
      i0 += i1;
      i1 = p0;
      i2 = l1;
      vstr_add_strn(i0, i1, i2);
      i0 = l0;
      i1 = 272u;
      i0 += i1;
      i0 = vstr_null_terminated_str(i0);
      p1 = i0;
      i0 = mp_frozen_stat(i0);
      l4 = i0;
      if (i0) {goto B39;}
      i0 = p1;
      i0 = mp_import_stat(i0);
      l4 = i0;
      B39:;
      i0 = 1u;
      p1 = i0;
      i0 = l4;
      i1 = 1u;
      i0 = i0 == i1;
      if (i0) {goto B26;}
      i0 = l0;
      i1 = 272u;
      i0 += i1;
      i1 = 18261u;
      vstr_add_str(i0, i1);
      i0 = l0;
      i1 = 272u;
      i0 += i1;
      i0 = vstr_null_terminated_str(i0);
      p1 = i0;
      i0 = mp_frozen_stat(i0);
      l4 = i0;
      if (i0) {goto B40;}
      i0 = p1;
      i0 = mp_import_stat(i0);
      l4 = i0;
      B40:;
      i0 = 2u;
      p1 = i0;
      i0 = l4;
      i1 = 2u;
      i0 = i0 == i1;
      if (i0) {goto B26;}
      i0 = l0;
      i1 = 272u;
      i0 += i1;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 276));
      i2 = 4294967294u;
      i1 += i2;
      i2 = 109u;
      vstr_ins_byte(i0, i1, i2);
      i0 = l0;
      i1 = 272u;
      i0 += i1;
      i0 = vstr_null_terminated_str(i0);
      p1 = i0;
      i0 = mp_frozen_stat(i0);
      l4 = i0;
      if (i0) {goto B41;}
      i0 = p1;
      i0 = mp_import_stat(i0);
      l4 = i0;
      B41:;
      i0 = 2u;
      p1 = i0;
      i0 = l4;
      i1 = 2u;
      i0 = i0 == i1;
      if (i0) {goto B26;}
      i0 = l3;
      i1 = 4u;
      i0 += i1;
      l3 = i0;
      i0 = l11;
      i1 = 1u;
      i0 += i1;
      l11 = i0;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 300));
      i0 = i0 < i1;
      if (i0) {goto L37;}
      goto B25;
    B34:;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i1 = p1;
    i0 = i0 <= i1;
    if (i0) {goto L21;}
    goto B18;
    B33:;
    i0 = 1u;
    p1 = i0;
    i0 = l4;
    i0 = mp_import_stat(i0);
    i1 = 1u;
    i0 = i0 == i1;
    if (i0) {goto B26;}
    B32:;
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = 18261u;
    vstr_add_str(i0, i1);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    l4 = i0;
    i0 = mp_frozen_stat(i0);
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B30;}
    i0 = 2u;
    p1 = i0;
    i0 = l3;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B29;}
    goto B26;
    B31:;
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = p0;
    i2 = l1;
    vstr_add_strn(i0, i1, i2);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    l4 = i0;
    i0 = mp_frozen_stat(i0);
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B28;}
    i0 = 1u;
    p1 = i0;
    i0 = l3;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B27;}
    goto B26;
    B30:;
    i0 = 2u;
    p1 = i0;
    i0 = l4;
    i0 = mp_import_stat(i0);
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B26;}
    B29:;
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 276));
    i2 = 4294967294u;
    i1 += i2;
    i2 = 109u;
    vstr_ins_byte(i0, i1, i2);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    l4 = i0;
    i0 = mp_frozen_stat(i0);
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B42;}
    i0 = 2u;
    p1 = i0;
    i0 = l3;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B26;}
    goto B25;
    B42:;
    i0 = 2u;
    p1 = i0;
    i0 = l4;
    i0 = mp_import_stat(i0);
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B25;}
    goto B26;
    B28:;
    i0 = 1u;
    p1 = i0;
    i0 = l4;
    i0 = mp_import_stat(i0);
    i1 = 1u;
    i0 = i0 == i1;
    if (i0) {goto B26;}
    B27:;
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = 18261u;
    vstr_add_str(i0, i1);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    l4 = i0;
    i0 = mp_frozen_stat(i0);
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B44;}
    i0 = 2u;
    p1 = i0;
    i0 = l3;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B43;}
    goto B26;
    B44:;
    i0 = 2u;
    p1 = i0;
    i0 = l4;
    i0 = mp_import_stat(i0);
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B26;}
    B43:;
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 276));
    i2 = 4294967294u;
    i1 += i2;
    i2 = 109u;
    vstr_ins_byte(i0, i1, i2);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    p1 = i0;
    i0 = mp_frozen_stat(i0);
    l3 = i0;
    if (i0) {goto B45;}
    i0 = p1;
    i0 = mp_import_stat(i0);
    l3 = i0;
    B45:;
    i0 = 2u;
    p1 = i0;
    i0 = l3;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B25;}
    B26:;
    i0 = l10;
    i0 = mp_module_get(i0);
    l3 = i0;
    if (i0) {goto B24;}
    i0 = l10;
    i0 = mp_obj_new_module(i0);
    l3 = i0;
    i0 = p1;
    i1 = 1u;
    i0 = i0 == i1;
    if (i0) {goto B53;}
    i0 = l5;
    if (i0) {goto B53;}
    i0 = l1;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 288));
    i0 = i0 != i1;
    if (i0) {goto B53;}
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    i1 = 186u;
    i2 = 170u;
    i0 = mp_obj_dict_store(i0, i1, i2);
    i0 = 5228u;
    i1 = 170u;
    i2 = l3;
    i0 = mp_obj_dict_store(i0, i1, i2);
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    i1 = 170u;
    i2 = l10;
    i3 = 3u;
    i2 <<= (i3 & 31);
    i3 = 2u;
    i2 |= i3;
    i0 = mp_obj_dict_store(i0, i1, i2);
    goto B52;
    B53:;
    i0 = p1;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B52;}
    i0 = l3;
    i1 = 193u;
    i2 = l6;
    i2 = i32_load((&M0), (u64)(i2));
    i3 = l0;
    i3 = i32_load((&M0), (u64)(i3 + 276));
    i2 = mp_obj_new_str(i2, i3);
    mp_store_attr(i0, i1, i2);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 276));
    p1 = i0;
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = 47u;
    vstr_add_char(i0, i1);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = 13805u;
    vstr_add_str(i0, i1);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    l11 = i0;
    i0 = mp_frozen_stat(i0);
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B51;}
    i0 = l4;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B50;}
    goto B49;
    B52:;
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    p1 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 276));
    i2 = l0;
    i3 = 300u;
    i2 += i3;
    i0 = mp_find_frozen_module(i0, i1, i2);
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B48;}
    i0 = l3;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 300));
    i2 = p1;
    do_execute_raw_code(i0, i1, i2);
    i0 = l7;
    if (i0) {goto B23;}
    goto B22;
    B51:;
    i0 = l11;
    i0 = mp_import_stat(i0);
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B49;}
    B50:;
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 276));
    i2 = 4294967294u;
    i1 += i2;
    i2 = 109u;
    vstr_ins_byte(i0, i1, i2);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    l11 = i0;
    i0 = mp_frozen_stat(i0);
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B54;}
    i0 = l4;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B49;}
    goto B46;
    B54:;
    i0 = l11;
    i0 = mp_import_stat(i0);
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B46;}
    B49:;
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    l4 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 276));
    i2 = l0;
    i3 = 300u;
    i2 += i3;
    i0 = mp_find_frozen_module(i0, i1, i2);
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B47;}
    i0 = l3;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 300));
    i2 = l4;
    do_execute_raw_code(i0, i1, i2);
    i0 = l0;
    i1 = p1;
    i32_store((&M0), (u64)(i0 + 276), i1);
    i0 = l7;
    if (i0) {goto B23;}
    goto B22;
    B48:;
    i0 = 36716u;
    i1 = 18404u;
    mp_raise_msg(i0, i1);
    UNREACHABLE;
    B47:;
    i0 = 36716u;
    i1 = 18404u;
    mp_raise_msg(i0, i1);
    UNREACHABLE;
    B46:;
    i0 = l0;
    i1 = p1;
    i32_store((&M0), (u64)(i0 + 276), i1);
    i0 = l7;
    if (i0) {goto B23;}
    goto B22;
    B25:;
    i0 = l1;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 288));
    i0 = i0 != i1;
    if (i0) {goto B20;}
    i0 = p0;
    i0 = mp_module_search_umodule(i0);
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B20;}
    B24:;
    i0 = l7;
    i0 = !(i0);
    if (i0) {goto B22;}
    B23:;
    i0 = l7;
    i1 = p0;
    i2 = l9;
    i1 += i2;
    i2 = l1;
    i3 = l9;
    i2 -= i3;
    i1 = qstr_from_strn(i1, i2);
    i2 = l3;
    mp_store_attr(i0, i1, i2);
    B22:;
    i0 = l8;
    i1 = l3;
    i2 = l8;
    i0 = i2 ? i0 : i1;
    l8 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    l9 = i0;
    i0 = l3;
    l7 = i0;
    i0 = l1;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 288));
    p1 = i1;
    i0 = i0 <= i1;
    if (i0) {goto L21;}
    goto B18;
  B20:;
  i0 = l0;
  i1 = l10;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 36716u;
  i1 = 13083u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B19:;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l8 = i0;
  B18:;
  i0 = l0;
  i1 = 304u;
  i0 += i1;
  g0 = i0;
  i0 = l8;
  i1 = l3;
  i2 = l2;
  i3 = 6u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void do_execute_raw_code(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 192u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 176u;
  i2 = p2;
  i2 = qstr_from_str(i2);
  i3 = 3u;
  i2 <<= (i3 & 31);
  i3 = 2u;
  i2 |= i3;
  mp_store_attr(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i0 = l0;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5184));
  i32_store((&M0), (u64)(i0 + 188), i1);
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5184), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5180));
  p2 = i0;
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5180), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 184), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = nlr_push_tail(i0);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i0 = setjmp_ex(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 0u;
  i2 = 0u;
  i0 = mp_make_function_from_raw_code(i0, i1, i2);
  i0 = mp_call_function_0(i0);
  nlr_pop();
  i0 = 0u;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 188));
  i32_store((&M0), (u64)(i0 + 5184), i1);
  i0 = 0u;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 184));
  i32_store((&M0), (u64)(i0 + 5180), i1);
  i0 = l0;
  i1 = 192u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = 0u;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 188));
  i32_store((&M0), (u64)(i0 + 5184), i1);
  i0 = 0u;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 184));
  i32_store((&M0), (u64)(i0 + 5180), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 micropython_new_module(void) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 14480u;
  i1 = qstr_from_str(i1);
  i1 = mp_obj_new_module(i1);
  i32_store((&M0), (u64)(i0 + 5792), i1);
  i0 = 1u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 micropython_init_module_from_mpy(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 176u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i0 = nlr_push_tail(i0);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = setjmp_ex(i0);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 33856u;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  mp_obj_print_exception(i0, i1);
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = p1;
  i0 = mp_raw_code_load_mem(i0, i1);
  p0 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5792));
  i1 = p0;
  i2 = 0u;
  do_execute_raw_code(i0, i1, i2);
  i0 = 0u;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5792));
  i2 = 15040u;
  i2 = qstr_from_str(i2);
  i1 = mp_load_attr(i1, i2);
  i32_store((&M0), (u64)(i0 + 5796), i1);
  nlr_pop();
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = 1u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 micropython_init_module_from_mpy_with_name(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 176u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i0 = nlr_push_tail(i0);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = setjmp_ex(i0);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 33856u;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  mp_obj_print_exception(i0, i1);
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 15681u;
  i2 = p0;
  i0 = i2 ? i0 : i1;
  i0 = qstr_from_str(i0);
  i0 = mp_obj_new_module(i0);
  p0 = i0;
  i1 = p1;
  i2 = p2;
  i1 = mp_raw_code_load_mem(i1, i2);
  i2 = 0u;
  do_execute_raw_code(i0, i1, i2);
  nlr_pop();
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 micropython_init_module(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = p2;
  i0 = micropython_init_module_from_mpy(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 micropython_apply(u64 p0, u64 p1, u64 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1;
  i0 = g0;
  i1 = 192u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i0 = nlr_push_tail(i0);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i0 = setjmp_ex(i0);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 33856u;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  mp_obj_print_exception(i0, i1);
  i0 = l0;
  i1 = 192u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = l0;
  j1 = p0;
  i1 = mp_obj_new_name_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  j1 = p1;
  i1 = mp_obj_new_name_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  j1 = p2;
  i1 = mp_obj_new_name_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5796));
  i1 = 3u;
  i2 = 0u;
  i3 = l0;
  i4 = 4u;
  i3 += i4;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  nlr_pop();
  i0 = l0;
  i1 = 192u;
  i0 += i1;
  g0 = i0;
  i0 = 1u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void micropython_init_frozen_modules(void) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 15681u;
  i2 = 15681u;
  i2 = strlen_0(i2);
  i1 = mp_obj_new_str(i1, i2);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 1u;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_builtin___import__(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void bool_print(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p2;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 10599u;
  i0 = mp_print_str(i0, i1);
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 16952u;
  i0 = mp_print_str(i0, i1);
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = 11695u;
  i0 = mp_print_str(i0, i1);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 13104u;
  i0 = mp_print_str(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 bool_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 30u;
  i1 = 14u;
  i2 = p3;
  i2 = i32_load((&M0), (u64)(i2));
  i2 = mp_obj_is_true(i2);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B0:;
  i0 = 14u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 bool_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = 14u;
  i1 = i1 != i2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 1u;
  i1 |= i2;
  i0 = mp_unary_op(i0, i1);
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 bool_binary_op(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i2 = 14u;
  i1 = i1 != i2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 1u;
  i1 |= i2;
  i2 = p2;
  i0 = mp_binary_op(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_binary_get_size(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 60u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = p0;
  i1 = 64u;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  i0 = p0;
  i1 = 62u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  B9:;
  i0 = p1;
  i1 = 4294967230u;
  i0 += i1;
  l0 = i0;
  i1 = 47u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = 1u;
  p1 = i0;
  i0 = 1u;
  p0 = i0;
  i0 = l0;
  switch (i0) {
    case 0: goto B7;
    case 1: goto B2;
    case 2: goto B2;
    case 3: goto B2;
    case 4: goto B2;
    case 5: goto B2;
    case 6: goto B5;
    case 7: goto B10;
    case 8: goto B2;
    case 9: goto B2;
    case 10: goto B10;
    case 11: goto B2;
    case 12: goto B2;
    case 13: goto B10;
    case 14: goto B10;
    case 15: goto B6;
    case 16: goto B2;
    case 17: goto B10;
    case 18: goto B2;
    case 19: goto B2;
    case 20: goto B2;
    case 21: goto B2;
    case 22: goto B2;
    case 23: goto B2;
    case 24: goto B2;
    case 25: goto B2;
    case 26: goto B2;
    case 27: goto B2;
    case 28: goto B2;
    case 29: goto B2;
    case 30: goto B2;
    case 31: goto B2;
    case 32: goto B7;
    case 33: goto B2;
    case 34: goto B6;
    case 35: goto B2;
    case 36: goto B10;
    case 37: goto B2;
    case 38: goto B5;
    case 39: goto B10;
    case 40: goto B2;
    case 41: goto B2;
    case 42: goto B10;
    case 43: goto B2;
    case 44: goto B2;
    case 45: goto B2;
    case 46: goto B2;
    case 47: goto B6;
    default: goto B7;
  }
  B10:;
  i0 = 4u;
  p0 = i0;
  i0 = p2;
  if (i0) {goto B1;}
  goto B0;
  B8:;
  i0 = p1;
  i1 = 4294967295u;
  i0 += i1;
  l0 = i0;
  i1 = 112u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = 1u;
  p0 = i0;
  i0 = 1u;
  p1 = i0;
  i0 = l0;
  switch (i0) {
    case 0: goto B7;
    case 1: goto B2;
    case 2: goto B2;
    case 3: goto B2;
    case 4: goto B2;
    case 5: goto B2;
    case 6: goto B2;
    case 7: goto B2;
    case 8: goto B2;
    case 9: goto B2;
    case 10: goto B2;
    case 11: goto B2;
    case 12: goto B2;
    case 13: goto B2;
    case 14: goto B2;
    case 15: goto B2;
    case 16: goto B2;
    case 17: goto B2;
    case 18: goto B2;
    case 19: goto B2;
    case 20: goto B2;
    case 21: goto B2;
    case 22: goto B2;
    case 23: goto B2;
    case 24: goto B2;
    case 25: goto B2;
    case 26: goto B2;
    case 27: goto B2;
    case 28: goto B2;
    case 29: goto B2;
    case 30: goto B2;
    case 31: goto B2;
    case 32: goto B2;
    case 33: goto B2;
    case 34: goto B2;
    case 35: goto B2;
    case 36: goto B2;
    case 37: goto B2;
    case 38: goto B2;
    case 39: goto B2;
    case 40: goto B2;
    case 41: goto B2;
    case 42: goto B2;
    case 43: goto B2;
    case 44: goto B2;
    case 45: goto B2;
    case 46: goto B2;
    case 47: goto B2;
    case 48: goto B2;
    case 49: goto B2;
    case 50: goto B2;
    case 51: goto B2;
    case 52: goto B2;
    case 53: goto B2;
    case 54: goto B2;
    case 55: goto B2;
    case 56: goto B2;
    case 57: goto B2;
    case 58: goto B2;
    case 59: goto B2;
    case 60: goto B2;
    case 61: goto B2;
    case 62: goto B2;
    case 63: goto B2;
    case 64: goto B2;
    case 65: goto B7;
    case 66: goto B2;
    case 67: goto B2;
    case 68: goto B2;
    case 69: goto B2;
    case 70: goto B2;
    case 71: goto B3;
    case 72: goto B11;
    case 73: goto B2;
    case 74: goto B2;
    case 75: goto B11;
    case 76: goto B2;
    case 77: goto B2;
    case 78: goto B11;
    case 79: goto B11;
    case 80: goto B4;
    case 81: goto B2;
    case 82: goto B11;
    case 83: goto B2;
    case 84: goto B2;
    case 85: goto B2;
    case 86: goto B2;
    case 87: goto B2;
    case 88: goto B2;
    case 89: goto B2;
    case 90: goto B2;
    case 91: goto B2;
    case 92: goto B2;
    case 93: goto B2;
    case 94: goto B2;
    case 95: goto B2;
    case 96: goto B2;
    case 97: goto B7;
    case 98: goto B2;
    case 99: goto B4;
    case 100: goto B2;
    case 101: goto B11;
    case 102: goto B2;
    case 103: goto B3;
    case 104: goto B11;
    case 105: goto B2;
    case 106: goto B2;
    case 107: goto B11;
    case 108: goto B2;
    case 109: goto B2;
    case 110: goto B2;
    case 111: goto B2;
    case 112: goto B4;
    default: goto B7;
  }
  B11:;
  i0 = 4u;
  p0 = i0;
  i0 = 4u;
  p1 = i0;
  B7:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B1;
  B6:;
  i0 = 8u;
  p0 = i0;
  i0 = p2;
  if (i0) {goto B1;}
  goto B0;
  B5:;
  i0 = 2u;
  p0 = i0;
  i0 = p2;
  if (i0) {goto B1;}
  goto B0;
  B4:;
  i0 = 8u;
  p0 = i0;
  i0 = 8u;
  p1 = i0;
  i0 = p2;
  if (i0) {goto B1;}
  goto B0;
  B3:;
  i0 = 2u;
  p0 = i0;
  i0 = 2u;
  p1 = i0;
  i0 = p2;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = 10604u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B1:;
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_binary_get_val_array(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0;
  f32 f0;
  f64 d0;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 4294967295u;
  i0 += i1;
  p0 = i0;
  i1 = 112u;
  i0 = i0 > i1;
  if (i0) {goto B13;}
  i0 = p0;
  switch (i0) {
    case 0: goto B14;
    case 1: goto B13;
    case 2: goto B13;
    case 3: goto B13;
    case 4: goto B13;
    case 5: goto B13;
    case 6: goto B13;
    case 7: goto B13;
    case 8: goto B13;
    case 9: goto B13;
    case 10: goto B13;
    case 11: goto B13;
    case 12: goto B13;
    case 13: goto B13;
    case 14: goto B13;
    case 15: goto B13;
    case 16: goto B13;
    case 17: goto B13;
    case 18: goto B13;
    case 19: goto B13;
    case 20: goto B13;
    case 21: goto B13;
    case 22: goto B13;
    case 23: goto B13;
    case 24: goto B13;
    case 25: goto B13;
    case 26: goto B13;
    case 27: goto B13;
    case 28: goto B13;
    case 29: goto B13;
    case 30: goto B13;
    case 31: goto B13;
    case 32: goto B13;
    case 33: goto B13;
    case 34: goto B13;
    case 35: goto B13;
    case 36: goto B13;
    case 37: goto B13;
    case 38: goto B13;
    case 39: goto B13;
    case 40: goto B13;
    case 41: goto B13;
    case 42: goto B13;
    case 43: goto B13;
    case 44: goto B13;
    case 45: goto B13;
    case 46: goto B13;
    case 47: goto B13;
    case 48: goto B13;
    case 49: goto B13;
    case 50: goto B13;
    case 51: goto B13;
    case 52: goto B13;
    case 53: goto B13;
    case 54: goto B13;
    case 55: goto B13;
    case 56: goto B13;
    case 57: goto B13;
    case 58: goto B13;
    case 59: goto B13;
    case 60: goto B13;
    case 61: goto B13;
    case 62: goto B13;
    case 63: goto B13;
    case 64: goto B13;
    case 65: goto B14;
    case 66: goto B13;
    case 67: goto B13;
    case 68: goto B13;
    case 69: goto B13;
    case 70: goto B13;
    case 71: goto B12;
    case 72: goto B11;
    case 73: goto B13;
    case 74: goto B13;
    case 75: goto B10;
    case 76: goto B13;
    case 77: goto B13;
    case 78: goto B9;
    case 79: goto B8;
    case 80: goto B7;
    case 81: goto B13;
    case 82: goto B13;
    case 83: goto B13;
    case 84: goto B13;
    case 85: goto B13;
    case 86: goto B13;
    case 87: goto B13;
    case 88: goto B13;
    case 89: goto B13;
    case 90: goto B13;
    case 91: goto B13;
    case 92: goto B13;
    case 93: goto B13;
    case 94: goto B13;
    case 95: goto B13;
    case 96: goto B13;
    case 97: goto B0;
    case 98: goto B13;
    case 99: goto B6;
    case 100: goto B13;
    case 101: goto B5;
    case 102: goto B13;
    case 103: goto B4;
    case 104: goto B3;
    case 105: goto B13;
    case 106: goto B13;
    case 107: goto B2;
    case 108: goto B13;
    case 109: goto B13;
    case 110: goto B13;
    case 111: goto B13;
    case 112: goto B1;
    default: goto B14;
  }
  B14:;
  i0 = p1;
  i1 = p2;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l0 = i0;
  B13:;
  i0 = l0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B12:;
  i0 = p1;
  i1 = p2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load16_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B11:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_new_int_from_uint(i0);
  goto Bfunc;
  B10:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_new_int_from_uint(i0);
  goto Bfunc;
  B9:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  goto Bfunc;
  B8:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_new_int(i0);
  goto Bfunc;
  B7:;
  i0 = p1;
  i1 = p2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  i0 = mp_obj_new_int_from_ull(j0);
  goto Bfunc;
  B6:;
  i0 = p1;
  i1 = p2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  d0 = f64_load((&M0), (u64)(i0));
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B5:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  f0 = f32_load((&M0), (u64)(i0));
  d0 = (*Z_eosio_injectionZ__eosio_f32_promoteZ_df)(f0);
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B4:;
  i0 = p1;
  i1 = p2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load16_s((&M0), (u64)(i0));
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B3:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_new_int(i0);
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_new_int(i0);
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = p2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  i0 = mp_obj_new_int_from_ll(j0);
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = p2;
  i0 += i1;
  i0 = i32_load8_s((&M0), (u64)(i0));
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_binary_get_val(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  u64 l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  f32 f0;
  f64 d0;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i3 = 12u;
  i2 += i3;
  i0 = mp_binary_get_size(i0, i1, i2);
  l2 = i0;
  i0 = p0;
  i1 = 64u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = p2;
  i2 = 4294967295u;
  i1 ^= i2;
  i2 = l1;
  i1 += i2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  p0 = i2;
  i1 += i2;
  i2 = 0u;
  i3 = p0;
  i2 -= i3;
  i1 &= i2;
  i0 += i1;
  l1 = i0;
  i0 = 60u;
  p0 = i0;
  B0:;
  i0 = p3;
  i1 = l1;
  i2 = l2;
  i1 += i2;
  p2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = p2;
  i2 = 4294967295u;
  i1 += i2;
  i2 = p0;
  i3 = 62u;
  i2 = i2 == i3;
  p3 = i2;
  i0 = i2 ? i0 : i1;
  p0 = i0;
  j0 = 0ull;
  l3 = j0;
  i0 = p1;
  i1 = 91u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load8_s((&M0), (u64)(i0));
  j0 = (u64)(i0);
  j1 = 49ull;
  j0 <<= (j1 & 63);
  j1 = 56ull;
  j0 = (u64)((s64)j0 >> (j1 & 63));
  l3 = j0;
  B1:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 1u;
  i1 = 4294967295u;
  i2 = p3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  L3: vm_checktime();
    j0 = l3;
    j1 = 8ull;
    j0 <<= (j1 & 63);
    i1 = p0;
    j1 = i64_load8_u((&M0), (u64)(i1));
    j0 |= j1;
    l3 = j0;
    i0 = p0;
    i1 = l1;
    i0 += i1;
    p0 = i0;
    i0 = l2;
    i1 = 4294967295u;
    i0 += i1;
    l2 = i0;
    if (i0) {goto L3;}
  B2:;
  i0 = p1;
  i1 = 4294967217u;
  i0 += i1;
  p0 = i0;
  i1 = 23u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = p0;
  switch (i0) {
    case 0: goto B8;
    case 1: goto B4;
    case 2: goto B4;
    case 3: goto B4;
    case 4: goto B7;
    case 5: goto B4;
    case 6: goto B4;
    case 7: goto B4;
    case 8: goto B4;
    case 9: goto B4;
    case 10: goto B4;
    case 11: goto B4;
    case 12: goto B4;
    case 13: goto B4;
    case 14: goto B4;
    case 15: goto B4;
    case 16: goto B4;
    case 17: goto B4;
    case 18: goto B4;
    case 19: goto B4;
    case 20: goto B4;
    case 21: goto B6;
    case 22: goto B4;
    case 23: goto B5;
    default: goto B8;
  }
  B8:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  j0 = l3;
  i0 = (u32)(j0);
  goto Bfunc;
  B7:;
  j0 = l3;
  i0 = (u32)(j0);
  p0 = i0;
  i1 = p0;
  i1 = strlen_0(i1);
  i0 = mp_obj_new_str(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B6:;
  j0 = l3;
  d0 = f64_reinterpret_i64(j0);
  i0 = mp_obj_new_float(d0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B5:;
  j0 = l3;
  i0 = (u32)(j0);
  f0 = f32_reinterpret_i32(i0);
  d0 = (*Z_eosio_injectionZ__eosio_f32_promoteZ_df)(f0);
  i0 = mp_obj_new_float(d0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B4:;
  i0 = p1;
  i1 = 91u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B11;}
  j0 = l3;
  j1 = 1073741824ull;
  j0 += j1;
  j1 = 2147483647ull;
  i0 = j0 > j1;
  if (i0) {goto B10;}
  j0 = l3;
  i0 = (u32)(j0);
  i0 = mp_obj_new_int(i0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B11:;
  j0 = l3;
  j1 = 1073741823ull;
  i0 = j0 > j1;
  if (i0) {goto B9;}
  j0 = l3;
  i0 = (u32)(j0);
  i0 = mp_obj_new_int_from_uint(i0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B10:;
  j0 = l3;
  i0 = mp_obj_new_int_from_ll(j0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B9:;
  j0 = l3;
  i0 = mp_obj_new_int_from_ull(j0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_binary_set_int(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p3;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  L2: vm_checktime();
    i0 = p2;
    i1 = l0;
    i2 = 12u;
    i1 += i2;
    i2 = p0;
    i1 += i2;
    i2 = 4294967295u;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = 1u;
    i0 += i1;
    p2 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L2;}
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = p2;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = p0;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_binary_set_val(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  f32 f0;
  f64 d0, d1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p4;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i0 = mp_binary_get_size(i0, i1, i2);
  l2 = i0;
  i0 = p0;
  i1 = 64u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p3;
  i1 = p3;
  i2 = 4294967295u;
  i1 ^= i2;
  i2 = l1;
  i1 += i2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  l1 = i2;
  i1 += i2;
  i2 = 0u;
  i3 = l1;
  i2 -= i3;
  i1 &= i2;
  i0 += i1;
  l1 = i0;
  i0 = 60u;
  p0 = i0;
  B0:;
  i0 = p4;
  i1 = l1;
  i2 = l2;
  i1 += i2;
  p3 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 102u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 100u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p1;
  i1 = 79u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B5:;
  i0 = p2;
  i0 = mp_obj_get_int(i0);
  p2 = i0;
  i0 = l2;
  i1 = 5u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = l1;
  i1 = p2;
  i2 = 31u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = 255u;
  i1 &= i2;
  i2 = 0u;
  i3 = p1;
  i4 = 90u;
  i3 = (u32)((s32)i3 > (s32)i4);
  i1 = i3 ? i1 : i2;
  i2 = l2;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p3;
  i1 = 4294967292u;
  i0 += i1;
  i1 = l1;
  i2 = p0;
  i3 = 62u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  goto B2;
  B4:;
  i0 = p2;
  d0 = mp_obj_get_float(i0);
  f0 = (*Z_eosio_injectionZ__eosio_f64_demoteZ_fd)(d0);
  i0 = i32_reinterpret_f32(f0);
  p2 = i0;
  goto B2;
  B3:;
  i0 = l0;
  i1 = p2;
  d1 = mp_obj_get_float(i1);
  f64_store((&M0), (u64)(i0), d1);
  i0 = l0;
  i1 = l0;
  i2 = p0;
  i3 = 62u;
  i2 = i2 == i3;
  p1 = i2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i1 = i32_load((&M0), (u64)(i1));
  p2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l1;
  i1 = p2;
  i2 = 24u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 14));
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = l1;
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 12));
  i32_store8((&M0), (u64)(i0 + 3), i1);
  i0 = l1;
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 13));
  i32_store8((&M0), (u64)(i0 + 2), i1);
  goto B6;
  B7:;
  i0 = l1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B6:;
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = l0;
  i1 = p1;
  i2 = 1u;
  i1 ^= i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 |= i1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  B2:;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 4u;
  i2 = l2;
  i3 = 4u;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i0 = p0;
  i1 = 62u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p1;
  i1 = 1u;
  i0 += i1;
  p0 = i0;
  L10: vm_checktime();
    i0 = l1;
    i1 = l0;
    i2 = p0;
    i1 += i2;
    i2 = 4294967294u;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto L10;}
  B9:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B8:;
  i0 = l1;
  i1 = l0;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = p0;
  i2 = 62u;
  i1 = i1 == i2;
  i2 = l2;
  i3 = l1;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_binary_set_val_array(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  f32 f1;
  f64 d1;
  i0 = p0;
  i1 = 79u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 100u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 102u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  d1 = mp_obj_get_float(i1);
  f1 = (*Z_eosio_injectionZ__eosio_f64_demoteZ_fd)(d1);
  f32_store((&M0), (u64)(i0), f1);
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = p2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  d1 = mp_obj_get_float(i1);
  f64_store((&M0), (u64)(i0), d1);
  goto Bfunc;
  B0:;
  i0 = p3;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  B4:;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i3 = mp_obj_get_int(i3);
  mp_binary_set_val_array_from_int(i0, i1, i2, i3);
  goto Bfunc;
  B3:;
  i0 = p3;
  i1 = 0u;
  i2 = 64u;
  i3 = p0;
  i4 = 0u;
  i2 = mp_binary_get_size(i2, i3, i4);
  p0 = i2;
  i3 = p1;
  i4 = p0;
  i5 = p2;
  i4 *= i5;
  i3 += i4;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_binary_set_val_array_from_int(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  f32 f1;
  f64 d1;
  i0 = p0;
  i1 = 4294967295u;
  i0 += i1;
  p0 = i0;
  i1 = 112u;
  i0 = i0 > i1;
  if (i0) {goto B8;}
  i0 = p0;
  switch (i0) {
    case 0: goto B13;
    case 1: goto B8;
    case 2: goto B8;
    case 3: goto B8;
    case 4: goto B8;
    case 5: goto B8;
    case 6: goto B8;
    case 7: goto B8;
    case 8: goto B8;
    case 9: goto B8;
    case 10: goto B8;
    case 11: goto B8;
    case 12: goto B8;
    case 13: goto B8;
    case 14: goto B8;
    case 15: goto B8;
    case 16: goto B8;
    case 17: goto B8;
    case 18: goto B8;
    case 19: goto B8;
    case 20: goto B8;
    case 21: goto B8;
    case 22: goto B8;
    case 23: goto B8;
    case 24: goto B8;
    case 25: goto B8;
    case 26: goto B8;
    case 27: goto B8;
    case 28: goto B8;
    case 29: goto B8;
    case 30: goto B8;
    case 31: goto B8;
    case 32: goto B8;
    case 33: goto B8;
    case 34: goto B8;
    case 35: goto B8;
    case 36: goto B8;
    case 37: goto B8;
    case 38: goto B8;
    case 39: goto B8;
    case 40: goto B8;
    case 41: goto B8;
    case 42: goto B8;
    case 43: goto B8;
    case 44: goto B8;
    case 45: goto B8;
    case 46: goto B8;
    case 47: goto B8;
    case 48: goto B8;
    case 49: goto B8;
    case 50: goto B8;
    case 51: goto B8;
    case 52: goto B8;
    case 53: goto B8;
    case 54: goto B8;
    case 55: goto B8;
    case 56: goto B8;
    case 57: goto B8;
    case 58: goto B8;
    case 59: goto B8;
    case 60: goto B8;
    case 61: goto B8;
    case 62: goto B8;
    case 63: goto B8;
    case 64: goto B8;
    case 65: goto B13;
    case 66: goto B8;
    case 67: goto B8;
    case 68: goto B8;
    case 69: goto B8;
    case 70: goto B8;
    case 71: goto B12;
    case 72: goto B11;
    case 73: goto B8;
    case 74: goto B8;
    case 75: goto B10;
    case 76: goto B8;
    case 77: goto B8;
    case 78: goto B8;
    case 79: goto B9;
    case 80: goto B7;
    case 81: goto B8;
    case 82: goto B8;
    case 83: goto B8;
    case 84: goto B8;
    case 85: goto B8;
    case 86: goto B8;
    case 87: goto B8;
    case 88: goto B8;
    case 89: goto B8;
    case 90: goto B8;
    case 91: goto B8;
    case 92: goto B8;
    case 93: goto B8;
    case 94: goto B8;
    case 95: goto B8;
    case 96: goto B8;
    case 97: goto B6;
    case 98: goto B8;
    case 99: goto B5;
    case 100: goto B8;
    case 101: goto B4;
    case 102: goto B8;
    case 103: goto B3;
    case 104: goto B2;
    case 105: goto B8;
    case 106: goto B8;
    case 107: goto B1;
    case 108: goto B8;
    case 109: goto B8;
    case 110: goto B8;
    case 111: goto B8;
    case 112: goto B0;
    default: goto B13;
  }
  B13:;
  i0 = p1;
  i1 = p2;
  i0 += i1;
  i1 = p3;
  i32_store8((&M0), (u64)(i0), i1);
  goto Bfunc;
  B12:;
  i0 = p1;
  i1 = p2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i32_store16((&M0), (u64)(i0), i1);
  goto Bfunc;
  B11:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B10:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B9:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  B8:;
  goto Bfunc;
  B7:;
  i0 = p1;
  i1 = p2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  j1 = (u64)(s64)(s32)(i1);
  i64_store((&M0), (u64)(i0), j1);
  goto Bfunc;
  B6:;
  i0 = p1;
  i1 = p2;
  i0 += i1;
  i1 = p3;
  i32_store8((&M0), (u64)(i0), i1);
  goto Bfunc;
  B5:;
  i0 = p1;
  i1 = p2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  d1 = (f64)(s32)(i1);
  f64_store((&M0), (u64)(i0), d1);
  goto Bfunc;
  B4:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  f1 = (f32)(s32)(i1);
  f32_store((&M0), (u64)(i0), f1);
  goto Bfunc;
  B3:;
  i0 = p1;
  i1 = p2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i32_store16((&M0), (u64)(i0), i1);
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = p2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  j1 = (u64)(s64)(s32)(i1);
  i64_store((&M0), (u64)(i0), j1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void array_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 10617u;
  i0 = mp_print_str(i0, i1);
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = 1u;
  mp_str_print_quoted(i0, i1, i2, i3);
  goto B0;
  B1:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 11701u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 16957u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 0u;
  l1 = i0;
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  l3 = i0;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  p1 = i0;
  L3: vm_checktime();
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B4;}
    i0 = p0;
    i1 = 13110u;
    i0 = mp_print_str(i0, i1);
    B4:;
    i0 = p0;
    i1 = p1;
    i1 = i32_load8_s((&M0), (u64)(i1));
    i2 = l3;
    i2 = i32_load((&M0), (u64)(i2));
    i3 = l1;
    i1 = mp_binary_get_val_array(i1, i2, i3);
    i2 = 1u;
    mp_obj_print_helper(i0, i1, i2);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = i0 < i1;
    if (i0) {goto L3;}
  B2:;
  i0 = p0;
  i1 = 13817u;
  i0 = mp_print_str(i0, i1);
  B0:;
  i0 = p0;
  i1 = 14489u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 array_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p1;
  i1 = p2;
  i2 = 131076u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_str_get_str(i0);
  i0 = i32_load8_u((&M0), (u64)(i0));
  p2 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 64u;
  i1 = p2;
  i2 = 24u;
  i1 <<= (i2 & 31);
  i2 = 24u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 25612u;
  i2 = 25552u;
  i3 = p2;
  i4 = 1u;
  i3 = i3 == i4;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = 0u;
  i1 = m_malloc(i1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = p2;
  i1 = 24u;
  i0 <<= (i1 & 31);
  i1 = 24u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = array_construct(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 array_construct(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 33004u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 25612u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p1;
  i1 = l0;
  i2 = 1u;
  i0 = mp_get_buffer(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 64u;
  i1 = p0;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = 64u;
  i1 = p0;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l3 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p0;
  i2 = 255u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 25612u;
  i2 = 25552u;
  i3 = p0;
  i4 = 1u;
  i3 = i3 == i4;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = l2;
  i2 = l1;
  i1 = DIV_U(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = l3;
  i2 = l2;
  i1 *= i2;
  i1 = m_malloc(i1);
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l2;
  i3 = l1;
  i2 *= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = p1;
  i0 = mp_obj_len_maybe(i0);
  l1 = i0;
  i0 = 64u;
  i1 = p0;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l2 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  l4 = i0;
  i1 = p0;
  i2 = 255u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l4;
  i1 = 25612u;
  i2 = 25552u;
  i3 = p0;
  i4 = 1u;
  i3 = i3 == i4;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = l1;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = 0u;
  i3 = l1;
  i1 = i3 ? i1 : i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l4;
  i1 = l1;
  i2 = l2;
  i1 *= i2;
  i1 = m_malloc(i1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  l2 = i0;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 0u;
  l1 = i0;
  i0 = l4;
  i1 = 12u;
  i0 += i1;
  l3 = i0;
  L4: vm_checktime();
    i0 = p0;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l1;
    i3 = p1;
    mp_binary_set_val_array(i0, i1, i2, i3);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l2;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L4;}
    goto B2;
  B3:;
  L5: vm_checktime();
    i0 = l4;
    i1 = p1;
    i0 = array_append(i0, i1);
    i0 = l2;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L5;}
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 array_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l0 = i0;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 array_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 4294967294u;
  i0 += i1;
  p0 = i0;
  i1 = 34u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = p0;
  switch (i0) {
    case 0: goto B5;
    case 1: goto B1;
    case 2: goto B1;
    case 3: goto B1;
    case 4: goto B1;
    case 5: goto B1;
    case 6: goto B1;
    case 7: goto B1;
    case 8: goto B1;
    case 9: goto B1;
    case 10: goto B1;
    case 11: goto B1;
    case 12: goto B3;
    case 13: goto B1;
    case 14: goto B1;
    case 15: goto B1;
    case 16: goto B1;
    case 17: goto B1;
    case 18: goto B1;
    case 19: goto B1;
    case 20: goto B1;
    case 21: goto B1;
    case 22: goto B1;
    case 23: goto B1;
    case 24: goto B1;
    case 25: goto B4;
    case 26: goto B1;
    case 27: goto B1;
    case 28: goto B1;
    case 29: goto B1;
    case 30: goto B1;
    case 31: goto B1;
    case 32: goto B1;
    case 33: goto B1;
    case 34: goto B2;
    default: goto B5;
  }
  B5:;
  i0 = 64u;
  i1 = p1;
  i1 = i32_load8_s((&M0), (u64)(i1 + 4));
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  p0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = 14u;
  l1 = i0;
  i0 = p2;
  i1 = l0;
  i2 = 1u;
  i0 = mp_get_buffer(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 2u;
  i1 = p1;
  i2 = l2;
  i3 = p0;
  i2 *= i3;
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3));
  i4 = l0;
  i4 = i32_load((&M0), (u64)(i4 + 4));
  i0 = mp_seq_cmp_bytes(i0, i1, i2, i3, i4);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B4:;
  i0 = 64u;
  i1 = p1;
  i1 = i32_load8_s((&M0), (u64)(i1 + 4));
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  p0 = i0;
  i0 = p2;
  i1 = l0;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = 64u;
  i1 = p0;
  i2 = 24u;
  i1 <<= (i2 & 31);
  i2 = 24u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  l4 = i1;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  p2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l5 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l6 = i0;
  i0 = 64u;
  i1 = l4;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l4 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 25612u;
  i2 = 25552u;
  i3 = p0;
  i4 = 1u;
  i3 = i3 == i4;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = l5;
  i2 = l6;
  i3 = p2;
  i2 = DIV_U(i2, i3);
  p0 = i2;
  i1 += i2;
  l5 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = l4;
  i2 = l5;
  i1 *= i2;
  i1 = m_malloc(i1);
  l4 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l4;
  i1 = l2;
  i2 = l3;
  i3 = l1;
  i2 *= i3;
  l1 = i2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l1;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p0;
  i3 = p2;
  i2 *= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B3:;
  i0 = p1;
  i1 = p2;
  i0 = array_extend(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B2:;
  i0 = p2;
  i1 = l0;
  i2 = 1u;
  i0 = mp_get_buffer(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = 14u;
  l1 = i0;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 25612u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = 64u;
  i1 = p1;
  i1 = i32_load8_s((&M0), (u64)(i1 + 4));
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  p2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i1 *= i2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  i4 = 1u;
  i0 = find_subbytes(i0, i1, i2, i3, i4);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B6:;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = 14u;
  l1 = i0;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 33608u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 array_extend(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 25612u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 25552u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p1;
  i1 = l0;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = 64u;
  i1 = p0;
  i1 = i32_load8_s((&M0), (u64)(i1 + 4));
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i1 = 8u;
  i0 >>= (i1 & 31);
  l3 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = p1;
  i1 = DIV_U(i1, i2);
  l1 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = l1;
  i2 += i3;
  i3 = p1;
  i2 *= i3;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l3 = i0;
  goto B2;
  B3:;
  i0 = l3;
  i1 = l1;
  i0 -= i1;
  i1 = 8u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 255u;
  i1 &= i2;
  i0 |= i1;
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  B2:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  p0 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i1 *= i2;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l1;
  i3 = p1;
  i2 *= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l1;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 15046u;
  i1 = 15687u;
  i2 = 355u;
  i3 = 42466u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 array_subscr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 24360u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B4:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p1;
  i3 = 0u;
  i0 = mp_get_index(i0, i1, i2, i3);
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 24u;
  i0 <<= (i1 & 31);
  i1 = 24u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = l1;
  i2 = p1;
  i3 = p2;
  mp_binary_set_val_array(i0, i1, i2, i3);
  goto B0;
  B3:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B2:;
  i0 = p0;
  i1 = 24u;
  i0 <<= (i1 & 31);
  i1 = 24u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = l1;
  i2 = p1;
  i0 = mp_binary_get_val_array(i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_seq_get_fast_slice_indexes(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = 64u;
  i1 = p0;
  i1 = i32_load8_s((&M0), (u64)(i1 + 4));
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  p1 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B11;}
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B7;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  i1 = 101u;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  i0 = l1;
  i1 = 33004u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = p1;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p2;
  i1 = l0;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l3 = i0;
  goto B9;
  B11:;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l4 = i0;
  i0 = 64u;
  i1 = p0;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  l1 = i1;
  i2 = 24u;
  i1 <<= (i2 & 31);
  i2 = 24u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l2 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 25612u;
  i2 = 25552u;
  i3 = l1;
  i4 = 1u;
  i3 = i3 == i4;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l4;
  i2 = l3;
  i1 -= i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = l2;
  i2 = l1;
  i1 *= i2;
  i1 = m_malloc(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 16));
  p0 = i2;
  i3 = p1;
  i2 *= i3;
  i1 += i2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 20));
  i3 = p0;
  i2 -= i3;
  i3 = p1;
  i2 *= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B10:;
  i0 = p1;
  i1 = 64u;
  i2 = p2;
  i2 = i32_load8_s((&M0), (u64)(i2 + 4));
  i3 = 0u;
  i1 = mp_binary_get_size(i1, i2, i3);
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  B9:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l4 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  l5 = i1;
  i0 -= i1;
  i1 = l3;
  i0 += i1;
  p2 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B13;}
  i0 = p2;
  i1 = p0;
  i2 = 4u;
  i1 += i2;
  l6 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i0 = i0 <= i1;
  if (i0) {goto B14;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = l1;
  i2 = p0;
  i3 = 8u;
  i2 += i3;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = p2;
  i2 += i3;
  i3 = p1;
  i2 *= i3;
  i1 = m_realloc(i1, i2);
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l6;
  i1 = l6;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i2 = p2;
  i3 = 8u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l5 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l4 = i0;
  B14:;
  i0 = l1;
  i1 = l4;
  i2 = l3;
  i1 += i2;
  l4 = i1;
  i2 = p1;
  i1 *= i2;
  i0 += i1;
  i1 = l1;
  i2 = l5;
  i3 = p1;
  i2 *= i3;
  i1 += i2;
  i2 = p2;
  i3 = l4;
  i2 -= i3;
  i3 = p0;
  i4 = 8u;
  i3 += i4;
  i3 = i32_load((&M0), (u64)(i3));
  i2 += i3;
  i3 = p1;
  i2 *= i3;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i2 = p1;
  i1 *= i2;
  i0 += i1;
  i1 = l2;
  i2 = l3;
  i3 = p1;
  i2 *= i3;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  goto B12;
  B13:;
  i0 = l1;
  i1 = l4;
  i2 = p1;
  i1 *= i2;
  i0 += i1;
  i1 = l2;
  i2 = l3;
  i3 = p1;
  i2 *= i3;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i2 = l3;
  i1 += i2;
  i2 = p1;
  i1 *= i2;
  i0 += i1;
  i1 = l1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 20));
  l3 = i2;
  i3 = p1;
  i2 *= i3;
  i1 += i2;
  i2 = p0;
  i3 = 8u;
  i2 += i3;
  l4 = i2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = l3;
  i2 -= i3;
  i3 = p1;
  i2 *= i3;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = l4;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p2;
  i1 += i2;
  i2 = p1;
  i1 *= i2;
  i0 += i1;
  i1 = 0u;
  i2 = p2;
  i3 = 0u;
  i4 = p1;
  i3 -= i4;
  i2 *= i3;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  B12:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  p1 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p2;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  p0 = i1;
  i2 = p2;
  i3 = 8u;
  i2 <<= (i3 & 31);
  i1 -= i2;
  i2 = 4294967040u;
  i1 &= i2;
  i2 = p0;
  i3 = 255u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  goto B0;
  B8:;
  i0 = 16155u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  B7:;
  i0 = 17873u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  B6:;
  i0 = 17467u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B5:;
  i0 = 18265u;
  i1 = 15687u;
  i2 = 474u;
  i3 = 42479u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 array_iterator_new(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 25736u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 array_get_buffer(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 64u;
  i1 = p0;
  i1 = i32_load8_s((&M0), (u64)(i1 + 4));
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l0 = i0;
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = l0;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i1 *= i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = p0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 bytearray_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = p1;
  i1 = p2;
  i2 = 6u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B2:;
  i0 = 1u;
  i1 = p1;
  i0 = array_construct(i0, i1);
  goto Bfunc;
  B1:;
  i0 = 64u;
  i1 = 1u;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = 25612u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  j1 = 1ull;
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = p1;
  i1 = 0u;
  i1 = m_malloc(i1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = p1;
  i0 = mp_obj_get_int(i0);
  p2 = i0;
  i0 = 64u;
  i1 = 1u;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  p3 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 25612u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = p3;
  i2 = p2;
  i1 *= i2;
  i1 = m_malloc(i1);
  p3 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p3;
  i1 = 0u;
  i2 = p2;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 array_append(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 25612u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 25552u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 256u;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  i0 = 64u;
  i1 = l0;
  i2 = 24u;
  i1 <<= (i2 & 31);
  i2 = 24u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i1 = l1;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i2 = 2048u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = l0;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 8));
  i4 = 8u;
  i3 += i4;
  i2 *= i3;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l2;
  i1 = l0;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = 1u;
  i2 += i3;
  i1 *= i2;
  i0 += i1;
  i1 = 0u;
  i2 = l0;
  i3 = l1;
  i3 = i32_load((&M0), (u64)(i3));
  i4 = 8u;
  i3 >>= (i4 & 31);
  i4 = 4294967295u;
  i3 += i4;
  i2 *= i3;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B2:;
  i0 = l0;
  i1 = 24u;
  i0 <<= (i1 & 31);
  i1 = 24u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = p0;
  i2 = 12u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p0;
  i3 = 8u;
  i2 += i3;
  l0 = i2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = p1;
  mp_binary_set_val_array(i0, i1, i2, i3);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967040u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 15046u;
  i1 = 15687u;
  i2 = 334u;
  i3 = 42453u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 array_it_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l2 = i1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = l2;
  i0 = i32_load8_s((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = l1;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = l1;
  i2 += i3;
  i0 = mp_binary_get_val_array(i0, i1, i2);
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 enumerate_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = p3;
  i3 = 2u;
  i4 = 42496u;
  i5 = l0;
  i6 = 8u;
  i5 += i6;
  mp_arg_parse_all_kw_array(i0, i1, i2, i3, i4, i5);
  i0 = 12u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = 0u;
  i1 = mp_getiter(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 enumerate_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 25796u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = mp_iternext(i0);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = l2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = 10629u;
  i1 = 11712u;
  i2 = 81u;
  i3 = 42512u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 filter_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 262148u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 12u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 0u;
  i1 = mp_getiter(i1, i2);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 filter_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i0 = 0u;
  l3 = i0;
  L1: vm_checktime();
    i0 = l0;
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    i1 = mp_iternext(i1);
    p0 = i1;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    i1 = 6u;
    i0 = i0 == i1;
    if (i0) {goto B2;}
    i0 = l4;
    i1 = 1u;
    i2 = 0u;
    i3 = l0;
    i4 = 12u;
    i3 += i4;
    i0 = mp_call_function_n_kw(i0, i1, i2, i3);
    p0 = i0;
    B2:;
    i0 = p0;
    i0 = mp_obj_is_true(i0);
    i0 = !(i0);
    if (i0) {goto L1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  FUNC_EPILOGUE;
  return i0;
}

static u32 map_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 393214u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i1 = 4294967295u;
  i0 += i1;
  p2 = i0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 12u;
  i0 += i1;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p3;
  i1 = 4u;
  i0 += i1;
  p1 = i0;
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  p3 = i0;
  L1: vm_checktime();
    i0 = p3;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 0u;
    i1 = mp_getiter(i1, i2);
    i32_store((&M0), (u64)(i0), i1);
    i0 = p3;
    i1 = 4u;
    i0 += i1;
    p3 = i0;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p2;
    i1 = 4294967295u;
    i0 += i1;
    p2 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 map_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 2u;
  i0 <<= (i1 & 31);
  i0 = m_malloc(i0);
  l0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l2 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l4 = i0;
  L2: vm_checktime();
    i0 = l2;
    i1 = l3;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = mp_iternext(i0);
    l1 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l0;
    i1 = l3;
    i0 += i1;
    i1 = l1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l3 = i0;
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l1 = i1;
    i0 = i0 < i1;
    if (i0) {goto L2;}
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l1;
  i2 = 0u;
  i3 = l0;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  goto Bfunc;
  B0:;
  i0 = l0;
  m_free(i0);
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 property_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = p3;
  i3 = 4u;
  i4 = 42544u;
  i5 = l0;
  mp_arg_parse_all_kw_array(i0, i1, i2, i3, i4, i5);
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_property_get(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 property_getter(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 property_setter(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 property_deleter(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void range_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 4));
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p0;
  i1 = 10673u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_printf(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 11727u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 16961u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 range_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 131078u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  goto Bfunc;
  B0:;
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i1 = mp_obj_get_int(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = 12u;
  i0 += i1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i1 = mp_obj_get_int(i1);
  p1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  i0 = p2;
  goto Bfunc;
  B1:;
  i0 = 13113u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 range_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = 0u;
  l0 = i0;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 -= i1;
  i1 = p1;
  i2 = 12u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i0 += i1;
  i1 = 4294967295u;
  i2 = 1u;
  i3 = p1;
  i4 = 0u;
  i3 = (u32)((s32)i3 > (s32)i4);
  i1 = i3 ? i1 : i2;
  i0 += i1;
  i1 = p1;
  i0 = I32_DIV_S(i0, i1);
  p1 = i0;
  i0 = p0;
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i3 = 0u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  i1 = 1u;
  i2 = p1;
  i3 = 0u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  l0 = i0;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void range_attr(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 150u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 149u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 146u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B2:;
  i0 = p2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 range_subscr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 -= i1;
  i1 = p0;
  i2 = 12u;
  i1 += i2;
  p2 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i0 += i1;
  i1 = 4294967295u;
  i2 = 1u;
  i3 = l1;
  i4 = 0u;
  i3 = (u32)((s32)i3 > (s32)i4);
  i1 = i3 ? i1 : i2;
  i0 += i1;
  i1 = l1;
  i0 = I32_DIV_S(i0, i1);
  l1 = i0;
  i1 = 0u;
  i2 = l1;
  i3 = 0u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 24360u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l1;
  i2 = p1;
  i3 = 0u;
  i0 = mp_get_index(i0, i1, i2, i3);
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 *= i1;
  i1 = p0;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 += i1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l1 = i0;
  goto B0;
  B1:;
  i0 = l1;
  i1 = p1;
  i2 = l0;
  i0 = mp_seq_get_fast_slice_indexes(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = p0;
  i2 = 12u;
  i1 += i2;
  l2 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  p2 = i1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2));
  i1 *= i2;
  i2 = p0;
  i3 = 4u;
  i2 += i3;
  p0 = i2;
  i2 = i32_load((&M0), (u64)(i2));
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = 26112u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = p2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  p1 = i2;
  i1 *= i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i1 *= i2;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2));
  i1 += i2;
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = l1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i2 = l2;
  i2 = i32_load((&M0), (u64)(i2));
  i1 -= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 range_getiter(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = p1;
  i1 = 26172u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 4));
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 range_it_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  goto B1;
  B2:;
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  B1:;
  i0 = p0;
  i1 = l2;
  i2 = l0;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l1 = i0;
  B0:;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 reversed_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 131074u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 197u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 0u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i0 = mp_call_method_n_kw(i0, i1, i2);
  p3 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p3;
  goto Bfunc;
  B0:;
  i0 = 12u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i1 = mp_obj_len(i1);
  i1 = mp_obj_get_int(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 reversed_iternext(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 4294967295u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l0;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 1u;
  i1 |= i2;
  i2 = 4u;
  i0 = mp_obj_subscr(i0, i1, i2);
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 zip_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 131070u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 8u;
  i0 += i1;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  p0 = i0;
  L1: vm_checktime();
    i0 = p0;
    i1 = p3;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 0u;
    i1 = mp_getiter(i1, i2);
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = p3;
    i1 = 4u;
    i0 += i1;
    p3 = i0;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = p2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 zip_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i0 = mp_obj_new_tuple(i0, i1);
  l2 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 8u;
  l0 = i0;
  L3: vm_checktime();
    i0 = p0;
    i1 = l0;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = mp_iternext(i0);
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B1;}
    i0 = l2;
    i1 = l0;
    i0 += i1;
    i1 = l4;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 4u;
    i0 += i1;
    l0 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = i0 < i1;
    if (i0) {goto L3;}
  B2:;
  i0 = l2;
  goto Bfunc;
  B1:;
  i0 = l2;
  mp_obj_tuple_del(i0);
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin___build_class__(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = i0 <= i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5180));
  l1 = i0;
  i0 = 0u;
  i1 = 0u;
  i1 = mp_obj_new_dict(i1);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 5180), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_call_function_0(i0);
  l3 = i0;
  i0 = 0u;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 5180), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i0 = 32308u;
  l4 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l4 = i0;
  B1:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 4294967294u;
  i0 += i1;
  i1 = l1;
  i0 = mp_obj_new_tuple(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l4;
  i1 = 3u;
  i2 = 0u;
  i3 = l0;
  i4 = 4u;
  i3 += i4;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  p1 = i0;
  i0 = l3;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = l3;
  i1 = p1;
  mp_obj_cell_set(i0, i1);
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 10686u;
  i1 = 11729u;
  i2 = 50u;
  i3 = 42576u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_abs(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 7u;
  i1 = p0;
  i0 = mp_unary_op(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_all(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i0 = mp_getiter(i0, i1);
  l1 = i0;
  L1: vm_checktime();
    i0 = l1;
    i0 = mp_iternext(i0);
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p0;
    i0 = mp_obj_is_true(i0);
    if (i0) {goto L1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_any(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i0 = mp_getiter(i0, i1);
  l1 = i0;
  L1: vm_checktime();
    i0 = l1;
    i0 = mp_iternext(i0);
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p0;
    i0 = mp_obj_is_true(i0);
    i0 = !(i0);
    if (i0) {goto L1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_bin(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 1642u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 0u;
  i0 = mp_obj_str_format(i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_callable(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 30u;
  i1 = 14u;
  i2 = p0;
  i2 = mp_obj_is_callable(i2);
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_chr(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i1 = 127u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = p0;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  i0 = 1u;
  p0 = i0;
  goto B1;
  B2:;
  i0 = p0;
  i1 = 2047u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = p0;
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 13), i1);
  i0 = l0;
  i1 = p0;
  i2 = 6u;
  i1 >>= (i2 & 31);
  i2 = 192u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  i0 = 2u;
  p0 = i0;
  goto B1;
  B3:;
  i0 = p0;
  i1 = 65535u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = p0;
  i2 = 12u;
  i1 >>= (i2 & 31);
  i2 = 224u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p0;
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 14), i1);
  i0 = l0;
  i1 = p0;
  i2 = 6u;
  i1 >>= (i2 & 31);
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 13), i1);
  i0 = 3u;
  p0 = i0;
  goto B1;
  B4:;
  i0 = p0;
  i1 = 1114111u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p0;
  i2 = 18u;
  i1 >>= (i2 & 31);
  i2 = 240u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p0;
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 15), i1);
  i0 = l0;
  i1 = p0;
  i2 = 12u;
  i1 >>= (i2 & 31);
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 13), i1);
  i0 = l0;
  i1 = p0;
  i2 = 6u;
  i1 >>= (i2 & 31);
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 14), i1);
  i0 = 4u;
  p0 = i0;
  B1:;
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  i1 = p0;
  i0 = mp_obj_new_str_via_qstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 16967u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_dir(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  i1 = 0u;
  i0 = mp_obj_new_list(i0, i1);
  l1 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5192));
  p0 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 += i1;
  l2 = i0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = 18u;
  l3 = i0;
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  i0 = 2u;
  p0 = i0;
  L4: vm_checktime();
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p0;
    i2 = l0;
    i3 = 8u;
    i2 += i3;
    i3 = 0u;
    mp_load_method_protected(i0, i1, i2, i3);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 8));
    i0 = !(i0);
    if (i0) {goto B5;}
    i0 = p0;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B6;}
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    if (i0) {goto B1;}
    B6:;
    i0 = l1;
    i1 = l3;
    i0 = mp_obj_list_append(i0, i1);
    B5:;
    i0 = l3;
    i1 = 8u;
    i0 += i1;
    l3 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L4;}
    goto B2;
  B3:;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5180));
  l3 = i0;
  i1 = 8u;
  i0 += i1;
  l5 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 0u;
  p0 = i0;
  i0 = l3;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  i0 = 0u;
  l3 = i0;
  L7: vm_checktime();
    i0 = p1;
    i1 = l3;
    i0 = i0 <= i1;
    if (i0) {goto B0;}
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p0;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 == i1;
    if (i0) {goto B8;}
    i0 = l1;
    i1 = l2;
    i0 = mp_obj_list_append(i0, i1);
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    B8:;
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    p0 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i1 = p1;
    i0 = i0 < i1;
    if (i0) {goto L7;}
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = 0u;
  i1 = 0u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i0 = mp_call_method_n_kw(i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 13123u;
  i1 = 13819u;
  i2 = 427u;
  i3 = 42603u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_divmod(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 35u;
  i1 = p0;
  i2 = p1;
  i0 = mp_binary_op(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_hash(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 6u;
  i1 = p0;
  i0 = mp_unary_op(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_hex(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 33u;
  i1 = 1634u;
  i2 = p0;
  i0 = mp_binary_op(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_iter(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_max(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = 1u;
  i0 = mp_builtin_min_max(i0, i1, i2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_min_max(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p2;
  i1 = 842u;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  B0:;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i0 = mp_getiter(i0, i1);
  l3 = i0;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 0u;
  p2 = i0;
  i0 = 0u;
  l1 = i0;
  L7: vm_checktime();
    i0 = l2;
    i1 = p1;
    i0 = mp_call_function_1(i0, i1);
    p0 = i0;
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B8;}
    i0 = p3;
    i1 = p0;
    i2 = p2;
    i0 = mp_binary_op(i0, i1, i2);
    i1 = 30u;
    i0 = i0 == i1;
    if (i0) {goto B8;}
    i0 = l3;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L7;}
    goto B2;
    B8:;
    i0 = p1;
    l1 = i0;
    i0 = p0;
    p2 = i0;
    i0 = l3;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L7;}
    goto B2;
  B6:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = 0u;
  l1 = i0;
  i0 = 0u;
  p2 = i0;
  L9: vm_checktime();
    i0 = l2;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = mp_call_function_1(i0, i1);
    l3 = i0;
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B10;}
    i0 = p3;
    i1 = l3;
    i2 = p2;
    i0 = mp_binary_op(i0, i1, i2);
    i1 = 30u;
    i0 = i0 == i1;
    if (i0) {goto B10;}
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L9;}
    goto B2;
    B10:;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i0 = l3;
    p2 = i0;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L9;}
    goto B2;
  B5:;
  i0 = p2;
  i1 = 2314u;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = 0u;
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  L11: vm_checktime();
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B13;}
    i0 = p3;
    i1 = l3;
    i2 = l2;
    i0 = mp_binary_op(i0, i1, i2);
    i1 = 30u;
    i0 = i0 == i1;
    if (i0) {goto B12;}
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L11;}
    goto B2;
    B13:;
    i0 = l3;
    l2 = i0;
    i0 = l3;
    l1 = i0;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L11;}
    goto B2;
    B12:;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i0 = l3;
    l2 = i0;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L11;}
    goto B2;
  B3:;
  i0 = 0u;
  l1 = i0;
  L14: vm_checktime();
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B15;}
    i0 = p3;
    i1 = p1;
    i2 = l1;
    i0 = mp_binary_op(i0, i1, i2);
    i1 = 30u;
    i0 = i0 == i1;
    if (i0) {goto B15;}
    i0 = l3;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L14;}
    goto B2;
    B15:;
    i0 = p1;
    l1 = i0;
    i0 = l3;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L14;}
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = 14491u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_min(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = 0u;
  i0 = mp_builtin_min_max(i0, i1, i2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_next(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = mp_iternext_allow_raise(i0);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 35996u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_oct(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 33u;
  i1 = 1626u;
  i2 = p0;
  i0 = mp_binary_op(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_ord(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  l1 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33304u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = l1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i1 = utf8_charlen(i1, i2);
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = utf8_get_char(i0);
  i0 = mp_obj_new_int(i0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 15190u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_pow(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 34u;
  i1 = l1;
  i2 = l0;
  i0 = mp_binary_op(i0, i1, i2);
  goto Bfunc;
  B0:;
  i0 = l1;
  i1 = l0;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i0 = mp_obj_int_pow3(i0, i1, i2);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  i1 = 0u;
  i2 = p2;
  i3 = 2u;
  i4 = 42704u;
  i5 = l0;
  i6 = 8u;
  i5 += i6;
  mp_arg_parse_all(i0, i1, i2, i3, i4, i5);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  l1 = i0;
  i0 = p2;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 4u;
  i1 |= i2;
  i0 = mp_obj_str_get_data(i0, i1);
  l2 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  p2 = i0;
  L1: vm_checktime();
    i0 = p2;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = 33856u;
    i1 = l1;
    i2 = l0;
    i2 = i32_load((&M0), (u64)(i2 + 8));
    i3 = 0u;
    i4 = 0u;
    i5 = 0u;
    i0 = mp_print_strn(i0, i1, i2, i3, i4, i5);
    B2:;
    i0 = 33856u;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 0u;
    mp_obj_print_helper(i0, i1, i2);
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = p2;
    i2 = 1u;
    i1 += i2;
    p2 = i1;
    i0 = i0 != i1;
    if (i0) {goto L1;}
  B0:;
  i0 = 33856u;
  i1 = l2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i3 = 0u;
  i4 = 0u;
  i5 = 0u;
  i0 = mp_print_strn(i0, i1, i2, i3, i4, i5);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin___repl_print__(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 33856u;
  i1 = p0;
  i2 = 1u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = 33856u;
  i1 = 15698u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 4u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 27400u;
  i1 = 8u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i3 = 0u;
  i3 = i32_load((&M0), (u64)(i3 + 29788));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_repr(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 16u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  vstr_init_print(i0, i1, i2);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i2 = 1u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = 33304u;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_round(u32 p0, u32 p1) {
  u32 l0 = 0;
  f64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0, d1, d2;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B3:;
  i0 = l0;
  d0 = mp_obj_get_float(i0);
  l1 = d0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  d0 = l1;
  d1 = 10;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i2 = mp_obj_get_int(i2);
  d2 = (f64)(s32)(i2);
  d1 = pow_0(d1, d2);
  l2 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d0 = nearbyint_0(d0);
  d1 = l2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B2:;
  i0 = p0;
  i1 = 2u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = l0;
  goto Bfunc;
  B1:;
  d0 = l1;
  d0 = nearbyint_0(d0);
  i0 = mp_obj_new_int_from_float(d0);
  goto Bfunc;
  B0:;
  i0 = 0u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_sum(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 1u;
  l1 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i0 = mp_getiter(i0, i1);
  p0 = i0;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  L2: vm_checktime();
    i0 = 27u;
    i1 = l1;
    i2 = p1;
    i0 = mp_binary_op(i0, i1, i2);
    l1 = i0;
    i0 = p0;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L2;}
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_sorted(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 24420u;
  i2 = 1u;
  i3 = 0u;
  i4 = p1;
  i5 = 0u;
  i5 = i32_load((&M0), (u64)(i5 + 24432));
  i1 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i5, i1, i2, i3, i4);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 1u;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = p2;
  i0 = mp_obj_list_sort(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 16204u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_getattr(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = mp_obj_str_get_qstr(i0);
  p1 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i3 = 0u;
  mp_load_method_protected(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_load_method(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  if (i0) {goto B1;}
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = l1;
  i0 = mp_obj_new_bound_meth(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_setattr(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i1 = mp_obj_str_get_qstr(i1);
  i2 = p2;
  mp_store_attr(i0, i1, i2);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_delattr(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i1 = mp_obj_str_get_qstr(i1);
  i2 = 0u;
  mp_store_attr(i0, i1, i2);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_hasattr(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = p1;
  i1 = mp_obj_str_get_qstr(i1);
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i3 = 0u;
  mp_load_method_protected(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = p0;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_globals(void) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5184));
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_locals(void) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5180));
  FUNC_EPILOGUE;
  return i0;
}

static void mp_hal_set_interrupt_char(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 27408), i1);
  FUNC_EPILOGUE;
}

static u32 mp_micropython_pystack_use(void) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5176));
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5168));
  i0 -= i1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_micropython_kbd_intr(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  mp_hal_set_interrupt_char(i0);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_micropython_schedule(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  i0 = mp_sched_schedule(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 37136u;
  i1 = 10698u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_get_stream_raise(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 48));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p1;
  i1 = 2u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B0;}
  B2:;
  i0 = p1;
  i1 = 4u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = !(i0);
  if (i0) {goto B0;}
  B3:;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 37076u;
  i1 = 10718u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stream_read(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i2 = 0u;
  i0 = stream_read_generic(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 stream_read_generic(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i1 = 4294967295u;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 48));
  l2 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B7;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = l1;
  vstr_init_len(i0, i1);
  i0 = 0u;
  l3 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 48));
  i1 = p2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 4u;
  i1 &= i2;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l5 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l6 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = 0u;
  l3 = i0;
  L9: vm_checktime();
    i0 = l4;
    i1 = l6;
    i2 = l1;
    i3 = l0;
    i4 = 12u;
    i3 += i4;
    i4 = l5;
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    p0 = i0;
    i1 = 4294967295u;
    i0 = i0 == i1;
    if (i0) {goto B5;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = p0;
    i1 = l3;
    i0 += i1;
    l3 = i0;
    i0 = l6;
    i1 = p0;
    i0 += i1;
    l6 = i0;
    i0 = l1;
    i1 = p0;
    i0 -= i1;
    l1 = i0;
    if (i0) {goto L9;}
    goto B3;
  B8:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 48));
  l4 = i0;
  i0 = 256u;
  l6 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 256u;
  vstr_init(i0, i1);
  i0 = 0u;
  p2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l3 = i0;
  L13: vm_checktime();
    i0 = l1;
    i1 = l3;
    i2 = l6;
    i3 = l0;
    i4 = 12u;
    i3 += i4;
    i4 = l4;
    i4 = i32_load((&M0), (u64)(i4));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    p0 = i0;
    i1 = 4294967295u;
    i0 = i0 == i1;
    if (i0) {goto B15;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B11;}
    i0 = p0;
    i1 = p2;
    i0 += i1;
    p2 = i0;
    i0 = l6;
    i1 = p0;
    i0 = i0 <= i1;
    if (i0) {goto B14;}
    i0 = l3;
    i1 = p0;
    i0 += i1;
    l3 = i0;
    i0 = l6;
    i1 = p0;
    i0 -= i1;
    l6 = i0;
    i0 = 0u;
    i1 = 3u;
    i0 &= i1;
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto L13;}
    goto B12;
    B15:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    p0 = i0;
    i1 = 11u;
    i0 = i0 != i1;
    if (i0) {goto B6;}
    i0 = 3u;
    i1 = 1u;
    i2 = p2;
    i0 = i2 ? i0 : i1;
    i1 = 3u;
    i0 &= i1;
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto L13;}
    goto B12;
    B14:;
    i0 = 256u;
    l6 = i0;
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    i1 = 256u;
    i0 = vstr_extend(i0, i1);
    l3 = i0;
    i0 = 0u;
    i1 = 3u;
    i0 &= i1;
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto L13;}
  B12:;
  i0 = p0;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B10;}
  B11:;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = 33304u;
  i1 = 33004u;
  i2 = l4;
  i2 = i32_load8_u((&M0), (u64)(i2 + 12));
  i3 = 1u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B10:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B7:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = l1;
  vstr_init(i0, i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  l5 = i0;
  i0 = 0u;
  p2 = i0;
  L17: vm_checktime();
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    i1 = l5;
    i0 = vstr_add_len(i0, i1);
    l6 = i0;
    i0 = l0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = i32_load((&M0), (u64)(i0 + 48));
    i0 = i32_load((&M0), (u64)(i0));
    l8 = i0;
    i0 = 0u;
    l4 = i0;
    i0 = l5;
    l3 = i0;
    L24: vm_checktime();
      i0 = l2;
      i1 = l6;
      i2 = l3;
      i3 = l0;
      i4 = 12u;
      i3 += i4;
      i4 = l8;
      i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
      p0 = i0;
      i1 = 4294967295u;
      i0 = i0 == i1;
      if (i0) {goto B23;}
      i0 = p0;
      i0 = !(i0);
      if (i0) {goto B25;}
      i0 = p0;
      i1 = l4;
      i0 += i1;
      l4 = i0;
      i0 = l6;
      i1 = p0;
      i0 += i1;
      l6 = i0;
      i0 = l3;
      i1 = p0;
      i0 -= i1;
      l3 = i0;
      if (i0) {goto L24;}
      B25:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    p0 = i0;
    goto B22;
    B23:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    p0 = i0;
    i0 = l4;
    i0 = !(i0);
    if (i0) {goto B22;}
    i0 = p0;
    i1 = 11u;
    i0 = i0 != i1;
    if (i0) {goto B22;}
    i0 = l0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = l5;
    i1 = l4;
    i0 = i0 > i1;
    if (i0) {goto B21;}
    goto B20;
    B22:;
    i0 = p0;
    if (i0) {goto B19;}
    i0 = l5;
    i1 = l4;
    i0 = i0 <= i1;
    if (i0) {goto B20;}
    B21:;
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    i1 = l5;
    i2 = l4;
    i1 -= i2;
    vstr_cut_tail_bytes(i0, i1);
    i0 = l4;
    i0 = !(i0);
    if (i0) {goto B16;}
    B20:;
    i0 = l7;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 20));
    l3 = i0;
    i0 = p2;
    p0 = i0;
    L26: vm_checktime();
      i0 = 1u;
      l6 = i0;
      i0 = l4;
      i1 = p0;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      p2 = i0;
      i1 = 128u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B27;}
      i0 = 2u;
      l6 = i0;
      i0 = p2;
      i1 = 224u;
      i0 &= i1;
      i1 = 192u;
      i0 = i0 == i1;
      if (i0) {goto B27;}
      i0 = 3u;
      l6 = i0;
      i0 = p2;
      i1 = 240u;
      i0 &= i1;
      i1 = 224u;
      i0 = i0 == i1;
      if (i0) {goto B27;}
      i0 = 4u;
      i1 = 5u;
      i2 = p2;
      i3 = 248u;
      i2 &= i3;
      i3 = 240u;
      i2 = i2 == i3;
      i0 = i2 ? i0 : i1;
      l6 = i0;
      B27:;
      i0 = l6;
      i1 = p0;
      i0 += i1;
      p2 = i0;
      i1 = l3;
      i0 = i0 > i1;
      if (i0) {goto B18;}
      i0 = p2;
      p0 = i0;
      i0 = l1;
      i1 = 4294967295u;
      i0 += i1;
      l1 = i0;
      l5 = i0;
      i0 = p2;
      i1 = l3;
      i0 = i0 < i1;
      if (i0) {goto L26;}
    i0 = l5;
    if (i0) {goto L17;}
    goto B16;
    B19:;
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    i1 = l5;
    vstr_cut_tail_bytes(i0, i1);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    p0 = i0;
    i1 = 11u;
    i0 = i0 != i1;
    if (i0) {goto B28;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 20));
    if (i0) {goto B16;}
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    vstr_clear(i0);
    i0 = l0;
    i1 = 32u;
    i0 += i1;
    g0 = i0;
    i0 = 6u;
    goto Bfunc;
    B28:;
    i0 = p0;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B18:;
    i0 = p0;
    p2 = i0;
    i0 = l6;
    i1 = p0;
    i0 += i1;
    i1 = l3;
    i0 -= i1;
    i1 = l1;
    i0 += i1;
    i1 = 4294967295u;
    i0 += i1;
    l5 = i0;
    if (i0) {goto L17;}
  B16:;
  i0 = 33304u;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B6:;
  i0 = p0;
  mp_raise_OSError(i0);
  UNREACHABLE;
  B5:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 11u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  goto B1;
  B4:;
  i0 = 0u;
  l3 = i0;
  i0 = l4;
  i1 = l6;
  i2 = l1;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i4 = l5;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  p0 = i0;
  i1 = 1u;
  i0 += i1;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  i0 = p0;
  l3 = i0;
  B3:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  B2:;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  vstr_clear(i0);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i1 = 11u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = 33304u;
  i1 = 33004u;
  i2 = l2;
  i3 = 12u;
  i2 += i3;
  i2 = i32_load8_u((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = p0;
  mp_raise_OSError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_stream_write_adaptor(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 48));
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  L4: vm_checktime();
    i0 = p0;
    i1 = p1;
    i2 = p2;
    i3 = l0;
    i4 = 12u;
    i3 += i4;
    i4 = l2;
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    l3 = i0;
    i1 = 4294967295u;
    i0 = i0 == i1;
    if (i0) {goto B3;}
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B5;}
    i0 = l3;
    i1 = l1;
    i0 += i1;
    l1 = i0;
    i0 = p1;
    i1 = l3;
    i0 += i1;
    p1 = i0;
    i0 = p2;
    i1 = l3;
    i0 -= i1;
    p2 = i0;
    if (i0) {goto L4;}
    B5:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  goto B2;
  B3:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l3;
  i1 = 11u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l3;
  i1 = 11u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l3;
  mp_raise_OSError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 stream_write_method(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l0;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = p0;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = 0u;
  l1 = i0;
  i0 = 4294967295u;
  l2 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_get_int_truncated(i0);
  l2 = i0;
  goto B0;
  B1:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_get_int_truncated(i0);
  p0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i0 = mp_obj_get_int_truncated(i0);
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l3 = i0;
  i1 = p0;
  i2 = p0;
  i3 = l3;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  B0:;
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = l1;
  i1 -= i2;
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = l2;
  i2 = p0;
  i3 = l2;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l4;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 48));
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l5 = i0;
  i0 = p1;
  i1 = l1;
  i0 += i1;
  p0 = i0;
  i0 = 0u;
  l3 = i0;
  L6: vm_checktime();
    i0 = l4;
    i1 = p0;
    i2 = l2;
    i3 = l0;
    i4 = 12u;
    i3 += i4;
    i4 = l5;
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    p1 = i0;
    i1 = 4294967295u;
    i0 = i0 == i1;
    if (i0) {goto B5;}
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B7;}
    i0 = p1;
    i1 = l3;
    i0 += i1;
    l3 = i0;
    i0 = p0;
    i1 = p1;
    i0 += i1;
    p0 = i0;
    i0 = l2;
    i1 = p1;
    i0 -= i1;
    l2 = i0;
    if (i0) {goto L6;}
    B7:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  goto B4;
  B5:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 11u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  goto B3;
  B4:;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p1;
  i1 = 11u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B3:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B2:;
  i0 = p1;
  mp_raise_OSError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stream_readinto(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 2u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = p0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p0;
  i2 = p0;
  i3 = l1;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  p0 = i0;
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  p0 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 48));
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  L6: vm_checktime();
    i0 = l3;
    i1 = l1;
    i2 = p0;
    i3 = l0;
    i4 = 12u;
    i3 += i4;
    i4 = l4;
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    p1 = i0;
    i1 = 4294967295u;
    i0 = i0 == i1;
    if (i0) {goto B5;}
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B7;}
    i0 = p1;
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = p1;
    i0 += i1;
    l1 = i0;
    i0 = p0;
    i1 = p1;
    i0 -= i1;
    p0 = i0;
    if (i0) {goto L6;}
    B7:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  goto B4;
  B5:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 11u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  goto B1;
  B4:;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 11u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = p1;
  mp_raise_OSError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stream_unbuffered_readline(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 48));
  l1 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = i0 <= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  p0 = i0;
  i1 = 4294967295u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p0;
  vstr_init(i0, i1);
  goto B0;
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 16u;
  vstr_init(i0, i1);
  i0 = 4294967295u;
  p0 = i0;
  B0:;
  L5: vm_checktime();
    i0 = 4294967295u;
    l2 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 = i0 == i1;
    if (i0) {goto B6;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    l2 = i0;
    B6:;
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    i1 = 1u;
    i0 = vstr_add_len(i0, i1);
    l3 = i0;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l3;
    i2 = 1u;
    i3 = l0;
    i4 = 12u;
    i3 += i4;
    i4 = l1;
    i4 = i32_load((&M0), (u64)(i4));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto B4;}
    i0 = p0;
    i1 = 4294967295u;
    i0 = i0 == i1;
    if (i0) {goto B7;}
    i0 = l2;
    p0 = i0;
    i0 = l3;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 10u;
    i0 = i0 != i1;
    if (i0) {goto L5;}
    goto B3;
    B7:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i1 = 11u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  vstr_clear(i0);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B4:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 1u;
  vstr_cut_tail_bytes(i0, i1);
  B3:;
  i0 = 33304u;
  i1 = 33004u;
  i2 = l1;
  i2 = i32_load8_u((&M0), (u64)(i2 + 12));
  i3 = 1u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B2:;
  i0 = p0;
  mp_raise_OSError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_stream_unbuffered_iter(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 1u;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = stream_unbuffered_readline(i0, i1);
  p0 = i0;
  i0 = mp_obj_is_true(i0);
  l1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 0u;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_stream_close(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 4u;
  i2 = 0u;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i4 = p0;
  i4 = i32_load((&M0), (u64)(i4));
  i4 = i32_load((&M0), (u64)(i4 + 48));
  i4 = i32_load((&M0), (u64)(i4 + 8));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  i1 = 4294967295u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  mp_raise_OSError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stream_seek(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 1u;
  l2 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i1 = mp_obj_get_int(i1);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l2;
  i0 = !(i0);
  l2 = i0;
  B0:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B2;}
  B3:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 2u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i3 = l0;
  i4 = 4u;
  i3 += i4;
  i4 = p1;
  i4 = i32_load((&M0), (u64)(i4));
  i4 = i32_load((&M0), (u64)(i4 + 48));
  i4 = i32_load((&M0), (u64)(i4 + 8));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  i1 = 4294967295u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_new_int_from_uint(i0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B2:;
  i0 = 22u;
  mp_raise_OSError(i0);
  UNREACHABLE;
  B1:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  mp_raise_OSError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stream_tell(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 1u;
  i1 = mp_obj_get_int(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 3u;
  i1 = mp_obj_get_int(i1);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B2;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i1 = 2u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i3 = l0;
  i4 = 4u;
  i3 += i4;
  i4 = p0;
  i4 = i32_load((&M0), (u64)(i4));
  i4 = i32_load((&M0), (u64)(i4 + 48));
  i4 = i32_load((&M0), (u64)(i4 + 8));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  i1 = 4294967295u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_new_int_from_uint(i0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = 22u;
  mp_raise_OSError(i0);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  mp_raise_OSError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stream_flush(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i2 = 0u;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i4 = p0;
  i4 = i32_load((&M0), (u64)(i4));
  i4 = i32_load((&M0), (u64)(i4 + 48));
  i4 = i32_load((&M0), (u64)(i4 + 8));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  i1 = 4294967295u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  mp_raise_OSError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void stringio_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 10749u;
  i2 = 11743u;
  i3 = l1;
  i4 = 27604u;
  i3 = i3 == i4;
  i1 = i3 ? i1 : i2;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 stringio_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B4:;
  i0 = p1;
  i1 = l0;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  goto B0;
  B3:;
  i0 = l1;
  i1 = 16u;
  i1 = vstr_new(i1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B2:;
  i0 = l1;
  i1 = p1;
  i1 = mp_obj_get_int(i1);
  i1 = vstr_new(i1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 82u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B5:;
  i0 = l1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i1 = vstr_new(i1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 0u;
  i0 = stringio_write(i0, i1, i2, i3);
  i0 = l1;
  i1 = 8u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = l1;
  i1 = 16u;
  i1 = m_malloc(i1);
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2));
  vstr_init_fixed_buf(i0, i1, i2);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = 12u;
  i0 += i1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stringio_write(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = m_malloc(i0);
  l2 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 12));
  i2 = 254u;
  i1 &= i2;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i1 = p2;
  i0 += i1;
  l1 = i0;
  i1 = l0;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  i0 = p3;
  i1 = 27u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 4294967295u;
  goto Bfunc;
  B2:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = l1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i0 = i0 <= i1;
  if (i0) {goto B3;}
  i0 = p3;
  i1 = 4u;
  i0 += i1;
  i1 = l3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  i1 = l1;
  i2 = l3;
  i1 -= i2;
  i0 = vstr_add_len(i0, i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B3:;
  i0 = l0;
  i1 = l2;
  i0 = i0 <= i1;
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i0 += i1;
  i1 = 0u;
  i2 = l0;
  i3 = l2;
  i2 -= i3;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B4:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 += i1;
  i1 = p1;
  i2 = p2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  p0 = i1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = i0 <= i1;
  if (i0) {goto B5;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  B5:;
  i0 = p2;
  goto Bfunc;
  B0:;
  i0 = 17000u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stringio_read(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l3 = i1;
  i0 = i0 <= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l3;
  i1 += i2;
  i2 = l2;
  i3 = l3;
  i2 -= i3;
  l1 = i2;
  i3 = p2;
  i4 = l1;
  i5 = p2;
  i4 = i4 < i5;
  i2 = i4 ? i2 : i3;
  l1 = i2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l1;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  B1:;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 17000u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stringio_ioctl(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = p1;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  p1 = i0;
  goto B1;
  B5:;
  i0 = 0u;
  goto Bfunc;
  B4:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  vstr_free(i0);
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = 0u;
  goto Bfunc;
  B3:;
  i0 = p3;
  i1 = 22u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 4294967295u;
  goto Bfunc;
  B2:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 4u;
  i0 += i1;
  p1 = i0;
  B1:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  B0:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = l1;
  i0 += i1;
  p1 = i0;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l2;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B7;}
  i0 = 0u;
  i1 = p1;
  i2 = p1;
  i3 = l1;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  goto B6;
  B7:;
  i0 = p1;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B6;}
  i0 = p3;
  i1 = 22u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 4294967295u;
  goto Bfunc;
  B6:;
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stringio_getvalue(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 33304u;
  i1 = 33004u;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 27604u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i0 = mp_obj_new_str_of_type(i0, i1, i2);
  goto Bfunc;
  B0:;
  i0 = 17000u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stringio___exit__(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_stream_close(i0);
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_attrtuple_print_helper(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 10768u;
  i0 = mp_print_str(i0, i1);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  L1: vm_checktime();
    i0 = l2;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = p0;
    i1 = 11761u;
    i0 = mp_print_str(i0, i1);
    B2:;
    i0 = l0;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 17029u;
    i2 = l0;
    i0 = mp_printf(i0, i1, i2);
    i0 = p0;
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    mp_obj_print_helper(i0, i1, i2);
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = p2;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = i0 < i1;
    if (i0) {goto L1;}
  B0:;
  i0 = p0;
  i1 = 13140u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void mp_obj_attrtuple_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = p0;
  i1 = 10768u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i0 = 0u;
  l3 = i0;
  L1: vm_checktime();
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = p0;
    i1 = 11761u;
    i0 = mp_print_str(i0, i1);
    B2:;
    i0 = l0;
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 17029u;
    i2 = l0;
    i0 = mp_printf(i0, i1, i2);
    i0 = p0;
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    mp_obj_print_helper(i0, i1, i2);
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = l2;
    i1 = 4u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i1 = p1;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = i0 < i1;
    if (i0) {goto L1;}
  B0:;
  i0 = p0;
  i1 = 13140u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void mp_obj_attrtuple_attr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i1 = l0;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = 0u;
  l2 = i0;
  L2: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p1;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L2;}
    goto B0;
  B1:;
  i0 = p2;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 new_namedtuple_type(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = mp_obj_str_get_qstr(i0);
  l1 = i0;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33304u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 1u;
  i2 = l0;
  i3 = 12u;
  i2 += i3;
  i1 = mp_obj_str_split(i1, i2);
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  B0:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = 4u;
  i2 += i3;
  mp_obj_get_array(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 64u;
  i0 += i1;
  i0 = m_malloc(i0);
  l3 = i0;
  i1 = 0u;
  i2 = 60u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l3;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 60), i1);
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l3;
  i1 = 64u;
  i0 += i1;
  p0 = i0;
  L3: vm_checktime();
    i0 = p0;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i1 = mp_obj_str_get_qstr(i1);
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = l2;
    i1 = 4294967295u;
    i0 += i1;
    l2 = i0;
    if (i0) {goto L3;}
  B2:;
  i0 = l3;
  i1 = 8u;
  i32_store16((&M0), (u64)(i0 + 4), i1);
  i0 = l3;
  i1 = 32308u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = l1;
  i32_store16((&M0), (u64)(i0 + 6), i1);
  i0 = l3;
  i1 = 190u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l3;
  i1 = 191u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l3;
  i1 = 185u;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l3;
  i1 = 186u;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l3;
  i1 = 192u;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l3;
  i1 = 188u;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l3;
  i1 = 189u;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l3;
  i1 = 33872u;
  i32_store((&M0), (u64)(i0 + 52), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  FUNC_EPILOGUE;
  return i0;
}

static void namedtuple_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 10770u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 64u;
  i1 += i2;
  i2 = p1;
  mp_obj_attrtuple_print_helper(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 namedtuple_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = p1;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 60));
  l2 = i1;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l2;
  i1 = 0u;
  i0 = mp_obj_new_tuple(i0, i1);
  l3 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = 8u;
  i0 += i1;
  l4 = i0;
  i1 = p3;
  i2 = p1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  l2 = i2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l4;
  i1 = l2;
  i0 += i1;
  i1 = 0u;
  i2 = p2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = p1;
  i0 += i1;
  l5 = i0;
  i1 = p1;
  i0 = i0 <= i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 64u;
  i0 += i1;
  l6 = i0;
  i0 = p0;
  i1 = 60u;
  i0 += i1;
  l7 = i0;
  L4: vm_checktime();
    i0 = p3;
    i1 = p1;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l8 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = mp_obj_str_get_qstr(i0);
    l1 = i0;
    i0 = l7;
    i0 = i32_load((&M0), (u64)(i0));
    l9 = i0;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = 0u;
    l2 = i0;
    i0 = l6;
    p0 = i0;
    i0 = l4;
    p2 = i0;
    L6: vm_checktime();
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l1;
      i0 = i0 == i1;
      if (i0) {goto B5;}
      i0 = p0;
      i1 = 4u;
      i0 += i1;
      p0 = i0;
      i0 = p2;
      i1 = 4u;
      i0 += i1;
      p2 = i0;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l2 = i0;
      i1 = l9;
      i0 = i0 < i1;
      if (i0) {goto L6;}
      goto B2;
    B5:;
    i0 = p2;
    i0 = i32_load((&M0), (u64)(i0));
    if (i0) {goto B1;}
    i0 = p2;
    i1 = l8;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i1 = l5;
    i0 = i0 < i1;
    if (i0) {goto L4;}
  B3:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 17033u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B1:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 37376u;
  i1 = 13142u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l0;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = 37376u;
  i1 = 11764u;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void namedtuple_attr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 60));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  l0 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  p0 = i0;
  i0 = 0u;
  l2 = i0;
  L3: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p1;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    i0 = l0;
    i1 = 4u;
    i0 += i1;
    l0 = i0;
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L3;}
  B2:;
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 36596u;
  i1 = 13825u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 struct_calcsize(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_str_get_str(i0);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = calc_size_items(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 calc_size_items(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load8_s((&M0), (u64)(i0));
  l1 = i0;
  i1 = 4294967236u;
  i0 += i1;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 64u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 33u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = 62u;
  l1 = i0;
  B4:;
  i0 = l0;
  i1 = p0;
  i2 = 1u;
  i1 += i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 1));
  l3 = i0;
  i1 = 255u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = l1;
  l3 = i0;
  i0 = p0;
  l2 = i0;
  i0 = 64u;
  l1 = i0;
  i0 = l3;
  i1 = 255u;
  i0 &= i1;
  if (i0) {goto B1;}
  B2:;
  i0 = 0u;
  p0 = i0;
  i0 = 0u;
  l4 = i0;
  goto B0;
  B1:;
  i0 = 0u;
  l4 = i0;
  i0 = 0u;
  p0 = i0;
  L5: vm_checktime();
    i0 = 1u;
    l5 = i0;
    i0 = l3;
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 24u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    i0 = unichar_isdigit(i0);
    i0 = !(i0);
    if (i0) {goto B6;}
    i0 = l0;
    i1 = 12u;
    i0 += i1;
    i0 = get_fmt_num(i0);
    l5 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    l2 = i0;
    B6:;
    i0 = l2;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l3 = i0;
    i1 = 115u;
    i0 = i0 != i1;
    if (i0) {goto B8;}
    i0 = l5;
    i1 = p0;
    i0 += i1;
    p0 = i0;
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    goto B7;
    B8:;
    i0 = l1;
    i1 = l3;
    i2 = 24u;
    i1 <<= (i2 & 31);
    i2 = 24u;
    i1 = (u32)((s32)i1 >> (i2 & 31));
    i2 = l0;
    i3 = 8u;
    i2 += i3;
    i0 = mp_binary_get_size(i0, i1, i2);
    l6 = i0;
    i0 = l5;
    i0 = !(i0);
    if (i0) {goto B9;}
    i0 = 0u;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 8));
    l7 = i1;
    i0 -= i1;
    l8 = i0;
    i0 = l5;
    l3 = i0;
    L10: vm_checktime();
      i0 = p0;
      i1 = l7;
      i0 += i1;
      i1 = 4294967295u;
      i0 += i1;
      i1 = l8;
      i0 &= i1;
      i1 = l6;
      i0 += i1;
      p0 = i0;
      i0 = l3;
      i1 = 4294967295u;
      i0 += i1;
      l3 = i0;
      if (i0) {goto L10;}
    B9:;
    i0 = l5;
    i1 = l4;
    i0 += i1;
    l4 = i0;
    B7:;
    i0 = l0;
    i1 = l2;
    i2 = 1u;
    i1 += i2;
    l6 = i1;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = l2;
    i0 = i32_load8_u((&M0), (u64)(i0 + 1));
    l3 = i0;
    i0 = l6;
    l2 = i0;
    i0 = l3;
    if (i0) {goto L5;}
  B0:;
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  FUNC_EPILOGUE;
  return i0;
}

static u32 struct_unpack_from(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_str_get_str(i0);
  l1 = i0;
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i0 = calc_size_items(i0, i1);
  l2 = i0;
  i0 = l1;
  i0 = i32_load8_s((&M0), (u64)(i0));
  l3 = i0;
  i1 = 4294967236u;
  i0 += i1;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = l3;
  i1 = 64u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = l3;
  i1 = 33u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = 62u;
  l3 = i0;
  B2:;
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  goto B0;
  B1:;
  i0 = 64u;
  l3 = i0;
  B0:;
  i0 = l2;
  i1 = 0u;
  i0 = mp_obj_new_tuple(i0, i1);
  l4 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  l5 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l6 = i0;
  i0 = l5;
  l7 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B5;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_get_int(i0);
  p1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B6;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  i1 = p1;
  i0 += i1;
  p1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B4;}
  B6:;
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p1;
  i1 += i2;
  l7 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  B5:;
  i0 = l7;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 28));
  i0 += i1;
  i1 = l5;
  i2 = l6;
  i1 += i2;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l4;
  i1 = 12u;
  i0 += i1;
  l8 = i0;
  i0 = l4;
  i1 = 8u;
  i0 += i1;
  l9 = i0;
  i0 = 0u;
  l10 = i0;
  L8: vm_checktime();
    i0 = l1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    i0 = unichar_isdigit(i0);
    i0 = !(i0);
    if (i0) {goto B11;}
    i0 = 0u;
    p1 = i0;
    L12: vm_checktime();
      i0 = l1;
      i1 = p1;
      i0 += i1;
      l5 = i0;
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p0 = i0;
      p1 = i0;
      i0 = l5;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_s((&M0), (u64)(i0));
      i0 = unichar_isdigit(i0);
      if (i0) {goto L12;}
    i0 = l1;
    i1 = p0;
    i2 = 10u;
    i3 = 0u;
    i0 = mp_parse_num_integer(i0, i1, i2, i3);
    i1 = 1u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l6 = i0;
    i0 = l1;
    i1 = p0;
    i0 += i1;
    l1 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p1 = i0;
    i1 = 115u;
    i0 = i0 == i1;
    if (i0) {goto B10;}
    goto B9;
    B11:;
    i0 = 1u;
    l6 = i0;
    i0 = l1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p1 = i0;
    i1 = 115u;
    i0 = i0 != i1;
    if (i0) {goto B9;}
    B10:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    i1 = l6;
    i0 = mp_obj_new_bytes(i0, i1);
    p1 = i0;
    i0 = l0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    i2 = l6;
    i1 += i2;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = l9;
    i1 = l10;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = p1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    l10 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L8;}
    goto B7;
    B9:;
    i0 = l6;
    i0 = !(i0);
    if (i0) {goto B13;}
    i0 = l9;
    i1 = l10;
    i2 = 2u;
    i1 <<= (i2 & 31);
    p0 = i1;
    i0 += i1;
    i1 = l3;
    i2 = p1;
    i3 = 24u;
    i2 <<= (i3 & 31);
    i3 = 24u;
    i2 = (u32)((s32)i2 >> (i3 & 31));
    i3 = l7;
    i4 = l0;
    i5 = 12u;
    i4 += i5;
    i1 = mp_binary_get_val(i1, i2, i3, i4);
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    i1 = 1u;
    i0 = i0 == i1;
    if (i0) {goto B14;}
    i0 = 1u;
    i1 = l6;
    i0 -= i1;
    l5 = i0;
    i0 = l8;
    i1 = p0;
    i0 += i1;
    p1 = i0;
    L15: vm_checktime();
      i0 = p1;
      i1 = l3;
      i2 = l1;
      i2 = i32_load8_s((&M0), (u64)(i2));
      i3 = l7;
      i4 = l0;
      i5 = 12u;
      i4 += i5;
      i1 = mp_binary_get_val(i1, i2, i3, i4);
      i32_store((&M0), (u64)(i0), i1);
      i0 = p1;
      i1 = 4u;
      i0 += i1;
      p1 = i0;
      i0 = l5;
      i1 = 1u;
      i0 += i1;
      l5 = i0;
      if (i0) {goto L15;}
    B14:;
    i0 = l6;
    i1 = l10;
    i0 += i1;
    l10 = i0;
    B13:;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l10;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L8;}
  B7:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B4:;
  i0 = 10773u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B3:;
  i0 = 10773u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 struct_pack(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_str_get_str(i0);
  i1 = l0;
  i0 = calc_size_items(i0, i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  l1 = i1;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i1 = 0u;
  i2 = l1;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l2;
  i2 = p0;
  i3 = 4294967295u;
  i2 += i3;
  i3 = p1;
  i4 = 4u;
  i3 += i4;
  struct_pack_into_internal(i0, i1, i2, i3);
  i0 = 33004u;
  i1 = l0;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static void struct_pack_into_internal(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = mp_obj_str_get_str(i0);
  l1 = i0;
  i0 = i32_load8_s((&M0), (u64)(i0));
  l2 = i0;
  i1 = 4294967236u;
  i0 += i1;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  i0 = l2;
  i1 = 64u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = l2;
  i1 = 33u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = 62u;
  l2 = i0;
  B3:;
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B1;
  B2:;
  i0 = 64u;
  l2 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p3;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i0 = 0u;
  l4 = i0;
  L4: vm_checktime();
    i0 = l1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l5 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = 1u;
    p0 = i0;
    i0 = l5;
    i0 = unichar_isdigit(i0);
    i0 = !(i0);
    if (i0) {goto B5;}
    i0 = 0u;
    p0 = i0;
    L6: vm_checktime();
      i0 = l1;
      i1 = p0;
      i0 += i1;
      l5 = i0;
      i0 = p0;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      p0 = i0;
      i0 = l5;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_s((&M0), (u64)(i0));
      i0 = unichar_isdigit(i0);
      if (i0) {goto L6;}
    i0 = l1;
    i1 = l6;
    i2 = 10u;
    i3 = 0u;
    i0 = mp_parse_num_integer(i0, i1, i2, i3);
    i1 = 1u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    p0 = i0;
    i0 = l1;
    i1 = l6;
    i0 += i1;
    l1 = i0;
    B5:;
    i0 = l1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    i1 = 115u;
    i0 = i0 != i1;
    if (i0) {goto B7;}
    i0 = p3;
    i1 = l4;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i2 = 1u;
    mp_get_buffer_raise(i0, i1, i2);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l0;
    i2 = i32_load((&M0), (u64)(i2 + 4));
    l5 = i2;
    i3 = p0;
    i4 = l5;
    i5 = p0;
    i4 = i4 < i5;
    i2 = i4 ? i2 : i3;
    l5 = i2;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    i1 = l5;
    i0 += i1;
    i1 = 0u;
    i2 = p0;
    i3 = l5;
    i2 -= i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = l0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    i2 = p0;
    i1 += i2;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L4;}
    goto B0;
    B7:;
    i0 = l4;
    i1 = p2;
    i0 = i0 >= i1;
    if (i0) {goto B8;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B8;}
    i0 = l2;
    i1 = l5;
    i2 = 24u;
    i1 <<= (i2 & 31);
    i2 = 24u;
    i1 = (u32)((s32)i1 >> (i2 & 31));
    i2 = p3;
    i3 = l4;
    i4 = 2u;
    i3 <<= (i4 & 31);
    l5 = i3;
    i2 += i3;
    i2 = i32_load((&M0), (u64)(i2));
    i3 = p1;
    i4 = l0;
    i5 = 12u;
    i4 += i5;
    mp_binary_set_val(i0, i1, i2, i3, i4);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p2;
    i0 = i0 >= i1;
    if (i0) {goto B8;}
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    i0 = !(i0);
    if (i0) {goto B8;}
    i0 = 2u;
    i1 = p0;
    i0 -= i1;
    l6 = i0;
    i0 = l3;
    i1 = l5;
    i0 += i1;
    p0 = i0;
    L9: vm_checktime();
      i0 = l6;
      l5 = i0;
      i0 = l2;
      i1 = l1;
      i1 = i32_load8_s((&M0), (u64)(i1));
      i2 = p0;
      i2 = i32_load((&M0), (u64)(i2));
      i3 = p1;
      i4 = l0;
      i5 = 12u;
      i4 += i5;
      mp_binary_set_val(i0, i1, i2, i3, i4);
      i0 = l4;
      i1 = 1u;
      i0 += i1;
      l4 = i0;
      i1 = p2;
      i0 = i0 >= i1;
      if (i0) {goto B8;}
      i0 = l5;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      i0 = p0;
      i1 = 4u;
      i0 += i1;
      p0 = i0;
      i0 = l5;
      if (i0) {goto L9;}
    B8:;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l4;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L4;}
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 struct_pack_into(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l0;
  i2 = 2u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = l1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B1;}
  i0 = l2;
  i1 = l1;
  i0 += i1;
  l1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_str_get_str(i0);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = calc_size_items(i0, i1);
  i0 = l3;
  i1 = l1;
  i0 += i1;
  l1 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i0 += i1;
  i1 = l3;
  i2 = l2;
  i1 += i2;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l1;
  i2 = p0;
  i3 = 4294967293u;
  i2 += i3;
  i3 = p1;
  i4 = 12u;
  i3 += i4;
  struct_pack_into_internal(i0, i1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B2:;
  i0 = 10773u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = 10773u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 struct_pack_uint32(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_int_get_uint_checked(i0);
  l1 = i0;
  i1 = 128u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 0u;
  i2 = 8u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = l1;
  i2 = 7u;
  i1 >>= (i2 & 31);
  p0 = i1;
  i2 = 0u;
  i1 = i1 != i2;
  i2 = 7u;
  i1 <<= (i2 & 31);
  i2 = l1;
  i3 = 127u;
  i2 &= i3;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = l0;
  i1 = l1;
  i2 = 14u;
  i1 >>= (i2 & 31);
  l2 = i1;
  i2 = 0u;
  i1 = i1 != i2;
  i2 = 7u;
  i1 <<= (i2 & 31);
  i2 = p0;
  i3 = 127u;
  i2 &= i3;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 9), i1);
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i1 = l1;
  i2 = 21u;
  i1 >>= (i2 & 31);
  p0 = i1;
  i2 = 0u;
  i1 = i1 != i2;
  i2 = 7u;
  i1 <<= (i2 & 31);
  i2 = l2;
  i3 = 127u;
  i2 &= i3;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 10), i1);
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = l1;
  i2 = 28u;
  i1 >>= (i2 & 31);
  l1 = i1;
  i2 = 0u;
  i1 = i1 != i2;
  i2 = 7u;
  i1 <<= (i2 & 31);
  i2 = p0;
  i3 = 127u;
  i2 &= i3;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 11), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = l1;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  i0 = 5u;
  p0 = i0;
  goto B1;
  B5:;
  i0 = 1u;
  p0 = i0;
  goto B1;
  B4:;
  i0 = 2u;
  p0 = i0;
  goto B1;
  B3:;
  i0 = 3u;
  p0 = i0;
  goto B1;
  B2:;
  i0 = 4u;
  p0 = i0;
  B1:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i0 = mp_obj_new_bytes(i0, i1);
  p0 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 struct_unpack_uint32(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 0u;
  p0 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l4 = i0;
  L2: vm_checktime();
    i0 = l1;
    i1 = p0;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    i1 = 127u;
    i0 &= i1;
    i1 = l3;
    i2 = 255u;
    i1 &= i2;
    l3 = i1;
    i0 <<= (i1 & 31);
    i1 = l4;
    i0 |= i1;
    l4 = i0;
    i0 = l5;
    i1 = 128u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l3;
    i1 = 7u;
    i0 += i1;
    l3 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L2;}
    goto B0;
  B1:;
  i0 = 0u;
  p0 = i0;
  i0 = 0u;
  l4 = i0;
  B0:;
  i0 = l0;
  i1 = l4;
  i1 = mp_obj_new_int_from_uint(i1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p0;
  i2 = 1u;
  i1 += i2;
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 get_fmt_num(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = 0u;
  l1 = i0;
  L0: vm_checktime();
    i0 = l0;
    i1 = l1;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    l1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    i0 = unichar_isdigit(i0);
    if (i0) {goto L0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l3;
  i2 = 10u;
  i3 = 0u;
  i0 = mp_parse_num_integer(i0, i1, i2, i3);
  l1 = i0;
  i0 = p0;
  i1 = l0;
  i2 = l3;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  FUNC_EPILOGUE;
  return i0;
}

static f64 expm1_0(f64 p0) {
  u32 l0 = 0, l2 = 0, l3 = 0;
  u64 l1 = 0;
  f64 l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  f32 f1;
  f64 d0, d1, d2, d3, d4, d5, d6;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 63ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l2 = i0;
  j0 = l1;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l3 = i0;
  i1 = 1078159482u;
  i0 = i0 < i1;
  if (i0) {goto B8;}
  j0 = l1;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 <= j1;
  if (i0) {goto B7;}
  d0 = p0;
  goto Bfunc;
  B8:;
  i0 = l3;
  i1 = 1071001155u;
  i0 = i0 < i1;
  if (i0) {goto B6;}
  i0 = l3;
  i1 = 1072734897u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B2;}
  d0 = p0;
  d1 = 0.69314718036912382;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l4 = d0;
  i0 = 4294967295u;
  l3 = i0;
  d0 = -1.9082149292705877e-10;
  l5 = d0;
  goto B1;
  B7:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B5;}
  d0 = -1;
  goto Bfunc;
  B6:;
  i0 = l3;
  i1 = 1016070143u;
  i0 = i0 > i1;
  if (i0) {goto B9;}
  i0 = l3;
  i1 = 1048575u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = l0;
  d1 = p0;
  f1 = (*Z_eosio_injectionZ__eosio_f64_demoteZ_fd)(d1);
  f32_store((&M0), (u64)(i0 + 12), f1);
  d0 = p0;
  goto Bfunc;
  B9:;
  i0 = 0u;
  l3 = i0;
  goto B0;
  B5:;
  d0 = p0;
  d1 = 709.78271289338397;
  i0 = (*Z_eosio_injectionZ__eosio_f64_gtZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B4;}
  d0 = p0;
  d1 = 8.9884656743115795e+307;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B4:;
  d0 = p0;
  d1 = 1.4426950408889634;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = -0.5;
  d2 = 0.5;
  i3 = l2;
  d1 = i3 ? d1 : d2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l4 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_truncZ_dd)(d0);
  l5 = d0;
  d1 = -0.69314718036912382;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  d0 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B11;}
  i0 = 2147483648u;
  l3 = i0;
  goto B10;
  B11:;
  d0 = l4;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  l3 = i0;
  B10:;
  d0 = l5;
  d1 = 1.9082149292705877e-10;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l5 = d0;
  d0 = p0;
  d1 = l6;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l4 = d0;
  goto B1;
  B3:;
  d0 = p0;
  goto Bfunc;
  B2:;
  d0 = p0;
  d1 = -0.69314718036912382;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l4 = d0;
  i0 = 1u;
  l3 = i0;
  d0 = 1.9082149292705877e-10;
  l5 = d0;
  B1:;
  d0 = l4;
  d1 = l4;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  p0 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = l5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l5 = d0;
  B0:;
  d0 = p0;
  d1 = p0;
  d2 = 0.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l6 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l4 = d0;
  d1 = l4;
  d2 = l4;
  d3 = l4;
  d4 = l4;
  d5 = l4;
  d6 = -2.0109921818362437e-07;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 4.0082178273293624e-06;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -7.9365075786748794e-05;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.0015873015872548146;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.033333333333333132;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l7 = d1;
  d2 = 3;
  d3 = l6;
  d4 = l7;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  l6 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = 6;
  d3 = p0;
  d4 = l6;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B16;}
  d0 = p0;
  d1 = l6;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l4 = d0;
  i0 = l3;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B15;}
  i0 = l3;
  i1 = 4294967295u;
  i0 = i0 != i1;
  if (i0) {goto B14;}
  d0 = p0;
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = -0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B16:;
  d0 = p0;
  d1 = p0;
  d2 = l6;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = l4;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B15:;
  d0 = p0;
  d1 = -0.25;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B13;}
  d0 = l4;
  d1 = p0;
  d2 = 0.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = -2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B14:;
  i0 = l3;
  i1 = 1023u;
  i0 += i1;
  j0 = (u64)(i0);
  j1 = 52ull;
  j0 <<= (j1 & 63);
  d0 = f64_reinterpret_i64(j0);
  l5 = d0;
  i0 = l3;
  i1 = 57u;
  i0 = i0 < i1;
  if (i0) {goto B12;}
  d0 = p0;
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 8.9884656743115795e+307;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i2 = l3;
  i3 = 1024u;
  i2 = i2 == i3;
  d0 = i2 ? d0 : d1;
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B13:;
  d0 = p0;
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B12:;
  i0 = 1023u;
  i1 = l3;
  i0 -= i1;
  j0 = (u64)(i0);
  j1 = 52ull;
  j0 <<= (j1 & 63);
  l1 = j0;
  i0 = l3;
  i1 = 19u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B17;}
  d0 = 1;
  j1 = l1;
  d1 = f64_reinterpret_i64(j1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = p0;
  d2 = l4;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B17:;
  d0 = p0;
  d1 = l4;
  j2 = l1;
  d2 = f64_reinterpret_i64(j2);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 log2_0(f64 p0) {
  u32 l1 = 0, l2 = 0;
  u64 l0 = 0, l3 = 0;
  f64 l4 = 0, l5 = 0, l6 = 0, l7 = 0, l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9, d10;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 0ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B3;}
  j0 = l0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i1 = 1048575u;
  i0 = i0 <= i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 2146435071u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = 4294966273u;
  l2 = i0;
  j0 = l0;
  j1 = 4294967295ull;
  j0 &= j1;
  l0 = j0;
  j1 = 0ull;
  i0 = j0 != j1;
  if (i0) {goto B2;}
  d0 = 0;
  p0 = d0;
  i0 = l1;
  i1 = 1072693248u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  B4:;
  d0 = p0;
  goto Bfunc;
  B3:;
  j0 = l0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 0ull;
  i0 = j0 == j1;
  if (i0) {goto B1;}
  j0 = l0;
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B0;}
  d0 = p0;
  d1 = 18014398509481984;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  j0 = i64_reinterpret_f64(d0);
  l3 = j0;
  j1 = 4294967295ull;
  j0 &= j1;
  l0 = j0;
  j0 = l3;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i0 = 4294966219u;
  l2 = i0;
  B2:;
  i0 = l1;
  i1 = 614242u;
  i0 += i1;
  l1 = i0;
  i1 = 1048575u;
  i0 &= i1;
  i1 = 1072079006u;
  i0 += i1;
  j0 = (u64)(i0);
  j1 = 32ull;
  j0 <<= (j1 & 63);
  j1 = l0;
  j0 |= j1;
  d0 = f64_reinterpret_i64(j0);
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d2 = p0;
  d3 = 0.5;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l4 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  j0 = i64_reinterpret_f64(d0);
  j1 = 18446744069414584320ull;
  j0 &= j1;
  d0 = f64_reinterpret_i64(j0);
  l5 = d0;
  d1 = 1.4426950407214463;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  i1 = l2;
  i2 = l1;
  i3 = 20u;
  i2 >>= (i3 & 31);
  i1 += i2;
  d1 = (f64)(s32)(i1);
  l7 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l8 = d0;
  d1 = l6;
  d2 = l7;
  d3 = l8;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = p0;
  d3 = l5;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d3 = l4;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d3 = p0;
  d4 = p0;
  d5 = 2;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d3, d4);
  p0 = d3;
  d4 = l4;
  d5 = p0;
  d6 = p0;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  l6 = d5;
  d6 = l6;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  p0 = d5;
  d6 = p0;
  d7 = p0;
  d8 = 0.15313837699209373;
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.22222198432149784;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.39999999999409419;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = l6;
  d7 = p0;
  d8 = p0;
  d9 = p0;
  d10 = 0.14798198605116586;
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = 0.1818357216161805;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 0.28571428743662391;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.66666666666667351;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  p0 = d2;
  d3 = 1.4426950407214463;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = p0;
  d4 = l5;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d4 = 1.6751713164886512e-10;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  d0 = -1;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 log10_0(f64 p0) {
  u32 l1 = 0, l2 = 0;
  u64 l0 = 0, l3 = 0;
  f64 l4 = 0, l5 = 0, l6 = 0, l7 = 0, l8 = 0, l9 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9, d10;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 0ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B3;}
  j0 = l0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i1 = 1048575u;
  i0 = i0 <= i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 2146435071u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = 4294966273u;
  l2 = i0;
  j0 = l0;
  j1 = 4294967295ull;
  j0 &= j1;
  l0 = j0;
  j1 = 0ull;
  i0 = j0 != j1;
  if (i0) {goto B2;}
  d0 = 0;
  p0 = d0;
  i0 = l1;
  i1 = 1072693248u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  B4:;
  d0 = p0;
  goto Bfunc;
  B3:;
  j0 = l0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 0ull;
  i0 = j0 == j1;
  if (i0) {goto B1;}
  j0 = l0;
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B0;}
  d0 = p0;
  d1 = 18014398509481984;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  j0 = i64_reinterpret_f64(d0);
  l3 = j0;
  j1 = 4294967295ull;
  j0 &= j1;
  l0 = j0;
  j0 = l3;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i0 = 4294966219u;
  l2 = i0;
  B2:;
  i0 = l2;
  i1 = l1;
  i2 = 614242u;
  i1 += i2;
  l1 = i1;
  i2 = 20u;
  i1 >>= (i2 & 31);
  i0 += i1;
  d0 = (f64)(s32)(i0);
  l4 = d0;
  d1 = 0.30102999566361177;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l5 = d0;
  i1 = l1;
  i2 = 1048575u;
  i1 &= i2;
  i2 = 1072079006u;
  i1 += i2;
  j1 = (u64)(i1);
  j2 = 32ull;
  j1 <<= (j2 & 63);
  j2 = l0;
  j1 |= j2;
  d1 = f64_reinterpret_i64(j1);
  d2 = -1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = p0;
  d3 = p0;
  d4 = 0.5;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  l6 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  j1 = i64_reinterpret_f64(d1);
  j2 = 18446744069414584320ull;
  j1 &= j2;
  d1 = f64_reinterpret_i64(j1);
  l7 = d1;
  d2 = 0.43429448187816888;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l8 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l9 = d0;
  d1 = l8;
  d2 = l5;
  d3 = l9;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = p0;
  d3 = l7;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d3 = l6;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d3 = p0;
  d4 = p0;
  d5 = 2;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d3, d4);
  p0 = d3;
  d4 = l6;
  d5 = p0;
  d6 = p0;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  l5 = d5;
  d6 = l5;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  p0 = d5;
  d6 = p0;
  d7 = p0;
  d8 = 0.15313837699209373;
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.22222198432149784;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.39999999999409419;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = l5;
  d7 = p0;
  d8 = p0;
  d9 = p0;
  d10 = 0.14798198605116586;
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = 0.1818357216161805;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 0.28571428743662391;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.66666666666667351;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  p0 = d2;
  d3 = 0.43429448187816888;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l4;
  d4 = 3.6942390771589308e-13;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = p0;
  d5 = l7;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d5 = 2.5082946711645275e-11;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  d0 = -1;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 __expo2(f64 p0) {
  FUNC_PROLOGUE;
  f64 d0, d1;
  d0 = p0;
  d1 = -1416.0996898839683;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = exp_0(d0);
  d1 = 2.2471164185778949e+307;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 2.2471164185778949e+307;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  FUNC_EPILOGUE;
  return d0;
}

static f64 cosh_0(f64 p0) {
  u32 l0 = 0, l2 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l1 = j0;
  d0 = f64_reinterpret_i64(j0);
  p0 = d0;
  j0 = l1;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l2 = i0;
  i1 = 1072049729u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l2;
  i1 = 1045430271u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l0;
  d1 = p0;
  d2 = 1.3292279957849159e+36;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = 1;
  goto Bfunc;
  B2:;
  i0 = l2;
  i1 = 1082535489u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  d0 = p0;
  d0 = exp_0(d0);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = 1;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  d0 = p0;
  d0 = expm1_0(d0);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  d0 = p0;
  d0 = __expo2(d0);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 sinh_0(f64 p0) {
  u32 l3 = 0;
  u64 l0 = 0;
  f64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f64 d0, d1, d2, d3, d4;
  d0 = -0.5;
  d1 = 0.5;
  d2 = p0;
  j2 = i64_reinterpret_f64(d2);
  l0 = j2;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  d0 = i2 ? d0 : d1;
  l1 = d0;
  j0 = l0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l0 = j0;
  d0 = f64_reinterpret_i64(j0);
  l2 = d0;
  j0 = l0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l3 = i0;
  i1 = 1082535489u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  d0 = l2;
  d0 = expm1_0(d0);
  l2 = d0;
  i0 = l3;
  i1 = 1072693247u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = l3;
  i1 = 1045430272u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  d0 = l1;
  d1 = l2;
  d2 = l2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = l2;
  d3 = l2;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l2;
  d4 = 1;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B2:;
  d0 = l1;
  d1 = l1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l2;
  d1 = __expo2(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  B1:;
  d0 = p0;
  goto Bfunc;
  B0:;
  d0 = l1;
  d1 = l2;
  d2 = l2;
  d3 = l2;
  d4 = 1;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 tanh_0(f64 p0) {
  u32 l0 = 0, l3 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f32 f1;
  f64 d0, d1, d2, d3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  d0 = f64_reinterpret_i64(j0);
  p0 = d0;
  j0 = l2;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l3 = i0;
  i1 = 1071748075u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  i0 = l3;
  i1 = 1077149697u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  d0 = -0.0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  goto B0;
  B3:;
  i0 = l3;
  i1 = 1070618799u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = expm1_0(d0);
  p0 = d0;
  d1 = p0;
  d2 = 2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p0 = d0;
  goto B0;
  B2:;
  d0 = 1;
  d1 = 2;
  d2 = p0;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d2 = expm1_0(d2);
  d3 = 2;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p0 = d0;
  goto B0;
  B1:;
  i0 = l3;
  i1 = 1048576u;
  i0 = i0 < i1;
  if (i0) {goto B4;}
  d0 = p0;
  d1 = -2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d0 = expm1_0(d0);
  p0 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = p0;
  d2 = 2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p0 = d0;
  goto B0;
  B4:;
  i0 = l0;
  d1 = p0;
  f1 = (*Z_eosio_injectionZ__eosio_f64_demoteZ_fd)(d1);
  f32_store((&M0), (u64)(i0 + 12), f1);
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = p0;
  j2 = l1;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  d0 = i2 ? d0 : d1;
  FUNC_EPILOGUE;
  return d0;
}

static f64 log1p_0(f64 p0) {
  u32 l0 = 0, l2 = 0;
  u64 l1 = 0;
  f64 l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  f32 f1;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9, d10;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l2 = i0;
  j0 = l1;
  j1 = 0ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 1071284857u;
  i0 = i0 <= i1;
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 2146435071u;
  i0 = i0 <= i1;
  if (i0) {goto B3;}
  d0 = p0;
  goto Bfunc;
  B4:;
  i0 = l2;
  i1 = 3220176896u;
  i0 = i0 < i1;
  if (i0) {goto B5;}
  d0 = p0;
  d1 = -1;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B1;}
  d0 = -INFINITY;
  goto Bfunc;
  B5:;
  i0 = l2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 2034237439u;
  i0 = i0 > i1;
  if (i0) {goto B6;}
  i0 = l2;
  i1 = 2146435072u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  d0 = p0;
  goto Bfunc;
  B6:;
  d0 = 0;
  l3 = d0;
  i0 = l2;
  i1 = 3218259653u;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  d0 = 0;
  l4 = d0;
  goto B2;
  B3:;
  d0 = p0;
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l4 = d0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 614242u;
  i0 += i1;
  l2 = i0;
  i1 = 20u;
  i0 >>= (i1 & 31);
  i1 = 4294966273u;
  i0 += i1;
  l0 = i0;
  d0 = 0;
  l3 = d0;
  i0 = l2;
  i1 = 1129316351u;
  i0 = i0 > i1;
  if (i0) {goto B7;}
  d0 = p0;
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p0;
  d2 = l4;
  d3 = -1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  i2 = l2;
  i3 = 1074790399u;
  i2 = i2 > i3;
  d0 = i2 ? d0 : d1;
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l3 = d0;
  B7:;
  i0 = l2;
  i1 = 1048575u;
  i0 &= i1;
  i1 = 1072079006u;
  i0 += i1;
  j0 = (u64)(i0);
  j1 = 32ull;
  j0 <<= (j1 & 63);
  j1 = l1;
  j2 = 4294967295ull;
  j1 &= j2;
  j0 |= j1;
  d0 = f64_reinterpret_i64(j0);
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  i0 = l0;
  d0 = (f64)(s32)(i0);
  l4 = d0;
  B2:;
  d0 = l4;
  d1 = 0.69314718036912382;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d2 = l3;
  d3 = l4;
  d4 = 1.9082149292705877e-10;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d3 = p0;
  d4 = p0;
  d5 = 2;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d3, d4);
  l4 = d3;
  d4 = p0;
  d5 = p0;
  d6 = 0.5;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  l5 = d4;
  d5 = l4;
  d6 = l4;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  l3 = d5;
  d6 = l3;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  l4 = d5;
  d6 = l4;
  d7 = l4;
  d8 = 0.15313837699209373;
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.22222198432149784;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.39999999999409419;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = l3;
  d7 = l4;
  d8 = l4;
  d9 = l4;
  d10 = 0.14798198605116586;
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = 0.1818357216161805;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 0.28571428743662391;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.66666666666667351;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d3 = l5;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  i0 = l0;
  d1 = p0;
  f1 = (*Z_eosio_injectionZ__eosio_f64_demoteZ_fd)(d1);
  f32_store((&M0), (u64)(i0 + 12), f1);
  d0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 acosh_0(f64 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  f64 d0, d1, d2, d3;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2047u;
  i0 &= i1;
  l0 = i0;
  i1 = 1023u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  d0 = p0;
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d1 = sqrt_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = log1p_0(d0);
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 1048u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = -1;
  d2 = p0;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d2 = sqrt_0(d2);
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = log_0(d0);
  goto Bfunc;
  B1:;
  d0 = p0;
  d0 = log_0(d0);
  d1 = 0.69314718055994529;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 asinh_0(f64 p0) {
  u32 l0 = 0, l2 = 0;
  u64 l1 = 0;
  f64 l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f64 d0, d1, d2, d3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  d0 = f64_reinterpret_i64(j0);
  p0 = d0;
  j0 = l1;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2047u;
  i0 &= i1;
  l2 = i0;
  i1 = 1049u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  d0 = p0;
  d0 = log_0(d0);
  d1 = 0.69314718055994529;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  goto B0;
  B1:;
  i0 = l2;
  i1 = 1024u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 1;
  d2 = p0;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d2 = sqrt_0(d2);
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = log_0(d0);
  p0 = d0;
  goto B0;
  B2:;
  i0 = l2;
  i1 = 997u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l3 = d0;
  d1 = l3;
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d1 = sqrt_0(d1);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = log1p_0(d0);
  p0 = d0;
  goto B0;
  B3:;
  i0 = l0;
  d1 = p0;
  d2 = 1.3292279957849159e+36;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = p0;
  j2 = l1;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  d0 = i2 ? d0 : d1;
  FUNC_EPILOGUE;
  return d0;
}

static f64 atanh_0(f64 p0) {
  u32 l0 = 0, l2 = 0;
  u64 l1 = 0;
  f64 l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f32 f1;
  f64 d0, d1, d2, d3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  d0 = f64_reinterpret_i64(j0);
  p0 = d0;
  j0 = l1;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2047u;
  i0 &= i1;
  l2 = i0;
  i1 = 1021u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l2;
  i1 = 990u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l2;
  if (i0) {goto B0;}
  i0 = l0;
  d1 = p0;
  f1 = (*Z_eosio_injectionZ__eosio_f64_demoteZ_fd)(d1);
  f32_store((&M0), (u64)(i0 + 12), f1);
  goto B0;
  B2:;
  d0 = p0;
  d1 = 1;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = log1p_0(d0);
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  goto B0;
  B1:;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l3 = d0;
  d1 = l3;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = log1p_0(d0);
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = p0;
  j2 = l1;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  d0 = i2 ? d0 : d1;
  FUNC_EPILOGUE;
  return d0;
}

static f64 __tan(f64 p0, f64 p1, u32 p2) {
  u32 l1 = 0, l2 = 0;
  u64 l0 = 0;
  f64 l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2, j3, j4;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9, d10, d11, d12, d13;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 9223372002495037440ull;
  j0 &= j1;
  j1 = 4604249089280835585ull;
  i0 = j0 < j1;
  l1 = i0;
  if (i0) {goto B1;}
  d0 = 0.78539816339744828;
  d1 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  d2 = p0;
  j3 = l0;
  j4 = 63ull;
  j3 >>= (j4 & 63);
  i3 = (u32)(j3);
  l2 = i3;
  d1 = i3 ? d1 : d2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 3.061616997868383e-17;
  d2 = p1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d2);
  d3 = p1;
  i4 = l2;
  d2 = i4 ? d2 : d3;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d0 = 0;
  p1 = d0;
  goto B0;
  B1:;
  B0:;
  d0 = p0;
  d1 = p0;
  d2 = p0;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  l3 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l4 = d1;
  d2 = 0.33333333333333409;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p1;
  d3 = l3;
  d4 = p1;
  d5 = l4;
  d6 = l3;
  d7 = l3;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  l5 = d6;
  d7 = l5;
  d8 = l5;
  d9 = l5;
  d10 = l5;
  d11 = -1.8558637485527546e-05;
  d10 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d10, d11);
  d11 = 7.8179444293955709e-05;
  d10 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d10, d11);
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = 0.0005880412408202641;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 0.0035920791075913124;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.021869488294859542;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.13333333333320124;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d7 = l3;
  d8 = l5;
  d9 = l5;
  d10 = l5;
  d11 = l5;
  d12 = l5;
  d13 = 2.5907305186363371e-05;
  d12 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d12, d13);
  d13 = 7.1407249138260819e-05;
  d12 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d12, d13);
  d11 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d11, d12);
  d12 = 0.00024646313481846991;
  d11 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d11, d12);
  d10 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d10, d11);
  d11 = 0.0014562094543252903;
  d10 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d10, d11);
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = 0.0088632398235993001;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 0.053968253976226052;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l3 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l5 = d0;
  i0 = l1;
  if (i0) {goto B2;}
  i0 = 1u;
  i1 = p2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 -= i1;
  d0 = (f64)(s32)(i0);
  p1 = d0;
  d1 = p0;
  d2 = l3;
  d3 = l5;
  d4 = l5;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = l5;
  d5 = p1;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l5 = d1;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l5 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = l5;
  i2 = l2;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B2:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B3;}
  d0 = -1;
  d1 = l5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p1 = d0;
  d1 = l5;
  j1 = i64_reinterpret_f64(d1);
  j2 = 18446744069414584320ull;
  j1 &= j2;
  d1 = f64_reinterpret_i64(j1);
  l4 = d1;
  d2 = p1;
  j2 = i64_reinterpret_f64(d2);
  j3 = 18446744069414584320ull;
  j2 &= j3;
  d2 = f64_reinterpret_i64(j2);
  l5 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = l3;
  d3 = l4;
  d4 = p0;
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d3 = l5;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l5 = d0;
  B3:;
  d0 = l5;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 tan_0(f64 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  f64 d0, d1, d2, d3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l1 = i0;
  i1 = 1072243195u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 1044381695u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l0;
  d1 = p0;
  d2 = 7.5231638452626401e-37;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 1.3292279957849159e+36;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  i3 = l1;
  i4 = 1048576u;
  i3 = i3 < i4;
  d1 = i3 ? d1 : d2;
  f64_store((&M0), (u64)(i0), d1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B2:;
  i0 = l1;
  i1 = 2146435072u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  d0 = p0;
  d1 = 0;
  i2 = 0u;
  d0 = __tan(d0, d1, i2);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B0:;
  d0 = p0;
  i1 = l0;
  i0 = __rem_pio2(d0, i1);
  l1 = i0;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  i2 = l1;
  i3 = 1u;
  i2 &= i3;
  d0 = __tan(d0, d1, i2);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 acos_0(f64 p0) {
  u32 l1 = 0;
  u64 l0 = 0;
  f64 l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l1 = i0;
  i1 = 1072693248u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 3222274048u;
  i0 += i1;
  j1 = l0;
  i1 = (u32)(j1);
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  d0 = 0;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B2:;
  i0 = l1;
  i1 = 1071644671u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  d0 = 1.5707963267948966;
  l2 = d0;
  i0 = l1;
  i1 = 1012924417u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  d0 = 6.123233995736766e-17;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l2 = d1;
  d2 = l2;
  d3 = l2;
  d4 = l2;
  d5 = l2;
  d6 = l2;
  d7 = 3.4793310759602117e-05;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.00079153499428981453;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -0.040055534500679411;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.20121253213486293;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = -0.32556581862240092;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 0.16666666666666666;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = l2;
  d3 = l2;
  d4 = l2;
  d5 = l2;
  d6 = 0.077038150555901935;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -0.68828397160545329;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 2.0209457602335057;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = -2.4033949117344142;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 1.5707963267948966;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B4:;
  j0 = l0;
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B0;}
  d0 = 1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d2 = p0;
  d3 = p0;
  d4 = p0;
  d5 = p0;
  d6 = 3.4793310759602117e-05;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.00079153499428981453;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -0.040055534500679411;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.20121253213486293;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.32556581862240092;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 0.16666666666666666;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d2 = p0;
  d3 = p0;
  d4 = p0;
  d5 = 0.077038150555901935;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -0.68828397160545329;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 2.0209457602335057;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -2.4033949117344142;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = p0;
  d1 = sqrt_0(d1);
  l3 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d2 = l3;
  j2 = i64_reinterpret_f64(d2);
  j3 = 18446744069414584320ull;
  j2 &= j3;
  d2 = f64_reinterpret_i64(j2);
  l2 = d2;
  d3 = l2;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = l3;
  d3 = l2;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l2 = d0;
  B3:;
  d0 = l2;
  goto Bfunc;
  B1:;
  d0 = 3.1415926535897931;
  d1 = 0;
  j2 = l0;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B0:;
  d0 = 1.5707963267948966;
  d1 = p0;
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = 0.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  p0 = d1;
  d1 = sqrt_0(d1);
  l2 = d1;
  d2 = l2;
  d3 = p0;
  d4 = p0;
  d5 = p0;
  d6 = p0;
  d7 = p0;
  d8 = p0;
  d9 = 3.4793310759602117e-05;
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 0.00079153499428981453;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = -0.040055534500679411;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.20121253213486293;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -0.32556581862240092;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.16666666666666666;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = p0;
  d5 = p0;
  d6 = p0;
  d7 = p0;
  d8 = 0.077038150555901935;
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = -0.68828397160545329;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 2.0209457602335057;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -2.4033949117344142;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 1;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -6.123233995736766e-17;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 asin_0(f64 p0) {
  u32 l1 = 0;
  u64 l0 = 0;
  f64 l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f64 d0, d1, d2, d3, d4, d5, d6;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l1 = i0;
  i1 = 1072693248u;
  i0 = i0 < i1;
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 3222274048u;
  i0 += i1;
  j1 = l0;
  i1 = (u32)(j1);
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B3;}
  d0 = 0;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B4:;
  i0 = l1;
  i1 = 1071644671u;
  i0 = i0 > i1;
  if (i0) {goto B5;}
  i0 = l1;
  i1 = 4293918720u;
  i0 += i1;
  i1 = 1044381696u;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  d0 = p0;
  goto Bfunc;
  B5:;
  d0 = 1;
  d1 = p0;
  d1 = fabs_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d2 = p0;
  d3 = p0;
  d4 = p0;
  d5 = p0;
  d6 = 3.4793310759602117e-05;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.00079153499428981453;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -0.040055534500679411;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.20121253213486293;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.32556581862240092;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 0.16666666666666666;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d2 = p0;
  d3 = p0;
  d4 = p0;
  d5 = 0.077038150555901935;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -0.68828397160545329;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 2.0209457602335057;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -2.4033949117344142;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l2 = d0;
  d0 = p0;
  d0 = sqrt_0(d0);
  l3 = d0;
  i0 = l1;
  i1 = 1072640819u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  d0 = 1.5707963267948966;
  d1 = l3;
  d2 = l3;
  d3 = l2;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = -6.123233995736766e-17;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p0 = d0;
  goto B0;
  B3:;
  d0 = p0;
  d1 = 1.5707963267948966;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 7.5231638452626401e-37;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B2:;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l3 = d0;
  d1 = l3;
  d2 = l3;
  d3 = l3;
  d4 = l3;
  d5 = l3;
  d6 = 3.4793310759602117e-05;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.00079153499428981453;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -0.040055534500679411;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.20121253213486293;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.32556581862240092;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 0.16666666666666666;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l3;
  d2 = l3;
  d3 = l3;
  d4 = l3;
  d5 = 0.077038150555901935;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -0.68828397160545329;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 2.0209457602335057;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -2.4033949117344142;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  d0 = 0.78539816339744828;
  d1 = l3;
  j1 = i64_reinterpret_f64(d1);
  j2 = 18446744069414584320ull;
  j1 &= j2;
  d1 = f64_reinterpret_i64(j1);
  l4 = d1;
  d2 = l4;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = l3;
  d2 = l3;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = l2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 6.123233995736766e-17;
  d3 = p0;
  d4 = l4;
  d5 = l4;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d4 = l3;
  d5 = l4;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d3, d4);
  p0 = d3;
  d4 = p0;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0.78539816339744828;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  B0:;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = p0;
  j2 = l0;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  d0 = i2 ? d0 : d1;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 ceil_0(f64 p0) {
  u32 l0 = 0, l2 = 0, l3 = 0;
  u64 l1 = 0;
  f64 l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  d0 = p0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B0;}
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2047u;
  i0 &= i1;
  l2 = i0;
  i1 = 1074u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  d0 = p0;
  d1 = -4503599627370496;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 4503599627370496;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p0;
  d2 = 4503599627370496;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = -4503599627370496;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  j2 = l1;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  l3 = i2;
  d0 = i2 ? d0 : d1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l4 = d0;
  i0 = l2;
  i1 = 1022u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l0;
  d1 = l4;
  f64_store((&M0), (u64)(i0 + 8), d1);
  d0 = -0.0;
  d1 = 1;
  i2 = l3;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B1:;
  d0 = l4;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d0 = l4;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B0;}
  d0 = p0;
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  B0:;
  d0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 frexp_0(f64 p0, u32 p1) {
  u32 l1 = 0, l2 = 0;
  u64 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  f64 d0, d1;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i1 = 2047u;
  i0 &= i1;
  l2 = i0;
  i1 = 2047u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l2;
  if (i0) {goto B2;}
  d0 = p0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B0;}
  d0 = p0;
  d1 = 1.8446744073709552e+19;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = p1;
  d0 = frexp_0(d0, i1);
  p0 = d0;
  i0 = p1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967232u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  d0 = p0;
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = l1;
  i2 = 2047u;
  i1 &= i2;
  i2 = 4294966274u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  j0 = l0;
  j1 = 9227875636482146303ull;
  j0 &= j1;
  j1 = 4602678819172646912ull;
  j0 |= j1;
  d0 = f64_reinterpret_i64(j0);
  p0 = d0;
  B1:;
  d0 = p0;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  d0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 ldexp_0(f64 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i1;
  f64 d0;
  d0 = p0;
  i1 = p1;
  d0 = scalbn_0(d0, i1);
  FUNC_EPILOGUE;
  return d0;
}

static f64 modf_0(f64 p0, u32 p1) {
  u32 l1 = 0, l2 = 0;
  u64 l0 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1, j2;
  f64 d0, d1;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2047u;
  i0 &= i1;
  l1 = i0;
  i1 = 4294966273u;
  i0 += i1;
  l2 = i0;
  i0 = l1;
  i1 = 1075u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = p1;
  d1 = p0;
  f64_store((&M0), (u64)(i0), d1);
  j0 = l0;
  j1 = 4503599627370495ull;
  j0 &= j1;
  i0 = !(j0);
  if (i0) {goto B1;}
  i0 = l2;
  i1 = 1024u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  d0 = p0;
  goto Bfunc;
  B2:;
  i0 = l1;
  i1 = 1022u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p1;
  j1 = l0;
  j2 = 9223372036854775808ull;
  j1 &= j2;
  i64_store((&M0), (u64)(i0), j1);
  d0 = p0;
  goto Bfunc;
  B1:;
  j0 = l0;
  j1 = 9223372036854775808ull;
  j0 &= j1;
  d0 = f64_reinterpret_i64(j0);
  goto Bfunc;
  B0:;
  j0 = 4503599627370495ull;
  i1 = l2;
  j1 = (u64)(i1);
  l3 = j1;
  j0 >>= (j1 & 63);
  j1 = l0;
  j0 &= j1;
  j1 = 0ull;
  i0 = j0 == j1;
  if (i0) {goto B3;}
  i0 = p1;
  j1 = 18442240474082181120ull;
  j2 = l3;
  j1 = (u64)((s64)j1 >> (j2 & 63));
  j2 = l0;
  j1 &= j2;
  l0 = j1;
  i64_store((&M0), (u64)(i0), j1);
  d0 = p0;
  j1 = l0;
  d1 = f64_reinterpret_i64(j1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B3:;
  i0 = p1;
  d1 = p0;
  f64_store((&M0), (u64)(i0), d1);
  j0 = l0;
  j1 = 9223372036854775808ull;
  j0 &= j1;
  d0 = f64_reinterpret_i64(j0);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 trunc_0(f64 p0) {
  u32 l0 = 0, l2 = 0;
  u64 l1 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2047u;
  i0 &= i1;
  l2 = i0;
  i1 = 1074u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  j0 = 18446744073709551615ull;
  i1 = 1u;
  i2 = l2;
  i3 = 4294966285u;
  i2 += i3;
  i3 = l2;
  i4 = 1023u;
  i3 = i3 < i4;
  i1 = i3 ? i1 : i2;
  j1 = (u64)(i1);
  j0 >>= (j1 & 63);
  l3 = j0;
  j1 = l1;
  j0 &= j1;
  i0 = !(j0);
  if (i0) {goto B0;}
  i0 = l0;
  d1 = p0;
  d2 = 1.3292279957849159e+36;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  j0 = l3;
  j1 = 18446744073709551615ull;
  j0 ^= j1;
  j1 = l1;
  j0 &= j1;
  d0 = f64_reinterpret_i64(j0);
  p0 = d0;
  B0:;
  d0 = p0;
  FUNC_EPILOGUE;
  return d0;
}

static f64 erf_0(f64 p0) {
  u32 l2 = 0;
  u64 l0 = 0, l1 = 0;
  f64 l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  f64 d0, d1, d2, d3, d4, d5, d6;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 63ull;
  j0 >>= (j1 & 63);
  l1 = j0;
  j0 = l0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l2 = i0;
  i1 = 2146435072u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  d0 = 1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  i1 = 1u;
  j2 = l1;
  i2 = (u32)(j2);
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 -= i2;
  d1 = (f64)(s32)(i1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  i0 = l2;
  i1 = 1072365567u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l2;
  i1 = 1043333119u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  d0 = p0;
  d1 = 8;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d2 = 1.0270333367641007;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 0.125;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B2:;
  d0 = 1;
  l3 = d0;
  i0 = l2;
  i1 = 1075314687u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  d0 = 1;
  i1 = l2;
  d2 = p0;
  d1 = erfc2(i1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l3 = d0;
  B3:;
  d0 = l3;
  d1 = l3;
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  j2 = l1;
  i2 = !(j2);
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B1:;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l3 = d0;
  d1 = l3;
  d2 = l3;
  d3 = l3;
  d4 = -2.3763016656650163e-05;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = -0.0057702702964894416;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.02848174957559851;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -0.3250421072470015;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 0.12837916709551256;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l3;
  d2 = l3;
  d3 = l3;
  d4 = l3;
  d5 = l3;
  d6 = -3.9602282787753681e-06;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.00013249473800432164;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.0050813062818757656;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.065022249988767294;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 0.39791722395915535;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 erfc2(u32 p0, f64 p1) {
  f64 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1, j2;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9;
  d0 = p1;
  d0 = fabs_0(d0);
  l0 = d0;
  i0 = p0;
  i1 = 1072955391u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  d0 = 0.15493708848953247;
  d1 = l0;
  d2 = -1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p1 = d1;
  d2 = p1;
  d3 = p1;
  d4 = p1;
  d5 = p1;
  d6 = p1;
  d7 = -0.0021663755948687908;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.035478304325618236;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -0.11089469428239668;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.31834661990116175;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = -0.37220787603570132;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 0.41485611868374833;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -0.0023621185607526594;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = p1;
  d3 = p1;
  d4 = p1;
  d5 = p1;
  d6 = p1;
  d7 = p1;
  d8 = 0.011984499846799107;
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.013637083912029051;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.12617121980876164;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.071828654414196266;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.54039791770217105;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.10642088040084423;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  d0 = 1;
  d1 = l0;
  d2 = l0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p1 = d0;
  i0 = p0;
  i1 = 1074191212u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  d0 = p1;
  d1 = p1;
  d2 = -0.060424415214858099;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 6.5702497703192817;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 108.63500554177944;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l1 = d0;
  d0 = p1;
  d1 = p1;
  d2 = p1;
  d3 = p1;
  d4 = p1;
  d5 = p1;
  d6 = p1;
  d7 = -9.8143293441691455;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = -81.287435506306593;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -184.60509290671104;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -162.39666946257347;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = -62.375332450326006;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -10.558626225323291;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -0.69385857270718176;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = -0.0098649440348471482;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l2 = d0;
  d0 = 19.651271667439257;
  l3 = d0;
  d0 = 137.65775414351904;
  l4 = d0;
  d0 = 434.56587747522923;
  l5 = d0;
  d0 = 645.38727173326788;
  l6 = d0;
  d0 = 429.00814002756783;
  l7 = d0;
  goto B1;
  B2:;
  d0 = p1;
  d1 = -22.440952446585818;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 474.52854120695537;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l1 = d0;
  d0 = p1;
  d1 = p1;
  d2 = p1;
  d3 = p1;
  d4 = p1;
  d5 = p1;
  d6 = -483.5191916086514;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -1025.0951316110772;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -637.56644336838963;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = -160.63638485582192;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -17.757954917754752;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -0.79928323768052301;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = -0.0098649429247000993;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l2 = d0;
  d0 = 30.338060743482458;
  l3 = d0;
  d0 = 325.79251299657392;
  l4 = d0;
  d0 = 1536.729586084437;
  l5 = d0;
  d0 = 3199.8582195085955;
  l6 = d0;
  d0 = 2553.0504064331644;
  l7 = d0;
  B1:;
  d0 = -0.5625;
  d1 = l0;
  j1 = i64_reinterpret_f64(d1);
  j2 = 18446744069414584320ull;
  j1 &= j2;
  d1 = f64_reinterpret_i64(j1);
  l8 = d1;
  d2 = l8;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d0 = exp_0(d0);
  d1 = l8;
  d2 = l0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = l0;
  d3 = l8;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = l2;
  d3 = p1;
  d4 = p1;
  d5 = p1;
  d6 = p1;
  d7 = p1;
  d8 = p1;
  d9 = l1;
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = l7;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = l6;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = l5;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = l4;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = l3;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 1;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d1 = exp_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 erfc_0(f64 p0) {
  u32 l1 = 0, l2 = 0;
  u64 l0 = 0;
  f64 l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  f64 d0, d1, d2, d3, d4, d5, d6;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 63ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  j0 = l0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l2 = i0;
  i1 = 2146435072u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  d0 = 1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  d1 = (f64)(s32)(i1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  i0 = l2;
  i1 = 1072365567u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 1013972991u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  d0 = 1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B4:;
  i0 = l2;
  i1 = 1077673983u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  d0 = 2;
  i1 = l2;
  d2 = p0;
  d1 = erfc2(i1, d2);
  p0 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = p0;
  i2 = l1;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B3:;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l3 = d0;
  d1 = l3;
  d2 = l3;
  d3 = l3;
  d4 = -2.3763016656650163e-05;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = -0.0057702702964894416;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.02848174957559851;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -0.3250421072470015;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 0.12837916709551256;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l3;
  d2 = l3;
  d3 = l3;
  d4 = l3;
  d5 = l3;
  d6 = -3.9602282787753681e-06;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.00013249473800432164;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.0050813062818757656;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.065022249988767294;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 0.39791722395915535;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l3 = d0;
  i0 = l1;
  if (i0) {goto B1;}
  i0 = l2;
  i1 = 1070596095u;
  i0 = i0 <= i1;
  if (i0) {goto B1;}
  d0 = 0.5;
  d1 = p0;
  d2 = -0.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = l3;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B2:;
  d0 = 2;
  d1 = 0;
  i2 = l1;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B1:;
  d0 = 1;
  d1 = l3;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 tgamma_0(f64 p0) {
  u32 l0 = 0, l2 = 0, l3 = 0;
  u64 l1 = 0;
  f64 l4 = 0, l5 = 0, l6 = 0, l7 = 0, l8 = 0, l9 = 0, l10 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  f32 f1;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9, d10, d11, d12, d13;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l2 = i0;
  i1 = 2146435072u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = INFINITY;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  i0 = l2;
  i1 = 1016070143u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = 1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  j0 = l1;
  j1 = 63ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l3 = i0;
  d0 = p0;
  d0 = floor_0(d0);
  d1 = p0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B13;}
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = f64_reinterpret_i64(0x7ff8000000000000) /* nan:0x8000000000000 */;
  goto Bfunc;
  B14:;
  d0 = p0;
  d1 = 23;
  i0 = (*Z_eosio_injectionZ__eosio_f64_leZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  i0 = !(i0);
  if (i0) {goto B12;}
  B13:;
  i0 = l2;
  i1 = 1080492032u;
  i0 = i0 < i1;
  if (i0) {goto B15;}
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l0;
  d1 = 1.1754943508222875e-38;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  f1 = (*Z_eosio_injectionZ__eosio_f64_demoteZ_fd)(d1);
  f32_store((&M0), (u64)(i0 + 12), f1);
  d0 = p0;
  d0 = floor_0(d0);
  l4 = d0;
  d0 = p0;
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d0 = floor_0(d0);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = 0;
  d1 = -0.0;
  d2 = p0;
  d3 = l4;
  d4 = 0.5;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  i2 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d2, d3);
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B15:;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = p0;
  i2 = l3;
  d0 = i2 ? d0 : d1;
  l4 = d0;
  d1 = 5.5246800407767296;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l5 = d0;
  d1 = -5.5246800407767296;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l6 = d0;
  d0 = l5;
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = -5.5246800407767296;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l7 = d0;
  d0 = l4;
  d1 = 5.5246800407767296;
  i0 = (*Z_eosio_injectionZ__eosio_f64_gtZ_idd)(d0, d1);
  l2 = i0;
  d0 = l4;
  d1 = 8;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i0 = !(i0);
  if (i0) {goto B17;}
  d0 = l4;
  d1 = l4;
  d2 = l4;
  d3 = l4;
  d4 = l4;
  d5 = l4;
  d6 = l4;
  d7 = l4;
  d8 = l4;
  d9 = l4;
  d10 = l4;
  d11 = l4;
  d12 = l4;
  d13 = 0;
  d12 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d12, d13);
  l8 = d12;
  d13 = 1;
  d12 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d12, d13);
  d11 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d11, d12);
  d12 = 66;
  d11 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d11, d12);
  d10 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d10, d11);
  d11 = 1925;
  d10 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d10, d11);
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = 32670;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 357423;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 2637558;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 13339535;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 45995730;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 105258076;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 150917976;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 120543840;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 39916800;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l9 = d0;
  d0 = l4;
  d1 = l4;
  d2 = l4;
  d3 = l4;
  d4 = l4;
  d5 = l4;
  d6 = l4;
  d7 = l4;
  d8 = l4;
  d9 = l4;
  d10 = l4;
  d11 = l4;
  d12 = l8;
  d13 = 2.5066282746310002;
  d12 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d12, d13);
  d11 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d11, d12);
  d12 = 210.82427775157936;
  d11 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d11, d12);
  d10 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d10, d11);
  d11 = 8071.6720023658163;
  d10 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d10, d11);
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = 186056.26539522348;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 2876370.6289353725;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 31426415.585400194;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 248874557.86205417;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 1439720407.3117216;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 6039542586.3520279;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 17921034426.037209;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 35711959237.355667;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 42919803642.649101;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 23531376880.410759;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l10 = d0;
  goto B16;
  B17:;
  d0 = 0;
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l8 = d0;
  d1 = 0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 39916800;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 120543840;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 150917976;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 105258076;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 45995730;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 13339535;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 2637558;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 357423;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 32670;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 1925;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 66;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l9 = d0;
  d0 = l8;
  d1 = 23531376880.410759;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 42919803642.649101;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 35711959237.355667;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 17921034426.037209;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 6039542586.3520279;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 1439720407.3117216;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 248874557.86205417;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 31426415.585400194;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 2876370.6289353725;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 186056.26539522348;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 8071.6720023658163;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 210.82427775157936;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 2.5066282746310002;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l10 = d0;
  B16:;
  d0 = l7;
  d1 = l6;
  i2 = l2;
  d0 = i2 ? d0 : d1;
  l7 = d0;
  d0 = l4;
  d1 = -0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l8 = d0;
  d0 = l10;
  d1 = l9;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  d1 = exp_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  d0 = p0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B2;}
  d0 = l4;
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d1 = floor_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d1 = 4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l9 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B10;}
  i0 = 2147483648u;
  l2 = i0;
  goto B9;
  B12:;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B8;}
  i0 = 2147483648u;
  l2 = i0;
  goto B7;
  B11:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = 8.9884656743115795e+307;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B10:;
  d0 = l9;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  l2 = i0;
  B9:;
  d0 = p0;
  i1 = l2;
  i2 = 1u;
  i1 += i2;
  i2 = 2u;
  i1 = I32_DIV_S(i1, i2);
  l2 = i1;
  d1 = (f64)(s32)(i1);
  d2 = 0.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 3.1415926535897931;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  i0 = l2;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = l2;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l2;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  d0 = p0;
  d1 = 0;
  d0 = __cos(d0, d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  p0 = d0;
  goto B3;
  B8:;
  d0 = p0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  l2 = i0;
  B7:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 42712u;
  i0 += i1;
  d0 = f64_load((&M0), (u64)(i0));
  goto Bfunc;
  B6:;
  d0 = p0;
  d1 = 0;
  d0 = __cos(d0, d1);
  p0 = d0;
  goto B3;
  B5:;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = 0;
  i2 = 0u;
  d0 = __sin(d0, d1, i2);
  p0 = d0;
  goto B3;
  B4:;
  d0 = p0;
  d1 = 0;
  i2 = 0u;
  d0 = __sin(d0, d1, i2);
  p0 = d0;
  B3:;
  d0 = -3.1415926535897931;
  d1 = l6;
  d2 = l4;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l6 = d0;
  d0 = l8;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  l8 = d0;
  d0 = l7;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  l7 = d0;
  B2:;
  d0 = l5;
  d1 = l8;
  d2 = 0.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = pow_0(d0, d1);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = p0;
  d2 = l6;
  d3 = l7;
  d4 = 6.0246800407767296;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = l6;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = l5;
  d3 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 __lgamma_r(f64 p0, u32 p1) {
  u32 l1 = 0, l2 = 0, l5 = 0;
  u64 l0 = 0;
  f64 l3 = 0, l4 = 0, l6 = 0, l7 = 0, l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f32 f1, f2;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9, d10;
  i0 = p1;
  i1 = 1u;
  i32_store((&M0), (u64)(i0), i1);
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i1 = 2147483647u;
  i0 &= i1;
  l2 = i0;
  i1 = 2146435072u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  i0 = l2;
  i1 = 999292927u;
  i0 = i0 > i1;
  if (i0) {goto B19;}
  j0 = l0;
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B18;}
  d0 = p0;
  d0 = log_0(d0);
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  goto Bfunc;
  B19:;
  j0 = l0;
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B17;}
  i0 = l1;
  i1 = 1072693247u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B16;}
  goto B15;
  B18:;
  i0 = p1;
  i1 = 4294967295u;
  i32_store((&M0), (u64)(i0), i1);
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d0 = log_0(d0);
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  goto Bfunc;
  B17:;
  d0 = p0;
  d1 = -0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l3 = d0;
  d1 = l3;
  d1 = floor_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l3 = d0;
  d1 = l3;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l3 = d0;
  d1 = 4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l4 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B21;}
  i0 = 2147483648u;
  l5 = i0;
  goto B20;
  B21:;
  d0 = l4;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  l5 = i0;
  B20:;
  d0 = l3;
  i1 = l5;
  i2 = 1u;
  i1 += i2;
  i2 = 2u;
  i1 = I32_DIV_S(i1, i2);
  l5 = i1;
  f1 = (f32)(s32)(i1);
  f2 = -0.5;
  f1 = (*Z_eosio_injectionZ__eosio_f32_mulZ_fff)(f1, f2);
  d1 = (*Z_eosio_injectionZ__eosio_f32_promoteZ_df)(f1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 3.1415926535897931;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l3 = d0;
  i0 = l5;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B26;}
  i0 = l5;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B25;}
  i0 = l5;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B24;}
  d0 = 0;
  l4 = d0;
  d0 = l3;
  d1 = 0;
  d0 = __cos(d0, d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  l3 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B23;}
  goto B22;
  B26:;
  d0 = 0;
  l4 = d0;
  d0 = l3;
  d1 = 0;
  d0 = __cos(d0, d1);
  l3 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B23;}
  goto B22;
  B25:;
  d0 = 0;
  l4 = d0;
  d0 = l3;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = 0;
  i2 = 0u;
  d0 = __sin(d0, d1, i2);
  l3 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B22;}
  goto B23;
  B24:;
  d0 = 0;
  l4 = d0;
  d0 = l3;
  d1 = 0;
  i2 = 0u;
  d0 = __sin(d0, d1, i2);
  l3 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B22;}
  B23:;
  d0 = 1;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B22:;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  p0 = d0;
  d0 = l3;
  d1 = l4;
  i0 = (*Z_eosio_injectionZ__eosio_f64_gtZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B28;}
  i0 = p1;
  i1 = 4294967295u;
  i32_store((&M0), (u64)(i0), i1);
  goto B27;
  B28:;
  d0 = l3;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  l3 = d0;
  B27:;
  d0 = 3.1415926535897931;
  d1 = l3;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d0 = log_0(d0);
  l4 = d0;
  i0 = l1;
  i1 = 1072693247u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B15;}
  B16:;
  i0 = l1;
  i1 = 1073741824u;
  i0 = i0 == i1;
  if (i0) {goto B14;}
  i0 = l1;
  i1 = 1072693248u;
  i0 = i0 != i1;
  if (i0) {goto B13;}
  goto B14;
  B15:;
  i0 = l1;
  i1 = 3220176896u;
  i0 = i0 == i1;
  if (i0) {goto B14;}
  i0 = l1;
  i1 = 3221225472u;
  i0 = i0 != i1;
  if (i0) {goto B13;}
  B14:;
  j0 = l0;
  i0 = (u32)(j0);
  i0 = !(i0);
  if (i0) {goto B12;}
  B13:;
  i0 = l2;
  i1 = 1073741823u;
  i0 = i0 > i1;
  if (i0) {goto B29;}
  i0 = l2;
  i1 = 1072483532u;
  i0 = i0 > i1;
  if (i0) {goto B11;}
  d0 = p0;
  d0 = log_0(d0);
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  l6 = d0;
  d0 = 1;
  l3 = d0;
  i0 = l2;
  i1 = 1072130371u;
  i0 = i0 > i1;
  if (i0) {goto B10;}
  i0 = l2;
  i1 = 1070442080u;
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  d0 = p0;
  d1 = -0.46163214496836225;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l3 = d0;
  goto B5;
  B29:;
  i0 = l2;
  i1 = 1075838975u;
  i0 = i0 > i1;
  if (i0) {goto B9;}
  d0 = 1;
  l6 = d0;
  d0 = p0;
  d1 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_truncZ_dd)(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l3 = d0;
  d1 = l3;
  d2 = l3;
  d3 = l3;
  d4 = l3;
  d5 = l3;
  d6 = l3;
  d7 = 3.1947532658410087e-05;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.0018402845140733772;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.026642270303363861;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.14635047265246445;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.32577879640893098;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 0.21498241596060885;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -0.077215664901532866;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l3;
  d2 = l3;
  d3 = l3;
  d4 = l3;
  d5 = l3;
  d6 = l3;
  d7 = 7.3266843074462564e-06;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.0007779424963818936;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.01864591917156529;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.17193386563280308;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.72193554756713807;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 1.3920053346762105;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l7 = d0;
  d0 = l3;
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l8 = d0;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B8;}
  i0 = 2147483648u;
  p1 = i0;
  goto B7;
  B12:;
  d0 = 0;
  p0 = d0;
  goto B1;
  B11:;
  i0 = l2;
  i1 = 1073460418u;
  i0 = i0 <= i1;
  if (i0) {goto B6;}
  d0 = 2;
  l3 = d0;
  d0 = 0;
  l6 = d0;
  B10:;
  d0 = l6;
  d1 = l3;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  l3 = d1;
  d2 = l3;
  d3 = l3;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  p0 = d2;
  d3 = p0;
  d4 = p0;
  d5 = p0;
  d6 = p0;
  d7 = 2.5214456545125733e-05;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.00022086279071390839;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.0011927076318336207;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.0073855508608140288;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.067352301053129268;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 0.077215664901532866;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = p0;
  d4 = p0;
  d5 = p0;
  d6 = p0;
  d7 = p0;
  d8 = 4.4864094961891516e-05;
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.00010801156724758394;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.00051006979215351134;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.0028905138367341563;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.020580808432516733;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.32246703342411359;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = l3;
  d3 = -0.5;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  goto B1;
  B9:;
  d0 = p0;
  d0 = log_0(d0);
  l6 = d0;
  i0 = l2;
  i1 = 1133510655u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  d0 = 1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l3 = d0;
  d1 = l3;
  d2 = l3;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l3 = d1;
  d2 = l3;
  d3 = l3;
  d4 = l3;
  d5 = l3;
  d6 = -0.0016309293409657527;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.00083633991899628214;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -0.00059518755745033996;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.00079365055864301956;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.0027777777772877554;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 0.083333333333332968;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 0.41893853320467273;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p0;
  d2 = -0.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = l6;
  d3 = -1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  goto B1;
  B8:;
  d0 = p0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  p1 = i0;
  B7:;
  d0 = l8;
  d1 = l7;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  i0 = p1;
  i1 = 4294967293u;
  i0 += i1;
  p1 = i0;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = p1;
  switch (i0) {
    case 0: goto B30;
    case 1: goto B31;
    case 2: goto B32;
    case 3: goto B33;
    case 4: goto B34;
    default: goto B30;
  }
  B34:;
  d0 = l3;
  d1 = 6;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l6 = d0;
  B33:;
  d0 = l3;
  d1 = 5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l6;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  B32:;
  d0 = l3;
  d1 = 4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l6;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  B31:;
  d0 = l3;
  d1 = 3;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l6;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  B30:;
  d0 = p0;
  d1 = l3;
  d2 = 2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = l6;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d1 = log_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  goto B1;
  B6:;
  i0 = l2;
  i1 = 1072936132u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  d0 = p0;
  d1 = -1.4616321449683622;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l3 = d0;
  d0 = 0;
  l6 = d0;
  B5:;
  d0 = l6;
  d1 = l3;
  d2 = l3;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  p0 = d1;
  d2 = l3;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  p0 = d2;
  d3 = p0;
  d4 = p0;
  d5 = p0;
  d6 = 0.00031563207090362595;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -0.0014034646998923284;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.0061005387024629133;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = -0.032788541075985965;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 0.48383612272381005;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -3.6386769970395054e-18;
  d3 = p0;
  d4 = p0;
  d5 = p0;
  d6 = p0;
  d7 = p0;
  d8 = -0.00031275416837512086;
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.00088108188243765401;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = -0.0036845201678113826;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.017970675081182039;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -0.14758772299459391;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d5 = l3;
  d6 = p0;
  d7 = p0;
  d8 = p0;
  d9 = p0;
  d10 = 0.00033552919263551907;
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = -0.00053859530535674055;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 0.0022596478090061247;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = -0.010314224129834144;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.064624940239133385;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = -0.12148629053584961;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  goto B1;
  B4:;
  d0 = p0;
  d1 = l6;
  d2 = -1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  goto B1;
  B3:;
  d0 = p0;
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d0 = 0;
  l6 = d0;
  B2:;
  d0 = l6;
  d1 = p0;
  d2 = p0;
  d3 = p0;
  d4 = p0;
  d5 = p0;
  d6 = p0;
  d7 = 0.013381091853678766;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.22896372806469245;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.97771752796337275;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 1.4549225013723477;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.63282706402509337;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.077215664901532866;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = p0;
  d4 = p0;
  d5 = p0;
  d6 = p0;
  d7 = 0.0032170924228242391;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.10422264559336913;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.76928515045667278;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 2.128489763798934;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 2.4559779371304113;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d2 = p0;
  d3 = -0.5;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  B1:;
  d0 = l4;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = p0;
  j2 = l0;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  d0 = i2 ? d0 : d1;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 lgamma_0(f64 p0) {
  FUNC_PROLOGUE;
  u32 i1;
  f64 d0;
  d0 = p0;
  i1 = 5800u;
  d0 = __lgamma_r(d0, i1);
  FUNC_EPILOGUE;
  return d0;
}

static u32 mp_math_isclose(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  f64 l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = 4u;
  i4 = 42912u;
  i5 = l0;
  mp_arg_parse_all(i0, i1, i2, i3, i4, i5);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  d0 = mp_obj_get_float(i0);
  l1 = d0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  d0 = mp_obj_get_float(i0);
  l2 = d0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l3 = d0;
  goto B0;
  B1:;
  d0 = 1.0000000000000001e-09;
  l3 = d0;
  B0:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  d0 = mp_obj_get_float(i0);
  l4 = d0;
  d0 = l3;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B3;}
  d0 = l4;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  i0 = !(i0);
  if (i0) {goto B3;}
  d0 = l1;
  d1 = l2;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B4;}
  d0 = l1;
  d1 = l2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d0 = fabs_0(d0);
  l5 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 == j1;
  if (i0) {goto B2;}
  d0 = l5;
  d1 = l4;
  i0 = (*Z_eosio_injectionZ__eosio_f64_leZ_idd)(d0, d1);
  if (i0) {goto B4;}
  d0 = l5;
  d1 = l1;
  d2 = l3;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d1 = fabs_0(d1);
  i0 = (*Z_eosio_injectionZ__eosio_f64_leZ_idd)(d0, d1);
  if (i0) {goto B4;}
  d0 = l5;
  d1 = l2;
  d2 = l3;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d1 = fabs_0(d1);
  i0 = (*Z_eosio_injectionZ__eosio_f64_leZ_idd)(d0, d1);
  i0 = !(i0);
  if (i0) {goto B2;}
  B4:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  goto Bfunc;
  B3:;
  math_error();
  UNREACHABLE;
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void math_error(void) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 10790u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static u32 mp_math_sqrt(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = sqrt_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_pow(u32 p0, u32 p1) {
  u64 l3 = 0;
  f64 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  f64 d0, d1;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  i1 = p1;
  d1 = mp_obj_get_float(i1);
  l1 = d1;
  d0 = pow_0(d0, d1);
  l2 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l3 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  d0 = l1;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l3;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l2;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_exp(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = exp_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_expm1(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = expm1_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_log(u32 p0, u32 p1) {
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  f64 d0, d1;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_leZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  d0 = l0;
  d0 = log_0(d0);
  l0 = d0;
  i0 = p0;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  d0 = mp_obj_get_float(i0);
  l1 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_leZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  d0 = l1;
  d1 = 1;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B0;}
  d0 = l0;
  d1 = l1;
  d1 = log_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l0 = d0;
  B2:;
  d0 = l0;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B1:;
  math_error();
  UNREACHABLE;
  B0:;
  i0 = 36476u;
  i1 = 15248u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_log2(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = log2_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_log10(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = log10_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_cosh(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = cosh_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_sinh(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = sinh_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_tanh(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = tanh_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_acosh(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = acosh_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_asinh(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = asinh_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_atanh(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = atanh_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_cos(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = cos_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_sin(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = sin_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_tan(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = tan_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_acos(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = acos_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_asin(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = asin_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_atan(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = atan_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_atan2(u32 p0, u32 p1) {
  u64 l3 = 0;
  f64 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  f64 d0, d1;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  i1 = p1;
  d1 = mp_obj_get_float(i1);
  l1 = d1;
  d0 = atan2_0(d0, d1);
  l2 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l3 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  d0 = l1;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l3;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l2;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_ceil(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  d0 = ceil_0(d0);
  i0 = mp_obj_new_int_from_float(d0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_copysign(u32 p0, u32 p1) {
  u64 l3 = 0;
  f64 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  f64 d0, d1;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  i1 = p1;
  d1 = mp_obj_get_float(i1);
  l1 = d1;
  d0 = copysign_0(d0, d1);
  l2 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l3 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  d0 = l1;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l3;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l2;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_fabs(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = fabs_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_floor(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  d0 = floor_0(d0);
  i0 = mp_obj_new_int_from_float(d0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_fmod(u32 p0, u32 p1) {
  u64 l3 = 0;
  f64 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  f64 d0, d1;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  i1 = p1;
  d1 = mp_obj_get_float(i1);
  l1 = d1;
  d0 = fmod_0(d0, d1);
  l2 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l3 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  d0 = l1;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l3;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l2;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_frexp(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  f64 d1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p0;
  d1 = mp_obj_get_float(i1);
  i2 = l0;
  i3 = 12u;
  i2 += i3;
  d1 = frexp_0(d1, i2);
  i1 = mp_obj_new_float(d1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_ldexp(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  i1 = p1;
  i1 = mp_obj_get_int(i1);
  d0 = ldexp_0(d0, i1);
  i0 = mp_obj_new_float(d0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_modf(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  f64 d1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = p0;
  d1 = mp_obj_get_float(i1);
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  d1 = modf_0(d1, i2);
  i1 = mp_obj_new_float(d1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  i1 = mp_obj_new_float(d1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = 2u;
  i1 = l0;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_isfinite(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j2, j3;
  f64 d2;
  i0 = 14u;
  i1 = 30u;
  i2 = p0;
  d2 = mp_obj_get_float(i2);
  j2 = i64_reinterpret_f64(d2);
  j3 = 9218868437227405312ull;
  j2 &= j3;
  j3 = 9218868437227405312ull;
  i2 = j2 == j3;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_isinf(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j2, j3;
  f64 d2;
  i0 = 30u;
  i1 = 14u;
  i2 = p0;
  d2 = mp_obj_get_float(i2);
  j2 = i64_reinterpret_f64(d2);
  j3 = 9223372036854775807ull;
  j2 &= j3;
  j3 = 9218868437227405312ull;
  i2 = j2 == j3;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_isnan(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j2, j3;
  f64 d2;
  i0 = 14u;
  i1 = 30u;
  i2 = p0;
  d2 = mp_obj_get_float(i2);
  j2 = i64_reinterpret_f64(d2);
  j3 = 9223372036854775807ull;
  j2 &= j3;
  j3 = 9218868437227405313ull;
  i2 = j2 < j3;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_trunc(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  d0 = trunc_0(d0);
  i0 = mp_obj_new_int_from_float(d0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_radians(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  f64 d0, d1;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  d1 = 0.017453292519943295;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i0 = mp_obj_new_float(d0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_degrees(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  f64 d0, d1;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  d1 = 57.295779513082323;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i0 = mp_obj_new_float(d0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_erf(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = erf_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_erfc(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = erfc_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_gamma(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = tgamma_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_lgamma(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = lgamma_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_cmath_phase(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0, d1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  mp_obj_get_complex(i0, i1, i2);
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  d0 = atan2_0(d0, d1);
  i0 = mp_obj_new_float(d0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_cmath_polar(u32 p0) {
  u32 l0 = 0;
  f64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  f64 d1, d2, d3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_obj_get_complex(i0, i1, i2);
  i0 = l0;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 24));
  l1 = d1;
  d2 = l1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2 + 16));
  l1 = d2;
  d3 = l1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d1 = sqrt_0(d1);
  i1 = mp_obj_new_float(d1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 16));
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2 + 24));
  d1 = atan2_0(d1, d2);
  i1 = mp_obj_new_float(d1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_cmath_rect(u32 p0, u32 p1) {
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  f64 d0, d1, d2;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  i1 = p1;
  d1 = mp_obj_get_float(i1);
  l1 = d1;
  d1 = cos_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l0;
  d2 = l1;
  d2 = sin_0(d2);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i0 = mp_obj_new_complex(d0, d1);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_cmath_exp(u32 p0) {
  u32 l0 = 0;
  f64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  mp_obj_get_complex(i0, i1, i2);
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  d0 = exp_0(d0);
  l1 = d0;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  d1 = cos_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l1;
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2));
  d2 = sin_0(d2);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i0 = mp_obj_new_complex(d0, d1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_cmath_log(u32 p0) {
  u32 l0 = 0;
  f64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  mp_obj_get_complex(i0, i1, i2);
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l1 = d0;
  d1 = l1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  l1 = d1;
  d2 = l1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = log_0(d0);
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2 + 8));
  d1 = atan2_0(d1, d2);
  i0 = mp_obj_new_complex(d0, d1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_cmath_log10(u32 p0) {
  u32 l0 = 0;
  f64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  mp_obj_get_complex(i0, i1, i2);
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l1 = d0;
  d1 = l1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  l1 = d1;
  d2 = l1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = log10_0(d0);
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2 + 8));
  d1 = atan2_0(d1, d2);
  d2 = 0.43429448190325182;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i0 = mp_obj_new_complex(d0, d1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_cmath_sqrt(u32 p0) {
  u32 l0 = 0;
  f64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  mp_obj_get_complex(i0, i1, i2);
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l1 = d0;
  d1 = l1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  l1 = d1;
  d2 = l1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 0.25;
  d0 = pow_0(d0, d1);
  l1 = d0;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2 + 8));
  d1 = atan2_0(d1, d2);
  d2 = 0.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l2 = d1;
  d1 = cos_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l1;
  d2 = l2;
  d2 = sin_0(d2);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i0 = mp_obj_new_complex(d0, d1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_cmath_cos(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  mp_obj_get_complex(i0, i1, i2);
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  d0 = cos_0(d0);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  d1 = cosh_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  d1 = sin_0(d1);
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2));
  d2 = sinh_0(d2);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  i0 = mp_obj_new_complex(d0, d1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_cmath_sin(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  mp_obj_get_complex(i0, i1, i2);
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  d0 = sin_0(d0);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  d1 = cosh_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  d1 = cos_0(d1);
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2));
  d2 = sinh_0(d2);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i0 = mp_obj_new_complex(d0, d1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_sys_exit(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  if (i0) {goto B0;}
  i0 = 36116u;
  i0 = mp_obj_new_exception(i0);
  nlr_jump(i0);
  UNREACHABLE;
  B0:;
  i0 = 36116u;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_sys_print_exception(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 33856u;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_print_exception(i0, i1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_ujson_dump(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 2u;
  i0 = mp_get_stream_raise(i0, i1);
  i0 = l0;
  i1 = 250u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i2 = 3u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_ujson_dumps(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 8u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  vstr_init_print(i0, i1, i2);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i2 = 3u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = 33304u;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_ujson_load(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = mp_get_stream_raise(i0, i1);
  l1 = i0;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 44), i1);
  i0 = l0;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 8u;
  vstr_init(i0, i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  i1 = l0;
  i2 = 44u;
  i1 += i2;
  l2 = i1;
  i2 = 1u;
  i3 = l0;
  i4 = 32u;
  i3 += i4;
  i4 = 8u;
  i3 += i4;
  l3 = i3;
  i4 = l0;
  i4 = i32_load((&M0), (u64)(i4 + 36));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  l1 = i0;
  if (i0) {goto B4;}
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  l5 = i0;
  i0 = 0u;
  l6 = i0;
  i0 = 0u;
  l7 = i0;
  i0 = 0u;
  l8 = i0;
  L5: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l9 = i0;
    if (i0) {goto B31;}
    i0 = p0;
    if (i0) {goto B32;}
    i0 = l4;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    B32:;
    i0 = l1;
    i1 = 255u;
    i0 &= i1;
    i1 = 4294967287u;
    i0 += i1;
    p0 = i0;
    i1 = 116u;
    i0 = i0 > i1;
    if (i0) {goto B0;}
    i0 = p0;
    switch (i0) {
      case 0: goto B6;
      case 1: goto B6;
      case 2: goto B0;
      case 3: goto B0;
      case 4: goto B6;
      case 5: goto B0;
      case 6: goto B0;
      case 7: goto B0;
      case 8: goto B0;
      case 9: goto B0;
      case 10: goto B0;
      case 11: goto B0;
      case 12: goto B0;
      case 13: goto B0;
      case 14: goto B0;
      case 15: goto B0;
      case 16: goto B0;
      case 17: goto B0;
      case 18: goto B0;
      case 19: goto B0;
      case 20: goto B0;
      case 21: goto B0;
      case 22: goto B0;
      case 23: goto B6;
      case 24: goto B0;
      case 25: goto B44;
      case 26: goto B0;
      case 27: goto B0;
      case 28: goto B0;
      case 29: goto B0;
      case 30: goto B0;
      case 31: goto B0;
      case 32: goto B0;
      case 33: goto B0;
      case 34: goto B0;
      case 35: goto B6;
      case 36: goto B36;
      case 37: goto B0;
      case 38: goto B0;
      case 39: goto B36;
      case 40: goto B36;
      case 41: goto B36;
      case 42: goto B36;
      case 43: goto B36;
      case 44: goto B36;
      case 45: goto B36;
      case 46: goto B36;
      case 47: goto B36;
      case 48: goto B36;
      case 49: goto B6;
      case 50: goto B0;
      case 51: goto B0;
      case 52: goto B0;
      case 53: goto B0;
      case 54: goto B0;
      case 55: goto B0;
      case 56: goto B0;
      case 57: goto B0;
      case 58: goto B0;
      case 59: goto B0;
      case 60: goto B0;
      case 61: goto B0;
      case 62: goto B0;
      case 63: goto B0;
      case 64: goto B0;
      case 65: goto B0;
      case 66: goto B0;
      case 67: goto B0;
      case 68: goto B0;
      case 69: goto B0;
      case 70: goto B0;
      case 71: goto B0;
      case 72: goto B0;
      case 73: goto B0;
      case 74: goto B0;
      case 75: goto B0;
      case 76: goto B0;
      case 77: goto B0;
      case 78: goto B0;
      case 79: goto B0;
      case 80: goto B0;
      case 81: goto B0;
      case 82: goto B42;
      case 83: goto B0;
      case 84: goto B46;
      case 85: goto B0;
      case 86: goto B0;
      case 87: goto B0;
      case 88: goto B0;
      case 89: goto B0;
      case 90: goto B0;
      case 91: goto B0;
      case 92: goto B0;
      case 93: goto B43;
      case 94: goto B0;
      case 95: goto B0;
      case 96: goto B0;
      case 97: goto B0;
      case 98: goto B0;
      case 99: goto B0;
      case 100: goto B0;
      case 101: goto B41;
      case 102: goto B0;
      case 103: goto B0;
      case 104: goto B0;
      case 105: goto B0;
      case 106: goto B0;
      case 107: goto B40;
      case 108: goto B0;
      case 109: goto B0;
      case 110: goto B0;
      case 111: goto B0;
      case 112: goto B0;
      case 113: goto B0;
      case 114: goto B45;
      case 115: goto B0;
      case 116: goto B46;
      default: goto B6;
    }
    B46:;
    i0 = l8;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l0;
    i1 = 8u;
    i0 += i1;
    p0 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i0 = !(i0);
    if (i0) {goto B1;}
    i0 = p0;
    i1 = l1;
    i2 = 4294967295u;
    i1 += i2;
    l1 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 12u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l1;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l8 = i0;
    i0 = mp_obj_get_type(i0);
    l7 = i0;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto L5;}
    goto B1;
    B45:;
    i0 = 0u;
    i0 = mp_obj_new_dict(i0);
    p0 = i0;
    i0 = 1u;
    l1 = i0;
    i0 = l8;
    if (i0) {goto B34;}
    goto B7;
    B44:;
    i0 = l0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0 + 20), i1);
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p0 = i0;
    i0 = !(i0);
    l1 = i0;
    i1 = p0;
    i2 = 34u;
    i1 = i1 != i2;
    i0 = i0 != i1;
    if (i0) {goto B38;}
    goto B37;
    B43:;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 97u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto B26;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B25;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 108u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto B24;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B23;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 115u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto B22;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B21;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 101u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    l9 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    if (i0) {goto B20;}
    i0 = 0u;
    l1 = i0;
    i0 = 14u;
    p0 = i0;
    i0 = l9;
    if (i0) {goto B35;}
    goto B39;
    B42:;
    i0 = 0u;
    i1 = 0u;
    i0 = mp_obj_new_list(i0, i1);
    p0 = i0;
    i0 = 1u;
    l1 = i0;
    i0 = l8;
    if (i0) {goto B34;}
    goto B7;
    B41:;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 117u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto B19;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B18;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 108u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto B17;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B16;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 108u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    l9 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    if (i0) {goto B15;}
    i0 = 0u;
    l1 = i0;
    i0 = 6u;
    p0 = i0;
    i0 = l9;
    if (i0) {goto B35;}
    goto B39;
    B40:;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 114u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto B14;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B13;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 117u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto B12;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B11;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 101u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    l9 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    if (i0) {goto B10;}
    i0 = 0u;
    l1 = i0;
    i0 = 30u;
    p0 = i0;
    i0 = l9;
    if (i0) {goto B35;}
    B39:;
    i0 = 0u;
    l1 = i0;
    i0 = l4;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l8;
    if (i0) {goto B34;}
    goto B7;
    B38:;
    L47: vm_checktime();
      i0 = p0;
      i1 = 255u;
      i0 &= i1;
      i1 = 92u;
      i0 = i0 != i1;
      if (i0) {goto B49;}
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 32));
      i1 = l2;
      i2 = 1u;
      i3 = l3;
      i4 = l0;
      i4 = i32_load((&M0), (u64)(i4 + 36));
      i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
      p0 = i0;
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0));
      l1 = i0;
      if (i0) {goto B28;}
      i0 = p0;
      i0 = !(i0);
      if (i0) {goto B50;}
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      p0 = i0;
      i1 = 4294967198u;
      i0 += i1;
      l1 = i0;
      i1 = 19u;
      i0 = i0 > i1;
      if (i0) {goto B49;}
      i0 = l1;
      switch (i0) {
        case 0: goto B51;
        case 1: goto B49;
        case 2: goto B49;
        case 3: goto B49;
        case 4: goto B56;
        case 5: goto B49;
        case 6: goto B49;
        case 7: goto B49;
        case 8: goto B49;
        case 9: goto B49;
        case 10: goto B49;
        case 11: goto B49;
        case 12: goto B58;
        case 13: goto B49;
        case 14: goto B49;
        case 15: goto B49;
        case 16: goto B55;
        case 17: goto B49;
        case 18: goto B54;
        case 19: goto B57;
        default: goto B51;
      }
      B58:;
      i0 = 10u;
      p0 = i0;
      goto B49;
      B57:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 32));
      i1 = l2;
      i2 = 1u;
      i3 = l3;
      i4 = l0;
      i4 = i32_load((&M0), (u64)(i4 + 36));
      i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
      l1 = i0;
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0));
      p0 = i0;
      if (i0) {goto B27;}
      i0 = l1;
      i0 = !(i0);
      if (i0) {goto B53;}
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l1 = i0;
      goto B52;
      B56:;
      i0 = 12u;
      p0 = i0;
      goto B49;
      B55:;
      i0 = 13u;
      p0 = i0;
      goto B49;
      B54:;
      i0 = 9u;
      p0 = i0;
      goto B49;
      B53:;
      i0 = 0u;
      l1 = i0;
      i0 = l4;
      i1 = 0u;
      i32_store8((&M0), (u64)(i0), i1);
      B52:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 32));
      i1 = l2;
      i2 = 1u;
      i3 = l3;
      i4 = l0;
      i4 = i32_load((&M0), (u64)(i4 + 36));
      i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
      l9 = i0;
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0));
      p0 = i0;
      if (i0) {goto B27;}
      i0 = l9;
      i0 = !(i0);
      if (i0) {goto B60;}
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l9 = i0;
      goto B59;
      B60:;
      i0 = 0u;
      l9 = i0;
      i0 = l4;
      i1 = 0u;
      i32_store8((&M0), (u64)(i0), i1);
      B59:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 32));
      i1 = l2;
      i2 = 1u;
      i3 = l3;
      i4 = l0;
      i4 = i32_load((&M0), (u64)(i4 + 36));
      i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
      l10 = i0;
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0));
      p0 = i0;
      if (i0) {goto B27;}
      i0 = l10;
      i0 = !(i0);
      if (i0) {goto B62;}
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l10 = i0;
      goto B61;
      B62:;
      i0 = 0u;
      l10 = i0;
      i0 = l4;
      i1 = 0u;
      i32_store8((&M0), (u64)(i0), i1);
      B61:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 32));
      i1 = l2;
      i2 = 1u;
      i3 = l3;
      i4 = l0;
      i4 = i32_load((&M0), (u64)(i4 + 36));
      i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
      l11 = i0;
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0));
      p0 = i0;
      if (i0) {goto B27;}
      i0 = l1;
      i1 = 32u;
      i0 |= i1;
      p0 = i0;
      i1 = 4294967209u;
      i0 += i1;
      i1 = p0;
      i2 = 4294967248u;
      i1 += i2;
      p0 = i1;
      i2 = p0;
      i3 = 255u;
      i2 &= i3;
      i3 = 9u;
      i2 = i2 > i3;
      i0 = i2 ? i0 : i1;
      i1 = 255u;
      i0 &= i1;
      i1 = 4u;
      i0 <<= (i1 & 31);
      i1 = l9;
      i2 = 32u;
      i1 |= i2;
      p0 = i1;
      i2 = 4294967209u;
      i1 += i2;
      i2 = p0;
      i3 = 4294967248u;
      i2 += i3;
      p0 = i2;
      i3 = p0;
      i4 = 255u;
      i3 &= i4;
      i4 = 9u;
      i3 = i3 > i4;
      i1 = i3 ? i1 : i2;
      i2 = 255u;
      i1 &= i2;
      i0 |= i1;
      i1 = 4u;
      i0 <<= (i1 & 31);
      i1 = l10;
      i2 = 32u;
      i1 |= i2;
      p0 = i1;
      i2 = 4294967209u;
      i1 += i2;
      i2 = p0;
      i3 = 4294967248u;
      i2 += i3;
      p0 = i2;
      i3 = p0;
      i4 = 255u;
      i3 &= i4;
      i4 = 9u;
      i3 = i3 > i4;
      i1 = i3 ? i1 : i2;
      i2 = 255u;
      i1 &= i2;
      i0 |= i1;
      p0 = i0;
      i0 = l11;
      i0 = !(i0);
      if (i0) {goto B64;}
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l1 = i0;
      goto B63;
      B64:;
      i0 = 0u;
      l1 = i0;
      i0 = l4;
      i1 = 0u;
      i32_store8((&M0), (u64)(i0), i1);
      B63:;
      i0 = l0;
      i1 = 16u;
      i0 += i1;
      i1 = p0;
      i2 = 4u;
      i1 <<= (i2 & 31);
      i2 = l1;
      i3 = 32u;
      i2 |= i3;
      p0 = i2;
      i3 = 4294967209u;
      i2 += i3;
      i3 = p0;
      i4 = 4294967248u;
      i3 += i4;
      p0 = i3;
      i4 = p0;
      i5 = 255u;
      i4 &= i5;
      i5 = 9u;
      i4 = i4 > i5;
      i2 = i4 ? i2 : i3;
      i3 = 255u;
      i2 &= i3;
      i1 |= i2;
      vstr_add_char(i0, i1);
      goto B48;
      B51:;
      i0 = 8u;
      p0 = i0;
      goto B49;
      B50:;
      i0 = 0u;
      p0 = i0;
      i0 = l4;
      i1 = 0u;
      i32_store8((&M0), (u64)(i0), i1);
      B49:;
      i0 = l0;
      i1 = 16u;
      i0 += i1;
      i1 = p0;
      i2 = 255u;
      i1 &= i2;
      vstr_add_byte(i0, i1);
      B48:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 32));
      i1 = l2;
      i2 = 1u;
      i3 = l3;
      i4 = l0;
      i4 = i32_load((&M0), (u64)(i4 + 36));
      i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
      p0 = i0;
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0));
      l1 = i0;
      if (i0) {goto B30;}
      i0 = p0;
      i0 = !(i0);
      if (i0) {goto B29;}
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      p0 = i0;
      i0 = !(i0);
      l1 = i0;
      i1 = p0;
      i2 = 34u;
      i1 = i1 != i2;
      i0 ^= i1;
      if (i0) {goto L47;}
    B37:;
    i0 = l1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto B9;}
    i0 = p0;
    if (i0) {goto B65;}
    i0 = l4;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    B65:;
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    i1 = 8u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 20));
    i0 = mp_obj_new_str(i0, i1);
    p0 = i0;
    i0 = 0u;
    l1 = i0;
    i0 = l8;
    if (i0) {goto B34;}
    goto B7;
    B36:;
    i0 = 0u;
    l9 = i0;
    i0 = l0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0 + 20), i1);
    L67: vm_checktime();
      i0 = l0;
      i1 = 16u;
      i0 += i1;
      i1 = l1;
      i2 = 255u;
      i1 &= i2;
      vstr_add_byte(i0, i1);
      i0 = 1u;
      p0 = i0;
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l1 = i0;
      i1 = 4294967253u;
      i0 += i1;
      l10 = i0;
      i1 = 26u;
      i0 = i0 > i1;
      if (i0) {goto B71;}
      i0 = l10;
      switch (i0) {
        case 0: goto B69;
        case 1: goto B70;
        case 2: goto B69;
        case 3: goto B68;
        case 4: goto B70;
        case 5: goto B70;
        case 6: goto B70;
        case 7: goto B70;
        case 8: goto B70;
        case 9: goto B70;
        case 10: goto B70;
        case 11: goto B70;
        case 12: goto B70;
        case 13: goto B70;
        case 14: goto B70;
        case 15: goto B70;
        case 16: goto B70;
        case 17: goto B70;
        case 18: goto B70;
        case 19: goto B70;
        case 20: goto B70;
        case 21: goto B70;
        case 22: goto B70;
        case 23: goto B70;
        case 24: goto B70;
        case 25: goto B70;
        case 26: goto B68;
        default: goto B69;
      }
      B71:;
      i0 = l1;
      i1 = 101u;
      i0 = i0 == i1;
      if (i0) {goto B68;}
      B70:;
      i0 = l1;
      i0 = unichar_isdigit(i0);
      i0 = !(i0);
      if (i0) {goto B66;}
      B69:;
      i0 = l9;
      p0 = i0;
      B68:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 32));
      i1 = l2;
      i2 = 1u;
      i3 = l3;
      i4 = l0;
      i4 = i32_load((&M0), (u64)(i4 + 36));
      i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
      l10 = i0;
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0));
      l9 = i0;
      if (i0) {goto B33;}
      i0 = p0;
      l9 = i0;
      i0 = l10;
      if (i0) {goto L67;}
      i0 = l4;
      i1 = 0u;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = p0;
      l9 = i0;
      goto L67;
    B66:;
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    i1 = 8u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 20));
    l10 = i0;
    i0 = l9;
    i1 = 1u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B72;}
    i0 = 0u;
    l1 = i0;
    i0 = p0;
    i1 = l10;
    i2 = 0u;
    i3 = 0u;
    i4 = 0u;
    i0 = mp_parse_num_decimal(i0, i1, i2, i3, i4);
    p0 = i0;
    i0 = l8;
    if (i0) {goto B34;}
    goto B7;
    B72:;
    i0 = 0u;
    l1 = i0;
    i0 = p0;
    i1 = l10;
    i2 = 10u;
    i3 = 0u;
    i0 = mp_parse_num_integer(i0, i1, i2, i3);
    p0 = i0;
    B35:;
    i0 = l8;
    i0 = !(i0);
    if (i0) {goto B7;}
    B34:;
    i0 = l7;
    i1 = 24420u;
    i0 = i0 == i1;
    if (i0) {goto B74;}
    i0 = l6;
    if (i0) {goto B73;}
    i0 = p0;
    l6 = i0;
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B6;}
    goto B0;
    B74:;
    i0 = l8;
    i1 = p0;
    i0 = mp_obj_list_append(i0, i1);
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B6;}
    goto B8;
    B73:;
    i0 = l8;
    i1 = l6;
    i2 = p0;
    i0 = mp_obj_dict_store(i0, i1, i2);
    i0 = 0u;
    l6 = i0;
    i0 = l1;
    if (i0) {goto B8;}
    goto B6;
    B33:;
    i0 = l9;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B31:;
    i0 = l9;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B30:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B29:;
    i0 = l0;
    i1 = 44u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    goto B0;
    B28:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B27:;
    i0 = p0;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B26:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B25:;
    i0 = l0;
    i1 = 44u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 10814u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B24:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B23:;
    i0 = l0;
    i1 = 44u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 10814u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B22:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B21:;
    i0 = l0;
    i1 = 44u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 10814u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B20:;
    i0 = p0;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B19:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B18:;
    i0 = l0;
    i1 = 44u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 10814u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B17:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B16:;
    i0 = l0;
    i1 = 44u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 10814u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B15:;
    i0 = p0;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B14:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B13:;
    i0 = l0;
    i1 = 44u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 10814u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B12:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B11:;
    i0 = l0;
    i1 = 44u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 10814u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B10:;
    i0 = p0;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B9:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B8:;
    i0 = l0;
    i1 = 12u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    if (i0) {goto B76;}
    i0 = l0;
    i1 = 1u;
    mp_obj_list_init(i0, i1);
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l8;
    i32_store((&M0), (u64)(i0), i1);
    goto B75;
    B76:;
    i0 = l0;
    i1 = l8;
    i0 = mp_obj_list_append(i0, i1);
    B75:;
    i0 = p0;
    i0 = mp_obj_get_type(i0);
    l7 = i0;
    i0 = p0;
    l8 = i0;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto L5;}
    goto B1;
    B7:;
    i0 = p0;
    i0 = mp_obj_get_type(i0);
    l7 = i0;
    i0 = p0;
    l8 = i0;
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B1;}
    B6:;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto L5;}
    goto B1;
  B4:;
  i0 = l1;
  mp_raise_OSError(i0);
  UNREACHABLE;
  B3:;
  i0 = 0u;
  l8 = i0;
  goto B1;
  B2:;
  i0 = 0u;
  l8 = i0;
  i0 = l0;
  i1 = 44u;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  B1:;
  i0 = l0;
  i1 = 44u;
  i0 += i1;
  l1 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i0 = unichar_isspace(i0);
  i0 = !(i0);
  if (i0) {goto B78;}
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  l9 = i0;
  L79: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l9;
    i0 = i32_load((&M0), (u64)(i0));
    l10 = i0;
    if (i0) {goto B77;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B80;}
    i0 = l1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 255u;
    i0 &= i1;
    i0 = unichar_isspace(i0);
    if (i0) {goto L79;}
    goto B78;
    B80:;
    i0 = l1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 0u;
    i1 = 255u;
    i0 &= i1;
    i0 = unichar_isspace(i0);
    if (i0) {goto L79;}
  B78:;
  i0 = l8;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 255u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  vstr_clear(i0);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l8;
  goto Bfunc;
  B77:;
  i0 = l10;
  mp_raise_OSError(i0);
  UNREACHABLE;
  B0:;
  i0 = 10814u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_ujson_loads(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 32u;
  i1 += i2;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i1 = 255u;
  i32_store8((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 36));
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 32));
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = 27604u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i0 = mod_ujson_load(i0);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static void sha256_transform(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0, l15 = 0, 
      l16 = 0, l17 = 0, l18 = 0, l19 = 0, l20 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 256u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  L0: vm_checktime();
    i0 = l0;
    i1 = l1;
    i0 += i1;
    i1 = p1;
    i2 = l1;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i2 = 24u;
    i1 <<= (i2 & 31);
    i2 = l2;
    i3 = 8u;
    i2 <<= (i3 & 31);
    i3 = 16711680u;
    i2 &= i3;
    i1 |= i2;
    i2 = l2;
    i3 = 8u;
    i2 >>= (i3 & 31);
    i3 = 65280u;
    i2 &= i3;
    i3 = l2;
    i4 = 24u;
    i3 >>= (i4 & 31);
    i2 |= i3;
    i1 |= i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i1 = 64u;
    i0 = i0 != i1;
    if (i0) {goto L0;}
  i0 = 0u;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  L1: vm_checktime();
    i0 = l0;
    i1 = l2;
    i0 += i1;
    l1 = i0;
    i1 = 64u;
    i0 += i1;
    i1 = p1;
    i2 = l1;
    i3 = 36u;
    i2 += i3;
    i2 = i32_load((&M0), (u64)(i2));
    i1 += i2;
    i2 = l1;
    i3 = 56u;
    i2 += i3;
    i2 = i32_load((&M0), (u64)(i2));
    p1 = i2;
    i3 = 13u;
    i2 = I32_ROTL(i2, i3);
    i3 = p1;
    i4 = 10u;
    i3 >>= (i4 & 31);
    i2 ^= i3;
    i3 = p1;
    i4 = 15u;
    i3 = I32_ROTL(i3, i4);
    i2 ^= i3;
    i1 += i2;
    i2 = l1;
    i3 = 4u;
    i2 += i3;
    i2 = i32_load((&M0), (u64)(i2));
    l1 = i2;
    i3 = 14u;
    i2 = I32_ROTL(i2, i3);
    i3 = l1;
    i4 = 3u;
    i3 >>= (i4 & 31);
    i2 ^= i3;
    i3 = l1;
    i4 = 25u;
    i3 = I32_ROTL(i3, i4);
    i2 ^= i3;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    p1 = i0;
    i0 = l2;
    i1 = 4u;
    i0 += i1;
    l2 = i0;
    i1 = 192u;
    i0 = i0 != i1;
    if (i0) {goto L1;}
  i0 = 0u;
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 80));
  l4 = i0;
  l5 = i0;
  i0 = p0;
  i1 = 84u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l6 = i0;
  l2 = i0;
  i0 = p0;
  i1 = 108u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l7 = i0;
  l8 = i0;
  i0 = p0;
  i1 = 104u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l9 = i0;
  l10 = i0;
  i0 = p0;
  i1 = 100u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l11 = i0;
  l12 = i0;
  i0 = p0;
  i1 = 96u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l13 = i0;
  l14 = i0;
  i0 = p0;
  i1 = 92u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l15 = i0;
  l16 = i0;
  i0 = p0;
  i1 = 88u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l17 = i0;
  p1 = i0;
  L2: vm_checktime();
    i0 = p1;
    l18 = i0;
    i0 = l2;
    p1 = i0;
    i0 = l5;
    l2 = i0;
    i1 = 30u;
    i0 = I32_ROTL(i0, i1);
    i1 = l2;
    i2 = 19u;
    i1 = I32_ROTL(i1, i2);
    i0 ^= i1;
    i1 = l2;
    i2 = 10u;
    i1 = I32_ROTL(i1, i2);
    i0 ^= i1;
    i1 = l2;
    i2 = p1;
    i3 = l18;
    i2 ^= i3;
    i1 &= i2;
    i2 = p1;
    i3 = l18;
    i2 &= i3;
    i1 ^= i2;
    i0 += i1;
    i1 = l14;
    l1 = i1;
    i2 = 26u;
    i1 = I32_ROTL(i1, i2);
    i2 = l1;
    i3 = 21u;
    i2 = I32_ROTL(i2, i3);
    i1 ^= i2;
    i2 = l1;
    i3 = 7u;
    i2 = I32_ROTL(i2, i3);
    i1 ^= i2;
    i2 = l8;
    i1 += i2;
    i2 = l10;
    l19 = i2;
    i3 = l1;
    i4 = 4294967295u;
    i3 ^= i4;
    i2 &= i3;
    i3 = l12;
    l20 = i3;
    i4 = l1;
    i3 &= i4;
    i2 |= i3;
    i1 += i2;
    i2 = l3;
    i3 = 42960u;
    i2 += i3;
    i2 = i32_load((&M0), (u64)(i2));
    i1 += i2;
    i2 = l0;
    i3 = l3;
    i2 += i3;
    i2 = i32_load((&M0), (u64)(i2));
    i1 += i2;
    l14 = i1;
    i0 += i1;
    l5 = i0;
    i0 = l14;
    i1 = l16;
    i0 += i1;
    l14 = i0;
    i0 = l19;
    l8 = i0;
    i0 = l20;
    l10 = i0;
    i0 = l1;
    l12 = i0;
    i0 = l18;
    l16 = i0;
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l3 = i0;
    i1 = 256u;
    i0 = i0 != i1;
    if (i0) {goto L2;}
  i0 = p0;
  i1 = 84u;
  i0 += i1;
  i1 = l2;
  i2 = l6;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 80u;
  i0 += i1;
  i1 = l5;
  i2 = l4;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 88u;
  i0 += i1;
  i1 = p1;
  i2 = l17;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 92u;
  i0 += i1;
  i1 = l18;
  i2 = l15;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 96u;
  i0 += i1;
  i1 = l14;
  i2 = l13;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 100u;
  i0 += i1;
  i1 = l1;
  i2 = l11;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 104u;
  i0 += i1;
  i1 = l20;
  i2 = l9;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 108u;
  i0 += i1;
  i1 = l19;
  i2 = l7;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 256u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void sha256_final(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  u64 l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1, j2;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 64));
  l0 = i1;
  i0 += i1;
  i1 = 128u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i0 = l0;
  i1 = 56u;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 55u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  L2: vm_checktime();
    i0 = p0;
    i1 = l0;
    i0 += i1;
    i1 = 1u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i1 = 55u;
    i0 = i0 != i1;
    if (i0) {goto L2;}
    goto B0;
  B1:;
  i0 = l1;
  i1 = 63u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  L4: vm_checktime();
    i0 = p0;
    i1 = l0;
    i0 += i1;
    i1 = 1u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i1 = 63u;
    i0 = i0 != i1;
    if (i0) {goto L4;}
  B3:;
  i0 = p0;
  i1 = p0;
  sha256_transform(i0, i1);
  i0 = p0;
  i1 = 0u;
  i2 = 56u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  B0:;
  i0 = p0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 72));
  i2 = p0;
  i3 = 64u;
  i2 += i3;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 3u;
  i2 <<= (i3 & 31);
  j2 = (u64)(i2);
  j1 += j2;
  l2 = j1;
  i64_store((&M0), (u64)(i0 + 72), j1);
  i0 = p0;
  j1 = l2;
  i64_store8((&M0), (u64)(i0 + 63), j1);
  i0 = p0;
  j1 = l2;
  j2 = 8ull;
  j1 >>= (j2 & 63);
  i64_store8((&M0), (u64)(i0 + 62), j1);
  i0 = p0;
  j1 = l2;
  j2 = 16ull;
  j1 >>= (j2 & 63);
  i64_store8((&M0), (u64)(i0 + 61), j1);
  i0 = p0;
  j1 = l2;
  j2 = 24ull;
  j1 >>= (j2 & 63);
  i64_store8((&M0), (u64)(i0 + 60), j1);
  i0 = p0;
  j1 = l2;
  j2 = 32ull;
  j1 >>= (j2 & 63);
  i64_store8((&M0), (u64)(i0 + 59), j1);
  i0 = p0;
  j1 = l2;
  j2 = 40ull;
  j1 >>= (j2 & 63);
  i64_store8((&M0), (u64)(i0 + 58), j1);
  i0 = p0;
  j1 = l2;
  j2 = 48ull;
  j1 >>= (j2 & 63);
  i64_store8((&M0), (u64)(i0 + 57), j1);
  i0 = p0;
  j1 = l2;
  j2 = 56ull;
  j1 >>= (j2 & 63);
  i64_store8((&M0), (u64)(i0 + 56), j1);
  i0 = p0;
  i1 = p0;
  sha256_transform(i0, i1);
  i0 = p1;
  i1 = p0;
  i2 = 83u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  i2 = 87u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = p0;
  i2 = 91u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = p0;
  i2 = 95u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = p0;
  i2 = 99u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 16), i1);
  i0 = p1;
  i1 = p0;
  i2 = 103u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 20), i1);
  i0 = p1;
  i1 = p0;
  i2 = 107u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 24), i1);
  i0 = p1;
  i1 = p0;
  i2 = 111u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 28), i1);
  i0 = p1;
  i1 = p0;
  i2 = 82u;
  i1 += i2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = p1;
  i1 = p0;
  i2 = 86u;
  i1 += i2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 5), i1);
  i0 = p1;
  i1 = p0;
  i2 = 90u;
  i1 += i2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 9), i1);
  i0 = p1;
  i1 = p0;
  i2 = 94u;
  i1 += i2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 13), i1);
  i0 = p1;
  i1 = p0;
  i2 = 98u;
  i1 += i2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 17), i1);
  i0 = p1;
  i1 = p0;
  i2 = 102u;
  i1 += i2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 21), i1);
  i0 = p1;
  i1 = p0;
  i2 = 106u;
  i1 += i2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 25), i1);
  i0 = p1;
  i1 = p0;
  i2 = 110u;
  i1 += i2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 29), i1);
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 80));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 2), i1);
  i0 = p1;
  i1 = p0;
  i2 = 84u;
  i1 += i2;
  l0 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 6), i1);
  i0 = p1;
  i1 = p0;
  i2 = 88u;
  i1 += i2;
  l1 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 10), i1);
  i0 = p1;
  i1 = p0;
  i2 = 92u;
  i1 += i2;
  l3 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 14), i1);
  i0 = p1;
  i1 = p0;
  i2 = 96u;
  i1 += i2;
  l4 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 18), i1);
  i0 = p1;
  i1 = p0;
  i2 = 100u;
  i1 += i2;
  l5 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 22), i1);
  i0 = p1;
  i1 = p0;
  i2 = 104u;
  i1 += i2;
  l6 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 26), i1);
  i0 = p1;
  i1 = p0;
  i2 = 108u;
  i1 += i2;
  l7 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 30), i1);
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 80));
  i32_store8((&M0), (u64)(i0 + 3), i1);
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 7), i1);
  i0 = p1;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 11), i1);
  i0 = p1;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 15), i1);
  i0 = p1;
  i1 = l4;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 19), i1);
  i0 = p1;
  i1 = l5;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 23), i1);
  i0 = p1;
  i1 = l6;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 27), i1);
  i0 = p1;
  i1 = l7;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 31), i1);
  FUNC_EPILOGUE;
}

static u32 uhashlib_sha256_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 116u;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 68), i1);
  i0 = l1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 76), j1);
  i0 = l1;
  j1 = 13503953895726638695ull;
  i64_store((&M0), (u64)(i0 + 84), j1);
  i0 = l1;
  j1 = 11912009169889063794ull;
  i64_store((&M0), (u64)(i0 + 92), j1);
  i0 = l1;
  j1 = 11170449402626986623ull;
  i64_store((&M0), (u64)(i0 + 100), j1);
  i0 = l1;
  j1 = 6620516960021240235ull;
  i64_store((&M0), (u64)(i0 + 108), j1);
  i0 = p1;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p3 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = l1;
  i1 = 68u;
  i0 += i1;
  p2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i0 = l1;
  i1 = 76u;
  i0 += i1;
  l3 = i0;
  L1: vm_checktime();
    i0 = l2;
    i1 = p1;
    i0 += i1;
    i1 = p0;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = p2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    p1 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 64u;
    i0 = i0 != i1;
    if (i0) {goto B2;}
    i0 = l2;
    i1 = l2;
    sha256_transform(i0, i1);
    i0 = 0u;
    p1 = i0;
    i0 = p2;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = l3;
    j1 = i64_load((&M0), (u64)(i1));
    j2 = 512ull;
    j1 += j2;
    i64_store((&M0), (u64)(i0), j1);
    B2:;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i0 = p3;
    i1 = 4294967295u;
    i0 += i1;
    p3 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 uhashlib_sha256_update(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = l0;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 68));
  p1 = i0;
  i0 = p0;
  i1 = 68u;
  i0 += i1;
  l4 = i0;
  i0 = p0;
  i1 = 76u;
  i0 += i1;
  p0 = i0;
  L1: vm_checktime();
    i0 = l2;
    i1 = p1;
    i0 += i1;
    i1 = l3;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    p1 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 64u;
    i0 = i0 != i1;
    if (i0) {goto B2;}
    i0 = l2;
    i1 = l2;
    sha256_transform(i0, i1);
    i0 = 0u;
    p1 = i0;
    i0 = l4;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = p0;
    j1 = i64_load((&M0), (u64)(i1));
    j2 = 512ull;
    j1 += j2;
    i64_store((&M0), (u64)(i0), j1);
    B2:;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 uhashlib_sha256_digest(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 32u;
  vstr_init_len(i0, i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  sha256_final(i0, i1);
  i0 = 33004u;
  i1 = l0;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_binascii_hexlify(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l2 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = l2;
  i0 += i1;
  i1 = 4294967295u;
  i0 += i1;
  l2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = mp_obj_str_get_str(i0);
  l3 = i0;
  B3:;
  i0 = l0;
  i1 = l2;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i1 = l1;
  i1 = i32_load8_u((&M0), (u64)(i1));
  l2 = i1;
  i2 = 4u;
  i1 >>= (i2 & 31);
  l4 = i1;
  i2 = 39u;
  i1 += i2;
  i2 = l4;
  i3 = l2;
  i4 = 159u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  i2 = 48u;
  i1 += i2;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = l1;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i2 = 15u;
  i1 &= i2;
  l2 = i1;
  i2 = 39u;
  i1 += i2;
  i2 = l2;
  i3 = l2;
  i4 = 9u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  i2 = 48u;
  i1 += i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = p0;
  i1 = 4294967295u;
  i0 += i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 1u;
  i1 = p0;
  i0 -= i1;
  p0 = i0;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  p1 = i0;
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  L4: vm_checktime();
    i0 = p1;
    i1 = 4294967294u;
    i0 += i1;
    i1 = l3;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    i1 = l1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    l2 = i1;
    i2 = 4u;
    i1 >>= (i2 & 31);
    l4 = i1;
    i2 = 39u;
    i1 += i2;
    i2 = l4;
    i3 = l2;
    i4 = 159u;
    i3 = i3 > i4;
    i1 = i3 ? i1 : i2;
    i2 = 48u;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = l1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i2 = 15u;
    i1 &= i2;
    l2 = i1;
    i2 = 39u;
    i1 += i2;
    i2 = l2;
    i3 = l2;
    i4 = 9u;
    i3 = i3 > i4;
    i1 = i3 ? i1 : i2;
    i2 = 48u;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 3u;
    i0 += i1;
    p1 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L4;}
    goto B0;
  B2:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 32696u;
  goto Bfunc;
  B1:;
  L5: vm_checktime();
    i0 = p1;
    i1 = l1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    l2 = i1;
    i2 = 4u;
    i1 >>= (i2 & 31);
    l4 = i1;
    i2 = 39u;
    i1 += i2;
    i2 = l4;
    i3 = l2;
    i4 = 159u;
    i3 = i3 > i4;
    i1 = i3 ? i1 : i2;
    i2 = 48u;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    i1 = l1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i2 = 15u;
    i1 &= i2;
    l2 = i1;
    i2 = 39u;
    i1 += i2;
    i2 = l2;
    i3 = l2;
    i4 = 9u;
    i3 = i3 > i4;
    i1 = i3 ? i1 : i2;
    i2 = 48u;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L5;}
  B0:;
  i0 = 33004u;
  i1 = l0;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_binascii_unhexlify(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  p0 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p0;
  i2 = 1u;
  i1 >>= (i2 & 31);
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 4294967295u;
  i0 += i1;
  p0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  L3: vm_checktime();
    i0 = l2;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    i0 = unichar_isxdigit(i0);
    i0 = !(i0);
    if (i0) {goto B1;}
    i0 = l4;
    i0 = unichar_xdigit_value(i0);
    i1 = l1;
    i0 += i1;
    l1 = i0;
    i0 = p0;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B4;}
    i0 = l3;
    i1 = l1;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = 0u;
    l1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    i1 = 4294967295u;
    i0 = i0 != i1;
    if (i0) {goto L3;}
    goto B2;
    B4:;
    i0 = l1;
    i1 = 4u;
    i0 <<= (i1 & 31);
    i1 = 4080u;
    i0 &= i1;
    l1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    i1 = 4294967295u;
    i0 = i0 != i1;
    if (i0) {goto L3;}
  B2:;
  i0 = 33004u;
  i1 = l0;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = 13189u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = 10835u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_binascii_a2b_base64(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  i2 = 2u;
  i1 >>= (i2 & 31);
  i2 = 3u;
  i1 *= i2;
  i2 = 1u;
  i1 += i2;
  vstr_init(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i0 = 0u;
  l4 = i0;
  i0 = 0u;
  p0 = i0;
  i0 = 0u;
  l5 = i0;
  i0 = 0u;
  l6 = i0;
  L3: vm_checktime();
    i0 = l1;
    i1 = p0;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l7 = i0;
    i1 = 61u;
    i0 = i0 != i1;
    if (i0) {goto B7;}
    i0 = l6;
    i1 = 4u;
    i0 = i0 == i1;
    if (i0) {goto B6;}
    i0 = 1u;
    l5 = i0;
    i0 = l6;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B4;}
    goto B1;
    B7:;
    i0 = l7;
    i1 = 4294967231u;
    i0 += i1;
    l8 = i0;
    i1 = 255u;
    i0 &= i1;
    i1 = 25u;
    i0 = i0 <= i1;
    if (i0) {goto B9;}
    i0 = l7;
    i1 = 4294967199u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 25u;
    i0 = i0 <= i1;
    if (i0) {goto B10;}
    i0 = l7;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 9u;
    i0 = i0 > i1;
    if (i0) {goto B11;}
    i0 = l7;
    i1 = 4u;
    i0 += i1;
    l8 = i0;
    goto B8;
    B11:;
    i0 = 62u;
    l8 = i0;
    i0 = l7;
    i1 = 43u;
    i0 = i0 == i1;
    if (i0) {goto B8;}
    i0 = 63u;
    i1 = 4294967295u;
    i2 = l7;
    i3 = 47u;
    i2 = i2 == i3;
    i0 = i2 ? i0 : i1;
    l8 = i0;
    i1 = 4294967295u;
    i0 = i0 != i1;
    if (i0) {goto B8;}
    goto B4;
    B10:;
    i0 = l7;
    i1 = 4294967225u;
    i0 += i1;
    l8 = i0;
    B9:;
    i0 = l8;
    i1 = 4294967295u;
    i0 = i0 == i1;
    if (i0) {goto B4;}
    B8:;
    i0 = l8;
    i1 = l4;
    i2 = 6u;
    i1 <<= (i2 & 31);
    i0 |= i1;
    l4 = i0;
    i0 = 0u;
    l5 = i0;
    i0 = l6;
    i1 = 2u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B5;}
    i0 = l0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 4));
    l7 = i1;
    i2 = 1u;
    i1 += i2;
    i32_store((&M0), (u64)(i0 + 4), i1);
    i0 = l3;
    i1 = l7;
    i0 += i1;
    i1 = l4;
    i2 = l6;
    i3 = 4294967294u;
    i2 += i3;
    l6 = i2;
    i1 >>= (i2 & 31);
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 20));
    l2 = i1;
    i0 = i0 < i1;
    if (i0) {goto L3;}
    goto B2;
    B6:;
    i0 = l5;
    i1 = 1u;
    i0 &= i1;
    l7 = i0;
    i0 = 4u;
    l6 = i0;
    i0 = 1u;
    l5 = i0;
    i0 = l7;
    i0 = !(i0);
    if (i0) {goto B4;}
    goto B1;
    B5:;
    i0 = l6;
    i1 = 6u;
    i0 += i1;
    l6 = i0;
    B4:;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L3;}
  B2:;
  i0 = l6;
  if (i0) {goto B0;}
  B1:;
  i0 = 33004u;
  i1 = l0;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 14523u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_binascii_b2a_base64(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 1u;
  l1 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4294967295u;
  i0 += i1;
  i1 = 3u;
  i0 = DIV_U(i0, i1);
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 4u;
  i0 += i1;
  i1 = 1u;
  i0 |= i1;
  l1 = i0;
  B0:;
  i0 = l0;
  i1 = l1;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l2 = i0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  L2: vm_checktime();
    i0 = l1;
    i1 = p0;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i2 = 2u;
    i1 >>= (i2 & 31);
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    i1 = p0;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i2 = 4u;
    i1 <<= (i2 & 31);
    i2 = 48u;
    i1 &= i2;
    i2 = p0;
    i3 = 1u;
    i2 += i3;
    l3 = i2;
    i2 = i32_load8_u((&M0), (u64)(i2));
    i3 = 4u;
    i2 >>= (i3 & 31);
    i1 |= i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    i1 = l3;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i2 = 2u;
    i1 <<= (i2 & 31);
    i2 = 60u;
    i1 &= i2;
    i2 = p0;
    i3 = 2u;
    i2 += i3;
    l3 = i2;
    i2 = i32_load8_u((&M0), (u64)(i2));
    i3 = 6u;
    i2 >>= (i3 & 31);
    i1 |= i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 3u;
    i0 += i1;
    i1 = l3;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i2 = 63u;
    i1 &= i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = p0;
    i1 = 3u;
    i0 += i1;
    p0 = i0;
    i0 = l2;
    i1 = 4294967293u;
    i0 += i1;
    l2 = i0;
    i1 = 2u;
    i0 = i0 > i1;
    if (i0) {goto L2;}
  B1:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l1;
  i1 = p0;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i2 = 2u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 4u;
  i0 <<= (i1 & 31);
  i1 = 48u;
  i0 &= i1;
  l3 = i0;
  i0 = l2;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 1));
  i2 = 4u;
  i1 >>= (i2 & 31);
  i2 = l3;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 1));
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 60u;
  i0 &= i1;
  p0 = i0;
  goto B4;
  B5:;
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  i1 = l3;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = 64u;
  p0 = i0;
  B4:;
  i0 = l1;
  i1 = 64u;
  i32_store8((&M0), (u64)(i0 + 3), i1);
  i0 = l1;
  i1 = p0;
  i32_store8((&M0), (u64)(i0 + 2), i1);
  B3:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 4294967295u;
  i0 += i1;
  l4 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = 1u;
  i1 = l1;
  i0 -= i1;
  l2 = i0;
  i0 = l3;
  l1 = i0;
  L7: vm_checktime();
    i0 = l1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p0 = i0;
    i1 = 25u;
    i0 = i0 > i1;
    if (i0) {goto B9;}
    i0 = p0;
    i1 = 65u;
    i0 += i1;
    p0 = i0;
    goto B8;
    B9:;
    i0 = p0;
    i1 = 51u;
    i0 = i0 > i1;
    if (i0) {goto B10;}
    i0 = p0;
    i1 = 71u;
    i0 += i1;
    p0 = i0;
    goto B8;
    B10:;
    i0 = p0;
    i1 = 61u;
    i0 = i0 > i1;
    if (i0) {goto B11;}
    i0 = p0;
    i1 = 4294967292u;
    i0 += i1;
    p0 = i0;
    goto B8;
    B11:;
    i0 = 43u;
    i1 = 47u;
    i2 = 61u;
    i3 = p0;
    i4 = 63u;
    i3 = i3 == i4;
    i1 = i3 ? i1 : i2;
    i2 = p0;
    i3 = 62u;
    i2 = i2 == i3;
    i0 = i2 ? i0 : i1;
    p0 = i0;
    B8:;
    i0 = l1;
    i1 = p0;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    if (i0) {goto L7;}
  i0 = l3;
  i1 = l4;
  i0 += i1;
  l3 = i0;
  B6:;
  i0 = l3;
  i1 = 10u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = 33004u;
  i1 = l0;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  l1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static void module_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 4u;
  i0 += i1;
  i1 = 186u;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = mp_obj_str_get_str(i0);
  l1 = i0;
  goto B0;
  B1:;
  i0 = 10853u;
  l1 = i0;
  B0:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4u;
  i0 += i1;
  i1 = 1410u;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i1 = mp_obj_str_get_str(i1);
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = p0;
  i1 = 11821u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 17066u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void module_attr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B3;}
  goto B1;
  B4:;
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  l1 = i1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p2;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B3:;
  i0 = l0;
  i1 = 27384u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5304));
  l0 = i0;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 1u;
  i1 = mp_obj_new_dict(i1);
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 5304), i1);
  goto B1;
  B2:;
  i0 = p1;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4u;
  i0 += i1;
  i1 = 114u;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = l1;
  i1 = mp_call_function_1(i1, i2);
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  p0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l0;
  i1 = p0;
  i2 = p1;
  i0 = mp_obj_dict_store(i0, i1, i2);
  goto B5;
  B6:;
  i0 = l0;
  i1 = p0;
  i0 = mp_obj_dict_delete(i0, i1);
  B5:;
  i0 = p2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_new_module(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 5232u;
  i1 = p0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  l0 = i1;
  i2 = 1u;
  i0 = mp_map_lookup(i0, i1, i2);
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 8u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = 29760u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 1u;
  i1 = mp_obj_new_dict(i1);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = 186u;
  i2 = l0;
  i0 = mp_obj_dict_store(i0, i1, i2);
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_module_get(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = 5232u;
  i1 = p0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  l1 = i1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  p0 = i0;
  if (i0) {goto B1;}
  i0 = 29952u;
  i1 = l1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_module_search_umodule(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 21u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B16;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B15;}
  B16:;
  i0 = 63u;
  i0 = qstr_str(i0);
  l1 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B17;}
  i0 = 1u;
  l0 = i0;
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B1;}
  B17:;
  i0 = 115u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B18;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B14;}
  B18:;
  i0 = 452u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B19;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B13;}
  B19:;
  i0 = 450u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B20;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B12;}
  B20:;
  i0 = 459u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B21;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B11;}
  B21:;
  i0 = 362u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B22;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B10;}
  B22:;
  i0 = 250u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B23;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B9;}
  B23:;
  i0 = 460u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B24;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B8;}
  B24:;
  i0 = 453u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B25;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B7;}
  B25:;
  i0 = 451u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B26;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B6;}
  B26:;
  i0 = 449u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B27;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B5;}
  B27:;
  i0 = 461u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B28;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B4;}
  B28:;
  i0 = 448u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B29;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B3;}
  B29:;
  i0 = 335u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B30;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B2;}
  B30:;
  i0 = 0u;
  l0 = i0;
  i0 = 248u;
  i0 = qstr_str(i0);
  l1 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  if (i0) {goto B0;}
  i0 = 15u;
  l0 = i0;
  goto B1;
  B15:;
  i0 = 0u;
  l0 = i0;
  goto B1;
  B14:;
  i0 = 2u;
  l0 = i0;
  goto B1;
  B13:;
  i0 = 3u;
  l0 = i0;
  goto B1;
  B12:;
  i0 = 4u;
  l0 = i0;
  goto B1;
  B11:;
  i0 = 5u;
  l0 = i0;
  goto B1;
  B10:;
  i0 = 6u;
  l0 = i0;
  goto B1;
  B9:;
  i0 = 7u;
  l0 = i0;
  goto B1;
  B8:;
  i0 = 8u;
  l0 = i0;
  goto B1;
  B7:;
  i0 = 9u;
  l0 = i0;
  goto B1;
  B6:;
  i0 = 10u;
  l0 = i0;
  goto B1;
  B5:;
  i0 = 11u;
  l0 = i0;
  goto B1;
  B4:;
  i0 = 12u;
  l0 = i0;
  goto B1;
  B3:;
  i0 = 13u;
  l0 = i0;
  goto B1;
  B2:;
  i0 = 14u;
  l0 = i0;
  B1:;
  i0 = l0;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 29828u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void enable_log(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5804), i1);
  FUNC_EPILOGUE;
}

static u32 get_log(void) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5808));
  FUNC_EPILOGUE;
  return i0;
}

static void mp_js_write(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5804));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5808));
  l0 = i0;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 1025u;
  i1 = malloc_0(i1);
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 5808), i1);
  B1:;
  i0 = p1;
  i1 = 1024u;
  i2 = p1;
  i3 = 1024u;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5812));
  l1 = i1;
  i0 += i1;
  i1 = 4294966272u;
  i0 += i1;
  l2 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = l0;
  i2 = l2;
  i3 = 256u;
  i4 = l2;
  i5 = 256u;
  i4 = (u32)((s32)i4 > (s32)i5);
  i2 = i4 ? i2 : i3;
  l1 = i2;
  i1 += i2;
  i2 = 1024u;
  i3 = l1;
  i2 -= i3;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = 0u;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5812));
  i2 = l1;
  i1 -= i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 5812), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5808));
  l0 = i0;
  B2:;
  i0 = l0;
  i1 = l1;
  i0 += i1;
  i1 = p0;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = 0u;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5812));
  i2 = p1;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 5812), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5808));
  i1 = l0;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = p1;
  (*Z_envZ_prints_lZ_vii)(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mod_chain_s2n(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 82u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  j0 = s2n(i0, i1);
  i0 = mp_obj_new_int_from_ll(j0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 13845u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_s2b(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 82u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = p0;
  i2 = l0;
  i3 = 12u;
  i2 += i3;
  i1 = mp_obj_str_get_data(i1, i2);
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  j1 = s2n(i1, i2);
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 8u;
  i0 = mp_obj_new_bytes(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 13845u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_n2s(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 3u;
  i0 += i1;
  i1 = p0;
  j1 = mp_obj_int_get_ull(i1);
  i2 = l0;
  i3 = 3u;
  i2 += i3;
  i3 = 13u;
  i1 = n2s(j1, i2, i3);
  i0 = mp_obj_new_str(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_read_action_data(void) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = (*Z_envZ_action_data_sizeZ_iv)();
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = malloc_0(i0);
  l1 = i0;
  i1 = l0;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i0 = l1;
  i1 = l0;
  i0 = mp_obj_new_bytes(i0, i1);
  l0 = i0;
  i0 = l1;
  free_0(i0);
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 6u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_require_recipient(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  i0 = p0;
  j0 = obj_to_u64(i0);
  (*Z_envZ_require_recipientZ_vj)(j0);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_require_auth(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  i0 = p0;
  j0 = obj_to_u64(i0);
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_require_auth2(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  i0 = p0;
  j0 = obj_to_u64(i0);
  i1 = p1;
  j1 = obj_to_u64(i1);
  (*Z_envZ_require_auth2Z_vjj)(j0, j1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_has_auth(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j2;
  i0 = 30u;
  i1 = 14u;
  i2 = p0;
  j2 = obj_to_u64(i2);
  i2 = (*Z_envZ_has_authZ_ij)(j2);
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_is_account(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j2;
  i0 = 30u;
  i1 = 14u;
  i2 = p0;
  j2 = obj_to_u64(i2);
  i2 = (*Z_envZ_is_accountZ_ij)(j2);
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_send_inline(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i4, i5, i6;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  j0 = obj_to_u64(i0);
  l4 = j0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  j0 = l1;
  j1 = l2;
  j2 = l3;
  j3 = l4;
  i4 = p1;
  i4 = i32_load((&M0), (u64)(i4 + 16));
  i5 = l0;
  i6 = 12u;
  i5 += i6;
  i4 = mp_obj_str_get_data(i4, i5);
  i5 = l0;
  i5 = i32_load((&M0), (u64)(i5 + 12));
  vm_send_inline(j0, j1, j2, j3, i4, i5);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_send_inline_raw(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  (*Z_envZ_send_inlineZ_vii)(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_send_context_free_inline(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  j0 = l1;
  j1 = l2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i2 = mp_obj_str_get_data(i2, i3);
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  vm_send_context_free_inline(j0, j1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_send_context_free_inline_raw(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  (*Z_envZ_send_context_free_inlineZ_vii)(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_publication_time(void) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  j0 = (*Z_envZ_publication_timeZ_jv)();
  i0 = mp_obj_new_int_from_ll(j0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_current_receiver(void) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = u64_to_name(j0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_get_active_producers(void) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = g0;
  i1 = 176u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 168u;
  i0 = (*Z_envZ_get_active_producersZ_iii)(i0, i1);
  i1 = 3u;
  i0 >>= (i1 & 31);
  l1 = i0;
  i1 = 0u;
  i0 = mp_obj_new_tuple(i0, i1);
  l2 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l2;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  i0 = l0;
  l4 = i0;
  L1: vm_checktime();
    i0 = l3;
    i1 = l4;
    j1 = i64_load((&M0), (u64)(i1));
    i1 = u64_to_name(j1);
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l3 = i0;
    i0 = l4;
    i1 = 8u;
    i0 += i1;
    l4 = i0;
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_action_new(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i4, i5, i6;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  j0 = obj_to_u64(i0);
  l4 = j0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  j0 = l1;
  j1 = l2;
  j2 = l3;
  j3 = l4;
  i4 = p1;
  i4 = i32_load((&M0), (u64)(i4 + 16));
  i5 = l0;
  i6 = 12u;
  i5 += i6;
  i4 = mp_obj_str_get_data(i4, i5);
  i5 = l0;
  i5 = i32_load((&M0), (u64)(i5 + 12));
  i0 = action_new(j0, j1, j2, j3, i4, i5);
  j0 = (u64)(i0);
  i0 = mp_obj_new_int_from_ull(j0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_action_add_permission(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = mp_obj_int_get_ull(i0);
  i0 = (u32)(j0);
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  j1 = obj_to_u64(i1);
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  j2 = obj_to_u64(i2);
  action_add_permission(i0, j1, j2);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_action_send(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  i0 = p0;
  j0 = mp_obj_int_get_ull(i0);
  i0 = (u32)(j0);
  action_send(i0);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_action_free(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  i0 = p0;
  j0 = mp_obj_int_get_ull(i0);
  i0 = (u32)(j0);
  action_free(i0);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_transaction_new(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_int_get_uint_checked(i0);
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i1 = mp_obj_int_get_uint_checked(i1);
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i2 = mp_obj_int_get_uint_checked(i2);
  i3 = p1;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  i3 = mp_obj_int_get_uint_checked(i3);
  i4 = p1;
  i4 = i32_load((&M0), (u64)(i4 + 16));
  i4 = mp_obj_int_get_uint_checked(i4);
  i5 = p1;
  i5 = i32_load((&M0), (u64)(i5 + 20));
  i5 = mp_obj_int_get_uint_checked(i5);
  i0 = transaction_new(i0, i1, i2, i3, i4, i5);
  j0 = (u64)(i0);
  i0 = mp_obj_new_int_from_ull(j0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_transaction_add_action(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  i0 = p0;
  j0 = mp_obj_int_get_ull(i0);
  i0 = (u32)(j0);
  i1 = p1;
  j1 = mp_obj_int_get_ull(i1);
  i1 = (u32)(j1);
  transaction_add_action(i0, i1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_transaction_add_context_free_action(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  i0 = p0;
  j0 = mp_obj_int_get_ull(i0);
  i0 = (u32)(j0);
  i1 = p1;
  j1 = mp_obj_int_get_ull(i1);
  i1 = (u32)(j1);
  transaction_add_context_free_action(i0, i1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_transaction_send(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = mp_obj_int_get_ull(i0);
  l1 = j0;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  obj_int_to_u128(i0, i1);
  j0 = l1;
  i0 = (u32)(j0);
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  j2 = i64_load((&M0), (u64)(i2));
  i3 = p1;
  i3 = i32_load((&M0), (u64)(i3 + 8));
  j3 = obj_to_u64(i3);
  i4 = p1;
  i4 = i32_load((&M0), (u64)(i4 + 12));
  i4 = mp_obj_get_int(i4);
  i5 = 0u;
  i4 = i4 != i5;
  transaction_send(i0, j1, j2, j3, i4);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_transaction_cancel(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p0;
  obj_int_to_u128(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = transaction_cancel(j0, j1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = p0;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_transaction_free(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  i0 = p0;
  j0 = mp_obj_int_get_ull(i0);
  i0 = (u32)(j0);
  transaction_free(i0);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_assert_sha256(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p0 = i0;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = 32u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p1;
  (*Z_envZ_assert_sha256Z_viii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 20203u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_assert_sha1(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p0 = i0;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = 32u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p1;
  (*Z_envZ_assert_sha1Z_viii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 20203u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_assert_sha512(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p0 = i0;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = 64u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p1;
  (*Z_envZ_assert_sha512Z_viii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 20203u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_assert_ripemd160(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p0 = i0;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = 32u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p1;
  (*Z_envZ_assert_ripemd160Z_viii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 20203u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_assert_recover_key(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p0 = i0;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p1 = i0;
  i0 = p2;
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 32u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = p2;
  i4 = l0;
  i4 = i32_load((&M0), (u64)(i4 + 4));
  (*Z_envZ_assert_recover_keyZ_viiiii)(i0, i1, i2, i3, i4);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 20888u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_sha256(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 44u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 44));
  i2 = l0;
  (*Z_envZ_sha256Z_viii)(i0, i1, i2);
  i0 = l0;
  i1 = 32u;
  i0 = mp_obj_new_bytes(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_sha1(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 44u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 44));
  i2 = l0;
  (*Z_envZ_sha1Z_viii)(i0, i1, i2);
  i0 = l0;
  i1 = 32u;
  i0 = mp_obj_new_bytes(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_sha512(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 80u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 76u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 76));
  i2 = l0;
  (*Z_envZ_sha512Z_viii)(i0, i1, i2);
  i0 = l0;
  i1 = 64u;
  i0 = mp_obj_new_bytes(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_ripemd160(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 44u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 44));
  i2 = l0;
  (*Z_envZ_ripemd160Z_viii)(i0, i1, i2);
  i0 = l0;
  i1 = 32u;
  i0 = mp_obj_new_bytes(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_recover_key(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  i1 = p0;
  i2 = l0;
  i3 = 44u;
  i2 += i3;
  i1 = mp_obj_str_get_data(i1, i2);
  i2 = p1;
  i3 = l0;
  i4 = 40u;
  i3 += i4;
  i2 = mp_obj_str_get_data(i2, i3);
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 40));
  i4 = l0;
  i5 = 34u;
  i1 = (*Z_envZ_recover_keyZ_iiiiii)(i1, i2, i3, i4, i5);
  i0 = mp_obj_new_bytes(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_store_i64(u32 p0, u32 p1) {
  u32 l0 = 0, l4 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10854u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = l1;
  i0 = j0 == j1;
  i1 = 11845u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  l4 = i0;
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i3 = p1;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  j3 = obj_to_u64(i3);
  i4 = l4;
  i5 = l0;
  i5 = i32_load((&M0), (u64)(i5 + 4));
  i0 = (*Z_envZ_db_store_i64Z_ijjjjii)(j0, j1, j2, j3, i4, i5);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_update_i64(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = p1;
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  j1 = l1;
  i2 = p2;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i2 = mp_obj_str_get_data(i2, i3);
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  (*Z_envZ_db_update_i64Z_vijii)(i0, j1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_remove_i64(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  (*Z_envZ_db_remove_i64Z_vi)(i0);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_get_i64(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  l0 = i0;
  i1 = 0u;
  i2 = 0u;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p0;
  i1 = malloc_0(i1);
  l1 = i1;
  i2 = p0;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p0;
  i0 = mp_obj_new_bytes(i0, i1);
  p0 = i0;
  i0 = l1;
  free_0(i0);
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 6u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_next_i64(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = p0;
  i2 = l0;
  i1 = (*Z_envZ_db_next_i64Z_iii)(i1, i2);
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_previous_i64(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = p0;
  i2 = l0;
  i1 = (*Z_envZ_db_previous_i64Z_iii)(i1, i2);
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_find_i64(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i3;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10854u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11845u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i3 = p1;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  j3 = obj_to_u64(i3);
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_lowerbound_i64(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i3;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10854u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11845u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i3 = p1;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  j3 = obj_to_u64(i3);
  i0 = (*Z_envZ_db_lowerbound_i64Z_ijjjj)(j0, j1, j2, j3);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_upperbound_i64(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i3;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10854u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11845u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i3 = p1;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  j3 = obj_to_u64(i3);
  i0 = (*Z_envZ_db_upperbound_i64Z_ijjjj)(j0, j1, j2, j3);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_end_i64(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10854u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11845u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i0 = (*Z_envZ_db_end_i64Z_ijjj)(j0, j1, j2);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_store_i256(u32 p0, u32 p1) {
  u32 l0 = 0, l4 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10854u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  j1 = l1;
  i0 = j0 == j1;
  i1 = 11845u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i2 = 44u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  l4 = i0;
  i0 = l0;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l0;
  i2 = 32u;
  obj_int_to_u256(i0, i1, i2);
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i3 = l0;
  i4 = 32u;
  i5 = l4;
  i6 = l0;
  i6 = i32_load((&M0), (u64)(i6 + 44));
  i0 = db_store_i256(j0, j1, j2, i3, i4, i5, i6);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_update_i256(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = p1;
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  j1 = l1;
  i2 = p2;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i2 = mp_obj_str_get_data(i2, i3);
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  db_update_i256(i0, j1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_remove_i256(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  db_remove_i256(i0);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_get_i256(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  l0 = i0;
  i1 = 0u;
  i2 = 0u;
  i0 = db_get_i256(i0, i1, i2);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p0;
  i1 = malloc_0(i1);
  l1 = i1;
  i2 = p0;
  i0 = db_get_i256(i0, i1, i2);
  i0 = l1;
  i1 = p0;
  i0 = mp_obj_new_bytes(i0, i1);
  p0 = i0;
  i0 = l1;
  free_0(i0);
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 6u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_next_i256(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = l0;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = p0;
  i2 = l0;
  i3 = 32u;
  i1 = db_next_i256(i1, i2, i3);
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  i1 = 0u;
  i2 = 32u;
  i3 = l0;
  i1 = mp_obj_int_from_bytes_impl(i1, i2, i3);
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 40u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_previous_i256(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = l0;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = p0;
  i2 = l0;
  i3 = 32u;
  i1 = db_previous_i256(i1, i2, i3);
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  i1 = 0u;
  i2 = 32u;
  i3 = l0;
  i1 = mp_obj_int_from_bytes_impl(i1, i2, i3);
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 40u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_find_i256(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10854u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11845u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = l0;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l0;
  i2 = 32u;
  obj_int_to_u256(i0, i1, i2);
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i3 = l0;
  i4 = 32u;
  i0 = db_find_i256(j0, j1, j2, i3, i4);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_lowerbound_i256(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10854u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11845u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = l0;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l0;
  i2 = 32u;
  obj_int_to_u256(i0, i1, i2);
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i3 = l0;
  i4 = 32u;
  i0 = db_lowerbound_i256(j0, j1, j2, i3, i4);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_upperbound_i256(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10854u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11845u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = l0;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l0;
  i2 = 32u;
  obj_int_to_u256(i0, i1, i2);
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i3 = l0;
  i4 = 32u;
  i0 = db_upperbound_i256(j0, j1, j2, i3, i4);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_end_i256(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10854u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11845u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i0 = db_end_i256(j0, j1, j2);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_get_table_row_count(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  j0 = obj_to_u64(i0);
  l2 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10854u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11845u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = l1;
  j1 = l2;
  i2 = p2;
  j2 = obj_to_u64(i2);
  i0 = db_get_table_row_count(j0, j1, j2);
  i0 = mp_obj_new_int(i0);
  p2 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_call_contract(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  j0 = l1;
  i1 = p1;
  i2 = l0;
  i3 = 12u;
  i2 += i3;
  i1 = mp_obj_str_get_data(i1, i2);
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  (*Z_envZ_call_contractZ_vjii)(j0, i1, i2);
  i0 = 0u;
  i1 = 0u;
  i0 = (*Z_envZ_call_contract_get_resultsZ_iii)(i0, i1);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i0 = malloc_0(i0);
  p0 = i0;
  i1 = p1;
  i0 = (*Z_envZ_call_contract_get_resultsZ_iii)(i0, i1);
  i0 = p0;
  i1 = p1;
  i0 = mp_obj_new_bytes(i0, i1);
  p1 = i0;
  i0 = p0;
  free_0(i0);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_get_code_hash(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p0;
  j0 = obj_to_u64(i0);
  i0 = 0u;
  i1 = 22845u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_idx_store(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i4, i5;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10854u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11845u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  j0 = obj_to_u64(i0);
  l4 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  j0 = obj_to_u64(i0);
  l5 = j0;
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  i2 = l0;
  parse_secondary_value(i0, i1, i2);
  i0 = l1;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l1;
  switch (i0) {
    case 0: goto B7;
    case 1: goto B3;
    case 2: goto B5;
    case 3: goto B4;
    case 4: goto B6;
    default: goto B7;
  }
  B7:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  j3 = l5;
  i4 = l0;
  i0 = (*Z_envZ_db_idx64_storeZ_ijjjji)(j0, j1, j2, j3, i4);
  p1 = i0;
  goto B2;
  B6:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  j3 = l5;
  i4 = l0;
  i0 = (*Z_envZ_db_idx_long_double_storeZ_ijjjji)(j0, j1, j2, j3, i4);
  p1 = i0;
  goto B2;
  B5:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  j3 = l5;
  i4 = l0;
  i5 = 2u;
  i0 = (*Z_envZ_db_idx256_storeZ_ijjjjii)(j0, j1, j2, j3, i4, i5);
  p1 = i0;
  goto B2;
  B4:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  j3 = l5;
  i4 = l0;
  i0 = (*Z_envZ_db_idx_double_storeZ_ijjjji)(j0, j1, j2, j3, i4);
  p1 = i0;
  goto B2;
  B3:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  j3 = l5;
  i4 = l0;
  i0 = (*Z_envZ_db_idx128_storeZ_ijjjji)(j0, j1, j2, j3, i4);
  p1 = i0;
  B2:;
  i0 = p1;
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 22936u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void parse_secondary_value(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1, j2;
  f64 d1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B7;}
  i0 = p0;
  switch (i0) {
    case 0: goto B14;
    case 1: goto B10;
    case 2: goto B12;
    case 3: goto B11;
    case 4: goto B13;
    default: goto B14;
  }
  B14:;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B6;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = p1;
  i1 = 0u;
  i2 = 8u;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  goto B5;
  B13:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 25048u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = p1;
  mp_obj_float128_get(i0, i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p2;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 32u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B12:;
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B9;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p1;
  i1 = 0u;
  i2 = 32u;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  p1 = i0;
  goto B8;
  B11:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33608u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = p1;
  d1 = mp_obj_float_get(i1);
  f64_store((&M0), (u64)(i0 + 16), d1);
  i0 = p2;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 32u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B10:;
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B7;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p1;
  i1 = 0u;
  i2 = 16u;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  p1 = i0;
  goto B3;
  B9:;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  i1 = p1;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  j1 = (u64)(s64)(s32)(i1);
  l1 = j1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = l1;
  j2 = 63ull;
  j1 = (u64)((s64)j1 >> (j2 & 63));
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  p1 = i0;
  B8:;
  i0 = p2;
  i1 = p1;
  i2 = 32u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B7:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B6:;
  i0 = l0;
  i1 = p1;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  j1 = (u64)(s64)(s32)(i1);
  i64_store((&M0), (u64)(i0 + 16), j1);
  B5:;
  i0 = p2;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B4:;
  i0 = l0;
  i1 = p1;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  j1 = (u64)(s64)(s32)(i1);
  l1 = j1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = l1;
  j2 = 63ull;
  j1 = (u64)((s64)j1 >> (j2 & 63));
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  p1 = i0;
  B3:;
  i0 = p2;
  i1 = p1;
  i2 = 16u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = 43346u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B1:;
  i0 = 43301u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B0:;
  i0 = 43216u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mod_chain_db_idx_update(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  u64 l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = mp_obj_get_int(i0);
  l2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = l0;
  parse_secondary_value(i0, i1, i2);
  i0 = l1;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = l1;
  switch (i0) {
    case 0: goto B6;
    case 1: goto B2;
    case 2: goto B4;
    case 3: goto B3;
    case 4: goto B5;
    default: goto B6;
  }
  B6:;
  i0 = l2;
  j1 = l3;
  i2 = l0;
  (*Z_envZ_db_idx64_updateZ_viji)(i0, j1, i2);
  goto B1;
  B5:;
  i0 = l2;
  j1 = l3;
  i2 = l0;
  (*Z_envZ_db_idx_long_double_updateZ_viji)(i0, j1, i2);
  goto B1;
  B4:;
  i0 = l2;
  j1 = l3;
  i2 = l0;
  i3 = 2u;
  (*Z_envZ_db_idx256_updateZ_vijii)(i0, j1, i2, i3);
  goto B1;
  B3:;
  i0 = l2;
  j1 = l3;
  i2 = l0;
  (*Z_envZ_db_idx_double_updateZ_viji)(i0, j1, i2);
  goto B1;
  B2:;
  i0 = l2;
  j1 = l3;
  i2 = l0;
  (*Z_envZ_db_idx128_updateZ_viji)(i0, j1, i2);
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 22936u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_idx_remove(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = p1;
  i0 = mp_obj_get_int(i0);
  p1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  switch (i0) {
    case 0: goto B5;
    case 1: goto B1;
    case 2: goto B3;
    case 3: goto B2;
    case 4: goto B4;
    default: goto B5;
  }
  B5:;
  i0 = p1;
  (*Z_envZ_db_idx64_removeZ_vi)(i0);
  i0 = 6u;
  goto Bfunc;
  B4:;
  i0 = p1;
  (*Z_envZ_db_idx_long_double_removeZ_vi)(i0);
  i0 = 6u;
  goto Bfunc;
  B3:;
  i0 = p1;
  (*Z_envZ_db_idx256_removeZ_vi)(i0);
  i0 = 6u;
  goto Bfunc;
  B2:;
  i0 = p1;
  (*Z_envZ_db_idx_double_removeZ_vi)(i0);
  i0 = 6u;
  goto Bfunc;
  B1:;
  i0 = p1;
  (*Z_envZ_db_idx128_removeZ_vi)(i0);
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 22936u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_idx_next(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = p1;
  i0 = mp_obj_get_int(i0);
  p1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  switch (i0) {
    case 0: goto B6;
    case 1: goto B2;
    case 2: goto B4;
    case 3: goto B3;
    case 4: goto B5;
    default: goto B6;
  }
  B6:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx64_nextZ_iii)(i0, i1);
  p0 = i0;
  goto B1;
  B5:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx_long_double_nextZ_iii)(i0, i1);
  p0 = i0;
  goto B1;
  B4:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx256_nextZ_iii)(i0, i1);
  p0 = i0;
  goto B1;
  B3:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx_double_nextZ_iii)(i0, i1);
  p0 = i0;
  goto B1;
  B2:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx128_nextZ_iii)(i0, i1);
  p0 = i0;
  B1:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = 2u;
  i1 = l0;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 22936u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_idx_previous(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = p1;
  i0 = mp_obj_get_int(i0);
  p1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  switch (i0) {
    case 0: goto B6;
    case 1: goto B2;
    case 2: goto B4;
    case 3: goto B3;
    case 4: goto B5;
    default: goto B6;
  }
  B6:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx64_previousZ_iii)(i0, i1);
  p0 = i0;
  goto B1;
  B5:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx_long_double_previousZ_iii)(i0, i1);
  p0 = i0;
  goto B1;
  B4:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx256_previousZ_iii)(i0, i1);
  p0 = i0;
  goto B1;
  B3:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx_double_previousZ_iii)(i0, i1);
  p0 = i0;
  goto B1;
  B2:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx128_previousZ_iii)(i0, i1);
  p0 = i0;
  B1:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = 2u;
  i1 = l0;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 22936u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_idx_find_primary(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2, j4, j5;
  f64 d0;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10854u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  j1 = l3;
  i0 = j0 == j1;
  i1 = 11845u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  j0 = obj_to_u64(i0);
  l4 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  j0 = obj_to_u64(i0);
  l5 = j0;
  i0 = l1;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l1;
  switch (i0) {
    case 0: goto B8;
    case 1: goto B4;
    case 2: goto B6;
    case 3: goto B5;
    case 4: goto B7;
    default: goto B8;
  }
  B8:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  j4 = l5;
  i0 = (*Z_envZ_db_idx64_find_primaryZ_ijjjij)(j0, j1, j2, i3, j4);
  p1 = i0;
  goto B3;
  B7:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  j4 = l5;
  i0 = (*Z_envZ_db_idx_long_double_find_primaryZ_ijjjij)(j0, j1, j2, i3, j4);
  p1 = i0;
  goto B3;
  B6:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = 2u;
  j5 = l5;
  i0 = (*Z_envZ_db_idx256_find_primaryZ_ijjjiij)(j0, j1, j2, i3, i4, j5);
  p1 = i0;
  goto B3;
  B5:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  j4 = l5;
  i0 = (*Z_envZ_db_idx_double_find_primaryZ_ijjjij)(j0, j1, j2, i3, j4);
  p1 = i0;
  goto B3;
  B4:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  j4 = l5;
  i0 = (*Z_envZ_db_idx128_find_primaryZ_ijjjij)(j0, j1, j2, i3, j4);
  p1 = i0;
  B3:;
  i0 = l0;
  i1 = p1;
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = 2u;
  i0 = i0 > i1;
  if (i0) {goto B10;}
  i0 = 0u;
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i2 = 43440u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_obj_int_from_bytes_impl(i0, i1, i2);
  p1 = i0;
  goto B9;
  B10:;
  i0 = l1;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B11;}
  i0 = l1;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 16));
  i0 = mp_obj_new_float(d0);
  p1 = i0;
  goto B9;
  B11:;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 24));
  i0 = mp_obj_new_float128(j0, j1);
  p1 = i0;
  B9:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B2:;
  i0 = 22936u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B1:;
  i0 = 43460u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_idx_find_secondary(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 64u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10854u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  j1 = l3;
  i0 = j0 == j1;
  i1 = 11845u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  j0 = obj_to_u64(i0);
  l4 = j0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 56), j1);
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  parse_secondary_value(i0, i1, i2);
  i0 = l1;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l1;
  switch (i0) {
    case 0: goto B7;
    case 1: goto B3;
    case 2: goto B5;
    case 3: goto B4;
    case 4: goto B6;
    default: goto B7;
  }
  B7:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx64_find_secondaryZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  goto B2;
  B6:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx_long_double_find_secondaryZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  goto B2;
  B5:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = 2u;
  i5 = l0;
  i6 = 56u;
  i5 += i6;
  i0 = (*Z_envZ_db_idx256_find_secondaryZ_ijjjiii)(j0, j1, j2, i3, i4, i5);
  p1 = i0;
  goto B2;
  B4:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx_double_find_secondaryZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  goto B2;
  B3:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx128_find_secondaryZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  B2:;
  i0 = l0;
  i1 = p1;
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 56));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 22936u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_idx_lowerbound(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  u64 j0, j1, j2;
  f64 d0;
  i0 = g0;
  i1 = 64u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10854u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  j1 = l3;
  i0 = j0 == j1;
  i1 = 11845u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  j0 = obj_to_u64(i0);
  l4 = j0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 56), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  parse_secondary_value(i0, i1, i2);
  i0 = l1;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = l1;
  switch (i0) {
    case 0: goto B10;
    case 1: goto B6;
    case 2: goto B8;
    case 3: goto B7;
    case 4: goto B9;
    default: goto B10;
  }
  B10:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx64_lowerboundZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  goto B5;
  B9:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx_long_double_lowerboundZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  goto B5;
  B8:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = 2u;
  i5 = l0;
  i6 = 56u;
  i5 += i6;
  i0 = (*Z_envZ_db_idx256_lowerboundZ_ijjjiii)(j0, j1, j2, i3, i4, i5);
  p1 = i0;
  goto B5;
  B7:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx_double_lowerboundZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  goto B5;
  B6:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx128_lowerboundZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  B5:;
  i0 = l0;
  i1 = p1;
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 56));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B12;}
  i0 = 2u;
  p1 = i0;
  i0 = l1;
  i1 = 2u;
  i0 = i0 > i1;
  if (i0) {goto B11;}
  goto B2;
  B12:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = 2u;
  p1 = i0;
  i0 = l1;
  i1 = 2u;
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  B11:;
  i0 = l1;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B13;}
  i0 = l1;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 16));
  i0 = mp_obj_new_float(d0);
  l1 = i0;
  goto B1;
  B13:;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 24));
  i0 = mp_obj_new_float128(j0, j1);
  l1 = i0;
  goto B1;
  B4:;
  i0 = 22936u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B3:;
  i0 = 43460u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B2:;
  i0 = 0u;
  i1 = l1;
  i2 = p1;
  i1 <<= (i2 & 31);
  i2 = 43440u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_obj_int_from_bytes_impl(i0, i1, i2);
  l1 = i0;
  B1:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 3u;
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  l1 = i0;
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_idx_upperbound(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  u64 j0, j1, j2;
  f64 d0;
  i0 = g0;
  i1 = 64u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10854u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  j1 = l3;
  i0 = j0 == j1;
  i1 = 11845u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  j0 = obj_to_u64(i0);
  l4 = j0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 56), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  parse_secondary_value(i0, i1, i2);
  i0 = l1;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = l1;
  switch (i0) {
    case 0: goto B10;
    case 1: goto B6;
    case 2: goto B8;
    case 3: goto B7;
    case 4: goto B9;
    default: goto B10;
  }
  B10:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx64_upperboundZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  goto B5;
  B9:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx_long_double_upperboundZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  goto B5;
  B8:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = 2u;
  i5 = l0;
  i6 = 56u;
  i5 += i6;
  i0 = (*Z_envZ_db_idx256_upperboundZ_ijjjiii)(j0, j1, j2, i3, i4, i5);
  p1 = i0;
  goto B5;
  B7:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx_double_upperboundZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  goto B5;
  B6:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx128_upperboundZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  B5:;
  i0 = l0;
  i1 = p1;
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 56));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B12;}
  i0 = 2u;
  p1 = i0;
  i0 = l1;
  i1 = 2u;
  i0 = i0 > i1;
  if (i0) {goto B11;}
  goto B2;
  B12:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = 2u;
  p1 = i0;
  i0 = l1;
  i1 = 2u;
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  B11:;
  i0 = l1;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B13;}
  i0 = l1;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 16));
  i0 = mp_obj_new_float(d0);
  l1 = i0;
  goto B1;
  B13:;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 24));
  i0 = mp_obj_new_float128(j0, j1);
  l1 = i0;
  goto B1;
  B4:;
  i0 = 22936u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B3:;
  i0 = 43460u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B2:;
  i0 = 0u;
  i1 = l1;
  i2 = p1;
  i1 <<= (i2 & 31);
  i2 = 43440u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_obj_int_from_bytes_impl(i0, i1, i2);
  l1 = i0;
  B1:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 3u;
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  l1 = i0;
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_idx_end(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10854u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = l3;
  i0 = j0 == j1;
  i1 = 11845u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  j0 = obj_to_u64(i0);
  l4 = j0;
  i0 = l1;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l1;
  switch (i0) {
    case 0: goto B7;
    case 1: goto B3;
    case 2: goto B5;
    case 3: goto B4;
    case 4: goto B6;
    default: goto B7;
  }
  B7:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i0 = (*Z_envZ_db_idx64_endZ_ijjj)(j0, j1, j2);
  p1 = i0;
  goto B2;
  B6:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i0 = (*Z_envZ_db_idx_long_double_endZ_ijjj)(j0, j1, j2);
  p1 = i0;
  goto B2;
  B5:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i0 = (*Z_envZ_db_idx256_endZ_ijjj)(j0, j1, j2);
  p1 = i0;
  goto B2;
  B4:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i0 = (*Z_envZ_db_idx_double_endZ_ijjj)(j0, j1, j2);
  p1 = i0;
  goto B2;
  B3:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i0 = (*Z_envZ_db_idx128_endZ_ijjj)(j0, j1, j2);
  p1 = i0;
  B2:;
  i0 = p1;
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 22936u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_get_resource_limits(u32 p0) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 40), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  j0 = l1;
  i1 = l0;
  i2 = 40u;
  i1 += i2;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  i3 = l0;
  i4 = 24u;
  i3 += i4;
  (*Z_envZ_get_resource_limitsZ_vjiii)(j0, i1, i2, i3);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 40));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 32));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 24));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = 3u;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_set_resource_limits(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2, j3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  j1 = obj_to_u64(i1);
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  j2 = obj_to_u64(i2);
  i3 = p1;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  j3 = obj_to_u64(i3);
  (*Z_envZ_set_resource_limitsZ_vjjjj)(j0, j1, j2, j3);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_set_proposed_producers(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  u64 l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_obj_get_array(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 3u;
  i0 <<= (i1 & 31);
  i0 = malloc_0(i0);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 0u;
  p0 = i0;
  i0 = l1;
  l2 = i0;
  i0 = 0u;
  l3 = i0;
  L2: vm_checktime();
    i0 = l2;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 8));
    i2 = p0;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    j1 = obj_to_u64(i1);
    i64_store((&M0), (u64)(i0), j1);
    i0 = l2;
    i1 = 8u;
    i0 += i1;
    l2 = i0;
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    l4 = i1;
    i0 = i0 < i1;
    if (i0) {goto L2;}
  i0 = l4;
  i1 = 3u;
  i0 <<= (i1 & 31);
  p0 = i0;
  goto B0;
  B1:;
  i0 = 0u;
  p0 = i0;
  B0:;
  i0 = l1;
  i1 = p0;
  j0 = (*Z_envZ_set_proposed_producersZ_jii)(i0, i1);
  l5 = j0;
  i0 = l1;
  free_0(i0);
  j0 = l5;
  i0 = mp_obj_new_int_from_ll(j0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_is_privileged(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j2;
  i0 = 30u;
  i1 = 14u;
  i2 = p0;
  j2 = obj_to_u64(i2);
  i2 = (*Z_envZ_is_privilegedZ_ij)(j2);
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_set_privileged(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0;
  i0 = p0;
  j0 = obj_to_u64(i0);
  i1 = p1;
  i1 = mp_obj_get_int(i1);
  i2 = 0u;
  i1 = i1 != i2;
  (*Z_envZ_set_privilegedZ_vji)(j0, i1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_set_blockchain_parameters(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 96u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 92u;
  i1 += i2;
  i2 = l0;
  i3 = 88u;
  i2 += i3;
  mp_obj_get_array(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 92));
  i1 = 19u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1));
  j1 = mp_obj_int_get_ull(i1);
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 20));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 24));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 28));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 32));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 36));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 40));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 44));
  j1 = mp_obj_int_get_ull(i1);
  i64_store((&M0), (u64)(i0 + 48), j1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 48));
  j1 = mp_obj_int_get_ull(i1);
  i64_store((&M0), (u64)(i0 + 56), j1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 52));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 64), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 56));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 68), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 60));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 72), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 64));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 76), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 68));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store16((&M0), (u64)(i0 + 80), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 72));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store16((&M0), (u64)(i0 + 82), i1);
  i0 = l0;
  set_blockchain_parameters(i0);
  i0 = l0;
  i1 = 96u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 43508u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_get_blockchain_parameters(void) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = g0;
  i1 = 176u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 88u;
  i0 += i1;
  get_blockchain_parameters(i0);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 88));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 96));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 100));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 104));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 108));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 112));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 116));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 120));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 124));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 128));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 132));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 136));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 144));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 48), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 152));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 52), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 156));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 56), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 160));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 60), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 164));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 64), i1);
  i0 = l0;
  i1 = l0;
  j1 = i32_load16_u((&M0), (u64)(i1 + 168));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 68), i1);
  i0 = l0;
  i1 = l0;
  j1 = i32_load16_u((&M0), (u64)(i1 + 170));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 72), i1);
  i0 = 19u;
  i1 = l0;
  i0 = mp_obj_new_tuple(i0, i1);
  l1 = i0;
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_eosio_assert(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  i1 = p1;
  i2 = l0;
  i3 = 12u;
  i2 += i3;
  i1 = mp_obj_str_get_data(i1, i2);
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_eosio_assert_code(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  i1 = p1;
  j1 = obj_to_u64(i1);
  (*Z_envZ_eosio_assert_codeZ_vij)(i0, j1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_current_time(void) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  j0 = (*Z_envZ_current_timeZ_jv)();
  i0 = mp_obj_new_int_from_ull(j0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_read_transaction(void) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = (*Z_envZ_transaction_sizeZ_iv)();
  l0 = i0;
  i0 = malloc_0(i0);
  l1 = i0;
  i1 = l0;
  i0 = (*Z_envZ_read_transactionZ_iii)(i0, i1);
  i0 = l1;
  i1 = l0;
  i0 = mp_obj_new_bytes(i0, i1);
  l0 = i0;
  i0 = l1;
  free_0(i0);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_tapos_block_num(void) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = (*Z_envZ_tapos_block_numZ_iv)();
  i0 = mp_obj_new_int(i0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_tapos_block_prefix(void) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = (*Z_envZ_tapos_block_prefixZ_iv)();
  i0 = mp_obj_new_int_from_uint(i0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_expiration(void) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  i0 = (*Z_envZ_expirationZ_iv)();
  j0 = (u64)(s64)(s32)(i0);
  i0 = mp_obj_new_int_from_ull(j0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_get_action(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  l0 = i0;
  i1 = p1;
  i1 = mp_obj_get_int(i1);
  l1 = i1;
  i2 = 0u;
  i3 = 0u;
  i0 = (*Z_envZ_get_actionZ_iiiii)(i0, i1, i2, i3);
  p1 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = l1;
  i2 = p1;
  i2 = malloc_0(i2);
  p0 = i2;
  i3 = p1;
  i0 = (*Z_envZ_get_actionZ_iiiii)(i0, i1, i2, i3);
  i0 = p0;
  i1 = p1;
  i0 = mp_obj_new_bytes(i0, i1);
  p1 = i0;
  i0 = p0;
  free_0(i0);
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 6u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_get_context_free_data(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i1 = p0;
  i2 = 0u;
  i3 = 0u;
  i1 = (*Z_envZ_get_context_free_dataZ_iiii)(i1, i2, i3);
  p0 = i1;
  i1 = malloc_0(i1);
  l0 = i1;
  i2 = p0;
  i0 = (*Z_envZ_get_context_free_dataZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = p0;
  i0 = mp_obj_new_bytes(i0, i1);
  p0 = i0;
  i0 = l0;
  free_0(i0);
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_token_create(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2;
  i0 = p0;
  j0 = obj_to_u64(i0);
  i1 = p1;
  j1 = obj_to_u64(i1);
  i2 = p2;
  j2 = obj_to_u64(i2);
  token_create(j0, j1, j2);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_token_issue(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i3, i4, i5;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i3 = p1;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  i4 = l0;
  i5 = 12u;
  i4 += i5;
  i3 = mp_obj_str_get_data(i3, i4);
  i4 = l0;
  i4 = i32_load((&M0), (u64)(i4 + 12));
  token_issue(j0, j1, j2, i3, i4);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_token_transfer(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i4, i5, i6;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  j0 = obj_to_u64(i0);
  l4 = j0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  j0 = l1;
  j1 = l2;
  j2 = l3;
  j3 = l4;
  i4 = p1;
  i4 = i32_load((&M0), (u64)(i4 + 16));
  i5 = l0;
  i6 = 12u;
  i5 += i6;
  i4 = mp_obj_str_get_data(i4, i5);
  i5 = l0;
  i5 = i32_load((&M0), (u64)(i5 + 12));
  token_transfer(j0, j1, j2, j3, i4, i5);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_token_open(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  j1 = obj_to_u64(i1);
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  j2 = obj_to_u64(i2);
  token_open(j0, j1, j2);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_token_retire(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  j0 = l1;
  j1 = l2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i2 = mp_obj_str_get_data(i2, i3);
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  token_retire(j0, j1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_token_close(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  j1 = obj_to_u64(i1);
  token_close(j0, j1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_get_log(void) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5808));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5812));
  i0 = mp_obj_new_bytes(i0, i1);
  goto Bfunc;
  B0:;
  i0 = 6u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_enable_log(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = p0;
  i1 = mp_obj_is_true(i1);
  i32_store((&M0), (u64)(i0 + 5804), i1);
  i0 = 30u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_get_code_version(void) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  j0 = get_code_version();
  i0 = mp_obj_new_int_from_ull(j0);
  FUNC_EPILOGUE;
  return i0;
}

static void nlr_jump(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5188));
  l0 = i0;
  if (i0) {goto B0;}
  i0 = p0;
  nlr_jump_fail(i0);
  UNREACHABLE;
  B0:;
  i0 = 1u;
  enable_log(i0);
  i0 = p0;
  mp_print_exception(i0);
  i0 = 0u;
  i1 = get_log();
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 1u;
  longjmp_ex(i0, i1);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static u32 mp_obj_dict_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = 31652u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i1 = 0u;
  mp_map_init(i0, i1);
  i0 = l1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 31728u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = p1;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B1;
  B2:;
  i0 = l2;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = p1;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p2;
  i2 = p3;
  i3 = p1;
  i4 = 2u;
  i3 <<= (i4 & 31);
  i2 += i3;
  mp_map_init_fixed_table(i0, i1, i2);
  i0 = p1;
  i1 = 1u;
  i0 += i1;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i0 = dict_update(i0, i1, i2);
  B0:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_update(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 >>= (i2 & 31);
  i2 = 131077u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 358u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  B5:;
  i0 = l1;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  l1 = i0;
  i0 = mp_iternext(i0);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  L6: vm_checktime();
    i0 = p0;
    i1 = 0u;
    i0 = mp_getiter(i0, i1);
    p0 = i0;
    i0 = mp_iternext(i0);
    p1 = i0;
    i0 = p0;
    i0 = mp_iternext(i0);
    l3 = i0;
    i0 = p0;
    i0 = mp_iternext(i0);
    p0 = i0;
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = p0;
    if (i0) {goto B3;}
    i0 = l2;
    i1 = p1;
    i2 = 1u;
    i0 = mp_map_lookup(i0, i1, i2);
    i1 = l3;
    i32_store((&M0), (u64)(i0 + 4), i1);
    i0 = l1;
    i0 = mp_iternext(i0);
    p0 = i0;
    if (i0) {goto L6;}
    goto B0;
  B4:;
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l5 = i0;
  i0 = 0u;
  p0 = i0;
  L7: vm_checktime();
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i0 = p0;
    i1 = 3u;
    i0 <<= (i1 & 31);
    l3 = i0;
    L9: vm_checktime();
      i0 = l2;
      i1 = l4;
      p0 = i1;
      i2 = 4294967295u;
      i1 += i2;
      i0 = i0 <= i1;
      if (i0) {goto B1;}
      i0 = l1;
      i1 = 12u;
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l3;
      i0 += i1;
      l4 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B10;}
      i0 = p0;
      i1 = 1u;
      i0 += i1;
      l4 = i0;
      i0 = l3;
      i1 = 8u;
      i0 += i1;
      l3 = i0;
      i0 = p0;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto L9;}
      goto B8;
      B10:;
    i0 = l4;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l4;
    i1 = 4u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i0 = l5;
    i1 = l6;
    i2 = 1u;
    i0 = mp_map_lookup(i0, i1, i2);
    i1 = l3;
    i32_store((&M0), (u64)(i0 + 4), i1);
    i0 = p0;
    i1 = p1;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l1 = i1;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = i0 < i1;
    if (i0) {goto L7;}
    B8:;
  i0 = l2;
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 8u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = 11877u;
  i1 = 17080u;
  i2 = 65u;
  i3 = 43562u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B3:;
  i0 = 10871u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B2:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B1:;
  i0 = 13209u;
  i1 = 13865u;
  i2 = 427u;
  i3 = 42625u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  i0 = 0u;
  p1 = i0;
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  l0 = i0;
  i0 = 4u;
  p0 = i0;
  L12: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p0;
    i0 += i1;
    l3 = i0;
    i1 = 4294967292u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 != i1;
    if (i0) {goto B13;}
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    p0 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L12;}
    goto B11;
    B13:;
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i0 = l4;
    i1 = l1;
    i2 = 1u;
    i0 = mp_map_lookup(i0, i1, i2);
    i1 = l3;
    i32_store((&M0), (u64)(i0 + 4), i1);
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    p0 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p2;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = i0 < i1;
    if (i0) {goto L12;}
  B11:;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_dict(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 31652u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  mp_map_init(i0, i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_dict_get(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  goto Bfunc;
  B0:;
  i0 = 36896u;
  i1 = p1;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_dict_copy(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = 31652u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  mp_map_init(i0, i1);
  i0 = l1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 7u;
  i1 &= i2;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 4294967288u;
  i2 &= i3;
  l0 = i2;
  i1 |= i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = l2;
  i2 = 4294967292u;
  i1 &= i2;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 1u;
  i2 &= i3;
  l2 = i2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = l2;
  i2 = l0;
  i1 |= i2;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 4u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = 3u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static void dict_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = 3u;
  i0 = i0 != i1;
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 31652u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = l2;
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 14541u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  B0:;
  i0 = p0;
  i1 = 15263u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 3u;
  i1 = 1u;
  i2 = p2;
  i3 = 3u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = p2;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = 0u;
  l4 = i0;
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  l5 = i0;
  i0 = 1u;
  l6 = i0;
  L6: vm_checktime();
    i0 = l4;
    i1 = 3u;
    i0 <<= (i1 & 31);
    p2 = i0;
    L10: vm_checktime();
      i0 = l2;
      i1 = l4;
      l7 = i1;
      i0 = i0 <= i1;
      if (i0) {goto B2;}
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = p2;
      i0 += i1;
      l8 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      l9 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B11;}
      i0 = p2;
      i1 = 8u;
      i0 += i1;
      p2 = i0;
      i0 = l7;
      i1 = 1u;
      i0 += i1;
      l4 = i0;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto L10;}
      goto B9;
      B11:;
    i0 = l8;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = l6;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B12;}
    i0 = p0;
    i1 = 15700u;
    i0 = mp_print_str(i0, i1);
    i0 = l8;
    i0 = i32_load((&M0), (u64)(i0));
    l9 = i0;
    B12:;
    i0 = l7;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i0 = l9;
    i1 = 7u;
    i0 &= i1;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B8;}
    i0 = l9;
    i1 = 3u;
    i0 &= i1;
    if (i0) {goto B13;}
    i0 = l9;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = i32_load((&M0), (u64)(i0 + 24));
    i1 = 82u;
    i0 = i0 == i1;
    if (i0) {goto B8;}
    B13:;
    i0 = p0;
    i1 = 16247u;
    i0 = mp_print_str(i0, i1);
    i0 = p0;
    i1 = l8;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l3;
    mp_obj_print_helper(i0, i1, i2);
    i0 = p0;
    i1 = 16247u;
    i0 = mp_print_str(i0, i1);
    goto B7;
    B9:;
    i0 = l7;
    i1 = 1u;
    i0 += i1;
    i1 = l2;
    i0 = i0 != i1;
    if (i0) {goto B4;}
    goto B3;
    B8:;
    i0 = p0;
    i1 = l9;
    i2 = l3;
    mp_obj_print_helper(i0, i1, i2);
    B7:;
    i0 = p0;
    i1 = 17500u;
    i0 = mp_print_str(i0, i1);
    i0 = p0;
    i1 = l8;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l3;
    mp_obj_print_helper(i0, i1, i2);
    i0 = 0u;
    l6 = i0;
    i0 = l4;
    i1 = p1;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = i0 < i1;
    if (i0) {goto L6;}
  i0 = l7;
  i1 = 1u;
  i0 += i1;
  i1 = l2;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  goto B3;
  B5:;
  i0 = 0u;
  l4 = i0;
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  l5 = i0;
  i0 = 1u;
  l6 = i0;
  L15: vm_checktime();
    i0 = l4;
    i1 = 3u;
    i0 <<= (i1 & 31);
    p2 = i0;
    L16: vm_checktime();
      i0 = l2;
      i1 = l4;
      l7 = i1;
      i0 = i0 <= i1;
      if (i0) {goto B2;}
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = p2;
      i0 += i1;
      l8 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      l9 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B17;}
      i0 = p2;
      i1 = 8u;
      i0 += i1;
      p2 = i0;
      i0 = l7;
      i1 = 1u;
      i0 += i1;
      l4 = i0;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto L16;}
      goto B14;
      B17:;
    i0 = l8;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = l7;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i0 = l6;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B18;}
    i0 = p0;
    i1 = 15700u;
    i0 = mp_print_str(i0, i1);
    i0 = l8;
    i0 = i32_load((&M0), (u64)(i0));
    l9 = i0;
    B18:;
    i0 = p0;
    i1 = l9;
    i2 = l3;
    mp_obj_print_helper(i0, i1, i2);
    i0 = p0;
    i1 = 17500u;
    i0 = mp_print_str(i0, i1);
    i0 = p0;
    i1 = l8;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l3;
    mp_obj_print_helper(i0, i1, i2);
    i0 = 0u;
    l6 = i0;
    i0 = l4;
    i1 = p1;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = i0 < i1;
    if (i0) {goto L15;}
  i0 = l7;
  i1 = 1u;
  i0 += i1;
  i1 = l2;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  goto B3;
  B14:;
  i0 = l7;
  i1 = 1u;
  i0 += i1;
  i1 = l2;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  B4:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 8u;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  B3:;
  i0 = p0;
  i1 = 17908u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 31652u;
  i0 = i0 == i1;
  i1 = l1;
  i2 = 1u;
  i1 ^= i2;
  i0 |= i1;
  if (i0) {goto B19;}
  i0 = p0;
  i1 = 18272u;
  i0 = mp_print_str(i0, i1);
  B19:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = 13209u;
  i1 = 13865u;
  i2 = 427u;
  i3 = 42625u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B1:;
  i0 = 11877u;
  i1 = 17080u;
  i2 = 65u;
  i3 = 43562u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 dict_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 14u;
  i1 = 30u;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 8u;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l0 = i0;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 36u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i3 = 4u;
  i2 += i3;
  i3 = p2;
  i4 = 0u;
  i2 = mp_map_lookup(i2, i3, i4);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B6;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 31728u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B6;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 31728u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  B6:;
  i0 = 14u;
  l0 = i0;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 31652u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 ^= i1;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  l3 = i0;
  i0 = 0u;
  p2 = i0;
  L9: vm_checktime();
    i0 = p2;
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    l4 = i1;
    i0 = i0 >= i1;
    if (i0) {goto B8;}
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p2;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p0 = i0;
    L11: vm_checktime();
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l5 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B10;}
      i0 = p0;
      i1 = 8u;
      i0 += i1;
      p0 = i0;
      i0 = p2;
      i1 = 1u;
      i0 += i1;
      p2 = i0;
      i1 = l4;
      i0 = i0 < i1;
      if (i0) {goto L11;}
      goto B8;
    B10:;
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B7;}
    i0 = l1;
    i1 = l5;
    i2 = 0u;
    i0 = mp_map_lookup(i0, i1, i2);
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p2;
    i1 = 1u;
    i0 += i1;
    p2 = i0;
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1 + 4));
    i0 = mp_obj_equal(i0, i1);
    if (i0) {goto L9;}
    goto B0;
  B8:;
  i0 = 30u;
  l0 = i0;
  i0 = p2;
  i1 = l4;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 8u;
  i0 = i0 >= i1;
  if (i0) {goto B4;}
  goto B0;
  B7:;
  i0 = 30u;
  goto Bfunc;
  B5:;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l4 = i0;
  i0 = !(i0);
  if (i0) {goto B18;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = 0u;
  l0 = i0;
  L19: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 != i1;
    if (i0) {goto B17;}
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    p0 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i1 = l4;
    i0 = i0 < i1;
    if (i0) {goto L19;}
  B18:;
  i0 = l0;
  i1 = l4;
  i0 = i0 == i1;
  if (i0) {goto B20;}
  i0 = 0u;
  p0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 8u;
  i0 = i0 < i1;
  if (i0) {goto B16;}
  i0 = 11877u;
  i1 = 17080u;
  i2 = 65u;
  i3 = 43562u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B20:;
  i0 = 0u;
  p0 = i0;
  i0 = 0u;
  l5 = i0;
  i0 = 0u;
  l4 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  if (i0) {goto B15;}
  goto B14;
  B17:;
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  l3 = i0;
  B16:;
  i0 = 0u;
  l5 = i0;
  i0 = 0u;
  l4 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B14;}
  B15:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  i0 = 0u;
  l4 = i0;
  L21: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 != i1;
    if (i0) {goto B13;}
    i0 = l0;
    i1 = 8u;
    i0 += i1;
    l0 = i0;
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L21;}
  B14:;
  i0 = l4;
  i1 = l2;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 8u;
  i0 = i0 < i1;
  if (i0) {goto B12;}
  i0 = 11877u;
  i1 = 17080u;
  i2 = 65u;
  i3 = 43562u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B13:;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B23;}
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B23;}
  i0 = l4;
  i1 = 1u;
  i0 += i1;
  l4 = i0;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  l1 = i0;
  i0 = l0;
  l5 = i0;
  L24: vm_checktime();
    i0 = 14u;
    l0 = i0;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = mp_obj_equal(i0, i1);
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    i1 = l5;
    i1 = i32_load((&M0), (u64)(i1 + 4));
    i0 = mp_obj_equal(i0, i1);
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l3;
    l0 = i0;
    i0 = l3;
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    l5 = i1;
    i0 = i0 >= i1;
    if (i0) {goto B27;}
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l3;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p0 = i0;
    i0 = l3;
    l0 = i0;
    L28: vm_checktime();
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B26;}
      i0 = p0;
      i1 = 8u;
      i0 += i1;
      p0 = i0;
      i0 = l0;
      i1 = 1u;
      i0 += i1;
      l0 = i0;
      i1 = l5;
      i0 = i0 < i1;
      if (i0) {goto L28;}
    B27:;
    i0 = 0u;
    p0 = i0;
    i0 = l0;
    i1 = l5;
    i0 = i0 == i1;
    if (i0) {goto B25;}
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 8u;
    i0 = i0 < i1;
    if (i0) {goto B25;}
    goto B3;
    B26:;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    B25:;
    i0 = l4;
    i1 = p2;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l0 = i1;
    i0 = i0 >= i1;
    if (i0) {goto B22;}
    i0 = p2;
    i1 = 12u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l4;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l5 = i0;
    L30: vm_checktime();
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B29;}
      i0 = l5;
      i1 = 8u;
      i0 += i1;
      l5 = i0;
      i0 = l4;
      i1 = 1u;
      i0 += i1;
      l4 = i0;
      i1 = l0;
      i0 = i0 < i1;
      if (i0) {goto L30;}
      goto B22;
    B29:;
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B12;}
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i0 = l5;
    if (i0) {goto L24;}
    goto B12;
  B23:;
  i0 = l0;
  l5 = i0;
  goto B12;
  B22:;
  i0 = 0u;
  l5 = i0;
  i0 = l4;
  i1 = l0;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 8u;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  B12:;
  i0 = 14u;
  i1 = 30u;
  i2 = p0;
  i3 = l5;
  i2 |= i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B4:;
  i0 = 11877u;
  i1 = 17080u;
  i2 = 65u;
  i3 = 43562u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B3:;
  i0 = 11877u;
  i1 = 17080u;
  i2 = 65u;
  i3 = 43562u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B2:;
  i0 = 11877u;
  i1 = 17080u;
  i2 = 65u;
  i3 = 43562u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_subscr(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p2;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = p2;
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p2 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = p1;
  i2 = 2u;
  i0 = mp_map_lookup(i0, i1, i2);
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 6u;
  goto Bfunc;
  B5:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  goto Bfunc;
  B4:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i0 = mp_map_lookup(i0, i1, i2);
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = 6u;
  goto Bfunc;
  B3:;
  i0 = 36896u;
  i1 = p1;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  B2:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B1:;
  i0 = 36896u;
  i1 = p1;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  B0:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_getiter(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 31788u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_dict_init(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 31652u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  mp_map_init(i0, i1);
  FUNC_EPILOGUE;
}

static u32 mp_obj_dict_len(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 3u;
  i0 >>= (i1 & 31);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_dict_store(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i2 = 1u;
  i0 = mp_map_lookup(i0, i1, i2);
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_dict_delete(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i2 = 2u;
  i0 = mp_map_lookup(i0, i1, i2);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = 36896u;
  i1 = p1;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  B0:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_iter_next(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 3u;
  i0 <<= (i1 & 31);
  l2 = i0;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l3 = i0;
  L4: vm_checktime();
    i0 = l1;
    i1 = l0;
    i0 = i0 <= i1;
    if (i0) {goto B1;}
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 += i1;
    l4 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 != i1;
    if (i0) {goto B2;}
    i0 = l2;
    i1 = 8u;
    i0 += i1;
    l2 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L4;}
  B3:;
  i0 = l0;
  i1 = l1;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 8u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  B5:;
  i0 = 0u;
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = l0;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  goto Bfunc;
  B1:;
  i0 = 13209u;
  i1 = 13865u;
  i2 = 427u;
  i3 = 42625u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = 11877u;
  i1 = 17080u;
  i2 = 65u;
  i3 = 43562u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_view_it_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p0;
  i2 = 12u;
  i1 += i2;
  i0 = dict_iter_next(i0, i1);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B1:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_clear(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  mp_map_clear(i0);
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_fromkeys(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  l0 = i0;
  i0 = 6u;
  l1 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  B0:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_len_maybe(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 16u;
  i0 = m_malloc(i0);
  l2 = i0;
  i1 = 31652u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  mp_map_init(i0, i1);
  i0 = l0;
  i0 = mp_iternext(i0);
  p1 = i0;
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = 16u;
  i0 = m_malloc(i0);
  l2 = i0;
  i1 = 31652u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  mp_map_init(i0, i1);
  i0 = l0;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  L4: vm_checktime();
    i0 = p0;
    i1 = p1;
    i2 = 1u;
    i0 = mp_map_lookup(i0, i1, i2);
    i1 = l1;
    i32_store((&M0), (u64)(i0 + 4), i1);
    i0 = l0;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L4;}
  B1:;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_get(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  if (i0) {goto B0;}
  B1:;
  i0 = 6u;
  l0 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_items(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 12u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 32064u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void dict_view_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = 2u;
  i1 <<= (i2 & 31);
  i2 = 32124u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = mp_print_str(i0, i1);
  i0 = p0;
  i1 = 19261u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  i0 = p1;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = 0u;
  l3 = i0;
  i0 = l1;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  i0 = 1u;
  l5 = i0;
  L9: vm_checktime();
    i0 = l3;
    i1 = 3u;
    i0 <<= (i1 & 31);
    p1 = i0;
    L10: vm_checktime();
      i0 = l2;
      i1 = l3;
      l6 = i1;
      i0 = i0 <= i1;
      if (i0) {goto B1;}
      i0 = l4;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = p1;
      i0 += i1;
      l3 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      l7 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B11;}
      i0 = p1;
      i1 = 8u;
      i0 += i1;
      p1 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      l3 = i0;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto L10;}
      goto B6;
      B11:;
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l5;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B12;}
    i0 = p0;
    i1 = 15700u;
    i0 = mp_print_str(i0, i1);
    B12:;
    i0 = p0;
    i1 = l7;
    i2 = 1u;
    mp_obj_print_helper(i0, i1, i2);
    i0 = 0u;
    l5 = i0;
    i0 = l3;
    i1 = l1;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = i0 < i1;
    if (i0) {goto L9;}
  i0 = l6;
  i1 = 1u;
  i0 += i1;
  i1 = l2;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  goto B2;
  B8:;
  i0 = 0u;
  l3 = i0;
  i0 = l1;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  i0 = 1u;
  l7 = i0;
  L13: vm_checktime();
    i0 = l3;
    i1 = 3u;
    i0 <<= (i1 & 31);
    p1 = i0;
    L14: vm_checktime();
      i0 = l2;
      i1 = l3;
      l6 = i1;
      i0 = i0 <= i1;
      if (i0) {goto B1;}
      i0 = l4;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = p1;
      i0 += i1;
      l3 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B15;}
      i0 = p1;
      i1 = 8u;
      i0 += i1;
      p1 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      l3 = i0;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto L14;}
      goto B5;
      B15:;
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l7;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B16;}
    i0 = p0;
    i1 = 15700u;
    i0 = mp_print_str(i0, i1);
    B16:;
    i0 = p0;
    i1 = l2;
    i2 = 1u;
    mp_obj_print_helper(i0, i1, i2);
    i0 = 0u;
    l7 = i0;
    i0 = l3;
    i1 = l1;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = i0 < i1;
    if (i0) {goto L13;}
  i0 = l6;
  i1 = 1u;
  i0 += i1;
  i1 = l2;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  goto B2;
  B7:;
  i0 = 0u;
  l3 = i0;
  i0 = l1;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  i0 = 1u;
  l5 = i0;
  L17: vm_checktime();
    i0 = l3;
    i1 = 3u;
    i0 <<= (i1 & 31);
    p1 = i0;
    L18: vm_checktime();
      i0 = l2;
      i1 = l3;
      l6 = i1;
      i0 = i0 <= i1;
      if (i0) {goto B1;}
      i0 = l4;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = p1;
      i0 += i1;
      l3 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      l7 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B19;}
      i0 = p1;
      i1 = 8u;
      i0 += i1;
      p1 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      l3 = i0;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto L18;}
      goto B4;
      B19:;
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l0;
    i1 = l7;
    i32_store((&M0), (u64)(i0 + 8), i1);
    i0 = l0;
    i1 = 8u;
    i0 += i1;
    i1 = 4u;
    i0 += i1;
    i1 = l3;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = 2u;
    i1 = l0;
    i2 = 8u;
    i1 += i2;
    i0 = mp_obj_new_tuple(i0, i1);
    l2 = i0;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l5;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B20;}
    i0 = p0;
    i1 = 15700u;
    i0 = mp_print_str(i0, i1);
    B20:;
    i0 = p0;
    i1 = l2;
    i2 = 1u;
    mp_obj_print_helper(i0, i1, i2);
    i0 = 0u;
    l5 = i0;
    i0 = l3;
    i1 = l1;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = i0 < i1;
    if (i0) {goto L17;}
  i0 = l6;
  i1 = 1u;
  i0 += i1;
  i1 = l2;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  goto B2;
  B6:;
  i0 = l6;
  i1 = 1u;
  i0 += i1;
  i1 = l2;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  goto B2;
  B5:;
  i0 = l6;
  i1 = 1u;
  i0 += i1;
  i1 = l2;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  goto B2;
  B4:;
  i0 = l6;
  i1 = 1u;
  i0 += i1;
  i1 = l2;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B3:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 8u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  B2:;
  i0 = p0;
  i1 = 19466u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = 13209u;
  i1 = 13865u;
  i2 = 427u;
  i3 = 42625u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = 11877u;
  i1 = 17080u;
  i2 = 65u;
  i3 = 43562u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 dict_view_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 36u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 36u;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = p2;
  i0 = dict_binary_op(i0, i1, i2);
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_view_getiter(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 31788u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_keys(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 12u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 32064u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_pop(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i0 = mp_map_lookup(i0, i1, i2);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  goto Bfunc;
  B2:;
  i0 = p0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  goto Bfunc;
  B1:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B0:;
  i0 = 36896u;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_popitem(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 7u;
  i0 = i0 <= i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 29u;
  i0 <<= (i1 & 31);
  i1 = 31u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = l1;
  i2 = 3u;
  i1 >>= (i2 & 31);
  i2 = 4294967295u;
  i1 += i2;
  i0 &= i1;
  l2 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l3 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B5;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l4 = i0;
  L6: vm_checktime();
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 != i1;
    if (i0) {goto B4;}
    i0 = l4;
    i1 = 8u;
    i0 += i1;
    l4 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l3;
    i0 = i0 < i1;
    if (i0) {goto L6;}
  B5:;
  i0 = l2;
  i1 = l3;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  goto B0;
  B4:;
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i2 = 4294967288u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l4;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l4;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l4;
  j1 = 4ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  l4 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B3:;
  i0 = 11877u;
  i1 = 17080u;
  i2 = 65u;
  i3 = 43562u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B2:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B1:;
  i0 = 36896u;
  i1 = 20508u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B0:;
  i0 = 20734u;
  i1 = 17080u;
  i2 = 346u;
  i3 = 43577u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_setdefault(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 1u;
  i0 = mp_map_lookup(i0, i1, i2);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = 6u;
  l1 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  B2:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_values(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 12u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 32064u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 2u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 object_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 0u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 4u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 object___init__(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 object___new__(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32308u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 379u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_new_instance(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 10909u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_instance(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i0 = instance_count_native_bases(i0, i1);
  l0 = i0;
  i1 = 2u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 16u;
  i0 += i1;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  mp_map_init(i0, i1);
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 32296u;
  i32_store((&M0), (u64)(i0 + 16), i1);
  B1:;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 10931u;
  i1 = 11904u;
  i2 = 101u;
  i3 = 43590u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 instance_count_native_bases(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 32172u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  L4: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    i1 = 379u;
    i0 = i0 != i1;
    if (i0) {goto B3;}
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0 + 52));
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto B1;}
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 33872u;
    i0 = i0 == i1;
    if (i0) {goto B2;}
    i0 = p0;
    i1 = 32172u;
    i0 = i0 != i1;
    if (i0) {goto L4;}
    goto B1;
  B3:;
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 1u;
  goto Bfunc;
  B2:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l2 = i0;
  i1 = l1;
  i0 = i0 <= i1;
  if (i0) {goto B1;}
  i0 = 0u;
  l0 = i0;
  L5: vm_checktime();
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    i1 = 3u;
    i0 &= i1;
    if (i0) {goto B0;}
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 32308u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = p0;
    i1 = p1;
    i0 = instance_count_native_bases(i0, i1);
    i1 = l0;
    i0 += i1;
    l0 = i0;
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L5;}
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 15703u;
  i1 = 11904u;
  i2 = 72u;
  i3 = 43685u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_instance_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 379u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 40), j1);
  i0 = l0;
  i1 = 12u;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  j1 = 103079215104ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 32), i1);
  i0 = l0;
  i1 = l0;
  i2 = 40u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p0;
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  l1 = i0;
  i1 = 4u;
  i0 |= i1;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = instance_count_native_bases(i0, i1);
  l2 = i0;
  i1 = 2u;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  i0 = l2;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 16u;
  i0 += i1;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  mp_map_init(i0, i1);
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = l1;
  i1 = 32296u;
  i32_store((&M0), (u64)(i0 + 16), i1);
  goto B5;
  B6:;
  i0 = p2;
  i1 = p1;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = p2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l1 = i0;
  i1 = p1;
  i2 = 1u;
  i1 += i2;
  l3 = i1;
  i0 += i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i0 = m_malloc(i0);
  l2 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i1 = p3;
  i2 = l1;
  i3 = p1;
  i2 += i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i1 = l3;
  i2 = p2;
  i3 = l2;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  l1 = i0;
  i0 = l2;
  m_free(i0);
  i0 = l1;
  i0 = mp_obj_get_type(i0);
  i1 = p0;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  goto B5;
  B7:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = 1u;
  i2 = 0u;
  i3 = l0;
  i4 = 8u;
  i3 += i4;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  l1 = i0;
  i0 = mp_obj_get_type(i0);
  i1 = p0;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  B5:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 40), j1);
  i0 = l0;
  j1 = 17ull;
  i64_store((&M0), (u64)(i0 + 20), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p0;
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p2;
  i1 = p1;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = p1;
  i0 += i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  l2 = i0;
  i1 = 8u;
  i0 += i1;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 40));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 44));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = p3;
  i2 = l2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = p2;
  i2 = p0;
  i0 = mp_call_method_n_kw(i0, i1, i2);
  l2 = i0;
  i0 = p0;
  m_free(i0);
  i0 = l2;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  goto B2;
  B9:;
  i0 = 0u;
  i1 = 0u;
  i2 = l0;
  i3 = 40u;
  i2 += i3;
  i0 = mp_call_method_n_kw(i0, i1, i2);
  l2 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B8:;
  i0 = l0;
  i1 = l2;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 13226u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B4:;
  i0 = 17090u;
  i1 = 11904u;
  i2 = 279u;
  i3 = 43610u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B3:;
  i0 = 10931u;
  i1 = 11904u;
  i2 = 101u;
  i3 = 43590u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B2:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = 32296u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = l1;
  i1 = 16u;
  i0 += i1;
  i1 = p0;
  i2 = p1;
  i3 = p2;
  i4 = p3;
  i5 = p0;
  i5 = i32_load((&M0), (u64)(i5 + 12));
  i1 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i5, i1, i2, i3, i4);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_class_lookup(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l2 = i0;
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  l3 = i0;
  L8: vm_checktime();
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    l0 = i0;
    i0 = !(i0);
    if (i0) {goto B9;}
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    i1 = 379u;
    i0 = i0 == i1;
    if (i0) {goto B9;}
    i0 = p1;
    i1 = l0;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    if (i0) {goto B6;}
    B9:;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0 + 56));
    l0 = i0;
    i0 = !(i0);
    if (i0) {goto B10;}
    i0 = l0;
    i1 = 3u;
    i0 &= i1;
    if (i0) {goto B3;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = i32_load((&M0), (u64)(i0 + 12));
    i1 = 358u;
    i0 = i0 != i1;
    if (i0) {goto B3;}
    i0 = l0;
    i1 = 4u;
    i0 += i1;
    i1 = p0;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 3u;
    i1 <<= (i2 & 31);
    i2 = 2u;
    i1 |= i2;
    i2 = 0u;
    i0 = mp_map_lookup(i0, i1, i2);
    l0 = i0;
    if (i0) {goto B7;}
    B10:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l0 = i0;
    i0 = !(i0);
    if (i0) {goto B12;}
    i0 = l3;
    i0 = i32_load8_u((&M0), (u64)(i0));
    if (i0) {goto B12;}
    i0 = p1;
    i1 = 32172u;
    i0 = i0 == i1;
    if (i0) {goto B12;}
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    i1 = 379u;
    i0 = i0 == i1;
    if (i0) {goto B12;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 16));
    i1 = p0;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l2;
    i2 = i32_load((&M0), (u64)(i2));
    mp_load_method_maybe(i0, i1, i2);
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = i32_load((&M0), (u64)(i0));
    if (i0) {goto B11;}
    B12:;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0 + 52));
    p1 = i0;
    i0 = !(i0);
    if (i0) {goto B11;}
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 33872u;
    i0 = i0 == i1;
    if (i0) {goto B13;}
    i0 = p1;
    i1 = 32172u;
    i0 = i0 != i1;
    if (i0) {goto L8;}
    goto B11;
    B13:;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    l4 = i0;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    l5 = i0;
    i0 = p1;
    i1 = 8u;
    i0 += i1;
    l0 = i0;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0 + 8));
    p1 = i0;
    i1 = 3u;
    i0 &= i1;
    i0 = !(i0);
    l6 = i0;
    i0 = l4;
    i1 = l5;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l5 = i0;
    i1 = l0;
    i0 = i0 <= i1;
    if (i0) {goto B14;}
    L15: vm_checktime();
      i0 = l6;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B4;}
      i0 = p1;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = 32308u;
      i0 = i0 != i1;
      if (i0) {goto B4;}
      i0 = p1;
      i1 = 32172u;
      i0 = i0 == i1;
      if (i0) {goto B16;}
      i0 = p0;
      i1 = p1;
      mp_obj_class_lookup(i0, i1);
      i0 = l2;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = i32_load((&M0), (u64)(i0));
      if (i0) {goto B11;}
      B16:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 4));
      p1 = i0;
      i1 = 3u;
      i0 &= i1;
      i0 = !(i0);
      l6 = i0;
      i0 = l0;
      i1 = 4u;
      i0 += i1;
      l4 = i0;
      l0 = i0;
      i0 = l4;
      i1 = l5;
      i0 = i0 < i1;
      if (i0) {goto L15;}
    B14:;
    i0 = l6;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 32308u;
    i0 = i0 != i1;
    if (i0) {goto B2;}
    i0 = p1;
    i1 = 32172u;
    i0 = i0 != i1;
    if (i0) {goto L8;}
    B11:;
  goto Bfunc;
  B7:;
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = 0u;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p0;
  i4 = 12u;
  i3 += i4;
  i3 = i32_load((&M0), (u64)(i3));
  mp_convert_member_lookup(i0, i1, i2, i3);
  goto Bfunc;
  B6:;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B5:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B17;}
  i0 = p1;
  i1 = 32172u;
  i0 = i0 == i1;
  if (i0) {goto B17;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 379u;
  i0 = i0 == i1;
  if (i0) {goto B17;}
  i0 = l6;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l6 = i0;
  B17:;
  i0 = l6;
  i1 = p1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p0;
  i4 = 12u;
  i3 += i4;
  i3 = i32_load((&M0), (u64)(i3));
  mp_convert_member_lookup(i0, i1, i2, i3);
  goto Bfunc;
  B4:;
  i0 = 15703u;
  i1 = 11904u;
  i2 = 210u;
  i3 = 43713u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B3:;
  i0 = 17910u;
  i1 = 11904u;
  i2 = 156u;
  i3 = 43713u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B2:;
  i0 = 15703u;
  i1 = 11904u;
  i2 = 223u;
  i3 = 43713u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B1:;
  i0 = 16249u;
  i1 = 11904u;
  i2 = 137u;
  i3 = 43713u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = 17503u;
  i1 = 11904u;
  i2 = 138u;
  i3 = 43713u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_instance_is_callable(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  j1 = 68719476745ull;
  i64_store((&M0), (u64)(i0 + 12), j1);
  i0 = l0;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 0u;
  i0 = i0 != i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_instance_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  j1 = 68719476745ull;
  i64_store((&M0), (u64)(i0 + 28), j1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  i2 = p1;
  i3 = p2;
  i4 = p3;
  i0 = mp_call_method_self_n_kw(i0, i1, i2, i3, i4);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 13871u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_instance_getiter(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 154618822675ull;
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l2;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = p1;
  if (i0) {goto B2;}
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  B2:;
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i2 = l1;
  i2 = i32_load((&M0), (u64)(i2 + 36));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32), 5, i2, i0, i1);
  l1 = i0;
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  i1 = 0u;
  i2 = l0;
  i3 = 24u;
  i2 += i3;
  i0 = mp_call_method_n_kw(i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void type_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 18274u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 type_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 131078u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i1 = 3u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  goto Bfunc;
  B1:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_str_get_qstr(i0);
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = p3;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i0 = mp_obj_new_type(i0, i1, i2);
  goto Bfunc;
  B0:;
  i0 = 18437u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_type(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33872u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 358u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_obj_tuple_get(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = 0u;
  l2 = i0;
  i0 = 28u;
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l4 = i0;
  L8: vm_checktime();
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i1 = 3u;
    i0 &= i1;
    if (i0) {goto B5;}
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 32308u;
    i0 = i0 != i1;
    if (i0) {goto B5;}
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    l6 = i0;
    i0 = !(i0);
    if (i0) {goto B4;}
    i0 = l6;
    i1 = 379u;
    i0 = i0 != i1;
    if (i0) {goto B9;}
    i0 = l5;
    i1 = l5;
    i1 = i32_load16_u((&M0), (u64)(i1 + 4));
    l6 = i1;
    i2 = 1u;
    i1 |= i2;
    i32_store16((&M0), (u64)(i0 + 4), i1);
    i0 = l6;
    i1 = 2u;
    i0 &= i1;
    i1 = l3;
    i0 |= i1;
    l3 = i0;
    B9:;
    i0 = l4;
    i1 = 4u;
    i0 += i1;
    l4 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L8;}
    goto B6;
  B7:;
  i0 = 28u;
  l3 = i0;
  B6:;
  i0 = 60u;
  i0 = m_malloc0(i0);
  l6 = i0;
  i1 = l3;
  i32_store16((&M0), (u64)(i0 + 4), i1);
  i0 = l6;
  i1 = 32308u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l6;
  i1 = p0;
  i32_store16((&M0), (u64)(i0 + 6), i1);
  i0 = l6;
  i1 = 383u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l6;
  i1 = 379u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l6;
  i1 = 384u;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l6;
  i1 = 385u;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l6;
  i1 = 386u;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l6;
  i1 = 387u;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l6;
  i1 = 388u;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l6;
  i1 = 389u;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l6;
  i1 = 390u;
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l5 = i0;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l6;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l4 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i1 = i32_load((&M0), (u64)(i1 + 48));
  i32_store((&M0), (u64)(i0 + 48), i1);
  i0 = l5;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B10;}
  i0 = l6;
  i1 = l4;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 52), i1);
  B11:;
  i0 = l6;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 56), i1);
  i0 = 2u;
  p1 = i0;
  i0 = l3;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  goto B1;
  B10:;
  i0 = l6;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 52), i1);
  i0 = l6;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 56), i1);
  i0 = 2u;
  p1 = i0;
  i0 = l3;
  i1 = 2u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  goto B0;
  B5:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B4:;
  i0 = l0;
  i1 = l5;
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 14545u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B3:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B2:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B1:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  l5 = i0;
  i0 = p2;
  i1 = 12u;
  i0 += i1;
  p2 = i0;
  i0 = 4u;
  l4 = i0;
  L13: vm_checktime();
    i0 = l2;
    i1 = l5;
    i0 = i0 <= i1;
    if (i0) {goto B12;}
    i0 = p2;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l4;
    i0 += i1;
    l1 = i0;
    i1 = 4294967292u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 == i1;
    if (i0) {goto B15;}
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i1 = 3u;
    i0 &= i1;
    if (i0) {goto B15;}
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 25976u;
    i0 = i0 == i1;
    if (i0) {goto B14;}
    B15:;
    i0 = l4;
    i1 = 8u;
    i0 += i1;
    l4 = i0;
    i0 = l5;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L13;}
    goto B0;
    B14:;
  i0 = l6;
  i1 = 4u;
  i0 += i1;
  i1 = l3;
  i2 = 2u;
  i1 |= i2;
  i32_store16((&M0), (u64)(i0), i1);
  goto B0;
  B12:;
  i0 = 20023u;
  i1 = 20220u;
  i2 = 427u;
  i3 = 42647u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = l6;
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = instance_count_native_bases(i0, i1);
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B16;}
  i0 = l6;
  i1 = 56u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4u;
  i0 += i1;
  i1 = 194u;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l5 = i0;
  i0 = !(i0);
  if (i0) {goto B17;}
  i0 = l5;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l4 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B17;}
  i0 = l4;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load16_u((&M0), (u64)(i0 + 6));
  i1 = 321u;
  i0 = i0 != i1;
  if (i0) {goto B17;}
  i0 = 1u;
  i1 = 0u;
  i2 = 131074u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 8u;
  i0 = m_malloc(i0);
  l4 = i0;
  i1 = l5;
  i2 = 4u;
  i1 += i2;
  l5 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l4;
  i1 = 32368u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l5;
  i1 = l4;
  i32_store((&M0), (u64)(i0), i1);
  B17:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l6;
  goto Bfunc;
  B16:;
  i0 = 15265u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 type_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i4 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 18684u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void type_attr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32308u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 56));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = l1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 358u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l1;
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p0;
  i0 = i32_load16_u((&M0), (u64)(i0 + 4));
  l3 = i0;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B8;}
  i0 = l2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B8;}
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 25976u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  i0 = l3;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l3;
  i2 = 2u;
  i1 |= i2;
  i32_store16((&M0), (u64)(i0), i1);
  B8:;
  i0 = l1;
  i1 = p1;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i2 = 1u;
  i0 = mp_map_lookup(i0, i1, i2);
  i1 = p2;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B7:;
  i0 = p1;
  i1 = 173u;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  i0 = p1;
  i1 = 169u;
  i0 = i0 == i1;
  if (i0) {goto B11;}
  i0 = p1;
  i1 = 23u;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  i0 = p2;
  i1 = p0;
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B11:;
  i0 = p0;
  i1 = 32172u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 52));
  p0 = i1;
  i2 = 32172u;
  i3 = p0;
  i1 = i3 ? i1 : i2;
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B13;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33872u;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  B13:;
  i0 = 1u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  B12:;
  i0 = p2;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B10:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 56));
  p0 = i0;
  i1 = 31712u;
  i2 = p0;
  i0 = i2 ? i0 : i1;
  p0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p2;
  i1 = p0;
  i1 = mp_obj_dict_copy(i1);
  p0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B9:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = 1u;
  i32_store8((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B6:;
  i0 = l1;
  i1 = p1;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i2 = 2u;
  i0 = mp_map_lookup(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  B5:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B4:;
  i0 = p2;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B3:;
  i0 = p2;
  i1 = 33864u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = 18851u;
  i1 = 11904u;
  i2 = 1003u;
  i3 = 43733u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B1:;
  i0 = 19046u;
  i1 = 11904u;
  i2 = 1059u;
  i3 = 43733u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = 36596u;
  i1 = 19264u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void instance_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 40), j1);
  i0 = l0;
  i1 = 27u;
  i2 = 29u;
  i3 = p2;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = 8u;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 32), i1);
  i0 = l0;
  i1 = l0;
  i2 = 40u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  l1 = i0;
  i0 = p2;
  if (i0) {goto B0;}
  i0 = l1;
  if (i0) {goto B0;}
  i0 = l0;
  j1 = 27ull;
  i64_store((&M0), (u64)(i0 + 20), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  l1 = i0;
  B0:;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 391u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = p1;
  i2 = 16u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p2;
  mp_obj_print_helper(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B3:;
  i0 = p1;
  i0 = mp_obj_get_type_str(i0);
  l1 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 19469u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = p0;
  i1 = l1;
  i2 = p1;
  i1 = mp_call_function_1(i1, i2);
  i2 = 0u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i1 = qstr_str(i1);
  i0 = mp_print_str(i0, i1);
  B4:;
  i0 = p0;
  i1 = p1;
  i2 = 16u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p2;
  i3 = 128u;
  i2 |= i3;
  mp_obj_print_helper(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 instance_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  i1 = p0;
  i2 = 43635u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 20u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l2;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i0 = mp_unary_op(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B3:;
  i0 = p0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 175u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B2:;
  i0 = l2;
  i1 = p1;
  i0 = mp_call_function_1(i0, i1);
  l1 = i0;
  i0 = p0;
  i1 = 8u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l1;
  i0 = mp_obj_get_int_truncated(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B4:;
  i0 = l1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 instance_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  l1 = i0;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 12u;
  i0 += i1;
  l2 = i0;
  L1: vm_checktime();
    i0 = l0;
    i1 = 32u;
    i0 += i1;
    i1 = 8u;
    i0 += i1;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 8u;
    i0 += i1;
    i1 = 8u;
    i0 += i1;
    i1 = 24u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l0;
    j1 = 0ull;
    i64_store((&M0), (u64)(i0 + 32), j1);
    i0 = l2;
    i1 = l0;
    i2 = 32u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = p0;
    i2 = 43648u;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = l0;
    i1 = p1;
    i32_store((&M0), (u64)(i0 + 8), i1);
    i0 = l0;
    i1 = 8u;
    i0 += i1;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    mp_obj_class_lookup(i0, i1);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    l3 = i0;
    if (i0) {goto B0;}
    i0 = p0;
    i1 = 4294967287u;
    i0 += i1;
    i1 = 12u;
    i0 = i0 > i1;
    if (i0) {goto B2;}
    i0 = p0;
    i1 = 13u;
    i0 += i1;
    p0 = i0;
    goto L1;
    B2:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = l3;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i2 = p2;
  i0 = mp_binary_op(i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B3:;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = 1u;
  i1 = 0u;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  i0 = mp_call_method_n_kw(i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_instance_attr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i1 = 2u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i1 = l2;
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = l2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B10;}
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 25976u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  B10:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i0 = p1;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  p1 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i0 = mp_map_lookup(i0, i1, i2);
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  goto B1;
  B9:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 379u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i1 = p1;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  l3 = i1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = p2;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B8:;
  i0 = p0;
  i1 = p1;
  i2 = 2u;
  i0 = mp_map_lookup(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B1;
  B7:;
  i0 = p1;
  i1 = 173u;
  i0 = i0 != i1;
  if (i0) {goto B11;}
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  i1 = l2;
  i2 = 8u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 31652u;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = l2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 28), j1);
  i0 = p2;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i1 = mp_obj_dict_copy(i1);
  p0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B11:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i1 = 2u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 25976u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = mp_obj_property_get(i0);
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = p0;
  i2 = 1u;
  i3 = 0u;
  i4 = l0;
  i5 = 16u;
  i4 += i5;
  i1 = mp_call_function_n_kw(i1, i2, i3, i4);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B6:;
  i0 = l2;
  i0 = mp_obj_property_get(i0);
  p1 = i0;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 2u;
  i2 = 0u;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  goto B1;
  B5:;
  i0 = p1;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 14u;
  i2 = l0;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = 1u;
  i2 = 0u;
  i3 = l0;
  i1 = mp_call_method_n_kw(i1, i2, i3);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B4:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 1u;
  i2 = 0u;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  goto B1;
  B3:;
  i0 = 19657u;
  i1 = 11904u;
  i2 = 579u;
  i3 = 43743u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B2:;
  i0 = 36596u;
  i1 = 19854u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B1:;
  i0 = p2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 instance_subscr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = l0;
  j1 = 137438953472ull;
  i64_store((&M0), (u64)(i0 + 12), j1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = 15u;
  i2 = 28u;
  i3 = p2;
  i4 = 4u;
  i3 = i3 == i4;
  i1 = i3 ? i1 : i2;
  i2 = 11u;
  i3 = p2;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = l0;
  i2 = 32u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l2;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = p1;
  i2 = p2;
  i0 = mp_obj_subscr(i0, i1, i2);
  l1 = i0;
  B1:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 1u;
  i1 = 2u;
  i2 = p2;
  i3 = 4u;
  i2 = i2 == i3;
  p0 = i2;
  i0 = i2 ? i0 : i1;
  i1 = 1u;
  i2 = p2;
  i0 = i2 ? i0 : i1;
  i1 = 0u;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  i0 = mp_call_method_n_kw(i0, i1, i2);
  p2 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  i1 = 6u;
  i2 = p0;
  i0 = i2 ? i0 : i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 instance_get_buffer(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 188978561025ull;
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 1u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = p1;
  i2 = p2;
  i3 = l1;
  i3 = i32_load((&M0), (u64)(i3 + 44));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 1, i3, i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 static_class_method_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 32368u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 32504u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p1;
  i1 = p2;
  i2 = 131074u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 8u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 21545u;
  i1 = 11904u;
  i2 = 1423u;
  i3 = 43884u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void super_print(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 20342u;
  i0 = mp_print_str(i0, i1);
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 0u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = p0;
  i1 = 20539u;
  i0 = mp_print_str(i0, i1);
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = 0u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = p0;
  i1 = 20739u;
  i0 = mp_print_str(i0, i1);
  FUNC_EPILOGUE;
}

static u32 super_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = p1;
  i1 = p2;
  i2 = 262148u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32308u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 12u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p3;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void super_attr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32428u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32308u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = 17u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 12u;
  i32_store((&M0), (u64)(i0), i1);
  B3:;
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 52));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33872u;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  i0 = p1;
  i1 = 32172u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  mp_obj_class_lookup(i0, i1);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  if (i0) {goto B6;}
  goto B5;
  B8:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i0 = 0u;
  l4 = i0;
  L9: vm_checktime();
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i1 = 3u;
    i0 &= i1;
    if (i0) {goto B4;}
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 32308u;
    i0 = i0 != i1;
    if (i0) {goto B4;}
    i0 = p1;
    i1 = 32172u;
    i0 = i0 == i1;
    if (i0) {goto B10;}
    i0 = l0;
    i1 = 8u;
    i0 += i1;
    i1 = p1;
    mp_obj_class_lookup(i0, i1);
    i0 = p2;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto B7;}
    B10:;
    i0 = l2;
    i1 = 4u;
    i0 += i1;
    l2 = i0;
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = l3;
    i0 = i0 < i1;
    if (i0) {goto L9;}
  B7:;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B5;}
  B6:;
  i0 = l1;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 32296u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B5:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 32172u;
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B4:;
  i0 = 21135u;
  i1 = 11904u;
  i2 = 1278u;
  i3 = 43873u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B2:;
  i0 = 43769u;
  i1 = 11904u;
  i2 = 1250u;
  i3 = 43873u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B1:;
  i0 = 20919u;
  i1 = 11904u;
  i2 = 1253u;
  i3 = 43873u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_load_super_method(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 32428u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 4));
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = l0;
  i1 = p0;
  i2 = p1;
  mp_load_method(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 mp_obj_is_subclass_fast(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  L2: vm_checktime();
    i0 = 0u;
    l0 = i0;
    i0 = p0;
    i1 = 3u;
    i0 &= i1;
    if (i0) {goto B0;}
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 32308u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0 + 52));
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 33872u;
    i0 = i0 != i1;
    if (i0) {goto B3;}
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    l2 = i0;
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    l0 = i0;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0 + 8));
    p0 = i0;
    i0 = l1;
    i1 = l2;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l1 = i0;
    i1 = l0;
    i0 = i0 <= i1;
    if (i0) {goto B3;}
    L4: vm_checktime();
      i0 = p0;
      i1 = p1;
      i0 = mp_obj_is_subclass_fast(i0, i1);
      if (i0) {goto B1;}
      i0 = l0;
      i1 = 4u;
      i0 += i1;
      l0 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      p0 = i0;
      i0 = l0;
      i1 = l1;
      i0 = i0 < i1;
      if (i0) {goto L4;}
    B3:;
    i0 = p0;
    i1 = p1;
    i0 = i0 != i1;
    if (i0) {goto L2;}
  B1:;
  i0 = 1u;
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_issubclass(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32308u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 32308u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 33872u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = 4u;
  i2 += i3;
  mp_obj_tuple_get(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  goto B3;
  B4:;
  i0 = 1u;
  l2 = i0;
  i0 = l0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  p1 = i0;
  B3:;
  i0 = 0u;
  l3 = i0;
  L6: vm_checktime();
    i0 = 30u;
    l4 = i0;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i1 = 32172u;
    i0 = i0 == i1;
    if (i0) {goto B5;}
    i0 = p0;
    i1 = l1;
    i0 = mp_obj_is_subclass_fast(i0, i1);
    if (i0) {goto B5;}
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L6;}
  i0 = 14u;
  l4 = i0;
  B5:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  goto Bfunc;
  B1:;
  i0 = 21248u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B0:;
  i0 = 21406u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_isinstance(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = 32308u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 33872u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = 4u;
  i2 += i3;
  mp_obj_tuple_get(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  goto B2;
  B3:;
  i0 = 1u;
  l2 = i0;
  i0 = l0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  p1 = i0;
  B2:;
  i0 = 0u;
  l3 = i0;
  L5: vm_checktime();
    i0 = 30u;
    l4 = i0;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    i1 = 32172u;
    i0 = i0 == i1;
    if (i0) {goto B4;}
    i0 = l1;
    i1 = p0;
    i0 = mp_obj_is_subclass_fast(i0, i1);
    if (i0) {goto B4;}
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L5;}
  i0 = 14u;
  l4 = i0;
  B4:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  goto Bfunc;
  B0:;
  i0 = 21406u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_cast_to_native_base(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l0 = i0;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = p1;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  B1:;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 native_base_init_wrapper(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = instance_count_native_bases(i0, i1);
  i0 = l1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  l2 = i1;
  i2 = p0;
  i3 = 4294967295u;
  i2 += i3;
  i3 = 0u;
  i4 = p1;
  i5 = 4u;
  i4 += i5;
  i5 = l2;
  i5 = i32_load((&M0), (u64)(i5 + 12));
  i1 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i5, i1, i2, i3, i4);
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static void none_print(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p2;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 10952u;
  i0 = mp_print_str(i0, i1);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 11914u;
  i0 = mp_print_str(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_get_type(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 32624u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 3u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_get_type_str(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 32624u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 3u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load16_u((&M0), (u64)(i0 + 6));
  i0 = qstr_str(i0);
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_print_helper(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 32624u;
  i0 += i1;
  i1 = p1;
  i2 = p1;
  i3 = 3u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = l2;
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = 10957u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = l1;
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 11919u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_obj_print_exception(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = mp_obj_is_exception_instance(i0);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i1 = l0;
  i2 = 44u;
  i1 += i2;
  i2 = l0;
  i3 = 40u;
  i2 += i3;
  mp_obj_exception_get_traceback(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 44));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 3u;
  i0 = REM_U(i0, i1);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 13898u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 44));
  l1 = i0;
  i1 = 4294967293u;
  i0 += i1;
  l2 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 4294967292u;
  i0 += i1;
  l1 = i0;
  L2: vm_checktime();
    i0 = l0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 40));
    i2 = l1;
    i1 += i2;
    i2 = 4294967288u;
    i1 += i2;
    j1 = i64_load((&M0), (u64)(i1));
    i64_store((&M0), (u64)(i0 + 32), j1);
    i0 = p0;
    i1 = 14585u;
    i2 = l0;
    i3 = 32u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 40));
    i1 = l1;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = l0;
    i1 = l3;
    i32_store((&M0), (u64)(i0 + 16), i1);
    i0 = p0;
    i1 = 15740u;
    i2 = l0;
    i3 = 16u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = l1;
    i1 = 4294967284u;
    i0 += i1;
    l1 = i0;
    i0 = l2;
    i1 = 4294967293u;
    i0 += i1;
    l2 = i0;
    i1 = 4294967295u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L2;}
    goto B1;
    B3:;
    i0 = p0;
    i1 = 15311u;
    i0 = mp_print_str(i0, i1);
    i0 = l1;
    i1 = 4294967284u;
    i0 += i1;
    l1 = i0;
    i0 = l2;
    i1 = 4294967293u;
    i0 += i1;
    l2 = i0;
    i1 = 4294967295u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L2;}
  B1:;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p1;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 32624u;
  i0 += i1;
  i1 = p1;
  i2 = p1;
  i3 = 3u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p0;
  i1 = p1;
  i2 = 2u;
  i3 = l1;
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
  goto B4;
  B6:;
  i0 = p0;
  i1 = 10957u;
  i0 = mp_print_str(i0, i1);
  goto B4;
  B5:;
  i0 = l0;
  i1 = l2;
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 11919u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  B4:;
  i0 = p0;
  i1 = 15311u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = 17120u;
  i1 = 13266u;
  i2 = 129u;
  i3 = 43913u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_is_true(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 30u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = 1u;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B9;}
  i0 = p0;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 32624u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 3u;
  i2 &= i3;
  l1 = i2;
  i0 = i2 ? i0 : i1;
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = 4u;
  i1 = p0;
  i2 = l0;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32), 5, i2, i0, i1);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l0;
  i1 = 30u;
  i0 = i0 == i1;
  goto Bfunc;
  B9:;
  i0 = p0;
  i1 = 1u;
  i0 = i0 != i1;
  goto Bfunc;
  B8:;
  i0 = 0u;
  l0 = i0;
  i0 = l1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33004u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i0 = qstr_len(i0);
  p0 = i0;
  goto B5;
  B7:;
  i0 = l1;
  if (i0) {goto B11;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33004u;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  B11:;
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = 5u;
  i1 = p0;
  i2 = l0;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32), 5, i2, i0, i1);
  l0 = i0;
  goto B2;
  B12:;
  i0 = 0u;
  l0 = i0;
  goto B2;
  B10:;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i0 = qstr_len(i0);
  p0 = i0;
  goto B3;
  B6:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  B5:;
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l0 = i0;
  goto B2;
  B4:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  B3:;
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l0 = i0;
  B2:;
  i0 = l0;
  i1 = 1u;
  i0 = i0 != i1;
  l0 = i0;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_len_maybe(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  l0 = i0;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33004u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 32624u;
  i0 += i1;
  i1 = p0;
  i2 = l0;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 5u;
  i1 = p0;
  i2 = l0;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32), 5, i2, i0, i1);
  goto Bfunc;
  B2:;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i0 = qstr_len(i0);
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B3:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_is_callable(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 32624u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 3u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l0 = i0;
  i1 = 384u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 0u;
  i0 = i0 != i1;
  goto Bfunc;
  B0:;
  i0 = p0;
  i0 = mp_obj_instance_is_callable(i0);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_equal_not_equal(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 14u;
  i1 = 30u;
  i2 = p0;
  i3 = 5u;
  i2 = i2 == i3;
  l0 = i2;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p1;
  i1 = p2;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 32624u;
  i0 += i1;
  i1 = p1;
  i2 = p1;
  i3 = 3u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i1 = 4u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 30u;
  i1 = 14u;
  i2 = l0;
  i0 = i2 ? i0 : i1;
  l2 = i0;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  l3 = i0;
  if (i0) {goto B5;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33304u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  B5:;
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B7;}
  i0 = 0u;
  l0 = i0;
  i0 = p1;
  l4 = i0;
  goto B6;
  B7:;
  i0 = 0u;
  l0 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = l2;
  goto Bfunc;
  B8:;
  i0 = 1u;
  l5 = i0;
  goto B3;
  B6:;
  i0 = 5u;
  l5 = i0;
  goto B3;
  B4:;
  i0 = p2;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = 0u;
  l0 = i0;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B10;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33304u;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  goto B2;
  B10:;
  i0 = 1u;
  l5 = i0;
  goto B3;
  B9:;
  i0 = 1u;
  l5 = i0;
  B3:;
  L11: vm_checktime();
    i0 = l5;
    switch (i0) {
      case 0: goto B30;
      case 1: goto B34;
      case 2: goto B22;
      case 3: goto B21;
      case 4: goto B33;
      case 5: goto B32;
      case 6: goto B31;
      case 7: goto B29;
      case 8: goto B28;
      case 9: goto B27;
      case 10: goto B26;
      case 11: goto B25;
      case 12: goto B24;
      case 13: goto B23;
      default: goto B23;
    }
    B34:;
    i0 = l0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B16;}
    i0 = 4u;
    l5 = i0;
    goto L11;
    B33:;
    i0 = p2;
    i1 = 3u;
    i0 &= i1;
    l3 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = p2;
    l4 = i0;
    i0 = p2;
    l6 = i0;
    i0 = p1;
    p2 = i0;
    i0 = l6;
    p1 = i0;
    i0 = 5u;
    l5 = i0;
    goto L11;
    B32:;
    i0 = l4;
    i1 = 15u;
    i0 &= i1;
    i1 = 2u;
    i0 <<= (i1 & 31);
    i1 = 32624u;
    i0 += i1;
    i1 = p1;
    i2 = l3;
    i0 = i2 ? i0 : i1;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i0 = i32_load((&M0), (u64)(i0 + 24));
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B20;}
    i0 = 6u;
    l5 = i0;
    goto L11;
    B31:;
    i0 = l3;
    i0 = i32_load16_u((&M0), (u64)(i0 + 4));
    l6 = i0;
    i1 = 8u;
    i0 &= i1;
    if (i0) {goto B17;}
    i0 = 0u;
    l5 = i0;
    goto L11;
    B30:;
    i0 = p2;
    i1 = 15u;
    i0 &= i1;
    i1 = 2u;
    i0 <<= (i1 & 31);
    i1 = 32624u;
    i0 += i1;
    i1 = p2;
    i2 = p2;
    i3 = 3u;
    i2 &= i3;
    i0 = i2 ? i0 : i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l3;
    i0 = i0 != i1;
    if (i0) {goto B18;}
    i0 = 7u;
    l5 = i0;
    goto L11;
    B29:;
    i0 = l6;
    i1 = 16u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B13;}
    i0 = 8u;
    l5 = i0;
    goto L11;
    B28:;
    i0 = p0;
    i1 = 5u;
    i0 = i0 != i1;
    if (i0) {goto B12;}
    i0 = 9u;
    l5 = i0;
    goto L11;
    B27:;
    i0 = 5u;
    i1 = p1;
    i2 = p2;
    i3 = l4;
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 1, i3, i0, i1, i2);
    l4 = i0;
    if (i0) {goto B15;}
    i0 = 10u;
    l5 = i0;
    goto L11;
    B26:;
    i0 = l3;
    i1 = 24u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    i0 = 11u;
    l5 = i0;
    goto L11;
    B25:;
    i0 = 2u;
    i1 = p1;
    i2 = p2;
    i3 = l4;
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 1, i3, i0, i1, i2);
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B19;}
    i0 = 12u;
    l5 = i0;
    goto L11;
    B24:;
    i0 = p0;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B14;}
    i0 = 13u;
    l5 = i0;
    goto L11;
    B23:;
    i0 = l1;
    i1 = l2;
    i2 = l4;
    i2 = mp_obj_is_true(i2);
    i0 = i2 ? i0 : i1;
    goto Bfunc;
    B22:;
    i0 = l1;
    i1 = l2;
    i2 = p2;
    i3 = p1;
    i2 = i2 == i3;
    i0 = i2 ? i0 : i1;
    l4 = i0;
    i0 = 3u;
    l5 = i0;
    goto L11;
    B21:;
    i0 = l4;
    goto Bfunc;
    B20:;
    i0 = 1u;
    l5 = i0;
    goto L11;
    B19:;
    i0 = 1u;
    l5 = i0;
    goto L11;
    B18:;
    i0 = 1u;
    l5 = i0;
    goto L11;
    B17:;
    i0 = 7u;
    l5 = i0;
    goto L11;
    B16:;
    i0 = 2u;
    l5 = i0;
    goto L11;
    B15:;
    i0 = 3u;
    l5 = i0;
    goto L11;
    B14:;
    i0 = 3u;
    l5 = i0;
    goto L11;
    B13:;
    i0 = 11u;
    l5 = i0;
    goto L11;
    B12:;
    i0 = 11u;
    l5 = i0;
    goto L11;
  B2:;
  i0 = l1;
  i1 = l2;
  i2 = p1;
  i3 = p2;
  i2 = mp_obj_str_equal(i2, i3);
  i0 = i2 ? i0 : i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_equal(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 2u;
  i1 = p0;
  i2 = p1;
  i0 = mp_obj_equal_not_equal(i0, i1, i2);
  i0 = mp_obj_is_true(i0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_get_int(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 30u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 1u;
  goto Bfunc;
  B1:;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B4:;
  i0 = 8u;
  i1 = p0;
  i0 = mp_unary_op(i0, i1);
  i0 = mp_obj_int_get_checked(i0);
  goto Bfunc;
  B3:;
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  goto Bfunc;
  B2:;
  i0 = p0;
  i0 = mp_obj_int_get_checked(i0);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_get_int_truncated(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  l0 = i0;
  if (i0) {goto B3;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B3:;
  i0 = p0;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 30u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 1u;
  goto Bfunc;
  B2:;
  i0 = p0;
  i0 = mp_obj_int_get_truncated(i0);
  goto Bfunc;
  B1:;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = l0;
  if (i0) {goto B5;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  B5:;
  i0 = 8u;
  i1 = p0;
  i0 = mp_unary_op(i0, i1);
  i0 = mp_obj_int_get_checked(i0);
  goto Bfunc;
  B4:;
  i0 = p0;
  i0 = mp_obj_int_get_checked(i0);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_get_int_maybe(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 30u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 14u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto B1;
  B3:;
  i0 = p1;
  i1 = 1u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 1u;
  goto Bfunc;
  B2:;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = p0;
  i1 = mp_obj_int_get_checked(i1);
  i32_store((&M0), (u64)(i0), i1);
  goto B1;
  B4:;
  i0 = p1;
  i1 = p0;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0), i1);
  B1:;
  i0 = 1u;
  l0 = i0;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_get_float_maybe(u32 p0, u32 p1) {
  u32 l1 = 0, l2 = 0;
  f64 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  f64 d0, d1;
  i0 = p0;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 30u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  d0 = 1;
  l0 = d0;
  goto B1;
  B3:;
  d0 = 0;
  l0 = d0;
  goto B1;
  B2:;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 33608u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  d0 = mp_obj_float_get(i0);
  l0 = d0;
  goto B1;
  B5:;
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  d0 = (f64)(s32)(i0);
  l0 = d0;
  goto B1;
  B4:;
  i0 = p0;
  d0 = mp_obj_int_as_float_impl(i0);
  l0 = d0;
  B1:;
  i0 = p1;
  d1 = l0;
  f64_store((&M0), (u64)(i0), d1);
  i0 = 1u;
  l1 = i0;
  B0:;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static f64 mp_obj_get_float(u32 p0) {
  u32 l0 = 0, l1 = 0;
  f64 l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 30u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = 1;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = 0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 33608u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  d0 = mp_obj_float_get(i0);
  l2 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = l2;
  goto Bfunc;
  B4:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  d0 = (f64)(s32)(i0);
  goto Bfunc;
  B3:;
  i0 = p0;
  d0 = mp_obj_int_as_float_impl(i0);
  l2 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = l2;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 16280u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static u32 mp_obj_get_complex_maybe(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  f64 d1;
  i0 = p0;
  i1 = 30u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 14u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  goto B1;
  B3:;
  i0 = p1;
  j1 = 4607182418800017408ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  goto B1;
  B2:;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B6;}
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l1;
  i1 = 33608u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 23328u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  mp_obj_complex_get(i0, i1, i2);
  goto B1;
  B6:;
  i0 = p1;
  i1 = p0;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  d1 = (f64)(s32)(i1);
  f64_store((&M0), (u64)(i0), d1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  goto B1;
  B5:;
  i0 = p1;
  i1 = p0;
  d1 = mp_obj_int_as_float_impl(i1);
  f64_store((&M0), (u64)(i0), d1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  goto B1;
  B4:;
  i0 = p1;
  i1 = p0;
  d1 = mp_obj_float_get(i1);
  f64_store((&M0), (u64)(i0), d1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  B1:;
  i0 = 1u;
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_get_complex(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  f64 d1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 30u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 14u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = p1;
  j1 = 4607182418800017408ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 33608u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 23328u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  mp_obj_complex_get(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B5:;
  i0 = p1;
  i1 = p0;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  d1 = (f64)(s32)(i1);
  f64_store((&M0), (u64)(i0), d1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B4:;
  i0 = p1;
  i1 = p0;
  d1 = mp_obj_int_as_float_impl(i1);
  f64_store((&M0), (u64)(i0), d1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B3:;
  i0 = p1;
  i1 = p0;
  d1 = mp_obj_float_get(i1);
  f64_store((&M0), (u64)(i0), d1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 17534u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_obj_get_array(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 33872u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 24420u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  mp_obj_list_get(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  mp_obj_tuple_get(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 17976u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_get_index(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B7;}
  i0 = p2;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = p2;
  i1 = 30u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = 1u;
  p2 = i0;
  i0 = p3;
  if (i0) {goto B2;}
  goto B1;
  B7:;
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  p2 = i0;
  goto B4;
  B6:;
  i0 = 0u;
  p2 = i0;
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B1;}
  goto B2;
  B5:;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p2;
  i0 = mp_obj_int_get_checked(i0);
  p2 = i0;
  B4:;
  i0 = p2;
  i1 = 31u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = p1;
  i0 &= i1;
  i1 = p2;
  i0 += i1;
  p2 = i0;
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B1;}
  goto B2;
  B3:;
  i0 = p0;
  i0 = i32_load16_u((&M0), (u64)(i0 + 6));
  p1 = i0;
  i0 = l0;
  i1 = p2;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 37376u;
  i1 = 18465u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B2:;
  i0 = 0u;
  p3 = i0;
  i0 = p2;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = p2;
  i3 = p1;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B8;}
  i0 = p2;
  p3 = i0;
  i0 = p2;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  B8:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i32_store((&M0), (u64)(i0), i1);
  i0 = 36836u;
  i1 = 18712u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_id(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = mp_obj_new_int(i0);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B1:;
  i0 = p0;
  i0 = mp_obj_new_int_from_uint(i0);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_len(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  l1 = i0;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33004u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 32624u;
  i0 += i1;
  i1 = p0;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 5u;
  i1 = p0;
  i2 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32), 5, i2, i0, i1);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i0 = qstr_len(i0);
  p0 = i0;
  goto B3;
  B4:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  B3:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 18890u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_subscr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 32624u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 3u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 32));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = l2;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 1, i3, i0, i1, i2);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = p2;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 19112u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B1:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load16_u((&M0), (u64)(i0 + 6));
  i0 = qstr_str(i0);
  p0 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 37376u;
  i1 = 19317u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B2:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = 37376u;
  i1 = 19487u;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_identity(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_identity_getiter(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_get_buffer(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 32624u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 3u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 44));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = l0;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 1, i3, i0, i1, i2);
  i0 = !(i0);
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_get_buffer_raise(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 32624u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 3u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 44));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = l0;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 1, i3, i0, i1, i2);
  if (i0) {goto B0;}
  goto Bfunc;
  B0:;
  i0 = 19707u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_generic_unary_op(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  i1 = 0u;
  i2 = p0;
  i3 = 6u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_str_print_quoted(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 144u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = p2;
  i0 += i1;
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p1;
  l3 = i0;
  L5: vm_checktime();
    i0 = 1u;
    l4 = i0;
    i0 = l3;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    i1 = 39u;
    i0 = i0 == i1;
    if (i0) {goto B6;}
    i0 = l5;
    i1 = 34u;
    i0 = i0 == i1;
    if (i0) {goto B3;}
    i0 = l2;
    l4 = i0;
    B6:;
    i0 = l4;
    l2 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L5;}
  i0 = 39u;
  l3 = i0;
  i0 = 34u;
  l5 = i0;
  i0 = l4;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  goto B1;
  B4:;
  i0 = 39u;
  l3 = i0;
  i0 = l0;
  i1 = 39u;
  i32_store((&M0), (u64)(i0 + 128), i1);
  i0 = p0;
  i1 = 10963u;
  i2 = l0;
  i3 = 128u;
  i2 += i3;
  i0 = mp_printf(i0, i1, i2);
  goto B0;
  B3:;
  i0 = 39u;
  l5 = i0;
  i0 = 39u;
  l3 = i0;
  i0 = l2;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  i0 = l5;
  l3 = i0;
  B1:;
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = p0;
  i1 = 10963u;
  i2 = l0;
  i3 = 112u;
  i2 += i3;
  i0 = mp_printf(i0, i1, i2);
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B7;}
  L8: vm_checktime();
    i0 = l3;
    i1 = p1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    l4 = i1;
    i0 = i0 != i1;
    if (i0) {goto B9;}
    i0 = l0;
    i1 = l3;
    i32_store((&M0), (u64)(i0 + 16), i1);
    i0 = p0;
    i1 = 11924u;
    i2 = l0;
    i3 = 16u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L8;}
    goto B0;
    B9:;
    i0 = l4;
    i1 = 92u;
    i0 = i0 != i1;
    if (i0) {goto B10;}
    i0 = p0;
    i1 = 17131u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L8;}
    goto B0;
    B10:;
    i0 = l4;
    i1 = 32u;
    i0 = i0 < i1;
    if (i0) {goto B11;}
    i0 = l4;
    i1 = 127u;
    i0 = i0 == i1;
    if (i0) {goto B11;}
    i0 = l4;
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 24u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B11;}
    i0 = l0;
    i1 = l4;
    i32_store((&M0), (u64)(i0 + 32), i1);
    i0 = p0;
    i1 = 10963u;
    i2 = l0;
    i3 = 32u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L8;}
    goto B0;
    B11:;
    i0 = l4;
    i1 = 9u;
    i0 = i0 == i1;
    if (i0) {goto B14;}
    i0 = l4;
    i1 = 13u;
    i0 = i0 == i1;
    if (i0) {goto B13;}
    i0 = l4;
    i1 = 10u;
    i0 = i0 != i1;
    if (i0) {goto B12;}
    i0 = p0;
    i1 = 13272u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L8;}
    goto B0;
    B14:;
    i0 = p0;
    i1 = 14606u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L8;}
    goto B0;
    B13:;
    i0 = p0;
    i1 = 13934u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L8;}
    goto B0;
    B12:;
    i0 = l0;
    i1 = l4;
    i32_store((&M0), (u64)(i0 + 48), i1);
    i0 = p0;
    i1 = 15313u;
    i2 = l0;
    i3 = 48u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L8;}
    goto B0;
  B7:;
  L15: vm_checktime();
    i0 = l3;
    i1 = p1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    l4 = i1;
    i0 = i0 != i1;
    if (i0) {goto B16;}
    i0 = l0;
    i1 = l3;
    i32_store((&M0), (u64)(i0 + 64), i1);
    i0 = p0;
    i1 = 11924u;
    i2 = l0;
    i3 = 64u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L15;}
    goto B0;
    B16:;
    i0 = l4;
    i1 = 92u;
    i0 = i0 != i1;
    if (i0) {goto B17;}
    i0 = p0;
    i1 = 17131u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L15;}
    goto B0;
    B17:;
    i0 = l4;
    i1 = 32u;
    i0 = i0 < i1;
    if (i0) {goto B18;}
    i0 = l4;
    i1 = 127u;
    i0 = i0 == i1;
    if (i0) {goto B18;}
    i0 = l0;
    i1 = l4;
    i32_store((&M0), (u64)(i0 + 96), i1);
    i0 = p0;
    i1 = 10963u;
    i2 = l0;
    i3 = 96u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L15;}
    goto B0;
    B18:;
    i0 = l4;
    i1 = 13u;
    i0 = i0 == i1;
    if (i0) {goto B21;}
    i0 = l4;
    i1 = 10u;
    i0 = i0 == i1;
    if (i0) {goto B20;}
    i0 = l4;
    i1 = 9u;
    i0 = i0 != i1;
    if (i0) {goto B19;}
    i0 = p0;
    i1 = 14606u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L15;}
    goto B0;
    B21:;
    i0 = p0;
    i1 = 13934u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L15;}
    goto B0;
    B20:;
    i0 = p0;
    i1 = 13272u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L15;}
    goto B0;
    B19:;
    i0 = l0;
    i1 = l4;
    i32_store((&M0), (u64)(i0 + 80), i1);
    i0 = p0;
    i1 = 15313u;
    i2 = l0;
    i3 = 80u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L15;}
  B0:;
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 10963u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 144u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void mp_str_print_json(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 15749u;
  i0 = mp_print_str(i0, i1);
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = p2;
  i0 += i1;
  l1 = i0;
  L1: vm_checktime();
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p2 = i0;
    i1 = 92u;
    i0 = i0 == i1;
    if (i0) {goto B3;}
    i0 = p2;
    i1 = 34u;
    i0 = i0 != i1;
    if (i0) {goto B2;}
    B3:;
    i0 = l0;
    i1 = p2;
    i32_store((&M0), (u64)(i0 + 32), i1);
    i0 = p0;
    i1 = 11924u;
    i2 = l0;
    i3 = 32u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L1;}
    goto B0;
    B2:;
    i0 = p2;
    i1 = 32u;
    i0 = i0 < i1;
    if (i0) {goto B4;}
    i0 = l0;
    i1 = p2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 10963u;
    i2 = l0;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L1;}
    goto B0;
    B4:;
    i0 = p2;
    i1 = 9u;
    i0 = i0 == i1;
    if (i0) {goto B7;}
    i0 = p2;
    i1 = 13u;
    i0 = i0 == i1;
    if (i0) {goto B6;}
    i0 = p2;
    i1 = 10u;
    i0 = i0 != i1;
    if (i0) {goto B5;}
    i0 = p0;
    i1 = 13272u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L1;}
    goto B0;
    B7:;
    i0 = p0;
    i1 = 14606u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L1;}
    goto B0;
    B6:;
    i0 = p0;
    i1 = 13934u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L1;}
    goto B0;
    B5:;
    i0 = l0;
    i1 = p2;
    i32_store((&M0), (u64)(i0 + 16), i1);
    i0 = p0;
    i1 = 16306u;
    i2 = l0;
    i3 = 16u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L1;}
  B0:;
  i0 = p0;
  i1 = 15749u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 mp_obj_str_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 0u;
  i2 = 6u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 16u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  vstr_init_print(i0, i1, i2);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 0u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = p0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 10u;
  goto Bfunc;
  B3:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = 33004u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = p2;
  i1 = 25184u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = mp_obj_name_to_str_obj(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B5:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p2 = i0;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  goto B6;
  B7:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  B6:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B10;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i0 = qstr_hash(i0);
  p3 = i0;
  if (i0) {goto B8;}
  goto B9;
  B10:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p3 = i0;
  if (i0) {goto B8;}
  B9:;
  i0 = p2;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i0 = qstr_compute_hash(i0, i1);
  p3 = i0;
  B8:;
  i0 = p2;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i0 = utf8_check(i0, i1);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p2;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i0 = qstr_find_strn(i0, i1);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  goto Bfunc;
  B11:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = p3;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B2:;
  mp_arg_error_unimpl_kw();
  UNREACHABLE;
  B1:;
  i0 = 37496u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B0:;
  i0 = p1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  i0 = utf8_check(i0, i1);
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p2 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  p1 = i1;
  i0 = qstr_find_strn(i0, i1);
  p3 = i0;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p3;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  goto Bfunc;
  B13:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p3 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p3;
  i1 = 33304u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = p3;
  i1 = p2;
  i2 = p1;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p3;
  i1 = p1;
  i2 = 1u;
  i1 += i2;
  i1 = m_malloc(i1);
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = p2;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p1;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  B14:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p3;
  goto Bfunc;
  B12:;
  i0 = 37496u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_str_from_vstr(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 33304u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = qstr_find_strn(i0, i1);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  vstr_clear(i0);
  i0 = p1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  l1 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  l2 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p0;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = l1;
  i0 = m_realloc(i0, i1);
  p0 = i0;
  B1:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_str(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i0 = qstr_find_strn(i0, i1);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 33304u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i1 = p0;
  i2 = p1;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p1;
  i2 = 1u;
  i1 += i2;
  i1 = m_malloc(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p0;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p1;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  B1:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 find_subbytes(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = 0u;
  l0 = i0;
  i0 = p1;
  i1 = p3;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 0u;
  i2 = p1;
  i3 = p3;
  i2 -= i3;
  l1 = i2;
  i3 = p4;
  i4 = 0u;
  i3 = (u32)((s32)i3 > (s32)i4);
  l2 = i3;
  i1 = i3 ? i1 : i2;
  p1 = i1;
  i0 += i1;
  l0 = i0;
  i1 = p2;
  i2 = p3;
  i0 = memcmp_0(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 0u;
  i2 = l2;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i1 = p4;
  i0 += i1;
  l2 = i0;
  L2: vm_checktime();
    i0 = l1;
    i1 = p1;
    i0 = i0 == i1;
    if (i0) {goto B0;}
    i0 = l2;
    i1 = p1;
    i0 += i1;
    l0 = i0;
    i0 = p1;
    i1 = p4;
    i0 += i1;
    l3 = i0;
    p1 = i0;
    i0 = l0;
    i1 = p2;
    i2 = p3;
    i0 = memcmp_0(i0, i1, i2);
    if (i0) {goto L2;}
  i0 = p0;
  i1 = l3;
  i0 += i1;
  l0 = i0;
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_str_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0, l15 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6, i7;
  f64 d0, d1;
  i0 = g0;
  i1 = 80u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = p0;
  i1 = 33u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = l0;
  i1 = l0;
  i2 = 20u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 1u;
  l1 = i0;
  i0 = l0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 0u;
  l2 = i0;
  i0 = l0;
  i1 = 20u;
  i0 += i1;
  l3 = i0;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = 33872u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = p2;
  i1 = 0u;
  i2 = p0;
  i3 = 31652u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l2 = i0;
  goto B3;
  B5:;
  i0 = p1;
  i0 = mp_obj_get_type(i0);
  l4 = i0;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 32u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l5 = i0;
  i0 = p0;
  i1 = 29u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  goto B1;
  B7:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l5 = i0;
  i0 = p0;
  i1 = 29u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  B6:;
  i0 = 0u;
  p2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i0 = mp_obj_get_int_maybe(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 48));
  p1 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 56u;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 32));
  i2 = p1;
  i1 *= i2;
  vstr_init_len(i0, i1);
  i0 = l5;
  i1 = 1u;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 32));
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 48));
  i4 = l0;
  i4 = i32_load((&M0), (u64)(i4 + 64));
  mp_seq_multiply(i0, i1, i2, i3, i4);
  i0 = l4;
  i1 = l0;
  i2 = 56u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = p2;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_obj_tuple_get(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  B3:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 76u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l8 = i0;
  goto B8;
  B9:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 76), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l8 = i0;
  B8:;
  i0 = 0u;
  l9 = i0;
  i0 = 0u;
  l10 = i0;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B10;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33004u;
  i0 = i0 == i1;
  l10 = i0;
  B10:;
  i0 = l0;
  i1 = 56u;
  i0 += i1;
  i1 = 16u;
  i2 = l0;
  i3 = 48u;
  i2 += i3;
  vstr_init_print(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 76));
  p1 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B11;}
  i0 = l8;
  i1 = p1;
  i0 += i1;
  p0 = i0;
  i0 = l10;
  i1 = 1u;
  i0 ^= i1;
  l11 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 33328));
  i1 = 82u;
  i0 = i0 == i1;
  l12 = i0;
  i0 = l8;
  l4 = i0;
  i0 = 0u;
  l9 = i0;
  L12: vm_checktime();
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p1 = i0;
    i1 = 37u;
    i0 = i0 != i1;
    if (i0) {goto B30;}
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p0;
    i0 = i0 >= i1;
    if (i0) {goto B21;}
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p2 = i0;
    i1 = 40u;
    i0 = i0 == i1;
    if (i0) {goto B29;}
    i0 = 0u;
    l13 = i0;
    i0 = p2;
    i1 = 37u;
    i0 = i0 != i1;
    if (i0) {goto B28;}
    i0 = l0;
    i1 = 56u;
    i0 += i1;
    i1 = 37u;
    vstr_add_byte(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L12;}
    goto B11;
    B30:;
    i0 = l0;
    i1 = 56u;
    i0 += i1;
    i1 = p1;
    vstr_add_byte(i0, i1);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L12;}
    goto B11;
    B29:;
    i0 = l2;
    i0 = !(i0);
    if (i0) {goto B26;}
    i0 = l4;
    i1 = 2u;
    i0 += i1;
    l6 = i0;
    l5 = i0;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0 + 2));
    i1 = 41u;
    i0 = i0 == i1;
    if (i0) {goto B31;}
    i0 = l6;
    p1 = i0;
    L32: vm_checktime();
      i0 = p1;
      i1 = p0;
      i0 = i0 >= i1;
      if (i0) {goto B27;}
      i0 = p1;
      i0 = i32_load8_u((&M0), (u64)(i0 + 1));
      p2 = i0;
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      l5 = i0;
      p1 = i0;
      i0 = p2;
      i1 = 41u;
      i0 = i0 != i1;
      if (i0) {goto L32;}
    B31:;
    i0 = 1u;
    l9 = i0;
    i0 = l5;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i0 = l2;
    i1 = l6;
    i2 = l5;
    i3 = l6;
    i2 -= i3;
    i1 = qstr_from_strn(i1, i2);
    i2 = 3u;
    i1 <<= (i2 & 31);
    i2 = 2u;
    i1 |= i2;
    i0 = mp_obj_dict_get(i0, i1);
    l13 = i0;
    B28:;
    i0 = p1;
    i1 = p0;
    i0 = i0 >= i1;
    if (i0) {goto B35;}
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i0 = 32u;
    l14 = i0;
    i0 = 0u;
    p2 = i0;
    i0 = 0u;
    l7 = i0;
    L36: vm_checktime();
      i0 = p2;
      l6 = i0;
      i0 = 16u;
      p2 = i0;
      i0 = p1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l15 = i0;
      i1 = 4294967264u;
      i0 += i1;
      l5 = i0;
      i1 = 16u;
      i0 = i0 > i1;
      if (i0) {goto B34;}
      i0 = l5;
      switch (i0) {
        case 0: goto B42;
        case 1: goto B34;
        case 2: goto B34;
        case 3: goto B37;
        case 4: goto B34;
        case 5: goto B34;
        case 6: goto B34;
        case 7: goto B34;
        case 8: goto B34;
        case 9: goto B34;
        case 10: goto B33;
        case 11: goto B39;
        case 12: goto B34;
        case 13: goto B40;
        case 14: goto B34;
        case 15: goto B34;
        case 16: goto B41;
        default: goto B42;
      }
      B42:;
      i0 = l7;
      i1 = 4u;
      i0 |= i1;
      l7 = i0;
      goto B38;
      B41:;
      i0 = l7;
      i1 = 64u;
      i0 |= i1;
      l7 = i0;
      i0 = 48u;
      l14 = i0;
      goto B38;
      B40:;
      i0 = l7;
      i1 = 1u;
      i0 |= i1;
      l7 = i0;
      goto B38;
      B39:;
      i0 = l7;
      i1 = 2u;
      i0 |= i1;
      l7 = i0;
      B38:;
      i0 = l6;
      p2 = i0;
      B37:;
      i0 = l4;
      i1 = 1u;
      i0 += i1;
      l4 = i0;
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i1 = p0;
      i0 = i0 < i1;
      if (i0) {goto L36;}
    i0 = 0u;
    l5 = i0;
    i0 = 4294967295u;
    l6 = i0;
    i0 = p1;
    i1 = p0;
    i0 = i0 >= i1;
    if (i0) {goto B24;}
    goto B25;
    B35:;
    i0 = 32u;
    l14 = i0;
    i0 = 0u;
    l7 = i0;
    i0 = 0u;
    p2 = i0;
    i0 = 0u;
    l5 = i0;
    i0 = 4294967295u;
    l6 = i0;
    i0 = p1;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto B25;}
    goto B24;
    B34:;
    i0 = 0u;
    l5 = i0;
    i0 = l15;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 9u;
    i0 = i0 > i1;
    if (i0) {goto B43;}
    i0 = 0u;
    l5 = i0;
    L44: vm_checktime();
      i0 = l15;
      i1 = 24u;
      i0 <<= (i1 & 31);
      i1 = 24u;
      i0 = (u32)((s32)i0 >> (i1 & 31));
      i1 = l5;
      i2 = 10u;
      i1 *= i2;
      i0 += i1;
      i1 = 4294967248u;
      i0 += i1;
      l5 = i0;
      i0 = l4;
      p1 = i0;
      i1 = p0;
      i0 = i0 >= i1;
      if (i0) {goto B43;}
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      l4 = i0;
      i0 = p1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l15 = i0;
      i1 = 4294967248u;
      i0 += i1;
      i1 = 255u;
      i0 &= i1;
      i1 = 10u;
      i0 = i0 < i1;
      if (i0) {goto L44;}
    B43:;
    i0 = l6;
    p2 = i0;
    i0 = 4294967295u;
    l6 = i0;
    i0 = p1;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto B25;}
    goto B24;
    B33:;
    i0 = l9;
    i1 = l1;
    i0 = i0 >= i1;
    if (i0) {goto B19;}
    i0 = l3;
    i1 = l9;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = mp_obj_get_int(i0);
    l5 = i0;
    i0 = l6;
    p2 = i0;
    i0 = l9;
    i1 = 1u;
    i0 += i1;
    l9 = i0;
    i0 = 4294967295u;
    l6 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto B25;}
    goto B24;
    B27:;
    i0 = 22201u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B26:;
    i0 = 22144u;
    mp_raise_TypeError(i0);
    UNREACHABLE;
    B25:;
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 46u;
    i0 = i0 != i1;
    if (i0) {goto B24;}
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 >= i1;
    if (i0) {goto B22;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l15 = i0;
    i1 = 42u;
    i0 = i0 != i1;
    if (i0) {goto B23;}
    i0 = l9;
    i1 = l1;
    i0 = i0 >= i1;
    if (i0) {goto B19;}
    i0 = l9;
    i1 = 1u;
    i0 += i1;
    l15 = i0;
    i0 = l3;
    i1 = l9;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = mp_obj_get_int(i0);
    l6 = i0;
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto B20;}
    goto B21;
    B24:;
    i0 = l9;
    l15 = i0;
    i0 = p1;
    l4 = i0;
    i1 = p0;
    i0 = i0 >= i1;
    if (i0) {goto B21;}
    goto B20;
    B23:;
    i0 = 0u;
    l6 = i0;
    i0 = l15;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 9u;
    i0 = i0 > i1;
    if (i0) {goto B22;}
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = 0u;
    l6 = i0;
    L45: vm_checktime();
      i0 = l15;
      i1 = 24u;
      i0 <<= (i1 & 31);
      i1 = 24u;
      i0 = (u32)((s32)i0 >> (i1 & 31));
      i1 = l6;
      i2 = 10u;
      i1 *= i2;
      i0 += i1;
      i1 = 4294967248u;
      i0 += i1;
      l6 = i0;
      i0 = p1;
      l4 = i0;
      i1 = p0;
      i0 = i0 >= i1;
      if (i0) {goto B22;}
      i0 = l4;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l15 = i0;
      i1 = 4294967248u;
      i0 += i1;
      i1 = 255u;
      i0 &= i1;
      i1 = 10u;
      i0 = i0 < i1;
      if (i0) {goto L45;}
    B22:;
    i0 = l9;
    l15 = i0;
    i0 = l4;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto B20;}
    B21:;
    i0 = 22308u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B20:;
    i0 = l13;
    i0 = !(i0);
    if (i0) {goto B46;}
    i0 = l15;
    l9 = i0;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l15 = i0;
    i1 = 4294967227u;
    i0 += i1;
    p1 = i0;
    i1 = 51u;
    i0 = i0 > i1;
    if (i0) {goto B17;}
    goto B18;
    B46:;
    i0 = l15;
    i1 = l1;
    i0 = i0 >= i1;
    if (i0) {goto B19;}
    i0 = l15;
    i1 = 1u;
    i0 += i1;
    l9 = i0;
    i0 = l3;
    i1 = l15;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l13 = i0;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l15 = i0;
    i1 = 4294967227u;
    i0 += i1;
    p1 = i0;
    i1 = 51u;
    i0 = i0 <= i1;
    if (i0) {goto B18;}
    goto B17;
    B19:;
    i0 = 22388u;
    mp_raise_TypeError(i0);
    UNREACHABLE;
    B18:;
    i0 = p1;
    switch (i0) {
      case 0: goto B54;
      case 1: goto B54;
      case 2: goto B54;
      case 3: goto B17;
      case 4: goto B17;
      case 5: goto B17;
      case 6: goto B17;
      case 7: goto B17;
      case 8: goto B17;
      case 9: goto B17;
      case 10: goto B17;
      case 11: goto B17;
      case 12: goto B17;
      case 13: goto B17;
      case 14: goto B17;
      case 15: goto B17;
      case 16: goto B17;
      case 17: goto B17;
      case 18: goto B17;
      case 19: goto B52;
      case 20: goto B17;
      case 21: goto B17;
      case 22: goto B17;
      case 23: goto B17;
      case 24: goto B17;
      case 25: goto B17;
      case 26: goto B17;
      case 27: goto B17;
      case 28: goto B17;
      case 29: goto B17;
      case 30: goto B50;
      case 31: goto B53;
      case 32: goto B54;
      case 33: goto B54;
      case 34: goto B54;
      case 35: goto B17;
      case 36: goto B53;
      case 37: goto B17;
      case 38: goto B17;
      case 39: goto B17;
      case 40: goto B17;
      case 41: goto B17;
      case 42: goto B49;
      case 43: goto B17;
      case 44: goto B17;
      case 45: goto B51;
      case 46: goto B51;
      case 47: goto B17;
      case 48: goto B53;
      case 49: goto B17;
      case 50: goto B17;
      case 51: goto B52;
      default: goto B54;
    }
    B54:;
    i0 = l0;
    i1 = 48u;
    i0 += i1;
    i1 = l13;
    d1 = mp_obj_get_float(i1);
    i2 = l4;
    i2 = i32_load8_s((&M0), (u64)(i2));
    i3 = l7;
    i4 = l14;
    i5 = 24u;
    i4 <<= (i5 & 31);
    i5 = 24u;
    i4 = (u32)((s32)i4 >> (i5 & 31));
    i5 = l5;
    i6 = l6;
    i0 = mp_print_float(i0, d1, i2, i3, i4, i5, i6);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L12;}
    goto B11;
    B53:;
    i0 = l13;
    i1 = 3u;
    i0 &= i1;
    if (i0) {goto B55;}
    i0 = l13;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 33608u;
    i0 = i0 != i1;
    if (i0) {goto B55;}
    i0 = l13;
    d0 = mp_obj_float_get(i0);
    i0 = mp_obj_new_int_from_float(d0);
    l13 = i0;
    B55:;
    i0 = l0;
    i1 = 48u;
    i0 += i1;
    i1 = l13;
    i2 = 10u;
    i3 = 97u;
    i4 = l7;
    i5 = l14;
    i6 = 24u;
    i5 <<= (i6 & 31);
    i6 = 24u;
    i5 = (u32)((s32)i5 >> (i6 & 31));
    i6 = l5;
    i7 = l6;
    i0 = mp_print_mp_int(i0, i1, i2, i3, i4, i5, i6, i7);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L12;}
    goto B11;
    B52:;
    i0 = l0;
    i1 = 48u;
    i0 += i1;
    i1 = l13;
    i2 = 16u;
    i3 = l15;
    i4 = 4294967273u;
    i3 += i4;
    i4 = p2;
    i5 = l7;
    i4 |= i5;
    i5 = l14;
    i6 = 24u;
    i5 <<= (i6 & 31);
    i6 = 24u;
    i5 = (u32)((s32)i5 >> (i6 & 31));
    i6 = l5;
    i7 = l6;
    i0 = mp_print_mp_int(i0, i1, i2, i3, i4, i5, i6, i7);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L12;}
    goto B11;
    B51:;
    i0 = l0;
    i1 = 32u;
    i0 += i1;
    i1 = 16u;
    i2 = l0;
    i3 = 24u;
    i2 += i3;
    vstr_init_print(i0, i1, i2);
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 114u;
    i0 = i0 == i1;
    p1 = i0;
    i1 = l11;
    i0 |= i1;
    if (i0) {goto B56;}
    i0 = l13;
    i1 = 3u;
    i0 &= i1;
    if (i0) {goto B56;}
    i0 = 4u;
    i1 = p1;
    i2 = l13;
    i2 = i32_load((&M0), (u64)(i2));
    i3 = 33004u;
    i2 = i2 == i3;
    i0 = i2 ? i0 : i1;
    p1 = i0;
    B56:;
    i0 = l0;
    i1 = 24u;
    i0 += i1;
    i1 = l13;
    i2 = p1;
    mp_obj_print_helper(i0, i1, i2);
    i0 = l0;
    i1 = 48u;
    i0 += i1;
    i1 = l0;
    i2 = 32u;
    i1 += i2;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l0;
    i2 = i32_load((&M0), (u64)(i2 + 36));
    p1 = i2;
    i3 = l6;
    i4 = l6;
    i5 = 0u;
    i4 = (u32)((s32)i4 < (s32)i5);
    i2 = i4 ? i2 : i3;
    p2 = i2;
    i3 = p1;
    i4 = p1;
    i5 = p2;
    i4 = i4 > i5;
    i2 = i4 ? i2 : i3;
    i3 = l7;
    i4 = 32u;
    i5 = l5;
    i0 = mp_print_strn(i0, i1, i2, i3, i4, i5);
    i0 = l0;
    i1 = 32u;
    i0 += i1;
    vstr_clear(i0);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L12;}
    goto B11;
    B50:;
    i0 = l13;
    i1 = 7u;
    i0 &= i1;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B48;}
    i0 = l13;
    i1 = 3u;
    i0 >>= (i1 & 31);
    i1 = l0;
    i2 = 32u;
    i1 += i2;
    i0 = qstr_data(i0, i1);
    p1 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B47;}
    goto B13;
    B49:;
    i0 = l0;
    i1 = 48u;
    i0 += i1;
    i1 = l13;
    i2 = 8u;
    i3 = 97u;
    i4 = l7;
    i5 = 528u;
    i4 |= i5;
    i5 = l7;
    i6 = p2;
    i4 = i6 ? i4 : i5;
    i5 = l14;
    i6 = 24u;
    i5 <<= (i6 & 31);
    i6 = 24u;
    i5 = (u32)((s32)i5 >> (i6 & 31));
    i6 = l5;
    i7 = l6;
    i0 = mp_print_mp_int(i0, i1, i2, i3, i4, i5, i6, i7);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L12;}
    goto B11;
    B48:;
    i0 = l13;
    i1 = 3u;
    i0 &= i1;
    p1 = i0;
    if (i0) {goto B58;}
    i0 = l13;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 33304u;
    i0 = i0 == i1;
    if (i0) {goto B57;}
    B58:;
    i0 = l13;
    i1 = 16u;
    i0 |= i1;
    i1 = 30u;
    i0 = i0 == i1;
    if (i0) {goto B14;}
    i0 = l13;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B14;}
    i0 = p1;
    if (i0) {goto B16;}
    i0 = l13;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 33720u;
    i0 = i0 == i1;
    if (i0) {goto B14;}
    goto B16;
    B57:;
    i0 = l12;
    i0 = !(i0);
    if (i0) {goto B15;}
    i0 = l0;
    i1 = l13;
    i1 = i32_load((&M0), (u64)(i1 + 8));
    p2 = i1;
    i32_store((&M0), (u64)(i0 + 32), i1);
    i0 = l13;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    p1 = i0;
    i0 = p2;
    i1 = 1u;
    i0 = i0 == i1;
    if (i0) {goto B13;}
    B47:;
    i0 = 22471u;
    mp_raise_TypeError(i0);
    UNREACHABLE;
    B17:;
    i0 = l0;
    i1 = l15;
    i32_store((&M0), (u64)(i0 + 4), i1);
    i0 = l0;
    i1 = l15;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = l4;
    i2 = l8;
    i1 -= i2;
    i32_store((&M0), (u64)(i0 + 8), i1);
    i0 = 37436u;
    i1 = 44038u;
    i2 = l0;
    mp_raise_msg_varg(i0, i1, i2);
    UNREACHABLE;
    B16:;
    i0 = 43990u;
    mp_raise_TypeError(i0);
    UNREACHABLE;
    B15:;
    i0 = l13;
    bad_implicit_conversion(i0);
    UNREACHABLE;
    B14:;
    i0 = l0;
    i1 = l13;
    i1 = mp_obj_get_int(i1);
    i32_store8((&M0), (u64)(i0 + 32), i1);
    i0 = l0;
    i1 = 48u;
    i0 += i1;
    i1 = l0;
    i2 = 32u;
    i1 += i2;
    i2 = 1u;
    i3 = l7;
    i4 = 32u;
    i5 = l5;
    i0 = mp_print_strn(i0, i1, i2, i3, i4, i5);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L12;}
    goto B11;
    B13:;
    i0 = l0;
    i1 = 48u;
    i0 += i1;
    i1 = p1;
    i2 = 1u;
    i3 = l7;
    i4 = 32u;
    i5 = l5;
    i0 = mp_print_strn(i0, i1, i2, i3, i4, i5);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L12;}
  B11:;
  i0 = l9;
  i1 = l1;
  i0 = i0 != i1;
  if (i0) {goto B59;}
  i0 = 33004u;
  i1 = 33304u;
  i2 = l10;
  i0 = i2 ? i0 : i1;
  i1 = l0;
  i2 = 56u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p2 = i0;
  goto B0;
  B59:;
  i0 = 22565u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B2:;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = 10u;
  i1 = 32696u;
  i2 = l4;
  i3 = 33304u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  i0 = l4;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  i1 = mp_obj_get_type(i1);
  i0 = i0 == i1;
  if (i0) {goto B62;}
  i0 = l4;
  i1 = 33004u;
  i0 = i0 != i1;
  if (i0) {goto B61;}
  i0 = 0u;
  p2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  i1 = l0;
  i2 = 56u;
  i1 += i2;
  i2 = 1u;
  i0 = mp_get_buffer(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 60));
  l6 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 56));
  l7 = i0;
  i0 = 0u;
  p2 = i0;
  i0 = p0;
  i1 = 36u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  goto B60;
  B62:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  p2 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B63;}
  i0 = p2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 56u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l7 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 56));
  l6 = i0;
  i0 = 0u;
  p2 = i0;
  i0 = p0;
  i1 = 36u;
  i0 = i0 <= i1;
  if (i0) {goto B60;}
  goto B0;
  B63:;
  i0 = l0;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l6 = i1;
  i32_store((&M0), (u64)(i0 + 56), i1);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l7 = i0;
  i0 = 0u;
  p2 = i0;
  i0 = p0;
  i1 = 36u;
  i0 = i0 <= i1;
  if (i0) {goto B60;}
  goto B0;
  B61:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B60:;
  i0 = p0;
  switch (i0) {
    case 0: goto B67;
    case 1: goto B67;
    case 2: goto B67;
    case 3: goto B67;
    case 4: goto B67;
    case 5: goto B0;
    case 6: goto B0;
    case 7: goto B0;
    case 8: goto B0;
    case 9: goto B0;
    case 10: goto B0;
    case 11: goto B0;
    case 12: goto B0;
    case 13: goto B0;
    case 14: goto B66;
    case 15: goto B0;
    case 16: goto B0;
    case 17: goto B0;
    case 18: goto B0;
    case 19: goto B0;
    case 20: goto B0;
    case 21: goto B0;
    case 22: goto B0;
    case 23: goto B0;
    case 24: goto B0;
    case 25: goto B0;
    case 26: goto B0;
    case 27: goto B66;
    case 28: goto B0;
    case 29: goto B0;
    case 30: goto B0;
    case 31: goto B0;
    case 32: goto B0;
    case 33: goto B0;
    case 34: goto B0;
    case 35: goto B0;
    case 36: goto B65;
    default: goto B67;
  }
  B67:;
  i0 = p0;
  i1 = l5;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 32));
  i3 = l7;
  i4 = l6;
  i0 = mp_seq_cmp_bytes(i0, i1, i2, i3, i4);
  p1 = i0;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B66:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  if (i0) {goto B68;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  i0 = mp_obj_get_type(i0);
  i1 = l4;
  i0 = i0 == i1;
  if (i0) {goto B64;}
  B68:;
  i0 = p1;
  p2 = i0;
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 56u;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 32));
  i2 = l6;
  i1 += i2;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 64));
  i1 = l5;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 32));
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 64));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 32));
  i0 += i1;
  i1 = l7;
  i2 = l6;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l4;
  i1 = l0;
  i2 = 56u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B65:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  p1 = i0;
  i1 = l6;
  i0 = i0 < i1;
  if (i0) {goto B70;}
  i0 = l5;
  i1 = l7;
  i2 = l6;
  i0 = memcmp_0(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B69;}
  L71: vm_checktime();
    i0 = l6;
    i1 = p1;
    i0 = i0 == i1;
    if (i0) {goto B70;}
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    i0 = l5;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    i1 = l7;
    i2 = l6;
    i0 = memcmp_0(i0, i1, i2);
    if (i0) {goto L71;}
    goto B69;
  B70:;
  i0 = 0u;
  l5 = i0;
  B69:;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = l5;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B64:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  p1 = i0;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void bad_implicit_conversion(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type(i1);
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  p0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 66u;
  i2 = 151u;
  i3 = p0;
  i4 = 151u;
  i3 = i3 == i4;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = 37376u;
  i1 = 43366u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static u32 str_join(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 40u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 44));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  goto B2;
  B3:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 24420u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33872u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 24420u;
  i2 = 1u;
  i3 = 0u;
  i4 = l0;
  i5 = 44u;
  i4 += i5;
  i5 = 0u;
  i5 = i32_load((&M0), (u64)(i5 + 24432));
  i1 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i5, i1, i2, i3, i4);
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 44), i1);
  B0:;
  i0 = p1;
  i1 = l0;
  i2 = 36u;
  i1 += i2;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  mp_obj_get_array(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 36));
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = 0u;
  p1 = i0;
  i0 = 0u;
  p0 = i0;
  i0 = 0u;
  l3 = i0;
  L7: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = p1;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = mp_obj_get_type(i0);
    i1 = l1;
    i0 = i0 != i1;
    if (i0) {goto B4;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 40));
    i1 = 0u;
    i2 = p0;
    i0 = i2 ? i0 : i1;
    i1 = l3;
    i0 += i1;
    l3 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = p1;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    i1 = 7u;
    i0 &= i1;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B9;}
    i0 = l4;
    i1 = 3u;
    i0 >>= (i1 & 31);
    i0 = qstr_len(i0);
    l4 = i0;
    goto B8;
    B9:;
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0 + 8));
    l4 = i0;
    B8:;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = l3;
    i1 = l4;
    i0 += i1;
    l3 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 36));
    i0 = i0 < i1;
    if (i0) {goto L7;}
    goto B5;
  B6:;
  i0 = 0u;
  l3 = i0;
  B5:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = l3;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 36));
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = 0u;
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p1 = i0;
  i0 = 0u;
  l3 = i0;
  L11: vm_checktime();
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B12;}
    i0 = p1;
    i1 = l2;
    i2 = l0;
    i2 = i32_load((&M0), (u64)(i2 + 40));
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = p1;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 40));
    i0 += i1;
    p1 = i0;
    B12:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = p0;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    i1 = 7u;
    i0 &= i1;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B14;}
    i0 = l4;
    i1 = 3u;
    i0 >>= (i1 & 31);
    i1 = l0;
    i2 = 12u;
    i1 += i2;
    i0 = qstr_data(i0, i1);
    l4 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    l5 = i0;
    goto B13;
    B14:;
    i0 = l0;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1 + 8));
    l5 = i1;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    l4 = i0;
    B13:;
    i0 = p1;
    i1 = l4;
    i2 = l5;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = p1;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    i0 += i1;
    p1 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 36));
    i0 = i0 < i1;
    if (i0) {goto L11;}
  B10:;
  i0 = l1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = 18501u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_str_split(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = 4294967295u;
  l2 = i0;
  i0 = 6u;
  l3 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l3 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_get_int(i0);
  l2 = i0;
  B0:;
  i0 = 0u;
  i1 = 0u;
  i0 = mp_obj_new_list(i0, i1);
  l4 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l5 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l6 = i1;
  i0 += i1;
  p0 = i0;
  i0 = l3;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  goto B2;
  B4:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l6 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l6;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  l5 = i1;
  i0 += i1;
  p0 = i0;
  i0 = l3;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  B3:;
  i0 = l6;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B5;}
  L6: vm_checktime();
    i0 = l5;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_isspace(i0);
    i0 = !(i0);
    if (i0) {goto B5;}
    i0 = l5;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L6;}
  B5:;
  i0 = l5;
  i1 = p0;
  i0 = i0 >= i1;
  if (i0) {goto B7;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B7;}
  L10: vm_checktime();
    i0 = l5;
    i1 = p0;
    i0 = i0 >= i1;
    if (i0) {goto B9;}
    i0 = l5;
    l3 = i0;
    L12: vm_checktime();
      i0 = l3;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i0 = unichar_isspace(i0);
      if (i0) {goto B11;}
      i0 = l3;
      i1 = 1u;
      i0 += i1;
      l3 = i0;
      i1 = p0;
      i0 = i0 < i1;
      if (i0) {goto L12;}
      goto B8;
    B11:;
    i0 = l4;
    i1 = l1;
    i2 = l5;
    i3 = l3;
    i4 = l5;
    i3 -= i4;
    i1 = mp_obj_new_str_of_type(i1, i2, i3);
    i0 = mp_obj_list_append(i0, i1);
    i0 = l3;
    i1 = p0;
    i0 = i0 >= i1;
    if (i0) {goto B14;}
    i0 = l3;
    l5 = i0;
    L15: vm_checktime();
      i0 = l5;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i0 = unichar_isspace(i0);
      i0 = !(i0);
      if (i0) {goto B13;}
      i0 = l5;
      i1 = 1u;
      i0 += i1;
      l5 = i0;
      i1 = p0;
      i0 = i0 < i1;
      if (i0) {goto L15;}
      goto B13;
    B14:;
    i0 = l3;
    l5 = i0;
    B13:;
    i0 = l5;
    i1 = p0;
    i0 = i0 >= i1;
    if (i0) {goto B7;}
    i0 = l2;
    i1 = l2;
    i2 = 0u;
    i1 = (u32)((s32)i1 > (s32)i2);
    i0 -= i1;
    l2 = i0;
    if (i0) {goto L10;}
    goto B7;
  B9:;
  i0 = l5;
  l3 = i0;
  B8:;
  i0 = l4;
  i1 = l1;
  i2 = l5;
  i3 = l3;
  i4 = l5;
  i3 -= i4;
  i1 = mp_obj_new_str_of_type(i1, i2, i3);
  i0 = mp_obj_list_append(i0, i1);
  i0 = l3;
  l5 = i0;
  B7:;
  i0 = l5;
  i1 = p0;
  i0 = i0 >= i1;
  if (i0) {goto B16;}
  i0 = l4;
  i1 = l1;
  i2 = l5;
  i3 = p0;
  i4 = l5;
  i3 -= i4;
  i1 = mp_obj_new_str_of_type(i1, i2, i3);
  i0 = mp_obj_list_append(i0, i1);
  i0 = 2u;
  l7 = i0;
  goto B1;
  B16:;
  i0 = 2u;
  l7 = i0;
  goto B1;
  B2:;
  i0 = l3;
  i0 = mp_obj_get_type(i0);
  i1 = l1;
  i0 = i0 != i1;
  if (i0) {goto B20;}
  i0 = l3;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B22;}
  i0 = l3;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l6 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  if (i0) {goto B21;}
  goto B19;
  B22:;
  i0 = l3;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B20;}
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 82u;
  i0 = i0 != i1;
  if (i0) {goto B20;}
  i0 = l0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l6 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B19;}
  B21:;
  i0 = p0;
  l3 = i0;
  i0 = l2;
  if (i0) {goto B17;}
  goto B18;
  B20:;
  i0 = l3;
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B19:;
  i0 = 17562u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B18:;
  i0 = 1u;
  l7 = i0;
  goto B1;
  B17:;
  i0 = 4u;
  l7 = i0;
  B1:;
  L23: vm_checktime();
    i0 = l7;
    switch (i0) {
      case 0: goto B32;
      case 1: goto B31;
      case 2: goto B30;
      case 3: goto B37;
      case 4: goto B36;
      case 5: goto B35;
      case 6: goto B34;
      case 7: goto B33;
      default: goto B33;
    }
    B37:;
    i0 = l3;
    i1 = p1;
    i0 += i1;
    l5 = i0;
    i0 = p0;
    l3 = i0;
    i0 = l2;
    i1 = l2;
    i2 = 0u;
    i1 = (u32)((s32)i1 > (s32)i2);
    i0 -= i1;
    l2 = i0;
    i0 = !(i0);
    if (i0) {goto B26;}
    i0 = 4u;
    l7 = i0;
    goto L23;
    B36:;
    i0 = p0;
    l3 = i0;
    i0 = l5;
    i1 = p1;
    i0 += i1;
    i1 = p0;
    i0 = i0 > i1;
    if (i0) {goto B29;}
    i0 = 5u;
    l7 = i0;
    goto L23;
    B35:;
    i0 = l5;
    l3 = i0;
    i0 = 6u;
    l7 = i0;
    goto L23;
    B34:;
    i0 = l3;
    i1 = l6;
    i2 = p1;
    i0 = memcmp_0(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto B28;}
    i0 = 7u;
    l7 = i0;
    goto L23;
    B33:;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i1 = p1;
    i0 += i1;
    i1 = p0;
    i0 = i0 <= i1;
    if (i0) {goto B27;}
    i0 = 0u;
    l7 = i0;
    goto L23;
    B32:;
    i0 = p0;
    l3 = i0;
    i0 = 1u;
    l7 = i0;
    goto L23;
    B31:;
    i0 = l4;
    i1 = l1;
    i2 = l5;
    i3 = l3;
    i4 = l5;
    i3 -= i4;
    i1 = mp_obj_new_str_of_type(i1, i2, i3);
    i0 = mp_obj_list_append(i0, i1);
    i0 = l3;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto B25;}
    goto B24;
    B30:;
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    g0 = i0;
    i0 = l4;
    goto Bfunc;
    B29:;
    i0 = 1u;
    l7 = i0;
    goto L23;
    B28:;
    i0 = 1u;
    l7 = i0;
    goto L23;
    B27:;
    i0 = 6u;
    l7 = i0;
    goto L23;
    B26:;
    i0 = 1u;
    l7 = i0;
    goto L23;
    B25:;
    i0 = 3u;
    l7 = i0;
    goto L23;
    B24:;
    i0 = 2u;
    l7 = i0;
    goto L23;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_str_of_type(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 33304u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = 16u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = 33004u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p2;
  i2 = 1u;
  i1 += i2;
  i1 = m_malloc(i1);
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p1;
  i2 = p2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = p2;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  goto B0;
  B1:;
  i0 = p1;
  i1 = p2;
  i0 = qstr_find_strn(i0, i1);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  goto Bfunc;
  B2:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = 33304u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p2;
  i2 = 1u;
  i1 += i2;
  i1 = m_malloc(i1);
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p1;
  i2 = p2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = p2;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_str_get_data(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  goto B1;
  B2:;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 82u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  B1:;
  i0 = p1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = p0;
  bad_implicit_conversion(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_splitlines(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 4294967295u;
  i0 += i1;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i2 = p2;
  i3 = 1u;
  i4 = 43936u;
  i5 = l0;
  i6 = 8u;
  i5 += i6;
  mp_arg_parse_all(i0, i1, i2, i3, i4, i5);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = 0u;
  i1 = 0u;
  i0 = mp_obj_new_list(i0, i1);
  l2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l3 = i0;
  i0 = 1u;
  l4 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p2 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  p2 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  i0 = 1u;
  l4 = i0;
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  B1:;
  i0 = l3;
  i1 = p2;
  i0 += i1;
  l5 = i0;
  L3: vm_checktime();
    i0 = l3;
    p2 = i0;
    L7: vm_checktime();
      i0 = p2;
      p1 = i0;
      i1 = l5;
      i0 = i0 >= i1;
      if (i0) {goto B6;}
      i0 = p1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      p0 = i0;
      i1 = 10u;
      i0 = i0 == i1;
      if (i0) {goto B5;}
      i0 = p1;
      i1 = l4;
      i0 += i1;
      p2 = i0;
      i0 = p0;
      i1 = 13u;
      i0 = i0 != i1;
      if (i0) {goto L7;}
    i0 = 2u;
    i1 = l4;
    i2 = p2;
    i2 = i32_load8_u((&M0), (u64)(i2));
    i3 = 10u;
    i2 = i2 == i3;
    i0 = i2 ? i0 : i1;
    p2 = i0;
    goto B4;
    B6:;
    i0 = 0u;
    p2 = i0;
    goto B4;
    B5:;
    i0 = 1u;
    p2 = i0;
    B4:;
    i0 = l2;
    i1 = l1;
    i2 = l3;
    i3 = p1;
    i4 = l3;
    i3 -= i4;
    i4 = p2;
    i5 = 0u;
    i6 = l0;
    i6 = i32_load8_u((&M0), (u64)(i6 + 8));
    i4 = i6 ? i4 : i5;
    i3 += i4;
    i1 = mp_obj_new_str_of_type(i1, i2, i3);
    i0 = mp_obj_list_append(i0, i1);
    i0 = p1;
    i1 = p2;
    i0 += i1;
    l3 = i0;
    i1 = l5;
    i0 = i0 < i1;
    if (i0) {goto L3;}
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_rsplit(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 <= i1;
  if (i0) {goto B5;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = l3;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l3 = i0;
  goto B6;
  B7:;
  i0 = l0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  B6:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_get_int(i0);
  l4 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B5;}
  i0 = l4;
  i1 = 1u;
  i0 += i1;
  l5 = i0;
  i1 = 0u;
  i0 = mp_obj_new_list(i0, i1);
  l6 = i0;
  i0 = l2;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = l2;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  if (i0) {goto B3;}
  goto B0;
  B5:;
  i0 = p0;
  i1 = p1;
  i0 = mp_obj_str_split(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = l2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 82u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B3:;
  i0 = l3;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 += i1;
  l7 = i0;
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l7;
  i1 = 0u;
  i2 = p0;
  i1 -= i2;
  l8 = i1;
  i0 += i1;
  l9 = i0;
  i1 = l3;
  i0 = i0 < i1;
  if (i0) {goto B9;}
  i0 = l6;
  i1 = 12u;
  i0 += i1;
  l10 = i0;
  L10: vm_checktime();
    i0 = l9;
    p1 = i0;
    L12: vm_checktime();
      i0 = p1;
      i1 = l2;
      i2 = p0;
      i0 = memcmp_0(i0, i1, i2);
      i0 = !(i0);
      if (i0) {goto B11;}
      i0 = p1;
      i1 = 4294967295u;
      i0 += i1;
      p1 = i0;
      i1 = l3;
      i0 = i0 >= i1;
      if (i0) {goto L12;}
      goto B9;
    B11:;
    i0 = l1;
    i1 = p1;
    i2 = p0;
    i1 += i2;
    i2 = l7;
    i3 = p0;
    i2 -= i3;
    i3 = p1;
    i2 -= i3;
    i0 = mp_obj_new_str_of_type(i0, i1, i2);
    l7 = i0;
    i0 = l10;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l4;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = l7;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l4;
    i1 = 4294967295u;
    i0 += i1;
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B8;}
    i0 = p1;
    l7 = i0;
    i0 = p1;
    i1 = l8;
    i0 += i1;
    l9 = i0;
    i1 = l3;
    i0 = i0 >= i1;
    if (i0) {goto L10;}
    goto B8;
  B9:;
  i0 = l7;
  p1 = i0;
  B8:;
  i0 = l1;
  i1 = l3;
  i2 = p1;
  i3 = l3;
  i2 -= i3;
  i0 = mp_obj_new_str_of_type(i0, i1, i2);
  l3 = i0;
  i0 = l6;
  i1 = 12u;
  i0 += i1;
  p1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l4;
  i2 = 2u;
  i1 <<= (i2 & 31);
  p0 = i1;
  i0 += i1;
  i1 = l3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i1 = l3;
  i2 = p0;
  i1 += i2;
  i2 = l5;
  i3 = l4;
  i2 -= i3;
  l3 = i2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  p0 = i2;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i0 += i1;
  i1 = 0u;
  i2 = l6;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = l3;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l6;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 8), i1);
  B13:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l6;
  goto Bfunc;
  B2:;
  i0 = 18734u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  B1:;
  i0 = l2;
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B0:;
  i0 = 17562u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_find(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i3 = 0u;
  i0 = str_finder(i0, i1, i2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_finder(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i1 = mp_obj_get_type(i1);
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = l2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l3 = i0;
  goto B5;
  B6:;
  i0 = l0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  B5:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  i0 = l2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l4 = i0;
  goto B7;
  B8:;
  i0 = l0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l4 = i0;
  B7:;
  i0 = l3;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  l5 = i1;
  i0 += i1;
  l2 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B9;}
  i0 = l3;
  l6 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l7 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  i0 = l1;
  i1 = l3;
  i2 = l5;
  i3 = l7;
  i4 = 1u;
  i0 = str_index_to_ptr(i0, i1, i2, i3, i4);
  l6 = i0;
  B10:;
  i0 = p0;
  i1 = 4u;
  i0 = i0 < i1;
  if (i0) {goto B11;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B11;}
  i0 = l1;
  i1 = l3;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i3 = p1;
  i4 = 1u;
  i0 = str_index_to_ptr(i0, i1, i2, i3, i4);
  l2 = i0;
  B11:;
  i0 = l2;
  i1 = l6;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  goto B3;
  B9:;
  i0 = l2;
  i1 = l3;
  l6 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  goto B2;
  B4:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B3:;
  i0 = l2;
  i1 = l6;
  i0 -= i1;
  p1 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  p0 = i1;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = l6;
  i1 = 0u;
  i2 = p1;
  i3 = p0;
  i2 -= i3;
  p1 = i2;
  i3 = p2;
  i4 = 0u;
  i3 = (u32)((s32)i3 > (s32)i4);
  l5 = i3;
  i1 = i3 ? i1 : i2;
  l7 = i1;
  i0 += i1;
  l2 = i0;
  i1 = l4;
  i2 = p0;
  i0 = memcmp_0(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = l7;
  i1 = p1;
  i2 = 0u;
  i3 = l5;
  i1 = i3 ? i1 : i2;
  i0 -= i1;
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  L13: vm_checktime();
    i0 = p1;
    i1 = p2;
    i0 += i1;
    p1 = i0;
    i0 = l2;
    i1 = p2;
    i0 += i1;
    l2 = i0;
    i1 = l4;
    i2 = p0;
    i0 = memcmp_0(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto B12;}
    i0 = p1;
    if (i0) {goto L13;}
    goto B2;
  B12:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 33304u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  i1 = l3;
  i0 -= i1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B2:;
  i0 = p3;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 4294967295u;
  goto Bfunc;
  B1:;
  i0 = l3;
  i1 = l2;
  i0 = utf8_ptr_to_index(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = 18923u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_rfind(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i2 = 4294967295u;
  i3 = 0u;
  i0 = str_finder(i0, i1, i2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_index(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i3 = 1u;
  i0 = str_finder(i0, i1, i2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_rindex(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i2 = 4294967295u;
  i3 = 1u;
  i0 = str_finder(i0, i1, i2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_startswith(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l2 = i0;
  goto B0;
  B1:;
  i0 = l0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l3 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = l3;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l4 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l5 = i0;
  i0 = l2;
  l3 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  goto B3;
  B4:;
  i0 = l3;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 82u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = l0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l5 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l4 = i0;
  i0 = l2;
  l3 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  goto B2;
  B5:;
  i0 = l3;
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B3:;
  i0 = l1;
  i1 = l2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = p1;
  i3 = i32_load((&M0), (u64)(i3 + 8));
  i4 = 1u;
  i0 = str_index_to_ptr(i0, i1, i2, i3, i4);
  l3 = i0;
  B2:;
  i0 = 14u;
  p1 = i0;
  i0 = l5;
  i1 = l2;
  i0 -= i1;
  i1 = l3;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 = i0 > i1;
  if (i0) {goto B6;}
  i0 = 14u;
  i1 = 30u;
  i2 = l3;
  i3 = l4;
  i4 = l5;
  i2 = memcmp_0(i2, i3, i4);
  i0 = i2 ? i0 : i1;
  p1 = i0;
  B6:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_endswith(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l2 = i0;
  goto B0;
  B1:;
  i0 = l0;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B4;}
  goto B2;
  B5:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 82u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  B4:;
  i0 = 14u;
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i1 = l1;
  i0 = i0 < i1;
  if (i0) {goto B6;}
  i0 = 14u;
  i1 = 30u;
  i2 = l2;
  i3 = p0;
  i4 = l1;
  i3 -= i4;
  i2 += i3;
  i3 = l3;
  i4 = l1;
  i2 = memcmp_0(i2, i3, i4);
  i0 = i2 ? i0 : i1;
  p1 = i0;
  B6:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B3:;
  i0 = p1;
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B2:;
  i0 = 19154u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_strip(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 2u;
  i1 = p0;
  i2 = p1;
  i0 = str_uni_strip(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_uni_strip(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = 6u;
  l2 = i0;
  i0 = 43944u;
  l3 = i0;
  goto B6;
  B7:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = mp_obj_get_type(i0);
  i1 = l1;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  goto B6;
  B8:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  B6:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B12;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l4 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l5 = i0;
  if (i0) {goto B11;}
  goto B10;
  B12:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l5 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l4 = i0;
  i0 = l5;
  i0 = !(i0);
  if (i0) {goto B10;}
  B11:;
  i0 = l5;
  i1 = 4294967295u;
  i0 += i1;
  l6 = i0;
  i1 = 0u;
  i2 = p0;
  i3 = 1u;
  i2 = i2 == i3;
  p1 = i2;
  i0 = i2 ? i0 : i1;
  l7 = i0;
  i0 = 4294967295u;
  i1 = 1u;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  l8 = i0;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 4294967295u;
  i0 += i1;
  l9 = i0;
  i0 = 0u;
  l6 = i0;
  i0 = 0u;
  l10 = i0;
  i0 = 0u;
  l11 = i0;
  L14: vm_checktime();
    i0 = l9;
    p1 = i0;
    i0 = l3;
    l2 = i0;
    i0 = l3;
    i1 = l4;
    i2 = l7;
    i1 += i2;
    l12 = i1;
    i2 = 1u;
    i0 = memcmp_0(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto B18;}
    L19: vm_checktime();
      i0 = p1;
      i0 = !(i0);
      if (i0) {goto B17;}
      i0 = p1;
      i1 = 4294967295u;
      i0 += i1;
      p1 = i0;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l2 = i0;
      i1 = l12;
      i2 = 1u;
      i0 = memcmp_0(i0, i1, i2);
      if (i0) {goto L19;}
    B18:;
    i0 = l10;
    i1 = l2;
    i2 = 0u;
    i1 = i1 != i2;
    i0 |= i1;
    i1 = 1u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B16;}
    goto B15;
    B17:;
    i0 = 0u;
    l2 = i0;
    i0 = l10;
    i1 = 0u;
    i2 = 0u;
    i1 = i1 != i2;
    i0 |= i1;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B15;}
    B16:;
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B20;}
    i0 = 1u;
    l10 = i0;
    i0 = l7;
    l11 = i0;
    i0 = l7;
    l6 = i0;
    i0 = p0;
    i1 = 1u;
    i0 = i0 == i1;
    if (i0) {goto B3;}
    i0 = l7;
    i1 = l8;
    i0 += i1;
    l7 = i0;
    i0 = l5;
    i1 = 4294967295u;
    i0 += i1;
    l5 = i0;
    if (i0) {goto L14;}
    goto B13;
    B20:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 8));
    i1 = 4294967295u;
    i0 += i1;
    l6 = i0;
    i0 = l7;
    l11 = i0;
    goto B9;
    B15:;
    i0 = l6;
    i1 = l7;
    i2 = l2;
    i0 = i2 ? i0 : i1;
    l6 = i0;
    i0 = l7;
    i1 = l8;
    i0 += i1;
    l7 = i0;
    i0 = l5;
    i1 = 4294967295u;
    i0 += i1;
    l5 = i0;
    if (i0) {goto L14;}
  B13:;
  i0 = l10;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B9;}
  B10:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 10u;
  i1 = 32696u;
  i2 = l1;
  i3 = 33304u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B9:;
  i0 = l6;
  i1 = l11;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  goto B2;
  B5:;
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B4:;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 1u;
  i0 = i0 != i1;
  l2 = i0;
  i0 = 0u;
  p1 = i0;
  i0 = 0u;
  l11 = i0;
  L21: vm_checktime();
    i0 = p1;
    i1 = l2;
    i0 |= i1;
    i1 = 1u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = l11;
    i1 = l7;
    i2 = p1;
    i3 = 1u;
    i2 &= i3;
    i0 = i2 ? i0 : i1;
    l11 = i0;
    i0 = l7;
    i1 = l8;
    i0 += i1;
    l7 = i0;
    i0 = 1u;
    p1 = i0;
    i0 = l5;
    i1 = 4294967295u;
    i0 += i1;
    l5 = i0;
    if (i0) {goto L21;}
  i0 = l7;
  i1 = l8;
  i0 -= i1;
  l6 = i0;
  i1 = l11;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  goto B2;
  B3:;
  i0 = 0u;
  l11 = i0;
  i0 = l7;
  l6 = i0;
  goto B0;
  B2:;
  i0 = 19349u;
  i1 = 19531u;
  i2 = 879u;
  i3 = 43951u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B1:;
  i0 = l7;
  l11 = i0;
  B0:;
  i0 = l6;
  i1 = l11;
  i0 -= i1;
  i1 = 1u;
  i0 += i1;
  p1 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 = i0 != i1;
  if (i0) {goto B23;}
  i0 = l11;
  if (i0) {goto B22;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B23:;
  i0 = l1;
  i1 = l4;
  i2 = l11;
  i1 += i2;
  i2 = p1;
  i0 = mp_obj_new_str_of_type(i0, i1, i2);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B22:;
  i0 = 19744u;
  i1 = 19531u;
  i2 = 885u;
  i3 = 43951u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_lstrip(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  i1 = p0;
  i2 = p1;
  i0 = str_uni_strip(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_rstrip(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 1u;
  i1 = p0;
  i2 = p1;
  i0 = str_uni_strip(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_center(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = p1;
  i0 = mp_obj_get_int(i0);
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  i1 = p1;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = p1;
  i0 = mp_obj_get_int(i0);
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = 32u;
  i2 = p1;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = p1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 28));
  l2 = i2;
  i1 -= i2;
  i2 = 1u;
  i1 >>= (i2 & 31);
  i0 += i1;
  i1 = l1;
  i2 = l2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  B0:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_str_format(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  l2 = i0;
  goto B0;
  B1:;
  i0 = l0;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  B0:;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i2 = l1;
  i3 = l2;
  i2 += i3;
  i3 = l0;
  i4 = 24u;
  i3 += i4;
  i4 = p0;
  i5 = p1;
  i6 = p2;
  mp_obj_str_format_helper(i0, i1, i2, i3, i4, i5, i6);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_str_format_helper(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5, u32 p6) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6, i7;
  f64 d1, d2;
  i0 = g0;
  i1 = 80u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 16u;
  i2 = l0;
  i3 = 72u;
  i2 += i3;
  vstr_init_print(i0, i1, i2);
  i0 = p1;
  i1 = p2;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = p4;
  i1 = 4294967295u;
  i0 += i1;
  l1 = i0;
  L2: vm_checktime();
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l2 = i0;
    i1 = 123u;
    i0 = i0 == i1;
    if (i0) {goto B17;}
    i0 = l2;
    i1 = 125u;
    i0 = i0 != i1;
    if (i0) {goto B16;}
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p2;
    i0 = i0 >= i1;
    if (i0) {goto B12;}
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 125u;
    i0 = i0 != i1;
    if (i0) {goto B12;}
    i0 = p0;
    i1 = 125u;
    vstr_add_byte(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L2;}
    goto B0;
    B17:;
    i0 = 0u;
    l3 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p2;
    i0 = i0 >= i1;
    if (i0) {goto B11;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    i1 = 122u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B15;}
    i0 = l5;
    i1 = 33u;
    i0 = i0 == i1;
    if (i0) {goto B11;}
    i0 = l5;
    i1 = 58u;
    i0 = i0 != i1;
    if (i0) {goto B14;}
    goto B11;
    B16:;
    i0 = p0;
    i1 = l2;
    vstr_add_byte(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L2;}
    goto B0;
    B15:;
    i0 = l5;
    i1 = 123u;
    i0 = i0 == i1;
    if (i0) {goto B13;}
    i0 = l5;
    i1 = 125u;
    i0 = i0 == i1;
    if (i0) {goto B11;}
    B14:;
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i0 = l5;
    i1 = 255u;
    i0 &= i1;
    p1 = i0;
    i1 = 33u;
    i0 = i0 == i1;
    if (i0) {goto B19;}
    L20: vm_checktime();
      i0 = p1;
      i1 = 58u;
      i0 = i0 == i1;
      if (i0) {goto B19;}
      i0 = p1;
      i1 = 125u;
      i0 = i0 == i1;
      if (i0) {goto B19;}
      i0 = l2;
      i1 = p2;
      i0 = i0 >= i1;
      if (i0) {goto B18;}
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      p1 = i0;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l2 = i0;
      i0 = p1;
      i1 = 255u;
      i0 &= i1;
      p1 = i0;
      i1 = 33u;
      i0 = i0 != i1;
      if (i0) {goto L20;}
    B19:;
    i0 = l4;
    l6 = i0;
    i0 = l2;
    i1 = 4294967295u;
    i0 += i1;
    l2 = i0;
    l4 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto B10;}
    goto B9;
    B18:;
    i0 = l4;
    l6 = i0;
    i0 = l2;
    l4 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto B10;}
    goto B9;
    B13:;
    i0 = p0;
    i1 = 123u;
    vstr_add_byte(i0, i1);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L2;}
    goto B0;
    B12:;
    i0 = 19875u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B11:;
    i0 = 0u;
    l2 = i0;
    i0 = 0u;
    l6 = i0;
    i0 = l4;
    i1 = p2;
    i0 = i0 >= i1;
    if (i0) {goto B9;}
    B10:;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 33u;
    i0 = i0 != i1;
    if (i0) {goto B9;}
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p2;
    i0 = i0 >= i1;
    if (i0) {goto B8;}
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l3 = i0;
    i1 = 254u;
    i0 &= i1;
    i1 = 114u;
    i0 = i0 != i1;
    if (i0) {goto B8;}
    i0 = l4;
    i1 = 2u;
    i0 += i1;
    l4 = i0;
    B9:;
    i0 = 0u;
    l7 = i0;
    i0 = l4;
    i1 = p2;
    i0 = i0 >= i1;
    if (i0) {goto B22;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 58u;
    i0 = i0 != i1;
    if (i0) {goto B22;}
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l8 = i0;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0 + 1));
    l9 = i0;
    i1 = 125u;
    i0 = i0 != i1;
    if (i0) {goto B21;}
    i0 = l8;
    p1 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto B4;}
    goto B1;
    B22:;
    i0 = l4;
    p1 = i0;
    i1 = p2;
    i0 = i0 >= i1;
    if (i0) {goto B1;}
    i0 = 3u;
    l10 = i0;
    goto B3;
    B21:;
    i0 = l8;
    i1 = p2;
    i0 = i0 >= i1;
    if (i0) {goto B23;}
    i0 = l4;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = 1u;
    l5 = i0;
    i0 = l9;
    i1 = 255u;
    i0 &= i1;
    l4 = i0;
    i1 = 125u;
    i0 = i0 != i1;
    if (i0) {goto B6;}
    goto B7;
    B23:;
    i0 = l8;
    l7 = i0;
    i0 = l8;
    p1 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto B5;}
    goto B1;
    B8:;
    i0 = 20040u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B7:;
    i0 = 116u;
    l10 = i0;
    goto B3;
    B6:;
    i0 = 0u;
    l10 = i0;
    goto B3;
    B5:;
    i0 = 3u;
    l10 = i0;
    goto B3;
    B4:;
    i0 = 3u;
    l10 = i0;
    B3:;
    L24: vm_checktime();
      i0 = l10;
      switch (i0) {
        case 0: goto B213;
        case 1: goto B210;
        case 2: goto B209;
        case 3: goto B253;
        case 4: goto B252;
        case 5: goto B251;
        case 6: goto B140;
        case 7: goto B136;
        case 8: goto B135;
        case 9: goto B234;
        case 10: goto B241;
        case 11: goto B240;
        case 12: goto B238;
        case 13: goto B226;
        case 14: goto B225;
        case 15: goto B179;
        case 16: goto B182;
        case 17: goto B181;
        case 18: goto B178;
        case 19: goto B177;
        case 20: goto B176;
        case 21: goto B174;
        case 22: goto B169;
        case 23: goto B173;
        case 24: goto B172;
        case 25: goto B147;
        case 26: goto B148;
        case 27: goto B146;
        case 28: goto B151;
        case 29: goto B166;
        case 30: goto B160;
        case 31: goto B165;
        case 32: goto B164;
        case 33: goto B150;
        case 34: goto B149;
        case 35: goto B163;
        case 36: goto B159;
        case 37: goto B156;
        case 38: goto B155;
        case 39: goto B154;
        case 40: goto B153;
        case 41: goto B145;
        case 42: goto B144;
        case 43: goto B143;
        case 44: goto B142;
        case 45: goto B152;
        case 46: goto B158;
        case 47: goto B157;
        case 48: goto B171;
        case 49: goto B168;
        case 50: goto B167;
        case 51: goto B175;
        case 52: goto B170;
        case 53: goto B162;
        case 54: goto B224;
        case 55: goto B183;
        case 56: goto B223;
        case 57: goto B222;
        case 58: goto B232;
        case 59: goto B231;
        case 60: goto B230;
        case 61: goto B229;
        case 62: goto B228;
        case 63: goto B206;
        case 64: goto B205;
        case 65: goto B203;
        case 66: goto B197;
        case 67: goto B196;
        case 68: goto B187;
        case 69: goto B186;
        case 70: goto B189;
        case 71: goto B188;
        case 72: goto B184;
        case 73: goto B180;
        case 74: goto B185;
        case 75: goto B195;
        case 76: goto B161;
        case 77: goto B194;
        case 78: goto B193;
        case 79: goto B192;
        case 80: goto B191;
        case 81: goto B190;
        case 82: goto B202;
        case 83: goto B201;
        case 84: goto B200;
        case 85: goto B198;
        case 86: goto B199;
        case 87: goto B204;
        case 88: goto B227;
        case 89: goto B218;
        case 90: goto B217;
        case 91: goto B216;
        case 92: goto B215;
        case 93: goto B207;
        case 94: goto B208;
        case 95: goto B220;
        case 96: goto B221;
        case 97: goto B239;
        case 98: goto B233;
        case 99: goto B139;
        case 100: goto B138;
        case 101: goto B137;
        case 102: goto B250;
        case 103: goto B249;
        case 104: goto B237;
        case 105: goto B236;
        case 106: goto B235;
        case 107: goto B248;
        case 108: goto B219;
        case 109: goto B247;
        case 110: goto B246;
        case 111: goto B245;
        case 112: goto B244;
        case 113: goto B243;
        case 114: goto B242;
        case 115: goto B214;
        case 116: goto B211;
        case 117: goto B141;
        case 118: goto B212;
        default: goto B212;
      }
      B253:;
      i0 = p1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i1 = 125u;
      i0 = i0 != i1;
      if (i0) {goto B132;}
      i0 = 4u;
      l10 = i0;
      goto L24;
      B252:;
      i0 = l6;
      i0 = !(i0);
      if (i0) {goto B110;}
      i0 = 5u;
      l10 = i0;
      goto L24;
      B251:;
      i0 = l6;
      i0 = i32_load8_s((&M0), (u64)(i0));
      i0 = unichar_isdigit(i0);
      i0 = !(i0);
      if (i0) {goto B109;}
      i0 = 102u;
      l10 = i0;
      goto L24;
      B250:;
      i0 = p3;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = 1u;
      i0 = (u32)((s32)i0 >= (s32)i1);
      if (i0) {goto B130;}
      i0 = 103u;
      l10 = i0;
      goto L24;
      B249:;
      i0 = 0u;
      l5 = i0;
      i0 = l6;
      i1 = l2;
      i0 = i0 >= i1;
      if (i0) {goto B30;}
      i0 = 107u;
      l10 = i0;
      goto L24;
      B248:;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l8 = i0;
      i1 = 4294967248u;
      i0 += i1;
      i1 = 255u;
      i0 &= i1;
      i1 = 9u;
      i0 = i0 > i1;
      if (i0) {goto B25;}
      i0 = 109u;
      l10 = i0;
      goto L24;
      B247:;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      i0 = 0u;
      l5 = i0;
      i0 = 110u;
      l10 = i0;
      goto L24;
      B246:;
      i0 = l8;
      i1 = 24u;
      i0 <<= (i1 & 31);
      i1 = 24u;
      i0 = (u32)((s32)i0 >> (i1 & 31));
      i1 = l5;
      i2 = 10u;
      i1 *= i2;
      i0 += i1;
      i1 = 4294967248u;
      i0 += i1;
      l5 = i0;
      i0 = l6;
      l4 = i0;
      i1 = l2;
      i0 = i0 >= i1;
      if (i0) {goto B27;}
      i0 = 111u;
      l10 = i0;
      goto L24;
      B245:;
      i0 = l4;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l8 = i0;
      i1 = 4294967248u;
      i0 += i1;
      i1 = 255u;
      i0 &= i1;
      i1 = 10u;
      i0 = i0 < i1;
      if (i0) {goto B29;}
      goto B28;
      B244:;
      i0 = p3;
      i0 = i32_load((&M0), (u64)(i0));
      l2 = i0;
      i1 = 4294967295u;
      i0 = (u32)((s32)i0 <= (s32)i1);
      if (i0) {goto B124;}
      i0 = 113u;
      l10 = i0;
      goto L24;
      B243:;
      i0 = l2;
      i1 = l1;
      i0 = i0 >= i1;
      if (i0) {goto B125;}
      i0 = 114u;
      l10 = i0;
      goto L24;
      B242:;
      i0 = p3;
      i1 = l2;
      i2 = 1u;
      i1 += i2;
      l2 = i1;
      i32_store((&M0), (u64)(i0), i1);
      i0 = p5;
      i1 = l2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      l9 = i0;
      i0 = l3;
      i1 = l3;
      i2 = 115u;
      i3 = l7;
      i1 = i3 ? i1 : i2;
      i2 = l3;
      i0 = i2 ? i0 : i1;
      l2 = i0;
      i0 = !(i0);
      if (i0) {goto B102;}
      i0 = 10u;
      l10 = i0;
      goto L24;
      B241:;
      i0 = l2;
      i1 = 114u;
      i0 = i0 == i1;
      if (i0) {goto B101;}
      i0 = 11u;
      l10 = i0;
      goto L24;
      B240:;
      i0 = 0u;
      l4 = i0;
      i0 = l2;
      i1 = 115u;
      i0 = i0 == i1;
      if (i0) {goto B100;}
      goto B131;
      B239:;
      i0 = 1u;
      l4 = i0;
      i0 = 12u;
      l10 = i0;
      goto L24;
      B238:;
      i0 = l0;
      i1 = 56u;
      i0 += i1;
      i1 = 16u;
      i2 = l0;
      i3 = 48u;
      i2 += i3;
      vstr_init_print(i0, i1, i2);
      i0 = l0;
      i1 = 48u;
      i0 += i1;
      i1 = l9;
      i2 = l4;
      mp_obj_print_helper(i0, i1, i2);
      i0 = 33304u;
      i1 = l0;
      i2 = 56u;
      i1 += i2;
      i0 = mp_obj_new_str_from_vstr(i0, i1);
      l9 = i0;
      i0 = l7;
      if (i0) {goto B98;}
      goto B97;
      B237:;
      i0 = l6;
      l4 = i0;
      i0 = 105u;
      l10 = i0;
      goto L24;
      B236:;
      i0 = l5;
      i1 = l1;
      i0 = i0 >= i1;
      if (i0) {goto B129;}
      i0 = 106u;
      l10 = i0;
      goto L24;
      B235:;
      i0 = p3;
      i1 = 4294967295u;
      i32_store((&M0), (u64)(i0), i1);
      i0 = p5;
      i1 = l5;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      i1 = 4u;
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      l9 = i0;
      i0 = l4;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto B134;}
      i0 = 9u;
      l10 = i0;
      goto L24;
      B234:;
      i0 = l3;
      i1 = l3;
      i2 = 115u;
      i3 = l7;
      i1 = i3 ? i1 : i2;
      i2 = l3;
      i0 = i2 ? i0 : i1;
      l2 = i0;
      if (i0) {goto B103;}
      i0 = 98u;
      l10 = i0;
      goto L24;
      B233:;
      i0 = l7;
      i0 = !(i0);
      if (i0) {goto B99;}
      i0 = 58u;
      l10 = i0;
      goto L24;
      B232:;
      i0 = l0;
      i1 = 56u;
      i0 += i1;
      i1 = l7;
      i2 = p1;
      i3 = p3;
      i4 = p4;
      i5 = p5;
      i6 = p6;
      mp_obj_str_format_helper(i0, i1, i2, i3, i4, i5, i6);
      i0 = l0;
      i1 = 56u;
      i0 += i1;
      i0 = vstr_null_terminated_str(i0);
      l2 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 60));
      l8 = i0;
      i0 = 0u;
      l11 = i0;
      i0 = l2;
      i0 = i32_load8_s((&M0), (u64)(i0));
      l4 = i0;
      i0 = !(i0);
      if (i0) {goto B60;}
      i0 = 59u;
      l10 = i0;
      goto L24;
      B231:;
      i0 = 22004u;
      i1 = l4;
      i0 = strchr_0(i0, i1);
      i0 = !(i0);
      if (i0) {goto B59;}
      i0 = 60u;
      l10 = i0;
      goto L24;
      B230:;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l7 = i0;
      i0 = 0u;
      l12 = i0;
      i0 = 61u;
      l10 = i0;
      goto L24;
      B229:;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i1 = 4294967264u;
      i0 += i1;
      l5 = i0;
      i1 = 13u;
      i0 = i0 > i1;
      if (i0) {goto B57;}
      i0 = 62u;
      l10 = i0;
      goto L24;
      B228:;
      i0 = 1u;
      i1 = l5;
      i0 <<= (i1 & 31);
      i1 = 10241u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B53;}
      i0 = 88u;
      l10 = i0;
      goto L24;
      B227:;
      i0 = 2u;
      i1 = l4;
      i2 = 32u;
      i1 = i1 == i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i2 = l4;
      i3 = 43u;
      i2 = i2 == i3;
      i0 = i2 ? i0 : i1;
      l11 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      l5 = i0;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 1));
      l4 = i0;
      goto B52;
      B226:;
      i0 = 4294967295u;
      l3 = i0;
      i0 = 0u;
      l2 = i0;
      i0 = 0u;
      l8 = i0;
      i0 = 0u;
      l12 = i0;
      i0 = 4294967295u;
      l5 = i0;
      i0 = l9;
      i1 = 16u;
      i0 |= i1;
      i1 = 30u;
      i0 = i0 == i1;
      if (i0) {goto B95;}
      i0 = 14u;
      l10 = i0;
      goto L24;
      B225:;
      i0 = l9;
      i1 = 1u;
      i0 &= i1;
      if (i0) {goto B94;}
      i0 = 54u;
      l10 = i0;
      goto L24;
      B224:;
      i0 = 60u;
      l7 = i0;
      i0 = l9;
      i1 = 3u;
      i0 &= i1;
      if (i0) {goto B61;}
      i0 = 56u;
      l10 = i0;
      goto L24;
      B223:;
      i0 = l9;
      i0 = i32_load((&M0), (u64)(i0));
      l4 = i0;
      i1 = 33720u;
      i0 = i0 == i1;
      if (i0) {goto B93;}
      i0 = 57u;
      l10 = i0;
      goto L24;
      B222:;
      i0 = l4;
      i1 = 33608u;
      i0 = i0 != i1;
      if (i0) {goto B91;}
      goto B92;
      B221:;
      i0 = 0u;
      l4 = i0;
      i0 = 0u;
      l7 = i0;
      i0 = 0u;
      l12 = i0;
      i0 = 95u;
      l10 = i0;
      goto L24;
      B220:;
      i0 = l2;
      l5 = i0;
      goto B51;
      B219:;
      i0 = l6;
      l4 = i0;
      i0 = 0u;
      i1 = l1;
      i0 = i0 < i1;
      if (i0) {goto B26;}
      goto B129;
      B218:;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i0 = !(i0);
      if (i0) {goto B33;}
      i0 = 90u;
      l10 = i0;
      goto L24;
      B217:;
      i0 = 0u;
      l12 = i0;
      i0 = l2;
      i0 = i32_load8_s((&M0), (u64)(i0 + 1));
      l4 = i0;
      i0 = !(i0);
      if (i0) {goto B32;}
      i0 = 91u;
      l10 = i0;
      goto L24;
      B216:;
      i0 = 0u;
      l7 = i0;
      i0 = l2;
      l6 = i0;
      i0 = 22004u;
      i1 = l4;
      i0 = strchr_0(i0, i1);
      i0 = !(i0);
      if (i0) {goto B58;}
      i0 = 92u;
      l10 = i0;
      goto L24;
      B215:;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l7 = i0;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l12 = i0;
      i0 = l2;
      i1 = 2u;
      i0 += i1;
      l6 = i0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i1 = 4294967264u;
      i0 += i1;
      l5 = i0;
      i1 = 13u;
      i0 = i0 <= i1;
      if (i0) {goto B55;}
      goto B56;
      B214:;
      i0 = p1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i0 = l4;
      i1 = 255u;
      i0 &= i1;
      l4 = i0;
      i1 = 125u;
      i0 = i0 == i1;
      if (i0) {goto B118;}
      i0 = 0u;
      l10 = i0;
      goto L24;
      B213:;
      i0 = l4;
      i1 = 123u;
      i0 = i0 != i1;
      if (i0) {goto B115;}
      i0 = 118u;
      l10 = i0;
      goto L24;
      B212:;
      i0 = l5;
      i1 = 1u;
      i0 += i1;
      l5 = i0;
      i0 = p1;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto B117;}
      goto B116;
      B211:;
      i0 = l5;
      i1 = 4294967295u;
      i0 += i1;
      l5 = i0;
      i0 = !(i0);
      if (i0) {goto B114;}
      i0 = 1u;
      l10 = i0;
      goto L24;
      B210:;
      i0 = p1;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto B113;}
      i0 = 2u;
      l10 = i0;
      goto L24;
      B209:;
      i0 = l8;
      l7 = i0;
      i0 = p1;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto B112;}
      goto B1;
      B208:;
      i0 = 0u;
      l4 = i0;
      i0 = 0u;
      l7 = i0;
      i0 = 0u;
      l12 = i0;
      i0 = 0u;
      l11 = i0;
      goto B31;
      B207:;
      i0 = 0u;
      l7 = i0;
      i0 = l2;
      l6 = i0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i1 = 4294967264u;
      i0 += i1;
      l5 = i0;
      i1 = 13u;
      i0 = i0 <= i1;
      if (i0) {goto B54;}
      i0 = 63u;
      l10 = i0;
      goto L24;
      B206:;
      i0 = l6;
      l5 = i0;
      i0 = 64u;
      l10 = i0;
      goto L24;
      B205:;
      i0 = l2;
      i1 = l8;
      i0 += i1;
      l6 = i0;
      i0 = l5;
      i1 = 1u;
      i0 += i1;
      i1 = l5;
      i2 = l4;
      i3 = 255u;
      i2 &= i3;
      i3 = 35u;
      i2 = i2 == i3;
      l13 = i2;
      i0 = i2 ? i0 : i1;
      l2 = i0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i1 = 48u;
      i0 = i0 != i1;
      if (i0) {goto B50;}
      i0 = 87u;
      l10 = i0;
      goto L24;
      B204:;
      i0 = l12;
      i1 = 48u;
      i2 = l12;
      i3 = 255u;
      i2 &= i3;
      i0 = i2 ? i0 : i1;
      l12 = i0;
      i0 = l7;
      i1 = 61u;
      i2 = l7;
      i3 = 255u;
      i2 &= i3;
      i0 = i2 ? i0 : i1;
      l7 = i0;
      i0 = 65u;
      l10 = i0;
      goto L24;
      B203:;
      i0 = 4294967295u;
      l3 = i0;
      i0 = l2;
      i1 = l6;
      i0 = i0 >= i1;
      if (i0) {goto B49;}
      i0 = 82u;
      l10 = i0;
      goto L24;
      B202:;
      i0 = l4;
      i1 = 4294967248u;
      i0 += i1;
      i1 = 255u;
      i0 &= i1;
      i1 = 9u;
      i0 = i0 > i1;
      if (i0) {goto B48;}
      i0 = 83u;
      l10 = i0;
      goto L24;
      B201:;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l2 = i0;
      i0 = 0u;
      l5 = i0;
      i0 = 84u;
      l10 = i0;
      goto L24;
      B200:;
      i0 = l4;
      i1 = 24u;
      i0 <<= (i1 & 31);
      i1 = 24u;
      i0 = (u32)((s32)i0 >> (i1 & 31));
      i1 = l5;
      i2 = 10u;
      i1 *= i2;
      i0 += i1;
      i1 = 4294967248u;
      i0 += i1;
      l5 = i0;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l8 = i0;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i0 = l2;
      i1 = l6;
      i0 = i0 >= i1;
      if (i0) {goto B34;}
      i0 = 86u;
      l10 = i0;
      goto L24;
      B199:;
      i0 = l8;
      l2 = i0;
      i0 = l4;
      i1 = 4294967248u;
      i0 += i1;
      i1 = 255u;
      i0 &= i1;
      i1 = 10u;
      i0 = i0 < i1;
      if (i0) {goto B35;}
      i0 = 85u;
      l10 = i0;
      goto L24;
      B198:;
      i0 = l8;
      i1 = 4294967295u;
      i0 += i1;
      l2 = i0;
      goto B47;
      B197:;
      i0 = 4294967295u;
      l5 = i0;
      i0 = 67u;
      l10 = i0;
      goto L24;
      B196:;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      i1 = l2;
      i2 = l4;
      i3 = 255u;
      i2 &= i3;
      i3 = 44u;
      i2 = i2 == i3;
      l14 = i2;
      i0 = i2 ? i0 : i1;
      l8 = i0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i1 = 46u;
      i0 = i0 != i1;
      if (i0) {goto B46;}
      i0 = 75u;
      l10 = i0;
      goto L24;
      B195:;
      i0 = 4294967295u;
      l3 = i0;
      i0 = l8;
      i1 = 1u;
      i0 += i1;
      l2 = i0;
      i1 = l6;
      i0 = i0 >= i1;
      if (i0) {goto B38;}
      i0 = 77u;
      l10 = i0;
      goto L24;
      B194:;
      i0 = 4294967295u;
      l3 = i0;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i1 = 4294967248u;
      i0 += i1;
      i1 = 255u;
      i0 &= i1;
      i1 = 9u;
      i0 = i0 > i1;
      if (i0) {goto B45;}
      i0 = 78u;
      l10 = i0;
      goto L24;
      B193:;
      i0 = l8;
      i1 = 2u;
      i0 += i1;
      l2 = i0;
      i0 = 0u;
      l3 = i0;
      i0 = 79u;
      l10 = i0;
      goto L24;
      B192:;
      i0 = l4;
      i1 = 24u;
      i0 <<= (i1 & 31);
      i1 = 24u;
      i0 = (u32)((s32)i0 >> (i1 & 31));
      i1 = l3;
      i2 = 10u;
      i1 *= i2;
      i0 += i1;
      i1 = 4294967248u;
      i0 += i1;
      l3 = i0;
      i0 = l2;
      i1 = l6;
      i0 = i0 >= i1;
      if (i0) {goto B37;}
      i0 = 80u;
      l10 = i0;
      goto L24;
      B191:;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l8 = i0;
      l2 = i0;
      i0 = l4;
      i1 = 4294967248u;
      i0 += i1;
      i1 = 255u;
      i0 &= i1;
      i1 = 10u;
      i0 = i0 < i1;
      if (i0) {goto B36;}
      i0 = 81u;
      l10 = i0;
      goto L24;
      B190:;
      i0 = l8;
      i1 = 4294967295u;
      i0 += i1;
      l2 = i0;
      i0 = 0u;
      l8 = i0;
      i0 = l4;
      i1 = 255u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B41;}
      i0 = 70u;
      l10 = i0;
      goto L24;
      B189:;
      i0 = 22088u;
      i1 = l4;
      i2 = 24u;
      i1 <<= (i2 & 31);
      i2 = 24u;
      i1 = (u32)((s32)i1 >> (i2 & 31));
      i0 = strchr_0(i0, i1);
      i0 = !(i0);
      if (i0) {goto B40;}
      i0 = 71u;
      l10 = i0;
      goto L24;
      B188:;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l8 = i0;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i0 = !(i0);
      if (i0) {goto B39;}
      goto B128;
      B187:;
      i0 = l8;
      l2 = i0;
      i0 = 69u;
      l10 = i0;
      goto L24;
      B186:;
      i0 = 0u;
      l8 = i0;
      i0 = l4;
      i1 = 255u;
      i0 &= i1;
      if (i0) {goto B44;}
      i0 = 74u;
      l10 = i0;
      goto L24;
      B185:;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      if (i0) {goto B128;}
      i0 = 72u;
      l10 = i0;
      goto L24;
      B184:;
      i0 = l11;
      i1 = 16u;
      i0 |= i1;
      i1 = l11;
      i2 = l13;
      i0 = i2 ? i0 : i1;
      l2 = i0;
      i1 = 32u;
      i0 |= i1;
      i1 = l2;
      i2 = l14;
      i0 = i2 ? i0 : i1;
      l2 = i0;
      i0 = l0;
      i1 = 56u;
      i0 += i1;
      vstr_clear(i0);
      i0 = l7;
      i1 = 255u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B62;}
      i0 = 55u;
      l10 = i0;
      goto L24;
      B183:;
      i0 = l2;
      i1 = 6u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B90;}
      i0 = 16u;
      l10 = i0;
      goto L24;
      B182:;
      i0 = l8;
      i1 = 255u;
      i0 &= i1;
      l4 = i0;
      i1 = 99u;
      i0 = i0 == i1;
      if (i0) {goto B127;}
      i0 = 17u;
      l10 = i0;
      goto L24;
      B181:;
      i0 = l4;
      i1 = 115u;
      i0 = i0 != i1;
      if (i0) {goto B88;}
      goto B126;
      B180:;
      i0 = l9;
      i1 = 16u;
      i0 |= i1;
      i1 = 30u;
      i0 = i0 != i1;
      if (i0) {goto B96;}
      i0 = 15u;
      l10 = i0;
      goto L24;
      B179:;
      i0 = 62u;
      l7 = i0;
      i0 = l2;
      i1 = 6u;
      i0 &= i1;
      if (i0) {goto B89;}
      i0 = 18u;
      l10 = i0;
      goto L24;
      B178:;
      i0 = l12;
      i1 = 255u;
      i0 &= i1;
      l4 = i0;
      i0 = l7;
      i1 = 255u;
      i0 &= i1;
      l11 = i0;
      i1 = 94u;
      i0 = i0 == i1;
      if (i0) {goto B87;}
      i0 = 19u;
      l10 = i0;
      goto L24;
      B177:;
      i0 = l7;
      i1 = 24u;
      i0 <<= (i1 & 31);
      i1 = 24u;
      i0 = (u32)((s32)i0 >> (i1 & 31));
      l6 = i0;
      i1 = 61u;
      i0 = i0 == i1;
      if (i0) {goto B86;}
      i0 = 20u;
      l10 = i0;
      goto L24;
      B176:;
      i0 = l6;
      i1 = 60u;
      i0 = i0 != i1;
      if (i0) {goto B85;}
      i0 = 51u;
      l10 = i0;
      goto L24;
      B175:;
      i0 = l2;
      i1 = 1u;
      i0 |= i1;
      l2 = i0;
      i0 = 21u;
      l10 = i0;
      goto L24;
      B174:;
      i0 = l12;
      i1 = 32u;
      i2 = l4;
      i0 = i2 ? i0 : i1;
      l4 = i0;
      i0 = l9;
      i1 = 16u;
      i0 |= i1;
      i1 = 30u;
      i0 = i0 == i1;
      l7 = i0;
      i0 = !(i0);
      if (i0) {goto B84;}
      i0 = 23u;
      l10 = i0;
      goto L24;
      B173:;
      i0 = l8;
      i1 = 24u;
      i0 <<= (i1 & 31);
      i1 = 24u;
      i0 = (u32)((s32)i0 >> (i1 & 31));
      l6 = i0;
      i1 = 120u;
      i0 = i0 > i1;
      if (i0) {goto B133;}
      i0 = 24u;
      l10 = i0;
      goto L24;
      B172:;
      i0 = l6;
      switch (i0) {
        case 0: goto B254;
        case 1: goto B133;
        case 2: goto B133;
        case 3: goto B133;
        case 4: goto B133;
        case 5: goto B133;
        case 6: goto B133;
        case 7: goto B133;
        case 8: goto B133;
        case 9: goto B133;
        case 10: goto B133;
        case 11: goto B133;
        case 12: goto B133;
        case 13: goto B133;
        case 14: goto B133;
        case 15: goto B133;
        case 16: goto B133;
        case 17: goto B133;
        case 18: goto B133;
        case 19: goto B133;
        case 20: goto B133;
        case 21: goto B133;
        case 22: goto B133;
        case 23: goto B133;
        case 24: goto B133;
        case 25: goto B133;
        case 26: goto B133;
        case 27: goto B133;
        case 28: goto B133;
        case 29: goto B133;
        case 30: goto B133;
        case 31: goto B133;
        case 32: goto B133;
        case 33: goto B133;
        case 34: goto B133;
        case 35: goto B133;
        case 36: goto B133;
        case 37: goto B78;
        case 38: goto B133;
        case 39: goto B133;
        case 40: goto B133;
        case 41: goto B133;
        case 42: goto B133;
        case 43: goto B133;
        case 44: goto B133;
        case 45: goto B133;
        case 46: goto B133;
        case 47: goto B133;
        case 48: goto B133;
        case 49: goto B133;
        case 50: goto B133;
        case 51: goto B133;
        case 52: goto B133;
        case 53: goto B133;
        case 54: goto B133;
        case 55: goto B133;
        case 56: goto B133;
        case 57: goto B133;
        case 58: goto B133;
        case 59: goto B133;
        case 60: goto B133;
        case 61: goto B133;
        case 62: goto B133;
        case 63: goto B133;
        case 64: goto B133;
        case 65: goto B133;
        case 66: goto B133;
        case 67: goto B133;
        case 68: goto B133;
        case 69: goto B78;
        case 70: goto B78;
        case 71: goto B78;
        case 72: goto B133;
        case 73: goto B133;
        case 74: goto B133;
        case 75: goto B133;
        case 76: goto B133;
        case 77: goto B133;
        case 78: goto B133;
        case 79: goto B133;
        case 80: goto B133;
        case 81: goto B133;
        case 82: goto B133;
        case 83: goto B133;
        case 84: goto B133;
        case 85: goto B133;
        case 86: goto B133;
        case 87: goto B133;
        case 88: goto B77;
        case 89: goto B133;
        case 90: goto B133;
        case 91: goto B133;
        case 92: goto B133;
        case 93: goto B133;
        case 94: goto B133;
        case 95: goto B133;
        case 96: goto B133;
        case 97: goto B133;
        case 98: goto B76;
        case 99: goto B75;
        case 100: goto B254;
        case 101: goto B78;
        case 102: goto B78;
        case 103: goto B78;
        case 104: goto B133;
        case 105: goto B133;
        case 106: goto B133;
        case 107: goto B133;
        case 108: goto B133;
        case 109: goto B133;
        case 110: goto B254;
        case 111: goto B74;
        case 112: goto B133;
        case 113: goto B133;
        case 114: goto B133;
        case 115: goto B133;
        case 116: goto B133;
        case 117: goto B133;
        case 118: goto B133;
        case 119: goto B133;
        case 120: goto B77;
        default: goto B254;
      }
      B254:;
      i0 = 48u;
      l10 = i0;
      goto L24;
      B171:;
      i0 = l0;
      i1 = 72u;
      i0 += i1;
      i1 = l9;
      i2 = 10u;
      i3 = 97u;
      i4 = l2;
      i5 = l4;
      i6 = 24u;
      i5 <<= (i6 & 31);
      i6 = 24u;
      i5 = (u32)((s32)i5 >> (i6 & 31));
      i6 = l5;
      i7 = 0u;
      i0 = mp_print_mp_int(i0, i1, i2, i3, i4, i5, i6, i7);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto L2;}
      goto B0;
      B170:;
      i0 = l2;
      i1 = 64u;
      i0 |= i1;
      l2 = i0;
      i0 = l12;
      i1 = 32u;
      i2 = l4;
      i0 = i2 ? i0 : i1;
      l4 = i0;
      i0 = l9;
      i1 = 16u;
      i0 |= i1;
      i1 = 30u;
      i0 = i0 == i1;
      l7 = i0;
      if (i0) {goto B81;}
      i0 = 22u;
      l10 = i0;
      goto L24;
      B169:;
      i0 = l9;
      i1 = 1u;
      i0 &= i1;
      if (i0) {goto B80;}
      i0 = 49u;
      l10 = i0;
      goto L24;
      B168:;
      i0 = l9;
      i1 = 3u;
      i0 &= i1;
      if (i0) {goto B73;}
      i0 = 50u;
      l10 = i0;
      goto L24;
      B167:;
      i0 = l9;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = 33720u;
      i0 = i0 == i1;
      if (i0) {goto B79;}
      i0 = 29u;
      l10 = i0;
      goto L24;
      B166:;
      i0 = l7;
      i0 = !(i0);
      if (i0) {goto B72;}
      i0 = 31u;
      l10 = i0;
      goto L24;
      B165:;
      i0 = 103u;
      i1 = l8;
      i2 = 103u;
      i3 = l8;
      i4 = 255u;
      i3 &= i4;
      i1 = i3 ? i1 : i2;
      l8 = i1;
      i2 = l8;
      i3 = 255u;
      i2 &= i3;
      i3 = 110u;
      i2 = i2 == i3;
      i0 = i2 ? i0 : i1;
      i1 = 24u;
      i0 <<= (i1 & 31);
      i1 = 24u;
      i0 = (u32)((s32)i0 >> (i1 & 31));
      l8 = i0;
      i1 = 4294967227u;
      i0 += i1;
      i1 = 3u;
      i0 = i0 < i1;
      if (i0) {goto B68;}
      i0 = 32u;
      l10 = i0;
      goto L24;
      B164:;
      i0 = l8;
      i1 = 4294967195u;
      i0 += i1;
      i1 = 3u;
      i0 = i0 >= i1;
      if (i0) {goto B67;}
      i0 = 35u;
      l10 = i0;
      goto L24;
      B163:;
      i0 = l0;
      i1 = 72u;
      i0 += i1;
      i1 = l9;
      d1 = mp_obj_get_float(i1);
      i2 = l8;
      i3 = l2;
      i4 = l4;
      i5 = 24u;
      i4 <<= (i5 & 31);
      i5 = 24u;
      i4 = (u32)((s32)i4 >> (i5 & 31));
      i5 = l5;
      i6 = l3;
      i0 = mp_print_float(i0, d1, i2, i3, i4, i5, i6);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto L2;}
      goto B0;
      B162:;
      i0 = l2;
      i1 = 128u;
      i0 |= i1;
      l2 = i0;
      i0 = l12;
      i1 = 32u;
      i2 = l4;
      i0 = i2 ? i0 : i1;
      l4 = i0;
      i0 = l9;
      i1 = 16u;
      i0 |= i1;
      i1 = 30u;
      i0 = i0 == i1;
      l7 = i0;
      if (i0) {goto B83;}
      goto B82;
      B161:;
      i0 = 0u;
      l8 = i0;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i1 = 255u;
      i0 &= i1;
      if (i0) {goto B42;}
      goto B43;
      B160:;
      i0 = l9;
      i1 = 1u;
      i0 &= i1;
      if (i0) {goto B71;}
      i0 = 36u;
      l10 = i0;
      goto L24;
      B159:;
      i0 = l9;
      i1 = 3u;
      i0 &= i1;
      l6 = i0;
      if (i0) {goto B66;}
      i0 = 46u;
      l10 = i0;
      goto L24;
      B158:;
      i0 = l9;
      i0 = i32_load((&M0), (u64)(i0));
      l7 = i0;
      i1 = 33720u;
      i0 = i0 == i1;
      if (i0) {goto B70;}
      i0 = 47u;
      l10 = i0;
      goto L24;
      B157:;
      i0 = l7;
      i1 = 33608u;
      i0 = i0 == i1;
      if (i0) {goto B69;}
      i0 = 37u;
      l10 = i0;
      goto L24;
      B156:;
      i0 = l11;
      i1 = 61u;
      i0 = i0 == i1;
      if (i0) {goto B122;}
      i0 = 38u;
      l10 = i0;
      goto L24;
      B155:;
      i0 = l8;
      i1 = 255u;
      i0 &= i1;
      i1 = 115u;
      i0 = i0 == i1;
      if (i0) {goto B65;}
      i0 = 39u;
      l10 = i0;
      goto L24;
      B154:;
      i0 = l8;
      i1 = 24u;
      i0 <<= (i1 & 31);
      i1 = 24u;
      i0 = (u32)((s32)i0 >> (i1 & 31));
      l8 = i0;
      if (i0) {goto B121;}
      i0 = 40u;
      l10 = i0;
      goto L24;
      B153:;
      i0 = l9;
      i1 = 7u;
      i0 &= i1;
      i1 = 2u;
      i0 = i0 != i1;
      if (i0) {goto B64;}
      i0 = 45u;
      l10 = i0;
      goto L24;
      B152:;
      i0 = l9;
      i1 = 3u;
      i0 >>= (i1 & 31);
      i1 = l0;
      i2 = 56u;
      i1 += i2;
      i0 = qstr_data(i0, i1);
      l6 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 56));
      l8 = i0;
      goto B63;
      B151:;
      i0 = l0;
      i1 = 72u;
      i0 += i1;
      i1 = l9;
      i2 = 16u;
      i3 = l6;
      i4 = 4294967273u;
      i3 += i4;
      i4 = l2;
      i5 = l4;
      i6 = 24u;
      i5 <<= (i6 & 31);
      i6 = 24u;
      i5 = (u32)((s32)i5 >> (i6 & 31));
      i6 = l5;
      i7 = 0u;
      i0 = mp_print_mp_int(i0, i1, i2, i3, i4, i5, i6, i7);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto L2;}
      goto B0;
      B150:;
      i0 = l8;
      i1 = 37u;
      i0 = i0 != i1;
      if (i0) {goto B123;}
      i0 = 34u;
      l10 = i0;
      goto L24;
      B149:;
      i0 = l0;
      i1 = 72u;
      i0 += i1;
      i1 = l9;
      d1 = mp_obj_get_float(i1);
      d2 = 100;
      d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
      i2 = 102u;
      i3 = l2;
      i4 = 256u;
      i3 |= i4;
      i4 = l4;
      i5 = 24u;
      i4 <<= (i5 & 31);
      i5 = 24u;
      i4 = (u32)((s32)i4 >> (i5 & 31));
      i5 = l5;
      i6 = l3;
      i0 = mp_print_float(i0, d1, i2, i3, i4, i5, i6);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto L2;}
      goto B0;
      B148:;
      i0 = l0;
      i1 = l9;
      i1 = mp_obj_get_int(i1);
      i32_store8((&M0), (u64)(i0 + 56), i1);
      i0 = l0;
      i1 = 72u;
      i0 += i1;
      i1 = l0;
      i2 = 56u;
      i1 += i2;
      i2 = 1u;
      i3 = l2;
      i4 = l4;
      i5 = 24u;
      i4 <<= (i5 & 31);
      i5 = 24u;
      i4 = (u32)((s32)i4 >> (i5 & 31));
      i5 = l5;
      i0 = mp_print_strn(i0, i1, i2, i3, i4, i5);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto L2;}
      goto B0;
      B147:;
      i0 = l0;
      i1 = 72u;
      i0 += i1;
      i1 = l9;
      i2 = 8u;
      i3 = 97u;
      i4 = l2;
      i5 = 5u;
      i4 <<= (i5 & 31);
      i5 = 512u;
      i4 &= i5;
      i5 = l2;
      i4 |= i5;
      i5 = l4;
      i6 = 24u;
      i5 <<= (i6 & 31);
      i6 = 24u;
      i5 = (u32)((s32)i5 >> (i6 & 31));
      i6 = l5;
      i7 = 0u;
      i0 = mp_print_mp_int(i0, i1, i2, i3, i4, i5, i6, i7);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto L2;}
      goto B0;
      B146:;
      i0 = l0;
      i1 = 72u;
      i0 += i1;
      i1 = l9;
      i2 = 2u;
      i3 = 97u;
      i4 = l2;
      i5 = l4;
      i6 = 24u;
      i5 <<= (i6 & 31);
      i6 = 24u;
      i5 = (u32)((s32)i5 >> (i6 & 31));
      i6 = l5;
      i7 = 0u;
      i0 = mp_print_mp_int(i0, i1, i2, i3, i4, i5, i6, i7);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto L2;}
      goto B0;
      B145:;
      i0 = l6;
      if (i0) {goto B120;}
      i0 = 42u;
      l10 = i0;
      goto L24;
      B144:;
      i0 = l9;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = i32_load((&M0), (u64)(i0 + 24));
      i1 = 82u;
      i0 = i0 != i1;
      if (i0) {goto B120;}
      i0 = 43u;
      l10 = i0;
      goto L24;
      B143:;
      i0 = l0;
      i1 = l9;
      i1 = i32_load((&M0), (u64)(i1 + 8));
      l8 = i1;
      i32_store((&M0), (u64)(i0 + 56), i1);
      i0 = l9;
      i0 = i32_load((&M0), (u64)(i0 + 12));
      l6 = i0;
      i0 = 44u;
      l10 = i0;
      goto L24;
      B142:;
      i0 = l0;
      i1 = 72u;
      i0 += i1;
      i1 = l6;
      i2 = l8;
      i3 = l3;
      i4 = l3;
      i5 = 0u;
      i4 = (u32)((s32)i4 < (s32)i5);
      i2 = i4 ? i2 : i3;
      l9 = i2;
      i3 = l8;
      i4 = l8;
      i5 = l9;
      i4 = i4 > i5;
      i2 = i4 ? i2 : i3;
      i3 = l2;
      i4 = l4;
      i5 = 24u;
      i4 <<= (i5 & 31);
      i5 = 24u;
      i4 = (u32)((s32)i4 >> (i5 & 31));
      i5 = l5;
      i0 = mp_print_strn(i0, i1, i2, i3, i4, i5);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto L2;}
      goto B0;
      B141:;
      i0 = l8;
      l7 = i0;
      i0 = p1;
      i1 = 4294967295u;
      i0 += i1;
      p1 = i0;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto B111;}
      goto B1;
      B140:;
      i0 = l6;
      l4 = i0;
      i0 = l6;
      i1 = l2;
      i0 = i0 >= i1;
      if (i0) {goto B108;}
      i0 = 99u;
      l10 = i0;
      goto L24;
      B139:;
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l5 = i0;
      i1 = 46u;
      i0 = i0 == i1;
      if (i0) {goto B105;}
      i0 = 100u;
      l10 = i0;
      goto L24;
      B138:;
      i0 = l5;
      i1 = 91u;
      i0 = i0 == i1;
      if (i0) {goto B106;}
      i0 = 101u;
      l10 = i0;
      goto L24;
      B137:;
      i0 = l4;
      i1 = 1u;
      i0 += i1;
      l4 = i0;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto B107;}
      i0 = 7u;
      l10 = i0;
      goto L24;
      B136:;
      i0 = p6;
      i1 = l6;
      i2 = l4;
      i3 = l6;
      i2 -= i3;
      i1 = qstr_from_strn(i1, i2);
      i2 = 3u;
      i1 <<= (i2 & 31);
      i2 = 2u;
      i1 |= i2;
      l8 = i1;
      i2 = 0u;
      i0 = mp_map_lookup(i0, i1, i2);
      l5 = i0;
      i0 = !(i0);
      if (i0) {goto B119;}
      i0 = 8u;
      l10 = i0;
      goto L24;
      B135:;
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0 + 4));
      l9 = i0;
      i0 = l4;
      i1 = l2;
      i0 = i0 >= i1;
      if (i0) {goto B104;}
      B134:;
      i0 = 43809u;
      mp_raise_NotImplementedError(i0);
      UNREACHABLE;
      B133:;
      i0 = l0;
      i1 = l9;
      i1 = mp_obj_get_type_str(i1);
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l0;
      i1 = l6;
      i32_store((&M0), (u64)(i0), i1);
      i0 = 37436u;
      i1 = 21738u;
      i2 = l0;
      mp_raise_msg_varg(i0, i1, i2);
      UNREACHABLE;
      B132:;
      i0 = 20351u;
      mp_raise_ValueError(i0);
      UNREACHABLE;
      B131:;
      i0 = 21175u;
      i1 = 19531u;
      i2 = 1138u;
      i3 = 43965u;
      __assert_fail(i0, i1, i2, i3);
      UNREACHABLE;
      B130:;
      i0 = 20542u;
      mp_raise_ValueError(i0);
      UNREACHABLE;
      B129:;
      i0 = 36836u;
      i1 = 20741u;
      mp_raise_msg(i0, i1);
      UNREACHABLE;
      B128:;
      i0 = 21283u;
      mp_raise_ValueError(i0);
      UNREACHABLE;
      B127:;
      i0 = 21607u;
      mp_raise_ValueError(i0);
      UNREACHABLE;
      B126:;
      i0 = 21463u;
      mp_raise_ValueError(i0);
      UNREACHABLE;
      B125:;
      i0 = 36836u;
      i1 = 20741u;
      mp_raise_msg(i0, i1);
      UNREACHABLE;
      B124:;
      i0 = 20961u;
      mp_raise_ValueError(i0);
      UNREACHABLE;
      B123:;
      i0 = l0;
      i1 = l9;
      i1 = mp_obj_get_type_str(i1);
      i32_store((&M0), (u64)(i0 + 20), i1);
      i0 = l0;
      i1 = l8;
      i32_store((&M0), (u64)(i0 + 16), i1);
      i0 = 37436u;
      i1 = 21738u;
      i2 = l0;
      i3 = 16u;
      i2 += i3;
      mp_raise_msg_varg(i0, i1, i2);
      UNREACHABLE;
      B122:;
      i0 = 21863u;
      mp_raise_ValueError(i0);
      UNREACHABLE;
      B121:;
      i0 = l0;
      i1 = l9;
      i1 = mp_obj_get_type_str(i1);
      i32_store((&M0), (u64)(i0 + 36), i1);
      i0 = l0;
      i1 = l8;
      i32_store((&M0), (u64)(i0 + 32), i1);
      i0 = 37436u;
      i1 = 21738u;
      i2 = l0;
      i3 = 32u;
      i2 += i3;
      mp_raise_msg_varg(i0, i1, i2);
      UNREACHABLE;
      B120:;
      i0 = l9;
      bad_implicit_conversion(i0);
      UNREACHABLE;
      B119:;
      i0 = 36896u;
      i1 = l8;
      i0 = mp_obj_new_exception_arg1(i0, i1);
      nlr_jump(i0);
      UNREACHABLE;
      B118:;
      i0 = 116u;
      l10 = i0;
      goto L24;
      B117:;
      i0 = 115u;
      l10 = i0;
      goto L24;
      B116:;
      i0 = 2u;
      l10 = i0;
      goto L24;
      B115:;
      i0 = 1u;
      l10 = i0;
      goto L24;
      B114:;
      i0 = 117u;
      l10 = i0;
      goto L24;
      B113:;
      i0 = 115u;
      l10 = i0;
      goto L24;
      B112:;
      i0 = 3u;
      l10 = i0;
      goto L24;
      B111:;
      i0 = 3u;
      l10 = i0;
      goto L24;
      B110:;
      i0 = 112u;
      l10 = i0;
      goto L24;
      B109:;
      i0 = 6u;
      l10 = i0;
      goto L24;
      B108:;
      i0 = 7u;
      l10 = i0;
      goto L24;
      B107:;
      i0 = 99u;
      l10 = i0;
      goto L24;
      B106:;
      i0 = 7u;
      l10 = i0;
      goto L24;
      B105:;
      i0 = 7u;
      l10 = i0;
      goto L24;
      B104:;
      i0 = 9u;
      l10 = i0;
      goto L24;
      B103:;
      i0 = 10u;
      l10 = i0;
      goto L24;
      B102:;
      i0 = 98u;
      l10 = i0;
      goto L24;
      B101:;
      i0 = 97u;
      l10 = i0;
      goto L24;
      B100:;
      i0 = 12u;
      l10 = i0;
      goto L24;
      B99:;
      i0 = 13u;
      l10 = i0;
      goto L24;
      B98:;
      i0 = 58u;
      l10 = i0;
      goto L24;
      B97:;
      i0 = 13u;
      l10 = i0;
      goto L24;
      B96:;
      i0 = 14u;
      l10 = i0;
      goto L24;
      B95:;
      i0 = 15u;
      l10 = i0;
      goto L24;
      B94:;
      i0 = 15u;
      l10 = i0;
      goto L24;
      B93:;
      i0 = 15u;
      l10 = i0;
      goto L24;
      B92:;
      i0 = 15u;
      l10 = i0;
      goto L24;
      B91:;
      i0 = 55u;
      l10 = i0;
      goto L24;
      B90:;
      i0 = 18u;
      l10 = i0;
      goto L24;
      B89:;
      i0 = 16u;
      l10 = i0;
      goto L24;
      B88:;
      i0 = 18u;
      l10 = i0;
      goto L24;
      B87:;
      i0 = 53u;
      l10 = i0;
      goto L24;
      B86:;
      i0 = 52u;
      l10 = i0;
      goto L24;
      B85:;
      i0 = 21u;
      l10 = i0;
      goto L24;
      B84:;
      i0 = 22u;
      l10 = i0;
      goto L24;
      B83:;
      i0 = 23u;
      l10 = i0;
      goto L24;
      B82:;
      i0 = 22u;
      l10 = i0;
      goto L24;
      B81:;
      i0 = 23u;
      l10 = i0;
      goto L24;
      B80:;
      i0 = 23u;
      l10 = i0;
      goto L24;
      B79:;
      i0 = 23u;
      l10 = i0;
      goto L24;
      B78:;
      i0 = 29u;
      l10 = i0;
      goto L24;
      B77:;
      i0 = 28u;
      l10 = i0;
      goto L24;
      B76:;
      i0 = 27u;
      l10 = i0;
      goto L24;
      B75:;
      i0 = 26u;
      l10 = i0;
      goto L24;
      B74:;
      i0 = 25u;
      l10 = i0;
      goto L24;
      B73:;
      i0 = 29u;
      l10 = i0;
      goto L24;
      B72:;
      i0 = 30u;
      l10 = i0;
      goto L24;
      B71:;
      i0 = 31u;
      l10 = i0;
      goto L24;
      B70:;
      i0 = 31u;
      l10 = i0;
      goto L24;
      B69:;
      i0 = 31u;
      l10 = i0;
      goto L24;
      B68:;
      i0 = 35u;
      l10 = i0;
      goto L24;
      B67:;
      i0 = 33u;
      l10 = i0;
      goto L24;
      B66:;
      i0 = 37u;
      l10 = i0;
      goto L24;
      B65:;
      i0 = 40u;
      l10 = i0;
      goto L24;
      B64:;
      i0 = 41u;
      l10 = i0;
      goto L24;
      B63:;
      i0 = 44u;
      l10 = i0;
      goto L24;
      B62:;
      i0 = 73u;
      l10 = i0;
      goto L24;
      B61:;
      i0 = 55u;
      l10 = i0;
      goto L24;
      B60:;
      i0 = 96u;
      l10 = i0;
      goto L24;
      B59:;
      i0 = 89u;
      l10 = i0;
      goto L24;
      B58:;
      i0 = 61u;
      l10 = i0;
      goto L24;
      B57:;
      i0 = 63u;
      l10 = i0;
      goto L24;
      B56:;
      i0 = 63u;
      l10 = i0;
      goto L24;
      B55:;
      i0 = 62u;
      l10 = i0;
      goto L24;
      B54:;
      i0 = 62u;
      l10 = i0;
      goto L24;
      B53:;
      i0 = 63u;
      l10 = i0;
      goto L24;
      B52:;
      i0 = 64u;
      l10 = i0;
      goto L24;
      B51:;
      i0 = 64u;
      l10 = i0;
      goto L24;
      B50:;
      i0 = 65u;
      l10 = i0;
      goto L24;
      B49:;
      i0 = 66u;
      l10 = i0;
      goto L24;
      B48:;
      i0 = 66u;
      l10 = i0;
      goto L24;
      B47:;
      i0 = 67u;
      l10 = i0;
      goto L24;
      B46:;
      i0 = 68u;
      l10 = i0;
      goto L24;
      B45:;
      i0 = 69u;
      l10 = i0;
      goto L24;
      B44:;
      i0 = 70u;
      l10 = i0;
      goto L24;
      B43:;
      i0 = 74u;
      l10 = i0;
      goto L24;
      B42:;
      i0 = 70u;
      l10 = i0;
      goto L24;
      B41:;
      i0 = 74u;
      l10 = i0;
      goto L24;
      B40:;
      i0 = 74u;
      l10 = i0;
      goto L24;
      B39:;
      i0 = 72u;
      l10 = i0;
      goto L24;
      B38:;
      i0 = 76u;
      l10 = i0;
      goto L24;
      B37:;
      i0 = 76u;
      l10 = i0;
      goto L24;
      B36:;
      i0 = 79u;
      l10 = i0;
      goto L24;
      B35:;
      i0 = 84u;
      l10 = i0;
      goto L24;
      B34:;
      i0 = 85u;
      l10 = i0;
      goto L24;
      B33:;
      i0 = 94u;
      l10 = i0;
      goto L24;
      B32:;
      i0 = 93u;
      l10 = i0;
      goto L24;
      B31:;
      i0 = 95u;
      l10 = i0;
      goto L24;
      B30:;
      i0 = 104u;
      l10 = i0;
      goto L24;
      B29:;
      i0 = 110u;
      l10 = i0;
      goto L24;
      B28:;
      i0 = 105u;
      l10 = i0;
      goto L24;
      B27:;
      i0 = 105u;
      l10 = i0;
      goto L24;
      B26:;
      i0 = 106u;
      l10 = i0;
      goto L24;
      B25:;
      i0 = 108u;
      l10 = i0;
      goto L24;
  B1:;
  i0 = 20226u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 str_replace(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0, l15 = 0, 
      l16 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 4294967295u;
  l1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 4294967295u;
  i2 = p0;
  i3 = 4294967295u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  l1 = i0;
  B4:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l2 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i1 = mp_obj_get_type(i1);
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_get_type(i0);
  i1 = l2;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l3 = i0;
  goto B5;
  B6:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  B5:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l4 = i0;
  goto B7;
  B8:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l4 = i0;
  B7:;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B10;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 20u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l5 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 28));
  l6 = i1;
  i0 = i0 > i1;
  if (i0) {goto B9;}
  goto B0;
  B10:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l5 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 28));
  l6 = i1;
  i0 = i0 <= i1;
  if (i0) {goto B0;}
  B9:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B3:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B1:;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B0:;
  i0 = 0u;
  l7 = i0;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  l8 = i0;
  i0 = 0u;
  l9 = i0;
  i0 = 0u;
  l10 = i0;
  i0 = p0;
  if (i0) {goto B12;}
  i0 = 31u;
  l11 = i0;
  goto B11;
  B12:;
  i0 = 5u;
  l11 = i0;
  B11:;
  L13: vm_checktime();
    i0 = l11;
    switch (i0) {
      case 0: goto B46;
      case 1: goto B44;
      case 2: goto B50;
      case 3: goto B49;
      case 4: goto B48;
      case 5: goto B47;
      case 6: goto B74;
      case 7: goto B73;
      case 8: goto B72;
      case 9: goto B71;
      case 10: goto B70;
      case 11: goto B69;
      case 12: goto B68;
      case 13: goto B67;
      case 14: goto B66;
      case 15: goto B65;
      case 16: goto B64;
      case 17: goto B51;
      case 18: goto B63;
      case 19: goto B62;
      case 20: goto B61;
      case 21: goto B60;
      case 22: goto B59;
      case 23: goto B58;
      case 24: goto B57;
      case 25: goto B56;
      case 26: goto B55;
      case 27: goto B54;
      case 28: goto B53;
      case 29: goto B45;
      case 30: goto B52;
      case 31: goto B77;
      case 32: goto B76;
      case 33: goto B75;
      case 34: goto B42;
      case 35: goto B43;
      default: goto B43;
    }
    B77:;
    i0 = l7;
    i0 = !(i0);
    if (i0) {goto B14;}
    i0 = 32u;
    l11 = i0;
    goto L13;
    B76:;
    i0 = l7;
    i1 = l5;
    i2 = l0;
    i2 = i32_load((&M0), (u64)(i2 + 20));
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = 33u;
    l11 = i0;
    goto L13;
    B75:;
    i0 = 1u;
    l10 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 20));
    l9 = i0;
    i0 = 1u;
    i1 = l1;
    i0 = i0 == i1;
    if (i0) {goto B36;}
    i0 = 6u;
    l11 = i0;
    goto L13;
    B74:;
    i0 = l6;
    i0 = !(i0);
    if (i0) {goto B37;}
    i0 = 7u;
    l11 = i0;
    goto L13;
    B73:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 24));
    l12 = i0;
    i0 = l7;
    i0 = !(i0);
    if (i0) {goto B31;}
    i0 = 8u;
    l11 = i0;
    goto L13;
    B72:;
    i0 = l3;
    l13 = i0;
    i0 = 9u;
    l11 = i0;
    goto L13;
    B71:;
    i0 = l6;
    i1 = l12;
    i0 = i0 < i1;
    if (i0) {goto B28;}
    i0 = 10u;
    l11 = i0;
    goto L13;
    B70:;
    i0 = l13;
    p0 = i0;
    i0 = l13;
    i1 = l4;
    i2 = l12;
    i0 = memcmp_0(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto B27;}
    i0 = 11u;
    l11 = i0;
    goto L13;
    B69:;
    i0 = l6;
    i1 = l12;
    i0 -= i1;
    l14 = i0;
    i0 = 0u;
    p0 = i0;
    i0 = 12u;
    l11 = i0;
    goto L13;
    B68:;
    i0 = l14;
    i1 = p0;
    i0 = i0 == i1;
    if (i0) {goto B25;}
    i0 = 13u;
    l11 = i0;
    goto L13;
    B67:;
    i0 = l13;
    i1 = p0;
    i0 += i1;
    l15 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    l16 = i0;
    p0 = i0;
    i0 = l15;
    i1 = 1u;
    i0 += i1;
    i1 = l4;
    i2 = l12;
    i0 = memcmp_0(i0, i1, i2);
    if (i0) {goto B26;}
    i0 = 14u;
    l11 = i0;
    goto L13;
    B66:;
    i0 = l13;
    i1 = l16;
    i0 += i1;
    p0 = i0;
    i0 = 15u;
    l11 = i0;
    goto L13;
    B65:;
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B24;}
    i0 = 16u;
    l11 = i0;
    goto L13;
    B64:;
    i0 = l7;
    i1 = l9;
    i0 += i1;
    i1 = l13;
    i2 = p0;
    i3 = p0;
    i4 = 1u;
    i3 += i4;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 24));
    i2 = i4 ? i2 : i3;
    p0 = i2;
    i3 = l13;
    i2 -= i3;
    l12 = i2;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l7;
    i1 = l12;
    i2 = l9;
    i1 += i2;
    l15 = i1;
    i0 += i1;
    i1 = l5;
    i2 = l0;
    i2 = i32_load((&M0), (u64)(i2 + 20));
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l3;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 28));
    i0 += i1;
    i1 = p0;
    i2 = l0;
    i2 = i32_load((&M0), (u64)(i2 + 24));
    l12 = i2;
    i1 += i2;
    l13 = i1;
    i0 -= i1;
    l6 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 20));
    i1 = l15;
    i0 += i1;
    l9 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    l10 = i0;
    i1 = l1;
    i0 = i0 == i1;
    if (i0) {goto B20;}
    i0 = 18u;
    l11 = i0;
    goto L13;
    B63:;
    i0 = l6;
    if (i0) {goto B30;}
    goto B29;
    B62:;
    i0 = l3;
    l14 = i0;
    i0 = 20u;
    l11 = i0;
    goto L13;
    B61:;
    i0 = l6;
    i1 = l12;
    i0 = i0 < i1;
    if (i0) {goto B19;}
    i0 = 21u;
    l11 = i0;
    goto L13;
    B60:;
    i0 = l14;
    p0 = i0;
    i0 = l14;
    i1 = l4;
    i2 = l12;
    i0 = memcmp_0(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto B18;}
    i0 = 22u;
    l11 = i0;
    goto L13;
    B59:;
    i0 = l6;
    i1 = l12;
    i0 -= i1;
    l13 = i0;
    i0 = 0u;
    p0 = i0;
    i0 = 23u;
    l11 = i0;
    goto L13;
    B58:;
    i0 = l13;
    i1 = p0;
    i0 = i0 == i1;
    if (i0) {goto B16;}
    i0 = 24u;
    l11 = i0;
    goto L13;
    B57:;
    i0 = l14;
    i1 = p0;
    i0 += i1;
    l15 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    l16 = i0;
    p0 = i0;
    i0 = l15;
    i1 = 1u;
    i0 += i1;
    i1 = l4;
    i2 = l12;
    i0 = memcmp_0(i0, i1, i2);
    if (i0) {goto B17;}
    i0 = 25u;
    l11 = i0;
    goto L13;
    B56:;
    i0 = l14;
    i1 = l16;
    i0 += i1;
    p0 = i0;
    i0 = 26u;
    l11 = i0;
    goto L13;
    B55:;
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B15;}
    i0 = 27u;
    l11 = i0;
    goto L13;
    B54:;
    i0 = l3;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 28));
    i0 += i1;
    i1 = p0;
    i2 = p0;
    i3 = 1u;
    i2 += i3;
    i3 = l0;
    i3 = i32_load((&M0), (u64)(i3 + 24));
    l12 = i3;
    i1 = i3 ? i1 : i2;
    p0 = i1;
    i2 = l12;
    i1 += i2;
    l13 = i1;
    i0 -= i1;
    l6 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 20));
    i1 = l9;
    i2 = l14;
    i1 -= i2;
    i2 = p0;
    i1 += i2;
    i0 += i1;
    l9 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    l10 = i0;
    i1 = l1;
    i0 = i0 == i1;
    if (i0) {goto B21;}
    i0 = 28u;
    l11 = i0;
    goto L13;
    B53:;
    i0 = l13;
    l14 = i0;
    i0 = l6;
    if (i0) {goto B23;}
    goto B22;
    B52:;
    i0 = l14;
    l13 = i0;
    i0 = 17u;
    l11 = i0;
    goto L13;
    B51:;
    i0 = l7;
    if (i0) {goto B35;}
    i0 = 2u;
    l11 = i0;
    goto L13;
    B50:;
    i0 = l10;
    i0 = !(i0);
    if (i0) {goto B33;}
    i0 = 3u;
    l11 = i0;
    goto L13;
    B49:;
    i0 = l0;
    i1 = l6;
    i2 = l9;
    i1 += i2;
    vstr_init_len(i0, i1);
    i0 = l8;
    i0 = i32_load((&M0), (u64)(i0));
    l7 = i0;
    i0 = !(i0);
    if (i0) {goto B32;}
    i0 = 4u;
    l11 = i0;
    goto L13;
    B48:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 28));
    l6 = i0;
    i0 = 0u;
    l9 = i0;
    i0 = 0u;
    l10 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 24));
    i0 = !(i0);
    if (i0) {goto B41;}
    i0 = 5u;
    l11 = i0;
    goto L13;
    B47:;
    i0 = l10;
    i1 = l1;
    i0 = i0 != i1;
    if (i0) {goto B40;}
    i0 = 0u;
    l11 = i0;
    goto L13;
    B46:;
    i0 = l3;
    l13 = i0;
    i0 = l7;
    i0 = !(i0);
    if (i0) {goto B39;}
    goto B38;
    B45:;
    i0 = l14;
    l13 = i0;
    i0 = l7;
    i0 = !(i0);
    if (i0) {goto B34;}
    i0 = 1u;
    l11 = i0;
    goto L13;
    B44:;
    i0 = l7;
    i1 = l9;
    i0 += i1;
    i1 = l13;
    i2 = l6;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l2;
    i1 = l0;
    i0 = mp_obj_new_str_from_vstr(i0, i1);
    p0 = i0;
    i0 = l0;
    i1 = 32u;
    i0 += i1;
    g0 = i0;
    i0 = p0;
    goto Bfunc;
    B43:;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    i0 = l0;
    i1 = 32u;
    i0 += i1;
    g0 = i0;
    i0 = p0;
    goto Bfunc;
    B42:;
    i0 = 22670u;
    i1 = 19531u;
    i2 = 1735u;
    i3 = 44128u;
    __assert_fail(i0, i1, i2, i3);
    UNREACHABLE;
    B41:;
    i0 = 31u;
    l11 = i0;
    goto L13;
    B40:;
    i0 = 6u;
    l11 = i0;
    goto L13;
    B39:;
    i0 = 2u;
    l11 = i0;
    goto L13;
    B38:;
    i0 = 1u;
    l11 = i0;
    goto L13;
    B37:;
    i0 = 0u;
    l11 = i0;
    goto L13;
    B36:;
    i0 = 0u;
    l11 = i0;
    goto L13;
    B35:;
    i0 = 1u;
    l11 = i0;
    goto L13;
    B34:;
    i0 = 2u;
    l11 = i0;
    goto L13;
    B33:;
    i0 = 35u;
    l11 = i0;
    goto L13;
    B32:;
    i0 = 34u;
    l11 = i0;
    goto L13;
    B31:;
    i0 = 19u;
    l11 = i0;
    goto L13;
    B30:;
    i0 = 9u;
    l11 = i0;
    goto L13;
    B29:;
    i0 = 17u;
    l11 = i0;
    goto L13;
    B28:;
    i0 = 17u;
    l11 = i0;
    goto L13;
    B27:;
    i0 = 15u;
    l11 = i0;
    goto L13;
    B26:;
    i0 = 12u;
    l11 = i0;
    goto L13;
    B25:;
    i0 = 17u;
    l11 = i0;
    goto L13;
    B24:;
    i0 = 17u;
    l11 = i0;
    goto L13;
    B23:;
    i0 = 20u;
    l11 = i0;
    goto L13;
    B22:;
    i0 = 17u;
    l11 = i0;
    goto L13;
    B21:;
    i0 = 17u;
    l11 = i0;
    goto L13;
    B20:;
    i0 = 17u;
    l11 = i0;
    goto L13;
    B19:;
    i0 = 29u;
    l11 = i0;
    goto L13;
    B18:;
    i0 = 26u;
    l11 = i0;
    goto L13;
    B17:;
    i0 = 23u;
    l11 = i0;
    goto L13;
    B16:;
    i0 = 30u;
    l11 = i0;
    goto L13;
    B15:;
    i0 = 29u;
    l11 = i0;
    goto L13;
    B14:;
    i0 = 33u;
    l11 = i0;
    goto L13;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_count(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i1 = mp_obj_get_type(i1);
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l3 = i0;
  goto B3;
  B4:;
  i0 = l0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  B3:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = l2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l4 = i0;
  goto B5;
  B6:;
  i0 = l0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l4 = i0;
  B5:;
  i0 = l3;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  l5 = i1;
  i0 += i1;
  l6 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B8;}
  i0 = l3;
  l2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l7 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = l1;
  i1 = l3;
  i2 = l5;
  i3 = l7;
  i4 = 1u;
  i0 = str_index_to_ptr(i0, i1, i2, i3, i4);
  l2 = i0;
  B9:;
  i0 = p0;
  i1 = 4u;
  i0 = i0 < i1;
  if (i0) {goto B10;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  i0 = l1;
  i1 = l3;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i3 = p1;
  i4 = 1u;
  i0 = str_index_to_ptr(i0, i1, i2, i3, i4);
  l6 = i0;
  B10:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  goto B1;
  B8:;
  i0 = l3;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  if (i0) {goto B1;}
  B7:;
  i0 = l2;
  i1 = l6;
  i2 = l2;
  i1 -= i2;
  i0 = utf8_charlen(i0, i1);
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 += i1;
  l2 = i0;
  goto B0;
  B2:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B1:;
  i0 = 0u;
  l3 = i0;
  i0 = l2;
  i1 = p1;
  i0 += i1;
  i1 = l6;
  i0 = i0 > i1;
  if (i0) {goto B11;}
  i0 = 0u;
  l3 = i0;
  L12: vm_checktime();
    i0 = l2;
    i1 = l4;
    i2 = p1;
    i0 = memcmp_0(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto B13;}
    i0 = l2;
    i0 = utf8_next_char(i0);
    l2 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 8));
    p1 = i1;
    i0 += i1;
    i1 = l6;
    i0 = i0 <= i1;
    if (i0) {goto L12;}
    goto B11;
    B13:;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l2;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 8));
    p1 = i1;
    i0 += i1;
    l2 = i0;
    i1 = p1;
    i0 += i1;
    i1 = l6;
    i0 = i0 <= i1;
    if (i0) {goto L12;}
  B11:;
  i0 = l3;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l2 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  i1 = 1u;
  i0 |= i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_partition(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i0 = str_partitioner(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_partitioner(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i1 = p1;
  i1 = mp_obj_get_type(i1);
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l2 = i0;
  goto B2;
  B3:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  B2:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l4 = i0;
  if (i0) {goto B4;}
  goto B0;
  B5:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l4 = i1;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B0;}
  B4:;
  i0 = l0;
  i1 = 10u;
  i2 = 32696u;
  i3 = l1;
  i4 = 33304u;
  i3 = i3 == i4;
  i1 = i3 ? i1 : i2;
  l5 = i1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l5;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = l5;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i2 = 8u;
  i3 = p2;
  i4 = 0u;
  i3 = (u32)((s32)i3 > (s32)i4);
  l6 = i3;
  i1 = i3 ? i1 : i2;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  p0 = i0;
  i1 = l4;
  i0 = i0 < i1;
  if (i0) {goto B6;}
  i0 = l2;
  i1 = 0u;
  i2 = p0;
  i3 = l4;
  i2 -= i3;
  p0 = i2;
  i3 = l6;
  i1 = i3 ? i1 : i2;
  l7 = i1;
  i0 += i1;
  l5 = i0;
  i1 = l3;
  i2 = l4;
  i0 = memcmp_0(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l7;
  i1 = p0;
  i2 = 0u;
  i3 = l6;
  i1 = i3 ? i1 : i2;
  i0 -= i1;
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  L8: vm_checktime();
    i0 = p0;
    i1 = p2;
    i0 += i1;
    p0 = i0;
    i0 = l5;
    i1 = p2;
    i0 += i1;
    l5 = i0;
    i1 = l3;
    i2 = l4;
    i0 = memcmp_0(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto B7;}
    i0 = p0;
    if (i0) {goto L8;}
    goto B6;
  B7:;
  i0 = l5;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l1;
  i1 = l2;
  i2 = l5;
  i3 = l2;
  i2 -= i3;
  p0 = i2;
  i0 = mp_obj_new_str_of_type(i0, i1, i2);
  p2 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 20u;
  i0 += i1;
  i1 = l1;
  i2 = l5;
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 24));
  p2 = i3;
  i2 += i3;
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 28));
  i4 = p2;
  i5 = p0;
  i4 += i5;
  i3 -= i4;
  i1 = mp_obj_new_str_of_type(i1, i2, i3);
  i32_store((&M0), (u64)(i0), i1);
  B6:;
  i0 = 3u;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = p1;
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B0:;
  i0 = 17562u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_rpartition(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i2 = 4294967295u;
  i0 = str_partitioner(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_lower(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  l2 = i0;
  goto B0;
  B1:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  B0:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 0u;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l3 = i0;
  L3: vm_checktime();
    i0 = l3;
    i1 = l2;
    i0 += i1;
    i1 = l1;
    i2 = l2;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i1 = unichar_tolower(i1);
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 28));
    i0 = i0 < i1;
    if (i0) {goto L3;}
  B2:;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  l2 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_upper(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  l2 = i0;
  goto B0;
  B1:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  B0:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 0u;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l3 = i0;
  L3: vm_checktime();
    i0 = l3;
    i1 = l2;
    i0 += i1;
    i1 = l1;
    i2 = l2;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i1 = unichar_toupper(i1);
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 28));
    i0 = i0 < i1;
    if (i0) {goto L3;}
  B2:;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  l2 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_isspace(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = 14u;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l3 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = 14u;
  l2 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  p0 = i0;
  L3: vm_checktime();
    i0 = l1;
    i1 = p0;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_isspace(i0);
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    i0 = i0 < i1;
    if (i0) {goto L3;}
  i0 = 30u;
  l2 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_isalpha(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = 14u;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l3 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = 14u;
  l2 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  p0 = i0;
  L3: vm_checktime();
    i0 = l1;
    i1 = p0;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_isalpha(i0);
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    i0 = i0 < i1;
    if (i0) {goto L3;}
  i0 = 30u;
  l2 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_isdigit(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = 14u;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l3 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = 14u;
  l2 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  p0 = i0;
  L3: vm_checktime();
    i0 = l1;
    i1 = p0;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_isdigit(i0);
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    i0 = i0 < i1;
    if (i0) {goto L3;}
  i0 = 30u;
  l2 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_isupper(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = 14u;
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = 14u;
  p0 = i0;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  p0 = i0;
  i0 = 0u;
  l3 = i0;
  L4: vm_checktime();
    i0 = l1;
    i1 = p0;
    i0 += i1;
    l2 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_isalpha(i0);
    i0 = !(i0);
    if (i0) {goto B5;}
    i0 = 1u;
    l3 = i0;
    i0 = l2;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_isupper(i0);
    i0 = !(i0);
    if (i0) {goto B3;}
    B5:;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    i0 = i0 < i1;
    if (i0) {goto L4;}
  i0 = 30u;
  p0 = i0;
  i0 = l3;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  B3:;
  i0 = 14u;
  p0 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_islower(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = 14u;
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = 14u;
  p0 = i0;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  p0 = i0;
  i0 = 0u;
  l3 = i0;
  L4: vm_checktime();
    i0 = l1;
    i1 = p0;
    i0 += i1;
    l2 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_isalpha(i0);
    i0 = !(i0);
    if (i0) {goto B5;}
    i0 = 1u;
    l3 = i0;
    i0 = l2;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_islower(i0);
    i0 = !(i0);
    if (i0) {goto B3;}
    B5:;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    i0 = i0 < i1;
    if (i0) {goto L4;}
  i0 = 30u;
  p0 = i0;
  i0 = l3;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  B3:;
  i0 = 14u;
  p0 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 bytes_decode(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 1290u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 2u;
  p0 = i0;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  p1 = i0;
  B0:;
  i0 = 33304u;
  i1 = p0;
  i2 = 0u;
  i3 = p1;
  i0 = mp_obj_str_make_new(i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_encode(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 1290u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 2u;
  p0 = i0;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  p1 = i0;
  B0:;
  i0 = 0u;
  i1 = p0;
  i2 = 0u;
  i3 = p1;
  i0 = bytes_make_new(i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 bytes_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  f64 d1;
  i0 = g0;
  i1 = 80u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  if (i0) {goto B7;}
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = 3u;
  i0 &= i1;
  l1 = i0;
  if (i0) {goto B10;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33004u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  B10:;
  i0 = p2;
  i1 = 7u;
  i0 &= i1;
  l2 = i0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  goto B1;
  B9:;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = 32696u;
  goto Bfunc;
  B8:;
  i0 = l1;
  if (i0) {goto B11;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33304u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B11:;
  i0 = p1;
  i1 = 1u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = l1;
  if (i0) {goto B6;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 25048u;
  i0 = i0 == i1;
  if (i0) {goto B13;}
  i0 = p1;
  i1 = 33608u;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  i0 = p1;
  i1 = 25184u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = l0;
  i1 = p2;
  j1 = mp_obj_name_to_ull(i1);
  i64_store((&M0), (u64)(i0 + 64), j1);
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = 8u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = 33004u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l0;
  i2 = 64u;
  i1 += i2;
  i2 = 8u;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 9u;
  i1 = m_malloc(i1);
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = l0;
  i2 = 64u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B13:;
  i0 = l0;
  i1 = p2;
  mp_obj_float128_get(i0, i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 72), j1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 64), j1);
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = 16u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = 33004u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l0;
  i2 = 64u;
  i1 += i2;
  i2 = 16u;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 17u;
  i1 = m_malloc(i1);
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = l0;
  i2 = 64u;
  i1 += i2;
  i2 = 16u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B12:;
  i0 = l0;
  i1 = p2;
  d1 = mp_obj_float_get(i1);
  f64_store((&M0), (u64)(i0 + 64), d1);
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = 8u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = 33004u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l0;
  i2 = 64u;
  i1 += i2;
  i2 = 8u;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 9u;
  i1 = m_malloc(i1);
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = l0;
  i2 = 64u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B7:;
  mp_arg_error_unimpl_kw();
  UNREACHABLE;
  B6:;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p2;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i2 = 1u;
  i0 = mp_get_buffer(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 48));
  p3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 52));
  p1 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = 33004u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p2;
  i1 = p3;
  i2 = p1;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = p1;
  i2 = 1u;
  i1 += i2;
  i1 = m_malloc(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p3;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p1;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  B5:;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B4:;
  i0 = p2;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  i1 = p2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  p2 = i1;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 72));
  i1 = 0u;
  i2 = p2;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = 33004u;
  i1 = l0;
  i2 = 64u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p2 = i0;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B3:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_len_maybe(i0);
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B15;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = p2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  vstr_init(i0, i1);
  goto B14;
  B15:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = 16u;
  vstr_init(i0, i1);
  B14:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_getiter(i0, i1);
  p1 = i0;
  i0 = mp_iternext(i0);
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B17;}
  L18: vm_checktime();
    i0 = p2;
    i0 = mp_obj_get_int(i0);
    p2 = i0;
    i1 = 256u;
    i0 = i0 >= i1;
    if (i0) {goto B16;}
    i0 = l0;
    i1 = 32u;
    i0 += i1;
    i1 = p2;
    i2 = 255u;
    i1 &= i2;
    vstr_add_byte(i0, i1);
    i0 = p1;
    i0 = mp_iternext(i0);
    p2 = i0;
    if (i0) {goto L18;}
  B17:;
  i0 = 33004u;
  i1 = l0;
  i2 = 32u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p2 = i0;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B16:;
  i0 = 22956u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B2:;
  i0 = 0u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B1:;
  i0 = p1;
  i1 = 4294967294u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l2;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B20;}
  i0 = p2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 64u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p1 = i0;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  goto B19;
  B20:;
  i0 = l0;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 64), i1);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  B19:;
  i0 = p2;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B23;}
  i0 = p2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i0 = qstr_hash(i0);
  p3 = i0;
  if (i0) {goto B21;}
  goto B22;
  B23:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p3 = i0;
  if (i0) {goto B21;}
  B22:;
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 64));
  i0 = qstr_compute_hash(i0, i1);
  p3 = i0;
  B21:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 64));
  l1 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = 33004u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p2;
  i1 = p3;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B0:;
  i0 = 44140u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_str_get_buffer(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 1u;
  l1 = i0;
  i0 = p2;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  goto B1;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  p2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  B1:;
  i0 = p1;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 66u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 0u;
  l1 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static void str_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p1 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 22757u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = p2;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  mp_str_print_json(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B3:;
  i0 = p0;
  i1 = 22861u;
  i0 = mp_print_str(i0, i1);
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i3 = 1u;
  mp_str_print_quoted(i0, i1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 bytes_subscr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l2 = i0;
  i0 = 0u;
  p0 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = 0u;
  p0 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 24360u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  B4:;
  i0 = l2;
  i1 = l1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i3 = p1;
  i4 = 0u;
  i1 = mp_get_index(i1, i2, i3, i4);
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B3:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i2 = l0;
  i0 = mp_seq_get_fast_slice_indexes(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = l1;
  i1 = l2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2));
  p0 = i2;
  i1 += i2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p0;
  i2 -= i3;
  i0 = mp_obj_new_str_of_type(i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B5:;
  i0 = 43232u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_bytes_iterator(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 405u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 23728u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 bytes_it_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l2 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i0 = i0 < i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l4 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  i1 = l4;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l2;
  i1 = l3;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l1 = i0;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = l3;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l1 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_bytes(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 33004u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p0;
  i2 = p1;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p1;
  i2 = 1u;
  i1 += i2;
  i1 = m_malloc(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p0;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p1;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_str_via_qstr(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  i0 = qstr_from_strn(i0, i1);
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_str_intern_checked(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  goto B1;
  B2:;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 82u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  B1:;
  i0 = p0;
  i1 = l1;
  i0 = qstr_from_strn(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = p0;
  bad_implicit_conversion(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_str_equal(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  l1 = i0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  l2 = i0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = p1;
  i0 = i0 == i1;
  goto Bfunc;
  B6:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l3 = i0;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  l2 = i0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  goto B3;
  B5:;
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i0 = qstr_hash(i0);
  l3 = i0;
  i0 = l2;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  B4:;
  i0 = l3;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l4 = i1;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = l3;
  i1 = p1;
  i2 = 3u;
  i1 >>= (i2 & 31);
  i1 = qstr_hash(i1);
  l4 = i1;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 0u;
  l3 = i0;
  i0 = l4;
  if (i0) {goto B0;}
  B1:;
  i0 = l1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B10;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = l2;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  goto B8;
  B10:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = l2;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  B9:;
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p1 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  p0 = i1;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  goto B7;
  B8:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = p0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B7:;
  i0 = l1;
  i1 = p1;
  i2 = p0;
  i0 = memcmp_0(i0, i1, i2);
  i0 = !(i0);
  l3 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_str_get_qstr(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33304u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 = qstr_from_strn(i0, i1);
  goto Bfunc;
  B1:;
  i0 = p0;
  bad_implicit_conversion(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_str_get_str(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 82u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = p0;
  bad_implicit_conversion(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_index_to_ptr(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 33004u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = p3;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p3;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_get_int_maybe(i0, i1);
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 4294967295u;
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p3 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B4;}
  goto B2;
  B6:;
  i0 = 33004u;
  i1 = p2;
  i2 = p3;
  i3 = p4;
  i0 = mp_get_index(i0, i1, i2, i3);
  p3 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = p3;
  i0 += i1;
  goto Bfunc;
  B5:;
  i0 = l0;
  i1 = p3;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  p3 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 4294967295u;
  p0 = i0;
  i0 = p3;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B2;}
  B4:;
  i0 = p1;
  i1 = p2;
  i0 += i1;
  l1 = i0;
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B8;}
  L9: vm_checktime();
    i0 = l0;
    i1 = p3;
    i2 = 4294967295u;
    i1 += i2;
    p0 = i1;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = p3;
    i0 = !(i0);
    if (i0) {goto B7;}
    i0 = p1;
    p3 = i0;
    L10: vm_checktime();
      i0 = p3;
      i0 = i32_load8_u((&M0), (u64)(i0 + 1));
      p2 = i0;
      i0 = p3;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      p3 = i0;
      i0 = p2;
      i1 = 192u;
      i0 &= i1;
      i1 = 128u;
      i0 = i0 == i1;
      if (i0) {goto L10;}
    i0 = p0;
    p3 = i0;
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L9;}
  B8:;
  i0 = p4;
  if (i0) {goto B1;}
  i0 = 36836u;
  i1 = 11928u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B7:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B3:;
  i0 = l0;
  i1 = p3;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 10966u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B2:;
  i0 = p1;
  i1 = p2;
  i0 += i1;
  i1 = p0;
  i0 += i1;
  p2 = i0;
  L12: vm_checktime();
    i0 = p2;
    i1 = p1;
    i0 = i0 < i1;
    if (i0) {goto B11;}
    i0 = p2;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 192u;
    i0 &= i1;
    i1 = 128u;
    i0 = i0 == i1;
    if (i0) {goto B13;}
    i0 = l0;
    i1 = p3;
    i2 = 1u;
    i1 += i2;
    p3 = i1;
    i32_store((&M0), (u64)(i0 + 12), i1);
    B13:;
    i0 = p2;
    i1 = p0;
    i0 += i1;
    p2 = i0;
    i0 = p3;
    if (i0) {goto L12;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  i1 = 1u;
  i0 += i1;
  goto Bfunc;
  B11:;
  i0 = p1;
  l1 = i0;
  i0 = p4;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 36836u;
  i1 = 11928u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void uni_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 144u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 140u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p1 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 140), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = p2;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 132), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 140));
  i32_store((&M0), (u64)(i0 + 128), i1);
  i0 = p0;
  i1 = 17134u;
  i2 = l0;
  i3 = 128u;
  i2 += i3;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 144u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = p2;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 140));
  mp_str_print_json(i0, i1, i2);
  i0 = l0;
  i1 = 144u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B3:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 140));
  p2 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B8;}
  i0 = p1;
  i1 = p2;
  i0 += i1;
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p1;
  p2 = i0;
  L9: vm_checktime();
    i0 = 1u;
    l3 = i0;
    i0 = p2;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    i1 = 39u;
    i0 = i0 == i1;
    if (i0) {goto B10;}
    i0 = l4;
    i1 = 34u;
    i0 = i0 == i1;
    if (i0) {goto B7;}
    i0 = l2;
    l3 = i0;
    B10:;
    i0 = l3;
    l2 = i0;
    i0 = p2;
    i1 = 1u;
    i0 += i1;
    p2 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L9;}
  i0 = 39u;
  l4 = i0;
  i0 = 34u;
  p2 = i0;
  i0 = l3;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B6;}
  goto B5;
  B8:;
  i0 = 39u;
  l4 = i0;
  i0 = l0;
  i1 = 39u;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = p0;
  i1 = 13275u;
  i2 = l0;
  i3 = 112u;
  i2 += i3;
  i0 = mp_printf(i0, i1, i2);
  goto B4;
  B7:;
  i0 = 39u;
  p2 = i0;
  i0 = 39u;
  l4 = i0;
  i0 = l2;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B5;}
  B6:;
  i0 = p2;
  l4 = i0;
  B5:;
  i0 = l0;
  i1 = l4;
  i32_store((&M0), (u64)(i0 + 96), i1);
  i0 = p0;
  i1 = 13275u;
  i2 = l0;
  i3 = 96u;
  i2 += i3;
  i0 = mp_printf(i0, i1, i2);
  L11: vm_checktime();
    i0 = p1;
    i0 = utf8_get_char(i0);
    p2 = i0;
    i0 = p1;
    i0 = utf8_next_char(i0);
    p1 = i0;
    i0 = p2;
    i1 = l4;
    i0 = i0 != i1;
    if (i0) {goto B12;}
    i0 = l0;
    i1 = l4;
    i32_store((&M0), (u64)(i0 + 16), i1);
    i0 = p0;
    i1 = 13937u;
    i2 = l0;
    i3 = 16u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
    goto B4;
    B12:;
    i0 = p2;
    i1 = 92u;
    i0 = i0 != i1;
    if (i0) {goto B13;}
    i0 = p0;
    i1 = 14609u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
    goto B4;
    B13:;
    i0 = p2;
    i1 = 4294967264u;
    i0 += i1;
    i1 = 94u;
    i0 = i0 > i1;
    if (i0) {goto B14;}
    i0 = l0;
    i1 = p2;
    i32_store((&M0), (u64)(i0 + 32), i1);
    i0 = p0;
    i1 = 13275u;
    i2 = l0;
    i3 = 32u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
    goto B4;
    B14:;
    i0 = p2;
    i1 = 9u;
    i0 = i0 == i1;
    if (i0) {goto B17;}
    i0 = p2;
    i1 = 13u;
    i0 = i0 == i1;
    if (i0) {goto B16;}
    i0 = p2;
    i1 = 10u;
    i0 = i0 != i1;
    if (i0) {goto B15;}
    i0 = p0;
    i1 = 15320u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
    goto B4;
    B17:;
    i0 = p0;
    i1 = 16313u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
    goto B4;
    B16:;
    i0 = p0;
    i1 = 15751u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
    goto B4;
    B15:;
    i0 = p2;
    i1 = 255u;
    i0 = i0 > i1;
    if (i0) {goto B18;}
    i0 = l0;
    i1 = p2;
    i32_store((&M0), (u64)(i0 + 48), i1);
    i0 = p0;
    i1 = 17578u;
    i2 = l0;
    i3 = 48u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
    goto B4;
    B18:;
    i0 = p2;
    i1 = 65535u;
    i0 = i0 > i1;
    if (i0) {goto B19;}
    i0 = l0;
    i1 = p2;
    i32_store((&M0), (u64)(i0 + 64), i1);
    i0 = p0;
    i1 = 18010u;
    i2 = l0;
    i3 = 64u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
    goto B4;
    B19:;
    i0 = l0;
    i1 = p2;
    i32_store((&M0), (u64)(i0 + 80), i1);
    i0 = p0;
    i1 = 18288u;
    i2 = l0;
    i3 = 80u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
  B4:;
  i0 = l0;
  i1 = l4;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 13275u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 144u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 uni_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p1 = i0;
  i0 = p0;
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = p0;
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i0 = utf8_charlen(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  p1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = 30u;
  i1 = 14u;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i0 = i2 ? i0 : i1;
  p1 = i0;
  B3:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_subscr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i1 = 33304u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = 0u;
  p0 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  goto B1;
  B3:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = 0u;
  p0 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = 18570u;
  i1 = 18749u;
  i2 = 179u;
  i3 = 44199u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B1:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 24360u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  B5:;
  i0 = 1u;
  p0 = i0;
  i0 = 33304u;
  i1 = l1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i3 = p1;
  i4 = 0u;
  i0 = str_index_to_ptr(i0, i1, i2, i3, i4);
  l1 = i0;
  i0 = i32_load8_s((&M0), (u64)(i0));
  p1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B6;}
  i0 = 64u;
  p2 = i0;
  i0 = p1;
  i1 = 255u;
  i0 &= i1;
  p1 = i0;
  i1 = 64u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = 1u;
  p0 = i0;
  L7: vm_checktime();
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i0 = p2;
    i1 = 1u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    p2 = i0;
    i1 = p1;
    i0 &= i1;
    if (i0) {goto L7;}
  B6:;
  i0 = l1;
  i1 = p0;
  i0 = mp_obj_new_str_via_qstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B4:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  i1 = 3u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = p2;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  B9:;
  i0 = l1;
  p2 = i0;
  i0 = p0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  i0 = 33304u;
  i1 = l1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i3 = p0;
  i4 = 1u;
  i0 = str_index_to_ptr(i0, i1, i2, i3, i4);
  p2 = i0;
  B10:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = l2;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  i0 = 10u;
  p0 = i0;
  i0 = 33304u;
  i1 = l1;
  i2 = p1;
  i3 = l2;
  i4 = 1u;
  i0 = str_index_to_ptr(i0, i1, i2, i3, i4);
  p1 = i0;
  i1 = p2;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  goto B11;
  B12:;
  i0 = 10u;
  p0 = i0;
  i0 = l1;
  i1 = p1;
  i0 += i1;
  p1 = i0;
  i1 = p2;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  B11:;
  i0 = 33304u;
  i1 = p2;
  i2 = p1;
  i3 = p2;
  i2 -= i3;
  i0 = mp_obj_new_str_of_type(i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B8:;
  i0 = 18943u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_str_iterator(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 439u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 23728u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_it_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l2 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i0 = i0 < i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l4 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  i1 = l4;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l2;
  i1 = l3;
  i0 += i1;
  l1 = i0;
  i1 = l1;
  i1 = utf8_next_char(i1);
  i2 = l1;
  i1 -= i2;
  l2 = i1;
  i0 = mp_obj_new_str_via_qstr(i0, i1);
  l1 = i0;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l2;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_map_init(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i1 = m_malloc0(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0), i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_map_init_fixed_table(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p1;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 7u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mp_map_clear(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  m_free(i0);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B0:;
  i0 = p0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = p0;
  i1 = l0;
  i2 = 4u;
  i1 &= i2;
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static u32 mp_map_lookup(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l0;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B5;}
  B6:;
  i0 = 1u;
  l1 = i0;
  i0 = l0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B15;}
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 4u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B14;}
  goto B13;
  B15:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B16;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B17;}
  i0 = 0u;
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33304u;
  i0 = i0 == i1;
  if (i0) {goto B16;}
  B17:;
  i0 = 1u;
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p2;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B16:;
  i0 = l0;
  i1 = 4u;
  i0 &= i1;
  if (i0) {goto B13;}
  B14:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  if (i0) {goto B18;}
  i0 = 0u;
  l2 = i0;
  i0 = p2;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = 1u;
  i0 = get_hash_alloc_greater_or_equal_to(i0);
  l2 = i0;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i0 = m_malloc0(i0);
  l3 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 6u;
  i1 &= i2;
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  m_free(i0);
  B18:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  l4 = i0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B12;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i0 = qstr_hash(i0);
  l5 = i0;
  goto B11;
  B13:;
  i0 = l0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i1 = l0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l0 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B10;}
  L19: vm_checktime();
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p1;
    i0 = i0 == i1;
    if (i0) {goto B8;}
    i0 = l2;
    i1 = 8u;
    i0 += i1;
    l2 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L19;}
    goto B9;
  B12:;
  i0 = 6u;
  i1 = p1;
  i0 = mp_unary_op(i0, i1);
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  l5 = i0;
  B11:;
  i0 = l5;
  i1 = p0;
  i2 = 4u;
  i1 += i2;
  l6 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  l2 = i1;
  i0 = REM_U(i0, i1);
  l7 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B20;}
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l8 = i0;
  goto B7;
  B20:;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l9 = i0;
  goto B4;
  B10:;
  L21: vm_checktime();
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i1 = p1;
    i0 = i0 == i1;
    if (i0) {goto B8;}
    i0 = l1;
    i1 = p1;
    i0 = mp_obj_equal(i0, i1);
    if (i0) {goto B8;}
    i0 = l2;
    i1 = 8u;
    i0 += i1;
    l2 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L21;}
  B9:;
  i0 = 0u;
  l2 = i0;
  i0 = p2;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = i0 != i1;
  if (i0) {goto B22;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l0;
  i3 = 3u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i2 = 4294967288u;
  i1 &= i2;
  i0 += i1;
  i1 = 0u;
  i2 = l2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = l1;
  i4 = 3u;
  i3 >>= (i4 & 31);
  i2 -= i3;
  i3 = 3u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  l0 = i0;
  B22:;
  i0 = p0;
  i1 = l2;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l2 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  goto Bfunc;
  B8:;
  i0 = p2;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967288u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l2;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = 4294967288u;
  i2 += i3;
  i3 = l2;
  i2 -= i3;
  i3 = 4294967288u;
  i2 &= i3;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967288u;
  i1 &= i2;
  i0 += i1;
  l0 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  goto Bfunc;
  B7:;
  L23: vm_checktime();
    i0 = l8;
    i0 = i32_load((&M0), (u64)(i0));
    l9 = i0;
    i0 = l7;
    l0 = i0;
    L25: vm_checktime();
      i0 = l9;
      i1 = l0;
      i2 = 3u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l3 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      i1 = 4u;
      i0 = i0 == i1;
      if (i0) {goto B26;}
      i0 = l10;
      i0 = !(i0);
      if (i0) {goto B1;}
      i0 = l10;
      i1 = p1;
      i0 = i0 == i1;
      if (i0) {goto B2;}
      i0 = l0;
      i1 = 1u;
      i0 += i1;
      i1 = l2;
      i0 = REM_U(i0, i1);
      l0 = i0;
      i1 = l7;
      i0 = i0 != i1;
      if (i0) {goto L25;}
      goto B24;
      B26:;
      i0 = l1;
      i1 = l3;
      i2 = l1;
      i0 = i2 ? i0 : i1;
      l1 = i0;
      i0 = l0;
      i1 = 1u;
      i0 += i1;
      i1 = l2;
      i0 = REM_U(i0, i1);
      l0 = i0;
      i1 = l7;
      i0 = i0 != i1;
      if (i0) {goto L25;}
    B24:;
    i0 = p2;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B28;}
    i0 = l1;
    if (i0) {goto B3;}
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    i0 = get_hash_alloc_greater_or_equal_to(i0);
    l0 = i0;
    i1 = 3u;
    i0 <<= (i1 & 31);
    i0 = m_malloc0(i0);
    l3 = i0;
    i0 = l6;
    i1 = l0;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l8;
    i1 = l3;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 6u;
    i1 &= i2;
    i2 = 1u;
    i1 |= i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l9;
    l0 = i0;
    i0 = l2;
    i0 = !(i0);
    if (i0) {goto B27;}
    L29: vm_checktime();
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0));
      l3 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B30;}
      i0 = l0;
      i1 = 8u;
      i0 += i1;
      l0 = i0;
      i0 = l2;
      i1 = 4294967295u;
      i0 += i1;
      l2 = i0;
      if (i0) {goto L29;}
      goto B27;
      B30:;
      i0 = l0;
      i1 = 4u;
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      i0 = p0;
      i1 = l3;
      i2 = 1u;
      i0 = mp_map_lookup(i0, i1, i2);
      i1 = l10;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l0;
      i1 = 8u;
      i0 += i1;
      l0 = i0;
      i0 = l2;
      i1 = 4294967295u;
      i0 += i1;
      l2 = i0;
      if (i0) {goto L29;}
      goto B27;
    B28:;
    i0 = 0u;
    goto Bfunc;
    B27:;
    i0 = l9;
    m_free(i0);
    i0 = l5;
    i1 = l6;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = REM_U(i0, i1);
    l7 = i0;
    goto L23;
  B5:;
  i0 = 11006u;
  i1 = 11954u;
  i2 = 137u;
  i3 = 44210u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B4:;
  L31: vm_checktime();
    i0 = l7;
    l0 = i0;
    L33: vm_checktime();
      i0 = l9;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l0;
      i2 = 3u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l3 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      i1 = 4u;
      i0 = i0 == i1;
      if (i0) {goto B34;}
      i0 = l10;
      i0 = !(i0);
      if (i0) {goto B1;}
      i0 = l10;
      i1 = p1;
      i0 = i0 == i1;
      if (i0) {goto B2;}
      i0 = l10;
      i1 = p1;
      i0 = mp_obj_equal(i0, i1);
      if (i0) {goto B2;}
      i0 = l0;
      i1 = 1u;
      i0 += i1;
      i1 = l6;
      i1 = i32_load((&M0), (u64)(i1));
      l2 = i1;
      i0 = REM_U(i0, i1);
      l0 = i0;
      i1 = l7;
      i0 = i0 != i1;
      if (i0) {goto L33;}
      goto B32;
      B34:;
      i0 = l1;
      i1 = l3;
      i2 = l1;
      i0 = i2 ? i0 : i1;
      l1 = i0;
      i0 = l0;
      i1 = 1u;
      i0 += i1;
      i1 = l2;
      i0 = REM_U(i0, i1);
      l0 = i0;
      i1 = l7;
      i0 = i0 != i1;
      if (i0) {goto L33;}
    B32:;
    i0 = p2;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B36;}
    i0 = l1;
    if (i0) {goto B3;}
    i0 = l9;
    i0 = i32_load((&M0), (u64)(i0));
    l7 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    i0 = get_hash_alloc_greater_or_equal_to(i0);
    l0 = i0;
    i1 = 3u;
    i0 <<= (i1 & 31);
    i0 = m_malloc0(i0);
    l3 = i0;
    i0 = l6;
    i1 = l0;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l9;
    i1 = l3;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 6u;
    i1 &= i2;
    i2 = 1u;
    i1 |= i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l2;
    i0 = !(i0);
    if (i0) {goto B35;}
    i0 = l7;
    l0 = i0;
    L37: vm_checktime();
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0));
      l3 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B38;}
      i0 = l0;
      i1 = 8u;
      i0 += i1;
      l0 = i0;
      i0 = l2;
      i1 = 4294967295u;
      i0 += i1;
      l2 = i0;
      if (i0) {goto L37;}
      goto B35;
      B38:;
      i0 = l0;
      i1 = 4u;
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      i0 = p0;
      i1 = l3;
      i2 = 1u;
      i0 = mp_map_lookup(i0, i1, i2);
      i1 = l10;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l0;
      i1 = 8u;
      i0 += i1;
      l0 = i0;
      i0 = l2;
      i1 = 4294967295u;
      i0 += i1;
      l2 = i0;
      if (i0) {goto L37;}
      goto B35;
    B36:;
    i0 = 0u;
    goto Bfunc;
    B35:;
    i0 = l7;
    m_free(i0);
    i0 = l5;
    i1 = l6;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = REM_U(i0, i1);
    l7 = i0;
    goto L31;
  B3:;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  l2 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  goto Bfunc;
  B2:;
  i0 = l3;
  l2 = i0;
  i0 = p2;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967288u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 1u;
  i1 += i2;
  i2 = p0;
  i3 = 4u;
  i2 += i3;
  i2 = i32_load((&M0), (u64)(i2));
  i1 = REM_U(i1, i2);
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B39;}
  i0 = l2;
  i1 = 4u;
  i32_store((&M0), (u64)(i0), i1);
  goto B0;
  B39:;
  i0 = l2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  goto Bfunc;
  B1:;
  i0 = 0u;
  l2 = i0;
  i0 = p2;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = l3;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  l2 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  goto Bfunc;
  B0:;
  i0 = l2;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 get_hash_alloc_greater_or_equal_to(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 2u;
  l0 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 <= i1;
  if (i0) {goto B1;}
  i0 = 4u;
  l0 = i0;
  i0 = p0;
  i1 = 5u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 6u;
  l0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 8u;
  l0 = i0;
  i0 = p0;
  i1 = 9u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 10u;
  l0 = i0;
  i0 = p0;
  i1 = 11u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 12u;
  l0 = i0;
  i0 = p0;
  i1 = 13u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 17u;
  l0 = i0;
  i0 = p0;
  i1 = 18u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 23u;
  l0 = i0;
  i0 = p0;
  i1 = 24u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 29u;
  l0 = i0;
  i0 = p0;
  i1 = 30u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 37u;
  l0 = i0;
  i0 = p0;
  i1 = 38u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 47u;
  l0 = i0;
  i0 = p0;
  i1 = 48u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 59u;
  l0 = i0;
  i0 = p0;
  i1 = 60u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 73u;
  l0 = i0;
  i0 = p0;
  i1 = 74u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 97u;
  l0 = i0;
  i0 = p0;
  i1 = 98u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 127u;
  l0 = i0;
  i0 = p0;
  i1 = 128u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 167u;
  l0 = i0;
  i0 = p0;
  i1 = 168u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 223u;
  l0 = i0;
  i0 = p0;
  i1 = 224u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 293u;
  l0 = i0;
  i0 = p0;
  i1 = 294u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 389u;
  l0 = i0;
  i0 = p0;
  i1 = 390u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 521u;
  l0 = i0;
  i0 = p0;
  i1 = 522u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 691u;
  l0 = i0;
  i0 = p0;
  i1 = 692u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 919u;
  l0 = i0;
  i0 = p0;
  i1 = 920u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 1223u;
  l0 = i0;
  i0 = p0;
  i1 = 1224u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 1627u;
  l0 = i0;
  i0 = p0;
  i1 = 1628u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 2161u;
  l0 = i0;
  i0 = p0;
  i1 = 2162u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 3229u;
  l0 = i0;
  i0 = p0;
  i1 = 3230u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 4831u;
  l0 = i0;
  i0 = p0;
  i1 = 4832u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 7243u;
  l0 = i0;
  i0 = p0;
  i1 = 7244u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 10861u;
  l0 = i0;
  i0 = p0;
  i1 = 10862u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 16273u;
  l0 = i0;
  i0 = p0;
  i1 = 16274u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 24407u;
  l0 = i0;
  i0 = p0;
  i1 = 24408u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 36607u;
  l0 = i0;
  i0 = p0;
  i1 = 36608u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 54907u;
  l0 = i0;
  i0 = p0;
  i1 = 54908u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 1u;
  i0 >>= (i1 & 31);
  i1 = p0;
  i0 += i1;
  i1 = 1u;
  i0 |= i1;
  l0 = i0;
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_set_init(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i1 = m_malloc0(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  FUNC_EPILOGUE;
}

static u32 mp_set_lookup(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  l2 = i0;
  goto B1;
  B2:;
  i0 = 0u;
  l3 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l4 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 1u;
  i1 = get_hash_alloc_greater_or_equal_to(i1);
  l3 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = l3;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i1 = m_malloc0(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l4;
  m_free(i0);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  B1:;
  i0 = 6u;
  i1 = p1;
  i0 = mp_unary_op(i0, i1);
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  l5 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l6 = i1;
  i0 = REM_U(i0, i1);
  l7 = i0;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = 0u;
  l8 = i0;
  i0 = l7;
  l4 = i0;
  L7: vm_checktime();
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l4;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l9 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i1 = 4u;
    i0 = i0 == i1;
    if (i0) {goto B8;}
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = l3;
    i1 = p1;
    i0 = mp_obj_equal(i0, i1);
    if (i0) {goto B4;}
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    l6 = i1;
    i0 = REM_U(i0, i1);
    l4 = i0;
    i1 = l7;
    i0 = i0 != i1;
    if (i0) {goto L7;}
    goto B6;
    B8:;
    i0 = l8;
    i1 = l9;
    i2 = l8;
    i0 = i2 ? i0 : i1;
    l8 = i0;
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    i1 = l6;
    i0 = REM_U(i0, i1);
    l4 = i0;
    i1 = l7;
    i0 = i0 != i1;
    if (i0) {goto L7;}
  B6:;
  i0 = 0u;
  goto Bfunc;
  B5:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l10 = i0;
  i0 = l7;
  l4 = i0;
  i0 = 0u;
  l8 = i0;
  L9: vm_checktime();
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l4;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l9 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i1 = 4u;
    i0 = i0 == i1;
    if (i0) {goto B11;}
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = l3;
    i1 = p1;
    i0 = mp_obj_equal(i0, i1);
    if (i0) {goto B4;}
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    l6 = i1;
    i0 = REM_U(i0, i1);
    l4 = i0;
    i1 = l7;
    i0 = i0 != i1;
    if (i0) {goto L9;}
    goto B10;
    B11:;
    i0 = l8;
    i1 = l9;
    i2 = l8;
    i0 = i2 ? i0 : i1;
    l8 = i0;
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    i1 = l6;
    i0 = REM_U(i0, i1);
    l4 = i0;
    i1 = l7;
    i0 = i0 != i1;
    if (i0) {goto L9;}
    B10:;
    i0 = l8;
    if (i0) {goto B13;}
    i0 = l10;
    i0 = i32_load((&M0), (u64)(i0));
    l9 = i0;
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = l6;
    i2 = 1u;
    i1 += i2;
    i1 = get_hash_alloc_greater_or_equal_to(i1);
    l4 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l10;
    i1 = l4;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i1 = m_malloc0(i1);
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    i0 = !(i0);
    if (i0) {goto B12;}
    i0 = l9;
    l4 = i0;
    L14: vm_checktime();
      i0 = l4;
      i0 = i32_load((&M0), (u64)(i0));
      l3 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B15;}
      i0 = l4;
      i1 = 4u;
      i0 += i1;
      l4 = i0;
      i0 = l6;
      i1 = 4294967295u;
      i0 += i1;
      l6 = i0;
      if (i0) {goto L14;}
      goto B12;
      B15:;
      i0 = p0;
      i1 = l3;
      i2 = 1u;
      i0 = mp_set_lookup(i0, i1, i2);
      i0 = l4;
      i1 = 4u;
      i0 += i1;
      l4 = i0;
      i0 = l6;
      i1 = 4294967295u;
      i0 += i1;
      l6 = i0;
      if (i0) {goto L14;}
      goto B12;
    B13:;
    i0 = l8;
    i1 = p1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    goto Bfunc;
    B12:;
    i0 = l9;
    m_free(i0);
    i0 = l5;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    l6 = i1;
    i0 = REM_U(i0, i1);
    l7 = i0;
    l4 = i0;
    goto L9;
  B4:;
  i0 = p2;
  i1 = 2u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l6 = i0;
  i1 = l6;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967295u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l6 = i0;
  i1 = l4;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l8 = i0;
  i0 = l6;
  i1 = l4;
  i2 = 1u;
  i1 += i2;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2));
  i1 = REM_U(i1, i2);
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = l8;
  i1 = 4u;
  i32_store((&M0), (u64)(i0), i1);
  goto B0;
  B16:;
  i0 = l8;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  goto Bfunc;
  B3:;
  i0 = 0u;
  l3 = i0;
  i0 = l2;
  if (i0) {goto B0;}
  i0 = l8;
  i1 = l9;
  i2 = l8;
  i0 = i2 ? i0 : i1;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = l3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_set_remove_first(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  l2 = i0;
  i0 = 1u;
  l3 = i0;
  L2: vm_checktime();
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l2;
    i1 = 4u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i1 = l0;
    i0 = i0 < i1;
    l4 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l4;
    if (i0) {goto L2;}
  i0 = 0u;
  goto Bfunc;
  B1:;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4294967295u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = 4u;
  i2 = 0u;
  i3 = l1;
  i4 = l3;
  i5 = l0;
  i4 = REM_U(i4, i5);
  i5 = 2u;
  i4 <<= (i5 & 31);
  i3 += i4;
  i3 = i32_load((&M0), (u64)(i3));
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_set_clear(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  m_free(i0);
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  FUNC_EPILOGUE;
}

static void mp_arg_check_num_sig(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  B3:;
  i0 = p2;
  i1 = 17u;
  i0 >>= (i1 & 31);
  p1 = i0;
  i1 = p2;
  i2 = 1u;
  i1 >>= (i2 & 31);
  i2 = 65535u;
  i1 &= i2;
  p2 = i1;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = p1;
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 11960u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B5:;
  i0 = p1;
  i1 = p0;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = p2;
  i1 = p0;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  B4:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = 11053u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B1:;
  i0 = l0;
  i1 = p1;
  i2 = p0;
  i1 -= i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 37376u;
  i1 = 17139u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = 37376u;
  i1 = 13278u;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_arg_parse_all(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 0u;
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = 0u;
  l3 = i0;
  L4: vm_checktime();
    i0 = l2;
    i1 = p0;
    i0 = i0 >= i1;
    if (i0) {goto B9;}
    i0 = p4;
    i1 = 2u;
    i0 += i1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    l4 = i0;
    i1 = 512u;
    i0 &= i1;
    if (i0) {goto B1;}
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i0 = l4;
    i1 = 255u;
    i0 &= i1;
    l4 = i0;
    i1 = 3u;
    i0 = i0 == i1;
    if (i0) {goto B8;}
    goto B6;
    B9:;
    i0 = p2;
    i1 = p4;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i2 = 3u;
    i1 <<= (i2 & 31);
    i2 = 2u;
    i1 |= i2;
    i2 = 0u;
    i0 = mp_map_lookup(i0, i1, i2);
    l5 = i0;
    i0 = !(i0);
    if (i0) {goto B7;}
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l5;
    i1 = 4u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i0 = p4;
    i1 = 2u;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 255u;
    i0 &= i1;
    l4 = i0;
    i1 = 3u;
    i0 = i0 != i1;
    if (i0) {goto B6;}
    B8:;
    i0 = p5;
    i1 = l5;
    i32_store((&M0), (u64)(i0), i1);
    goto B5;
    B7:;
    i0 = p4;
    i1 = 3u;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B10;}
    i0 = p5;
    i1 = p4;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    goto B5;
    B10:;
    i0 = l0;
    i1 = p4;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = 37376u;
    i1 = 13941u;
    i2 = l0;
    mp_raise_msg_varg(i0, i1, i2);
    UNREACHABLE;
    B6:;
    i0 = l4;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B11;}
    i0 = l4;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B3;}
    i0 = p5;
    i1 = l5;
    i1 = mp_obj_is_true(i1);
    i32_store8((&M0), (u64)(i0), i1);
    goto B5;
    B11:;
    i0 = p5;
    i1 = l5;
    i1 = mp_obj_get_int(i1);
    i32_store((&M0), (u64)(i0), i1);
    B5:;
    i0 = p5;
    i1 = 4u;
    i0 += i1;
    p5 = i0;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p4;
    i1 = 8u;
    i0 += i1;
    p4 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = p3;
    i0 = i0 < i1;
    if (i0) {goto L4;}
  i0 = l1;
  i1 = p0;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  goto B0;
  B3:;
  i0 = 14612u;
  i1 = 15323u;
  i2 = 111u;
  i3 = 44224u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B2:;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  i1 = p0;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  B1:;
  i0 = 15754u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B0:;
  i0 = l3;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 >>= (i2 & 31);
  i0 = i0 < i1;
  if (i0) {goto B12;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B12:;
  i0 = 16316u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_arg_parse_all_kw_array(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i2 = p2;
  i3 = p0;
  i4 = 2u;
  i3 <<= (i4 & 31);
  i2 += i3;
  mp_map_init_fixed_table(i0, i1, i2);
  i0 = p0;
  i1 = p2;
  i2 = l0;
  i3 = p3;
  i4 = p4;
  i5 = p5;
  mp_arg_parse_all(i0, i1, i2, i3, i4, i5);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void mp_arg_error_unimpl_kw(void) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 18017u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static void float_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  f64 d0;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33608u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i2 = 32u;
  i3 = 103u;
  i4 = 16u;
  i5 = 0u;
  i0 = mp_format_float(d0, i1, i2, i3, i4, i5);
  i0 = p0;
  i1 = l0;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 46u;
  i0 = strchr_0(i0, i1);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 101u;
  i0 = strchr_0(i0, i1);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 110u;
  i0 = strchr_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = 13325u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = 11093u;
  i1 = 12017u;
  i2 = 197u;
  i3 = 44241u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 float_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  f64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1;
  f64 d0, d1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 1u;
  i0 = mp_get_buffer(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 0u;
  i3 = 0u;
  i4 = 0u;
  i0 = mp_parse_num_decimal(i0, i1, i2, i3, i4);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  i1 = 33608u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33608u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B3:;
  i0 = p1;
  d0 = mp_obj_get_float(i0);
  l1 = d0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  d1 = l1;
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = p1;
  i1 = 33608u;
  i32_store((&M0), (u64)(i0), i1);
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 float_unary_op(u32 p0, u32 p1) {
  f64 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  f64 d0, d1, d2, d3;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33608u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B7;}
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l0 = d0;
  i0 = p0;
  switch (i0) {
    case 0: goto B3;
    case 1: goto B8;
    case 2: goto B7;
    case 3: goto B7;
    case 4: goto B6;
    case 5: goto B7;
    case 6: goto B5;
    case 7: goto B4;
    default: goto B3;
  }
  B8:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  d1 = l0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = p1;
  i1 = 33608u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  goto Bfunc;
  B7:;
  i0 = 0u;
  goto Bfunc;
  B6:;
  i0 = 14u;
  i1 = 30u;
  d2 = l0;
  d3 = 0;
  i2 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d2, d3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B5:;
  d0 = l0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B2;}
  i0 = 2147483648u;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B4:;
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B1;}
  B3:;
  i0 = p1;
  goto Bfunc;
  B2:;
  d0 = l0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B1:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  d1 = l0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = p1;
  i1 = 33608u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 11093u;
  i1 = 12017u;
  i2 = 197u;
  i3 = 44241u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 float_binary_op(u32 p0, u32 p1, u32 p2) {
  f64 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  f64 d0, d1, d2;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33608u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l0 = d0;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 23328u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  d1 = l0;
  i2 = p2;
  i0 = mp_obj_float_binary_op(i0, d1, i2);
  goto Bfunc;
  B1:;
  i0 = p0;
  d1 = l0;
  d2 = 0;
  i3 = p2;
  i0 = mp_obj_complex_binary_op(i0, d1, d2, i3);
  goto Bfunc;
  B0:;
  i0 = 11093u;
  i1 = 12017u;
  i2 = 197u;
  i3 = 44241u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_float_binary_op(u32 p0, f64 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  u64 l5 = 0;
  f64 l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  f64 d0, d1, d2, d3, d4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B27;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 25048u;
  i0 = i0 == i1;
  if (i0) {goto B26;}
  B27:;
  i0 = 0u;
  l1 = i0;
  i0 = p2;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i0 = mp_obj_get_float_maybe(i0, i1);
  i0 = !(i0);
  if (i0) {goto B25;}
  i0 = p0;
  i1 = 35u;
  i0 = i0 > i1;
  if (i0) {goto B25;}
  i0 = p0;
  switch (i0) {
    case 0: goto B16;
    case 1: goto B15;
    case 2: goto B18;
    case 3: goto B14;
    case 4: goto B13;
    case 5: goto B25;
    case 6: goto B25;
    case 7: goto B25;
    case 8: goto B25;
    case 9: goto B25;
    case 10: goto B25;
    case 11: goto B25;
    case 12: goto B25;
    case 13: goto B25;
    case 14: goto B28;
    case 15: goto B22;
    case 16: goto B21;
    case 17: goto B25;
    case 18: goto B23;
    case 19: goto B19;
    case 20: goto B24;
    case 21: goto B20;
    case 22: goto B25;
    case 23: goto B25;
    case 24: goto B25;
    case 25: goto B25;
    case 26: goto B25;
    case 27: goto B28;
    case 28: goto B22;
    case 29: goto B21;
    case 30: goto B25;
    case 31: goto B23;
    case 32: goto B19;
    case 33: goto B24;
    case 34: goto B20;
    case 35: goto B17;
    default: goto B16;
  }
  B28:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p1 = d0;
  goto B0;
  B26:;
  i0 = l0;
  d1 = p1;
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = p0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  j2 = i64_load((&M0), (u64)(i2));
  i3 = p2;
  i0 = mp_obj_float128_binary_op(i0, j1, j2, i3);
  l1 = i0;
  B25:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B24:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B4;}
  d0 = p1;
  d1 = l2;
  d0 = fmod_0(d0, d1);
  p1 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B12;}
  d0 = 0;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 24));
  d0 = copysign_0(d0, d1);
  p1 = d0;
  goto B0;
  B23:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B4;}
  d0 = p1;
  d1 = p1;
  d2 = l2;
  d1 = fmod_0(d1, d2);
  l2 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 24));
  l3 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l4 = d0;
  d0 = l2;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B11;}
  d0 = 0;
  d1 = l3;
  d0 = copysign_0(d0, d1);
  l2 = d0;
  d0 = 0;
  l3 = d0;
  d0 = l4;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B10;}
  goto B1;
  B22:;
  d0 = p1;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 24));
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p1 = d0;
  goto B0;
  B21:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p1 = d0;
  goto B0;
  B20:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  d0 = p1;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B29;}
  d0 = l2;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B29;}
  d0 = l2;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B4;}
  B29:;
  d0 = p1;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B6;}
  d0 = l2;
  d1 = l2;
  d1 = floor_0(d1);
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B7;}
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 24));
  l5 = j0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 <= j1;
  if (i0) {goto B5;}
  j0 = l5;
  d0 = f64_reinterpret_i64(j0);
  l2 = d0;
  goto B6;
  B19:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B4;}
  d0 = p1;
  d1 = l2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p1 = d0;
  goto B0;
  B18:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  d2 = l2;
  d3 = p1;
  i2 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d2, d3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B17:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B4;}
  d0 = p1;
  d1 = p1;
  d2 = l2;
  d1 = fmod_0(d1, d2);
  l2 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 24));
  l3 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l4 = d0;
  d0 = l2;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B9;}
  d0 = 0;
  d1 = l3;
  d0 = copysign_0(d0, d1);
  l2 = d0;
  d0 = 0;
  l3 = d0;
  d0 = l4;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B8;}
  goto B3;
  B16:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  d2 = l2;
  d3 = p1;
  i2 = (*Z_eosio_injectionZ__eosio_f64_gtZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B15:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  d2 = l2;
  d3 = p1;
  i2 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B14:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  d2 = l2;
  d3 = p1;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B13:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  d2 = l2;
  d3 = p1;
  i2 = (*Z_eosio_injectionZ__eosio_f64_leZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B12:;
  d0 = p1;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 24));
  l2 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p1;
  d2 = p1;
  d3 = 0;
  i2 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d2, d3);
  d3 = l2;
  d4 = 0;
  i3 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d3, d4);
  i2 ^= i3;
  d0 = i2 ? d0 : d1;
  p1 = d0;
  goto B0;
  B11:;
  d0 = l2;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  d1 = l3;
  d2 = 0;
  i1 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d1, d2);
  i0 = i0 == i1;
  if (i0) {goto B30;}
  d0 = l4;
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l4 = d0;
  d0 = l2;
  d1 = l3;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l2 = d0;
  B30:;
  d0 = 0;
  l3 = d0;
  d0 = l4;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B1;}
  B10:;
  d0 = l3;
  d1 = p1;
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2 + 24));
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = copysign_0(d0, d1);
  p1 = d0;
  i0 = l0;
  d1 = l2;
  f64_store((&M0), (u64)(i0 + 24), d1);
  goto B0;
  B9:;
  d0 = l2;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  d1 = l3;
  d2 = 0;
  i1 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d1, d2);
  i0 = i0 == i1;
  if (i0) {goto B31;}
  d0 = l4;
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l4 = d0;
  d0 = l2;
  d1 = l3;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l2 = d0;
  B31:;
  d0 = 0;
  l3 = d0;
  d0 = l4;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B3;}
  B8:;
  d0 = l3;
  d1 = p1;
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2 + 24));
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = copysign_0(d0, d1);
  p1 = d0;
  goto B2;
  B7:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  B6:;
  d0 = p1;
  d1 = l2;
  d0 = pow_0(d0, d1);
  p1 = d0;
  goto B0;
  B5:;
  i0 = 34u;
  d1 = p1;
  d2 = 0;
  i3 = p2;
  i0 = mp_obj_complex_binary_op(i0, d1, d2, i3);
  p2 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B4:;
  i0 = 36476u;
  i1 = 17189u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B3:;
  d0 = l4;
  d1 = l4;
  d1 = floor_0(d1);
  p1 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0.5;
  i0 = (*Z_eosio_injectionZ__eosio_f64_gtZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B2;}
  d0 = p1;
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p1 = d0;
  B2:;
  i0 = l0;
  d1 = l2;
  f64_store((&M0), (u64)(i0 + 24), d1);
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = 33608u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  d1 = p1;
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 24));
  l5 = j0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = 33608u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  j1 = l5;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p2 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B1:;
  d0 = l4;
  d1 = l4;
  d1 = floor_0(d1);
  p1 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0.5;
  i0 = (*Z_eosio_injectionZ__eosio_f64_gtZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B32;}
  d0 = p1;
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p1 = d0;
  B32:;
  i0 = l0;
  d1 = l2;
  f64_store((&M0), (u64)(i0 + 24), d1);
  B0:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  d1 = p1;
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = p2;
  i1 = 33608u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_float(f64 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  f64 d1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  d1 = p0;
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 33608u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static f64 mp_obj_float_get(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  f64 d0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33608u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  goto Bfunc;
  B0:;
  i0 = 11093u;
  i1 = 12017u;
  i2 = 197u;
  i3 = 44241u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static u32 mp_obj_int_new_mpz(void) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 33720u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  mpz_init_zero(i0);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_formatted_impl(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5, u32 p6, u32 p7) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = p3;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p3;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i0 = p3;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4u;
  i0 <<= (i1 & 31);
  i1 = p4;
  i2 = p5;
  i3 = p7;
  i0 = mp_int_format_size(i0, i1, i2, i3);
  p3 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B1;}
  i0 = p3;
  i0 = m_malloc(i0);
  l1 = i0;
  i0 = p1;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l0;
  i2 = p4;
  i3 = p5;
  i4 = p6;
  i5 = p7;
  i6 = l1;
  i1 = mpz_as_str_inpl(i1, i2, i3, i4, i5, i6);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = l0;
  i2 = p4;
  i3 = p5;
  i4 = p6;
  i5 = p7;
  i6 = p0;
  i6 = i32_load((&M0), (u64)(i6));
  p3 = i6;
  i1 = mpz_as_str_inpl(i1, i2, i3, i4, i5, i6);
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  goto Bfunc;
  B0:;
  i0 = 11118u;
  i1 = 12028u;
  i2 = 95u;
  i3 = 44262u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_from_bytes_impl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 33720u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  mpz_init_zero(i0);
  i0 = l1;
  i1 = p0;
  i2 = p1;
  i3 = p2;
  mpz_set_from_bytes(i0, i1, i2, i3);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_to_bytes_impl(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p3;
  i1 = 0u;
  i2 = p2;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i0 = mpz_as_bytes(i0, i1, i2, i3);
  goto Bfunc;
  B0:;
  i0 = 11118u;
  i1 = 12028u;
  i2 = 117u;
  i3 = 44288u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_sign(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 4294967295u;
  i1 = 1u;
  i2 = p0;
  i2 = i32_load8_u((&M0), (u64)(i2 + 4));
  i3 = 1u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  i0 = 4294967295u;
  i1 = p0;
  i2 = 1u;
  i1 = (u32)((s32)i1 > (s32)i2);
  i2 = p0;
  i3 = 0u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = p0;
  switch (i0) {
    case 0: goto B2;
    case 1: goto B6;
    case 2: goto B5;
    case 3: goto B3;
    case 4: goto B1;
    case 5: goto B3;
    case 6: goto B0;
    case 7: goto B4;
    default: goto B2;
  }
  B6:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = 33720u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  mpz_init_zero(i0);
  i0 = l0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  mpz_neg_inpl(i0, i1);
  i0 = p0;
  goto Bfunc;
  B5:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = 33720u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  mpz_init_zero(i0);
  i0 = l0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  mpz_not_inpl(i0, i1);
  i0 = p0;
  goto Bfunc;
  B4:;
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 16u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = 33720u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  mpz_init_zero(i0);
  i0 = l0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  mpz_abs_inpl(i0, i1);
  i0 = p0;
  goto Bfunc;
  B3:;
  i0 = 0u;
  p1 = i0;
  B2:;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i3 = 8u;
  i2 += i3;
  i2 = i32_load((&M0), (u64)(i2));
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = mpz_hash(i0);
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B11;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B9;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = 1u;
  l2 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B10;}
  goto B7;
  B11:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i2 = 2u;
  i3 = p1;
  i4 = 1u;
  i3 = (u32)((s32)i3 >> (i4 & 31));
  mpz_init_fixed_from_int(i0, i1, i2, i3);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  l1 = i0;
  i0 = 1u;
  l2 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  l3 = i0;
  if (i0) {goto B7;}
  B10:;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B8;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B13;}
  i0 = l2;
  i1 = 33608u;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  i0 = l2;
  i1 = 23328u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  i0 = p0;
  i1 = l1;
  d1 = mpz_as_float(i1);
  d2 = 0;
  i3 = p2;
  i0 = mp_obj_complex_binary_op(i0, d1, d2, i3);
  p1 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B13:;
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  p1 = i0;
  i0 = p0;
  i1 = 32u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  goto B5;
  B12:;
  i0 = p0;
  i1 = l1;
  d1 = mpz_as_float(i1);
  i2 = p2;
  i0 = mp_obj_float_binary_op(i0, d1, i2);
  p1 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B9:;
  i0 = 17204u;
  i1 = 12028u;
  i2 = 186u;
  i3 = 44313u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B8:;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i0 = mp_obj_int_binary_op_extra_cases(i0, i1, i2);
  p1 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B7:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i2 = 2u;
  i3 = p2;
  i4 = l2;
  i3 = (u32)((s32)i3 >> (i4 & 31));
  mpz_init_fixed_from_int(i0, i1, i2, i3);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  p1 = i0;
  i0 = p0;
  i1 = 32u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  B6:;
  i0 = p0;
  i1 = 19u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  B5:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l1;
  d0 = mpz_as_float(i0);
  i1 = p1;
  d1 = mpz_as_float(i1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  i0 = mp_obj_new_float(d0);
  p1 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = p0;
  i1 = 4294967287u;
  i0 += i1;
  l2 = i0;
  i1 = 26u;
  i0 = i0 > i1;
  l4 = i0;
  if (i0) {goto B28;}
  i0 = 16u;
  i0 = m_malloc(i0);
  l5 = i0;
  i1 = 33720u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l5;
  i1 = 4u;
  i0 += i1;
  l6 = i0;
  mpz_init_zero(i0);
  i0 = l4;
  if (i0) {goto B2;}
  i0 = l2;
  switch (i0) {
    case 0: goto B23;
    case 1: goto B21;
    case 2: goto B20;
    case 3: goto B29;
    case 4: goto B29;
    case 5: goto B19;
    case 6: goto B25;
    case 7: goto B18;
    case 8: goto B2;
    case 9: goto B24;
    case 10: goto B2;
    case 11: goto B17;
    case 12: goto B22;
    case 13: goto B23;
    case 14: goto B21;
    case 15: goto B20;
    case 16: goto B29;
    case 17: goto B29;
    case 18: goto B19;
    case 19: goto B25;
    case 20: goto B18;
    case 21: goto B2;
    case 22: goto B24;
    case 23: goto B2;
    case 24: goto B17;
    case 25: goto B22;
    case 26: goto B15;
    default: goto B23;
  }
  B29:;
  i0 = l3;
  if (i0) {goto B27;}
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i0 = mpz_as_int_checked(i0, i1);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B26;}
  goto B0;
  B28:;
  i0 = l1;
  i1 = p1;
  i0 = mpz_cmp(i0, i1);
  p1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B30;}
  i0 = p0;
  switch (i0) {
    case 0: goto B35;
    case 1: goto B31;
    case 2: goto B33;
    case 3: goto B32;
    case 4: goto B34;
    default: goto B35;
  }
  B35:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = p1;
  i3 = 4294967295u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B34:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = p1;
  i3 = 0u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B33:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B32:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = p1;
  i3 = 0u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B31:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = p1;
  i3 = 1u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B30:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B27:;
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  p1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B0;}
  B26:;
  i0 = p0;
  i1 = 25u;
  i0 = i0 == i1;
  if (i0) {goto B36;}
  i0 = p0;
  i1 = 12u;
  i0 = i0 != i1;
  if (i0) {goto B16;}
  B36:;
  i0 = l6;
  i1 = l1;
  i2 = p1;
  mpz_shl_inpl(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l5;
  goto Bfunc;
  B25:;
  i0 = l6;
  i1 = l1;
  i2 = p1;
  mpz_sub_inpl(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l5;
  goto Bfunc;
  B24:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  mpz_init_zero(i0);
  i0 = l6;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = l1;
  i3 = p1;
  mpz_divmod_inpl(i0, i1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  mpz_deinit(i0);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l5;
  goto Bfunc;
  B23:;
  i0 = l6;
  i1 = l1;
  i2 = p1;
  mpz_or_inpl(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l5;
  goto Bfunc;
  B22:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B37;}
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B14;}
  B37:;
  i0 = l6;
  i1 = l1;
  i2 = p1;
  mpz_pow_inpl(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l5;
  goto Bfunc;
  B21:;
  i0 = l6;
  i1 = l1;
  i2 = p1;
  mpz_xor_inpl(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l5;
  goto Bfunc;
  B20:;
  i0 = l6;
  i1 = l1;
  i2 = p1;
  mpz_and_inpl(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l5;
  goto Bfunc;
  B19:;
  i0 = l6;
  i1 = l1;
  i2 = p1;
  mpz_add_inpl(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l5;
  goto Bfunc;
  B18:;
  i0 = l6;
  i1 = l1;
  i2 = p1;
  mpz_mul_inpl(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l5;
  goto Bfunc;
  B17:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  mpz_init_zero(i0);
  i0 = l0;
  i1 = l6;
  i2 = l1;
  i3 = p1;
  mpz_divmod_inpl(i0, i1, i2, i3);
  i0 = l0;
  mpz_deinit(i0);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l5;
  goto Bfunc;
  B16:;
  i0 = l6;
  i1 = l1;
  i2 = p1;
  mpz_shr_inpl(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l5;
  goto Bfunc;
  B15:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = 33720u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  mpz_init_zero(i0);
  i0 = p0;
  i1 = l6;
  i2 = l1;
  i3 = p1;
  mpz_divmod_inpl(i0, i1, i2, i3);
  i0 = l0;
  i1 = l5;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 2u;
  i1 = l0;
  i0 = mp_obj_new_tuple(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B14:;
  i0 = p0;
  i1 = l1;
  d1 = mpz_as_float(i1);
  i2 = p2;
  i0 = mp_obj_float_binary_op(i0, d1, i2);
  p1 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B3:;
  i0 = 36476u;
  i1 = 13328u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B2:;
  i0 = 14664u;
  i1 = 12028u;
  i2 = 302u;
  i3 = 44313u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B1:;
  i0 = 36416u;
  i1 = 15787u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B0:;
  i0 = 13964u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_get_checked(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mpz_as_int_checked(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  goto Bfunc;
  B0:;
  i0 = 36416u;
  i1 = 15787u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_pow3(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  l1 = i0;
  if (i0) {goto B5;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  B5:;
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  l2 = i0;
  if (i0) {goto B6;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  B6:;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  l3 = i0;
  if (i0) {goto B7;}
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  B7:;
  i0 = 16u;
  i0 = m_malloc(i0);
  l4 = i0;
  i1 = 33720u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = 4u;
  i0 += i1;
  l5 = i0;
  mpz_init_zero(i0);
  i0 = l5;
  j1 = 0ull;
  i2 = 0u;
  mpz_set_from_ll(i0, j1, i2);
  i0 = l1;
  if (i0) {goto B9;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B8;}
  goto B3;
  B9:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = p0;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  mpz_init_from_int(i0, i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  p0 = i0;
  i0 = l2;
  if (i0) {goto B3;}
  B8:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  p1 = i0;
  i0 = l3;
  if (i0) {goto B2;}
  goto B1;
  B4:;
  i0 = 15334u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B3:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p1;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  mpz_init_from_int(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  p1 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  i0 = l0;
  i1 = p2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  mpz_init_from_int(i0, i1);
  i0 = l0;
  p2 = i0;
  goto B0;
  B1:;
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  p2 = i0;
  B0:;
  i0 = l5;
  i1 = p0;
  i2 = p1;
  i3 = p2;
  mpz_pow3_inpl(i0, i1, i2, i3);
  i0 = p0;
  i1 = l0;
  i2 = 32u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B14;}
  i0 = p1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B13;}
  goto B12;
  B14:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  mpz_deinit(i0);
  i0 = p1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = i0 != i1;
  if (i0) {goto B12;}
  B13:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  mpz_deinit(i0);
  i0 = p2;
  i1 = l0;
  i0 = i0 != i1;
  if (i0) {goto B11;}
  goto B10;
  B12:;
  i0 = p2;
  i1 = l0;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  B11:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B10:;
  i0 = l0;
  mpz_deinit(i0);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_int_from_ull(u64 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 33720u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  mpz_init_zero(i0);
  i0 = l1;
  j1 = p0;
  i2 = 0u;
  mpz_set_from_ll(i0, j1, i2);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_int(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l0 = i0;
  i1 = p0;
  i0 ^= i1;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 33720u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  mpz_init_zero(i0);
  i0 = l1;
  i1 = p0;
  j1 = (u64)(s64)(s32)(i1);
  i2 = 1u;
  mpz_set_from_ll(i0, j1, i2);
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_int_from_ll(u64 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 33720u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  mpz_init_zero(i0);
  i0 = l1;
  j1 = p0;
  i2 = 1u;
  mpz_set_from_ll(i0, j1, i2);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_int_from_uint(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = p0;
  i1 = 1073741823u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 33720u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  mpz_init_zero(i0);
  i0 = l1;
  i1 = p0;
  j1 = (u64)(i1);
  i2 = 0u;
  mpz_set_from_ll(i0, j1, i2);
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_int_from_str_len(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 33720u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  mpz_init_zero(i0);
  i0 = p0;
  i1 = l1;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = p1;
  i4 = p2;
  i5 = p3;
  i1 = mpz_set_from_str(i1, i2, i3, i4, i5);
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2));
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_get_truncated(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = mpz_hash(i0);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_get_uint_checked(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mpz_as_uint_checked(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  goto Bfunc;
  B0:;
  i0 = 36416u;
  i1 = 15787u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static f64 mp_obj_int_as_float_impl(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  f64 d0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  d0 = mpz_as_float(i0);
  goto Bfunc;
  B0:;
  i0 = 11118u;
  i1 = 12028u;
  i2 = 452u;
  i3 = 44334u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static u32 mp_obj_new_int_from_float(f64 p0) {
  u32 l1 = 0;
  u64 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  f64 d0, d1;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 9218868437227405312ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 == j1;
  if (i0) {goto B0;}
  j0 = l0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 4293918720u;
  i0 &= i1;
  i1 = 1103101952u;
  i0 = i0 <= i1;
  if (i0) {goto B3;}
  goto B2;
  B4:;
  j0 = l0;
  i0 = (u32)(j0);
  i1 = 0u;
  i0 = i0 != i1;
  i1 = l1;
  i0 |= i1;
  l1 = i0;
  i1 = 2147483647u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 2146435072u;
  i0 += i1;
  i1 = 1103101952u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  B3:;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B1;}
  i0 = 2147483648u;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B2:;
  i0 = mp_obj_int_new_mpz();
  l1 = i0;
  i1 = 4u;
  i0 += i1;
  d1 = p0;
  mpz_set_from_float(i0, d1);
  i0 = l1;
  goto Bfunc;
  B1:;
  d0 = p0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  j0 = l0;
  j1 = 4503599627370495ull;
  j0 &= j1;
  j1 = 0ull;
  i0 = j0 != j1;
  if (i0) {goto B5;}
  i0 = 36416u;
  i1 = 11156u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B5:;
  i0 = 12041u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_int_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6, i7, 
      i8;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 16u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i3 = l0;
  i4 = 4u;
  i3 += i4;
  i4 = p1;
  i5 = 10u;
  i6 = 0u;
  i7 = 0u;
  i8 = 0u;
  i1 = mp_obj_int_formatted(i1, i2, i3, i4, i5, i6, i7, i8);
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  m_free(i0);
  B0:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 mp_obj_int_formatted(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5, u32 p6, u32 p7) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6, i7;
  i0 = p3;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p3;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i4 = p4;
  i5 = p5;
  i6 = p6;
  i7 = p7;
  i0 = mp_obj_int_formatted_impl(i0, i1, i2, i3, i4, i5, i6, i7);
  goto Bfunc;
  B2:;
  i0 = p4;
  i1 = 4294967294u;
  i0 += i1;
  i1 = 15u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = 0u;
  l0 = i0;
  i0 = p3;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  l1 = i0;
  i0 = 0u;
  i1 = p3;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  l2 = i1;
  i0 -= i1;
  l3 = i0;
  i0 = 32u;
  i1 = p4;
  i2 = 44383u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i0 = DIV_U(i0, i1);
  l4 = i0;
  i1 = 1u;
  i0 += i1;
  i1 = 3u;
  i0 = DIV_U(i0, i1);
  i1 = 0u;
  i2 = p7;
  i0 = i2 ? i0 : i1;
  l5 = i0;
  i0 = p5;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p5;
  i0 = strlen_0(i0);
  l0 = i0;
  B3:;
  i0 = l3;
  i1 = l2;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = l0;
  i1 = l4;
  i2 = l5;
  i1 += i2;
  i2 = 3u;
  i1 += i2;
  i2 = 255u;
  i1 &= i2;
  i0 += i1;
  l6 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B5;}
  i0 = l6;
  i0 = m_malloc(i0);
  l0 = i0;
  i0 = p1;
  i1 = l6;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  goto B4;
  B5:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B4:;
  i0 = l0;
  i1 = l6;
  i0 += i1;
  i1 = 4294967295u;
  i0 += i1;
  p1 = i0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = p6;
  i1 = 255u;
  i0 &= i1;
  i1 = 246u;
  i0 += i1;
  l4 = i0;
  i0 = p7;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p1;
  p6 = i0;
  i0 = p1;
  l5 = i0;
  L11: vm_checktime();
    i0 = p6;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    i1 = l4;
    i2 = 48u;
    i3 = l1;
    i4 = l1;
    i5 = p4;
    i4 = DIV_U(i4, i5);
    l3 = i4;
    i5 = p4;
    i4 *= i5;
    i3 -= i4;
    l2 = i3;
    i4 = 9u;
    i3 = (u32)((s32)i3 > (s32)i4);
    i1 = i3 ? i1 : i2;
    i2 = l2;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = p4;
    i0 = i0 < i1;
    l1 = i0;
    if (i0) {goto B12;}
    i0 = p1;
    i1 = l0;
    i0 = i0 <= i1;
    if (i0) {goto B12;}
    i0 = l5;
    i1 = p1;
    i0 -= i1;
    i1 = 3u;
    i0 = i0 != i1;
    if (i0) {goto B12;}
    i0 = p6;
    i1 = 4294967294u;
    i0 += i1;
    p1 = i0;
    i1 = p7;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p1;
    l5 = i0;
    B12:;
    i0 = l1;
    if (i0) {goto B8;}
    i0 = l3;
    l1 = i0;
    i0 = p1;
    p6 = i0;
    i0 = p1;
    i1 = l0;
    i0 = i0 > i1;
    if (i0) {goto L11;}
    goto B8;
  B10:;
  i0 = p1;
  i1 = 4294967295u;
  i0 += i1;
  p1 = i0;
  i1 = 48u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p5;
  if (i0) {goto B7;}
  goto B6;
  B9:;
  L13: vm_checktime();
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    i1 = l4;
    i2 = 48u;
    i3 = l1;
    i4 = l1;
    i5 = p4;
    i4 = DIV_U(i4, i5);
    l2 = i4;
    i5 = p4;
    i4 *= i5;
    i3 -= i4;
    p6 = i3;
    i4 = 9u;
    i3 = (u32)((s32)i3 > (s32)i4);
    i1 = i3 ? i1 : i2;
    i2 = p6;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = p4;
    i0 = i0 < i1;
    if (i0) {goto B8;}
    i0 = l2;
    l1 = i0;
    i0 = p1;
    i1 = l0;
    i0 = i0 > i1;
    if (i0) {goto L13;}
  B8:;
  i0 = p5;
  i0 = !(i0);
  if (i0) {goto B6;}
  B7:;
  i0 = p1;
  i1 = p5;
  i1 = strlen_0(i1);
  i0 -= i1;
  p6 = i0;
  i1 = l0;
  i0 = i0 <= i1;
  if (i0) {goto B6;}
  i0 = p5;
  i0 = i32_load8_u((&M0), (u64)(i0));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = p5;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i0 = p6;
  p4 = i0;
  L15: vm_checktime();
    i0 = p4;
    i1 = p1;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p4;
    i1 = 1u;
    i0 += i1;
    p4 = i0;
    i0 = l1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p1 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = p1;
    if (i0) {goto L15;}
  B14:;
  i0 = p6;
  p1 = i0;
  B6:;
  i0 = p3;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B16;}
  i0 = p1;
  i1 = l0;
  i0 = i0 <= i1;
  if (i0) {goto B16;}
  i0 = p1;
  i1 = 4294967295u;
  i0 += i1;
  p1 = i0;
  i1 = p3;
  i2 = 31u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = 45u;
  i1 &= i2;
  i32_store8((&M0), (u64)(i0), i1);
  B16:;
  i0 = p2;
  i1 = p1;
  i2 = 4294967295u;
  i1 ^= i2;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = l6;
  i2 += i3;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 13985u;
  i1 = 13343u;
  i2 = 249u;
  i3 = 44400u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = 17241u;
  i1 = 13343u;
  i2 = 224u;
  i3 = 44359u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_int_format_size(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = 4294967294u;
  i0 += i1;
  i1 = 15u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = p1;
  i2 = 44383u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i0 = DIV_U(i0, i1);
  p1 = i0;
  i1 = 1u;
  i0 += i1;
  i1 = 3u;
  i0 = DIV_U(i0, i1);
  i1 = 0u;
  i2 = p3;
  i0 = i2 ? i0 : i1;
  p0 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p2;
  i0 = strlen_0(i0);
  l0 = i0;
  B1:;
  i0 = p1;
  i1 = p0;
  i0 += i1;
  i1 = l0;
  i0 += i1;
  i1 = 3u;
  i0 += i1;
  goto Bfunc;
  B0:;
  i0 = 17241u;
  i1 = 13343u;
  i2 = 224u;
  i3 = 44359u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_binary_op_extra_cases(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p2;
  i1 = 30u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p2;
  i1 = 14u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i0 = mp_binary_op(i0, i1, i2);
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = p1;
  i2 = 3u;
  i0 = mp_binary_op(i0, i1, i2);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 29u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p2;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 82u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 33872u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 24420u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B3:;
  i0 = 0u;
  goto Bfunc;
  B2:;
  i0 = 29u;
  i1 = p2;
  i2 = p1;
  i0 = mp_binary_op(i0, i1, i2);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  u64 l2 = 0;
  f64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  f64 d0, d1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 4u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  p2 = i0;
  if (i0) {goto B5;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B5:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  goto B1;
  B4:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 1u;
  goto Bfunc;
  B3:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p3;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i2 = mp_obj_get_int(i2);
  i3 = 0u;
  i0 = mp_parse_num_integer(i0, i1, i2, i3);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B2:;
  i0 = p2;
  if (i0) {goto B6;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 82u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p2;
  i1 = 33608u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = p2;
  i1 = 25184u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = l0;
  i1 = p1;
  j1 = mp_obj_name_to_ull(i1);
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = 0u;
  i1 = 8u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i0 = mp_obj_int_from_bytes_impl(i0, i1, i2);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B7:;
  i0 = p1;
  d0 = mp_obj_float_get(i0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  l2 = j0;
  j1 = 9218868437227405312ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 == j1;
  if (i0) {goto B8;}
  j0 = l2;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  p1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B13;}
  i0 = p1;
  i1 = 4293918720u;
  i0 &= i1;
  i1 = 1103101952u;
  i0 = i0 <= i1;
  if (i0) {goto B12;}
  goto B11;
  B13:;
  j0 = l2;
  i0 = (u32)(j0);
  i1 = 0u;
  i0 = i0 != i1;
  i1 = p1;
  i0 |= i1;
  p1 = i0;
  i1 = 2147483647u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = p1;
  i1 = 2146435072u;
  i0 += i1;
  i1 = 1103101952u;
  i0 = i0 > i1;
  if (i0) {goto B11;}
  B12:;
  d0 = l1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B10;}
  i0 = 2147483648u;
  p1 = i0;
  goto B9;
  B11:;
  i0 = mp_obj_int_new_mpz();
  p1 = i0;
  i1 = 4u;
  i0 += i1;
  d1 = l1;
  mpz_set_from_float(i0, d1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B10:;
  d0 = l1;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  p1 = i0;
  B9:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B8:;
  j0 = l2;
  j1 = 4503599627370495ull;
  j0 &= j1;
  j1 = 0ull;
  i0 = j0 != j1;
  if (i0) {goto B14;}
  i0 = 36416u;
  i1 = 11156u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B14:;
  i0 = 12041u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B6:;
  i0 = 8u;
  i1 = p1;
  i0 = mp_unary_op(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = 0u;
  i3 = 0u;
  i0 = mp_parse_num_integer(i0, i1, i2, i3);
  p1 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 int_from_bytes(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 82u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = 4294967295u;
  i1 = 1u;
  i2 = l2;
  i3 = 874u;
  i2 = i2 == i3;
  p1 = i2;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i0 = l1;
  i1 = l3;
  i0 += i1;
  i1 = 4294967295u;
  i0 += i1;
  i1 = l1;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  l5 = i0;
  i0 = 0u;
  p1 = i0;
  i0 = l3;
  l6 = i0;
  L5: vm_checktime();
    i0 = p1;
    i1 = 4194304u;
    i0 = i0 >= i1;
    if (i0) {goto B2;}
    i0 = p1;
    i1 = 8u;
    i0 <<= (i1 & 31);
    i1 = l5;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i0 |= i1;
    p1 = i0;
    i0 = l5;
    i1 = l4;
    i0 += i1;
    l5 = i0;
    i0 = l6;
    i1 = 4294967295u;
    i0 += i1;
    l6 = i0;
    if (i0) {goto L5;}
    goto B3;
  B4:;
  i0 = 0u;
  p1 = i0;
  B3:;
  i0 = p1;
  i0 = mp_obj_new_int_from_uint(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B2:;
  i0 = l2;
  i1 = 874u;
  i0 = i0 != i1;
  i1 = l3;
  i2 = l1;
  i0 = mp_obj_int_from_bytes_impl(i0, i1, i2);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = l2;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 15375u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 int_to_bytes(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = l0;
  i1 = l1;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i1 = 0u;
  i2 = l1;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = l2;
  i2 = 874u;
  i1 = i1 != i2;
  i2 = l1;
  i3 = l3;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  goto B1;
  B2:;
  i0 = l1;
  i1 = 4u;
  i2 = l1;
  i3 = 4u;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i1 = l2;
  i2 = 874u;
  i1 = i1 != i2;
  l2 = i1;
  i2 = l3;
  i3 = l1;
  i4 = l4;
  i3 -= i4;
  i4 = 0u;
  i5 = l2;
  i3 = i5 ? i3 : i4;
  i2 += i3;
  i3 = p1;
  i4 = 1u;
  i3 = (u32)((s32)i3 >> (i4 & 31));
  mp_binary_set_int(i0, i1, i2, i3);
  B1:;
  i0 = 33004u;
  i1 = l0;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  l1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void plat_print_strn(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = p2;
  mp_hal_stdout_tx_strn_cooked(i0, i1);
  FUNC_EPILOGUE;
}

static u32 mp_print_str(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = strlen_0(i0);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i2 = l0;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_print_strn(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p4;
  i32_store8((&M0), (u64)(i0 + 15), i1);
  i0 = 44432u;
  l1 = i0;
  i0 = 16u;
  l2 = i0;
  i0 = p4;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = p4;
  i1 = 32u;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  i0 = p4;
  i1 = 48u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = 44464u;
  l1 = i0;
  B8:;
  i0 = p5;
  i1 = p2;
  i0 -= i1;
  l3 = i0;
  i0 = p3;
  i1 = 128u;
  i0 &= i1;
  if (i0) {goto B6;}
  goto B5;
  B7:;
  i0 = l0;
  i1 = 15u;
  i0 += i1;
  l1 = i0;
  i0 = 1u;
  l2 = i0;
  i0 = p5;
  i1 = p2;
  i0 -= i1;
  l3 = i0;
  i0 = p3;
  i1 = 128u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B5;}
  B6:;
  i0 = l3;
  i1 = l3;
  i2 = 2u;
  i1 = I32_DIV_S(i1, i2);
  p4 = i1;
  i0 -= i1;
  l4 = i0;
  i0 = p4;
  l3 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B4;}
  goto B2;
  B5:;
  i0 = 0u;
  l4 = i0;
  i0 = l3;
  l5 = i0;
  i0 = p3;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = l3;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  B4:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p5 = i0;
  i0 = l3;
  p4 = i0;
  L9: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l1;
    i2 = l2;
    i3 = p4;
    i4 = p4;
    i5 = l2;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p3 = i2;
    i3 = p5;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = p4;
    i1 = p3;
    i0 -= i1;
    p4 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L9;}
  i0 = l4;
  l5 = i0;
  i0 = l3;
  l4 = i0;
  B3:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B1;
  B2:;
  i0 = l4;
  l5 = i0;
  i0 = 0u;
  l4 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i2 = p2;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
  i0 = l4;
  i1 = p2;
  i0 += i1;
  l4 = i0;
  B0:;
  i0 = l5;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B10;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p5 = i0;
  i0 = l5;
  p4 = i0;
  L11: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l1;
    i2 = l2;
    i3 = p4;
    i4 = p4;
    i5 = l2;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p3 = i2;
    i3 = p5;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = p4;
    i1 = p3;
    i0 -= i1;
    p4 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L11;}
  i0 = l4;
  i1 = l5;
  i0 += i1;
  l4 = i0;
  B10:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_print_mp_int(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5, u32 p6, u32 p7) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6, i7;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = 4294967294u;
  i0 += i1;
  i1 = 31u;
  i0 = I32_ROTL(i0, i1);
  l1 = i0;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = 1u;
  i1 = l1;
  i0 <<= (i1 & 31);
  i1 = 153u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33720u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B3:;
  i0 = p1;
  i0 = mp_obj_get_int(i0);
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  p1 = i0;
  B2:;
  i0 = p4;
  i1 = 129u;
  i0 &= i1;
  i0 = !(i0);
  i1 = p5;
  i2 = 48u;
  i1 = i1 == i2;
  i0 &= i1;
  l2 = i0;
  i0 = l0;
  i1 = 43u;
  i0 += i1;
  l1 = i0;
  i0 = p1;
  i0 = mp_obj_int_sign(i0);
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B4;}
  i0 = p4;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p4;
  i1 = 4u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i1 = 32u;
  i32_store8((&M0), (u64)(i0 + 43), i1);
  i0 = l0;
  i1 = 44u;
  i0 += i1;
  l1 = i0;
  goto B4;
  B5:;
  i0 = l0;
  i1 = 43u;
  i32_store8((&M0), (u64)(i0 + 43), i1);
  i0 = l0;
  i1 = 44u;
  i0 += i1;
  l1 = i0;
  B4:;
  i0 = p7;
  i1 = p6;
  i0 = (u32)((s32)i0 > (s32)i1);
  l3 = i0;
  i0 = 0u;
  i1 = p7;
  i2 = l2;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i0 = p4;
  i1 = 16u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 16u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = p2;
  i1 = 8u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = p2;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l1;
  i1 = 48u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = p3;
  i2 = 1u;
  i1 += i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = l1;
  i1 = 2u;
  i0 += i1;
  l1 = i0;
  goto B0;
  B7:;
  i0 = l1;
  i1 = 48u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = p3;
  i2 = 23u;
  i1 += i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = l1;
  i1 = 2u;
  i0 += i1;
  l1 = i0;
  goto B0;
  B6:;
  i0 = l1;
  i1 = 48u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p4;
  i1 = 512u;
  i0 &= i1;
  if (i0) {goto B8;}
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  goto B0;
  B8:;
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  i1 = p3;
  i2 = 14u;
  i1 += i2;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 2u;
  i0 += i1;
  l1 = i0;
  goto B0;
  B1:;
  i0 = 11181u;
  i1 = 12066u;
  i2 = 208u;
  i3 = 44481u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = p7;
  i1 = p6;
  i2 = l3;
  i0 = i2 ? i0 : i1;
  p7 = i0;
  i0 = l1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 16u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 3), i1);
  i0 = p4;
  i1 = 26u;
  i0 <<= (i1 & 31);
  i1 = 31u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = 44u;
  i0 &= i1;
  l3 = i0;
  i0 = p4;
  i1 = 64u;
  i0 |= i1;
  i1 = p4;
  i2 = l4;
  i3 = 1u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  l5 = i0;
  i1 = 64u;
  i0 &= i1;
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = 4u;
  i2 += i3;
  i3 = p1;
  i4 = p2;
  i5 = 0u;
  i6 = p3;
  i7 = 24u;
  i6 <<= (i7 & 31);
  i7 = 24u;
  i6 = (u32)((s32)i6 >> (i7 & 31));
  i7 = l3;
  i0 = mp_obj_int_formatted(i0, i1, i2, i3, i4, i5, i6, i7);
  l7 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 45u;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  i0 = l0;
  i1 = 45u;
  i32_store8((&M0), (u64)(i0 + 3), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4294967295u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l7;
  i1 = 1u;
  i0 += i1;
  l7 = i0;
  goto B9;
  B10:;
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = 4u;
  i2 += i3;
  i3 = p1;
  i4 = p2;
  i5 = l0;
  i6 = 43u;
  i5 += i6;
  i6 = p3;
  i7 = 24u;
  i6 <<= (i7 & 31);
  i7 = 24u;
  i6 = (u32)((s32)i6 >> (i7 & 31));
  i7 = l3;
  i0 = mp_obj_int_formatted(i0, i1, i2, i3, i4, i5, i6, i7);
  l7 = i0;
  B9:;
  i0 = p7;
  i1 = p6;
  i2 = l2;
  i0 = i2 ? i0 : i1;
  l2 = i0;
  i0 = l1;
  i1 = l0;
  i2 = 43u;
  i1 += i2;
  i0 -= i1;
  p7 = i0;
  i0 = 0u;
  p6 = i0;
  i0 = 0u;
  p3 = i0;
  i0 = l4;
  i1 = 2u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B14;}
  i0 = l4;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  p1 = i1;
  i2 = p1;
  i3 = l4;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B15;}
  i0 = p1;
  i1 = p7;
  i0 += i1;
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 3));
  i2 = 0u;
  i1 = i1 != i2;
  i0 += i1;
  p1 = i0;
  B15:;
  i0 = 0u;
  p3 = i0;
  i0 = 0u;
  p6 = i0;
  i0 = l2;
  i1 = p1;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B16;}
  i0 = l2;
  i1 = p1;
  i0 -= i1;
  l3 = i0;
  i0 = l5;
  i1 = 1u;
  i0 &= i1;
  p1 = i0;
  if (i0) {goto B17;}
  i0 = 0u;
  p6 = i0;
  i0 = l5;
  i1 = 4294967294u;
  i0 &= i1;
  p4 = i0;
  i0 = 48u;
  p5 = i0;
  i0 = l3;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B13;}
  i0 = 0u;
  i1 = p1;
  i0 -= i1;
  i1 = l3;
  i0 &= i1;
  p6 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p2 = i0;
  i0 = l3;
  p1 = i0;
  L18: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 44432u;
    i2 = p1;
    i3 = 16u;
    i4 = p1;
    i5 = 16u;
    i4 = (u32)((s32)i4 < (s32)i5);
    i2 = i4 ? i2 : i3;
    l1 = i2;
    i3 = p2;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = p1;
    i1 = l1;
    i0 -= i1;
    p1 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L18;}
  i0 = l3;
  p3 = i0;
  i0 = p4;
  i1 = 64u;
  i0 &= i1;
  if (i0) {goto B12;}
  goto B11;
  B17:;
  i0 = l3;
  p6 = i0;
  B16:;
  i0 = l5;
  i1 = 4294967294u;
  i0 &= i1;
  p4 = i0;
  i0 = 48u;
  p5 = i0;
  B14:;
  i0 = p4;
  i1 = 64u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B11;}
  goto B12;
  B13:;
  i0 = 0u;
  p3 = i0;
  i0 = p4;
  i1 = 64u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B11;}
  B12:;
  i0 = l0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 3));
  i0 = !(i0);
  if (i0) {goto B19;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 3u;
  i1 += i2;
  i2 = 1u;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
  i0 = l2;
  i1 = 4294967295u;
  i0 += i1;
  l2 = i0;
  i0 = p3;
  i1 = 1u;
  i0 += i1;
  p3 = i0;
  B19:;
  i0 = p7;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = 1u;
  i1 = p7;
  i0 -= i1;
  l3 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B21;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p2 = i0;
  i0 = l3;
  p1 = i0;
  L22: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 44432u;
    i2 = p1;
    i3 = 16u;
    i4 = p1;
    i5 = 16u;
    i4 = (u32)((s32)i4 < (s32)i5);
    i2 = i4 ? i2 : i3;
    l1 = i2;
    i3 = p2;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = p1;
    i1 = l1;
    i0 -= i1;
    p1 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L22;}
    goto B20;
  B21:;
  i0 = 0u;
  l3 = i0;
  B20:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 43u;
  i1 += i2;
  i2 = p7;
  i3 = p0;
  i4 = 4u;
  i3 += i4;
  i3 = i32_load((&M0), (u64)(i3));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
  i0 = l2;
  i1 = p7;
  i0 -= i1;
  l2 = i0;
  i0 = p3;
  i1 = p7;
  i0 += i1;
  i1 = l3;
  i0 += i1;
  p3 = i0;
  B11:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p7 = i0;
  i0 = l0;
  i1 = p5;
  i32_store8((&M0), (u64)(i0 + 47), i1);
  i0 = l4;
  i1 = l2;
  i2 = l4;
  i3 = 1u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i0 = 44432u;
  p2 = i0;
  i0 = 16u;
  l1 = i0;
  i0 = p5;
  i0 = !(i0);
  if (i0) {goto B31;}
  i0 = p5;
  i1 = 255u;
  i0 &= i1;
  l4 = i0;
  i1 = 32u;
  i0 = i0 == i1;
  if (i0) {goto B31;}
  i0 = l4;
  i1 = 48u;
  i0 = i0 != i1;
  if (i0) {goto B30;}
  i0 = 44464u;
  p2 = i0;
  B31:;
  i0 = p1;
  i1 = p7;
  i0 -= i1;
  l2 = i0;
  i0 = p4;
  i1 = 128u;
  i0 &= i1;
  if (i0) {goto B29;}
  goto B28;
  B30:;
  i0 = l0;
  i1 = 47u;
  i0 += i1;
  p2 = i0;
  i0 = 1u;
  l1 = i0;
  i0 = p1;
  i1 = p7;
  i0 -= i1;
  l2 = i0;
  i0 = p4;
  i1 = 128u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B28;}
  B29:;
  i0 = l2;
  i1 = l2;
  i2 = 2u;
  i1 = I32_DIV_S(i1, i2);
  p1 = i1;
  i0 -= i1;
  p5 = i0;
  i0 = p1;
  l2 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B27;}
  goto B25;
  B28:;
  i0 = 0u;
  p5 = i0;
  i0 = l2;
  l3 = i0;
  i0 = p4;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B26;}
  i0 = l2;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B25;}
  B27:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  i0 = l2;
  p1 = i0;
  L32: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p2;
    i2 = l1;
    i3 = p1;
    i4 = p1;
    i5 = l1;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p4 = i2;
    i3 = l4;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = p1;
    i1 = p4;
    i0 -= i1;
    p1 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L32;}
  i0 = p5;
  l3 = i0;
  i0 = l2;
  p5 = i0;
  B26:;
  i0 = p7;
  i0 = !(i0);
  if (i0) {goto B23;}
  goto B24;
  B25:;
  i0 = p5;
  l3 = i0;
  i0 = 0u;
  p5 = i0;
  i0 = p7;
  i0 = !(i0);
  if (i0) {goto B23;}
  B24:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l7;
  i2 = p7;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
  i0 = p5;
  i1 = p7;
  i0 += i1;
  p5 = i0;
  B23:;
  i0 = l3;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B33;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  i0 = l3;
  p1 = i0;
  L34: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p2;
    i2 = l1;
    i3 = p1;
    i4 = p1;
    i5 = l1;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p4 = i2;
    i3 = l4;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = p1;
    i1 = p4;
    i0 -= i1;
    p1 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L34;}
  i0 = p5;
  i1 = l3;
  i0 += i1;
  p5 = i0;
  B33:;
  i0 = p5;
  i1 = p3;
  i0 += i1;
  p2 = i0;
  i0 = p6;
  i0 = !(i0);
  if (i0) {goto B35;}
  i0 = p6;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B37;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p4 = i0;
  i0 = p6;
  p1 = i0;
  L38: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 44432u;
    i2 = p1;
    i3 = 16u;
    i4 = p1;
    i5 = 16u;
    i4 = (u32)((s32)i4 < (s32)i5);
    i2 = i4 ? i2 : i3;
    l1 = i2;
    i3 = p4;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = p1;
    i1 = l1;
    i0 -= i1;
    p1 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L38;}
    goto B36;
  B37:;
  i0 = 0u;
  p6 = i0;
  B36:;
  i0 = p6;
  i1 = p2;
  i0 += i1;
  p2 = i0;
  B35:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B39;}
  i0 = p1;
  m_free(i0);
  B39:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_print_float(u32 p0, f64 p1, u32 p2, u32 p3, u32 p4, u32 p5, u32 p6) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  f64 d0;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 43u;
  l1 = i0;
  i0 = p3;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p3;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 32u;
  i0 &= i1;
  l1 = i0;
  B0:;
  d0 = p1;
  i1 = l0;
  i2 = 32u;
  i3 = p2;
  i4 = p6;
  i5 = l1;
  i0 = mp_format_float(d0, i1, i2, i3, i4, i5);
  l1 = i0;
  i0 = p3;
  i1 = 256u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  i1 = 31u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = l2;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l1;
  i0 += i1;
  i1 = 37u;
  i32_store8((&M0), (u64)(i0), i1);
  goto B1;
  B2:;
  i0 = l1;
  l2 = i0;
  B1:;
  i0 = 0u;
  l3 = i0;
  i0 = l0;
  l4 = i0;
  i0 = p3;
  i1 = 64u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i0 = i32_load8_s((&M0), (u64)(i0));
  i1 = 47u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B3;}
  i0 = 1u;
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 1u;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
  i0 = l2;
  i1 = 4294967295u;
  i0 += i1;
  l2 = i0;
  i0 = p5;
  i1 = 4294967295u;
  i0 += i1;
  p5 = i0;
  i0 = l0;
  i1 = 1u;
  i0 |= i1;
  l4 = i0;
  B3:;
  i0 = l0;
  i1 = p4;
  i32_store8((&M0), (u64)(i0 + 47), i1);
  i0 = 44432u;
  p2 = i0;
  i0 = 16u;
  l1 = i0;
  i0 = p4;
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = p4;
  i1 = 32u;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  i0 = p4;
  i1 = 48u;
  i0 = i0 != i1;
  if (i0) {goto B11;}
  i0 = 44464u;
  p2 = i0;
  B12:;
  i0 = p5;
  i1 = l2;
  i0 -= i1;
  l5 = i0;
  i0 = p3;
  i1 = 128u;
  i0 &= i1;
  if (i0) {goto B10;}
  goto B9;
  B11:;
  i0 = l0;
  i1 = 47u;
  i0 += i1;
  p2 = i0;
  i0 = 1u;
  l1 = i0;
  i0 = p5;
  i1 = l2;
  i0 -= i1;
  l5 = i0;
  i0 = p3;
  i1 = 128u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B9;}
  B10:;
  i0 = l5;
  i1 = l5;
  i2 = 2u;
  i1 = I32_DIV_S(i1, i2);
  p3 = i1;
  i0 -= i1;
  p6 = i0;
  i0 = p3;
  l5 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B8;}
  goto B6;
  B9:;
  i0 = 0u;
  p6 = i0;
  i0 = l5;
  l6 = i0;
  i0 = p3;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B7;}
  i0 = l5;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B6;}
  B8:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p5 = i0;
  i0 = l5;
  p3 = i0;
  L13: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p2;
    i2 = l1;
    i3 = p3;
    i4 = p3;
    i5 = l1;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p4 = i2;
    i3 = p5;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = p3;
    i1 = p4;
    i0 -= i1;
    p3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L13;}
  i0 = p6;
  l6 = i0;
  i0 = l5;
  p6 = i0;
  B7:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B4;}
  goto B5;
  B6:;
  i0 = p6;
  l6 = i0;
  i0 = 0u;
  p6 = i0;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B4;}
  B5:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l4;
  i2 = l2;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
  i0 = p6;
  i1 = l2;
  i0 += i1;
  p6 = i0;
  B4:;
  i0 = l6;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B14;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p5 = i0;
  i0 = l6;
  p3 = i0;
  L15: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p2;
    i2 = l1;
    i3 = p3;
    i4 = p3;
    i5 = l1;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p4 = i2;
    i3 = p5;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = p3;
    i1 = p4;
    i0 -= i1;
    p3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L15;}
  i0 = p6;
  i1 = l6;
  i0 += i1;
  p6 = i0;
  B14:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p6;
  i1 = l3;
  i0 += i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_printf(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i0 = mp_vprintf(i0, i1, i2);
  p2 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_vprintf(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6, i7;
  f64 d1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p1;
  l3 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l4 = i0;
  if (i0) {goto B1;}
  i0 = 2u;
  l6 = i0;
  goto B0;
  B1:;
  i0 = 0u;
  l6 = i0;
  B0:;
  L2: vm_checktime();
    i0 = l6;
    switch (i0) {
      case 0: goto B169;
      case 1: goto B168;
      case 2: goto B167;
      case 3: goto B165;
      case 4: goto B164;
      case 5: goto B163;
      case 6: goto B159;
      case 7: goto B158;
      case 8: goto B157;
      case 9: goto B151;
      case 10: goto B150;
      case 11: goto B143;
      case 12: goto B294;
      case 13: goto B293;
      case 14: goto B250;
      case 15: goto B236;
      case 16: goto B234;
      case 17: goto B233;
      case 18: goto B232;
      case 19: goto B188;
      case 20: goto B187;
      case 21: goto B186;
      case 22: goto B223;
      case 23: goto B222;
      case 24: goto B218;
      case 25: goto B221;
      case 26: goto B220;
      case 27: goto B219;
      case 28: goto B227;
      case 29: goto B226;
      case 30: goto B225;
      case 31: goto B224;
      case 32: goto B229;
      case 33: goto B228;
      case 34: goto B231;
      case 35: goto B230;
      case 36: goto B235;
      case 37: goto B249;
      case 38: goto B248;
      case 39: goto B247;
      case 40: goto B246;
      case 41: goto B185;
      case 42: goto B184;
      case 43: goto B183;
      case 44: goto B182;
      case 45: goto B178;
      case 46: goto B181;
      case 47: goto B180;
      case 48: goto B179;
      case 49: goto B241;
      case 50: goto B240;
      case 51: goto B239;
      case 52: goto B243;
      case 53: goto B242;
      case 54: goto B245;
      case 55: goto B244;
      case 56: goto B267;
      case 57: goto B266;
      case 58: goto B265;
      case 59: goto B199;
      case 60: goto B198;
      case 61: goto B197;
      case 62: goto B256;
      case 63: goto B255;
      case 64: goto B251;
      case 65: goto B254;
      case 66: goto B253;
      case 67: goto B252;
      case 68: goto B260;
      case 69: goto B259;
      case 70: goto B258;
      case 71: goto B257;
      case 72: goto B262;
      case 73: goto B261;
      case 74: goto B264;
      case 75: goto B263;
      case 76: goto B289;
      case 77: goto B288;
      case 78: goto B287;
      case 79: goto B286;
      case 80: goto B207;
      case 81: goto B206;
      case 82: goto B205;
      case 83: goto B204;
      case 84: goto B200;
      case 85: goto B203;
      case 86: goto B202;
      case 87: goto B201;
      case 88: goto B281;
      case 89: goto B280;
      case 90: goto B279;
      case 91: goto B283;
      case 92: goto B282;
      case 93: goto B285;
      case 94: goto B284;
      case 95: goto B278;
      case 96: goto B277;
      case 97: goto B276;
      case 98: goto B275;
      case 99: goto B196;
      case 100: goto B195;
      case 101: goto B194;
      case 102: goto B193;
      case 103: goto B189;
      case 104: goto B192;
      case 105: goto B191;
      case 106: goto B190;
      case 107: goto B270;
      case 108: goto B269;
      case 109: goto B268;
      case 110: goto B272;
      case 111: goto B271;
      case 112: goto B274;
      case 113: goto B273;
      case 114: goto B217;
      case 115: goto B216;
      case 116: goto B215;
      case 117: goto B177;
      case 118: goto B176;
      case 119: goto B175;
      case 120: goto B174;
      case 121: goto B170;
      case 122: goto B173;
      case 123: goto B172;
      case 124: goto B171;
      case 125: goto B210;
      case 126: goto B209;
      case 127: goto B208;
      case 128: goto B212;
      case 129: goto B211;
      case 130: goto B214;
      case 131: goto B213;
      case 132: goto B291;
      case 133: goto B290;
      case 134: goto B238;
      case 135: goto B141;
      case 136: goto B237;
      case 137: goto B292;
      case 138: goto B142;
      case 139: goto B153;
      case 140: goto B149;
      case 141: goto B144;
      case 142: goto B148;
      case 143: goto B147;
      case 144: goto B146;
      case 145: goto B145;
      case 146: goto B152;
      case 147: goto B156;
      case 148: goto B155;
      case 149: goto B154;
      case 150: goto B160;
      case 151: goto B161;
      case 152: goto B162;
      case 153: goto B166;
      default: goto B166;
    }
    B294:;
    i0 = l3;
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 24u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l5 = i0;
    i1 = 4294967227u;
    i0 += i1;
    l4 = i0;
    i1 = 51u;
    i0 = i0 > i1;
    if (i0) {goto B97;}
    i0 = 13u;
    l6 = i0;
    goto L2;
    B293:;
    i0 = l4;
    switch (i0) {
      case 0: goto B295;
      case 1: goto B295;
      case 2: goto B295;
      case 3: goto B96;
      case 4: goto B96;
      case 5: goto B96;
      case 6: goto B96;
      case 7: goto B96;
      case 8: goto B96;
      case 9: goto B96;
      case 10: goto B96;
      case 11: goto B95;
      case 12: goto B96;
      case 13: goto B96;
      case 14: goto B96;
      case 15: goto B96;
      case 16: goto B96;
      case 17: goto B96;
      case 18: goto B96;
      case 19: goto B94;
      case 20: goto B96;
      case 21: goto B96;
      case 22: goto B96;
      case 23: goto B96;
      case 24: goto B96;
      case 25: goto B96;
      case 26: goto B96;
      case 27: goto B96;
      case 28: goto B96;
      case 29: goto B93;
      case 30: goto B92;
      case 31: goto B91;
      case 32: goto B295;
      case 33: goto B295;
      case 34: goto B295;
      case 35: goto B96;
      case 36: goto B96;
      case 37: goto B96;
      case 38: goto B96;
      case 39: goto B96;
      case 40: goto B96;
      case 41: goto B96;
      case 42: goto B96;
      case 43: goto B95;
      case 44: goto B90;
      case 45: goto B96;
      case 46: goto B89;
      case 47: goto B96;
      case 48: goto B94;
      case 49: goto B96;
      case 50: goto B96;
      case 51: goto B94;
      default: goto B295;
    }
    B295:;
    i0 = 137u;
    l6 = i0;
    goto L2;
    B292:;
    i0 = p0;
    i1 = l7;
    i2 = 7u;
    i1 += i2;
    i2 = 4294967288u;
    i1 &= i2;
    l3 = i1;
    d1 = f64_load((&M0), (u64)(i1));
    i2 = l5;
    i3 = l10;
    i4 = l8;
    i5 = 24u;
    i4 <<= (i5 & 31);
    i5 = 24u;
    i4 = (u32)((s32)i4 >> (i5 & 31));
    i5 = p1;
    i6 = l9;
    i0 = mp_print_float(i0, d1, i2, i3, i4, i5, i6);
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i1 = 8u;
    i0 += i1;
    p2 = i0;
    i0 = l11;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B118;}
    goto B119;
    B291:;
    i0 = p0;
    i1 = l7;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 0u;
    i3 = 16u;
    i4 = l5;
    i5 = 1u;
    i4 += i5;
    i5 = 6u;
    i4 &= i5;
    i3 -= i4;
    i4 = l5;
    i5 = 24u;
    i4 <<= (i5 & 31);
    i5 = 4026531840u;
    i4 &= i5;
    i5 = 4043309056u;
    i4 += i5;
    i5 = 24u;
    i4 = (u32)((s32)i4 >> (i5 & 31));
    i5 = l10;
    i6 = l8;
    i7 = 24u;
    i6 <<= (i7 & 31);
    i7 = 24u;
    i6 = (u32)((s32)i6 >> (i7 & 31));
    i7 = p1;
    i0 = mp_print_int(i0, i1, i2, i3, i4, i5, i6, i7);
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l7;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = l11;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B135;}
    goto B136;
    B290:;
    i0 = l7;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = p0;
    i1 = l7;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 0u;
    i3 = 16u;
    i4 = 97u;
    i5 = l10;
    i6 = l8;
    i7 = 24u;
    i6 <<= (i7 & 31);
    i7 = 24u;
    i6 = (u32)((s32)i6 >> (i7 & 31));
    i7 = p1;
    i0 = mp_print_int(i0, i1, i2, i3, i4, i5, i6, i7);
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l11;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B137;}
    goto B138;
    B289:;
    i0 = l7;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = p0;
    i1 = l7;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i3 = 10u;
    i4 = 97u;
    i5 = l10;
    i6 = l8;
    i7 = 24u;
    i6 <<= (i7 & 31);
    i7 = 24u;
    i6 = (u32)((s32)i6 >> (i7 & 31));
    i7 = p1;
    i0 = mp_print_int(i0, i1, i2, i3, i4, i5, i6, i7);
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l11;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B133;}
    goto B134;
    B288:;
    i0 = l0;
    i1 = l7;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0 + 9), i1);
    i0 = l0;
    i1 = l8;
    i32_store8((&M0), (u64)(i0 + 12), i1);
    i0 = 44432u;
    l5 = i0;
    i0 = 16u;
    l4 = i0;
    i0 = l8;
    i1 = 255u;
    i0 &= i1;
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B45;}
    i0 = 78u;
    l6 = i0;
    goto L2;
    B287:;
    i0 = l3;
    i1 = 32u;
    i0 = i0 == i1;
    if (i0) {goto B44;}
    i0 = 79u;
    l6 = i0;
    goto L2;
    B286:;
    i0 = l3;
    i1 = 48u;
    i0 = i0 != i1;
    if (i0) {goto B43;}
    i0 = 93u;
    l6 = i0;
    goto L2;
    B285:;
    i0 = 44464u;
    l5 = i0;
    i0 = 94u;
    l6 = i0;
    goto L2;
    B284:;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    l8 = i0;
    i0 = l10;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto B42;}
    i0 = 91u;
    l6 = i0;
    goto L2;
    B283:;
    i0 = 0u;
    l9 = i0;
    i0 = l8;
    p2 = i0;
    i0 = l10;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B38;}
    i0 = 92u;
    l6 = i0;
    goto L2;
    B282:;
    i0 = l8;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B40;}
    i0 = 88u;
    l6 = i0;
    goto L2;
    B281:;
    i0 = l8;
    l3 = i0;
    i0 = 89u;
    l6 = i0;
    goto L2;
    B280:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B34;}
    i0 = 90u;
    l6 = i0;
    goto L2;
    B279:;
    i0 = l9;
    p2 = i0;
    i0 = l8;
    l9 = i0;
    goto B37;
    B278:;
    i0 = l7;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = l7;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto B33;}
    i0 = 96u;
    l6 = i0;
    goto L2;
    B277:;
    i0 = l0;
    i1 = l8;
    i32_store8((&M0), (u64)(i0 + 10), i1);
    i0 = 44432u;
    l5 = i0;
    i0 = 16u;
    l4 = i0;
    i0 = l8;
    i1 = 255u;
    i0 &= i1;
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B32;}
    i0 = 97u;
    l6 = i0;
    goto L2;
    B276:;
    i0 = l3;
    i1 = 32u;
    i0 = i0 == i1;
    if (i0) {goto B31;}
    i0 = 98u;
    l6 = i0;
    goto L2;
    B275:;
    i0 = l3;
    i1 = 48u;
    i0 = i0 != i1;
    if (i0) {goto B30;}
    i0 = 112u;
    l6 = i0;
    goto L2;
    B274:;
    i0 = 44464u;
    l5 = i0;
    i0 = 113u;
    l6 = i0;
    goto L2;
    B273:;
    i0 = p1;
    i1 = 4294967292u;
    i0 += i1;
    l8 = i0;
    i0 = l10;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto B29;}
    i0 = 110u;
    l6 = i0;
    goto L2;
    B272:;
    i0 = 0u;
    l7 = i0;
    i0 = l8;
    l9 = i0;
    i0 = l10;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B25;}
    i0 = 111u;
    l6 = i0;
    goto L2;
    B271:;
    i0 = l8;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B27;}
    i0 = 107u;
    l6 = i0;
    goto L2;
    B270:;
    i0 = l8;
    l3 = i0;
    i0 = 108u;
    l6 = i0;
    goto L2;
    B269:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B21;}
    i0 = 109u;
    l6 = i0;
    goto L2;
    B268:;
    i0 = l7;
    l9 = i0;
    i0 = l8;
    l7 = i0;
    goto B24;
    B267:;
    i0 = l7;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i2 = 4u;
    i1 += i2;
    i0 = qstr_data(i0, i1);
    l12 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    i1 = l9;
    i2 = l9;
    i3 = 0u;
    i2 = (u32)((s32)i2 < (s32)i3);
    i0 = i2 ? i0 : i1;
    p2 = i0;
    i0 = l0;
    i1 = l8;
    i32_store8((&M0), (u64)(i0 + 13), i1);
    i0 = 44432u;
    l5 = i0;
    i0 = 16u;
    l4 = i0;
    i0 = l8;
    i1 = 255u;
    i0 &= i1;
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B59;}
    i0 = 57u;
    l6 = i0;
    goto L2;
    B266:;
    i0 = l3;
    i1 = 32u;
    i0 = i0 == i1;
    if (i0) {goto B58;}
    i0 = 58u;
    l6 = i0;
    goto L2;
    B265:;
    i0 = l3;
    i1 = 48u;
    i0 = i0 != i1;
    if (i0) {goto B57;}
    i0 = 74u;
    l6 = i0;
    goto L2;
    B264:;
    i0 = 44464u;
    l5 = i0;
    i0 = 75u;
    l6 = i0;
    goto L2;
    B263:;
    i0 = p1;
    i1 = p2;
    i0 -= i1;
    l9 = i0;
    i0 = l10;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto B56;}
    i0 = 72u;
    l6 = i0;
    goto L2;
    B262:;
    i0 = 0u;
    l8 = i0;
    i0 = l9;
    l13 = i0;
    i0 = l10;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B46;}
    i0 = 73u;
    l6 = i0;
    goto L2;
    B261:;
    i0 = l9;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B54;}
    i0 = 68u;
    l6 = i0;
    goto L2;
    B260:;
    i0 = l9;
    l3 = i0;
    i0 = 69u;
    l6 = i0;
    goto L2;
    B259:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B47;}
    i0 = 70u;
    l6 = i0;
    goto L2;
    B258:;
    i0 = l8;
    l13 = i0;
    i0 = l9;
    l8 = i0;
    i0 = 71u;
    l6 = i0;
    goto L2;
    B257:;
    i0 = p2;
    i0 = !(i0);
    if (i0) {goto B52;}
    i0 = 62u;
    l6 = i0;
    goto L2;
    B256:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l12;
    i2 = p2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l8;
    i1 = p2;
    i0 += i1;
    l8 = i0;
    i0 = 63u;
    l6 = i0;
    goto L2;
    B255:;
    i0 = l13;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B49;}
    i0 = 65u;
    l6 = i0;
    goto L2;
    B254:;
    i0 = l13;
    l3 = i0;
    i0 = 66u;
    l6 = i0;
    goto L2;
    B253:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B48;}
    i0 = 67u;
    l6 = i0;
    goto L2;
    B252:;
    i0 = l8;
    i1 = l13;
    i0 += i1;
    l8 = i0;
    i0 = 64u;
    l6 = i0;
    goto L2;
    B251:;
    i0 = l7;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = l8;
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l11;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B131;}
    goto B132;
    B250:;
    i0 = l7;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = l7;
    i0 = i32_load((&M0), (u64)(i0));
    l7 = i0;
    i0 = l9;
    i0 = !(i0);
    if (i0) {goto B88;}
    i0 = 37u;
    l6 = i0;
    goto L2;
    B249:;
    i0 = l7;
    if (i0) {goto B87;}
    i0 = 38u;
    l6 = i0;
    goto L2;
    B248:;
    i0 = l0;
    i1 = l8;
    i32_store8((&M0), (u64)(i0 + 14), i1);
    i0 = 44432u;
    l5 = i0;
    i0 = 16u;
    l4 = i0;
    i0 = l8;
    i1 = 255u;
    i0 &= i1;
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B71;}
    i0 = 39u;
    l6 = i0;
    goto L2;
    B247:;
    i0 = l3;
    i1 = 32u;
    i0 = i0 == i1;
    if (i0) {goto B70;}
    i0 = 40u;
    l6 = i0;
    goto L2;
    B246:;
    i0 = l3;
    i1 = 48u;
    i0 = i0 != i1;
    if (i0) {goto B69;}
    i0 = 54u;
    l6 = i0;
    goto L2;
    B245:;
    i0 = 44464u;
    l5 = i0;
    i0 = 55u;
    l6 = i0;
    goto L2;
    B244:;
    i0 = p1;
    i1 = 4294967290u;
    i0 += i1;
    l8 = i0;
    i0 = l10;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto B68;}
    i0 = 52u;
    l6 = i0;
    goto L2;
    B243:;
    i0 = 0u;
    l9 = i0;
    i0 = l8;
    l7 = i0;
    i0 = l10;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B64;}
    i0 = 53u;
    l6 = i0;
    goto L2;
    B242:;
    i0 = l8;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B66;}
    i0 = 49u;
    l6 = i0;
    goto L2;
    B241:;
    i0 = l8;
    l3 = i0;
    i0 = 50u;
    l6 = i0;
    goto L2;
    B240:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B60;}
    i0 = 51u;
    l6 = i0;
    goto L2;
    B239:;
    i0 = l9;
    l7 = i0;
    i0 = l8;
    l9 = i0;
    goto B63;
    B238:;
    i0 = l3;
    i1 = 37u;
    i0 = i0 != i1;
    if (i0) {goto B8;}
    i0 = 136u;
    l6 = i0;
    goto L2;
    B237:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l11;
    i2 = 1u;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = l7;
    p2 = i0;
    i0 = l11;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B120;}
    goto B121;
    B236:;
    i0 = l9;
    i1 = 4294967295u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B86;}
    i0 = 36u;
    l6 = i0;
    goto L2;
    B235:;
    i0 = l7;
    i0 = strlen_0(i0);
    l9 = i0;
    i0 = 16u;
    l6 = i0;
    goto L2;
    B234:;
    i0 = l0;
    i1 = l8;
    i32_store8((&M0), (u64)(i0 + 15), i1);
    i0 = 44432u;
    l5 = i0;
    i0 = 16u;
    l4 = i0;
    i0 = l8;
    i1 = 255u;
    i0 &= i1;
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B85;}
    i0 = 17u;
    l6 = i0;
    goto L2;
    B233:;
    i0 = l3;
    i1 = 32u;
    i0 = i0 == i1;
    if (i0) {goto B84;}
    i0 = 18u;
    l6 = i0;
    goto L2;
    B232:;
    i0 = l3;
    i1 = 48u;
    i0 = i0 != i1;
    if (i0) {goto B83;}
    i0 = 34u;
    l6 = i0;
    goto L2;
    B231:;
    i0 = 44464u;
    l5 = i0;
    i0 = 35u;
    l6 = i0;
    goto L2;
    B230:;
    i0 = p1;
    i1 = l9;
    i0 -= i1;
    l13 = i0;
    i0 = l10;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto B82;}
    i0 = 32u;
    l6 = i0;
    goto L2;
    B229:;
    i0 = 0u;
    l8 = i0;
    i0 = l13;
    l12 = i0;
    i0 = l10;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B72;}
    i0 = 33u;
    l6 = i0;
    goto L2;
    B228:;
    i0 = l13;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B80;}
    i0 = 28u;
    l6 = i0;
    goto L2;
    B227:;
    i0 = l13;
    l3 = i0;
    i0 = 29u;
    l6 = i0;
    goto L2;
    B226:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B73;}
    i0 = 30u;
    l6 = i0;
    goto L2;
    B225:;
    i0 = l8;
    l12 = i0;
    i0 = l13;
    l8 = i0;
    i0 = 31u;
    l6 = i0;
    goto L2;
    B224:;
    i0 = l9;
    i0 = !(i0);
    if (i0) {goto B78;}
    i0 = 22u;
    l6 = i0;
    goto L2;
    B223:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l7;
    i2 = l9;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l8;
    i1 = l9;
    i0 += i1;
    l8 = i0;
    i0 = 23u;
    l6 = i0;
    goto L2;
    B222:;
    i0 = l12;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B75;}
    i0 = 25u;
    l6 = i0;
    goto L2;
    B221:;
    i0 = l12;
    l3 = i0;
    i0 = 26u;
    l6 = i0;
    goto L2;
    B220:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B74;}
    i0 = 27u;
    l6 = i0;
    goto L2;
    B219:;
    i0 = l8;
    i1 = l12;
    i0 += i1;
    l8 = i0;
    i0 = 24u;
    l6 = i0;
    goto L2;
    B218:;
    i0 = l8;
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l11;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B122;}
    goto B123;
    B217:;
    i0 = l0;
    i1 = l8;
    i32_store8((&M0), (u64)(i0 + 11), i1);
    i0 = 44432u;
    l5 = i0;
    i0 = 16u;
    l4 = i0;
    i0 = l8;
    i1 = 255u;
    i0 &= i1;
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B20;}
    i0 = 115u;
    l6 = i0;
    goto L2;
    B216:;
    i0 = l3;
    i1 = 32u;
    i0 = i0 == i1;
    if (i0) {goto B19;}
    i0 = 116u;
    l6 = i0;
    goto L2;
    B215:;
    i0 = l3;
    i1 = 48u;
    i0 = i0 != i1;
    if (i0) {goto B18;}
    i0 = 130u;
    l6 = i0;
    goto L2;
    B214:;
    i0 = 44464u;
    l5 = i0;
    i0 = 131u;
    l6 = i0;
    goto L2;
    B213:;
    i0 = p1;
    i1 = 4294967291u;
    i0 += i1;
    l8 = i0;
    i0 = l10;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto B17;}
    i0 = 128u;
    l6 = i0;
    goto L2;
    B212:;
    i0 = 0u;
    l7 = i0;
    i0 = l8;
    l9 = i0;
    i0 = l10;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B13;}
    i0 = 129u;
    l6 = i0;
    goto L2;
    B211:;
    i0 = l8;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B15;}
    i0 = 125u;
    l6 = i0;
    goto L2;
    B210:;
    i0 = l8;
    l3 = i0;
    i0 = 126u;
    l6 = i0;
    goto L2;
    B209:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B9;}
    i0 = 127u;
    l6 = i0;
    goto L2;
    B208:;
    i0 = l7;
    l9 = i0;
    i0 = l8;
    l7 = i0;
    goto B12;
    B207:;
    i0 = l0;
    i1 = 12u;
    i0 += i1;
    l5 = i0;
    i0 = 1u;
    l4 = i0;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    l8 = i0;
    i0 = l10;
    i1 = 128u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B41;}
    i0 = 81u;
    l6 = i0;
    goto L2;
    B206:;
    i0 = l8;
    i1 = l8;
    i2 = 2u;
    i1 = I32_DIV_S(i1, i2);
    l3 = i1;
    i0 -= i1;
    l9 = i0;
    i0 = l3;
    l8 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B39;}
    i0 = 82u;
    l6 = i0;
    goto L2;
    B205:;
    i0 = l9;
    p2 = i0;
    i0 = 0u;
    l9 = i0;
    i0 = 83u;
    l6 = i0;
    goto L2;
    B204:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i2 = 9u;
    i1 += i2;
    i2 = 1u;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l9;
    i1 = 1u;
    i0 += i1;
    l10 = i0;
    i0 = p2;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B36;}
    i0 = 85u;
    l6 = i0;
    goto L2;
    B203:;
    i0 = p2;
    l3 = i0;
    i0 = 86u;
    l6 = i0;
    goto L2;
    B202:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B35;}
    i0 = 87u;
    l6 = i0;
    goto L2;
    B201:;
    i0 = l10;
    i1 = p2;
    i0 += i1;
    l10 = i0;
    i0 = 84u;
    l6 = i0;
    goto L2;
    B200:;
    i0 = l7;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = l10;
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l11;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B129;}
    goto B130;
    B199:;
    i0 = l0;
    i1 = 13u;
    i0 += i1;
    l5 = i0;
    i0 = 1u;
    l4 = i0;
    i0 = p1;
    i1 = p2;
    i0 -= i1;
    l9 = i0;
    i0 = l10;
    i1 = 128u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B55;}
    i0 = 60u;
    l6 = i0;
    goto L2;
    B198:;
    i0 = l9;
    i1 = l9;
    i2 = 2u;
    i1 = I32_DIV_S(i1, i2);
    l3 = i1;
    i0 -= i1;
    l8 = i0;
    i0 = l3;
    l9 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B53;}
    i0 = 61u;
    l6 = i0;
    goto L2;
    B197:;
    i0 = l8;
    l13 = i0;
    i0 = 0u;
    l8 = i0;
    i0 = p2;
    if (i0) {goto B50;}
    goto B51;
    B196:;
    i0 = l0;
    i1 = 10u;
    i0 += i1;
    l5 = i0;
    i0 = 1u;
    l4 = i0;
    i0 = p1;
    i1 = 4294967292u;
    i0 += i1;
    l8 = i0;
    i0 = l10;
    i1 = 128u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B28;}
    i0 = 100u;
    l6 = i0;
    goto L2;
    B195:;
    i0 = l8;
    i1 = l8;
    i2 = 2u;
    i1 = I32_DIV_S(i1, i2);
    l3 = i1;
    i0 -= i1;
    l7 = i0;
    i0 = l3;
    l8 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B26;}
    i0 = 101u;
    l6 = i0;
    goto L2;
    B194:;
    i0 = l7;
    l9 = i0;
    i0 = 0u;
    l7 = i0;
    i0 = 102u;
    l6 = i0;
    goto L2;
    B193:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 13352u;
    i2 = 4u;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l7;
    i1 = 4u;
    i0 += i1;
    l10 = i0;
    i0 = l9;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B23;}
    i0 = 104u;
    l6 = i0;
    goto L2;
    B192:;
    i0 = l9;
    l3 = i0;
    i0 = 105u;
    l6 = i0;
    goto L2;
    B191:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B22;}
    i0 = 106u;
    l6 = i0;
    goto L2;
    B190:;
    i0 = l10;
    i1 = l9;
    i0 += i1;
    l10 = i0;
    i0 = 103u;
    l6 = i0;
    goto L2;
    B189:;
    i0 = l10;
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l11;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B127;}
    goto B128;
    B188:;
    i0 = l0;
    i1 = 15u;
    i0 += i1;
    l5 = i0;
    i0 = 1u;
    l4 = i0;
    i0 = p1;
    i1 = l9;
    i0 -= i1;
    l13 = i0;
    i0 = l10;
    i1 = 128u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B81;}
    i0 = 20u;
    l6 = i0;
    goto L2;
    B187:;
    i0 = l13;
    i1 = l13;
    i2 = 2u;
    i1 = I32_DIV_S(i1, i2);
    l3 = i1;
    i0 -= i1;
    l8 = i0;
    i0 = l3;
    l13 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B79;}
    i0 = 21u;
    l6 = i0;
    goto L2;
    B186:;
    i0 = l8;
    l12 = i0;
    i0 = 0u;
    l8 = i0;
    i0 = l9;
    if (i0) {goto B76;}
    goto B77;
    B185:;
    i0 = l0;
    i1 = 14u;
    i0 += i1;
    l5 = i0;
    i0 = 1u;
    l4 = i0;
    i0 = p1;
    i1 = 4294967290u;
    i0 += i1;
    l8 = i0;
    i0 = l10;
    i1 = 128u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B67;}
    i0 = 42u;
    l6 = i0;
    goto L2;
    B184:;
    i0 = l8;
    i1 = l8;
    i2 = 2u;
    i1 = I32_DIV_S(i1, i2);
    l3 = i1;
    i0 -= i1;
    l9 = i0;
    i0 = l3;
    l8 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B65;}
    i0 = 43u;
    l6 = i0;
    goto L2;
    B183:;
    i0 = l9;
    l7 = i0;
    i0 = 0u;
    l9 = i0;
    i0 = 44u;
    l6 = i0;
    goto L2;
    B182:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 14690u;
    i2 = 6u;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l9;
    i1 = 6u;
    i0 += i1;
    l10 = i0;
    i0 = l7;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B62;}
    i0 = 46u;
    l6 = i0;
    goto L2;
    B181:;
    i0 = l7;
    l3 = i0;
    i0 = 47u;
    l6 = i0;
    goto L2;
    B180:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B61;}
    i0 = 48u;
    l6 = i0;
    goto L2;
    B179:;
    i0 = l10;
    i1 = l7;
    i0 += i1;
    l10 = i0;
    i0 = 45u;
    l6 = i0;
    goto L2;
    B178:;
    i0 = l10;
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l11;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B124;}
    goto B125;
    B177:;
    i0 = l0;
    i1 = 11u;
    i0 += i1;
    l5 = i0;
    i0 = 1u;
    l4 = i0;
    i0 = p1;
    i1 = 4294967291u;
    i0 += i1;
    l8 = i0;
    i0 = l10;
    i1 = 128u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B16;}
    i0 = 118u;
    l6 = i0;
    goto L2;
    B176:;
    i0 = l8;
    i1 = l8;
    i2 = 2u;
    i1 = I32_DIV_S(i1, i2);
    l3 = i1;
    i0 -= i1;
    l7 = i0;
    i0 = l3;
    l8 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B14;}
    i0 = 119u;
    l6 = i0;
    goto L2;
    B175:;
    i0 = l7;
    l9 = i0;
    i0 = 0u;
    l7 = i0;
    i0 = 120u;
    l6 = i0;
    goto L2;
    B174:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 14023u;
    i2 = 5u;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l7;
    i1 = 5u;
    i0 += i1;
    l10 = i0;
    i0 = l9;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B11;}
    i0 = 122u;
    l6 = i0;
    goto L2;
    B173:;
    i0 = l9;
    l3 = i0;
    i0 = 123u;
    l6 = i0;
    goto L2;
    B172:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B10;}
    i0 = 124u;
    l6 = i0;
    goto L2;
    B171:;
    i0 = l10;
    i1 = l9;
    i0 += i1;
    l10 = i0;
    i0 = 121u;
    l6 = i0;
    goto L2;
    B170:;
    i0 = l10;
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l11;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B126;}
    i0 = 0u;
    l6 = i0;
    goto L2;
    B169:;
    i0 = l4;
    i1 = 37u;
    i0 = i0 == i1;
    if (i0) {goto B140;}
    i0 = 1u;
    l6 = i0;
    goto L2;
    B168:;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B139;}
    i0 = 2u;
    l6 = i0;
    goto L2;
    B167:;
    i0 = l3;
    i1 = p1;
    i0 = i0 <= i1;
    if (i0) {goto B117;}
    i0 = 153u;
    l6 = i0;
    goto L2;
    B166:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p1;
    i2 = l3;
    i3 = p1;
    i2 -= i3;
    l4 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = l4;
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i0 = i32_load8_u((&M0), (u64)(i0));
    if (i0) {goto B114;}
    goto B115;
    B165:;
    i0 = p1;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto B116;}
    i0 = 4u;
    l6 = i0;
    goto L2;
    B164:;
    i0 = 0u;
    l10 = i0;
    i0 = 32u;
    l8 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    i1 = 4294967264u;
    i0 += i1;
    l5 = i0;
    i1 = 16u;
    i0 = i0 > i1;
    if (i0) {goto B113;}
    i0 = 5u;
    l6 = i0;
    goto L2;
    B163:;
    i0 = 1u;
    p1 = i0;
    i0 = l5;
    switch (i0) {
      case 0: goto B296;
      case 1: goto B111;
      case 2: goto B110;
      case 3: goto B110;
      case 4: goto B110;
      case 5: goto B110;
      case 6: goto B110;
      case 7: goto B110;
      case 8: goto B110;
      case 9: goto B110;
      case 10: goto B110;
      case 11: goto B109;
      case 12: goto B110;
      case 13: goto B108;
      case 14: goto B110;
      case 15: goto B110;
      case 16: goto B107;
      default: goto B296;
    }
    B296:;
    i0 = 152u;
    l6 = i0;
    goto L2;
    B162:;
    i0 = 4u;
    p1 = i0;
    goto B105;
    B161:;
    i0 = 8u;
    p1 = i0;
    goto B106;
    B160:;
    i0 = 2u;
    p1 = i0;
    goto B104;
    B159:;
    i0 = 48u;
    l8 = i0;
    i0 = 64u;
    p1 = i0;
    i0 = 7u;
    l6 = i0;
    goto L2;
    B158:;
    i0 = l10;
    i1 = p1;
    i0 |= i1;
    l10 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    i1 = 4294967264u;
    i0 += i1;
    l5 = i0;
    i1 = 16u;
    i0 = i0 <= i1;
    if (i0) {goto B112;}
    i0 = 8u;
    l6 = i0;
    goto L2;
    B157:;
    i0 = 0u;
    p1 = i0;
    i0 = l4;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 9u;
    i0 = i0 > i1;
    if (i0) {goto B103;}
    i0 = 147u;
    l6 = i0;
    goto L2;
    B156:;
    i0 = 0u;
    p1 = i0;
    i0 = 148u;
    l6 = i0;
    goto L2;
    B155:;
    i0 = l4;
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 24u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    i1 = p1;
    i2 = 10u;
    i1 *= i2;
    i0 += i1;
    i1 = 4294967248u;
    i0 += i1;
    p1 = i0;
    i0 = l3;
    i0 = i32_load8_u((&M0), (u64)(i0 + 1));
    l4 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    l3 = i0;
    i0 = l4;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 10u;
    i0 = i0 < i1;
    if (i0) {goto B3;}
    i0 = 149u;
    l6 = i0;
    goto L2;
    B154:;
    i0 = 4294967295u;
    l9 = i0;
    i0 = l4;
    i1 = 255u;
    i0 &= i1;
    i1 = 46u;
    i0 = i0 != i1;
    if (i0) {goto B102;}
    i0 = 139u;
    l6 = i0;
    goto L2;
    B153:;
    i0 = l5;
    i0 = i32_load8_u((&M0), (u64)(i0 + 1));
    l4 = i0;
    i1 = 42u;
    i0 = i0 != i1;
    if (i0) {goto B7;}
    i0 = 146u;
    l6 = i0;
    goto L2;
    B152:;
    i0 = p2;
    i1 = 4u;
    i0 += i1;
    l7 = i0;
    i0 = l5;
    i1 = 2u;
    i0 += i1;
    l11 = i0;
    i0 = l5;
    i0 = i32_load8_u((&M0), (u64)(i0 + 2));
    l4 = i0;
    i0 = p2;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    goto B4;
    B151:;
    i0 = l3;
    l5 = i0;
    i0 = 4294967295u;
    l9 = i0;
    i0 = l4;
    i1 = 255u;
    i0 &= i1;
    i1 = 46u;
    i0 = i0 == i1;
    if (i0) {goto B101;}
    i0 = 10u;
    l6 = i0;
    goto L2;
    B150:;
    i0 = p2;
    l7 = i0;
    i0 = l5;
    l11 = i0;
    goto B99;
    B149:;
    i0 = l5;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = 0u;
    l9 = i0;
    i0 = l4;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 9u;
    i0 = i0 > i1;
    if (i0) {goto B6;}
    i0 = 142u;
    l6 = i0;
    goto L2;
    B148:;
    i0 = 0u;
    l5 = i0;
    i0 = 143u;
    l6 = i0;
    goto L2;
    B147:;
    i0 = l5;
    i1 = 10u;
    i0 *= i1;
    i1 = l4;
    i2 = 24u;
    i1 <<= (i2 & 31);
    i2 = 24u;
    i1 = (u32)((s32)i1 >> (i2 & 31));
    i0 += i1;
    i1 = 4294967248u;
    i0 += i1;
    l5 = i0;
    i0 = l3;
    i0 = i32_load8_u((&M0), (u64)(i0 + 1));
    l4 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l11 = i0;
    l3 = i0;
    i0 = l4;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 10u;
    i0 = i0 < i1;
    if (i0) {goto B5;}
    i0 = 144u;
    l6 = i0;
    goto L2;
    B146:;
    i0 = p2;
    l7 = i0;
    i0 = 145u;
    l6 = i0;
    goto L2;
    B145:;
    i0 = l5;
    i1 = 0u;
    i2 = l5;
    i3 = 0u;
    i2 = (u32)((s32)i2 > (s32)i3);
    i0 = i2 ? i0 : i1;
    l9 = i0;
    goto B100;
    B144:;
    i0 = p2;
    l7 = i0;
    i0 = l3;
    l11 = i0;
    i0 = 11u;
    l6 = i0;
    goto L2;
    B143:;
    i0 = l11;
    i1 = 1u;
    i0 += i1;
    i1 = l11;
    i2 = l4;
    i3 = 255u;
    i2 &= i3;
    i3 = 108u;
    i2 = i2 == i3;
    i0 = i2 ? i0 : i1;
    l11 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l3 = i0;
    if (i0) {goto B98;}
    i0 = 138u;
    l6 = i0;
    goto L2;
    B142:;
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    g0 = i0;
    i0 = l2;
    goto Bfunc;
    B141:;
    i0 = 15399u;
    i1 = 12066u;
    i2 = 569u;
    i3 = 44497u;
    __assert_fail(i0, i1, i2, i3);
    UNREACHABLE;
    B140:;
    i0 = 2u;
    l6 = i0;
    goto L2;
    B139:;
    i0 = 0u;
    l6 = i0;
    goto L2;
    B138:;
    i0 = 2u;
    l6 = i0;
    goto L2;
    B137:;
    i0 = 0u;
    l6 = i0;
    goto L2;
    B136:;
    i0 = 2u;
    l6 = i0;
    goto L2;
    B135:;
    i0 = 0u;
    l6 = i0;
    goto L2;
    B134:;
    i0 = 2u;
    l6 = i0;
    goto L2;
    B133:;
    i0 = 0u;
    l6 = i0;
    goto L2;
    B132:;
    i0 = 2u;
    l6 = i0;
    goto L2;
    B131:;
    i0 = 0u;
    l6 = i0;
    goto L2;
    B130:;
    i0 = 2u;
    l6 = i0;
    goto L2;
    B129:;
    i0 = 0u;
    l6 = i0;
    goto L2;
    B128:;
    i0 = 2u;
    l6 = i0;
    goto L2;
    B127:;
    i0 = 0u;
    l6 = i0;
    goto L2;
    B126:;
    i0 = 2u;
    l6 = i0;
    goto L2;
    B125:;
    i0 = 2u;
    l6 = i0;
    goto L2;
    B124:;
    i0 = 0u;
    l6 = i0;
    goto L2;
    B123:;
    i0 = 2u;
    l6 = i0;
    goto L2;
    B122:;
    i0 = 0u;
    l6 = i0;
    goto L2;
    B121:;
    i0 = 2u;
    l6 = i0;
    goto L2;
    B120:;
    i0 = 0u;
    l6 = i0;
    goto L2;
    B119:;
    i0 = 2u;
    l6 = i0;
    goto L2;
    B118:;
    i0 = 0u;
    l6 = i0;
    goto L2;
    B117:;
    i0 = 3u;
    l6 = i0;
    goto L2;
    B116:;
    i0 = 138u;
    l6 = i0;
    goto L2;
    B115:;
    i0 = 138u;
    l6 = i0;
    goto L2;
    B114:;
    i0 = 4u;
    l6 = i0;
    goto L2;
    B113:;
    i0 = 8u;
    l6 = i0;
    goto L2;
    B112:;
    i0 = 5u;
    l6 = i0;
    goto L2;
    B111:;
    i0 = 151u;
    l6 = i0;
    goto L2;
    B110:;
    i0 = 8u;
    l6 = i0;
    goto L2;
    B109:;
    i0 = 150u;
    l6 = i0;
    goto L2;
    B108:;
    i0 = 7u;
    l6 = i0;
    goto L2;
    B107:;
    i0 = 6u;
    l6 = i0;
    goto L2;
    B106:;
    i0 = 7u;
    l6 = i0;
    goto L2;
    B105:;
    i0 = 7u;
    l6 = i0;
    goto L2;
    B104:;
    i0 = 7u;
    l6 = i0;
    goto L2;
    B103:;
    i0 = 9u;
    l6 = i0;
    goto L2;
    B102:;
    i0 = 10u;
    l6 = i0;
    goto L2;
    B101:;
    i0 = 139u;
    l6 = i0;
    goto L2;
    B100:;
    i0 = 11u;
    l6 = i0;
    goto L2;
    B99:;
    i0 = 11u;
    l6 = i0;
    goto L2;
    B98:;
    i0 = 12u;
    l6 = i0;
    goto L2;
    B97:;
    i0 = 134u;
    l6 = i0;
    goto L2;
    B96:;
    i0 = 134u;
    l6 = i0;
    goto L2;
    B95:;
    i0 = 133u;
    l6 = i0;
    goto L2;
    B94:;
    i0 = 132u;
    l6 = i0;
    goto L2;
    B93:;
    i0 = 95u;
    l6 = i0;
    goto L2;
    B92:;
    i0 = 77u;
    l6 = i0;
    goto L2;
    B91:;
    i0 = 76u;
    l6 = i0;
    goto L2;
    B90:;
    i0 = 56u;
    l6 = i0;
    goto L2;
    B89:;
    i0 = 14u;
    l6 = i0;
    goto L2;
    B88:;
    i0 = 15u;
    l6 = i0;
    goto L2;
    B87:;
    i0 = 15u;
    l6 = i0;
    goto L2;
    B86:;
    i0 = 16u;
    l6 = i0;
    goto L2;
    B85:;
    i0 = 35u;
    l6 = i0;
    goto L2;
    B84:;
    i0 = 35u;
    l6 = i0;
    goto L2;
    B83:;
    i0 = 19u;
    l6 = i0;
    goto L2;
    B82:;
    i0 = 20u;
    l6 = i0;
    goto L2;
    B81:;
    i0 = 32u;
    l6 = i0;
    goto L2;
    B80:;
    i0 = 21u;
    l6 = i0;
    goto L2;
    B79:;
    i0 = 28u;
    l6 = i0;
    goto L2;
    B78:;
    i0 = 23u;
    l6 = i0;
    goto L2;
    B77:;
    i0 = 23u;
    l6 = i0;
    goto L2;
    B76:;
    i0 = 22u;
    l6 = i0;
    goto L2;
    B75:;
    i0 = 24u;
    l6 = i0;
    goto L2;
    B74:;
    i0 = 26u;
    l6 = i0;
    goto L2;
    B73:;
    i0 = 29u;
    l6 = i0;
    goto L2;
    B72:;
    i0 = 31u;
    l6 = i0;
    goto L2;
    B71:;
    i0 = 55u;
    l6 = i0;
    goto L2;
    B70:;
    i0 = 55u;
    l6 = i0;
    goto L2;
    B69:;
    i0 = 41u;
    l6 = i0;
    goto L2;
    B68:;
    i0 = 42u;
    l6 = i0;
    goto L2;
    B67:;
    i0 = 52u;
    l6 = i0;
    goto L2;
    B66:;
    i0 = 43u;
    l6 = i0;
    goto L2;
    B65:;
    i0 = 49u;
    l6 = i0;
    goto L2;
    B64:;
    i0 = 44u;
    l6 = i0;
    goto L2;
    B63:;
    i0 = 44u;
    l6 = i0;
    goto L2;
    B62:;
    i0 = 45u;
    l6 = i0;
    goto L2;
    B61:;
    i0 = 47u;
    l6 = i0;
    goto L2;
    B60:;
    i0 = 50u;
    l6 = i0;
    goto L2;
    B59:;
    i0 = 75u;
    l6 = i0;
    goto L2;
    B58:;
    i0 = 75u;
    l6 = i0;
    goto L2;
    B57:;
    i0 = 59u;
    l6 = i0;
    goto L2;
    B56:;
    i0 = 60u;
    l6 = i0;
    goto L2;
    B55:;
    i0 = 72u;
    l6 = i0;
    goto L2;
    B54:;
    i0 = 61u;
    l6 = i0;
    goto L2;
    B53:;
    i0 = 68u;
    l6 = i0;
    goto L2;
    B52:;
    i0 = 63u;
    l6 = i0;
    goto L2;
    B51:;
    i0 = 63u;
    l6 = i0;
    goto L2;
    B50:;
    i0 = 62u;
    l6 = i0;
    goto L2;
    B49:;
    i0 = 64u;
    l6 = i0;
    goto L2;
    B48:;
    i0 = 66u;
    l6 = i0;
    goto L2;
    B47:;
    i0 = 69u;
    l6 = i0;
    goto L2;
    B46:;
    i0 = 71u;
    l6 = i0;
    goto L2;
    B45:;
    i0 = 94u;
    l6 = i0;
    goto L2;
    B44:;
    i0 = 94u;
    l6 = i0;
    goto L2;
    B43:;
    i0 = 80u;
    l6 = i0;
    goto L2;
    B42:;
    i0 = 81u;
    l6 = i0;
    goto L2;
    B41:;
    i0 = 91u;
    l6 = i0;
    goto L2;
    B40:;
    i0 = 82u;
    l6 = i0;
    goto L2;
    B39:;
    i0 = 88u;
    l6 = i0;
    goto L2;
    B38:;
    i0 = 83u;
    l6 = i0;
    goto L2;
    B37:;
    i0 = 83u;
    l6 = i0;
    goto L2;
    B36:;
    i0 = 84u;
    l6 = i0;
    goto L2;
    B35:;
    i0 = 86u;
    l6 = i0;
    goto L2;
    B34:;
    i0 = 89u;
    l6 = i0;
    goto L2;
    B33:;
    i0 = 114u;
    l6 = i0;
    goto L2;
    B32:;
    i0 = 113u;
    l6 = i0;
    goto L2;
    B31:;
    i0 = 113u;
    l6 = i0;
    goto L2;
    B30:;
    i0 = 99u;
    l6 = i0;
    goto L2;
    B29:;
    i0 = 100u;
    l6 = i0;
    goto L2;
    B28:;
    i0 = 110u;
    l6 = i0;
    goto L2;
    B27:;
    i0 = 101u;
    l6 = i0;
    goto L2;
    B26:;
    i0 = 107u;
    l6 = i0;
    goto L2;
    B25:;
    i0 = 102u;
    l6 = i0;
    goto L2;
    B24:;
    i0 = 102u;
    l6 = i0;
    goto L2;
    B23:;
    i0 = 103u;
    l6 = i0;
    goto L2;
    B22:;
    i0 = 105u;
    l6 = i0;
    goto L2;
    B21:;
    i0 = 108u;
    l6 = i0;
    goto L2;
    B20:;
    i0 = 131u;
    l6 = i0;
    goto L2;
    B19:;
    i0 = 131u;
    l6 = i0;
    goto L2;
    B18:;
    i0 = 117u;
    l6 = i0;
    goto L2;
    B17:;
    i0 = 118u;
    l6 = i0;
    goto L2;
    B16:;
    i0 = 128u;
    l6 = i0;
    goto L2;
    B15:;
    i0 = 119u;
    l6 = i0;
    goto L2;
    B14:;
    i0 = 125u;
    l6 = i0;
    goto L2;
    B13:;
    i0 = 120u;
    l6 = i0;
    goto L2;
    B12:;
    i0 = 120u;
    l6 = i0;
    goto L2;
    B11:;
    i0 = 121u;
    l6 = i0;
    goto L2;
    B10:;
    i0 = 123u;
    l6 = i0;
    goto L2;
    B9:;
    i0 = 126u;
    l6 = i0;
    goto L2;
    B8:;
    i0 = 135u;
    l6 = i0;
    goto L2;
    B7:;
    i0 = 140u;
    l6 = i0;
    goto L2;
    B6:;
    i0 = 141u;
    l6 = i0;
    goto L2;
    B5:;
    i0 = 143u;
    l6 = i0;
    goto L2;
    B4:;
    i0 = 145u;
    l6 = i0;
    goto L2;
    B3:;
    i0 = 148u;
    l6 = i0;
    goto L2;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_print_int(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5, u32 p6, u32 p7) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 30), i1);
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B7;}
  i0 = p5;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p5;
  i1 = 4u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = 32u;
  l1 = i0;
  i0 = l0;
  i1 = 32u;
  i32_store8((&M0), (u64)(i0 + 30), i1);
  i0 = 16u;
  l2 = i0;
  i0 = p1;
  if (i0) {goto B3;}
  goto B4;
  B7:;
  i0 = 45u;
  l1 = i0;
  i0 = l0;
  i1 = 45u;
  i32_store8((&M0), (u64)(i0 + 30), i1);
  i0 = 0u;
  i1 = p1;
  i0 -= i1;
  p1 = i0;
  B6:;
  i0 = 16u;
  l2 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B4;}
  goto B3;
  B5:;
  i0 = 43u;
  l1 = i0;
  i0 = l0;
  i1 = 43u;
  i32_store8((&M0), (u64)(i0 + 30), i1);
  i0 = 16u;
  l2 = i0;
  i0 = p1;
  if (i0) {goto B3;}
  B4:;
  i0 = l0;
  i1 = 48u;
  i32_store8((&M0), (u64)(i0 + 15), i1);
  i0 = l0;
  i1 = 15u;
  i0 |= i1;
  l5 = i0;
  i0 = l0;
  i1 = l2;
  i0 += i1;
  p1 = i0;
  i0 = p5;
  i1 = 64u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = p4;
  i1 = 246u;
  i0 += i1;
  l3 = i0;
  i0 = l0;
  i1 = 15u;
  i0 |= i1;
  l1 = i0;
  L9: vm_checktime();
    i0 = l1;
    i1 = l3;
    i2 = 48u;
    i3 = p1;
    i4 = p1;
    i5 = p3;
    i4 = DIV_U(i4, i5);
    p4 = i4;
    i5 = p3;
    i4 *= i5;
    i3 -= i4;
    p2 = i3;
    i4 = 9u;
    i3 = (u32)((s32)i3 > (s32)i4);
    i1 = i3 ? i1 : i2;
    i2 = p2;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    p2 = i0;
    i0 = p1;
    i1 = p3;
    i0 = i0 < i1;
    if (i0) {goto B8;}
    i0 = l1;
    i1 = l0;
    i0 = i0 > i1;
    l4 = i0;
    i0 = p2;
    l1 = i0;
    i0 = p4;
    p1 = i0;
    i0 = l4;
    if (i0) {goto L9;}
  B8:;
  i0 = p2;
  i1 = 1u;
  i0 += i1;
  l5 = i0;
  i0 = l0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 30));
  l1 = i0;
  i0 = l0;
  i1 = l2;
  i0 += i1;
  p1 = i0;
  i0 = p5;
  i1 = 64u;
  i0 &= i1;
  if (i0) {goto B1;}
  B2:;
  i0 = 0u;
  l2 = i0;
  i0 = l5;
  i1 = l0;
  i0 = i0 <= i1;
  if (i0) {goto B0;}
  i0 = l1;
  i1 = 255u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l5;
  i1 = 4294967295u;
  i0 += i1;
  l5 = i0;
  i1 = l1;
  i32_store8((&M0), (u64)(i0), i1);
  goto B0;
  B1:;
  i0 = l1;
  i1 = 255u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = 1u;
  l2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 30u;
  i1 += i2;
  i2 = 1u;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
  i0 = p7;
  i1 = 4294967295u;
  i0 += i1;
  p7 = i0;
  goto B0;
  B10:;
  i0 = 0u;
  l2 = i0;
  B0:;
  i0 = l0;
  i1 = p6;
  i32_store8((&M0), (u64)(i0 + 31), i1);
  i0 = p1;
  i1 = l5;
  i0 -= i1;
  l3 = i0;
  i0 = 44432u;
  p2 = i0;
  i0 = 16u;
  l1 = i0;
  i0 = p6;
  i0 = !(i0);
  if (i0) {goto B19;}
  i0 = p6;
  i1 = 32u;
  i0 = i0 == i1;
  if (i0) {goto B19;}
  i0 = p6;
  i1 = 48u;
  i0 = i0 != i1;
  if (i0) {goto B18;}
  i0 = 44464u;
  p2 = i0;
  B19:;
  i0 = p7;
  i1 = l3;
  i0 -= i1;
  p6 = i0;
  i0 = p5;
  i1 = 128u;
  i0 &= i1;
  if (i0) {goto B17;}
  goto B16;
  B18:;
  i0 = l0;
  i1 = 31u;
  i0 += i1;
  p2 = i0;
  i0 = 1u;
  l1 = i0;
  i0 = p7;
  i1 = l3;
  i0 -= i1;
  p6 = i0;
  i0 = p5;
  i1 = 128u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B16;}
  B17:;
  i0 = p6;
  i1 = p6;
  i2 = 2u;
  i1 = I32_DIV_S(i1, i2);
  p1 = i1;
  i0 -= i1;
  l4 = i0;
  i0 = p1;
  p6 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B15;}
  goto B13;
  B16:;
  i0 = 0u;
  l4 = i0;
  i0 = p6;
  p7 = i0;
  i0 = p5;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B14;}
  i0 = p6;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B13;}
  B15:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p4 = i0;
  i0 = p6;
  p1 = i0;
  L20: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p2;
    i2 = l1;
    i3 = p1;
    i4 = p1;
    i5 = l1;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p3 = i2;
    i3 = p4;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = p1;
    i1 = p3;
    i0 -= i1;
    p1 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L20;}
  i0 = l4;
  p7 = i0;
  i0 = p6;
  l4 = i0;
  B14:;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B11;}
  goto B12;
  B13:;
  i0 = l4;
  p7 = i0;
  i0 = 0u;
  l4 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B11;}
  B12:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l5;
  i2 = l3;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
  i0 = l4;
  i1 = l3;
  i0 += i1;
  l4 = i0;
  B11:;
  i0 = p7;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B21;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p4 = i0;
  i0 = p7;
  p1 = i0;
  L22: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p2;
    i2 = l1;
    i3 = p1;
    i4 = p1;
    i5 = l1;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p3 = i2;
    i3 = p4;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
    i0 = p1;
    i1 = p3;
    i0 -= i1;
    p1 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L22;}
  i0 = l4;
  i1 = p7;
  i0 += i1;
  l4 = i0;
  B21:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  i1 = l2;
  i0 += i1;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_tuple_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 3u;
  l0 = i0;
  i0 = p2;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 11232u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B3;}
  goto B2;
  B4:;
  i0 = p0;
  i1 = 12076u;
  i0 = mp_print_str(i0, i1);
  i0 = 1u;
  l0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  if (i0) {goto B2;}
  B3:;
  i0 = 0u;
  l2 = i0;
  i0 = l0;
  i1 = 3u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  p2 = i0;
  i0 = 0u;
  l1 = i0;
  L5: vm_checktime();
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B6;}
    i0 = p0;
    i1 = 17265u;
    i0 = mp_print_str(i0, i1);
    B6:;
    i0 = p0;
    i1 = p2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l0;
    mp_obj_print_helper(i0, i1, i2);
    i0 = p2;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i1 = p1;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = i0 < i1;
    if (i0) {goto L5;}
  i0 = l0;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = 13357u;
  i0 = mp_print_str(i0, i1);
  goto Bfunc;
  B0:;
  i0 = l2;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = p0;
  i1 = 14029u;
  i0 = mp_print_str(i0, i1);
  B7:;
  i0 = p0;
  i1 = 14697u;
  i0 = mp_print_str(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_tuple_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  p0 = i0;
  i0 = 33864u;
  l0 = i0;
  i0 = 0u;
  l1 = i0;
  L4: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = 6u;
    i1 = l2;
    i0 = mp_unary_op(i0, i1);
    i1 = 1u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    i1 = l0;
    i0 += i1;
    l0 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i1 = p1;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = i0 < i1;
    if (i0) {goto L4;}
  i0 = l0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B3:;
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B2:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l0 = i0;
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 33864u;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_tuple_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 29u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = 1u;
  i1 = p0;
  i0 <<= (i1 & 31);
  l2 = i0;
  i1 = 31u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p2;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 36));
  i1 = 189u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = p2;
  i1 = 33872u;
  i0 = mp_obj_cast_to_native_base(i0, i1);
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  B6:;
  i0 = p0;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p2;
  i4 = 8u;
  i3 += i4;
  i4 = p2;
  i4 = i32_load((&M0), (u64)(i4 + 4));
  i0 = mp_seq_cmp_objs(i0, i1, i2, i3, i4);
  p2 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = p2;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B5:;
  i0 = l2;
  i1 = 134234112u;
  i0 &= i1;
  if (i0) {goto B8;}
  i0 = 1u;
  i1 = p0;
  i0 <<= (i1 & 31);
  i1 = 536936448u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = 0u;
  l1 = i0;
  i0 = p2;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_get_int_maybe(i0, i1);
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B7;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = p2;
  i0 *= i1;
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l2;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 8u;
  i0 += i1;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 33872u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  goto B0;
  B8:;
  i0 = p2;
  i0 = mp_obj_get_type(i0);
  i1 = 33872u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l1 = i1;
  i0 += i1;
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l2;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 8u;
  i0 += i1;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 33872u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B2;
  B7:;
  i0 = 33864u;
  l1 = i0;
  B4:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B3:;
  i0 = 33864u;
  p0 = i0;
  B2:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p2;
  i2 = 8u;
  i1 += i2;
  i2 = p2;
  i3 = 4u;
  i2 += i3;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = 33864u;
  p0 = i0;
  B0:;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = 4u;
  i2 = l1;
  i3 = p2;
  i4 = p0;
  i5 = 8u;
  i4 += i5;
  mp_seq_multiply(i0, i1, i2, i3, i4);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_tuple_getiter(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 456u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 23728u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_tuple(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 8u;
  i0 += i1;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 33872u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 0u;
  l1 = i0;
  L2: vm_checktime();
    i0 = l0;
    i1 = l1;
    i0 += i1;
    i1 = 8u;
    i0 += i1;
    i1 = p1;
    i2 = l1;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L2;}
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 33864u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_tuple_subscr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 24360u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p1;
  i4 = 0u;
  i1 = mp_get_index(i1, i2, i3, i4);
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = l0;
  i0 = mp_seq_get_fast_slice_indexes(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i0 -= i1;
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = l1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  l2 = i0;
  i1 = 8u;
  i0 += i1;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 33872u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  goto B4;
  B5:;
  i0 = 33864u;
  p2 = i0;
  i0 = 0u;
  l2 = i0;
  B4:;
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i2 = p1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i2 = 8u;
  i1 += i2;
  i2 = l2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B3:;
  i0 = 15438u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_tuple_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33872u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = 16u;
  i0 = m_malloc(i0);
  l1 = i0;
  i0 = 0u;
  p1 = i0;
  i0 = 33864u;
  l0 = i0;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  l2 = i0;
  i0 = mp_iternext(i0);
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 8u;
  p3 = i0;
  i0 = 4u;
  p2 = i0;
  L4: vm_checktime();
    i0 = p1;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto B5;}
    i0 = l1;
    i1 = p2;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 = m_realloc(i0, i1);
    l1 = i0;
    i0 = p2;
    i1 = 1u;
    i0 <<= (i1 & 31);
    p2 = i0;
    B5:;
    i0 = l1;
    i1 = p3;
    i0 += i1;
    i1 = 4294967288u;
    i0 += i1;
    i1 = l3;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p3;
    i1 = 4u;
    i0 += i1;
    p3 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i0 = l2;
    i0 = mp_iternext(i0);
    l3 = i0;
    if (i0) {goto L4;}
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p3;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 33872u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p1;
  i1 = 4294967295u;
  i0 += i1;
  p2 = i0;
  i0 = 4294967295u;
  p3 = i0;
  i0 = 0u;
  p1 = i0;
  L6: vm_checktime();
    i0 = l0;
    i1 = p1;
    i0 += i1;
    i1 = 8u;
    i0 += i1;
    i1 = l1;
    i2 = p1;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p2;
    i1 = p3;
    i2 = 1u;
    i1 += i2;
    p3 = i1;
    i0 = i0 != i1;
    if (i0) {goto L6;}
  B3:;
  i0 = l1;
  m_free(i0);
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 33864u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 tuple_it_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = l1;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_tuple_get(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 36));
  i1 = 189u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 15832u;
  i1 = 16346u;
  i2 = 254u;
  i3 = 44508u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_obj_tuple_del(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33872u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  m_free(i0);
  goto Bfunc;
  B0:;
  i0 = 17585u;
  i1 = 16346u;
  i2 = 261u;
  i3 = 44525u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 tuple_count(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = p1;
  i0 = mp_seq_count_obj(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 tuple_index(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = p0;
  i3 = p1;
  i0 = mp_seq_index_obj(i0, i1, i2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_getitem_iter(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 33988u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = 1u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 it_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 176u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i0 = nlr_push_tail(i0);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = setjmp_ex(i0);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = 35996u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 36836u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B2:;
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B1:;
  i0 = 1u;
  i1 = 0u;
  i2 = p0;
  i3 = 4u;
  i2 += i3;
  i0 = mp_call_method_n_kw(i0, i1, i2);
  l1 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = 2u;
  i1 += i2;
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  nlr_pop();
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = l1;
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_init(void) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  qstr_init();
  i0 = 0u;
  i1 = 36176u;
  i32_store((&M0), (u64)(i0 + 5212), i1);
  i0 = 0u;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 5216), j1);
  i0 = 0u;
  i1 = 33864u;
  i32_store((&M0), (u64)(i0 + 5224), i1);
  i0 = 0u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 5244), i1);
  i0 = 0u;
  i1 = 1u;
  i32_store16((&M0), (u64)(i0 + 5356), i1);
  i0 = 0u;
  i1 = 0u;
  i32_store16((&M0), (u64)(i0 + 5358), i1);
  i0 = 5228u;
  i1 = 3u;
  mp_obj_dict_init(i0, i1);
  i0 = 5256u;
  i1 = 1u;
  mp_obj_dict_init(i0, i1);
  i0 = 5256u;
  i1 = 186u;
  i2 = 170u;
  i0 = mp_obj_dict_store(i0, i1, i2);
  i0 = 0u;
  i1 = 5256u;
  i32_store((&M0), (u64)(i0 + 5184), i1);
  i0 = 0u;
  i1 = 5256u;
  i32_store((&M0), (u64)(i0 + 5180), i1);
  i0 = 0u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 5304), i1);
  FUNC_EPILOGUE;
}

static u32 mp_load_name(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5180));
  l1 = i0;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5184));
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  l2 = i1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l1 = i0;
  if (i0) {goto B1;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5184));
  l1 = i0;
  goto B2;
  B3:;
  i0 = p0;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  l2 = i0;
  B2:;
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = l2;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l1 = i0;
  if (i0) {goto B1;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5304));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = l2;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l1 = i0;
  if (i0) {goto B1;}
  B4:;
  i0 = 27388u;
  i1 = l2;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37016u;
  i1 = 11234u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_raise_msg_varg(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i0 = mp_obj_new_exception_msg_vlist(i0, i1, i2);
  nlr_jump(i0);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static u32 mp_load_global(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5184));
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  l1 = i1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l2 = i0;
  if (i0) {goto B1;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5304));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l2 = i0;
  if (i0) {goto B1;}
  B2:;
  i0 = 27388u;
  i1 = l1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37016u;
  i1 = 11234u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_load_build_class(void) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 26352u;
  l0 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5304));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = 1370u;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_store_name(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5180));
  i1 = p0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i2 = p1;
  i0 = mp_obj_dict_store(i0, i1, i2);
  FUNC_EPILOGUE;
}

static void mp_delete_name(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5180));
  i1 = p0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i0 = mp_obj_dict_delete(i0, i1);
  FUNC_EPILOGUE;
}

static void mp_store_global(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5184));
  i1 = p0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i2 = p1;
  i0 = mp_obj_dict_store(i0, i1, i2);
  FUNC_EPILOGUE;
}

static void mp_delete_global(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5184));
  i1 = p0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i0 = mp_obj_dict_delete(i0, i1);
  FUNC_EPILOGUE;
}

static u32 mp_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = mp_obj_is_true(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B14;}
  i0 = p0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B12;}
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  l1 = i0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B13;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i0 = qstr_hash(i0);
  p0 = i0;
  if (i0) {goto B2;}
  goto B3;
  B14:;
  i0 = p0;
  i1 = 8u;
  i0 = i0 > i1;
  if (i0) {goto B5;}
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  l2 = i0;
  i0 = p1;
  l1 = i0;
  i0 = p0;
  switch (i0) {
    case 0: goto B1;
    case 1: goto B15;
    case 2: goto B10;
    case 3: goto B5;
    case 4: goto B11;
    case 5: goto B5;
    case 6: goto B1;
    case 7: goto B9;
    case 8: goto B1;
    default: goto B1;
  }
  B15:;
  i0 = 0u;
  i1 = l2;
  i0 -= i1;
  p1 = i0;
  i0 = l2;
  i1 = 3221225472u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  i0 = p1;
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B13:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B12;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 82u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  B12:;
  i0 = p1;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = p0;
  i1 = p1;
  i2 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32), 5, i2, i0, i1);
  l1 = i0;
  if (i0) {goto B1;}
  B16:;
  i0 = p0;
  i1 = 8u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = p1;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 13359u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B11:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = l2;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B10:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 |= i1;
  i1 = 4294967294u;
  i0 ^= i1;
  goto Bfunc;
  B9:;
  i0 = p1;
  l1 = i0;
  i0 = p1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = l2;
  i0 -= i1;
  p1 = i0;
  i0 = l2;
  i1 = 3221225472u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = p1;
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B8:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B7:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B6:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  if (i0) {goto B2;}
  goto B3;
  B5:;
  i0 = 12078u;
  i1 = 17268u;
  i2 = 271u;
  i3 = 44542u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B4:;
  i0 = l0;
  i1 = p1;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = p0;
  i2 = 43635u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 37376u;
  i1 = 14031u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B3:;
  i0 = l1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B18;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  p0 = i0;
  goto B17;
  B18:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  B17:;
  i0 = p1;
  i1 = p0;
  i0 = qstr_compute_hash(i0, i1);
  p0 = i0;
  B2:;
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l1 = i0;
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 4294967294u;
  i0 += i1;
  l1 = i0;
  i1 = 6u;
  i0 = i0 > i1;
  if (i0) {goto B35;}
  i0 = l1;
  switch (i0) {
    case 0: goto B38;
    case 1: goto B35;
    case 2: goto B35;
    case 3: goto B38;
    case 4: goto B35;
    case 5: goto B36;
    case 6: goto B37;
    default: goto B38;
  }
  B38:;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i0 = mp_obj_equal_not_equal(i0, i1, i2);
  p2 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B37:;
  i0 = p2;
  i0 = mp_obj_is_exception_type(i0);
  i0 = !(i0);
  if (i0) {goto B34;}
  i0 = p1;
  i1 = p2;
  i0 = mp_obj_exception_match(i0, i1);
  p2 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = p2;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B36:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i3 = p2;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B35:;
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  l1 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B33;}
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B31;}
  goto B5;
  B34:;
  i0 = 8u;
  p0 = i0;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33872u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 14u;
  l3 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 8u;
  p0 = i0;
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i0 = 0u;
  l4 = i0;
  L39: vm_checktime();
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    i0 = mp_obj_is_exception_type(i0);
    i0 = !(i0);
    if (i0) {goto B10;}
    i0 = p1;
    i1 = l2;
    i0 = mp_obj_exception_match(i0, i1);
    if (i0) {goto B32;}
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p2;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = i0 < i1;
    if (i0) {goto L39;}
    goto B2;
  B33:;
  i0 = p0;
  i1 = 35u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  l2 = i0;
  i0 = p0;
  switch (i0) {
    case 0: goto B14;
    case 1: goto B15;
    case 2: goto B0;
    case 3: goto B12;
    case 4: goto B13;
    case 5: goto B0;
    case 6: goto B0;
    case 7: goto B0;
    case 8: goto B0;
    case 9: goto B40;
    case 10: goto B25;
    case 11: goto B24;
    case 12: goto B28;
    case 13: goto B30;
    case 14: goto B23;
    case 15: goto B20;
    case 16: goto B26;
    case 17: goto B0;
    case 18: goto B21;
    case 19: goto B29;
    case 20: goto B27;
    case 21: goto B22;
    case 22: goto B40;
    case 23: goto B25;
    case 24: goto B24;
    case 25: goto B28;
    case 26: goto B30;
    case 27: goto B23;
    case 28: goto B20;
    case 29: goto B26;
    case 30: goto B0;
    case 31: goto B21;
    case 32: goto B29;
    case 33: goto B27;
    case 34: goto B22;
    case 35: goto B16;
    default: goto B14;
  }
  B40:;
  i0 = l2;
  i1 = l1;
  i0 |= i1;
  p1 = i0;
  goto B6;
  B32:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  goto Bfunc;
  B31:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 33608u;
  i0 = i0 == i1;
  if (i0) {goto B41;}
  i0 = l2;
  i1 = 23328u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = p0;
  i1 = l1;
  d1 = (f64)(s32)(i1);
  d2 = 0;
  i3 = p2;
  i0 = mp_obj_complex_binary_op(i0, d1, d2, i3);
  l3 = i0;
  if (i0) {goto B2;}
  goto B0;
  B41:;
  i0 = p0;
  i1 = l1;
  d1 = (f64)(s32)(i1);
  i2 = p2;
  i0 = mp_obj_float_binary_op(i0, d1, i2);
  l3 = i0;
  if (i0) {goto B2;}
  goto B0;
  B30:;
  i0 = p2;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B8;}
  i0 = l1;
  i1 = 31u;
  i2 = l2;
  i3 = p2;
  i4 = 63u;
  i3 = (u32)((s32)i3 > (s32)i4);
  i1 = i3 ? i1 : i2;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  p1 = i0;
  goto B6;
  B29:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l1;
  d0 = (f64)(s32)(i0);
  i1 = l2;
  d1 = (f64)(s32)(i1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  i0 = mp_obj_new_float(d0);
  p2 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B28:;
  i0 = p2;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B7;}
  i0 = l1;
  i1 = 3221225472u;
  i2 = l2;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B18;}
  i0 = p2;
  i1 = 63u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B18;}
  i0 = l1;
  i1 = 1073741823u;
  i2 = l2;
  i1 >>= (i2 & 31);
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B18;}
  i0 = l1;
  i1 = l2;
  i0 <<= (i1 & 31);
  p1 = i0;
  goto B6;
  B27:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l1;
  i1 = l2;
  i0 = mp_small_int_modulo(i0, i1);
  p1 = i0;
  goto B6;
  B26:;
  i0 = l1;
  i1 = l2;
  i0 = mp_small_int_mul_overflow(i0, i1);
  i0 = !(i0);
  if (i0) {goto B19;}
  i0 = l1;
  j0 = (u64)(s64)(s32)(i0);
  i0 = mp_obj_new_int_from_ll(j0);
  l1 = i0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p1 = i0;
  if (i0) {goto B4;}
  goto B3;
  B25:;
  i0 = l2;
  i1 = l1;
  i0 ^= i1;
  p1 = i0;
  goto B6;
  B24:;
  i0 = l2;
  i1 = l1;
  i0 &= i1;
  p1 = i0;
  goto B6;
  B23:;
  i0 = l2;
  i1 = l1;
  i0 += i1;
  p1 = i0;
  goto B6;
  B22:;
  i0 = p2;
  i1 = 0u;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B17;}
  i0 = p0;
  i1 = l1;
  d1 = (f64)(s32)(i1);
  i2 = p2;
  i0 = mp_obj_float_binary_op(i0, d1, i2);
  p2 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B21:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l1;
  i1 = l2;
  i0 = mp_small_int_floor_divide(i0, i1);
  p1 = i0;
  goto B6;
  B20:;
  i0 = l1;
  i1 = l2;
  i0 -= i1;
  p1 = i0;
  goto B6;
  B19:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 4294967294u;
  i0 &= i1;
  i1 = l2;
  i0 *= i1;
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B18:;
  i0 = l1;
  j0 = (u64)(s64)(s32)(i0);
  i0 = mp_obj_new_int_from_ll(j0);
  l1 = i0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p1 = i0;
  if (i0) {goto B4;}
  goto B3;
  B17:;
  i0 = 1u;
  p1 = i0;
  i0 = p2;
  i1 = 2u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B6;}
  i0 = l1;
  l4 = i0;
  i0 = 1u;
  p1 = i0;
  L42: vm_checktime();
    i0 = l2;
    i1 = 1u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B43;}
    i0 = p1;
    i1 = l4;
    i0 = mp_small_int_mul_overflow(i0, i1);
    if (i0) {goto B11;}
    i0 = l4;
    i1 = p1;
    i0 *= i1;
    p1 = i0;
    B43:;
    i0 = l2;
    i1 = 1u;
    i0 = i0 == i1;
    if (i0) {goto B6;}
    i0 = l4;
    i1 = l4;
    i0 = mp_small_int_mul_overflow(i0, i1);
    if (i0) {goto B11;}
    i0 = l4;
    i1 = l4;
    i0 *= i1;
    l4 = i0;
    i0 = l2;
    i1 = 1u;
    i0 >>= (i1 & 31);
    l2 = i0;
    if (i0) {goto L42;}
    goto B6;
  B16:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = 2u;
  i1 = 0u;
  i0 = mp_obj_new_tuple(i0, i1);
  p2 = i0;
  i1 = l1;
  i2 = l2;
  i1 = mp_small_int_floor_divide(i1, i2);
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = l1;
  i2 = l2;
  i1 = mp_small_int_modulo(i1, i2);
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B15:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = l1;
  i3 = l2;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B14:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = l1;
  i3 = l2;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B13:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = l1;
  i3 = l2;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B12:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = l1;
  i3 = l2;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B11:;
  i0 = l1;
  j0 = (u64)(s64)(s32)(i0);
  i0 = mp_obj_new_int_from_ll(j0);
  l1 = i0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p1 = i0;
  if (i0) {goto B4;}
  goto B3;
  B10:;
  i0 = l2;
  p2 = i0;
  goto B0;
  B9:;
  i0 = 36476u;
  i1 = 15868u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B8:;
  i0 = 14699u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B7:;
  i0 = 14699u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B6:;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  p2 = i0;
  i1 = p1;
  i0 ^= i1;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B44;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B44:;
  i0 = p1;
  j0 = (u64)(s64)(s32)(i0);
  i0 = mp_obj_new_int_from_ll(j0);
  l3 = i0;
  goto B2;
  B5:;
  i0 = 36u;
  i1 = p0;
  i2 = p0;
  i3 = 6u;
  i2 = i2 == i3;
  l2 = i2;
  i0 = i2 ? i0 : i1;
  p0 = i0;
  i0 = p2;
  i1 = p1;
  i2 = l2;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p1;
  i1 = p2;
  i2 = l2;
  i0 = i2 ? i0 : i1;
  p2 = i0;
  i0 = l1;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  B4:;
  i0 = p0;
  i1 = l1;
  i2 = p2;
  i3 = p1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 1, i3, i0, i1, i2);
  l3 = i0;
  if (i0) {goto B2;}
  B3:;
  i0 = p0;
  i1 = 36u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_getiter(i0, i1);
  p0 = i0;
  L46: vm_checktime();
    i0 = p0;
    i0 = mp_iternext(i0);
    p1 = i0;
    i0 = !(i0);
    if (i0) {goto B45;}
    i0 = p1;
    i1 = p2;
    i0 = mp_obj_equal(i0, i1);
    i0 = !(i0);
    if (i0) {goto L46;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  goto Bfunc;
  B45:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  goto Bfunc;
  B1:;
  i0 = l1;
  p1 = i0;
  B0:;
  i0 = p1;
  i0 = mp_obj_get_type_str(i0);
  p1 = i0;
  i0 = l0;
  i1 = p2;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p0;
  i2 = 43648u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 15487u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_raise_msg(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = mp_obj_new_exception(i0);
  nlr_jump(i0);
  UNREACHABLE;
  B0:;
  i0 = p0;
  i1 = p1;
  i0 = mp_obj_new_exception_msg(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static void mp_raise_ValueError(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 37436u;
  i1 = p0;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static u32 mp_getiter(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 36));
  l2 = i0;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  if (i0) {goto B6;}
  i0 = l2;
  i1 = 389u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i0 = l1;
  i1 = 36u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  B6:;
  i0 = p0;
  i1 = p1;
  i2 = l2;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32), 5, i2, i0, i1);
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  goto Bfunc;
  B5:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B4:;
  i0 = p0;
  i1 = 15u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = !(i0);
  if (i0) {goto B2;}
  goto B0;
  B3:;
  i0 = p0;
  i1 = 15u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  if (i0) {goto B0;}
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 19172u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B1:;
  i0 = 18992u;
  i1 = 17268u;
  i2 = 1172u;
  i3 = 44575u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = p1;
  if (i0) {goto B7;}
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  B7:;
  i0 = l2;
  i1 = p1;
  i0 = mp_obj_new_getitem_iter(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = g0;
  i1 = 208u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 40));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i1, i0);
  p0 = i0;
  i0 = l0;
  i1 = 208u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 25u;
  i2 = l0;
  i3 = 200u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 200));
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i0 = nlr_push_tail(i0);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i0 = setjmp_ex(i0);
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35996u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 208u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B4:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 204));
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 200));
  l1 = i0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i1 = p0;
  i2 = 0u;
  i1 = i1 != i2;
  i2 = 0u;
  i3 = l0;
  i4 = 200u;
  i3 += i4;
  i4 = 4294967292u;
  i5 = 0u;
  i6 = p0;
  i4 = i6 ? i4 : i5;
  i3 += i4;
  i4 = 8u;
  i3 += i4;
  i4 = l2;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  p0 = i0;
  nlr_pop();
  i0 = l0;
  i1 = 208u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B3:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 19391u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B2:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  nlr_jump(i0);
  UNREACHABLE;
  B1:;
  i0 = l0;
  i1 = l1;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 37376u;
  i1 = 16357u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_load_method_maybe(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l0 = i0;
  i0 = p1;
  i1 = 25u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 10u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 26480u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = l1;
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
  goto Bfunc;
  B2:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 56));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 31652u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = i32_load16_u((&M0), (u64)(i0 + 4));
  l2 = i0;
  i1 = 32u;
  i0 &= i1;
  if (i0) {goto B8;}
  i0 = l1;
  i1 = 32368u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = l1;
  i1 = 32504u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l0 = i0;
  B9:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B8:;
  i0 = l2;
  i1 = 64u;
  i0 &= i1;
  if (i0) {goto B10;}
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B10:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 379u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = p0;
  if (i0) {goto B6;}
  i0 = l0;
  i1 = 32172u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = 12u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 34056u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B7:;
  i0 = p2;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B6:;
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B5:;
  i0 = 18295u;
  i1 = 17268u;
  i2 = 1102u;
  i3 = 44554u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B4:;
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  B3:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_call_function_0(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 0u;
  i2 = 0u;
  i3 = 0u;
  i4 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 16357u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_call_function_n_kw(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i4 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 16357u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_call_function_1(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 1u;
  i2 = 0u;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i4 = p1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 16357u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_call_method_n_kw(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l2;
  i1 = l1;
  i2 = 0u;
  i1 = i1 != i2;
  i2 = p0;
  i1 += i2;
  i2 = p1;
  i3 = p2;
  i4 = 4294967292u;
  i5 = 0u;
  i6 = l1;
  i4 = i6 ? i4 : i5;
  i3 += i4;
  i4 = 8u;
  i3 += i4;
  i4 = l3;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  p2 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = l2;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 16357u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_call_method_n_kw_var(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6, i7;
  i0 = g0;
  i1 = 144u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  goto B0;
  B1:;
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i0 = 0u;
  p0 = i0;
  B0:;
  i0 = l3;
  i1 = p1;
  i2 = 8u;
  i1 >>= (i2 & 31);
  i2 = 255u;
  i1 &= i2;
  l4 = i1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l5 = i1;
  i2 = p1;
  i3 = 255u;
  i2 &= i3;
  l6 = i2;
  i1 += i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l7 = i0;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = l7;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B13;}
  i0 = l7;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 31652u;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  B13:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B11;}
  goto B10;
  B12:;
  i0 = l7;
  i0 = mp_obj_dict_len(i0);
  l2 = i0;
  i0 = p2;
  if (i0) {goto B10;}
  B11:;
  i0 = 1u;
  p2 = i0;
  i0 = l6;
  i1 = l2;
  i2 = l4;
  i1 += i2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i0 = mp_pystack_alloc(i0);
  p1 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B15;}
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto B14;
  B15:;
  i0 = 0u;
  p2 = i0;
  B14:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = l3;
  i2 = l6;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p2;
  i1 = l6;
  i0 += i1;
  l9 = i0;
  goto B9;
  B10:;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B17;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 33872u;
  i0 = i0 == i1;
  if (i0) {goto B16;}
  i0 = p1;
  i1 = 24420u;
  i0 = i0 == i1;
  if (i0) {goto B16;}
  B17:;
  i0 = 1u;
  l8 = i0;
  i0 = l6;
  i1 = l2;
  i2 = l4;
  i1 += i2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i0 = mp_pystack_alloc(i0);
  p1 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B19;}
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto B18;
  B19:;
  i0 = 0u;
  l8 = i0;
  B18:;
  i0 = p1;
  i1 = l8;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = l3;
  i2 = l6;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l8;
  i1 = l6;
  i0 += i1;
  l9 = i0;
  i0 = p2;
  i1 = l0;
  i2 = 120u;
  i1 += i2;
  i0 = mp_getiter(i0, i1);
  l10 = i0;
  i0 = mp_iternext(i0);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p1;
  i1 = l8;
  i2 = l6;
  i1 += i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p2 = i0;
  L20: vm_checktime();
    i0 = l9;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto B21;}
    i0 = 0u;
    i0 = i32_load((&M0), (u64)(i0 + 5168));
    i1 = p1;
    i0 = i0 > i1;
    if (i0) {goto B8;}
    i0 = 0u;
    i0 = i32_load((&M0), (u64)(i0 + 5176));
    i1 = p1;
    i0 = i0 < i1;
    if (i0) {goto B7;}
    i0 = l2;
    i1 = 3u;
    i0 <<= (i1 & 31);
    l8 = i0;
    i0 = l2;
    i1 = 1u;
    i0 <<= (i1 & 31);
    l2 = i0;
    i0 = 0u;
    i1 = p1;
    i32_store((&M0), (u64)(i0 + 5176), i1);
    i0 = l8;
    i0 = mp_pystack_alloc(i0);
    B21:;
    i0 = p2;
    i1 = p0;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = l9;
    i1 = 1u;
    i0 += i1;
    l9 = i0;
    i0 = l10;
    i0 = mp_iternext(i0);
    p0 = i0;
    if (i0) {goto L20;}
    goto B9;
  B16:;
  i0 = p2;
  i1 = l0;
  i2 = 120u;
  i1 += i2;
  i2 = l0;
  i3 = 140u;
  i2 += i3;
  mp_obj_get_array(i0, i1, i2);
  i0 = 1u;
  p2 = i0;
  i0 = l6;
  i1 = l2;
  i2 = l4;
  i1 += i2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 120));
  i0 += i1;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i0 = mp_pystack_alloc(i0);
  p1 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B23;}
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto B22;
  B23:;
  i0 = 0u;
  p2 = i0;
  B22:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p0 = i0;
  i1 = l3;
  i2 = l6;
  i3 = 2u;
  i2 <<= (i3 & 31);
  l9 = i2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = l9;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 140));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 120));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p2;
  i1 = l6;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 120));
  i0 += i1;
  l9 = i0;
  B9:;
  i0 = p1;
  i1 = l9;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = l3;
  i2 = l6;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i2 = l4;
  i3 = 3u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l9;
  i1 = l5;
  i0 += i1;
  p0 = i0;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l7;
  i1 = 3u;
  i0 &= i1;
  l11 = i0;
  i0 = !(i0);
  if (i0) {goto B31;}
  i0 = l7;
  i1 = 106u;
  i2 = l0;
  i3 = 120u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i1 = 120u;
  i0 += i1;
  l12 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 120));
  p2 = i0;
  if (i0) {goto B30;}
  i0 = l7;
  i0 = mp_obj_get_type_str(i0);
  p2 = i0;
  i0 = l0;
  i1 = 106u;
  i32_store((&M0), (u64)(i0 + 116), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = 36596u;
  i1 = 18765u;
  i2 = l0;
  i3 = 112u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B31:;
  i0 = l7;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 31652u;
  i0 = i0 == i1;
  if (i0) {goto B29;}
  i0 = l7;
  i1 = 106u;
  i2 = l0;
  i3 = 120u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i1 = 120u;
  i0 += i1;
  l12 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 120));
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  B30:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 124));
  l10 = i0;
  i0 = p2;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l8 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p2;
  i1 = l10;
  i2 = 0u;
  i1 = i1 != i2;
  i2 = 0u;
  i3 = l0;
  i4 = 120u;
  i3 += i4;
  i4 = 8u;
  i3 += i4;
  l3 = i3;
  i4 = 4294967292u;
  i5 = 0u;
  i6 = l10;
  i4 = i6 ? i4 : i5;
  i3 += i4;
  i4 = l8;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  l13 = i0;
  i0 = mp_iternext(i0);
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l4;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = l9;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l10 = i0;
  i0 = l0;
  i1 = 120u;
  i0 += i1;
  i1 = 4u;
  i0 += i1;
  l14 = i0;
  L32: vm_checktime();
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto B35;}
    i0 = 0u;
    i0 = i32_load((&M0), (u64)(i0 + 5168));
    i1 = p1;
    i0 = i0 > i1;
    if (i0) {goto B25;}
    i0 = 0u;
    i0 = i32_load((&M0), (u64)(i0 + 5176));
    i1 = p1;
    i0 = i0 < i1;
    if (i0) {goto B24;}
    i0 = 0u;
    i1 = p1;
    i32_store((&M0), (u64)(i0 + 5176), i1);
    i0 = l2;
    i1 = 1u;
    i0 <<= (i1 & 31);
    l2 = i0;
    i1 = 4u;
    i2 = l2;
    i3 = 4u;
    i2 = i2 > i3;
    i0 = i2 ? i0 : i1;
    l2 = i0;
    i1 = 2u;
    i0 <<= (i1 & 31);
    i0 = mp_pystack_alloc(i0);
    i0 = p2;
    i1 = 7u;
    i0 &= i1;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B34;}
    goto B33;
    B35:;
    i0 = p2;
    i1 = 7u;
    i0 &= i1;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B33;}
    B34:;
    i0 = p2;
    i0 = mp_obj_str_intern_checked(i0);
    p2 = i0;
    B33:;
    i0 = l7;
    i1 = 15u;
    i2 = l12;
    mp_load_method_maybe(i0, i1, i2);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 120));
    l8 = i0;
    i0 = !(i0);
    if (i0) {goto B28;}
    i0 = l3;
    i1 = p2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l14;
    i0 = i32_load((&M0), (u64)(i0));
    l6 = i0;
    i0 = l8;
    i0 = mp_obj_get_type(i0);
    i0 = i32_load((&M0), (u64)(i0 + 16));
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B27;}
    i0 = p1;
    i1 = l10;
    i0 += i1;
    l5 = i0;
    i1 = 4u;
    i0 += i1;
    i1 = l8;
    i2 = 2u;
    i3 = 1u;
    i4 = l6;
    i2 = i4 ? i2 : i3;
    i3 = 0u;
    i4 = l3;
    i5 = 4294967292u;
    i6 = 0u;
    i7 = l6;
    i5 = i7 ? i5 : i6;
    i4 += i5;
    i5 = l4;
    i1 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i5, i1, i2, i3, i4);
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    i1 = p2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l10;
    i1 = 8u;
    i0 += i1;
    l10 = i0;
    i0 = p0;
    i1 = 2u;
    i0 += i1;
    p0 = i0;
    i0 = l13;
    i0 = mp_iternext(i0);
    p2 = i0;
    if (i0) {goto L32;}
    goto B2;
  B29:;
  i0 = l7;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = 1073741822u;
  i0 &= i1;
  i1 = p0;
  i0 += i1;
  i1 = l2;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = l7;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 0u;
  l2 = i0;
  i0 = l7;
  i1 = 12u;
  i0 += i1;
  l8 = i0;
  i0 = 4u;
  p2 = i0;
  L36: vm_checktime();
    i0 = l8;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p2;
    i0 += i1;
    i1 = 4294967292u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l10 = i0;
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 == i1;
    if (i0) {goto B37;}
    i0 = l10;
    i1 = 7u;
    i0 &= i1;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B38;}
    i0 = l10;
    i0 = mp_obj_str_intern_checked(i0);
    l10 = i0;
    i0 = l7;
    i1 = 8u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l6 = i0;
    B38:;
    i0 = p1;
    i1 = p0;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l3 = i0;
    i1 = l10;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    i1 = l8;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = p2;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 2u;
    i0 += i1;
    p0 = i0;
    B37:;
    i0 = p2;
    i1 = 8u;
    i0 += i1;
    p2 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l6;
    i0 = i0 < i1;
    if (i0) {goto L36;}
    goto B2;
  B28:;
  i0 = l11;
  if (i0) {goto B26;}
  i0 = l7;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32308u;
  i0 = i0 != i1;
  if (i0) {goto B26;}
  i0 = l7;
  i0 = i32_load16_u((&M0), (u64)(i0 + 6));
  p2 = i0;
  i0 = l0;
  i1 = 15u;
  i32_store((&M0), (u64)(i0 + 68), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 64), i1);
  i0 = 36596u;
  i1 = 18591u;
  i2 = l0;
  i3 = 64u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B27:;
  i0 = l0;
  i1 = l8;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 96), i1);
  i0 = 37376u;
  i1 = 16357u;
  i2 = l0;
  i3 = 96u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B26:;
  i0 = l7;
  i0 = mp_obj_get_type_str(i0);
  p2 = i0;
  i0 = l0;
  i1 = 15u;
  i32_store((&M0), (u64)(i0 + 84), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 80), i1);
  i0 = 36596u;
  i1 = 18765u;
  i2 = l0;
  i3 = 80u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B25:;
  i0 = 20766u;
  i1 = 43838u;
  i2 = 44u;
  i3 = 42367u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B24:;
  i0 = 21035u;
  i1 = 43838u;
  i2 = 45u;
  i3 = 42367u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B8:;
  i0 = 20766u;
  i1 = 43838u;
  i2 = 44u;
  i3 = 42367u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B7:;
  i0 = 21035u;
  i1 = 43838u;
  i2 = 45u;
  i3 = 42367u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B6:;
  i0 = l0;
  i1 = p2;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 48), i1);
  i0 = 37376u;
  i1 = 16357u;
  i2 = l0;
  i3 = 48u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B5:;
  i0 = l7;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32308u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = l7;
  i0 = i32_load16_u((&M0), (u64)(i0 + 6));
  p2 = i0;
  i0 = l0;
  i1 = 106u;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 36596u;
  i1 = 18591u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B4:;
  i0 = 20616u;
  i1 = 17268u;
  i2 = 783u;
  i3 = 44596u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B3:;
  i0 = l7;
  i0 = mp_obj_get_type_str(i0);
  p2 = i0;
  i0 = l0;
  i1 = 106u;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = 36596u;
  i1 = 18765u;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B2:;
  i0 = l1;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B41;}
  i0 = l1;
  i1 = l9;
  i2 = p0;
  i3 = l9;
  i2 -= i3;
  i3 = 1u;
  i2 >>= (i3 & 31);
  i3 = p1;
  i4 = p2;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  p2 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5168));
  i1 = p1;
  i0 = i0 > i1;
  if (i0) {goto B40;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5176));
  i1 = p1;
  i0 = i0 < i1;
  if (i0) {goto B39;}
  i0 = 0u;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 5176), i1);
  i0 = l0;
  i1 = 144u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B41:;
  i0 = l0;
  i1 = l1;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 16357u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B40:;
  i0 = 20766u;
  i1 = 43838u;
  i2 = 44u;
  i3 = 42367u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B39:;
  i0 = 21035u;
  i1 = 43838u;
  i2 = 45u;
  i3 = 42367u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_unpack_sequence(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 33872u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 24420u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  B5:;
  i0 = p0;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i0 = mp_getiter(i0, i1);
  l2 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = l2;
  i0 = mp_iternext(i0);
  l1 = i0;
  i0 = !(i0);
  p0 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p1;
  i1 = 4294967295u;
  i0 += i1;
  l3 = i0;
  L7: vm_checktime();
    i0 = p0;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B3;}
    i0 = p2;
    i1 = l3;
    i2 = l0;
    i2 = i32_load((&M0), (u64)(i2 + 44));
    p0 = i2;
    i1 -= i2;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = l1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = p0;
    i2 = 1u;
    i1 += i2;
    l4 = i1;
    i32_store((&M0), (u64)(i0 + 44), i1);
    i0 = l2;
    i0 = mp_iternext(i0);
    l1 = i0;
    i0 = !(i0);
    p0 = i0;
    i0 = l4;
    i1 = p1;
    i0 = i0 < i1;
    if (i0) {goto L7;}
  B6:;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  goto B0;
  B4:;
  i0 = p0;
  i1 = l0;
  i2 = 44u;
  i1 += i2;
  i2 = l0;
  i3 = 24u;
  i2 += i3;
  mp_obj_get_array(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 44));
  p0 = i0;
  i1 = p1;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = p1;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = p1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967292u;
  i0 += i1;
  p0 = i0;
  L8: vm_checktime();
    i0 = p2;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = p0;
    i1 = 4294967292u;
    i0 += i1;
    p0 = i0;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    if (i0) {goto L8;}
    goto B0;
  B3:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 44));
  p0 = i0;
  B2:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37436u;
  i1 = 17625u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B1:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 37436u;
  i1 = 18083u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void mp_unpack_ex(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 255u;
  i0 &= i1;
  l1 = i0;
  i0 = p1;
  i1 = 8u;
  i0 >>= (i1 & 31);
  i1 = 255u;
  i0 &= i1;
  l2 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 33872u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 24420u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  l3 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 0u;
  p0 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p2;
  i1 = l1;
  i2 = l2;
  i1 += i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  i0 = 0u;
  p0 = i0;
  L4: vm_checktime();
    i0 = l3;
    i0 = mp_iternext(i0);
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p1;
    i1 = l4;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = p0;
    i2 = 1u;
    i1 += i2;
    p0 = i1;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = p1;
    i1 = 4294967292u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L4;}
  B3:;
  i0 = 0u;
  i1 = 0u;
  i0 = mp_obj_new_list(i0, i1);
  l4 = i0;
  i0 = l3;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  L6: vm_checktime();
    i0 = l4;
    i1 = p1;
    i0 = mp_obj_list_append(i0, i1);
    i0 = l3;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L6;}
  B5:;
  i0 = l4;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i1 = l2;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = l2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  p0 = i1;
  i0 += i1;
  i1 = l4;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = l3;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = p0;
  i0 -= i1;
  p1 = i0;
  i0 = l3;
  i1 = l2;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 12u;
  i0 += i1;
  l3 = i0;
  L9: vm_checktime();
    i0 = p2;
    i1 = p0;
    i0 += i1;
    i1 = 4294967292u;
    i0 += i1;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = p1;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4294967292u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L9;}
    goto B7;
  B8:;
  i0 = l3;
  i1 = l2;
  i0 -= i1;
  l1 = i0;
  B7:;
  i0 = l4;
  i1 = l1;
  mp_obj_list_set_len(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = l0;
  i3 = 4u;
  i2 += i3;
  mp_obj_get_array(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i1 = l2;
  i2 = l1;
  i1 += i2;
  l5 = i1;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l6 = i0;
  i1 = p0;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967292u;
  i0 += i1;
  p1 = i0;
  i0 = l2;
  l4 = i0;
  i0 = p2;
  l3 = i0;
  L12: vm_checktime();
    i0 = l3;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l3 = i0;
    i0 = p1;
    i1 = 4294967292u;
    i0 += i1;
    p1 = i0;
    i0 = l4;
    i1 = 4294967295u;
    i0 += i1;
    l4 = i0;
    if (i0) {goto L12;}
    goto B10;
  B11:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l6 = i0;
  B10:;
  i0 = p2;
  i1 = l2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  i1 = p0;
  i2 = l5;
  i1 -= i2;
  i2 = l6;
  i3 = l1;
  i4 = 2u;
  i3 <<= (i4 & 31);
  p0 = i3;
  i2 += i3;
  i1 = mp_obj_new_list(i1, i2);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l3 = i0;
  L14: vm_checktime();
    i0 = p1;
    i1 = l3;
    i2 = p0;
    i1 += i2;
    i2 = 4294967292u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4294967292u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L14;}
  B13:;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37436u;
  i1 = 17625u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_load_attr(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i3 = 24u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i1 = p0;
  i0 = mp_obj_new_bound_meth(i0, i1);
  l1 = i0;
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32308u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load16_u((&M0), (u64)(i0 + 6));
  l1 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 36596u;
  i1 = 18591u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B2:;
  i0 = p0;
  i0 = mp_obj_get_type_str(i0);
  l1 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 36596u;
  i1 = 18765u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_load_method(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  mp_load_method_maybe(i0, i1, i2);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32308u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load16_u((&M0), (u64)(i0 + 6));
  p2 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 36596u;
  i1 = 18591u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B1:;
  i0 = p0;
  i0 = mp_obj_get_type_str(i0);
  p2 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 36596u;
  i1 = 18765u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_convert_member_lookup(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = i32_load16_u((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 32u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 32368u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 32504u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  p1 = i0;
  B4:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p2 = i0;
  i0 = p3;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p3;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B3:;
  i0 = l1;
  i1 = 64u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 379u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 32172u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = 12u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 34056u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B2:;
  i0 = p3;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = p3;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p3;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = p3;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_load_method_protected(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 176u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i0 = nlr_push_tail(i0);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = setjmp_ex(i0);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p3;
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36596u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  B2:;
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  mp_load_method_maybe(i0, i1, i2);
  nlr_pop();
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_store_attr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 28));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 4u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i3 = l1;
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 7, i3, i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i0 = mp_obj_get_type_str(i0);
  p0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 36596u;
  i1 = 18765u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_iternext_allow_raise(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 40));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i1, i0);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 25u;
  i2 = l0;
  i3 = 24u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  p0 = i0;
  i0 = l1;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i1 = p0;
  i2 = 0u;
  i1 = i1 != i2;
  i2 = 0u;
  i3 = l0;
  i4 = 24u;
  i3 += i4;
  i4 = 4294967292u;
  i5 = 0u;
  i6 = p0;
  i4 = i6 ? i4 : i5;
  i3 += i4;
  i4 = 8u;
  i3 += i4;
  i4 = l2;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 19391u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B1:;
  i0 = l0;
  i1 = l1;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 37376u;
  i1 = 16357u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_resume(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = g0;
  i1 = 112u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 0u;
  i0 = i0 != i1;
  i1 = p2;
  i2 = 0u;
  i1 = i1 != i2;
  i0 ^= i1;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i1 = 23524u;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  i0 = p1;
  i1 = 6u;
  i0 = i0 != i1;
  l2 = i0;
  if (i0) {goto B11;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = p3;
  i1 = p0;
  i2 = l1;
  i1 = CALL_INDIRECT(T0, u32 (*)(u32), 3, i2, i1);
  p1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 112u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 0u;
  i0 = i0 != i1;
  goto Bfunc;
  B12:;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i0 = mp_obj_gen_resume(i0, i1, i2, i3);
  p1 = i0;
  i0 = l0;
  i1 = 112u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B11:;
  i0 = l2;
  if (i0) {goto B8;}
  i0 = p0;
  i1 = 25u;
  i2 = l0;
  i3 = 100u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 100));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 104));
  p1 = i0;
  i0 = l1;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l1;
  i1 = p1;
  i2 = 0u;
  i1 = i1 != i2;
  i2 = 0u;
  i3 = l0;
  i4 = 100u;
  i3 += i4;
  i4 = 4294967292u;
  i5 = 0u;
  i6 = p1;
  i4 = i6 ? i4 : i5;
  i3 += i4;
  i4 = 8u;
  i3 += i4;
  i4 = p2;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  p2 = i0;
  i0 = 1u;
  p1 = i0;
  goto B7;
  B10:;
  i0 = 19540u;
  i1 = 17268u;
  i2 = 1278u;
  i3 = 44586u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B9:;
  i0 = l0;
  i1 = l1;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 96), i1);
  i0 = 37376u;
  i1 = 16357u;
  i2 = l0;
  i3 = 96u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B8:;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = p0;
  i1 = 138u;
  i2 = l0;
  i3 = 100u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 100));
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 108), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 104));
  p0 = i0;
  i0 = p2;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = 1u;
  p1 = i0;
  i0 = p2;
  i1 = 2u;
  i2 = 1u;
  i3 = p0;
  i1 = i3 ? i1 : i2;
  i2 = 0u;
  i3 = l0;
  i4 = 108u;
  i3 += i4;
  i4 = 4294967292u;
  i5 = 0u;
  i6 = p0;
  i4 = i6 ? i4 : i5;
  i3 += i4;
  i4 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  p2 = i0;
  goto B7;
  B13:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p2;
  i0 = mp_obj_get_type(i0);
  i1 = 36236u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  i0 = !(i0);
  if (i0) {goto B15;}
  i0 = p0;
  i1 = 71u;
  i2 = l0;
  i3 = 100u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 100));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 104));
  p2 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 0u;
  p1 = i0;
  i0 = p0;
  i1 = p2;
  i2 = 0u;
  i1 = i1 != i2;
  i2 = 0u;
  i3 = l0;
  i4 = 100u;
  i3 += i4;
  i4 = 4294967292u;
  i5 = 0u;
  i6 = p2;
  i4 = i6 ? i4 : i5;
  i3 += i4;
  i4 = 8u;
  i3 += i4;
  i4 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  p2 = i0;
  goto B7;
  B15:;
  i0 = p0;
  i1 = 155u;
  i2 = l0;
  i3 = 100u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 100));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 108), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 104));
  p2 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 1u;
  p1 = i0;
  i0 = p0;
  i1 = 2u;
  i2 = 1u;
  i3 = p2;
  i1 = i3 ? i1 : i2;
  i2 = 0u;
  i3 = l0;
  i4 = 108u;
  i3 += i4;
  i4 = 4294967292u;
  i5 = 0u;
  i6 = p2;
  i4 = i6 ? i4 : i5;
  i3 += i4;
  i4 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  p2 = i0;
  goto B7;
  B14:;
  i0 = p2;
  i1 = 35996u;
  i0 = mp_obj_exception_match(i0, i1);
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = 37136u;
  i1 = 19915u;
  i0 = mp_obj_new_exception_msg(i0, i1);
  p2 = i0;
  i0 = 2u;
  p1 = i0;
  goto B7;
  B16:;
  i0 = p2;
  i0 = mp_obj_is_exception_type(i0);
  i0 = !(i0);
  if (i0) {goto B17;}
  i0 = p2;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 0u;
  i2 = 0u;
  i3 = 0u;
  i4 = p1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  p2 = i0;
  i0 = 2u;
  p1 = i0;
  goto B7;
  B17:;
  i0 = 2u;
  p1 = i0;
  i0 = p2;
  i0 = mp_obj_is_exception_instance(i0);
  if (i0) {goto B7;}
  i0 = 37376u;
  i1 = 20065u;
  i0 = mp_obj_new_exception_msg(i0, i1);
  p2 = i0;
  B7:;
  i0 = p3;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 112u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B6:;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32308u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load16_u((&M0), (u64)(i0 + 6));
  p1 = i0;
  i0 = l0;
  i1 = 138u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 36596u;
  i1 = 18591u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B5:;
  i0 = l0;
  i1 = p2;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = 37376u;
  i1 = 16357u;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B4:;
  i0 = p0;
  i0 = mp_obj_get_type_str(i0);
  p1 = i0;
  i0 = l0;
  i1 = 138u;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 36596u;
  i1 = 18765u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B3:;
  i0 = 19769u;
  i1 = 17268u;
  i2 = 1317u;
  i3 = 44586u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 64), i1);
  i0 = 37376u;
  i1 = 16357u;
  i2 = l0;
  i3 = 64u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B1:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 80), i1);
  i0 = 37376u;
  i1 = 16357u;
  i2 = l0;
  i3 = 80u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = p2;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 48), i1);
  i0 = 37376u;
  i1 = 16357u;
  i2 = l0;
  i3 = 48u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_make_raise_obj(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_is_exception_type(i0);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 0u;
  i2 = 0u;
  i3 = 0u;
  i4 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i0 = mp_obj_is_exception_instance(i0);
  if (i0) {goto B2;}
  i0 = 37376u;
  i1 = 20065u;
  i0 = mp_obj_new_exception_msg(i0, i1);
  p0 = i0;
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 16357u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_import_name(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 25769803782ull;
  i64_store((&M0), (u64)(i0 + 20), j1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l0;
  i1 = p0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5304));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = 1450u;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 5u;
  i2 = 0u;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = p2;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = 5u;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_builtin___import__(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 16357u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_import_from(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B3:;
  i0 = p0;
  i0 = mp_obj_is_package(i0);
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 23u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i1 = qstr_len(i1);
  i0 += i1;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  i0 = mp_pystack_alloc(i0);
  p0 = i0;
  i1 = l1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 += i1;
  i1 = 46u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 += i1;
  i1 = 1u;
  i0 += i1;
  i1 = p1;
  i1 = qstr_str(i1);
  i2 = p1;
  i2 = qstr_len(i2);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = l2;
  i0 = qstr_from_strn(i0, i1);
  p1 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5168));
  i1 = p0;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5176));
  i1 = p0;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5176), i1);
  i0 = p1;
  i1 = 30u;
  i2 = 1u;
  i0 = mp_import_name(i0, i1, i2);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 36716u;
  i1 = 20250u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B1:;
  i0 = 20766u;
  i1 = 43838u;
  i2 = 44u;
  i3 = 42367u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = 21035u;
  i1 = 43838u;
  i2 = 45u;
  i3 = 42367u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_import_all(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i1 = 8u;
  i0 += i1;
  l0 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l2 = i0;
  i0 = 0u;
  p0 = i0;
  i0 = 0u;
  l3 = i0;
  L2: vm_checktime();
    i0 = l1;
    i1 = l3;
    i0 = i0 <= i1;
    if (i0) {goto B0;}
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p0;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 == i1;
    if (i0) {goto B3;}
    i0 = l1;
    i0 = mp_obj_str_get_str(i0);
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 95u;
    i0 = i0 == i1;
    if (i0) {goto B3;}
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p0;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = mp_obj_str_get_qstr(i0);
    l1 = i0;
    i0 = 0u;
    i0 = i32_load((&M0), (u64)(i0 + 5180));
    i1 = l1;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i2 = 2u;
    i1 |= i2;
    i2 = l2;
    i2 = i32_load((&M0), (u64)(i2));
    i3 = p0;
    i2 += i3;
    i3 = 4u;
    i2 += i3;
    i2 = i32_load((&M0), (u64)(i2));
    i0 = mp_obj_dict_store(i0, i1, i2);
    B3:;
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    p0 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1));
    l1 = i1;
    i0 = i0 < i1;
    if (i0) {goto L2;}
  B1:;
  goto Bfunc;
  B0:;
  i0 = 21308u;
  i1 = 21507u;
  i2 = 427u;
  i3 = 42669u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void m_malloc_fail(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 36956u;
  i1 = 20387u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static void mp_raise_TypeError(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 37376u;
  i1 = p0;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static void mp_raise_OSError(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 37076u;
  i1 = p0;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 1u;
  i1 |= i2;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static void mp_raise_NotImplementedError(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 37196u;
  i1 = p0;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static u32 checked_fun_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i4 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 8, i4, i0, i1, i2, i3);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 37376u;
  i1 = 16357u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B0:;
  i0 = 21193u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 m_malloc(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = malloc_0(i0);
  l0 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = p0;
  m_malloc_fail(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 m_malloc_maybe(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = malloc_0(i0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 m_malloc0(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = malloc_0(i0);
  l0 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 0u;
  i2 = p0;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = p0;
  m_malloc_fail(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 m_realloc(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  i0 = realloc_0(i0, i1);
  p0 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = p1;
  m_malloc_fail(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 m_realloc_maybe(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  l0 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i0 = realloc_0(i0, i1);
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void m_free(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  free_0(i0);
  FUNC_EPILOGUE;
}

static u32 qstr_compute_hash(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i0 += i1;
  l0 = i0;
  i0 = 5381u;
  p1 = i0;
  L1: vm_checktime();
    i0 = p1;
    i1 = 33u;
    i0 *= i1;
    i1 = p0;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i0 ^= i1;
    p1 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L1;}
  i0 = p1;
  i1 = 65535u;
  i0 &= i1;
  p0 = i0;
  i1 = p0;
  i1 = !(i1);
  i0 += i1;
  goto Bfunc;
  B0:;
  i0 = 5381u;
  i1 = 5381u;
  i1 = !(i1);
  i0 += i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void qstr_init(void) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 37624u;
  i32_store((&M0), (u64)(i0 + 5192), i1);
  i0 = 0u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 5344), i1);
  FUNC_EPILOGUE;
}

static u32 qstr_find_strn(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B3;}
  i0 = p0;
  i1 = p1;
  i0 += i1;
  l0 = i0;
  i0 = 5381u;
  l1 = i0;
  i0 = p0;
  l2 = i0;
  L4: vm_checktime();
    i0 = l1;
    i1 = 33u;
    i0 *= i1;
    i1 = l2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i0 ^= i1;
    l1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L4;}
  i0 = l1;
  i1 = 65535u;
  i0 &= i1;
  l2 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5192));
  l4 = i0;
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = 5381u;
  l2 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5192));
  l4 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  i0 = l2;
  i1 = l2;
  i1 = !(i1);
  i0 += i1;
  l5 = i0;
  L5: vm_checktime();
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    l2 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B6;}
    i0 = l4;
    i1 = 16u;
    i0 += i1;
    l6 = i0;
    i1 = l2;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l0 = i0;
    i0 = l6;
    l2 = i0;
    L7: vm_checktime();
      i0 = l2;
      i0 = i32_load((&M0), (u64)(i0));
      l1 = i0;
      i0 = i32_load8_u((&M0), (u64)(i0 + 1));
      i1 = 8u;
      i0 <<= (i1 & 31);
      i1 = l1;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i0 |= i1;
      i1 = l5;
      i0 = i0 != i1;
      if (i0) {goto B8;}
      i0 = l1;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      i1 = p1;
      i0 = i0 != i1;
      if (i0) {goto B8;}
      i0 = l1;
      i1 = 3u;
      i0 += i1;
      i1 = p0;
      i2 = p1;
      i0 = memcmp_0(i0, i1, i2);
      i0 = !(i0);
      if (i0) {goto B0;}
      B8:;
      i0 = l2;
      i1 = 4u;
      i0 += i1;
      l2 = i0;
      i1 = l0;
      i0 = i0 < i1;
      if (i0) {goto L7;}
    B6:;
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto L5;}
  B1:;
  i0 = l3;
  goto Bfunc;
  B0:;
  i0 = l4;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l2;
  i2 = l6;
  i1 -= i2;
  i2 = 2u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i0 += i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 qstr_from_str(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p0;
  i1 = strlen_0(i1);
  i0 = qstr_from_strn(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static u32 qstr_from_strn(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i1 = p1;
  i0 += i1;
  l0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = 5381u;
  l1 = i0;
  i0 = p0;
  l2 = i0;
  L3: vm_checktime();
    i0 = l1;
    i1 = 33u;
    i0 *= i1;
    i1 = l2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i0 ^= i1;
    l1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L3;}
  i0 = l1;
  i1 = 65535u;
  i0 &= i1;
  l2 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5192));
  l3 = i0;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = 5381u;
  l2 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5192));
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l2;
  i1 = l2;
  i1 = !(i1);
  i0 += i1;
  l4 = i0;
  L5: vm_checktime();
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    l2 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B6;}
    i0 = l3;
    i1 = 16u;
    i0 += i1;
    l5 = i0;
    i1 = l2;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l6 = i0;
    i0 = l5;
    l2 = i0;
    L7: vm_checktime();
      i0 = l2;
      i0 = i32_load((&M0), (u64)(i0));
      l1 = i0;
      i0 = i32_load8_u((&M0), (u64)(i0 + 1));
      i1 = 8u;
      i0 <<= (i1 & 31);
      i1 = l1;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i0 |= i1;
      i1 = l4;
      i0 = i0 != i1;
      if (i0) {goto B8;}
      i0 = l1;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      i1 = p1;
      i0 = i0 != i1;
      if (i0) {goto B8;}
      i0 = l1;
      i1 = 3u;
      i0 += i1;
      i1 = p0;
      i2 = p1;
      i0 = memcmp_0(i0, i1, i2);
      i0 = !(i0);
      if (i0) {goto B4;}
      B8:;
      i0 = l2;
      i1 = 4u;
      i0 += i1;
      l2 = i0;
      i1 = l6;
      i0 = i0 < i1;
      if (i0) {goto L7;}
    B6:;
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    if (i0) {goto L5;}
    goto B0;
  B4:;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l2;
  i2 = l5;
  i1 -= i2;
  i2 = 2u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i0 += i1;
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l2;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = 256u;
  i0 = i0 >= i1;
  if (i0) {goto B11;}
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5344));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5352));
  i1 = l2;
  i0 += i1;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5348));
  l6 = i1;
  i0 = i0 <= i1;
  if (i0) {goto B15;}
  i0 = l1;
  i1 = l6;
  i2 = l2;
  i1 += i2;
  i2 = 0u;
  i0 = m_realloc_maybe(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = 0u;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5348));
  i2 = l2;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 5348), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5344));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B13;}
  B15:;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5352));
  l6 = i0;
  goto B12;
  B14:;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5344));
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5352));
  i2 = 0u;
  i0 = m_realloc_maybe(i0, i1, i2);
  i0 = 0u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 5344), i1);
  B13:;
  i0 = 0u;
  i1 = l2;
  i2 = 128u;
  i3 = l2;
  i4 = 128u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  l4 = i1;
  i1 = m_malloc_maybe(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 5344), i1);
  i0 = l1;
  if (i0) {goto B16;}
  i0 = 0u;
  i1 = l2;
  i1 = m_malloc_maybe(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 5344), i1);
  i0 = l2;
  l4 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B9;}
  B16:;
  i0 = 0u;
  l6 = i0;
  i0 = 0u;
  i1 = l4;
  i32_store((&M0), (u64)(i0 + 5348), i1);
  i0 = 0u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 5352), i1);
  B12:;
  i0 = p1;
  i1 = 3u;
  i0 += i1;
  l4 = i0;
  i0 = 0u;
  i1 = l6;
  i2 = l2;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 5352), i1);
  i0 = l1;
  i1 = l6;
  i0 += i1;
  l6 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B18;}
  i0 = 5381u;
  l1 = i0;
  i0 = p0;
  l2 = i0;
  L19: vm_checktime();
    i0 = l1;
    i1 = 33u;
    i0 *= i1;
    i1 = l2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i0 ^= i1;
    l1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L19;}
  i0 = l1;
  i1 = 65535u;
  i0 &= i1;
  l2 = i0;
  goto B17;
  B18:;
  i0 = 5381u;
  l2 = i0;
  B17:;
  i0 = l6;
  i1 = p1;
  i32_store8((&M0), (u64)(i0 + 2), i1);
  i0 = l6;
  i1 = l2;
  i2 = l2;
  i2 = !(i2);
  i1 += i2;
  l2 = i1;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l6;
  i1 = l2;
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = l6;
  i1 = 3u;
  i0 += i1;
  i1 = p0;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l6;
  i1 = l4;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5192));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l4 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B21;}
  i0 = l2;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  goto B20;
  B21:;
  i0 = l4;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l2 = i0;
  i1 = 10u;
  i2 = l2;
  i3 = 10u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 16u;
  i0 += i1;
  i0 = m_malloc_maybe(i0);
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = 0u;
  l1 = i0;
  i0 = l2;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5192));
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5192));
  l4 = i0;
  i0 = 0u;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 5192), i1);
  i0 = l4;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = l4;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l4 = i0;
  i0 = l2;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l2;
  i1 = l4;
  i2 = l0;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  B20:;
  i0 = l2;
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 16u;
  i0 += i1;
  i1 = l6;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = l1;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5192));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i0 += i1;
  i1 = 4294967295u;
  i0 += i1;
  goto Bfunc;
  B11:;
  i0 = 37136u;
  i1 = 49895u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B10:;
  i0 = p1;
  m_malloc_fail(i0);
  UNREACHABLE;
  B9:;
  i0 = l2;
  m_malloc_fail(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 qstr_hash(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 5192u;
  l0 = i0;
  L0: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    l0 = i0;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    l1 = i0;
    i1 = p0;
    i0 = i0 > i1;
    if (i0) {goto L0;}
  i0 = l0;
  i1 = p0;
  i2 = l1;
  i1 -= i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 16u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 1));
  i1 = 8u;
  i0 <<= (i1 & 31);
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i0 |= i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 qstr_len(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 5192u;
  l0 = i0;
  L0: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    l0 = i0;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    l1 = i0;
    i1 = p0;
    i0 = i0 > i1;
    if (i0) {goto L0;}
  i0 = l0;
  i1 = p0;
  i2 = l1;
  i1 -= i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 16u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load8_u((&M0), (u64)(i0 + 2));
  FUNC_EPILOGUE;
  return i0;
}

static u32 qstr_str(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 5192u;
  l0 = i0;
  L0: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    l0 = i0;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    l1 = i0;
    i1 = p0;
    i0 = i0 > i1;
    if (i0) {goto L0;}
  i0 = l0;
  i1 = p0;
  i2 = l1;
  i1 -= i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 16u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 3u;
  i0 += i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 qstr_data(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 5192u;
  l0 = i0;
  L0: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    l0 = i0;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    l1 = i0;
    i1 = p0;
    i0 = i0 > i1;
    if (i0) {goto L0;}
  i0 = p1;
  i1 = l0;
  i2 = p0;
  i3 = l1;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i2 = 16u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l0 = i1;
  i1 = i32_load8_u((&M0), (u64)(i1 + 2));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 3u;
  i0 += i1;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_exception_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p2;
  i1 = 4294967167u;
  i0 &= i1;
  l0 = i0;
  i0 = p2;
  i1 = 128u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 4294967295u;
  i0 += i1;
  i1 = 1u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i1 = qstr_str(i1);
  i0 = mp_print_str(i0, i1);
  B0:;
  i0 = l0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 11262u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  if (i0) {goto B5;}
  goto B4;
  B6:;
  i0 = l0;
  i1 = 2u;
  i0 |= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  B5:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  if (i0) {goto B2;}
  B4:;
  i0 = p0;
  i1 = 12107u;
  i0 = mp_print_str(i0, i1);
  goto Bfunc;
  B3:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  B2:;
  i0 = p0;
  i1 = l0;
  i2 = p2;
  mp_obj_tuple_print(i0, i1, i2);
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = 0u;
  mp_obj_print_helper(i0, i1, i2);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_exception_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 131070u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc_maybe(i0);
  p2 = i0;
  i1 = 5196u;
  i2 = p2;
  i0 = i2 ? i0 : i1;
  p2 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 33864u;
  p0 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  l0 = i0;
  i1 = 8u;
  i0 += i1;
  i0 = m_malloc_maybe(i0);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = 33872u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 8u;
  i0 += i1;
  i1 = p3;
  i2 = l0;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  p0 = i0;
  B0:;
  i0 = p2;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_exception_get_value(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  goto Bfunc;
  B0:;
  i0 = 6u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_exception_attr(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 200u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load16_u((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = 61u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = 162u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35996u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  goto B3;
  B4:;
  i0 = 6u;
  p1 = i0;
  B3:;
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_new_exception(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 391u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 0u;
  i2 = 131070u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc_maybe(i0);
  l0 = i0;
  i1 = 5196u;
  i2 = l0;
  i0 = i2 ? i0 : i1;
  l0 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 33864u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 17289u;
  i1 = 13388u;
  i2 = 359u;
  i3 = 49909u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_exception_arg1(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 391u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 1u;
  i1 = 0u;
  i2 = 131070u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc_maybe(i0);
  p1 = i0;
  i1 = 5196u;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 12u;
  i0 = m_malloc_maybe(i0);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 33872u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  goto B1;
  B2:;
  i0 = 33864u;
  p0 = i0;
  B1:;
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 17289u;
  i1 = 13388u;
  i2 = 365u;
  i3 = 49930u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_exception_msg(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 391u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 16u;
  i0 = m_malloc_maybe(i0);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 33304u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = strlen_0(i0);
  l2 = i0;
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = p1;
  i2 = l2;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 1u;
  i1 = 0u;
  i2 = 131070u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc_maybe(i0);
  l1 = i0;
  i1 = 5196u;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 12u;
  i0 = m_malloc_maybe(i0);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = 33872u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  goto B1;
  B3:;
  i0 = 0u;
  i1 = 0u;
  i2 = 131070u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc_maybe(i0);
  l1 = i0;
  i1 = 5196u;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 33864u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B2:;
  i0 = 33864u;
  l1 = i0;
  B1:;
  i0 = p1;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 17289u;
  i1 = 13388u;
  i2 = 376u;
  i3 = 49956u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_exception_msg_varg(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i0 = mp_obj_new_exception_msg_vlist(i0, i1, i2);
  p2 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_exception_msg_vlist(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 391u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 16u;
  i0 = m_malloc_maybe(i0);
  l1 = i0;
  i0 = p1;
  i0 = strlen_0(i0);
  l2 = i0;
  i1 = 1u;
  i0 += i1;
  l3 = i0;
  i0 = m_malloc_maybe(i0);
  l4 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = 1u;
  i32_store8((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = l4;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = 463u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  i2 = p2;
  i0 = mp_vprintf(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 24));
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 24));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  goto B2;
  B4:;
  i0 = 0u;
  i1 = 0u;
  i2 = 131070u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc_maybe(i0);
  l1 = i0;
  i1 = 5196u;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 33864u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B3:;
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  B2:;
  i0 = l1;
  i1 = 33304u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = p1;
  i2 = l2;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 1u;
  i1 = 0u;
  i2 = 131070u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc_maybe(i0);
  l1 = i0;
  i1 = 5196u;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 12u;
  i0 = m_malloc_maybe(i0);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l1;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = 33872u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  goto B5;
  B6:;
  i0 = 33864u;
  l1 = i0;
  B5:;
  i0 = p1;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 14066u;
  i1 = 13388u;
  i2 = 452u;
  i3 = 49981u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  B0:;
  i0 = 17289u;
  i1 = 13388u;
  i2 = 455u;
  i3 = 49981u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void exc_add_strn(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i1 = p2;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l1 = i1;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p2;
  i2 = l1;
  i1 += i2;
  i2 = 16u;
  i1 += i2;
  l0 = i1;
  i2 = 1u;
  i0 = m_realloc_maybe(i0, i1, i2);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  goto B0;
  B2:;
  i0 = l1;
  i1 = l0;
  i2 = 4294967295u;
  i1 ^= i2;
  i0 += i1;
  p2 = i0;
  goto B0;
  B1:;
  i0 = p0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4294967295u;
  i0 += i1;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l0 = i1;
  i0 -= i1;
  p2 = i0;
  B0:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l0;
  i0 += i1;
  i1 = p1;
  i2 = p2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p2;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static u32 mp_obj_is_exception_type(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32308u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 391u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = 36056u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  goto Bfunc;
  B0:;
  i0 = 1u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_is_exception_instance(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  p0 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32308u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 391u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = 36056u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  goto Bfunc;
  B0:;
  i0 = 1u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_exception_match(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l0 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32308u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 391u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = l0;
  i1 = 36056u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  p0 = i0;
  B0:;
  i0 = p0;
  i1 = p1;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_exception_add_traceback(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l0 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32308u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 391u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = l0;
  i1 = 36056u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 391u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p0 = i0;
  B3:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i1 = 16u;
  i0 >>= (i1 & 31);
  i1 = 3u;
  i0 += i1;
  i1 = l2;
  i2 = 65535u;
  i1 &= i2;
  l3 = i1;
  i0 = i0 <= i1;
  if (i0) {goto B5;}
  i0 = l0;
  i1 = l3;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i2 = 12u;
  i1 += i2;
  i2 = 1u;
  i0 = m_realloc_maybe(i0, i1, i2);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  p0 = i1;
  i2 = 3u;
  i1 += i2;
  i2 = 65535u;
  i1 &= i2;
  i2 = p0;
  i3 = 4294901760u;
  i2 &= i3;
  i1 |= i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  goto B5;
  B6:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = 12u;
  i1 = m_malloc_maybe(i1);
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = 3u;
  l2 = i0;
  i0 = p0;
  i1 = 3u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  B5:;
  i0 = l1;
  i1 = l2;
  i2 = 196608u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l2;
  i2 = 14u;
  i1 >>= (i2 & 31);
  i2 = 262140u;
  i1 &= i2;
  i0 += i1;
  p0 = i0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p3;
  i32_store((&M0), (u64)(i0 + 8), i1);
  B4:;
  goto Bfunc;
  B0:;
  i0 = 14725u;
  i1 = 13388u;
  i2 = 567u;
  i3 = 50012u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_obj_exception_get_traceback(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l0 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32308u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 391u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = l0;
  i1 = 36056u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 391u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p0 = i0;
  B3:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 6u;
  i0 += i1;
  i0 = i32_load16_u((&M0), (u64)(i0));
  p0 = i0;
  i0 = p2;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B4:;
  i0 = p2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 14725u;
  i1 = 13388u;
  i2 = 620u;
  i3 = 50043u;
  __assert_fail(i0, i1, i2, i3);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_pystack_init(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 5172), i1);
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5168), i1);
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5176), i1);
  FUNC_EPILOGUE;
}

static u32 mp_pystack_alloc(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5176));
  l0 = i0;
  i1 = p0;
  i2 = 7u;
  i1 += i2;
  i2 = 4294967288u;
  i1 &= i2;
  i0 += i1;
  p0 = i0;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5172));
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5176), i1);
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 37136u;
  i1 = 1714u;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_js_init(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 5816), i1);
  i0 = 5824u;
  i1 = 7872u;
  mp_pystack_init(i0, i1);
  mp_init();
  i0 = 5272u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = 5272u;
  i1 = 10u;
  i0 = mp_obj_list_append(i0, i1);
  i0 = 5288u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = micropython_new_module();
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 mp_import_stat(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_open(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static void nlr_jump_fail(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 11265u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  L0: vm_checktime();
    goto L0;
  FUNC_EPILOGUE;
}

static void exec_prepare(u64 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  j0 = p0;
  i0 = vm_restore_from_snapshot(j0);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = 14763u;
  (*Z_envZ_printsZ_vi)(i0);
  i0 = 0u;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 5816), i1);
  i0 = 5824u;
  i1 = 7872u;
  mp_pystack_init(i0, i1);
  mp_init();
  i0 = 5272u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = 5272u;
  i1 = 10u;
  i0 = mp_obj_list_append(i0, i1);
  i0 = 5288u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = micropython_new_module();
  j0 = p0;
  i1 = 0u;
  i2 = 0u;
  i0 = vm_load_code(j0, i1, i2);
  l1 = i0;
  i1 = 262144u;
  i0 += i1;
  i0 = malloc_0(i0);
  l2 = i0;
  free_0(i0);
  j0 = p0;
  i1 = l2;
  i2 = 262144u;
  i1 += i2;
  l2 = i1;
  i2 = l1;
  i0 = vm_load_code(j0, i1, i2);
  i0 = l1;
  i1 = 0u;
  i0 = i0 != i1;
  i1 = 14078u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  i1 = l2;
  i2 = l1;
  i0 = micropython_init_module(i0, i1, i2);
  j0 = p0;
  vm_take_snapshot(j0);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void exec_prepare2(u64 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0;
  j0 = p0;
  i0 = vm_restore_from_snapshot(j0);
  i0 = !(i0);
  if (i0) {goto B0;}
  goto Bfunc;
  B0:;
  i0 = 14763u;
  (*Z_envZ_printsZ_vi)(i0);
  j0 = p0;
  i1 = 0u;
  i2 = 0u;
  i0 = vm_load_code(j0, i1, i2);
  l0 = i0;
  i1 = 262144u;
  i0 += i1;
  i0 = malloc_0(i0);
  l1 = i0;
  free_0(i0);
  j0 = p0;
  i1 = l1;
  i2 = 262144u;
  i1 += i2;
  l1 = i1;
  i2 = l0;
  i0 = vm_load_code(j0, i1, i2);
  i0 = l0;
  i1 = 0u;
  i0 = i0 != i1;
  i1 = 14078u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  i1 = l1;
  i2 = l0;
  i0 = micropython_init_module(i0, i1, i2);
  j0 = p0;
  vm_take_snapshot(j0);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void exec_prepare3(u64 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 5816), i1);
  i0 = 5824u;
  i1 = 7872u;
  mp_pystack_init(i0, i1);
  mp_init();
  i0 = 5272u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = 5272u;
  i1 = 10u;
  i0 = mp_obj_list_append(i0, i1);
  i0 = 5288u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = micropython_new_module();
  j0 = p0;
  j1 = p0;
  i2 = 0u;
  i3 = 0u;
  i1 = vm_load_code(j1, i2, i3);
  l1 = i1;
  i1 = malloc_0(i1);
  l2 = i1;
  i2 = l1;
  i0 = vm_load_code(j0, i1, i2);
  i0 = l1;
  i1 = 0u;
  i0 = i0 != i1;
  i1 = 14078u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  i1 = l2;
  i2 = l1;
  i0 = micropython_init_module(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void eosio_apply(u64 p0, u64 p1, u64 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 64u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  j0 = p2;
  j1 = 6292796416343408639ull;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B10;}
  j0 = p2;
  j1 = 7112189994323491199ull;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B9;}
  j0 = p2;
  j1 = 7112189994323491200ull;
  i0 = j0 == j1;
  if (i0) {goto B7;}
  j0 = p2;
  j1 = 8421045207927095296ull;
  i0 = j0 == j1;
  if (i0) {goto B6;}
  j0 = p2;
  j1 = 7684014297541771264ull;
  i0 = j0 != j1;
  if (i0) {goto B2;}
  i0 = 15529u;
  (*Z_envZ_printsZ_vi)(i0);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B10:;
  j0 = p2;
  j1 = 14029603612545515519ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B8;}
  j0 = p2;
  j1 = 14029385431137648640ull;
  i0 = j0 == j1;
  if (i0) {goto B5;}
  j0 = p2;
  j1 = 14029427681804681216ull;
  i0 = j0 != j1;
  if (i0) {goto B2;}
  i0 = 0u;
  i1 = 0u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  l1 = i0;
  i1 = 8u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 15895u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l1;
  i1 = 262144u;
  i0 += i1;
  i0 = malloc_0(i0);
  l2 = i0;
  free_0(i0);
  i0 = l2;
  i1 = 262144u;
  i0 += i1;
  l3 = i0;
  i1 = l1;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l3;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  p2 = j0;
  j1 = p2;
  i2 = l2;
  i3 = 262152u;
  i2 += i3;
  l2 = i2;
  i3 = l1;
  i4 = 4294967288u;
  i3 += i4;
  l1 = i3;
  vm_store_code(j0, j1, i2, i3);
  i0 = 0u;
  i1 = l0;
  i2 = 56u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 5816), i1);
  i0 = 5824u;
  i1 = 7872u;
  mp_pystack_init(i0, i1);
  mp_init();
  i0 = 5272u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = 5272u;
  i1 = 10u;
  i0 = mp_obj_list_append(i0, i1);
  i0 = 5288u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = micropython_new_module();
  i0 = 0u;
  i1 = l2;
  i2 = l1;
  i0 = micropython_init_module(i0, i1, i2);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  vm_take_snapshot(j0);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B9:;
  j0 = p2;
  j1 = 6292796416343408640ull;
  i0 = j0 == j1;
  if (i0) {goto B4;}
  j0 = p2;
  j1 = 6292796966099222528ull;
  i0 = j0 != j1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 18136u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  exec_prepare3(j0);
  j0 = p0;
  j1 = p1;
  j2 = 6292796966099222528ull;
  i0 = micropython_apply(j0, j1, j2);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B8:;
  j0 = p2;
  j1 = 14029603612545515520ull;
  i0 = j0 == j1;
  if (i0) {goto B3;}
  j0 = p2;
  j1 = 6292795316831780864ull;
  i0 = j0 != j1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 18136u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  exec_prepare(j0);
  j0 = p0;
  j1 = p1;
  j2 = 6292795316831780864ull;
  i0 = micropython_apply(j0, j1, j2);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B7:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 48u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i0 = 131073u;
  i0 = malloc_0(i0);
  l4 = i0;
  i0 = 131073u;
  i0 = malloc_0(i0);
  l5 = i0;
  i0 = l4;
  l1 = i0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i2 = l0;
  j2 = i64_load((&M0), (u64)(i2 + 24));
  i3 = l0;
  j3 = i64_load((&M0), (u64)(i3 + 32));
  i0 = (*Z_envZ_db_lowerbound_i64Z_ijjjj)(j0, j1, j2, j3);
  l3 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B11;}
  i0 = l4;
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 48));
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  l6 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  l7 = i0;
  i0 = l4;
  l1 = i0;
  i0 = 131072u;
  l2 = i0;
  i0 = 0u;
  l8 = i0;
  L12: vm_checktime();
    i0 = l1;
    i1 = l1;
    i2 = l2;
    i3 = l5;
    i4 = l3;
    i5 = l5;
    i6 = 131072u;
    i4 = (*Z_envZ_db_get_i64Z_iiii)(i4, i5, i6);
    i1 = write_hex(i1, i2, i3, i4);
    l9 = i1;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    i1 = l0;
    i2 = 56u;
    i1 += i2;
    i0 = (*Z_envZ_db_next_i64Z_iii)(i0, i1);
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B11;}
    i0 = l6;
    j0 = i64_load((&M0), (u64)(i0));
    j1 = 18446744073709551615ull;
    j0 += j1;
    i1 = l0;
    j1 = i64_load((&M0), (u64)(i1 + 56));
    i0 = j0 < j1;
    if (i0) {goto B11;}
    i0 = l2;
    i1 = l9;
    i0 -= i1;
    l2 = i0;
    i0 = l8;
    i1 = 1u;
    i0 += i1;
    l8 = i0;
    i1 = l7;
    i1 = i32_load((&M0), (u64)(i1));
    l9 = i1;
    i0 = i0 >= i1;
    if (i0) {goto B13;}
    i0 = l1;
    i1 = l1;
    i2 = l2;
    i3 = 18356u;
    i4 = 1u;
    i1 = write_str(i1, i2, i3, i4);
    l9 = i1;
    i0 += i1;
    l1 = i0;
    i0 = l2;
    i1 = l9;
    i0 -= i1;
    l2 = i0;
    i0 = l7;
    i0 = i32_load((&M0), (u64)(i0));
    l9 = i0;
    B13:;
    i0 = l8;
    i1 = l9;
    i0 = i0 < i1;
    if (i0) {goto L12;}
  B11:;
  i0 = l1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = 0u;
  i1 = l4;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  j0 = p2;
  j1 = 0ull;
  i0 = j0 == j1;
  if (i0) {goto B1;}
  goto B0;
  B6:;
  i0 = 0u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 5816), i1);
  i0 = 5824u;
  i1 = 7872u;
  mp_pystack_init(i0, i1);
  mp_init();
  i0 = 5272u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = 5272u;
  i1 = 10u;
  i0 = mp_obj_list_append(i0, i1);
  i0 = 5288u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = micropython_new_module();
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B5:;
  i0 = 0u;
  i1 = 0u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  l1 = i0;
  i1 = 8u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 16389u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l1;
  i0 = malloc_0(i0);
  l2 = i0;
  i1 = l1;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  p2 = j0;
  j1 = p2;
  i2 = l2;
  i3 = 8u;
  i2 += i3;
  i3 = l1;
  i4 = 4294967288u;
  i3 += i4;
  vm_store_abi(j0, j1, i2, i3);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B4:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 18136u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  exec_prepare2(j0);
  j0 = p0;
  j1 = p1;
  j2 = 6292796416343408640ull;
  i0 = micropython_apply(j0, j1, j2);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B3:;
  i0 = 0u;
  i1 = 0u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  l1 = i0;
  i1 = 16u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 17672u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l1;
  i0 = malloc_0(i0);
  l2 = i0;
  i1 = l1;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 56u;
  i0 += i1;
  i1 = l2;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  p2 = j0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 56));
  j2 = p2;
  i3 = l2;
  i4 = 16u;
  i3 += i4;
  i4 = l1;
  i5 = 4294967280u;
  i4 += i5;
  vm_store_module(j0, j1, j2, i3, i4);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  j0 = p0;
  exec_prepare(j0);
  j0 = p0;
  j1 = p1;
  j2 = p2;
  i0 = micropython_apply(j0, j1, j2);
  j0 = p2;
  j1 = 0ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  i1 = 466u;
  i32_store((&M0), (u64)(i0 + 7876), i1);
  i0 = 0u;
  i1 = 467u;
  i32_store((&M0), (u64)(i0 + 7872), i1);
  i0 = 0u;
  i1 = 468u;
  i32_store((&M0), (u64)(i0 + 7880), i1);
  i0 = 0u;
  i1 = 469u;
  i32_store((&M0), (u64)(i0 + 7884), i1);
  i0 = 0u;
  i1 = 470u;
  i32_store((&M0), (u64)(i0 + 7888), i1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_hal_stdout_tx_strn(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  mp_js_write(i0, i1);
  FUNC_EPILOGUE;
}

static u32 time_time(void) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  j0 = (*Z_envZ_current_timeZ_jv)();
  j1 = 1000000ull;
  j0 = DIV_U(j0, j1);
  i0 = mp_obj_new_int_from_ull(j0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 realloc_0(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i0 = malloc_0(i0);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 0u;
  i2 = p1;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  B1:;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = p0;
  i2 = p1;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  B2:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u64 get_code_version(void) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  i0 = 0u;
  j0 = i64_load((&M0), (u64)(i0 + 37616));
  FUNC_EPILOGUE;
  return j0;
}

static void mp_js_hook(void) {
  FUNC_PROLOGUE;
  FUNC_EPILOGUE;
}

static u32 setjmp_ex(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static void longjmp_ex(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  FUNC_EPILOGUE;
}

static const u8 data_segment_data_0[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1[] = {
  0x54, 0x21, 0x22, 0x19, 0x0d, 0x01, 0x02, 0x03, 0x11, 0x4b, 0x1c, 0x0c, 
  0x10, 0x04, 0x0b, 0x1d, 0x12, 0x1e, 0x27, 0x68, 0x6e, 0x6f, 0x70, 0x71, 
  0x62, 0x20, 0x05, 0x06, 0x0f, 0x13, 0x14, 0x15, 0x1a, 0x08, 0x16, 0x07, 
  0x28, 0x24, 0x17, 0x18, 0x09, 0x0a, 0x0e, 0x1b, 0x1f, 0x25, 0x23, 0x83, 
  0x82, 0x7d, 0x26, 0x2a, 0x2b, 0x3c, 0x3d, 0x3e, 0x3f, 0x43, 0x47, 0x4a, 
  0x4d, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x63, 
  0x64, 0x65, 0x66, 0x67, 0x69, 0x6a, 0x6b, 0x6c, 0x72, 0x73, 0x74, 0x79, 
  0x7a, 0x7b, 0x7c, 0x00, 
};

static const u8 data_segment_data_2[] = {
  0x49, 0x6c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x20, 0x62, 0x79, 0x74, 0x65, 
  0x20, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x00, 0x44, 0x6f, 
  0x6d, 0x61, 0x69, 0x6e, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x00, 0x52, 
  0x65, 0x73, 0x75, 0x6c, 0x74, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x72, 0x65, 
  0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x00, 
  0x4e, 0x6f, 0x74, 0x20, 0x61, 0x20, 0x74, 0x74, 0x79, 0x00, 0x50, 0x65, 
  0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x64, 0x65, 0x6e, 
  0x69, 0x65, 0x64, 0x00, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 
  0x6e, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 
  0x74, 0x65, 0x64, 0x00, 0x4e, 0x6f, 0x20, 0x73, 0x75, 0x63, 0x68, 0x20, 
  0x66, 0x69, 0x6c, 0x65, 0x20, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x72, 0x65, 
  0x63, 0x74, 0x6f, 0x72, 0x79, 0x00, 0x4e, 0x6f, 0x20, 0x73, 0x75, 0x63, 
  0x68, 0x20, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x00, 0x46, 0x69, 
  0x6c, 0x65, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x00, 0x56, 0x61, 
  0x6c, 0x75, 0x65, 0x20, 0x74, 0x6f, 0x6f, 0x20, 0x6c, 0x61, 0x72, 0x67, 
  0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x74, 
  0x79, 0x70, 0x65, 0x00, 0x4e, 0x6f, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 
  0x20, 0x6c, 0x65, 0x66, 0x74, 0x20, 0x6f, 0x6e, 0x20, 0x64, 0x65, 0x76, 
  0x69, 0x63, 0x65, 0x00, 0x4f, 0x75, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x6d, 
  0x65, 0x6d, 0x6f, 0x72, 0x79, 0x00, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 
  0x63, 0x65, 0x20, 0x62, 0x75, 0x73, 0x79, 0x00, 0x49, 0x6e, 0x74, 0x65, 
  0x72, 0x72, 0x75, 0x70, 0x74, 0x65, 0x64, 0x20, 0x73, 0x79, 0x73, 0x74, 
  0x65, 0x6d, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x00, 0x52, 0x65, 0x73, 0x6f, 
  0x75, 0x72, 0x63, 0x65, 0x20, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 
  0x72, 0x69, 0x6c, 0x79, 0x20, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 
  0x61, 0x62, 0x6c, 0x65, 0x00, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 
  0x20, 0x73, 0x65, 0x65, 0x6b, 0x00, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x2d, 
  0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x00, 
  0x52, 0x65, 0x61, 0x64, 0x2d, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x66, 0x69, 
  0x6c, 0x65, 0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x00, 0x44, 0x69, 
  0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x20, 0x6e, 0x6f, 0x74, 0x20, 
  0x65, 0x6d, 0x70, 0x74, 0x79, 0x00, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 
  0x74, 0x69, 0x6f, 0x6e, 0x20, 0x72, 0x65, 0x73, 0x65, 0x74, 0x20, 0x62, 
  0x79, 0x20, 0x70, 0x65, 0x65, 0x72, 0x00, 0x4f, 0x70, 0x65, 0x72, 0x61, 
  0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x20, 0x6f, 
  0x75, 0x74, 0x00, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 
  0x6e, 0x20, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x00, 0x48, 0x6f, 
  0x73, 0x74, 0x20, 0x69, 0x73, 0x20, 0x64, 0x6f, 0x77, 0x6e, 0x00, 0x48, 
  0x6f, 0x73, 0x74, 0x20, 0x69, 0x73, 0x20, 0x75, 0x6e, 0x72, 0x65, 0x61, 
  0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x41, 0x64, 0x64, 0x72, 0x65, 
  0x73, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x75, 0x73, 0x65, 0x00, 0x42, 0x72, 
  0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x70, 0x69, 0x70, 0x65, 0x00, 0x49, 0x2f, 
  0x4f, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x00, 0x4e, 0x6f, 0x20, 0x73, 
  0x75, 0x63, 0x68, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x6f, 
  0x72, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x00, 0x42, 0x6c, 
  0x6f, 0x63, 0x6b, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x72, 
  0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x00, 0x4e, 0x6f, 0x20, 0x73, 
  0x75, 0x63, 0x68, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x00, 0x4e, 
  0x6f, 0x74, 0x20, 0x61, 0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 
  0x72, 0x79, 0x00, 0x49, 0x73, 0x20, 0x61, 0x20, 0x64, 0x69, 0x72, 0x65, 
  0x63, 0x74, 0x6f, 0x72, 0x79, 0x00, 0x54, 0x65, 0x78, 0x74, 0x20, 0x66, 
  0x69, 0x6c, 0x65, 0x20, 0x62, 0x75, 0x73, 0x79, 0x00, 0x45, 0x78, 0x65, 
  0x63, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x65, 0x72, 0x72, 
  0x6f, 0x72, 0x00, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x61, 
  0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x00, 0x41, 0x72, 0x67, 0x75, 
  0x6d, 0x65, 0x6e, 0x74, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x74, 0x6f, 
  0x6f, 0x20, 0x6c, 0x6f, 0x6e, 0x67, 0x00, 0x53, 0x79, 0x6d, 0x62, 0x6f, 
  0x6c, 0x69, 0x63, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x20, 0x6c, 0x6f, 0x6f, 
  0x70, 0x00, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x74, 
  0x6f, 0x6f, 0x20, 0x6c, 0x6f, 0x6e, 0x67, 0x00, 0x54, 0x6f, 0x6f, 0x20, 
  0x6d, 0x61, 0x6e, 0x79, 0x20, 0x6f, 0x70, 0x65, 0x6e, 0x20, 0x66, 0x69, 
  0x6c, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 
  0x6d, 0x00, 0x4e, 0x6f, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x64, 0x65, 
  0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73, 0x20, 0x61, 0x76, 
  0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x42, 0x61, 0x64, 0x20, 
  0x66, 0x69, 0x6c, 0x65, 0x20, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 
  0x74, 0x6f, 0x72, 0x00, 0x4e, 0x6f, 0x20, 0x63, 0x68, 0x69, 0x6c, 0x64, 
  0x20, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x00, 0x42, 0x61, 0x64, 
  0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x00, 0x46, 0x69, 0x6c, 
  0x65, 0x20, 0x74, 0x6f, 0x6f, 0x20, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x00, 
  0x54, 0x6f, 0x6f, 0x20, 0x6d, 0x61, 0x6e, 0x79, 0x20, 0x6c, 0x69, 0x6e, 
  0x6b, 0x73, 0x00, 0x4e, 0x6f, 0x20, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x20, 
  0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x52, 0x65, 
  0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x64, 0x65, 0x61, 0x64, 0x6c, 
  0x6f, 0x63, 0x6b, 0x20, 0x77, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x6f, 0x63, 
  0x63, 0x75, 0x72, 0x00, 0x53, 0x74, 0x61, 0x74, 0x65, 0x20, 0x6e, 0x6f, 
  0x74, 0x20, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 
  0x65, 0x00, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x20, 0x6f, 
  0x77, 0x6e, 0x65, 0x72, 0x20, 0x64, 0x69, 0x65, 0x64, 0x00, 0x4f, 0x70, 
  0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x61, 0x6e, 0x63, 
  0x65, 0x6c, 0x65, 0x64, 0x00, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 
  0x6e, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 
  0x65, 0x6e, 0x74, 0x65, 0x64, 0x00, 0x4e, 0x6f, 0x20, 0x6d, 0x65, 0x73, 
  0x73, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x64, 0x65, 0x73, 0x69, 
  0x72, 0x65, 0x64, 0x20, 0x74, 0x79, 0x70, 0x65, 0x00, 0x49, 0x64, 0x65, 
  0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x20, 0x72, 0x65, 0x6d, 0x6f, 
  0x76, 0x65, 0x64, 0x00, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x6e, 
  0x6f, 0x74, 0x20, 0x61, 0x20, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x00, 
  0x4e, 0x6f, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x61, 0x76, 0x61, 0x69, 
  0x6c, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 
  0x20, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x00, 0x4f, 0x75, 0x74, 
  0x20, 0x6f, 0x66, 0x20, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x20, 
  0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x00, 0x4c, 0x69, 
  0x6e, 0x6b, 0x20, 0x68, 0x61, 0x73, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20, 
  0x73, 0x65, 0x76, 0x65, 0x72, 0x65, 0x64, 0x00, 0x50, 0x72, 0x6f, 0x74, 
  0x6f, 0x63, 0x6f, 0x6c, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x00, 0x42, 
  0x61, 0x64, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x00, 0x46, 
  0x69, 0x6c, 0x65, 0x20, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 
  0x6f, 0x72, 0x20, 0x69, 0x6e, 0x20, 0x62, 0x61, 0x64, 0x20, 0x73, 0x74, 
  0x61, 0x74, 0x65, 0x00, 0x4e, 0x6f, 0x74, 0x20, 0x61, 0x20, 0x73, 0x6f, 
  0x63, 0x6b, 0x65, 0x74, 0x00, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 
  0x74, 0x69, 0x6f, 0x6e, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 
  0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x00, 0x4d, 0x65, 
  0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x74, 0x6f, 0x6f, 0x20, 0x6c, 0x61, 
  0x72, 0x67, 0x65, 0x00, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 
  0x20, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 
  0x66, 0x6f, 0x72, 0x20, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x00, 0x50, 
  0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x20, 0x6e, 0x6f, 0x74, 0x20, 
  0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x50, 0x72, 
  0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x73, 
  0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x00, 0x53, 0x6f, 0x63, 
  0x6b, 0x65, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x6e, 0x6f, 0x74, 
  0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x00, 0x4e, 
  0x6f, 0x74, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 
  0x00, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x20, 0x66, 0x61, 
  0x6d, 0x69, 0x6c, 0x79, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x73, 0x75, 0x70, 
  0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x00, 0x41, 0x64, 0x64, 0x72, 0x65, 
  0x73, 0x73, 0x20, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x20, 0x6e, 0x6f, 
  0x74, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x20, 
  0x62, 0x79, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x00, 
  0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 
  0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x4e, 0x65, 
  0x74, 0x77, 0x6f, 0x72, 0x6b, 0x20, 0x69, 0x73, 0x20, 0x64, 0x6f, 0x77, 
  0x6e, 0x00, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x20, 0x75, 0x6e, 
  0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x43, 0x6f, 
  0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x72, 0x65, 0x73, 
  0x65, 0x74, 0x20, 0x62, 0x79, 0x20, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 
  0x6b, 0x00, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 
  0x20, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x00, 0x4e, 0x6f, 0x20, 
  0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 
  0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x53, 
  0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x69, 0x73, 0x20, 0x63, 0x6f, 0x6e, 
  0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x00, 0x53, 0x6f, 0x63, 0x6b, 0x65, 
  0x74, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 
  0x74, 0x65, 0x64, 0x00, 0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x73, 
  0x65, 0x6e, 0x64, 0x20, 0x61, 0x66, 0x74, 0x65, 0x72, 0x20, 0x73, 0x6f, 
  0x63, 0x6b, 0x65, 0x74, 0x20, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 
  0x6e, 0x00, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 
  0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x20, 0x69, 0x6e, 0x20, 0x70, 
  0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x00, 0x4f, 0x70, 0x65, 0x72, 
  0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x70, 0x72, 0x6f, 
  0x67, 0x72, 0x65, 0x73, 0x73, 0x00, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x20, 
  0x66, 0x69, 0x6c, 0x65, 0x20, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x00, 
  0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x20, 0x49, 0x2f, 0x4f, 0x20, 0x65, 
  0x72, 0x72, 0x6f, 0x72, 0x00, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x20, 0x65, 
  0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x00, 0x4e, 0x6f, 0x20, 0x6d, 
  0x65, 0x64, 0x69, 0x75, 0x6d, 0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x00, 
  0x57, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 
  0x20, 0x74, 0x79, 0x70, 0x65, 0x00, 0x4e, 0x6f, 0x20, 0x65, 0x72, 0x72, 
  0x6f, 0x72, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 
  0x6f, 0x6e, 0x00, 0x00, 
};

static const u8 data_segment_data_3[] = {
  0x2d, 0x2b, 0x20, 0x20, 0x20, 0x30, 0x58, 0x30, 0x78, 0x00, 0x69, 0x6e, 
  0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 
  0x20, 0x6e, 0x61, 0x6d, 0x65, 0x00, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 
  0x36, 0x37, 0x38, 0x39, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x00, 0x66, 
  0x61, 0x69, 0x6c, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x6c, 0x6c, 
  0x6f, 0x63, 0x61, 0x74, 0x65, 0x20, 0x70, 0x61, 0x67, 0x65, 0x73, 0x00, 
  0x0d, 0x00, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x20, 
  0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x3a, 0x20, 0x25, 0x73, 0x20, 0x28, 
  0x25, 0x73, 0x3a, 0x20, 0x25, 0x73, 0x3a, 0x20, 0x25, 0x64, 0x29, 0x0a, 
  0x00, 0x62, 0x61, 0x73, 0x65, 0x20, 0x3c, 0x3d, 0x20, 0x33, 0x36, 0x00, 
  0x28, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x74, 0x29, 0x28, 0x73, 0x20, 0x2b, 
  0x20, 0x31, 0x20, 0x2d, 0x20, 0x62, 0x75, 0x66, 0x29, 0x20, 0x3c, 0x3d, 
  0x20, 0x62, 0x75, 0x66, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x00, 0x63, 0x20, 
  0x3c, 0x20, 0x30, 0x78, 0x31, 0x31, 0x30, 0x30, 0x30, 0x30, 0x00, 0x6d, 
  0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 
  0x65, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x6e, 0x2c, 0x20, 0x26, 
  0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 
  0x6c, 0x65, 0x78, 0x29, 0x00, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 
  0x6e, 0x20, 0x67, 0x6f, 0x74, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 
  0x6c, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x66, 0x6f, 
  0x72, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x27, 
  0x25, 0x71, 0x27, 0x00, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 
  0x72, 0x20, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x20, 0x65, 0x78, 
  0x65, 0x63, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x00, 0x72, 0x63, 0x20, 0x21, 
  0x3d, 0x20, 0x4e, 0x55, 0x4c, 0x4c, 0x00, 0x66, 0x72, 0x6f, 0x7a, 0x65, 
  0x6e, 0x00, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x20, 0x73, 0x74, 0x65, 0x70, 
  0x20, 0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 0x62, 0x65, 0x20, 0x7a, 0x65, 
  0x72, 0x6f, 0x00, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x6e, 0x6f, 
  0x74, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 
  0x65, 0x00, 0x70, 0x6f, 0x70, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x65, 
  0x6d, 0x70, 0x74, 0x79, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x00, 0x57, 0x61, 
  0x72, 0x6e, 0x69, 0x6e, 0x67, 0x00, 0x4d, 0x50, 0x5f, 0x53, 0x54, 0x41, 
  0x54, 0x45, 0x5f, 0x56, 0x4d, 0x28, 0x73, 0x63, 0x68, 0x65, 0x64, 0x5f, 
  0x73, 0x74, 0x61, 0x74, 0x65, 0x29, 0x20, 0x3c, 0x20, 0x30, 0x00, 0x6c, 
  0x6f, 0x63, 0x61, 0x6c, 0x20, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 
  0x65, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 
  0x20, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x73, 0x73, 0x69, 
  0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x00, 0x6d, 0x70, 0x5f, 0x6f, 0x62, 
  0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x28, 0x64, 0x65, 
  0x66, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x5f, 0x69, 0x6e, 0x2c, 0x20, 0x26, 
  0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x75, 0x70, 0x6c, 
  0x65, 0x29, 0x00, 0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 
  0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x5f, 
  0x69, 0x6e, 0x29, 0x00, 0x69, 0x6e, 0x74, 0x28, 0x29, 0x20, 0x61, 0x72, 
  0x67, 0x20, 0x32, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 
  0x3e, 0x3d, 0x20, 0x32, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x3c, 0x3d, 0x20, 
  0x33, 0x36, 0x00, 0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 
  0x5f, 0x74, 0x79, 0x70, 0x65, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 
  0x6e, 0x2c, 0x20, 0x26, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 
  0x6e, 0x61, 0x6d, 0x65, 0x29, 0x00, 0x63, 0x61, 0x6e, 0x20, 0x6e, 0x6f, 
  0x74, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x6f, 0x62, 
  0x6a, 0x65, 0x63, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x75, 0x6e, 0x73, 0x69, 
  0x67, 0x6e, 0x65, 0x64, 0x20, 0x6c, 0x6f, 0x6e, 0x67, 0x20, 0x6c, 0x6f, 
  0x6e, 0x67, 0x00, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x70, 
  0x6f, 0x6f, 0x6c, 0x20, 0x69, 0x73, 0x20, 0x66, 0x75, 0x6c, 0x6c, 0x21, 
  0x00, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x20, 0x69, 0x73, 0x20, 0x74, 
  0x6f, 0x6f, 0x20, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x00, 0x28, 0x75, 0x69, 
  0x6e, 0x74, 0x38, 0x5f, 0x74, 0x20, 0x2a, 0x29, 0x70, 0x74, 0x72, 0x20, 
  0x3e, 0x3d, 0x20, 0x4d, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 
  0x54, 0x48, 0x52, 0x45, 0x41, 0x44, 0x28, 0x70, 0x79, 0x73, 0x74, 0x61, 
  0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x29, 0x00, 0x63, 0x6f, 
  0x64, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x25, 0x71, 0x00, 0x69, 
  0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x20, 
  0x2e, 0x6d, 0x70, 0x79, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x00, 0x2f, 0x00, 
  0x74, 0x68, 0x69, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x71, 0x20, 
  0x21, 0x3d, 0x20, 0x4d, 0x50, 0x5f, 0x4f, 0x42, 0x4a, 0x5f, 0x4e, 0x55, 
  0x4c, 0x4c, 0x00, 0x74, 0x72, 0x75, 0x65, 0x00, 0x62, 0x61, 0x64, 0x20, 
  0x74, 0x79, 0x70, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x00, 0x62, 0x79, 0x74, 
  0x65, 0x61, 0x72, 0x72, 0x61, 0x79, 0x28, 0x62, 0x00, 0x6d, 0x70, 0x5f, 
  0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x28, 
  0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x6e, 0x2c, 0x20, 0x26, 0x6d, 0x70, 
  0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x65, 0x72, 
  0x61, 0x74, 0x65, 0x29, 0x00, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x28, 0x25, 
  0x64, 0x2c, 0x20, 0x25, 0x64, 0x00, 0x32, 0x20, 0x3c, 0x3d, 0x20, 0x6e, 
  0x5f, 0x61, 0x72, 0x67, 0x73, 0x00, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 
  0x6c, 0x65, 0x20, 0x71, 0x75, 0x65, 0x75, 0x65, 0x20, 0x66, 0x75, 0x6c, 
  0x6c, 0x00, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x6f, 0x70, 0x65, 
  0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x73, 
  0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x00, 0x3c, 0x69, 0x6f, 
  0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x4f, 0x20, 0x30, 0x78, 
  0x25, 0x78, 0x3e, 0x00, 0x28, 0x00, 0x25, 0x71, 0x00, 0x62, 0x75, 0x66, 
  0x66, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x6f, 0x20, 0x73, 0x6d, 0x61, 0x6c, 
  0x6c, 0x00, 0x6d, 0x61, 0x74, 0x68, 0x20, 0x64, 0x6f, 0x6d, 0x61, 0x69, 
  0x6e, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x00, 0x33, 0x2e, 0x34, 0x2e, 
  0x30, 0x00, 0x73, 0x79, 0x6e, 0x74, 0x61, 0x78, 0x20, 0x65, 0x72, 0x72, 
  0x6f, 0x72, 0x20, 0x69, 0x6e, 0x20, 0x4a, 0x53, 0x4f, 0x4e, 0x00, 0x6f, 
  0x64, 0x64, 0x2d, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x20, 0x73, 0x74, 
  0x72, 0x69, 0x6e, 0x67, 0x00, 0x00, 0x62, 0x61, 0x64, 0x20, 0x61, 0x63, 
  0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x00, 0x64, 
  0x69, 0x63, 0x74, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x73, 
  0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x68, 0x61, 0x73, 0x20, 
  0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 
  0x00, 0x61, 0x72, 0x67, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 
  0x20, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x00, 0x6e, 
  0x75, 0x6d, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x62, 0x61, 
  0x73, 0x65, 0x73, 0x20, 0x3c, 0x20, 0x32, 0x00, 0x6e, 0x75, 0x6c, 0x6c, 
  0x00, 0x28, 0x6e, 0x69, 0x6c, 0x29, 0x00, 0x25, 0x63, 0x00, 0x73, 0x74, 
  0x72, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 
  0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x69, 0x6e, 0x74, 
  0x65, 0x67, 0x65, 0x72, 0x73, 0x2c, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x25, 
  0x73, 0x00, 0x21, 0x6d, 0x61, 0x70, 0x2d, 0x3e, 0x69, 0x73, 0x5f, 0x66, 
  0x69, 0x78, 0x65, 0x64, 0x20, 0x7c, 0x7c, 0x20, 0x6c, 0x6f, 0x6f, 0x6b, 
  0x75, 0x70, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x20, 0x3d, 0x3d, 0x20, 0x4d, 
  0x50, 0x5f, 0x4d, 0x41, 0x50, 0x5f, 0x4c, 0x4f, 0x4f, 0x4b, 0x55, 0x50, 
  0x00, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x64, 0x6f, 
  0x65, 0x73, 0x6e, 0x27, 0x74, 0x20, 0x74, 0x61, 0x6b, 0x65, 0x20, 0x6b, 
  0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 
  0x65, 0x6e, 0x74, 0x73, 0x00, 0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 
  0x69, 0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x73, 0x65, 0x6c, 
  0x66, 0x5f, 0x69, 0x6e, 0x29, 0x00, 0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 
  0x5f, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x28, 0x73, 0x65, 0x6c, 
  0x66, 0x5f, 0x69, 0x6e, 0x2c, 0x20, 0x26, 0x6d, 0x70, 0x5f, 0x74, 0x79, 
  0x70, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x29, 0x00, 0x63, 0x61, 0x6e, 0x27, 
  0x74, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x69, 0x6e, 
  0x66, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x6e, 0x74, 0x00, 0x62, 0x61, 0x73, 
  0x65, 0x20, 0x3d, 0x3d, 0x20, 0x32, 0x20, 0x7c, 0x7c, 0x20, 0x62, 0x61, 
  0x73, 0x65, 0x20, 0x3d, 0x3d, 0x20, 0x38, 0x20, 0x7c, 0x7c, 0x20, 0x62, 
  0x61, 0x73, 0x65, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x30, 0x20, 0x7c, 0x7c, 
  0x20, 0x62, 0x61, 0x73, 0x65, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x36, 0x00, 
  0x5b, 0x00, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x27, 0x25, 0x71, 0x27, 0x20, 
  0x69, 0x73, 0x6e, 0x27, 0x74, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 
  0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x20, 0x00, 0x6e, 0x6c, 0x72, 
  0x5f, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x00, 0xc4, 
  0xba, 0x05, 0x64, 0x62, 0x2e, 0x70, 0x79, 0x00, 
};

static const u8 data_segment_data_4[] = {
  0x28, 0x6e, 0x75, 0x6c, 0x6c, 0x29, 0x00, 0x69, 0x6e, 0x76, 0x61, 0x6c, 
  0x69, 0x64, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x00, 0x62, 0x61, 
  0x64, 0x20, 0x68, 0x65, 0x78, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 
  0x20, 0x73, 0x69, 0x7a, 0x65, 0x00, 0x6d, 0x70, 0x7a, 0x2e, 0x63, 0x00, 
  0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x2e, 
  0x63, 0x00, 0x76, 0x73, 0x74, 0x72, 0x2e, 0x63, 0x00, 0x6f, 0x62, 0x6a, 
  0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x2e, 0x63, 0x00, 0x75, 0x6e, 
  0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x20, 0x6b, 0x65, 0x79, 
  0x77, 0x6f, 0x72, 0x64, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 
  0x74, 0x20, 0x27, 0x25, 0x71, 0x27, 0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 
  0x20, 0x73, 0x65, 0x6e, 0x64, 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x4e, 0x6f, 
  0x6e, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x74, 0x6f, 0x20, 
  0x61, 0x20, 0x6a, 0x75, 0x73, 0x74, 0x2d, 0x73, 0x74, 0x61, 0x72, 0x74, 
  0x65, 0x64, 0x20, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 
  0x00, 0x65, 0x6d, 0x69, 0x74, 0x67, 0x6c, 0x75, 0x65, 0x2e, 0x63, 0x00, 
  0x73, 0x65, 0x74, 0x28, 0x29, 0x00, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x28, 
  0x00, 0x5b, 0x00, 0x3a, 0x20, 0x00, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 
  0x6c, 0x65, 0x72, 0x2e, 0x63, 0x00, 0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 
  0x5f, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 
  0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x28, 0x54, 
  0x4f, 0x50, 0x28, 0x29, 0x29, 0x00, 0x6f, 0x62, 0x6a, 0x66, 0x75, 0x6e, 
  0x2e, 0x63, 0x00, 0x6f, 0x62, 0x6a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x31, 
  0x32, 0x38, 0x2e, 0x63, 0x00, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 
  0x20, 0x73, 0x79, 0x6e, 0x74, 0x61, 0x78, 0x20, 0x66, 0x6f, 0x72, 0x20, 
  0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x20, 0x77, 0x69, 0x74, 0x68, 
  0x20, 0x62, 0x61, 0x73, 0x65, 0x20, 0x25, 0x64, 0x00, 0x6f, 0x62, 0x6a, 
  0x6e, 0x61, 0x6d, 0x65, 0x2e, 0x63, 0x00, 0x70, 0x6f, 0x69, 0x6e, 0x74, 
  0x65, 0x72, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 
  0x21, 0x00, 0x77, 0x72, 0x69, 0x74, 0x65, 0x00, 0x70, 0x79, 0x73, 0x74, 
  0x61, 0x63, 0x6b, 0x2e, 0x68, 0x00, 0x61, 0x62, 0x69, 0x74, 0x61, 0x62, 
  0x6c, 0x65, 0x00, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 
  0x62, 0x6c, 0x65, 0x20, 0x2e, 0x6d, 0x70, 0x79, 0x20, 0x61, 0x72, 0x63, 
  0x68, 0x00, 0x2e, 0x6d, 0x70, 0x79, 0x00, 0x62, 0x75, 0x69, 0x6c, 0x74, 
  0x69, 0x6e, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x63, 0x00, 0x66, 
  0x61, 0x6c, 0x73, 0x65, 0x00, 0x61, 0x72, 0x72, 0x61, 0x79, 0x28, 0x27, 
  0x25, 0x63, 0x27, 0x00, 0x6f, 0x62, 0x6a, 0x65, 0x6e, 0x75, 0x6d, 0x65, 
  0x72, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x00, 0x29, 0x00, 0x6d, 0x6f, 0x64, 
  0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x73, 0x2e, 0x63, 0x00, 0x3c, 
  0x69, 0x6f, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x49, 0x4f, 0x20, 0x30, 
  0x78, 0x25, 0x78, 0x3e, 0x00, 0x2c, 0x20, 0x00, 0x66, 0x75, 0x6e, 0x63, 
  0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x61, 0x6b, 0x65, 0x73, 0x20, 0x25, 
  0x64, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 
  0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x62, 
  0x75, 0x74, 0x20, 0x25, 0x64, 0x20, 0x77, 0x65, 0x72, 0x65, 0x20, 0x67, 
  0x69, 0x76, 0x65, 0x6e, 0x00, 0x3c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 
  0x20, 0x27, 0x25, 0x73, 0x27, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x27, 
  0x25, 0x73, 0x27, 0x3e, 0x00, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x20, 0x72, 
  0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x61, 
  0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x21, 
  0x00, 0x6d, 0x61, 0x70, 0x2d, 0x3e, 0x75, 0x73, 0x65, 0x64, 0x20, 0x3d, 
  0x3d, 0x20, 0x30, 0x20, 0x7c, 0x7c, 0x20, 0x69, 0x20, 0x3d, 0x3d, 0x20, 
  0x6d, 0x61, 0x78, 0x00, 0x6f, 0x62, 0x6a, 0x74, 0x79, 0x70, 0x65, 0x2e, 
  0x63, 0x00, 0x4e, 0x6f, 0x6e, 0x65, 0x00, 0x3c, 0x25, 0x71, 0x3e, 0x00, 
  0x5c, 0x25, 0x63, 0x00, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x69, 
  0x6e, 0x64, 0x65, 0x78, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x66, 0x20, 
  0x72, 0x61, 0x6e, 0x67, 0x65, 0x00, 0x6d, 0x61, 0x70, 0x2e, 0x63, 0x00, 
  0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x61, 0x6b, 
  0x65, 0x73, 0x20, 0x25, 0x64, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 
  0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 
  0x74, 0x73, 0x20, 0x62, 0x75, 0x74, 0x20, 0x25, 0x64, 0x20, 0x77, 0x65, 
  0x72, 0x65, 0x20, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x00, 0x6f, 0x62, 0x6a, 
  0x66, 0x6c, 0x6f, 0x61, 0x74, 0x2e, 0x63, 0x00, 0x6f, 0x62, 0x6a, 0x69, 
  0x6e, 0x74, 0x5f, 0x6d, 0x70, 0x7a, 0x2e, 0x63, 0x00, 0x63, 0x61, 0x6e, 
  0x27, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x4e, 
  0x61, 0x4e, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x6e, 0x74, 0x00, 0x6d, 0x70, 
  0x70, 0x72, 0x69, 0x6e, 0x74, 0x2e, 0x63, 0x00, 0x28, 0x00, 0x6f, 0x70, 
  0x20, 0x3d, 0x3d, 0x20, 0x4d, 0x50, 0x5f, 0x55, 0x4e, 0x41, 0x52, 0x59, 
  0x5f, 0x4f, 0x50, 0x5f, 0x49, 0x4e, 0x56, 0x45, 0x52, 0x54, 0x00, 0x05, 
  0x15, 0x00, 0x00, 0x00, 0xfd, 0xd1, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x00, 
  
};

static const u8 data_segment_data_5[] = {
  0x19, 0x00, 0x0a, 0x00, 0x19, 0x19, 0x19, 0x00, 0x00, 0x00, 0x00, 0x05, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x0b, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x11, 0x0a, 
  0x19, 0x19, 0x19, 0x03, 0x0a, 0x07, 0x00, 0x01, 0x1b, 0x09, 0x0b, 0x18, 
  0x00, 0x00, 0x09, 0x06, 0x0b, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x19, 0x00, 
  0x00, 0x00, 0x19, 0x19, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x0a, 0x0d, 0x19, 0x19, 
  0x19, 0x00, 0x0d, 0x00, 0x00, 0x02, 0x00, 0x09, 0x0e, 0x00, 0x00, 0x00, 
  0x09, 0x00, 0x0e, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 
  0x13, 0x00, 0x00, 0x00, 0x00, 0x09, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x0c, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x04, 0x0f, 0x00, 
  0x00, 0x00, 0x00, 0x09, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 
  0x00, 0x09, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x12, 
  0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x1a, 0x1a, 0x1a, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 
  0x00, 0x00, 0x1a, 0x1a, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 
  0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x09, 0x14, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 
  0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x00, 0x09, 0x16, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x16, 0x00, 0x00, 0x16, 0x00, 0x00, 
};

static const u8 data_segment_data_6[] = {
  0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 
  0x43, 0x44, 0x45, 0x46, 
};

static const u8 data_segment_data_7[] = {
  0x2d, 0x30, 0x58, 0x2b, 0x30, 0x58, 0x20, 0x30, 0x58, 0x2d, 0x30, 0x78, 
  0x2b, 0x30, 0x78, 0x20, 0x30, 0x78, 0x00, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 
  0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 
  0x20, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x20, 0x65, 0x78, 0x69, 
  0x73, 0x74, 0x73, 0x00, 0x77, 0x72, 0x69, 0x74, 0x65, 0x00, 0x73, 0x74, 
  0x72, 0x20, 0x21, 0x3d, 0x20, 0x4e, 0x55, 0x4c, 0x4c, 0x00, 0x6d, 0x70, 
  0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 
  0x28, 0x6c, 0x68, 0x73, 0x5f, 0x69, 0x6e, 0x2c, 0x20, 0x26, 0x6d, 0x70, 
  0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x29, 0x00, 
  0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x20, 0x64, 0x69, 0x76, 0x69, 
  0x64, 0x65, 0x20, 0x62, 0x79, 0x20, 0x7a, 0x65, 0x72, 0x6f, 0x00, 0x66, 
  0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6d, 0x69, 0x73, 0x73, 
  0x69, 0x6e, 0x67, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 
  0x20, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x20, 0x61, 0x72, 0x67, 
  0x75, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x27, 0x25, 0x71, 0x27, 0x00, 0x3c, 
  0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x6f, 0x62, 
  0x6a, 0x65, 0x63, 0x74, 0x20, 0x27, 0x25, 0x71, 0x27, 0x20, 0x61, 0x74, 
  0x20, 0x25, 0x70, 0x3e, 0x00, 0x64, 0x65, 0x66, 0x5f, 0x6b, 0x77, 0x5f, 
  0x61, 0x72, 0x67, 0x73, 0x20, 0x3d, 0x3d, 0x20, 0x4d, 0x50, 0x5f, 0x4f, 
  0x42, 0x4a, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x20, 0x7c, 0x7c, 0x20, 0x6d, 
  0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 
  0x65, 0x28, 0x64, 0x65, 0x66, 0x5f, 0x6b, 0x77, 0x5f, 0x61, 0x72, 0x67, 
  0x73, 0x2c, 0x20, 0x26, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 
  0x64, 0x69, 0x63, 0x74, 0x29, 0x00, 0x7b, 0x00, 0x29, 0x00, 0x5d, 0x00, 
  0x65, 0x78, 0x63, 0x5f, 0x73, 0x70, 0x20, 0x3e, 0x3d, 0x20, 0x65, 0x78, 
  0x63, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x00, 0x6d, 0x70, 0x5f, 0x6f, 
  0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x28, 0x73, 
  0x65, 0x6c, 0x66, 0x5f, 0x69, 0x6e, 0x2c, 0x20, 0x26, 0x6d, 0x70, 0x5f, 
  0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x5f, 0x62, 0x75, 0x69, 
  0x6c, 0x74, 0x69, 0x6e, 0x5f, 0x31, 0x29, 0x00, 0x62, 0x79, 0x74, 0x65, 
  0x73, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 
  0x31, 0x36, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x6c, 0x6f, 0x6e, 
  0x67, 0x00, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x73, 0x79, 
  0x6e, 0x74, 0x61, 0x78, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6e, 0x75, 0x6d, 
  0x62, 0x65, 0x72, 0x00, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x6e, 0x74, 0x5f, 
  0x74, 0x6f, 0x5f, 0x75, 0x31, 0x32, 0x38, 0x3a, 0x77, 0x72, 0x6f, 0x6e, 
  0x67, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 
  0x79, 0x70, 0x65, 0x00, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x61, 0x63, 0x68, 
  0x65, 0x00, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 
  0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x00, 0x6e, 0x6f, 0x20, 0x6d, 0x6f, 
  0x64, 0x75, 0x6c, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x20, 0x27, 
  0x25, 0x71, 0x27, 0x00, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x00, 0x2c, 0x20, 
  0x00, 0x7a, 0x65, 0x72, 0x6f, 0x20, 0x73, 0x74, 0x65, 0x70, 0x00, 0x70, 
  0x6f, 0x73, 0x20, 0x3c, 0x20, 0x6d, 0x61, 0x70, 0x2d, 0x3e, 0x61, 0x6c, 
  0x6c, 0x6f, 0x63, 0x00, 0x29, 0x00, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x20, 0x67, 0x6f, 0x74, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 
  0x70, 0x6c, 0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x66, 
  0x6f, 0x72, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x20, 
  0x27, 0x25, 0x71, 0x27, 0x00, 0x6e, 0x6f, 0x6e, 0x2d, 0x68, 0x65, 0x78, 
  0x20, 0x64, 0x69, 0x67, 0x69, 0x74, 0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 
  0x00, 0x70, 0x6f, 0x73, 0x20, 0x3c, 0x20, 0x6d, 0x61, 0x70, 0x2d, 0x3e, 
  0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x00, 0x5f, 0x5f, 0x69, 0x6e, 0x69, 0x74, 
  0x5f, 0x5f, 0x28, 0x29, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 
  0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x4e, 0x6f, 0x6e, 0x65, 0x2c, 
  0x20, 0x6e, 0x6f, 0x74, 0x20, 0x27, 0x25, 0x73, 0x27, 0x00, 0x6f, 0x62, 
  0x6a, 0x2e, 0x63, 0x00, 0x5c, 0x6e, 0x00, 0x25, 0x63, 0x00, 0x66, 0x75, 
  0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x65, 0x78, 0x70, 0x65, 0x63, 
  0x74, 0x65, 0x64, 0x20, 0x61, 0x74, 0x20, 0x6d, 0x6f, 0x73, 0x74, 0x20, 
  0x25, 0x64, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 
  0x2c, 0x20, 0x67, 0x6f, 0x74, 0x20, 0x25, 0x64, 0x00, 0x2e, 0x30, 0x00, 
  0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x20, 0x62, 0x79, 0x20, 0x7a, 0x65, 
  0x72, 0x6f, 0x00, 0x6f, 0x62, 0x6a, 0x69, 0x6e, 0x74, 0x2e, 0x63, 0x00, 
  0x74, 0x72, 0x75, 0x65, 0x00, 0x5d, 0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 
  0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x25, 0x73, 0x20, 
  0x74, 0x6f, 0x20, 0x69, 0x6e, 0x74, 0x00, 0xaf, 0xb5, 0x01, 0x0a, 0x00, 
  0x6f, 0x62, 0x6a, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x2e, 0x63, 0x00, 
  0x12, 0xab, 0x05, 0x69, 0x64, 0x78, 0x36, 0x34, 0x00, 
};

static const u8 data_segment_data_8[] = {
  0x69, 0x6e, 0x66, 0x00, 0x6d, 0x65, 0x6d, 0x6f, 0x20, 0x68, 0x61, 0x73, 
  0x20, 0x6d, 0x6f, 0x72, 0x65, 0x20, 0x74, 0x68, 0x61, 0x6e, 0x20, 0x32, 
  0x35, 0x36, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73, 0x00, 0x63, 0x6f, 0x6e, 
  0x74, 0x65, 0x78, 0x74, 0x20, 0x66, 0x72, 0x65, 0x65, 0x20, 0x61, 0x63, 
  0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 
  0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 
  0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x00, 0x32, 0x20, 0x3c, 
  0x3d, 0x20, 0x62, 0x61, 0x73, 0x65, 0x20, 0x26, 0x26, 0x20, 0x62, 0x61, 
  0x73, 0x65, 0x20, 0x3c, 0x3d, 0x20, 0x33, 0x32, 0x00, 0x30, 0x2e, 0x30, 
  0x20, 0x74, 0x6f, 0x20, 0x61, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 
  0x78, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x00, 0x66, 0x75, 0x6e, 0x63, 
  0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 
  0x20, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x2d, 0x6f, 0x6e, 0x6c, 
  0x79, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x00, 0x72, 
  0x63, 0x2d, 0x3e, 0x6b, 0x69, 0x6e, 0x64, 0x20, 0x3d, 0x3d, 0x20, 0x4d, 
  0x50, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x59, 0x54, 0x45, 0x43, 
  0x4f, 0x44, 0x45, 0x00, 0x2c, 0x20, 0x00, 0x6c, 0x65, 0x6e, 0x5f, 0x61, 
  0x64, 0x6a, 0x20, 0x3c, 0x3d, 0x20, 0x30, 0x00, 0x26, 0x73, 0x70, 0x5b, 
  0x2d, 0x31, 0x5d, 0x20, 0x3d, 0x3d, 0x20, 0x4d, 0x50, 0x5f, 0x54, 0x41, 
  0x47, 0x50, 0x54, 0x52, 0x5f, 0x50, 0x54, 0x52, 0x28, 0x65, 0x78, 0x63, 
  0x5f, 0x73, 0x70, 0x2d, 0x3e, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x70, 0x29, 
  0x00, 0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x74, 
  0x79, 0x70, 0x65, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x6e, 0x2c, 
  0x20, 0x26, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x75, 
  0x6e, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x5f, 0x32, 0x29, 
  0x00, 0x69, 0x6e, 0x74, 0x20, 0x74, 0x6f, 0x6f, 0x20, 0x6c, 0x61, 0x72, 
  0x67, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 
  0x74, 0x20, 0x74, 0x6f, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x6f, 0x62, 
  0x6a, 0x65, 0x63, 0x74, 0x00, 0x6f, 0x62, 0x6a, 0x5f, 0x74, 0x6f, 0x5f, 
  0x75, 0x32, 0x35, 0x36, 0x3a, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x69, 
  0x64, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x21, 0x00, 0x2b, 0x2b, 0x2b, 0x2b, 
  0x76, 0x6d, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6e, 
  0x6f, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x61, 0x6d, 0x65, 0x00, 
  0x5f, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x5f, 0x2e, 0x70, 0x79, 0x00, 
  0x5d, 0x00, 0x6f, 0x62, 0x6a, 0x2e, 0x68, 0x00, 0x63, 0x61, 0x6e, 0x27, 
  0x74, 0x20, 0x73, 0x65, 0x74, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 
  0x75, 0x74, 0x65, 0x00, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x61, 0x72, 
  0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x00, 
  0x6f, 0x62, 0x6a, 0x2e, 0x68, 0x00, 0x27, 0x25, 0x73, 0x27, 0x20, 0x6f, 
  0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x69, 0x73, 0x6e, 0x27, 0x74, 0x20, 
  0x63, 0x61, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x54, 0x72, 0x61, 
  0x63, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x20, 0x28, 0x6d, 0x6f, 0x73, 0x74, 
  0x20, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x20, 0x63, 0x61, 0x6c, 0x6c, 
  0x20, 0x6c, 0x61, 0x73, 0x74, 0x29, 0x3a, 0x0a, 0x00, 0x5c, 0x72, 0x00, 
  0x5c, 0x25, 0x63, 0x00, 0x27, 0x25, 0x71, 0x27, 0x20, 0x61, 0x72, 0x67, 
  0x75, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 
  0x65, 0x64, 0x00, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x20, 
  0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x00, 
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x79, 
  0x70, 0x65, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x6e, 0x2c, 0x20, 
  0x26, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x6e, 0x74, 
  0x29, 0x00, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x00, 0x2c, 0x00, 0x75, 0x6e, 
  0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x20, 0x74, 0x79, 
  0x70, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x25, 0x71, 0x3a, 0x20, 0x27, 
  0x25, 0x73, 0x27, 0x00, 0x85, 0xb5, 0x01, 0x20, 0x00, 0x66, 0x6d, 0x74, 
  0x20, 0x21, 0x3d, 0x20, 0x4e, 0x55, 0x4c, 0x4c, 0x00, 0x65, 0x6d, 0x70, 
  0x74, 0x79, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x21, 0x00, 0x2b, 0x01, 0x06, 
  0x69, 0x64, 0x78, 0x31, 0x32, 0x38, 0x00, 
};

static const u8 data_segment_data_9[] = {
  0x49, 0x4e, 0x46, 0x00, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x77, 0x69, 
  0x74, 0x68, 0x20, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x64, 0x6f, 
  0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 
  0x2c, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x74, 0x6f, 0x6b, 
  0x65, 0x6e, 0x20, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x20, 0x69, 0x73, 
  0x73, 0x75, 0x65, 0x00, 0x21, 0x7a, 0x2d, 0x3e, 0x66, 0x69, 0x78, 0x65, 
  0x64, 0x5f, 0x64, 0x69, 0x67, 0x00, 0x25, 0x73, 0x6a, 0x00, 0x66, 0x75, 
  0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x61, 0x6b, 0x65, 0x73, 
  0x20, 0x25, 0x64, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 
  0x61, 0x6c, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 
  0x20, 0x62, 0x75, 0x74, 0x20, 0x25, 0x64, 0x20, 0x77, 0x65, 0x72, 0x65, 
  0x20, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x00, 0x7d, 0x00, 0x6f, 0x62, 0x6a, 
  0x6c, 0x69, 0x73, 0x74, 0x2e, 0x63, 0x00, 0x73, 0x70, 0x5b, 0x2d, 0x31, 
  0x5d, 0x20, 0x3d, 0x3d, 0x20, 0x6d, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 
  0x74, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x20, 0x7c, 0x7c, 0x20, 0x6d, 0x70, 
  0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x63, 0x65, 
  0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 
  0x63, 0x65, 0x28, 0x73, 0x70, 0x5b, 0x2d, 0x31, 0x5d, 0x29, 0x00, 0x6d, 
  0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 
  0x65, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x6e, 0x2c, 0x20, 0x26, 
  0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x5f, 
  0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x5f, 0x33, 0x29, 0x00, 0x72, 
  0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x20, 0x61, 0x20, 0x62, 0x79, 0x74, 
  0x65, 0x73, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x00, 0x62, 0x79, 
  0x74, 0x65, 0x73, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x68, 
  0x61, 0x76, 0x65, 0x20, 0x61, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x6f, 
  0x66, 0x20, 0x38, 0x20, 0x74, 0x6f, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 
  0x72, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x20, 0x6e, 0x61, 0x6d, 0x65, 
  0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x00, 0x6f, 0x62, 0x6a, 0x5f, 
  0x69, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x32, 0x35, 0x36, 0x3a, 
  0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 
  0x6e, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x00, 0x63, 0x6f, 0x6e, 0x74, 
  0x72, 0x61, 0x63, 0x74, 0x00, 0x29, 0x00, 0x61, 0x72, 0x67, 0x20, 0x69, 
  0x73, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x20, 0x73, 
  0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x00, 0x75, 0x75, 0x6f, 0x73, 
  0x69, 0x6f, 0x00, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 
  0x20, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x00, 0x25, 0x71, 0x28, 
  0x00, 0x74, 0x79, 0x70, 0x65, 0x20, 0x27, 0x25, 0x71, 0x27, 0x20, 0x69, 
  0x73, 0x6e, 0x27, 0x74, 0x20, 0x61, 0x6e, 0x20, 0x61, 0x63, 0x63, 0x65, 
  0x70, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x62, 0x61, 0x73, 0x65, 0x20, 
  0x74, 0x79, 0x70, 0x65, 0x00, 0x20, 0x20, 0x46, 0x69, 0x6c, 0x65, 0x20, 
  0x22, 0x25, 0x71, 0x22, 0x2c, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x25, 
  0x64, 0x00, 0x5c, 0x74, 0x00, 0x5c, 0x5c, 0x00, 0x28, 0x61, 0x6c, 0x6c, 
  0x6f, 0x77, 0x65, 0x64, 0x5b, 0x69, 0x5d, 0x2e, 0x66, 0x6c, 0x61, 0x67, 
  0x73, 0x20, 0x26, 0x20, 0x4d, 0x50, 0x5f, 0x41, 0x52, 0x47, 0x5f, 0x4b, 
  0x49, 0x4e, 0x44, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x29, 0x20, 0x3d, 0x3d, 
  0x20, 0x4d, 0x50, 0x5f, 0x41, 0x52, 0x47, 0x5f, 0x4f, 0x42, 0x4a, 0x00, 
  0x6f, 0x70, 0x20, 0x3d, 0x3d, 0x20, 0x4d, 0x50, 0x5f, 0x42, 0x49, 0x4e, 
  0x41, 0x52, 0x59, 0x5f, 0x4f, 0x50, 0x5f, 0x44, 0x49, 0x56, 0x4d, 0x4f, 
  0x44, 0x00, 0x28, 0x6e, 0x75, 0x6c, 0x6c, 0x29, 0x00, 0x29, 0x00, 0x6e, 
  0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x20, 0x73, 0x68, 0x69, 0x66, 
  0x74, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x00, 0x8f, 0xb5, 0x01, 0x2a, 
  0x00, 0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x65, 
  0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x73, 
  0x74, 0x61, 0x6e, 0x63, 0x65, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 
  0x6e, 0x29, 0x00, 0x2b, 0x2b, 0x2b, 0x76, 0x6d, 0x20, 0x75, 0x70, 0x67, 
  0x72, 0x61, 0x64, 0x65, 0x64, 0x2c, 0x20, 0x72, 0x65, 0x69, 0x6e, 0x69, 
  0x74, 0x20, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x21, 0x0a, 0x00, 0x41, 
  0xfd, 0x06, 0x69, 0x64, 0x78, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_10[] = {
  0x6e, 0x61, 0x6e, 0x00, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x20, 0x63, 
  0x61, 0x6e, 0x20, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x62, 0x65, 0x20, 0x69, 
  0x73, 0x73, 0x75, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x73, 0x73, 
  0x75, 0x65, 0x72, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x00, 
  0x63, 0x61, 0x72, 0x72, 0x79, 0x69, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x00, 
  0x28, 0x25, 0x73, 0x00, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 
  0x72, 0x20, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x20, 0x47, 0x65, 
  0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x78, 0x69, 0x74, 0x00, 
  0x29, 0x00, 0x65, 0x78, 0x63, 0x5f, 0x73, 0x70, 0x20, 0x3d, 0x3d, 0x20, 
  0x65, 0x78, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x20, 0x2d, 0x20, 
  0x31, 0x00, 0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 
  0x74, 0x79, 0x70, 0x65, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x6e, 
  0x2c, 0x20, 0x26, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 
  0x75, 0x6e, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x5f, 0x76, 
  0x61, 0x72, 0x29, 0x00, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x6d, 0x75, 
  0x73, 0x74, 0x20, 0x65, 0x78, 0x61, 0x63, 0x74, 0x6c, 0x79, 0x20, 0x31, 
  0x36, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x6c, 0x6f, 0x6e, 0x67, 0x20, 
  0x74, 0x6f, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x20, 0x74, 0x6f, 
  0x20, 0x61, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x31, 0x32, 0x38, 0x20, 
  0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x00, 0x61, 0x70, 0x70, 0x6c, 0x79, 
  0x00, 0x28, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x50, 0x59, 0x5f, 0x50, 0x59, 
  0x5f, 0x42, 0x55, 0x49, 0x4c, 0x54, 0x49, 0x4e, 0x53, 0x5f, 0x42, 0x59, 
  0x54, 0x45, 0x41, 0x52, 0x52, 0x41, 0x59, 0x20, 0x26, 0x26, 0x20, 0x6d, 
  0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 
  0x65, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x6e, 0x2c, 0x20, 0x26, 
  0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 
  0x61, 0x72, 0x72, 0x61, 0x79, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 
  0x4d, 0x49, 0x43, 0x52, 0x4f, 0x50, 0x59, 0x5f, 0x50, 0x59, 0x5f, 0x41, 
  0x52, 0x52, 0x41, 0x59, 0x20, 0x26, 0x26, 0x20, 0x6d, 0x70, 0x5f, 0x6f, 
  0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x28, 0x73, 
  0x65, 0x6c, 0x66, 0x5f, 0x69, 0x6e, 0x2c, 0x20, 0x26, 0x6d, 0x70, 0x5f, 
  0x74, 0x79, 0x70, 0x65, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x29, 0x29, 
  0x00, 0x6f, 0x72, 0x64, 0x28, 0x29, 0x20, 0x65, 0x78, 0x70, 0x65, 0x63, 
  0x74, 0x65, 0x64, 0x20, 0x61, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 
  0x74, 0x65, 0x72, 0x2c, 0x20, 0x62, 0x75, 0x74, 0x20, 0x73, 0x74, 0x72, 
  0x69, 0x6e, 0x67, 0x20, 0x6f, 0x66, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 
  0x68, 0x20, 0x25, 0x64, 0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x00, 0x64, 
  0x69, 0x76, 0x69, 0x64, 0x65, 0x20, 0x62, 0x79, 0x20, 0x7a, 0x65, 0x72, 
  0x6f, 0x00, 0x7b, 0x00, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 
  0x20, 0x62, 0x61, 0x73, 0x65, 0x73, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 
  0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x6c, 0x61, 0x79, 
  0x2d, 0x6f, 0x75, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 
  0x74, 0x00, 0x0a, 0x00, 0x5c, 0x78, 0x25, 0x30, 0x32, 0x78, 0x00, 0x5c, 
  0x6e, 0x00, 0x61, 0x72, 0x67, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x63, 
  0x00, 0x70, 0x6f, 0x77, 0x28, 0x29, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 
  0x33, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 
  0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x74, 
  0x65, 0x67, 0x65, 0x72, 0x73, 0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 
  0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x25, 0x73, 0x20, 0x74, 
  0x6f, 0x20, 0x73, 0x74, 0x72, 0x00, 0x2a, 0x66, 0x6d, 0x74, 0x20, 0x3d, 
  0x3d, 0x20, 0x27, 0x25, 0x27, 0x20, 0x7c, 0x7c, 0x20, 0x21, 0x22, 0x75, 
  0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x20, 0x66, 
  0x6d, 0x74, 0x20, 0x63, 0x68, 0x61, 0x72, 0x22, 0x00, 0x6f, 0x6e, 0x6c, 
  0x79, 0x20, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x20, 0x77, 0x69, 0x74, 
  0x68, 0x20, 0x73, 0x74, 0x65, 0x70, 0x3d, 0x31, 0x20, 0x28, 0x61, 0x6b, 
  0x61, 0x20, 0x4e, 0x6f, 0x6e, 0x65, 0x29, 0x20, 0x61, 0x72, 0x65, 0x20, 
  0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x00, 0x75, 0x6e, 
  0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x20, 0x74, 0x79, 
  0x70, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x25, 0x71, 0x3a, 0x20, 
  0x27, 0x25, 0x73, 0x27, 0x2c, 0x20, 0x27, 0x25, 0x73, 0x27, 0x00, 0x8a, 
  0xb5, 0x01, 0x2f, 0x00, 0x2b, 0x2b, 0x2b, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 
  0x2c, 0x20, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x70, 0x79, 0x74, 0x68, 0x6f, 
  0x6e, 0x0a, 0x00, 0x7a, 0x96, 0x0a, 0x69, 0x64, 0x78, 0x5f, 0x64, 0x6f, 
  0x75, 0x62, 0x6c, 0x65, 0x00, 
};

static const u8 data_segment_data_11[] = {
  0x4e, 0x41, 0x4e, 0x00, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 
  0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x00, 0x73, 0x72, 0x63, 
  0x2d, 0x3e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x20, 0x21, 0x3d, 0x20, 0x30, 
  0x00, 0x2b, 0x00, 0x6e, 0x6f, 0x20, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 
  0x20, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 
  0x6f, 0x20, 0x72, 0x65, 0x72, 0x61, 0x69, 0x73, 0x65, 0x00, 0x3c, 0x66, 
  0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x25, 0x71, 0x20, 0x61, 
  0x74, 0x20, 0x30, 0x78, 0x25, 0x70, 0x3e, 0x00, 0x72, 0x65, 0x71, 0x75, 
  0x69, 0x72, 0x65, 0x20, 0x61, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 
  0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x00, 0x5f, 0x69, 0x6e, 0x69, 0x74, 
  0x00, 0x6f, 0x62, 0x6a, 0x61, 0x72, 0x72, 0x61, 0x79, 0x2e, 0x63, 0x00, 
  0x0a, 0x00, 0x2c, 0x20, 0x00, 0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 
  0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x28, 0x2a, 0x69, 0x74, 0x65, 
  0x6d, 0x2c, 0x20, 0x26, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 
  0x74, 0x79, 0x70, 0x65, 0x29, 0x00, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x25, 
  0x71, 0x0a, 0x00, 0x22, 0x00, 0x5c, 0x72, 0x00, 0x65, 0x78, 0x74, 0x72, 
  0x61, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 
  0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x67, 
  0x69, 0x76, 0x65, 0x6e, 0x00, 0x6f, 0x76, 0x65, 0x72, 0x66, 0x6c, 0x6f, 
  0x77, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 
  0x20, 0x6c, 0x6f, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x74, 0x6f, 
  0x20, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x77, 0x6f, 0x72, 
  0x64, 0x00, 0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 
  0x74, 0x75, 0x70, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 
  0x69, 0x62, 0x6c, 0x65, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x6e, 
  0x29, 0x00, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x20, 0x62, 0x79, 0x20, 
  0x7a, 0x65, 0x72, 0x6f, 0x00, 0xbd, 0x94, 0x08, 0x3c, 0x6d, 0x6f, 0x64, 
  0x75, 0x6c, 0x65, 0x3e, 0x00, 0x62, 0x61, 0x64, 0x20, 0x73, 0x65, 0x74, 
  0x63, 0x6f, 0x64, 0x65, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 
  0x73, 0x69, 0x7a, 0x65, 0x00, 0xcf, 0xb1, 0x0f, 0x69, 0x64, 0x78, 0x5f, 
  0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x00, 
  
};

static const u8 data_segment_data_12[] = {
  0x2e, 0x00, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x69, 0x73, 0x73, 0x75, 0x65, 
  0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x20, 0x71, 0x75, 
  0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x00, 0x25, 0x73, 0x6a, 0x29, 0x00, 
  0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x68, 
  0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x73, 
  0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x00, 0x76, 0x6d, 0x5f, 
  0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x20, 
  0x3d, 0x3d, 0x20, 0x4d, 0x50, 0x5f, 0x56, 0x4d, 0x5f, 0x52, 0x45, 0x54, 
  0x55, 0x52, 0x4e, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x50, 0x54, 0x49, 0x4f, 
  0x4e, 0x00, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x6d, 0x75, 0x73, 0x74, 
  0x20, 0x65, 0x78, 0x61, 0x63, 0x74, 0x6c, 0x79, 0x20, 0x38, 0x20, 0x73, 
  0x69, 0x7a, 0x65, 0x20, 0x6c, 0x6f, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 
  0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x20, 
  0x6e, 0x61, 0x6d, 0x65, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x00, 
  0x28, 0x75, 0x69, 0x6e, 0x74, 0x38, 0x5f, 0x74, 0x20, 0x2a, 0x29, 0x70, 
  0x74, 0x72, 0x20, 0x3e, 0x3d, 0x20, 0x4d, 0x50, 0x5f, 0x53, 0x54, 0x41, 
  0x54, 0x45, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x44, 0x28, 0x70, 0x79, 
  0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x29, 
  0x00, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73, 
  0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x73, 0x74, 0x65, 0x70, 0x3d, 0x31, 
  0x20, 0x28, 0x61, 0x6b, 0x61, 0x20, 0x4e, 0x6f, 0x6e, 0x65, 0x29, 0x20, 
  0x61, 0x72, 0x65, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 
  0x64, 0x00, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x75, 0x73, 0x65, 0x20, 0x6b, 
  0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 
  0x65, 0x6e, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6b, 0x65, 0x79, 0x20, 
  0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x22, 0x00, 0x6c, 
  0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x2d, 0x3e, 0x64, 0x65, 0x73, 0x74, 0x5b, 
  0x30, 0x5d, 0x20, 0x3d, 0x3d, 0x20, 0x4d, 0x50, 0x5f, 0x4f, 0x42, 0x4a, 
  0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 
  0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x25, 0x73, 0x20, 0x74, 
  0x6f, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x00, 0x5c, 0x75, 0x25, 0x30, 
  0x34, 0x78, 0x00, 0x5c, 0x74, 0x00, 0x65, 0x78, 0x74, 0x72, 0x61, 0x20, 
  0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x20, 0x61, 0x72, 0x67, 0x75, 
  0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x00, 
  0x6f, 0x62, 0x6a, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x2e, 0x63, 0x00, 0x27, 
  0x25, 0x73, 0x27, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x69, 
  0x73, 0x6e, 0x27, 0x74, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 
  0x65, 0x00, 0xfa, 0xb5, 0x01, 0x5f, 0x00, 0x62, 0x61, 0x64, 0x20, 0x73, 
  0x65, 0x74, 0x61, 0x62, 0x69, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 
  0x20, 0x73, 0x69, 0x7a, 0x65, 0x00, 0x1a, 0xd9, 0x10, 0x70, 0x72, 0x69, 
  0x6d, 0x61, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x36, 
  0x34, 0x00, 
};

static const u8 data_segment_data_13[] = {
  0x6d, 0x61, 0x78, 0x2d, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x20, 0x6d, 
  0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 
  0x69, 0x76, 0x65, 0x00, 0x2e, 0x31, 0x32, 0x33, 0x34, 0x35, 0x61, 0x62, 
  0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 
  0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 
  0x00, 0x21, 0x6d, 0x70, 0x7a, 0x5f, 0x69, 0x73, 0x5f, 0x7a, 0x65, 0x72, 
  0x6f, 0x28, 0x72, 0x68, 0x73, 0x29, 0x00, 0x6f, 0x62, 0x6a, 0x6e, 0x61, 
  0x6d, 0x65, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x6c, 0x6f, 0x6e, 0x67, 0x2e, 
  0x63, 0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 0x74, 0x72, 0x75, 0x6e, 
  0x63, 0x61, 0x74, 0x65, 0x2d, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x20, 
  0x61, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x20, 0x6e, 0x75, 
  0x6d, 0x62, 0x65, 0x72, 0x00, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 
  0x6e, 0x20, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x72, 0x65, 
  0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 
  0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 
  0x6e, 0x74, 0x20, 0x23, 0x25, 0x64, 0x00, 0x67, 0x65, 0x6e, 0x65, 0x72, 
  0x61, 0x74, 0x6f, 0x72, 0x20, 0x72, 0x61, 0x69, 0x73, 0x65, 0x64, 0x20, 
  0x53, 0x74, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 
  0x6e, 0x00, 0x64, 0x65, 0x66, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x20, 0x3d, 
  0x3d, 0x20, 0x4d, 0x50, 0x5f, 0x4f, 0x42, 0x4a, 0x5f, 0x4e, 0x55, 0x4c, 
  0x4c, 0x20, 0x7c, 0x7c, 0x20, 0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 
  0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x28, 0x64, 0x65, 0x66, 0x5f, 
  0x61, 0x72, 0x67, 0x73, 0x2c, 0x20, 0x26, 0x6d, 0x70, 0x5f, 0x74, 0x79, 
  0x70, 0x65, 0x5f, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x29, 0x00, 0x66, 0x72, 
  0x6f, 0x7a, 0x65, 0x6e, 0x73, 0x65, 0x74, 0x28, 0x00, 0x2c, 0x20, 0x00, 
  0x2c, 0x20, 0x00, 0x0a, 0x00, 0x76, 0x6d, 0x2e, 0x63, 0x00, 0x6d, 0x70, 
  0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 
  0x28, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x6e, 0x2c, 0x20, 0x26, 0x6d, 
  0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x5f, 0x62, 
  0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x5f, 0x30, 0x29, 0x00, 0x64, 0x69, 
  0x76, 0x69, 0x64, 0x65, 0x20, 0x62, 0x79, 0x20, 0x7a, 0x65, 0x72, 0x6f, 
  0x00, 0x00, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x61, 0x72, 0x67, 0x75, 
  0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x00, 0x77, 0x72, 
  0x69, 0x74, 0x65, 0x00, 0x72, 0x65, 0x61, 0x64, 0x00, 0x28, 0x75, 0x69, 
  0x6e, 0x74, 0x38, 0x5f, 0x74, 0x20, 0x2a, 0x29, 0x70, 0x74, 0x72, 0x20, 
  0x3c, 0x3d, 0x20, 0x4d, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 
  0x54, 0x48, 0x52, 0x45, 0x41, 0x44, 0x28, 0x70, 0x79, 0x73, 0x74, 0x61, 
  0x63, 0x6b, 0x5f, 0x63, 0x75, 0x72, 0x29, 0x00, 0x6f, 0x62, 0x6a, 0x5f, 
  0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x3d, 0x20, 0x27, 0x66, 0x27, 0x20, 
  0x7c, 0x7c, 0x20, 0x6f, 0x62, 0x6a, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x20, 
  0x3d, 0x3d, 0x20, 0x27, 0x63, 0x27, 0x00, 0x64, 0x62, 0x00, 0x63, 0x61, 
  0x6e, 0x27, 0x74, 0x20, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x20, 
  0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x20, 0x69, 0x6d, 0x70, 
  0x6f, 0x72, 0x74, 0x00, 0x54, 0x72, 0x75, 0x65, 0x00, 0x2c, 0x20, 0x5b, 
  0x00, 0x2c, 0x20, 0x25, 0x64, 0x29, 0x00, 0x63, 0x68, 0x72, 0x28, 0x29, 
  0x20, 0x61, 0x72, 0x67, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x20, 
  0x72, 0x61, 0x6e, 0x67, 0x65, 0x28, 0x30, 0x78, 0x31, 0x31, 0x30, 0x30, 
  0x30, 0x30, 0x29, 0x00, 0x49, 0x2f, 0x4f, 0x20, 0x6f, 0x70, 0x65, 0x72, 
  0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x6e, 0x20, 0x63, 0x6c, 0x6f, 
  0x73, 0x65, 0x64, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x00, 0x25, 0x71, 0x3d, 
  0x00, 0x75, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x20, 
  0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x20, 0x61, 0x72, 0x67, 0x75, 
  0x6d, 0x65, 0x6e, 0x74, 0x20, 0x27, 0x25, 0x71, 0x27, 0x00, 0x3c, 0x6d, 
  0x6f, 0x64, 0x75, 0x6c, 0x65, 0x20, 0x27, 0x25, 0x73, 0x27, 0x3e, 0x00, 
  0x6f, 0x62, 0x6a, 0x64, 0x69, 0x63, 0x74, 0x2e, 0x63, 0x00, 0x6d, 0x70, 
  0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 
  0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x28, 0x73, 0x65, 
  0x6c, 0x66, 0x29, 0x00, 0x6e, 0x20, 0x25, 0x20, 0x33, 0x20, 0x3d, 0x3d, 
  0x20, 0x30, 0x00, 0x5c, 0x5c, 0x00, 0x25, 0x2e, 0x2a, 0x73, 0x00, 0x66, 
  0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6d, 0x69, 0x73, 0x73, 
  0x69, 0x6e, 0x67, 0x20, 0x25, 0x64, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 
  0x72, 0x65, 0x64, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 
  0x61, 0x6c, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 
  0x00, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x20, 0x62, 0x79, 0x20, 0x7a, 
  0x65, 0x72, 0x6f, 0x00, 0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 
  0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x28, 0x6c, 0x68, 0x73, 0x5f, 0x69, 
  0x6e, 0x2c, 0x20, 0x26, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 
  0x69, 0x6e, 0x74, 0x29, 0x00, 0x32, 0x20, 0x3c, 0x3d, 0x20, 0x62, 0x61, 
  0x73, 0x65, 0x20, 0x26, 0x26, 0x20, 0x62, 0x61, 0x73, 0x65, 0x20, 0x3c, 
  0x3d, 0x20, 0x31, 0x36, 0x00, 0x2c, 0x20, 0x00, 0x72, 0x75, 0x6e, 0x74, 
  0x69, 0x6d, 0x65, 0x2e, 0x63, 0x00, 0x7a, 0x8f, 0x07, 0x5f, 0x5f, 0x64, 
  0x69, 0x72, 0x5f, 0x5f, 0x00, 0x65, 0x78, 0x63, 0x5f, 0x74, 0x79, 0x70, 
  0x65, 0x2d, 0x3e, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x6e, 0x65, 0x77, 0x20, 
  0x3d, 0x3d, 0x20, 0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x65, 0x78, 
  0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x6b, 0x65, 
  0x5f, 0x6e, 0x65, 0x77, 0x00, 0x12, 0x90, 0x06, 0x73, 0x74, 0x72, 0x75, 
  0x63, 0x74, 0x00, 
};

static const u8 data_segment_data_14[] = {
  0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x70, 0x72, 0x65, 0x63, 0x69, 
  0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 
  0x68, 0x00, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x20, 0x3d, 
  0x3d, 0x20, 0x4d, 0x50, 0x5f, 0x56, 0x4d, 0x5f, 0x52, 0x45, 0x54, 0x55, 
  0x52, 0x4e, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x50, 0x54, 0x49, 0x4f, 0x4e, 
  0x00, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x38, 0x5f, 0x74, 0x20, 0x2a, 0x29, 
  0x70, 0x74, 0x72, 0x20, 0x3e, 0x3d, 0x20, 0x4d, 0x50, 0x5f, 0x53, 0x54, 
  0x41, 0x54, 0x45, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x44, 0x28, 0x70, 
  0x79, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 
  0x29, 0x00, 0x70, 0x79, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x68, 0x00, 
  0x6c, 0x68, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x72, 0x68, 0x73, 0x20, 
  0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x63, 0x6f, 
  0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x00, 0x3a, 0x20, 0x00, 
  0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x2d, 0x3e, 0x64, 0x65, 0x73, 0x74, 
  0x5b, 0x31, 0x5d, 0x20, 0x3d, 0x3d, 0x20, 0x4d, 0x50, 0x5f, 0x4f, 0x42, 
  0x4a, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 
  0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x25, 0x73, 0x20, 
  0x74, 0x6f, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x00, 0x65, 
  0x6d, 0x70, 0x74, 0x79, 0x20, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 
  0x6f, 0x72, 0x00, 0x5c, 0x78, 0x25, 0x30, 0x32, 0x78, 0x00, 0x6d, 0x70, 
  0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 
  0x28, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x6e, 0x2c, 0x20, 0x26, 0x6d, 
  0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x75, 0x70, 0x6c, 0x65, 
  0x29, 0x00, 0x6e, 0x65, 0x65, 0x64, 0x20, 0x6d, 0x6f, 0x72, 0x65, 0x20, 
  0x74, 0x68, 0x61, 0x6e, 0x20, 0x25, 0x64, 0x20, 0x76, 0x61, 0x6c, 0x75, 
  0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 
  0x00, 0xa7, 0xf9, 0x08, 0x5f, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x5f, 
  0x00, 0x62, 0x61, 0x64, 0x20, 0x73, 0x65, 0x74, 0x6d, 0x6f, 0x64, 0x75, 
  0x6c, 0x65, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x69, 
  0x7a, 0x65, 0x00, 0x49, 0xec, 0x11, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 
  0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x32, 0x35, 0x36, 0x00, 
  
};

static const u8 data_segment_data_15[] = {
  0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x20, 0x65, 0x78, 0x63, 
  0x65, 0x65, 0x64, 0x73, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 
  0x6c, 0x65, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x00, 0x21, 0x45, 
  0x58, 0x43, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x28, 0x72, 0x65, 0x74, 
  0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c, 0x20, 0x4d, 0x50, 0x5f, 0x4f, 
  0x42, 0x4a, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x50, 0x54, 0x52, 0x28, 
  0x26, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x74, 0x6f, 
  0x70, 0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x29, 0x29, 
  0x00, 0x70, 0x79, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x68, 0x00, 0x28, 
  0x75, 0x69, 0x6e, 0x74, 0x38, 0x5f, 0x74, 0x20, 0x2a, 0x29, 0x70, 0x74, 
  0x72, 0x20, 0x3c, 0x3d, 0x20, 0x4d, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 
  0x45, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x44, 0x28, 0x70, 0x79, 0x73, 
  0x74, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x75, 0x72, 0x29, 0x00, 0x61, 0x72, 
  0x72, 0x61, 0x79, 0x2f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x72, 0x65, 
  0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x72, 0x69, 
  0x67, 0x68, 0x74, 0x20, 0x73, 0x69, 0x64, 0x65, 0x00, 0x7d, 0x00, 0x6d, 
  0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x63, 
  0x74, 0x5f, 0x6f, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 
  0x64, 0x69, 0x63, 0x74, 0x28, 0x4d, 0x50, 0x5f, 0x4f, 0x42, 0x4a, 0x5f, 
  0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x50, 0x54, 0x52, 0x28, 0x74, 0x79, 0x70, 
  0x65, 0x2d, 0x3e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x73, 0x5f, 0x64, 0x69, 
  0x63, 0x74, 0x29, 0x29, 0x00, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 
  0x27, 0x25, 0x73, 0x27, 0x20, 0x69, 0x73, 0x6e, 0x27, 0x74, 0x20, 0x61, 
  0x20, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x20, 0x6f, 0x72, 0x20, 0x6c, 0x69, 
  0x73, 0x74, 0x00, 0x5c, 0x75, 0x25, 0x30, 0x34, 0x78, 0x00, 0x6b, 0x65, 
  0x79, 0x77, 0x6f, 0x72, 0x64, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 
  0x6e, 0x74, 0x28, 0x73, 0x29, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x79, 0x65, 
  0x74, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 
  0x64, 0x20, 0x2d, 0x20, 0x75, 0x73, 0x65, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 
  0x61, 0x6c, 0x20, 0x61, 0x72, 0x67, 0x73, 0x20, 0x69, 0x6e, 0x73, 0x74, 
  0x65, 0x61, 0x64, 0x00, 0x74, 0x6f, 0x6f, 0x20, 0x6d, 0x61, 0x6e, 0x79, 
  0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x75, 
  0x6e, 0x70, 0x61, 0x63, 0x6b, 0x20, 0x28, 0x65, 0x78, 0x70, 0x65, 0x63, 
  0x74, 0x65, 0x64, 0x20, 0x25, 0x64, 0x29, 0x00, 0x2b, 0xc5, 0x09, 0x5f, 
  0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x5f, 0x00, 0x62, 0x61, 0x64, 
  0x20, 0x65, 0x78, 0x65, 0x63, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 
  0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x21, 0x00, 
  0x8e, 0xa9, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x42, 0x00, 
};

static const u8 data_segment_data_16[] = {
  0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x73, 
  0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x64, 0x6f, 0x65, 0x73, 0x20, 0x6e, 
  0x6f, 0x74, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x00, 0x6f, 0x70, 0x63, 
  0x6f, 0x64, 0x65, 0x00, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x38, 0x5f, 0x74, 
  0x20, 0x2a, 0x29, 0x70, 0x74, 0x72, 0x20, 0x3c, 0x3d, 0x20, 0x4d, 0x50, 
  0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 
  0x44, 0x28, 0x70, 0x79, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x75, 
  0x72, 0x29, 0x00, 0x2e, 0x70, 0x79, 0x00, 0x73, 0x7a, 0x20, 0x3e, 0x20, 
  0x30, 0x00, 0x29, 0x00, 0x3c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x27, 
  0x25, 0x71, 0x27, 0x3e, 0x00, 0x00, 0x5c, 0x55, 0x25, 0x30, 0x38, 0x78, 
  0x00, 0x74, 0x79, 0x70, 0x65, 0x2d, 0x3e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 
  0x73, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x2d, 0x3e, 0x62, 0x61, 0x73, 0x65, 
  0x2e, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x3d, 0x20, 0x26, 0x6d, 0x70, 
  0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x00, 0xfd, 
  0x35, 0x0b, 0x5f, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 
  0x5f, 0x00, 0x0a, 0x00, 0xfb, 0x88, 0x0c, 0x43, 0x68, 0x61, 0x69, 0x6e, 
  0x44, 0x42, 0x4b, 0x65, 0x79, 0x36, 0x34, 0x00, 
};

static const u8 data_segment_data_17[] = {
  0x6d, 0x75, 0x73, 0x74, 0x20, 0x72, 0x65, 0x74, 0x69, 0x72, 0x65, 0x20, 
  0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x20, 0x71, 0x75, 0x61, 
  0x6e, 0x74, 0x69, 0x74, 0x79, 0x00, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 
  0x20, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 
  0x20, 0x6e, 0x6f, 0x74, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 
  0x65, 0x64, 0x00, 0x74, 0x79, 0x70, 0x65, 0x20, 0x74, 0x61, 0x6b, 0x65, 
  0x73, 0x20, 0x31, 0x20, 0x6f, 0x72, 0x20, 0x33, 0x20, 0x61, 0x72, 0x67, 
  0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x00, 0x25, 0x71, 0x20, 0x69, 0x6e, 
  0x64, 0x69, 0x63, 0x65, 0x73, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 
  0x65, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x73, 0x2c, 0x20, 
  0x6e, 0x6f, 0x74, 0x20, 0x25, 0x73, 0x00, 0x6a, 0x6f, 0x69, 0x6e, 0x20, 
  0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x73, 0x20, 0x61, 0x20, 0x6c, 0x69, 
  0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x74, 0x72, 0x2f, 0x62, 0x79, 
  0x74, 0x65, 0x73, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x20, 
  0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x20, 0x77, 
  0x69, 0x74, 0x68, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x20, 0x6f, 0x62, 0x6a, 
  0x65, 0x63, 0x74, 0x00, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x3d, 0x20, 
  0x26, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x74, 0x72, 
  0x00, 0x74, 0x79, 0x70, 0x65, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 
  0x20, 0x27, 0x25, 0x71, 0x27, 0x20, 0x68, 0x61, 0x73, 0x20, 0x6e, 0x6f, 
  0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x27, 
  0x25, 0x71, 0x27, 0x00, 0x6d, 0xba, 0x09, 0x5f, 0x5f, 0x65, 0x6e, 0x74, 
  0x65, 0x72, 0x5f, 0x5f, 0x00, 0x08, 0x98, 0x0d, 0x43, 0x68, 0x61, 0x69, 
  0x6e, 0x44, 0x42, 0x4b, 0x65, 0x79, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_18[] = {
  0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 
  0x66, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x00, 
  0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 
  0x20, 0x27, 0x25, 0x71, 0x27, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 
  0x63, 0x65, 0x73, 0x00, 0x25, 0x71, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 
  0x20, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x72, 0x61, 0x6e, 0x67, 
  0x65, 0x00, 0x72, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x28, 0x4e, 0x6f, 0x6e, 
  0x65, 0x2c, 0x6e, 0x29, 0x00, 0x6f, 0x62, 0x6a, 0x73, 0x74, 0x72, 0x75, 
  0x6e, 0x69, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x63, 0x00, 0x27, 0x25, 0x73, 
  0x27, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x68, 0x61, 0x73, 
  0x20, 0x6e, 0x6f, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 
  0x65, 0x20, 0x27, 0x25, 0x71, 0x27, 0x00, 0x45, 0xf8, 0x08, 0x5f, 0x5f, 
  0x65, 0x78, 0x69, 0x74, 0x5f, 0x5f, 0x00, 0xf2, 0x97, 0x0a, 0x4d, 0x75, 
  0x6c, 0x74, 0x69, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x00, 
};

static const u8 data_segment_data_19[] = {
  0x74, 0x6f, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x20, 0x64, 
  0x6f, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x65, 0x78, 0x69, 0x73, 
  0x74, 0x00, 0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 
  0x74, 0x79, 0x70, 0x65, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x6e, 
  0x2c, 0x20, 0x26, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 
  0x79, 0x70, 0x65, 0x29, 0x00, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 
  0x6f, 0x66, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x27, 0x25, 0x73, 0x27, 
  0x20, 0x68, 0x61, 0x73, 0x20, 0x6e, 0x6f, 0x20, 0x6c, 0x65, 0x6e, 0x28, 
  0x29, 0x00, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 
  0x6e, 0x6f, 0x74, 0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x00, 0x6f, 0x6e, 
  0x6c, 0x79, 0x20, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x20, 0x77, 0x69, 
  0x74, 0x68, 0x20, 0x73, 0x74, 0x65, 0x70, 0x3d, 0x31, 0x20, 0x28, 0x61, 
  0x6b, 0x61, 0x20, 0x4e, 0x6f, 0x6e, 0x65, 0x29, 0x20, 0x61, 0x72, 0x65, 
  0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x00, 0x6f, 
  0x5f, 0x69, 0x6e, 0x00, 0x40, 0xf8, 0x0b, 0x5f, 0x5f, 0x67, 0x65, 0x74, 
  0x61, 0x74, 0x74, 0x72, 0x5f, 0x5f, 0x00, 0x0a, 0x9b, 0x0b, 0x75, 0x70, 
  0x70, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_20[] = {
  0x75, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x66, 0x69, 
  0x6e, 0x64, 0x20, 0x6b, 0x65, 0x79, 0x00, 0x6d, 0x70, 0x5f, 0x6f, 0x62, 
  0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x6f, 0x72, 
  0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x64, 0x69, 0x63, 0x74, 
  0x28, 0x4d, 0x50, 0x5f, 0x4f, 0x42, 0x4a, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 
  0x5f, 0x50, 0x54, 0x52, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x2d, 0x3e, 0x6c, 
  0x6f, 0x63, 0x61, 0x6c, 0x73, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x29, 0x29, 
  0x00, 0x27, 0x25, 0x73, 0x27, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 
  0x20, 0x64, 0x6f, 0x65, 0x73, 0x6e, 0x27, 0x74, 0x20, 0x73, 0x75, 0x70, 
  0x70, 0x6f, 0x72, 0x74, 0x20, 0x69, 0x74, 0x65, 0x6d, 0x20, 0x64, 0x65, 
  0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x73, 0x74, 0x61, 0x72, 0x74, 
  0x2f, 0x65, 0x6e, 0x64, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 
  0x00, 0x27, 0x25, 0x73, 0x27, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 
  0x20, 0x69, 0x73, 0x6e, 0x27, 0x74, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 
  0x62, 0x6c, 0x65, 0x00, 0x26, 0x39, 0x0b, 0x5f, 0x5f, 0x67, 0x65, 0x74, 
  0x69, 0x74, 0x65, 0x6d, 0x5f, 0x5f, 0x00, 0xab, 0x0f, 0x0b, 0x6c, 0x6f, 
  0x77, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_21[] = {
  0x6d, 0x75, 0x73, 0x74, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 
  0x72, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x20, 0x71, 
  0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x00, 0x28, 0x5b, 0x00, 0x63, 
  0x61, 0x6e, 0x27, 0x74, 0x20, 0x61, 0x64, 0x64, 0x20, 0x73, 0x70, 0x65, 
  0x63, 0x69, 0x61, 0x6c, 0x20, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x20, 
  0x74, 0x6f, 0x20, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x2d, 0x73, 
  0x75, 0x62, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x64, 0x20, 0x63, 0x6c, 
  0x61, 0x73, 0x73, 0x00, 0x27, 0x25, 0x73, 0x27, 0x20, 0x6f, 0x62, 0x6a, 
  0x65, 0x63, 0x74, 0x20, 0x69, 0x73, 0x6e, 0x27, 0x74, 0x20, 0x73, 0x75, 
  0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x00, 
  0x6c, 0x61, 0x73, 0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x63, 0x68, 
  0x61, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x20, 0x3e, 0x3d, 0x20, 0x66, 0x69, 
  0x72, 0x73, 0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x63, 0x68, 0x61, 
  0x72, 0x5f, 0x70, 0x6f, 0x73, 0x00, 0x27, 0x25, 0x73, 0x27, 0x20, 0x6f, 
  0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x69, 0x73, 0x6e, 0x27, 0x74, 0x20, 
  0x61, 0x6e, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x00, 
  0xf7, 0xc8, 0x08, 0x5f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x5f, 0x00, 
  0x1a, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x00, 
};

static const u8 data_segment_data_22[] = {
  0x6e, 0x6f, 0x20, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x6f, 
  0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x00, 
  0x5d, 0x29, 0x00, 0x3c, 0x25, 0x73, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 
  0x74, 0x20, 0x61, 0x74, 0x20, 0x25, 0x70, 0x3e, 0x00, 0x27, 0x25, 0x73, 
  0x27, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x64, 0x6f, 0x65, 
  0x73, 0x6e, 0x27, 0x74, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 
  0x20, 0x69, 0x74, 0x65, 0x6d, 0x20, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 
  0x6d, 0x65, 0x6e, 0x74, 0x00, 0x6f, 0x62, 0x6a, 0x73, 0x74, 0x72, 0x2e, 
  0x63, 0x00, 0x28, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 
  0x65, 0x20, 0x21, 0x3d, 0x20, 0x4d, 0x50, 0x5f, 0x4f, 0x42, 0x4a, 0x5f, 
  0x4e, 0x55, 0x4c, 0x4c, 0x29, 0x20, 0x5e, 0x20, 0x28, 0x74, 0x68, 0x72, 
  0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x21, 0x3d, 0x20, 
  0x4d, 0x50, 0x5f, 0x4f, 0x42, 0x4a, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x29, 
  0x00, 0x5f, 0xa5, 0x08, 0x5f, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x5f, 
  0x00, 0x97, 0x7c, 0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x62, 
  0x79, 0x5f, 0x69, 0x74, 0x72, 0x00, 
};

static const u8 data_segment_data_23[] = {
  0x6f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 0x77, 0x6e, 0x20, 0x62, 0x61, 
  0x6c, 0x61, 0x6e, 0x63, 0x65, 0x00, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x69, 
  0x74, 0x65, 0x6d, 0x73, 0x00, 0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 
  0x69, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 
  0x74, 0x79, 0x70, 0x65, 0x28, 0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 
  0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x28, 0x73, 0x65, 0x6c, 
  0x66, 0x5f, 0x69, 0x6e, 0x29, 0x29, 0x00, 0x6f, 0x62, 0x6a, 0x65, 0x63, 
  0x74, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x62, 0x75, 0x66, 0x66, 0x65, 
  0x72, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x20, 0x72, 
  0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x00, 0x66, 0x69, 0x72, 0x73, 
  0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x5f, 
  0x70, 0x6f, 0x73, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x00, 0x74, 0x68, 0x72, 
  0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x21, 0x3d, 0x20, 
  0x4d, 0x50, 0x5f, 0x4f, 0x42, 0x4a, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x00, 
  0x16, 0x1b, 0x07, 0x5f, 0x5f, 0x69, 0x6e, 0x74, 0x5f, 0x5f, 0x00, 0x68, 
  0xda, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x00, 
};

static const u8 data_segment_data_24[] = {
  0x6f, 0x77, 0x6e, 0x65, 0x72, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 
  0x74, 0x20, 0x64, 0x6f, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x65, 
  0x78, 0x69, 0x73, 0x74, 0x00, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x6b, 0x65, 
  0x79, 0x73, 0x00, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x61, 0x62, 0x6c, 
  0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 
  0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x27, 0x7d, 0x27, 0x20, 0x65, 
  0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x64, 0x20, 0x69, 
  0x6e, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x73, 0x74, 0x72, 
  0x69, 0x6e, 0x67, 0x00, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 
  0x72, 0x20, 0x72, 0x61, 0x69, 0x73, 0x65, 0x64, 0x20, 0x53, 0x74, 0x6f, 
  0x70, 0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0xcf, 
  0x32, 0x08, 0x5f, 0x5f, 0x69, 0x74, 0x65, 0x72, 0x5f, 0x5f, 0x00, 0xef, 
  0x78, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x00, 
};

static const u8 data_segment_data_25[] = {
  0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x64, 0x6f, 0x65, 0x73, 0x20, 
  0x6e, 0x6f, 0x74, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x00, 0x70, 0x6f, 
  0x70, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x61, 0x6e, 0x20, 0x65, 0x6d, 
  0x70, 0x74, 0x79, 0x20, 0x73, 0x65, 0x74, 0x00, 0x64, 0x69, 0x63, 0x74, 
  0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x00, 0x70, 0x6f, 0x73, 0x20, 
  0x3c, 0x20, 0x6d, 0x61, 0x70, 0x2d, 0x3e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 
  0x00, 0x62, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 
  0x69, 0x6f, 0x6e, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 
  0x72, 0x00, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 
  0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 
  0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x42, 0x61, 0x73, 0x65, 0x45, 0x78, 
  0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0xe2, 0xb0, 0x07, 0x5f, 
  0x5f, 0x6c, 0x65, 0x6e, 0x5f, 0x5f, 0x00, 0x7b, 0xac, 0x05, 0x74, 0x61, 
  0x62, 0x6c, 0x65, 0x00, 
};

static const u8 data_segment_data_26[] = {
  0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x72, 0x6f, 0x77, 0x20, 
  0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x20, 0x64, 0x65, 0x6c, 0x65, 
  0x74, 0x65, 0x64, 0x20, 0x6f, 0x72, 0x20, 0x6e, 0x65, 0x76, 0x65, 0x72, 
  0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x20, 0x41, 0x63, 
  0x74, 0x69, 0x6f, 0x6e, 0x20, 0x77, 0x6f, 0x6e, 0x27, 0x74, 0x20, 0x68, 
  0x61, 0x76, 0x65, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x65, 0x66, 0x66, 0x65, 
  0x63, 0x74, 0x2e, 0x00, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x68, 0x61, 
  0x73, 0x68, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x21, 0x00, 0x6f, 0x62, 0x6a, 
  0x2e, 0x68, 0x00, 0x75, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 
  0x20, 0x27, 0x7b, 0x27, 0x20, 0x69, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x6d, 
  0x61, 0x74, 0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 0x69, 0x6d, 0x70, 
  0x6f, 0x72, 0x74, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x25, 0x71, 0x00, 
  0x8e, 0x13, 0x08, 0x5f, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x5f, 0x00, 
  0x72, 0x7c, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 
  0x00, 
};

static const u8 data_segment_data_27[] = {
  0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x63, 0x6c, 0x6f, 0x73, 0x65, 
  0x20, 0x62, 0x65, 0x63, 0x61, 0x75, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 
  0x20, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x69, 0x73, 0x20, 
  0x6e, 0x6f, 0x74, 0x20, 0x7a, 0x65, 0x72, 0x6f, 0x2e, 0x00, 0x3c, 0x73, 
  0x75, 0x70, 0x65, 0x72, 0x3a, 0x20, 0x00, 0x65, 0x78, 0x70, 0x65, 0x63, 
  0x74, 0x65, 0x64, 0x20, 0x27, 0x3a, 0x27, 0x20, 0x61, 0x66, 0x74, 0x65, 
  0x72, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 
  0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x00, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 
  0x79, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 
  0x20, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x2c, 0x20, 0x61, 0x6c, 0x6c, 
  0x6f, 0x63, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x25, 0x75, 0x20, 0x62, 
  0x79, 0x74, 0x65, 0x73, 0x00, 0xff, 0x30, 0x0a, 0x5f, 0x5f, 0x6d, 0x6f, 
  0x64, 0x75, 0x6c, 0x65, 0x5f, 0x5f, 0x00, 0x8e, 0x0c, 0x0c, 0x70, 0x72, 
  0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x00, 
};

static const u8 data_segment_data_28[] = {
  0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x73, 0x20, 0x74, 0x6f, 
  0x6f, 0x20, 0x6c, 0x6f, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 0x62, 0x65, 
  0x20, 0x61, 0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x73, 0x79, 0x6d, 
  0x62, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x00, 0x70, 0x6f, 0x70, 
  0x69, 0x74, 0x65, 0x6d, 0x28, 0x29, 0x3a, 0x20, 0x64, 0x69, 0x63, 0x74, 
  0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x20, 0x69, 0x73, 0x20, 0x65, 0x6d, 
  0x70, 0x74, 0x79, 0x00, 0x2c, 0x20, 0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 
  0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 0x66, 0x72, 0x6f, 0x6d, 
  0x20, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 
  0x69, 0x65, 0x6c, 0x64, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x69, 
  0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 
  0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 
  0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x61, 0x72, 0x67, 
  0x73, 0x32, 0x5f, 0x6c, 0x65, 0x6e, 0x20, 0x2b, 0x20, 0x32, 0x20, 0x2a, 
  0x20, 0x6d, 0x61, 0x70, 0x2d, 0x3e, 0x75, 0x73, 0x65, 0x64, 0x20, 0x3c, 
  0x3d, 0x20, 0x61, 0x72, 0x67, 0x73, 0x32, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 
  0x63, 0x00, 0xe2, 0x38, 0x08, 0x5f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 
  0x5f, 0x00, 0xa6, 0x4f, 0x08, 0x5f, 0x64, 0x62, 0x5f, 0x66, 0x69, 0x6e, 
  0x64, 0x00, 
};

static const u8 data_segment_data_29[] = {
  0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x75, 0x70, 0x70, 0x65, 0x72, 0x63, 0x61, 
  0x73, 0x65, 0x20, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x73, 0x20, 0x61, 
  0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x79, 
  0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x73, 0x74, 
  0x72, 0x69, 0x6e, 0x67, 0x00, 0x6e, 0x65, 0x78, 0x74, 0x00, 0x3e, 0x00, 
  0x74, 0x75, 0x70, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 
  0x6f, 0x75, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 
  0x00, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x38, 0x5f, 0x74, 0x20, 0x2a, 0x29, 
  0x70, 0x74, 0x72, 0x20, 0x3e, 0x3d, 0x20, 0x4d, 0x50, 0x5f, 0x53, 0x54, 
  0x41, 0x54, 0x45, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x44, 0x28, 0x70, 
  0x79, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 
  0x29, 0x00, 0x79, 0x15, 0x07, 0x5f, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x5f, 
  0x00, 0xd5, 0x41, 0x07, 0x5f, 0x64, 0x62, 0x5f, 0x67, 0x65, 0x74, 0x00, 
  
};

static const u8 data_segment_data_30[] = {
  0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x70, 0x61, 0x73, 0x73, 0x65, 
  0x64, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 
  0x72, 0x5f, 0x74, 0x6f, 0x20, 0x69, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 
  0x69, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x69, 0x6e, 0x64, 
  0x65, 0x78, 0x00, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x20, 0x73, 0x68, 
  0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x33, 0x32, 0x20, 0x62, 
  0x79, 0x74, 0x65, 0x73, 0x20, 0x6c, 0x6f, 0x6e, 0x67, 0x00, 0x6d, 0x70, 
  0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 
  0x28, 0x73, 0x65, 0x6c, 0x66, 0x2d, 0x3e, 0x74, 0x79, 0x70, 0x65, 0x2c, 
  0x20, 0x26, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x79, 
  0x70, 0x65, 0x29, 0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 0x73, 0x77, 
  0x69, 0x74, 0x63, 0x68, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x6d, 0x61, 
  0x6e, 0x75, 0x61, 0x6c, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 
  0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 
  0x20, 0x74, 0x6f, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 
  0x63, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x6e, 0x75, 0x6d, 0x62, 
  0x65, 0x72, 0x69, 0x6e, 0x67, 0x00, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x38, 
  0x5f, 0x74, 0x20, 0x2a, 0x29, 0x70, 0x74, 0x72, 0x20, 0x3c, 0x3d, 0x20, 
  0x4d, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x48, 0x52, 
  0x45, 0x41, 0x44, 0x28, 0x70, 0x79, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 
  0x63, 0x75, 0x72, 0x29, 0x00, 0x6b, 0x00, 0x0c, 0x5f, 0x5f, 0x71, 0x75, 
  0x61, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x5f, 0x00, 0x52, 0xcd, 0x0a, 
  0x5f, 0x64, 0x62, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x00, 
};

static const u8 data_segment_data_31[] = {
  0x65, 0x72, 0x72, 0x6f, 0x72, 0x20, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 
  0x67, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x00, 0x6d, 
  0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 
  0x65, 0x28, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5b, 0x69, 0x5d, 0x2c, 0x20, 
  0x26, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x79, 0x70, 
  0x65, 0x29, 0x00, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 
  0x6e, 0x20, 0x3d, 0x3d, 0x20, 0x27, 0x72, 0x27, 0x00, 0x61, 0x72, 0x67, 
  0x75, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x68, 0x61, 0x73, 0x20, 0x77, 0x72, 
  0x6f, 0x6e, 0x67, 0x20, 0x74, 0x79, 0x70, 0x65, 0x00, 0x10, 0x0b, 0x08, 
  0x5f, 0x5f, 0x72, 0x65, 0x70, 0x72, 0x5f, 0x5f, 0x00, 0x05, 0x8c, 0x0a, 
  0x5f, 0x64, 0x62, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x00, 
};

static const u8 data_segment_data_32[] = {
  0x72, 0x65, 0x61, 0x64, 0x00, 0x69, 0x73, 0x73, 0x75, 0x62, 0x63, 0x6c, 
  0x61, 0x73, 0x73, 0x28, 0x29, 0x20, 0x61, 0x72, 0x67, 0x20, 0x31, 0x20, 
  0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x61, 0x20, 0x63, 0x6c, 
  0x61, 0x73, 0x73, 0x00, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 
  0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 
  0x66, 0x69, 0x65, 0x72, 0x00, 0x70, 0x6f, 0x73, 0x20, 0x3c, 0x20, 0x6d, 
  0x61, 0x70, 0x2d, 0x3e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x00, 0x32, 0x3e, 
  0x0b, 0x5f, 0x5f, 0x73, 0x65, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x5f, 
  0x00, 0x2b, 0x42, 0x0b, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x62, 0x6f, 
  0x75, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_33[] = {
  0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 
  0x65, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x20, 0x69, 0x6e, 
  0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x6e, 
  0x6f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 
  0x63, 0x74, 0x00, 0x69, 0x73, 0x73, 0x75, 0x62, 0x63, 0x6c, 0x61, 0x73, 
  0x73, 0x28, 0x29, 0x20, 0x61, 0x72, 0x67, 0x20, 0x32, 0x20, 0x6d, 0x75, 
  0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x61, 0x20, 0x63, 0x6c, 0x61, 0x73, 
  0x73, 0x20, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x74, 0x75, 0x70, 0x6c, 0x65, 
  0x20, 0x6f, 0x66, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x00, 
  0x73, 0x69, 0x67, 0x6e, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x6c, 0x6c, 
  0x6f, 0x77, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x74, 0x72, 0x69, 
  0x6e, 0x67, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x73, 0x70, 
  0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x00, 0x6f, 0x62, 0x6a, 0x2e, 
  0x68, 0x00, 0xd0, 0xcd, 0x07, 0x5f, 0x5f, 0x73, 0x74, 0x72, 0x5f, 0x5f, 
  0x00, 0x6a, 0x15, 0x0b, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x62, 0x6f, 
  0x75, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_34[] = {
  0x77, 0x72, 0x69, 0x74, 0x65, 0x00, 0x73, 0x65, 0x6c, 0x66, 0x20, 0x3d, 
  0x3d, 0x20, 0x26, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 
  0x74, 0x61, 0x74, 0x69, 0x63, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x20, 
  0x7c, 0x7c, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x20, 0x3d, 0x3d, 0x20, 0x26, 
  0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 
  0x73, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x00, 0x73, 0x69, 0x67, 0x6e, 
  0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 
  0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 
  0x72, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 
  0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x20, 0x27, 0x63, 0x27, 0x00, 0x2d, 
  0x8c, 0x0f, 0x41, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x65, 0x74, 0x69, 0x63, 
  0x45, 0x72, 0x72, 0x6f, 0x72, 0x00, 0x41, 0x13, 0x0b, 0x70, 0x72, 0x69, 
  0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x00, 
};

static const u8 data_segment_data_35[] = {
  0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x70, 0x61, 0x73, 0x73, 0x65, 
  0x64, 0x20, 0x74, 0x6f, 0x20, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x20, 
  0x69, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x75, 
  0x6c, 0x74, 0x69, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x00, 0x75, 0x6e, 
  0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 
  0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x25, 0x63, 0x27, 0x20, 0x66, 
  0x6f, 0x72, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x6f, 0x66, 
  0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x27, 0x25, 0x73, 0x27, 0x00, 0x97, 
  0x5a, 0x0e, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x45, 
  0x72, 0x72, 0x6f, 0x72, 0x00, 0x4a, 0x56, 0x03, 0x69, 0x74, 0x72, 0x00, 
  
};

static const u8 data_segment_data_36[] = {
  0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x69, 0x66, 
  0x79, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x20, 0x69, 0x6e, 
  0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x6e, 
  0x6f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 
  0x63, 0x74, 0x00, 0x27, 0x3d, 0x27, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 
  0x6d, 0x65, 0x6e, 0x74, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x6c, 0x6c, 
  0x6f, 0x77, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x74, 0x72, 0x69, 
  0x6e, 0x67, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x73, 0x70, 
  0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x00, 0x21, 0xde, 0x0e, 0x41, 
  0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 
  0x72, 0x00, 0x29, 0x0d, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 
  0x00, 
};

static const u8 data_segment_data_37[] = {
  0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x20, 0x63, 0x61, 0x6e, 0x6e, 
  0x6f, 0x74, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x70, 0x72, 
  0x69, 0x6d, 0x61, 0x72, 0x79, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x77, 0x68, 
  0x65, 0x6e, 0x20, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 
  0x20, 0x61, 0x6e, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x00, 0x3c, 
  0x3e, 0x3d, 0x5e, 0x00, 0x07, 0x92, 0x0d, 0x42, 0x61, 0x73, 0x65, 0x45, 
  0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x68, 0xbf, 0x0f, 
  0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 
  0x6b, 0x65, 0x79, 0x00, 
};

static const u8 data_segment_data_38[] = {
  0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x61, 
  0x64, 0x64, 0x20, 0x61, 0x73, 0x73, 0x65, 0x74, 0x20, 0x77, 0x69, 0x74, 
  0x68, 0x20, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x20, 
  0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x00, 0x62, 0x63, 0x64, 0x65, 0x45, 
  0x66, 0x46, 0x67, 0x47, 0x6e, 0x6f, 0x73, 0x78, 0x58, 0x25, 0x00, 0x91, 
  0xbf, 0x08, 0x45, 0x4f, 0x46, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x00, 0x9a, 
  0xed, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_39[] = {
  0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x75, 0x6e, 0x64, 
  0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x00, 0x66, 0x6f, 0x72, 0x6d, 0x61, 
  0x74, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x20, 0x61, 0x20, 0x64, 0x69, 
  0x63, 0x74, 0x00, 0xf0, 0xe0, 0x08, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 
  0x69, 0x73, 0x00, 0x02, 0x5c, 0x03, 0x6f, 0x62, 0x6a, 0x00, 
};

static const u8 data_segment_data_40[] = {
  0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x76, 0x65, 
  0x72, 0x66, 0x6c, 0x6f, 0x77, 0x00, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 
  0x6c, 0x65, 0x74, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 
  0x6b, 0x65, 0x79, 0x00, 0xf2, 0x29, 0x09, 0x45, 0x78, 0x63, 0x65, 0x70, 
  0x74, 0x69, 0x6f, 0x6e, 0x00, 0xd1, 0x37, 0x14, 0x67, 0x65, 0x74, 0x5f, 
  0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x76, 0x61, 
  0x6c, 0x75, 0x65, 0x73, 0x00, 
};

static const u8 data_segment_data_41[] = {
  0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x73, 
  0x75, 0x62, 0x74, 0x72, 0x61, 0x63, 0x74, 0x20, 0x61, 0x73, 0x73, 0x65, 
  0x74, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x64, 0x69, 0x66, 0x66, 0x65, 
  0x72, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x00, 
  0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x66, 
  0x6f, 0x72, 0x6d, 0x61, 0x74, 0x00, 0x16, 0x62, 0x0d, 0x47, 0x65, 0x6e, 
  0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x78, 0x69, 0x74, 0x00, 0x97, 
  0x20, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 
  0x61, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x00, 
};

static const u8 data_segment_data_42[] = {
  0x73, 0x75, 0x62, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 
  0x75, 0x6e, 0x64, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x00, 0x66, 0x6f, 
  0x72, 0x6d, 0x61, 0x74, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 
  0x6e, 0x65, 0x65, 0x64, 0x73, 0x20, 0x6d, 0x6f, 0x72, 0x65, 0x20, 0x61, 
  0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x00, 0x20, 0x9c, 0x0b, 
  0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x00, 
  0x0a, 0xbe, 0x08, 0x69, 0x64, 0x78, 0x5f, 0x66, 0x69, 0x6e, 0x64, 0x00, 
  
};

static const u8 data_segment_data_43[] = {
  0x73, 0x75, 0x62, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 
  0x6f, 0x76, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x00, 0x25, 0x63, 0x20, 
  0x6e, 0x65, 0x65, 0x64, 0x73, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x6f, 0x72, 
  0x20, 0x63, 0x68, 0x61, 0x72, 0x00, 0x5c, 0x20, 0x10, 0x49, 0x6e, 0x64, 
  0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 
  0x72, 0x00, 0x40, 0x82, 0x0f, 0x69, 0x64, 0x78, 0x5f, 0x75, 0x70, 0x70, 
  0x65, 0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_44[] = {
  0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x70, 0x61, 0x73, 0x73, 0x20, 
  0x65, 0x6e, 0x64, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 
  0x20, 0x74, 0x6f, 0x20, 0x65, 0x72, 0x61, 0x73, 0x65, 0x00, 0x66, 0x6f, 
  0x72, 0x6d, 0x61, 0x74, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 
  0x64, 0x69, 0x64, 0x6e, 0x27, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 
  0x72, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 
  0x65, 0x6e, 0x74, 0x73, 0x00, 0xaf, 0xe2, 0x11, 0x4b, 0x65, 0x79, 0x62, 
  0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 
  0x74, 0x00, 0x0d, 0x2f, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 
  0x00, 
};

static const u8 data_segment_data_45[] = {
  0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x63, 0x72, 0x65, 
  0x6d, 0x65, 0x6e, 0x74, 0x20, 0x65, 0x6e, 0x64, 0x20, 0x69, 0x74, 0x65, 
  0x72, 0x61, 0x74, 0x6f, 0x72, 0x00, 0x64, 0x61, 0x74, 0x61, 0x20, 0x21, 
  0x3d, 0x20, 0x4e, 0x55, 0x4c, 0x4c, 0x00, 0xff, 0x69, 0x0b, 0x4c, 0x6f, 
  0x6f, 0x6b, 0x75, 0x70, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x00, 0x22, 0x1d, 
  0x0a, 0x69, 0x64, 0x78, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x00, 
  
};

static const u8 data_segment_data_46[] = {
  0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x70, 0x61, 0x73, 0x73, 0x65, 
  0x64, 0x20, 0x74, 0x6f, 0x20, 0x65, 0x72, 0x61, 0x73, 0x65, 0x20, 0x69, 
  0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 
  0x74, 0x69, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x00, 0x25, 0x2e, 0x2a, 
  0x73, 0x00, 0xdc, 0x83, 0x0b, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x45, 
  0x72, 0x72, 0x6f, 0x72, 0x00, 0xe1, 0xc2, 0x0e, 0x53, 0x65, 0x63, 0x6f, 
  0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x00, 
};

static const u8 data_segment_data_47[] = {
  0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x65, 0x72, 0x61, 0x73, 0x65, 
  0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 
  0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x6e, 0x6f, 
  0x74, 0x68, 0x65, 0x72, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 
  0x74, 0x00, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 
  0x65, 0x6e, 0x74, 0x65, 0x64, 0x00, 0x62, 0x00, 0xba, 0x2d, 0x09, 0x4e, 
  0x61, 0x6d, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x00, 0x50, 0x54, 0x03, 
  0x69, 0x64, 0x78, 0x00, 
};

static const u8 data_segment_data_48[] = {
  0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x72, 
  0x65, 0x6d, 0x6f, 0x76, 0x65, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 
  0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x77, 0x61, 0x73, 0x20, 0x6e, 0x6f, 
  0x74, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x69, 
  0x6e, 0x64, 0x65, 0x78, 0x00, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x6f, 
  0x75, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x21, 
  0x00, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 
  0x20, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x72, 0x61, 0x6e, 0x67, 
  0x65, 0x00, 0x17, 0x68, 0x08, 0x4e, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 
  0x65, 0x00, 0xf7, 0x47, 0x0d, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 
  0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x00, 
};

static const u8 data_segment_data_49[] = {
  0x64, 0x62, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x32, 0x35, 
  0x36, 0x00, 
};

static const u8 data_segment_data_50[] = {
  0x64, 0x62, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x32, 
  0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_51[] = {
  0x64, 0x62, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x69, 0x32, 
  0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_52[] = {
  0x64, 0x62, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x32, 0x35, 0x36, 0x00, 
  
};

static const u8 data_segment_data_53[] = {
  0x64, 0x62, 0x5f, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x69, 0x32, 0x35, 0x36, 
  0x00, 
};

static const u8 data_segment_data_54[] = {
  0x64, 0x62, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 
  0x69, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_55[] = {
  0x64, 0x62, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x32, 0x35, 0x36, 
  0x00, 
};

static const u8 data_segment_data_56[] = {
  0x64, 0x62, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x32, 0x35, 0x36, 0x00, 
  
};

static const u8 data_segment_data_57[] = {
  0x64, 0x62, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 
  0x64, 0x5f, 0x69, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_58[] = {
  0x64, 0x62, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 
  0x64, 0x5f, 0x69, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_59[] = {
  0x64, 0x62, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 
  0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x00, 
};

static const u8 data_segment_data_60[] = {
  0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1c, 0x16, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x34, 0x7e, 0x00, 0x00, 0x0c, 0x00, 0xfb, 0x00, 0x05, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 
  0x08, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x8c, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x48, 0x84, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x20, 0x00, 0x43, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 
  0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x43, 0x01, 
  0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x40, 0x5c, 0x00, 0x00, 0x3a, 0x02, 0x00, 0x00, 0x5c, 0x5c, 0x00, 0x00, 
  0x52, 0x04, 0x00, 0x00, 0x64, 0x5c, 0x00, 0x00, 0xda, 0x04, 0x00, 0x00, 
  0x50, 0x5c, 0x00, 0x00, 0xda, 0x0b, 0x00, 0x00, 0x6c, 0x5c, 0x00, 0x00, 
  0xa4, 0x7b, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
  0x20, 0x5c, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 
  0x10, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 
  0x13, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x20, 0x00, 0xf9, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x60, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 
  0x24, 0x61, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 
  0x18, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 
  0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x1b, 0x00, 0x00, 0x00, 
  0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 
  0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x5e, 0x00, 0x00, 
  0x34, 0x7e, 0x00, 0x00, 0x08, 0x00, 0x40, 0x01, 0x1b, 0x00, 0x00, 0x00, 
  0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 
  0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x5f, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x1a, 0x07, 0x00, 0x00, 0x54, 0x5e, 0x00, 0x00, 0x32, 0x02, 0x00, 0x00, 
  0x5c, 0x5e, 0x00, 0x00, 0x4a, 0x02, 0x00, 0x00, 0x64, 0x5e, 0x00, 0x00, 
  0x4a, 0x09, 0x00, 0x00, 0x6c, 0x5e, 0x00, 0x00, 0x32, 0x09, 0x00, 0x00, 
  0x30, 0x5e, 0x00, 0x00, 0x3a, 0x09, 0x00, 0x00, 0x3c, 0x5e, 0x00, 0x00, 
  0xa2, 0x0a, 0x00, 0x00, 0x74, 0x5e, 0x00, 0x00, 0xaa, 0x0a, 0x00, 0x00, 
  0x7c, 0x5e, 0x00, 0x00, 0xca, 0x0a, 0x00, 0x00, 0x84, 0x5e, 0x00, 0x00, 
  0xea, 0x0a, 0x00, 0x00, 0x8c, 0x5e, 0x00, 0x00, 0xf2, 0x0a, 0x00, 0x00, 
  0x94, 0x5e, 0x00, 0x00, 0xc2, 0x03, 0x00, 0x00, 0x9c, 0x5e, 0x00, 0x00, 
  0x02, 0x04, 0x00, 0x00, 0xa4, 0x5e, 0x00, 0x00, 0x42, 0x0d, 0x00, 0x00, 
  0xac, 0x5e, 0x00, 0x00, 0x4a, 0x0d, 0x00, 0x00, 0xb4, 0x5e, 0x00, 0x00, 
  0x3a, 0x0e, 0x00, 0x00, 0xbc, 0x5e, 0x00, 0x00, 0xfa, 0x04, 0x00, 0x00, 
  0x48, 0x5e, 0x00, 0x00, 0x62, 0x05, 0x00, 0x00, 0x04, 0x5d, 0x00, 0x00, 
  0xa4, 0x7b, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 
  0x90, 0x5d, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x03, 0x00, 
  0x20, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x03, 0x00, 
  0x21, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x03, 0x00, 
  0x22, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x25, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 
  0x28, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 
  0x2b, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 
  0x2e, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4a, 0x02, 0x00, 0x00, 
  0x64, 0x5e, 0x00, 0x00, 0x32, 0x09, 0x00, 0x00, 0x30, 0x5e, 0x00, 0x00, 
  0xa2, 0x0a, 0x00, 0x00, 0x74, 0x5e, 0x00, 0x00, 0xca, 0x0a, 0x00, 0x00, 
  0x84, 0x5e, 0x00, 0x00, 0xea, 0x0a, 0x00, 0x00, 0x8c, 0x5e, 0x00, 0x00, 
  0xf2, 0x0a, 0x00, 0x00, 0x94, 0x5e, 0x00, 0x00, 0x42, 0x0d, 0x00, 0x00, 
  0xac, 0x5e, 0x00, 0x00, 0x3a, 0x0e, 0x00, 0x00, 0xbc, 0x5e, 0x00, 0x00, 
  0x62, 0x05, 0x00, 0x00, 0x04, 0x5d, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 
  0x4f, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0xd0, 0x5e, 0x00, 0x00, 
  0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0xa5, 0x01, 0x31, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x34, 0x00, 0x00, 0x00, 
  0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 
  0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 
  0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x5f, 0x00, 0x00, 
  0xe2, 0x01, 0x00, 0x00, 0x20, 0x60, 0x00, 0x00, 0x32, 0x02, 0x00, 0x00, 
  0x28, 0x60, 0x00, 0x00, 0x4a, 0x02, 0x00, 0x00, 0x30, 0x60, 0x00, 0x00, 
  0x52, 0x02, 0x00, 0x00, 0x38, 0x60, 0x00, 0x00, 0x92, 0x02, 0x00, 0x00, 
  0x40, 0x60, 0x00, 0x00, 0xe2, 0x02, 0x00, 0x00, 0x08, 0x60, 0x00, 0x00, 
  0xea, 0x02, 0x00, 0x00, 0x48, 0x60, 0x00, 0x00, 0xc2, 0x03, 0x00, 0x00, 
  0x14, 0x60, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x50, 0x60, 0x00, 0x00, 
  0x1a, 0x04, 0x00, 0x00, 0x58, 0x60, 0x00, 0x00, 0x7a, 0x04, 0x00, 0x00, 
  0x60, 0x60, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 
  0x0b, 0x00, 0x00, 0x00, 0xa0, 0x5f, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x08, 0x00, 0x04, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x04, 0x00, 0x02, 0x00, 0x3b, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 
  0x3c, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 
  0x3f, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
  0x24, 0x61, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0x44, 0x00, 0x00, 0x00, 
  0x0a, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x60, 0x00, 0x41, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 
  0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x60, 0x00, 0x41, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 
  0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x60, 0x00, 0x41, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 
  0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x60, 0x00, 0x41, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 
  0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x60, 0x00, 0x41, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 
  0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x20, 0x00, 0x41, 0x01, 
  0x4a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 
  0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x0c, 0x00, 0x3a, 0x01, 
  0x4c, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x4e, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x30, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xaa, 0x02, 0x00, 0x00, 0x40, 0x62, 0x00, 0x00, 
  0xe2, 0x04, 0x00, 0x00, 0x48, 0x62, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 
  0x17, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x62, 0x00, 0x00, 
  0xf8, 0x7e, 0x00, 0x00, 0x54, 0x62, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0xfe, 0xff, 0x03, 0x00, 0x50, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0xfe, 0xff, 0x05, 0x00, 0x51, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x73, 0x01, 0x53, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xaa, 0x02, 0x00, 0x00, 0xd0, 0x62, 0x00, 0x00, 0xe2, 0x04, 0x00, 0x00, 
  0xd8, 0x62, 0x00, 0x00, 0x8a, 0x0d, 0x00, 0x00, 0xe4, 0x62, 0x00, 0x00, 
  0x92, 0x0d, 0x00, 0x00, 0xf0, 0x62, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 
  0x27, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa0, 0x62, 0x00, 0x00, 
  0xf8, 0x7e, 0x00, 0x00, 0xfc, 0x62, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0xfe, 0xff, 0x03, 0x00, 0x57, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0xfe, 0xff, 0x03, 0x00, 0x58, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0xfe, 0xff, 0x03, 0x00, 0x59, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0xfe, 0xff, 0x05, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0xf2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x5b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x63, 0x00, 0x00, 
  0x23, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 0x0a, 0x00, 0x02, 0x00, 
  0x60, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x08, 0x00, 0x3e, 0x00, 
  0x61, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x63, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0xe5, 0x00, 
  0x66, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x68, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x65, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x6b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x68, 0x64, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x08, 0x00, 0x40, 0x00, 
  0x66, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x68, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x65, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x6b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x68, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xe2, 0x01, 0x00, 0x00, 0x78, 0x64, 0x00, 0x00, 0x92, 0x02, 0x00, 0x00, 
  0x80, 0x64, 0x00, 0x00, 0x02, 0x09, 0x00, 0x00, 0xd4, 0x80, 0x00, 0x00, 
  0xa4, 0x7b, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 
  0x50, 0x64, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x60, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 
  0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x30, 0x01, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 
  0x71, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 
  0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 
  0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xd8, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x62, 0x0a, 0x00, 0x00, 
  0xe8, 0x65, 0x00, 0x00, 0xfa, 0x0c, 0x00, 0x00, 0xf0, 0x65, 0x00, 0x00, 
  0x22, 0x09, 0x00, 0x00, 0xf8, 0x65, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 
  0x1f, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xc0, 0x65, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 
  0x78, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 
  0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x7a, 0x00, 0x00, 0x00, 
  0x7b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 
  0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x60, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x0e, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x0e, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x0e, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x05, 0x00, 0x85, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x86, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x87, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x8a, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x8e, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0xff, 0xff, 0x03, 0x00, 0x91, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0xff, 0xff, 0x03, 0x00, 0x92, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x93, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x06, 0x00, 0x04, 0x00, 0x96, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0xff, 0xff, 0x01, 0x00, 0x97, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x98, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0x9a, 0x00, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0x9b, 0x00, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0x9c, 0x00, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0x9d, 0x00, 0x00, 0x00, 
  0x24, 0x61, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 
  0x9f, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 
  0x70, 0x60, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 0x70, 0x60, 0x00, 0x00, 
  0xa2, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0xfa, 0x01, 0x00, 0x00, 
  0x5a, 0x05, 0x00, 0x00, 0xf0, 0x66, 0x00, 0x00, 0xaa, 0x05, 0x00, 0x00, 
  0x88, 0x63, 0x00, 0x00, 0x22, 0x06, 0x00, 0x00, 0xa0, 0x67, 0x00, 0x00, 
  0xf2, 0x01, 0x00, 0x00, 0x94, 0x63, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 
  0xec, 0x80, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x0c, 0x64, 0x00, 0x00, 
  0xda, 0x07, 0x00, 0x00, 0x20, 0x5b, 0x00, 0x00, 0x5a, 0x02, 0x00, 0x00, 
  0xa4, 0x7b, 0x00, 0x00, 0x82, 0x09, 0x00, 0x00, 0xc4, 0x64, 0x00, 0x00, 
  0xc2, 0x09, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0xca, 0x09, 0x00, 0x00, 
  0x48, 0x83, 0x00, 0x00, 0xd2, 0x09, 0x00, 0x00, 0xd8, 0x61, 0x00, 0x00, 
  0x02, 0x0a, 0x00, 0x00, 0x48, 0x5d, 0x00, 0x00, 0xf2, 0x02, 0x00, 0x00, 
  0xb8, 0x83, 0x00, 0x00, 0x9a, 0x0b, 0x00, 0x00, 0x60, 0x62, 0x00, 0x00, 
  0x62, 0x03, 0x00, 0x00, 0x64, 0x5f, 0x00, 0x00, 0x92, 0x03, 0x00, 0x00, 
  0x3c, 0x65, 0x00, 0x00, 0xaa, 0x03, 0x00, 0x00, 0xac, 0x7d, 0x00, 0x00, 
  0x0a, 0x0c, 0x00, 0x00, 0x78, 0x65, 0x00, 0x00, 0xe2, 0x03, 0x00, 0x00, 
  0x00, 0x66, 0x00, 0x00, 0x72, 0x0c, 0x00, 0x00, 0x78, 0x66, 0x00, 0x00, 
  0x62, 0x04, 0x00, 0x00, 0x0c, 0x5d, 0x00, 0x00, 0x2a, 0x0d, 0x00, 0x00, 
  0x28, 0x5f, 0x00, 0x00, 0xba, 0x04, 0x00, 0x00, 0x18, 0x82, 0x00, 0x00, 
  0xd2, 0x04, 0x00, 0x00, 0xac, 0x7e, 0x00, 0x00, 0xea, 0x04, 0x00, 0x00, 
  0x50, 0x84, 0x00, 0x00, 0xf2, 0x04, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x2a, 0x05, 0x00, 0x00, 0xb4, 0x66, 0x00, 0x00, 0x2a, 0x02, 0x00, 0x00, 
  0xf8, 0x7e, 0x00, 0x00, 0xa2, 0x04, 0x00, 0x00, 0x70, 0x7e, 0x00, 0x00, 
  0x1a, 0x01, 0x00, 0x00, 0x80, 0x63, 0x00, 0x00, 0xca, 0x01, 0x00, 0x00, 
  0xfc, 0x66, 0x00, 0x00, 0xd2, 0x01, 0x00, 0x00, 0x04, 0x67, 0x00, 0x00, 
  0xda, 0x01, 0x00, 0x00, 0x0c, 0x67, 0x00, 0x00, 0x8a, 0x07, 0x00, 0x00, 
  0x14, 0x67, 0x00, 0x00, 0x1a, 0x02, 0x00, 0x00, 0x1c, 0x67, 0x00, 0x00, 
  0x22, 0x02, 0x00, 0x00, 0x24, 0x67, 0x00, 0x00, 0x1a, 0x09, 0x00, 0x00, 
  0xe8, 0x67, 0x00, 0x00, 0x62, 0x02, 0x00, 0x00, 0x2c, 0x67, 0x00, 0x00, 
  0x6a, 0x02, 0x00, 0x00, 0x38, 0x67, 0x00, 0x00, 0xba, 0x02, 0x00, 0x00, 
  0xd4, 0x67, 0x00, 0x00, 0x6a, 0x04, 0x00, 0x00, 0xe0, 0x67, 0x00, 0x00, 
  0xc2, 0x02, 0x00, 0x00, 0xf8, 0x67, 0x00, 0x00, 0xca, 0x02, 0x00, 0x00, 
  0xf0, 0x67, 0x00, 0x00, 0xd2, 0x02, 0x00, 0x00, 0x40, 0x67, 0x00, 0x00, 
  0x82, 0x0a, 0x00, 0x00, 0x48, 0x67, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00, 
  0x08, 0x68, 0x00, 0x00, 0x0a, 0x03, 0x00, 0x00, 0xf0, 0x7e, 0x00, 0x00, 
  0x22, 0x03, 0x00, 0x00, 0xe8, 0x7e, 0x00, 0x00, 0x3a, 0x03, 0x00, 0x00, 
  0x50, 0x67, 0x00, 0x00, 0x5a, 0x03, 0x00, 0x00, 0x10, 0x68, 0x00, 0x00, 
  0x72, 0x03, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x5a, 0x0b, 0x00, 0x00, 
  0x58, 0x67, 0x00, 0x00, 0x6a, 0x0b, 0x00, 0x00, 0x64, 0x67, 0x00, 0x00, 
  0xa2, 0x03, 0x00, 0x00, 0x70, 0x67, 0x00, 0x00, 0xaa, 0x0b, 0x00, 0x00, 
  0x78, 0x67, 0x00, 0x00, 0xba, 0x03, 0x00, 0x00, 0x80, 0x67, 0x00, 0x00, 
  0xd2, 0x03, 0x00, 0x00, 0x88, 0x67, 0x00, 0x00, 0xda, 0x03, 0x00, 0x00, 
  0x94, 0x67, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 0xa8, 0x67, 0x00, 0x00, 
  0x32, 0x04, 0x00, 0x00, 0xb0, 0x67, 0x00, 0x00, 0x82, 0x04, 0x00, 0x00, 
  0xc8, 0x67, 0x00, 0x00, 0xca, 0x04, 0x00, 0x00, 0xbc, 0x67, 0x00, 0x00, 
  0x0a, 0x01, 0x00, 0x00, 0xd8, 0x8c, 0x00, 0x00, 0xf2, 0x00, 0x00, 0x00, 
  0x04, 0x8e, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 0xb8, 0x8e, 0x00, 0x00, 
  0x02, 0x01, 0x00, 0x00, 0xf4, 0x8e, 0x00, 0x00, 0x12, 0x01, 0x00, 0x00, 
  0x30, 0x8f, 0x00, 0x00, 0x22, 0x01, 0x00, 0x00, 0xc8, 0x8d, 0x00, 0x00, 
  0x2a, 0x01, 0x00, 0x00, 0x8c, 0x8d, 0x00, 0x00, 0x32, 0x01, 0x00, 0x00, 
  0x6c, 0x8f, 0x00, 0x00, 0x3a, 0x01, 0x00, 0x00, 0xc4, 0x91, 0x00, 0x00, 
  0x42, 0x01, 0x00, 0x00, 0xe4, 0x8f, 0x00, 0x00, 0x52, 0x01, 0x00, 0x00, 
  0x50, 0x8d, 0x00, 0x00, 0x4a, 0x01, 0x00, 0x00, 0x20, 0x90, 0x00, 0x00, 
  0x5a, 0x01, 0x00, 0x00, 0xa8, 0x8f, 0x00, 0x00, 0x62, 0x01, 0x00, 0x00, 
  0x5c, 0x90, 0x00, 0x00, 0x6a, 0x01, 0x00, 0x00, 0x98, 0x90, 0x00, 0x00, 
  0x7a, 0x01, 0x00, 0x00, 0x4c, 0x91, 0x00, 0x00, 0x82, 0x01, 0x00, 0x00, 
  0xd4, 0x90, 0x00, 0x00, 0x8a, 0x01, 0x00, 0x00, 0x40, 0x8e, 0x00, 0x00, 
  0x92, 0x01, 0x00, 0x00, 0x10, 0x91, 0x00, 0x00, 0x9a, 0x01, 0x00, 0x00, 
  0x9c, 0x8c, 0x00, 0x00, 0xa2, 0x01, 0x00, 0x00, 0x88, 0x91, 0x00, 0x00, 
  0xaa, 0x01, 0x00, 0x00, 0x14, 0x8d, 0x00, 0x00, 0xb2, 0x01, 0x00, 0x00, 
  0x00, 0x92, 0x00, 0x00, 0xd2, 0x06, 0x00, 0x00, 0x78, 0x92, 0x00, 0x00, 
  0xba, 0x01, 0x00, 0x00, 0x3c, 0x92, 0x00, 0x00, 0xc2, 0x01, 0x00, 0x00, 
  0x7c, 0x8e, 0x00, 0x00, 0xb2, 0x03, 0x00, 0x00, 0xb4, 0x92, 0x00, 0x00, 
  0xa4, 0x7b, 0x00, 0x00, 0xdf, 0x02, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00, 
  0x20, 0x68, 0x00, 0x00, 0x40, 0x74, 0x00, 0x00, 0xf8, 0x6a, 0x00, 0x00, 
  0xff, 0xff, 0xff, 0xff, 0x40, 0x74, 0x00, 0x00, 0x48, 0x6b, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0x9a, 0x03, 0x00, 0x00, 
  0x42, 0x02, 0x00, 0x00, 0xb0, 0x7f, 0x00, 0x00, 0x1a, 0x0c, 0x00, 0x00, 
  0x58, 0x6b, 0x00, 0x00, 0x0a, 0x0b, 0x00, 0x00, 0x60, 0x6b, 0x00, 0x00, 
  0xaa, 0x0c, 0x00, 0x00, 0x68, 0x6b, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 
  0x2f, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x20, 0x6b, 0x00, 0x00, 
  0x70, 0x60, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xa6, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0xa8, 0x00, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0xa9, 0x00, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0xaa, 0x00, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0xab, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0xac, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x06, 0x00, 0x04, 0x00, 0xad, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xae, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xaf, 0x00, 0x00, 0x00, 
  0xb0, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0xd9, 0x00, 
  0xb3, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xc4, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xb8, 0x6c, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00, 
  0xb2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0xd7, 0x00, 0xb3, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 
  0xb5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x6c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xb8, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xea, 0x03, 0x00, 0x00, 0x70, 0x6b, 0x00, 0x00, 0xf2, 0x03, 0x00, 0x00, 
  0x88, 0x6b, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0x94, 0x6b, 0x00, 0x00, 
  0x22, 0x05, 0x00, 0x00, 0x7c, 0x6b, 0x00, 0x00, 0xb2, 0x0c, 0x00, 0x00, 
  0xa8, 0x6b, 0x00, 0x00, 0x7a, 0x0d, 0x00, 0x00, 0xb4, 0x6b, 0x00, 0x00, 
  0xe2, 0x09, 0x00, 0x00, 0xbc, 0x6b, 0x00, 0x00, 0x3a, 0x02, 0x00, 0x00, 
  0xa0, 0x6b, 0x00, 0x00, 0x6a, 0x0a, 0x00, 0x00, 0xd4, 0x6c, 0x00, 0x00, 
  0x62, 0x00, 0x00, 0x00, 0xb0, 0x7f, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 
  0xc8, 0x6c, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 
  0x0b, 0x00, 0x00, 0x00, 0x60, 0x6c, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x08, 0x00, 0x08, 0x00, 0xb6, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xb7, 0x00, 0x00, 0x00, 0x40, 0x74, 0x00, 0x00, 0x10, 0x6d, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xba, 0x00, 0x00, 0x00, 0x22, 0x0e, 0x00, 0x00, 0xb2, 0x03, 0x00, 0x00, 
  0xb4, 0x92, 0x00, 0x00, 0xca, 0x06, 0x00, 0x00, 0xd4, 0x6b, 0x00, 0x00, 
  0xba, 0x06, 0x00, 0x00, 0x20, 0x6c, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 
  0x27, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf0, 0x6c, 0x00, 0x00, 
  0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x9d, 0x00, 0xb8, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 
  0xba, 0x00, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00, 
  0xbd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x40, 0x74, 0x00, 0x00, 
  0x88, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 
  0x12, 0x0e, 0x00, 0x00, 0xa2, 0x0b, 0x00, 0x00, 0x5c, 0x6d, 0x00, 0x00, 
  0xc2, 0x06, 0x00, 0x00, 0xf0, 0x7b, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 
  0x1f, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x70, 0x6d, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x06, 0x00, 0x04, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0xfe, 0xff, 0x03, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0xfe, 0xff, 0x07, 0x00, 0xc5, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xc6, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 
  0x40, 0x74, 0x00, 0x00, 0x20, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xba, 0x00, 0x00, 0x00, 0x5a, 0x0e, 0x00, 0x00, 0xa2, 0x07, 0x00, 0x00, 
  0x98, 0x6d, 0x00, 0x00, 0xb2, 0x0b, 0x00, 0x00, 0xac, 0x6d, 0x00, 0x00, 
  0xba, 0x0b, 0x00, 0x00, 0xb8, 0x6d, 0x00, 0x00, 0x42, 0x0e, 0x00, 0x00, 
  0xa0, 0x6d, 0x00, 0x00, 0x4a, 0x0e, 0x00, 0x00, 0xa0, 0x6d, 0x00, 0x00, 
  0xc2, 0x0b, 0x00, 0x00, 0xc4, 0x6d, 0x00, 0x00, 0x52, 0x0e, 0x00, 0x00, 
  0xcc, 0x6d, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 
  0x08, 0x00, 0x00, 0x00, 0xe0, 0x6d, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0xff, 0xff, 0x05, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x40, 0x74, 0x00, 0x00, 
  0xa0, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0x52, 0x0b, 0x00, 0x00, 
  0x6a, 0x09, 0x00, 0x00, 0x88, 0x83, 0x00, 0x00, 0xea, 0x0b, 0x00, 0x00, 
  0x98, 0x83, 0x00, 0x00, 0x3a, 0x0d, 0x00, 0x00, 0xbc, 0x6f, 0x00, 0x00, 
  0xd2, 0x03, 0x00, 0x00, 0xc4, 0x6f, 0x00, 0x00, 0xa2, 0x09, 0x00, 0x00, 
  0xcc, 0x6f, 0x00, 0x00, 0xb2, 0x09, 0x00, 0x00, 0xd4, 0x6f, 0x00, 0x00, 
  0x3a, 0x0b, 0x00, 0x00, 0xb0, 0x6f, 0x00, 0x00, 0x4a, 0x0b, 0x00, 0x00, 
  0xdc, 0x6f, 0x00, 0x00, 0x42, 0x0b, 0x00, 0x00, 0xe4, 0x6f, 0x00, 0x00, 
  0xf2, 0x07, 0x00, 0x00, 0xec, 0x6f, 0x00, 0x00, 0x22, 0x0d, 0x00, 0x00, 
  0xf4, 0x6f, 0x00, 0x00, 0x62, 0x0d, 0x00, 0x00, 0xfc, 0x6f, 0x00, 0x00, 
  0xf2, 0x06, 0x00, 0x00, 0x04, 0x70, 0x00, 0x00, 0x3a, 0x07, 0x00, 0x00, 
  0x0c, 0x70, 0x00, 0x00, 0x7a, 0x07, 0x00, 0x00, 0x14, 0x70, 0x00, 0x00, 
  0xea, 0x07, 0x00, 0x00, 0x1c, 0x70, 0x00, 0x00, 0x1a, 0x0d, 0x00, 0x00, 
  0x24, 0x70, 0x00, 0x00, 0x5a, 0x0d, 0x00, 0x00, 0x2c, 0x70, 0x00, 0x00, 
  0xea, 0x06, 0x00, 0x00, 0x34, 0x70, 0x00, 0x00, 0x32, 0x07, 0x00, 0x00, 
  0x3c, 0x70, 0x00, 0x00, 0x6a, 0x07, 0x00, 0x00, 0x44, 0x70, 0x00, 0x00, 
  0x72, 0x07, 0x00, 0x00, 0x4c, 0x70, 0x00, 0x00, 0xb2, 0x07, 0x00, 0x00, 
  0x54, 0x70, 0x00, 0x00, 0xe2, 0x07, 0x00, 0x00, 0x5c, 0x70, 0x00, 0x00, 
  0xba, 0x09, 0x00, 0x00, 0x64, 0x70, 0x00, 0x00, 0xda, 0x09, 0x00, 0x00, 
  0x6c, 0x70, 0x00, 0x00, 0xea, 0x09, 0x00, 0x00, 0x74, 0x70, 0x00, 0x00, 
  0xf2, 0x09, 0x00, 0x00, 0x7c, 0x70, 0x00, 0x00, 0x1a, 0x0b, 0x00, 0x00, 
  0x84, 0x70, 0x00, 0x00, 0x72, 0x0b, 0x00, 0x00, 0x8c, 0x70, 0x00, 0x00, 
  0xd2, 0x0a, 0x00, 0x00, 0x94, 0x70, 0x00, 0x00, 0xda, 0x0a, 0x00, 0x00, 
  0x9c, 0x70, 0x00, 0x00, 0xe2, 0x0a, 0x00, 0x00, 0xa4, 0x70, 0x00, 0x00, 
  0xc2, 0x0a, 0x00, 0x00, 0x30, 0x6e, 0x00, 0x00, 0xfa, 0x0d, 0x00, 0x00, 
  0xac, 0x70, 0x00, 0x00, 0x22, 0x0c, 0x00, 0x00, 0xb4, 0x70, 0x00, 0x00, 
  0x12, 0x09, 0x00, 0x00, 0xbc, 0x70, 0x00, 0x00, 0x8a, 0x09, 0x00, 0x00, 
  0xc4, 0x70, 0x00, 0x00, 0x92, 0x09, 0x00, 0x00, 0xcc, 0x70, 0x00, 0x00, 
  0x12, 0x0a, 0x00, 0x00, 0xd4, 0x70, 0x00, 0x00, 0x22, 0x0b, 0x00, 0x00, 
  0xdc, 0x70, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 0x57, 0x01, 0x00, 0x00, 
  0x2a, 0x00, 0x00, 0x00, 0x50, 0x6e, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x04, 0x00, 0x02, 0x00, 0xc9, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xca, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0xcb, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xcd, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xce, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xd0, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xd1, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0xd2, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xd3, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xd4, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0xd5, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xd6, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xd7, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xd9, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0xdb, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 
  0xdc, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xdd, 0x00, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0xde, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xdf, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0xe1, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xe2, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0xe3, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xe5, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xe6, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0xe7, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xe8, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xe9, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0xea, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xeb, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0xed, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xee, 0x00, 0x00, 0x00, 0x40, 0x74, 0x00, 0x00, 0x50, 0x71, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0xd2, 0x07, 0x00, 0x00, 
  0x6a, 0x09, 0x00, 0x00, 0x88, 0x83, 0x00, 0x00, 0xea, 0x0b, 0x00, 0x00, 
  0x98, 0x83, 0x00, 0x00, 0xe2, 0x0b, 0x00, 0x00, 0x60, 0x71, 0x00, 0x00, 
  0xfa, 0x0b, 0x00, 0x00, 0x68, 0x71, 0x00, 0x00, 0x4a, 0x0c, 0x00, 0x00, 
  0x70, 0x71, 0x00, 0x00, 0xa2, 0x09, 0x00, 0x00, 0x78, 0x71, 0x00, 0x00, 
  0x3a, 0x0b, 0x00, 0x00, 0x80, 0x71, 0x00, 0x00, 0x42, 0x0b, 0x00, 0x00, 
  0x88, 0x71, 0x00, 0x00, 0x3a, 0x0d, 0x00, 0x00, 0x90, 0x71, 0x00, 0x00, 
  0xea, 0x07, 0x00, 0x00, 0x98, 0x71, 0x00, 0x00, 0x1a, 0x0d, 0x00, 0x00, 
  0xa0, 0x71, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 
  0x0c, 0x00, 0x00, 0x00, 0xf0, 0x70, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xef, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0xf1, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xf2, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xf3, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0xf4, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xf5, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xf6, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0xf7, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x02, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x04, 0x00, 0x02, 0x00, 0xf9, 0x00, 0x00, 0x00, 0x40, 0x74, 0x00, 0x00, 
  0x30, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xba, 0x00, 0x00, 0x00, 0x52, 0x0d, 0x00, 0x00, 0xd2, 0x0b, 0x00, 0x00, 
  0x98, 0x14, 0x00, 0x00, 0x22, 0x07, 0x00, 0x00, 0xa8, 0x14, 0x00, 0x00, 
  0x82, 0x0e, 0x00, 0x00, 0x40, 0x72, 0x00, 0x00, 0x8a, 0x0e, 0x00, 0x00, 
  0x60, 0x72, 0x00, 0x00, 0x9a, 0x0a, 0x00, 0x00, 0x74, 0x72, 0x00, 0x00, 
  0xf2, 0x0b, 0x00, 0x00, 0x50, 0x72, 0x00, 0x00, 0x9a, 0x07, 0x00, 0x00, 
  0x6a, 0x03, 0x00, 0x00, 0x62, 0x0b, 0x00, 0x00, 0xa8, 0x83, 0x00, 0x00, 
  0x9a, 0x09, 0x00, 0x00, 0xa8, 0x71, 0x00, 0x00, 0x82, 0x0b, 0x00, 0x00, 
  0x6c, 0x14, 0x00, 0x00, 0x02, 0x0c, 0x00, 0x00, 0xb4, 0x71, 0x00, 0x00, 
  0xa4, 0x7b, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 
  0xd0, 0x71, 0x00, 0x00, 0x18, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x05, 0x00, 0x00, 0x00, 0x38, 0x2a, 0x00, 0x00, 0x18, 0x82, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xb4, 0x38, 0x00, 0x00, 
  0x50, 0x84, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 
  0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x6d, 0x00, 0x00, 
  0x03, 0x00, 0x00, 0x00, 0x9a, 0x03, 0x00, 0x00, 0x8c, 0x72, 0x00, 0x00, 
  0x0b, 0x04, 0x00, 0x00, 0xc0, 0xa7, 0x00, 0x00, 0x50, 0x84, 0x00, 0x00, 
  0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x00, 0x00, 0x40, 0x74, 0x00, 0x00, 0xd8, 0x72, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 
  0x2a, 0x0e, 0x00, 0x00, 0x5a, 0x09, 0x00, 0x00, 0xe8, 0x72, 0x00, 0x00, 
  0x62, 0x09, 0x00, 0x00, 0xf0, 0x72, 0x00, 0x00, 0x2a, 0x0b, 0x00, 0x00, 
  0xf8, 0x72, 0x00, 0x00, 0x32, 0x0b, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 
  0xa4, 0x7b, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 
  0xb0, 0x72, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xfd, 0x00, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 
  0x40, 0x74, 0x00, 0x00, 0x20, 0x73, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 
  0x1a, 0x0e, 0x00, 0x00, 0x0a, 0x0d, 0x00, 0x00, 0x30, 0x73, 0x00, 0x00, 
  0xa4, 0x7b, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0x10, 0x73, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0xa1, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x80, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x04, 0x00, 0x00, 
  0x90, 0x73, 0x00, 0x00, 0x42, 0x09, 0x00, 0x00, 0x98, 0x73, 0x00, 0x00, 
  0xa4, 0x7b, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0x70, 0x73, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x40, 0x74, 0x00, 0x00, 
  0xd8, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xba, 0x00, 0x00, 0x00, 0x0a, 0x0e, 0x00, 0x00, 0x8a, 0x0a, 0x00, 0x00, 
  0xe8, 0x73, 0x00, 0x00, 0x32, 0x0e, 0x00, 0x00, 0xf4, 0x73, 0x00, 0x00, 
  0xda, 0x06, 0x00, 0x00, 0xfc, 0x73, 0x00, 0x00, 0x82, 0x07, 0x00, 0x00, 
  0x04, 0x74, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 
  0x05, 0x00, 0x00, 0x00, 0xb0, 0x73, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x04, 0x00, 0x02, 0x00, 0x02, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x03, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x05, 0x01, 0x00, 0x00, 0x40, 0x74, 0x00, 0x00, 
  0x30, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0x02, 0x0e, 0x00, 0x00, 
  0x2a, 0x07, 0x00, 0x00, 0xd0, 0x63, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 
  0x17, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x74, 0x00, 0x00, 
  0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x6f, 0x01, 0x06, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x00, 0x85, 0x00, 0x00, 
  0xfa, 0x01, 0x00, 0x00, 0x08, 0x6b, 0x00, 0x00, 0x9a, 0x03, 0x00, 0x00, 
  0x14, 0x6b, 0x00, 0x00, 0x22, 0x0e, 0x00, 0x00, 0xdc, 0x6c, 0x00, 0x00, 
  0x12, 0x0e, 0x00, 0x00, 0x64, 0x6d, 0x00, 0x00, 0x5a, 0x0e, 0x00, 0x00, 
  0xd4, 0x6d, 0x00, 0x00, 0x52, 0x0b, 0x00, 0x00, 0x3c, 0x6e, 0x00, 0x00, 
  0xd2, 0x07, 0x00, 0x00, 0xe4, 0x70, 0x00, 0x00, 0x62, 0x0e, 0x00, 0x00, 
  0xc0, 0x71, 0x00, 0x00, 0x2a, 0x0e, 0x00, 0x00, 0xa0, 0x72, 0x00, 0x00, 
  0x1a, 0x0e, 0x00, 0x00, 0x08, 0x73, 0x00, 0x00, 0x0a, 0x0e, 0x00, 0x00, 
  0xa0, 0x73, 0x00, 0x00, 0x6a, 0x0e, 0x00, 0x00, 0xc8, 0x92, 0x00, 0x00, 
  0x02, 0x0e, 0x00, 0x00, 0x0c, 0x74, 0x00, 0x00, 0x7a, 0x0a, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xc2, 0x07, 0x00, 0x00, 0x0c, 0x75, 0x00, 0x00, 
  0x87, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x80, 0x74, 0x00, 0x00, 
  0x40, 0x74, 0x00, 0x00, 0x30, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 
  0xc2, 0x07, 0x00, 0x00, 0x92, 0x0c, 0x00, 0x00, 0xfc, 0x79, 0x00, 0x00, 
  0x8a, 0x0c, 0x00, 0x00, 0x04, 0x7a, 0x00, 0x00, 0x92, 0x0b, 0x00, 0x00, 
  0x0c, 0x7a, 0x00, 0x00, 0x2a, 0x0c, 0x00, 0x00, 0x40, 0x78, 0x00, 0x00, 
  0x6a, 0x0c, 0x00, 0x00, 0x14, 0x7a, 0x00, 0x00, 0x5a, 0x0c, 0x00, 0x00, 
  0x1c, 0x7a, 0x00, 0x00, 0x62, 0x0c, 0x00, 0x00, 0x24, 0x7a, 0x00, 0x00, 
  0x72, 0x0a, 0x00, 0x00, 0x2c, 0x7a, 0x00, 0x00, 0xb2, 0x0a, 0x00, 0x00, 
  0x34, 0x7a, 0x00, 0x00, 0xca, 0x0c, 0x00, 0x00, 0x48, 0x78, 0x00, 0x00, 
  0xd2, 0x0c, 0x00, 0x00, 0x3c, 0x7a, 0x00, 0x00, 0xba, 0x0c, 0x00, 0x00, 
  0x54, 0x78, 0x00, 0x00, 0xc2, 0x0c, 0x00, 0x00, 0x44, 0x7a, 0x00, 0x00, 
  0xba, 0x0c, 0x00, 0x00, 0x54, 0x78, 0x00, 0x00, 0x12, 0x0c, 0x00, 0x00, 
  0x60, 0x78, 0x00, 0x00, 0xfa, 0x07, 0x00, 0x00, 0x68, 0x78, 0x00, 0x00, 
  0x2a, 0x0a, 0x00, 0x00, 0x70, 0x78, 0x00, 0x00, 0x0a, 0x07, 0x00, 0x00, 
  0x78, 0x78, 0x00, 0x00, 0xfa, 0x06, 0x00, 0x00, 0x84, 0x78, 0x00, 0x00, 
  0x12, 0x07, 0x00, 0x00, 0x4c, 0x7a, 0x00, 0x00, 0x02, 0x07, 0x00, 0x00, 
  0x54, 0x7a, 0x00, 0x00, 0xea, 0x0d, 0x00, 0x00, 0x90, 0x78, 0x00, 0x00, 
  0xca, 0x0d, 0x00, 0x00, 0x5c, 0x7a, 0x00, 0x00, 0xd2, 0x0d, 0x00, 0x00, 
  0x64, 0x7a, 0x00, 0x00, 0xf2, 0x0d, 0x00, 0x00, 0x9c, 0x78, 0x00, 0x00, 
  0xda, 0x0d, 0x00, 0x00, 0x6c, 0x7a, 0x00, 0x00, 0xe2, 0x0d, 0x00, 0x00, 
  0x74, 0x7a, 0x00, 0x00, 0x5a, 0x07, 0x00, 0x00, 0x7c, 0x7a, 0x00, 0x00, 
  0x52, 0x07, 0x00, 0x00, 0x84, 0x7a, 0x00, 0x00, 0x62, 0x07, 0x00, 0x00, 
  0x8c, 0x7a, 0x00, 0x00, 0x4a, 0x07, 0x00, 0x00, 0x94, 0x7a, 0x00, 0x00, 
  0x42, 0x07, 0x00, 0x00, 0x9c, 0x7a, 0x00, 0x00, 0x0a, 0x0d, 0x00, 0x00, 
  0xa4, 0x7a, 0x00, 0x00, 0x02, 0x0d, 0x00, 0x00, 0xac, 0x7a, 0x00, 0x00, 
  0x12, 0x0d, 0x00, 0x00, 0xb4, 0x7a, 0x00, 0x00, 0x7a, 0x0c, 0x00, 0x00, 
  0xbc, 0x7a, 0x00, 0x00, 0x42, 0x0c, 0x00, 0x00, 0xc4, 0x7a, 0x00, 0x00, 
  0xda, 0x08, 0x00, 0x00, 0xa8, 0x78, 0x00, 0x00, 0xea, 0x08, 0x00, 0x00, 
  0xcc, 0x7a, 0x00, 0x00, 0xca, 0x08, 0x00, 0x00, 0xd4, 0x7a, 0x00, 0x00, 
  0x32, 0x08, 0x00, 0x00, 0xdc, 0x7a, 0x00, 0x00, 0xaa, 0x08, 0x00, 0x00, 
  0xe4, 0x7a, 0x00, 0x00, 0xba, 0x08, 0x00, 0x00, 0xec, 0x7a, 0x00, 0x00, 
  0x22, 0x08, 0x00, 0x00, 0xb4, 0x78, 0x00, 0x00, 0x9a, 0x08, 0x00, 0x00, 
  0xc0, 0x78, 0x00, 0x00, 0xfa, 0x08, 0x00, 0x00, 0xcc, 0x78, 0x00, 0x00, 
  0x22, 0x08, 0x00, 0x00, 0xb4, 0x78, 0x00, 0x00, 0x12, 0x08, 0x00, 0x00, 
  0xd8, 0x78, 0x00, 0x00, 0xd2, 0x08, 0x00, 0x00, 0xe4, 0x78, 0x00, 0x00, 
  0xe2, 0x08, 0x00, 0x00, 0xf4, 0x7a, 0x00, 0x00, 0xc2, 0x08, 0x00, 0x00, 
  0xfc, 0x7a, 0x00, 0x00, 0x2a, 0x08, 0x00, 0x00, 0x04, 0x7b, 0x00, 0x00, 
  0xa2, 0x08, 0x00, 0x00, 0x0c, 0x7b, 0x00, 0x00, 0xb2, 0x08, 0x00, 0x00, 
  0x14, 0x7b, 0x00, 0x00, 0x1a, 0x08, 0x00, 0x00, 0xf0, 0x78, 0x00, 0x00, 
  0x92, 0x08, 0x00, 0x00, 0xfc, 0x78, 0x00, 0x00, 0xf2, 0x08, 0x00, 0x00, 
  0x08, 0x79, 0x00, 0x00, 0x1a, 0x08, 0x00, 0x00, 0xf0, 0x78, 0x00, 0x00, 
  0x0a, 0x08, 0x00, 0x00, 0x14, 0x79, 0x00, 0x00, 0x3a, 0x08, 0x00, 0x00, 
  0x1c, 0x7b, 0x00, 0x00, 0xaa, 0x07, 0x00, 0x00, 0x24, 0x7b, 0x00, 0x00, 
  0x3a, 0x0a, 0x00, 0x00, 0x2c, 0x7b, 0x00, 0x00, 0x7a, 0x08, 0x00, 0x00, 
  0x20, 0x79, 0x00, 0x00, 0x82, 0x08, 0x00, 0x00, 0x2c, 0x79, 0x00, 0x00, 
  0x72, 0x08, 0x00, 0x00, 0x34, 0x7b, 0x00, 0x00, 0x62, 0x08, 0x00, 0x00, 
  0x3c, 0x7b, 0x00, 0x00, 0x6a, 0x08, 0x00, 0x00, 0x44, 0x7b, 0x00, 0x00, 
  0x4a, 0x08, 0x00, 0x00, 0x38, 0x79, 0x00, 0x00, 0x52, 0x08, 0x00, 0x00, 
  0x44, 0x79, 0x00, 0x00, 0x5a, 0x08, 0x00, 0x00, 0x50, 0x79, 0x00, 0x00, 
  0x8a, 0x08, 0x00, 0x00, 0x5c, 0x79, 0x00, 0x00, 0x42, 0x08, 0x00, 0x00, 
  0x68, 0x79, 0x00, 0x00, 0x5a, 0x0a, 0x00, 0x00, 0x4c, 0x7b, 0x00, 0x00, 
  0xf2, 0x0c, 0x00, 0x00, 0x74, 0x79, 0x00, 0x00, 0xea, 0x0c, 0x00, 0x00, 
  0x54, 0x7b, 0x00, 0x00, 0xba, 0x0a, 0x00, 0x00, 0x5c, 0x7b, 0x00, 0x00, 
  0xe2, 0x0c, 0x00, 0x00, 0x64, 0x7b, 0x00, 0x00, 0xda, 0x0c, 0x00, 0x00, 
  0x6c, 0x7b, 0x00, 0x00, 0x32, 0x0a, 0x00, 0x00, 0x80, 0x79, 0x00, 0x00, 
  0x72, 0x0e, 0x00, 0x00, 0x74, 0x7b, 0x00, 0x00, 0x7a, 0x0e, 0x00, 0x00, 
  0x7c, 0x7b, 0x00, 0x00, 0x02, 0x08, 0x00, 0x00, 0x88, 0x79, 0x00, 0x00, 
  0x32, 0x0c, 0x00, 0x00, 0x90, 0x79, 0x00, 0x00, 0x6a, 0x0d, 0x00, 0x00, 
  0x98, 0x79, 0x00, 0x00, 0x72, 0x0d, 0x00, 0x00, 0xa0, 0x79, 0x00, 0x00, 
  0xaa, 0x09, 0x00, 0x00, 0xa8, 0x79, 0x00, 0x00, 0x22, 0x0a, 0x00, 0x00, 
  0x84, 0x7b, 0x00, 0x00, 0x4a, 0x0a, 0x00, 0x00, 0x8c, 0x7b, 0x00, 0x00, 
  0xa2, 0x0d, 0x00, 0x00, 0x94, 0x7b, 0x00, 0x00, 0xaa, 0x0d, 0x00, 0x00, 
  0xb0, 0x79, 0x00, 0x00, 0xc2, 0x0d, 0x00, 0x00, 0xbc, 0x79, 0x00, 0x00, 
  0xb2, 0x0d, 0x00, 0x00, 0xc8, 0x79, 0x00, 0x00, 0xba, 0x0d, 0x00, 0x00, 
  0xd4, 0x79, 0x00, 0x00, 0x9a, 0x0d, 0x00, 0x00, 0xe0, 0x79, 0x00, 0x00, 
  0x52, 0x0a, 0x00, 0x00, 0xec, 0x79, 0x00, 0x00, 0x72, 0x09, 0x00, 0x00, 
  0x9c, 0x7b, 0x00, 0x00, 0x42, 0x0a, 0x00, 0x00, 0xf4, 0x79, 0x00, 0x00, 
  0xa4, 0x7b, 0x00, 0x00, 0x17, 0x03, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 
  0x20, 0x75, 0x00, 0x00, 0x70, 0x60, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x09, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x07, 0x00, 0x0a, 0x01, 0x00, 0x00, 
  0x70, 0x60, 0x00, 0x00, 0x0b, 0x01, 0x00, 0x00, 0x70, 0x60, 0x00, 0x00, 
  0x0c, 0x01, 0x00, 0x00, 0x70, 0x60, 0x00, 0x00, 0x0d, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x0e, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x07, 0x00, 0x0f, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x0d, 0x00, 0x10, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x11, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x12, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x13, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x14, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x15, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x07, 0x00, 0x16, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x17, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x18, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x19, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x1a, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x07, 0x00, 0x1b, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x0d, 0x00, 0x1c, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x1d, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x1e, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x1f, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x20, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x21, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x22, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x23, 0x01, 0x00, 0x00, 
  0x70, 0x60, 0x00, 0x00, 0x24, 0x01, 0x00, 0x00, 0x70, 0x60, 0x00, 0x00, 
  0x25, 0x01, 0x00, 0x00, 0x70, 0x60, 0x00, 0x00, 0x26, 0x01, 0x00, 0x00, 
  0x70, 0x60, 0x00, 0x00, 0x27, 0x01, 0x00, 0x00, 0x70, 0x60, 0x00, 0x00, 
  0x28, 0x01, 0x00, 0x00, 0x70, 0x60, 0x00, 0x00, 0x29, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x2a, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x2b, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x07, 0x00, 0x2c, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x07, 0x00, 0x2d, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x2e, 0x01, 0x00, 0x00, 
  0x70, 0x60, 0x00, 0x00, 0x2f, 0x01, 0x00, 0x00, 0x70, 0x60, 0x00, 0x00, 
  0x30, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x31, 0x01, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x32, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x33, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x34, 0x01, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x35, 0x01, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 
  0x36, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x37, 0x01, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x39, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x3a, 0x01, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x3b, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x3c, 0x01, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0x3d, 0x01, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0x3e, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x3f, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0x41, 0x01, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 
  0x42, 0x01, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0x43, 0x01, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0x44, 0x01, 0x00, 0x00, 0x24, 0x61, 0x00, 0x00, 
  0x45, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x46, 0x01, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x47, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x48, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x49, 0x01, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0x4a, 0x01, 0x00, 0x00, 0x24, 0x61, 0x00, 0x00, 
  0x4b, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x4c, 0x01, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x4d, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x4e, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 
  0x24, 0x61, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x51, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x52, 0x01, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x53, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x54, 0x01, 0x00, 0x00, 0x24, 0x61, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0x56, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x57, 0x01, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0x58, 0x01, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0x59, 0x01, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 
  0x5a, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x5b, 0x01, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x5c, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x5d, 0x01, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0x5e, 0x01, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x5f, 0x01, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 
  0x60, 0x01, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0x61, 0x01, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0x62, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x63, 0x01, 0x00, 0x00, 0x24, 0x61, 0x00, 0x00, 0x64, 0x01, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x65, 0x01, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x4b, 0x00, 0x67, 0x01, 0x00, 0x00, 0x66, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x68, 0x01, 0x00, 0x00, 0x69, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x6a, 0x01, 0x00, 0x00, 0x6b, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xe0, 0x7c, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x67, 0x01, 0x00, 0x00, 
  0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x01, 0x00, 0x00, 
  0x69, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6a, 0x01, 0x00, 0x00, 
  0x6b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 0xe0, 0x7c, 0x00, 0x00, 
  0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x60, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x0e, 0x00, 0x00, 0x00, 0x6c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x02, 0x00, 0x00, 
  0x1c, 0x7d, 0x00, 0x00, 0x4a, 0x02, 0x00, 0x00, 0x24, 0x7d, 0x00, 0x00, 
  0xfa, 0x09, 0x00, 0x00, 0xf0, 0x7c, 0x00, 0x00, 0xb2, 0x02, 0x00, 0x00, 
  0xf8, 0x7c, 0x00, 0x00, 0x32, 0x03, 0x00, 0x00, 0x38, 0x7d, 0x00, 0x00, 
  0x52, 0x03, 0x00, 0x00, 0x88, 0x7d, 0x00, 0x00, 0xc2, 0x03, 0x00, 0x00, 
  0x04, 0x7d, 0x00, 0x00, 0xca, 0x03, 0x00, 0x00, 0x90, 0x7d, 0x00, 0x00, 
  0x72, 0x04, 0x00, 0x00, 0x10, 0x7d, 0x00, 0x00, 0xfa, 0x04, 0x00, 0x00, 
  0x98, 0x7d, 0x00, 0x00, 0x1a, 0x05, 0x00, 0x00, 0xa4, 0x7d, 0x00, 0x00, 
  0x7a, 0x00, 0x00, 0x00, 0xec, 0x5c, 0x00, 0x00, 0xe2, 0x00, 0x00, 0x00, 
  0xf4, 0x5c, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0xfc, 0x5c, 0x00, 0x00, 
  0xa4, 0x7b, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 
  0x70, 0x7c, 0x00, 0x00, 0xf8, 0x7e, 0x00, 0x00, 0x2c, 0x7d, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0x6d, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0x6e, 0x01, 0x00, 0x00, 
  0x60, 0x61, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0x6f, 0x01, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x71, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 
  0x72, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x73, 0x01, 0x00, 0x00, 
  0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x25, 0x01, 0x74, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x75, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x76, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xbe, 0x4c, 0x00, 0x00, 0x84, 0x4d, 0x00, 0x00, 0x2b, 0x4e, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x77, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x78, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 
  0x79, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0x7a, 0x01, 0x00, 0x00, 
  0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x7c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8a, 0x00, 0x00, 0x00, 
  0x18, 0x7e, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 0x10, 0x7e, 0x00, 0x00, 
  0xa4, 0x7b, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0xf0, 0x7d, 0x00, 0x00, 0x70, 0x7e, 0x00, 0x00, 0x20, 0x7e, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x7d, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0x7e, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x03, 0x00, 
  0x88, 0x01, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x9e, 0x00, 
  0x89, 0x01, 0x00, 0x00, 0x8a, 0x01, 0x00, 0x00, 0x8b, 0x01, 0x00, 0x00, 
  0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x94, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x8d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x00, 
  0x8e, 0x01, 0x00, 0x00, 0x8f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0x91, 0x01, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0x92, 0x01, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8d, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x2e, 0x00, 0x93, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xb8, 0x83, 0x00, 0x00, 0x18, 0x82, 0x00, 0x00, 0xb8, 0x83, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xb8, 0x83, 0x00, 0x00, 0x34, 0x7f, 0x00, 0x00, 
  0xb8, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x83, 0x00, 0x00, 
  0x18, 0x82, 0x00, 0x00, 0xb8, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xb8, 0x83, 0x00, 0x00, 0x94, 0x63, 0x00, 0x00, 0xb8, 0x83, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0x94, 0x01, 0x00, 0x00, 0xec, 0x80, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0x47, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0x96, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x06, 0x00, 0x02, 0x00, 0x97, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0xff, 0xff, 0x03, 0x00, 0x98, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x06, 0x00, 0x02, 0x00, 0x99, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x08, 0x00, 0x04, 0x00, 0x9a, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x08, 0x00, 0x04, 0x00, 0x9b, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x08, 0x00, 0x04, 0x00, 0x9c, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x08, 0x00, 0x04, 0x00, 0x9d, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x06, 0x00, 0x04, 0x00, 0x9e, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x06, 0x00, 0x04, 0x00, 0x9f, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x04, 0x00, 0x02, 0x00, 0xa0, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x04, 0x00, 0x02, 0x00, 0xa1, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x04, 0x00, 0x02, 0x00, 0xa2, 0x01, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 
  0xa3, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 
  0xa4, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 0x08, 0x00, 0x06, 0x00, 
  0xa5, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 
  0xa6, 0x01, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 0xa7, 0x01, 0x00, 0x00, 
  0xe8, 0x60, 0x00, 0x00, 0xa8, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xa9, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xaa, 0x01, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0xab, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xac, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 0xad, 0x01, 0x00, 0x00, 
  0xac, 0x60, 0x00, 0x00, 0xae, 0x01, 0x00, 0x00, 0xac, 0x60, 0x00, 0x00, 
  0xaf, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 0x06, 0x00, 0x02, 0x00, 
  0xb0, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 0x06, 0x00, 0x02, 0x00, 
  0xb1, 0x01, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x42, 0x00, 
  0xb2, 0x01, 0x00, 0x00, 0xb3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xb4, 0x01, 0x00, 0x00, 0xb5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xb6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x08, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x02, 0x09, 0x00, 0x00, 0xd4, 0x80, 0x00, 0x00, 0x9a, 0x02, 0x00, 0x00, 
  0xf4, 0x7f, 0x00, 0x00, 0x22, 0x04, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 
  0xe2, 0x02, 0x00, 0x00, 0x0c, 0x80, 0x00, 0x00, 0x2a, 0x04, 0x00, 0x00, 
  0x18, 0x80, 0x00, 0x00, 0x42, 0x03, 0x00, 0x00, 0xc8, 0x7f, 0x00, 0x00, 
  0x8a, 0x04, 0x00, 0x00, 0xd0, 0x7f, 0x00, 0x00, 0x32, 0x0d, 0x00, 0x00, 
  0xdc, 0x7f, 0x00, 0x00, 0x3a, 0x04, 0x00, 0x00, 0xe8, 0x7f, 0x00, 0x00, 
  0x9a, 0x04, 0x00, 0x00, 0x24, 0x80, 0x00, 0x00, 0x7a, 0x02, 0x00, 0x00, 
  0x30, 0x80, 0x00, 0x00, 0xc2, 0x04, 0x00, 0x00, 0x3c, 0x80, 0x00, 0x00, 
  0x82, 0x03, 0x00, 0x00, 0x48, 0x80, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 
  0x54, 0x80, 0x00, 0x00, 0xa2, 0x02, 0x00, 0x00, 0x68, 0x80, 0x00, 0x00, 
  0x0a, 0x04, 0x00, 0x00, 0x74, 0x80, 0x00, 0x00, 0x52, 0x02, 0x00, 0x00, 
  0x80, 0x80, 0x00, 0x00, 0xca, 0x0b, 0x00, 0x00, 0x8c, 0x80, 0x00, 0x00, 
  0x82, 0x0c, 0x00, 0x00, 0x94, 0x80, 0x00, 0x00, 0xba, 0x07, 0x00, 0x00, 
  0x60, 0x80, 0x00, 0x00, 0x7a, 0x03, 0x00, 0x00, 0x9c, 0x80, 0x00, 0x00, 
  0x02, 0x05, 0x00, 0x00, 0xa4, 0x80, 0x00, 0x00, 0x1a, 0x03, 0x00, 0x00, 
  0xac, 0x80, 0x00, 0x00, 0xfa, 0x02, 0x00, 0x00, 0xb4, 0x80, 0x00, 0x00, 
  0x02, 0x03, 0x00, 0x00, 0xbc, 0x80, 0x00, 0x00, 0x2a, 0x03, 0x00, 0x00, 
  0xc4, 0x80, 0x00, 0x00, 0x12, 0x03, 0x00, 0x00, 0xcc, 0x80, 0x00, 0x00, 
  0xa4, 0x7b, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 
  0x30, 0x81, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x97, 0x00, 
  0xb8, 0x01, 0x00, 0x00, 0xb9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xba, 0x01, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xbb, 0x01, 0x00, 0x00, 0xbc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xb6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x38, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x7a, 0x09, 0x00, 0x00, 0xe0, 0x80, 0x00, 0x00, 
  0x9a, 0x02, 0x00, 0x00, 0xf4, 0x7f, 0x00, 0x00, 0x22, 0x04, 0x00, 0x00, 
  0x00, 0x80, 0x00, 0x00, 0xe2, 0x02, 0x00, 0x00, 0x0c, 0x80, 0x00, 0x00, 
  0x2a, 0x04, 0x00, 0x00, 0x18, 0x80, 0x00, 0x00, 0x42, 0x03, 0x00, 0x00, 
  0xc8, 0x7f, 0x00, 0x00, 0x8a, 0x04, 0x00, 0x00, 0xd0, 0x7f, 0x00, 0x00, 
  0x32, 0x0d, 0x00, 0x00, 0xdc, 0x7f, 0x00, 0x00, 0x3a, 0x04, 0x00, 0x00, 
  0xe8, 0x7f, 0x00, 0x00, 0x9a, 0x04, 0x00, 0x00, 0x24, 0x80, 0x00, 0x00, 
  0x7a, 0x02, 0x00, 0x00, 0x30, 0x80, 0x00, 0x00, 0xc2, 0x04, 0x00, 0x00, 
  0x3c, 0x80, 0x00, 0x00, 0x82, 0x03, 0x00, 0x00, 0x48, 0x80, 0x00, 0x00, 
  0x42, 0x04, 0x00, 0x00, 0x54, 0x80, 0x00, 0x00, 0xa2, 0x02, 0x00, 0x00, 
  0x68, 0x80, 0x00, 0x00, 0x0a, 0x04, 0x00, 0x00, 0x74, 0x80, 0x00, 0x00, 
  0x52, 0x02, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0xca, 0x0b, 0x00, 0x00, 
  0x8c, 0x80, 0x00, 0x00, 0x82, 0x0c, 0x00, 0x00, 0x94, 0x80, 0x00, 0x00, 
  0xba, 0x07, 0x00, 0x00, 0x60, 0x80, 0x00, 0x00, 0x7a, 0x03, 0x00, 0x00, 
  0x9c, 0x80, 0x00, 0x00, 0x02, 0x05, 0x00, 0x00, 0xa4, 0x80, 0x00, 0x00, 
  0x1a, 0x03, 0x00, 0x00, 0xac, 0x80, 0x00, 0x00, 0xfa, 0x02, 0x00, 0x00, 
  0xb4, 0x80, 0x00, 0x00, 0x02, 0x03, 0x00, 0x00, 0xbc, 0x80, 0x00, 0x00, 
  0x2a, 0x03, 0x00, 0x00, 0xc4, 0x80, 0x00, 0x00, 0x12, 0x03, 0x00, 0x00, 
  0xcc, 0x80, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 
  0x1b, 0x00, 0x00, 0x00, 0x60, 0x82, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x0c, 0x00, 0x39, 0x01, 0xbd, 0x01, 0x00, 0x00, 0xbe, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xbf, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x48, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0x57, 0x14, 0x8b, 
  0x0a, 0xbf, 0x05, 0x40, 0x48, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x18, 0x2d, 0x44, 0x54, 0xfb, 0x21, 0x09, 0x40, 0xb8, 0x83, 0x00, 0x00, 
  0x0a, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe2, 0xac, 0x00, 0x00, 
  0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x5e, 0x00, 0xc1, 0x01, 0x00, 0x00, 
  0xc2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc3, 0x01, 0x00, 0x00, 
  0xc4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x84, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xaa, 0x02, 0x00, 0x00, 0x20, 0x84, 0x00, 0x00, 0xe2, 0x04, 0x00, 0x00, 
  0x28, 0x84, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 
  0x02, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0xf8, 0x7e, 0x00, 0x00, 
  0x34, 0x84, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 0x08, 0x00, 0x06, 0x00, 
  0xc5, 0x01, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 0xfe, 0xff, 0x07, 0x00, 
  0xc6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc7, 0x01, 0x00, 0x00, 
  0x50, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x9d, 0x00, 0xc9, 0x01, 0x00, 0x00, 0xca, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xa0, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x52, 0x02, 0x00, 0x00, 0xbc, 0x84, 0x00, 0x00, 0xe2, 0x02, 0x00, 0x00, 
  0xb0, 0x84, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 
  0x02, 0x00, 0x00, 0x00, 0x90, 0x84, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0x08, 0x00, 0x04, 0x00, 0xcb, 0x01, 0x00, 0x00, 0xe8, 0x60, 0x00, 0x00, 
  0xcc, 0x01, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x60, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0xcd, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x40, 0x74, 0x00, 0x00, 0x88, 0x14, 0x00, 0x00, 
  0x34, 0x7e, 0x00, 0x00, 0x20, 0x00, 0x41, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xce, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 
  0xd2, 0x01, 0x00, 0x00, 0xfa, 0x2b, 0x00, 0x00, 0x47, 0x2f, 0x00, 0x00, 
  0x7e, 0x43, 0x00, 0x00, 0x47, 0x34, 0x00, 0x00, 0xed, 0x36, 0x00, 0x00, 
  0x80, 0x39, 0x00, 0x00, 0xa4, 0x3c, 0x00, 0x00, 0x0b, 0x3e, 0x00, 0x00, 
  0x00, 0x40, 0x00, 0x00, 0xfc, 0x44, 0x00, 0x00, 0xcb, 0x46, 0x00, 0x00, 
  0xa5, 0x47, 0x00, 0x00, 0xc6, 0x48, 0x00, 0x00, 0x6f, 0x49, 0x00, 0x00, 
  0x35, 0x4a, 0x00, 0x00, 0xff, 0x4a, 0x00, 0x00, 0xdd, 0x4b, 0x00, 0x00, 
  0x8f, 0x4c, 0x00, 0x00, 0x54, 0x4d, 0x00, 0x00, 0xea, 0x4d, 0x00, 0x00, 
  0x8b, 0x4e, 0x00, 0x00, 0x2f, 0x4f, 0x00, 0x00, 0xd1, 0x4f, 0x00, 0x00, 
  0xb1, 0x50, 0x00, 0x00, 0x4f, 0x51, 0x00, 0x00, 0x48, 0xab, 0x00, 0x00, 
  0x5a, 0x52, 0x00, 0x00, 0xe1, 0x52, 0x00, 0x00, 0x4d, 0x53, 0x00, 0x00, 
  0x09, 0x54, 0x00, 0x00, 0x9a, 0x54, 0x00, 0x00, 0x1b, 0x55, 0x00, 0x00, 
  0x9c, 0x55, 0x00, 0x00, 0xf9, 0x55, 0x00, 0x00, 0x58, 0x56, 0x00, 0x00, 
  0x94, 0x56, 0x00, 0x00, 0xcf, 0x56, 0x00, 0x00, 0x36, 0x57, 0x00, 0x00, 
  0x97, 0x57, 0x00, 0x00, 0xdc, 0x57, 0x00, 0x00, 0xe5, 0xab, 0x00, 0x00, 
  0x3b, 0xac, 0x00, 0x00, 0x50, 0x58, 0x00, 0x00, 0x9b, 0x58, 0x00, 0x00, 
  0xea, 0x58, 0x00, 0x00, 0x4f, 0x59, 0x00, 0x00, 0xc5, 0x59, 0x00, 0x00, 
  0x86, 0xac, 0x00, 0x00, 0x11, 0xa9, 0x00, 0x00, 0x36, 0xa9, 0x00, 0x00, 
  0x91, 0xa9, 0x00, 0x00, 0x52, 0xae, 0x00, 0x00, 0x68, 0xae, 0x00, 0x00, 
  0x7c, 0xae, 0x00, 0x00, 0x94, 0xae, 0x00, 0x00, 0xda, 0xa9, 0x00, 0x00, 
  0xac, 0xae, 0x00, 0x00, 0xc7, 0xae, 0x00, 0x00, 0xda, 0xae, 0x00, 0x00, 
  0xec, 0xae, 0x00, 0x00, 0xf3, 0xae, 0x00, 0x00, 0x22, 0xaa, 0x00, 0x00, 
  0xfd, 0xae, 0x00, 0x00, 0x05, 0xaf, 0x00, 0x00, 0x11, 0xaf, 0x00, 0x00, 
  0x1e, 0xaf, 0x00, 0x00, 0x2a, 0xaf, 0x00, 0x00, 0x33, 0xaf, 0x00, 0x00, 
  0x3f, 0xaf, 0x00, 0x00, 0x46, 0xaf, 0x00, 0x00, 0x55, 0xaf, 0x00, 0x00, 
  0x5e, 0xaf, 0x00, 0x00, 0x67, 0xaf, 0x00, 0x00, 0x70, 0xaf, 0x00, 0x00, 
  0x78, 0xaf, 0x00, 0x00, 0x81, 0xaf, 0x00, 0x00, 0x89, 0xaf, 0x00, 0x00, 
  0x90, 0xaf, 0x00, 0x00, 0x9a, 0xaf, 0x00, 0x00, 0xa1, 0xaf, 0x00, 0x00, 
  0xad, 0xaf, 0x00, 0x00, 0xb5, 0xaf, 0x00, 0x00, 0xbd, 0xaf, 0x00, 0x00, 
  0xc7, 0xaf, 0x00, 0x00, 0xcf, 0xaf, 0x00, 0x00, 0xd9, 0xaf, 0x00, 0x00, 
  0xe7, 0xaf, 0x00, 0x00, 0xee, 0xaf, 0x00, 0x00, 0xf9, 0xaf, 0x00, 0x00, 
  0x04, 0xb0, 0x00, 0x00, 0x0f, 0xb0, 0x00, 0x00, 0x17, 0xb0, 0x00, 0x00, 
  0x1d, 0xb0, 0x00, 0x00, 0x26, 0xb0, 0x00, 0x00, 0x30, 0xb0, 0x00, 0x00, 
  0x37, 0xb0, 0x00, 0x00, 0x42, 0xb0, 0x00, 0x00, 0x4d, 0xb0, 0x00, 0x00, 
  0x71, 0xb0, 0x00, 0x00, 0x7c, 0xb0, 0x00, 0x00, 0x87, 0xb0, 0x00, 0x00, 
  0xaa, 0xb0, 0x00, 0x00, 0xb5, 0xb0, 0x00, 0x00, 0xd1, 0xb0, 0x00, 0x00, 
  0xd9, 0xb0, 0x00, 0x00, 0xf7, 0xb0, 0x00, 0x00, 0xfe, 0xb0, 0x00, 0x00, 
  0x06, 0xb1, 0x00, 0x00, 0x0d, 0xb1, 0x00, 0x00, 0x15, 0xb1, 0x00, 0x00, 
  0x1f, 0xb1, 0x00, 0x00, 0x29, 0xb1, 0x00, 0x00, 0x32, 0xb1, 0x00, 0x00, 
  0x3c, 0xb1, 0x00, 0x00, 0x44, 0xb1, 0x00, 0x00, 0x4b, 0xb1, 0x00, 0x00, 
  0x5a, 0xb1, 0x00, 0x00, 0x62, 0xb1, 0x00, 0x00, 0x6c, 0xb1, 0x00, 0x00, 
  0x74, 0xb1, 0x00, 0x00, 0x7b, 0xb1, 0x00, 0x00, 0x82, 0xb1, 0x00, 0x00, 
  0x8d, 0xb1, 0x00, 0x00, 0x94, 0xb1, 0x00, 0x00, 0x9d, 0xb1, 0x00, 0x00, 
  0xa6, 0xb1, 0x00, 0x00, 0xae, 0xb1, 0x00, 0x00, 0xba, 0xb1, 0x00, 0x00, 
  0xc6, 0xb1, 0x00, 0x00, 0xd0, 0xb1, 0x00, 0x00, 0xdb, 0xb1, 0x00, 0x00, 
  0xe3, 0xb1, 0x00, 0x00, 0xee, 0xb1, 0x00, 0x00, 0xf7, 0xb1, 0x00, 0x00, 
  0x01, 0xb2, 0x00, 0x00, 0x0a, 0xb2, 0x00, 0x00, 0x14, 0xb2, 0x00, 0x00, 
  0x1e, 0xb2, 0x00, 0x00, 0x26, 0xb2, 0x00, 0x00, 0x2e, 0xb2, 0x00, 0x00, 
  0x35, 0xb2, 0x00, 0x00, 0x3c, 0xb2, 0x00, 0x00, 0x47, 0xb2, 0x00, 0x00, 
  0x55, 0xb2, 0x00, 0x00, 0x5d, 0xb2, 0x00, 0x00, 0x67, 0xb2, 0x00, 0x00, 
  0x70, 0xb2, 0x00, 0x00, 0x79, 0xb2, 0x00, 0x00, 0x87, 0xb2, 0x00, 0x00, 
  0x97, 0xb2, 0x00, 0x00, 0x9f, 0xb2, 0x00, 0x00, 0xa7, 0xb2, 0x00, 0x00, 
  0xae, 0xb2, 0x00, 0x00, 0xb7, 0xb2, 0x00, 0x00, 0xbe, 0xb2, 0x00, 0x00, 
  0xc7, 0xb2, 0x00, 0x00, 0xd0, 0xb2, 0x00, 0x00, 0xdc, 0xb2, 0x00, 0x00, 
  0xe5, 0xb2, 0x00, 0x00, 0xed, 0xb2, 0x00, 0x00, 0xf7, 0xb2, 0x00, 0x00, 
  0x00, 0xb3, 0x00, 0x00, 0x09, 0xb3, 0x00, 0x00, 0x12, 0xb3, 0x00, 0x00, 
  0x1c, 0xb3, 0x00, 0x00, 0x25, 0xb3, 0x00, 0x00, 0x2c, 0xb3, 0x00, 0x00, 
  0x37, 0xb3, 0x00, 0x00, 0x42, 0xb3, 0x00, 0x00, 0x4d, 0xb3, 0x00, 0x00, 
  0x5a, 0xb3, 0x00, 0x00, 0x66, 0xb3, 0x00, 0x00, 0x79, 0xb3, 0x00, 0x00, 
  0x89, 0xb3, 0x00, 0x00, 0x95, 0xb3, 0x00, 0x00, 0xa3, 0xb3, 0x00, 0x00, 
  0xad, 0xb3, 0x00, 0x00, 0xb9, 0xb3, 0x00, 0x00, 0xc9, 0xb3, 0x00, 0x00, 
  0xd3, 0xb3, 0x00, 0x00, 0xdd, 0xb3, 0x00, 0x00, 0xe9, 0xb3, 0x00, 0x00, 
  0xf7, 0xb3, 0x00, 0x00, 0x05, 0xb4, 0x00, 0x00, 0x11, 0xb4, 0x00, 0x00, 
  0x1b, 0xb4, 0x00, 0x00, 0x29, 0xb4, 0x00, 0x00, 0x33, 0xb4, 0x00, 0x00, 
  0x41, 0xb4, 0x00, 0x00, 0x4c, 0xb4, 0x00, 0x00, 0x57, 0xb4, 0x00, 0x00, 
  0x61, 0xb4, 0x00, 0x00, 0x6c, 0xb4, 0x00, 0x00, 0x76, 0xb4, 0x00, 0x00, 
  0x82, 0xb4, 0x00, 0x00, 0x8d, 0xb4, 0x00, 0x00, 0x98, 0xb4, 0x00, 0x00, 
  0xaa, 0xb4, 0x00, 0x00, 0xba, 0xb4, 0x00, 0x00, 0xc8, 0xb4, 0x00, 0x00, 
  0xd3, 0xb4, 0x00, 0x00, 0xe4, 0xb4, 0x00, 0x00, 0xf3, 0xb4, 0x00, 0x00, 
  0xfe, 0xb4, 0x00, 0x00, 0x05, 0xb5, 0x00, 0x00, 0x0c, 0xb5, 0x00, 0x00, 
  0x15, 0xb5, 0x00, 0x00, 0x39, 0xb5, 0x00, 0x00, 0x45, 0xb5, 0x00, 0x00, 
  0x53, 0xb5, 0x00, 0x00, 0x61, 0xb5, 0x00, 0x00, 0x6e, 0xb5, 0x00, 0x00, 
  0x7b, 0xb5, 0x00, 0x00, 0x87, 0xb5, 0x00, 0x00, 0x92, 0xb5, 0x00, 0x00, 
  0xa7, 0xb5, 0x00, 0x00, 0xb2, 0xb5, 0x00, 0x00, 0xc1, 0xb5, 0x00, 0x00, 
  0xcd, 0xb5, 0x00, 0x00, 0xdd, 0xb5, 0x00, 0x00, 0xeb, 0xb5, 0x00, 0x00, 
  0xf6, 0xb5, 0x00, 0x00, 0xfe, 0xb5, 0x00, 0x00, 0x07, 0xb6, 0x00, 0x00, 
  0x20, 0xb6, 0x00, 0x00, 0x2f, 0xb6, 0x00, 0x00, 0x3d, 0xb6, 0x00, 0x00, 
  0x4c, 0xb6, 0x00, 0x00, 0x53, 0xb6, 0x00, 0x00, 0x5b, 0xb6, 0x00, 0x00, 
  0x64, 0xb6, 0x00, 0x00, 0x6c, 0xb6, 0x00, 0x00, 0x75, 0xb6, 0x00, 0x00, 
  0x8b, 0xb6, 0x00, 0x00, 0x9f, 0xb6, 0x00, 0x00, 0xae, 0xb6, 0x00, 0x00, 
  0xbf, 0xb6, 0x00, 0x00, 0xd0, 0xb6, 0x00, 0x00, 0xd8, 0xb6, 0x00, 0x00, 
  0xe1, 0xb6, 0x00, 0x00, 0xea, 0xb6, 0x00, 0x00, 0xf8, 0xb6, 0x00, 0x00, 
  0xff, 0xb6, 0x00, 0x00, 0x0f, 0xb7, 0x00, 0x00, 0x1c, 0xb7, 0x00, 0x00, 
  0x28, 0xb7, 0x00, 0x00, 0x39, 0xb7, 0x00, 0x00, 0x41, 0xb7, 0x00, 0x00, 
  0x4b, 0xb7, 0x00, 0x00, 0x54, 0xb7, 0x00, 0x00, 0x5f, 0xb7, 0x00, 0x00, 
  0x68, 0xb7, 0x00, 0x00, 0x73, 0xb7, 0x00, 0x00, 0x7f, 0xb7, 0x00, 0x00, 
  0x86, 0xb7, 0x00, 0x00, 0x8e, 0xb7, 0x00, 0x00, 0xa2, 0xb7, 0x00, 0x00, 
  0xb2, 0xb7, 0x00, 0x00, 0xc1, 0xb7, 0x00, 0x00, 0xcf, 0xb7, 0x00, 0x00, 
  0xdf, 0xb7, 0x00, 0x00, 0xee, 0xb7, 0x00, 0x00, 0xfd, 0xb7, 0x00, 0x00, 
  0x0b, 0xb8, 0x00, 0x00, 0x25, 0xb8, 0x00, 0x00, 0x33, 0xb8, 0x00, 0x00, 
  0x4a, 0xb8, 0x00, 0x00, 0x63, 0xb8, 0x00, 0x00, 0x78, 0xb8, 0x00, 0x00, 
  0x87, 0xb8, 0x00, 0x00, 0x9a, 0xb8, 0x00, 0x00, 0xab, 0xb8, 0x00, 0x00, 
  0xbb, 0xb8, 0x00, 0x00, 0xcc, 0xb8, 0x00, 0x00, 0xe1, 0xb8, 0x00, 0x00, 
  0xf7, 0xb8, 0x00, 0x00, 0x0c, 0xb9, 0x00, 0x00, 0x1c, 0xb9, 0x00, 0x00, 
  0x2b, 0xb9, 0x00, 0x00, 0x3f, 0xb9, 0x00, 0x00, 0x52, 0xb9, 0x00, 0x00, 
  0x64, 0xb9, 0x00, 0x00, 0x75, 0xb9, 0x00, 0x00, 0x86, 0xb9, 0x00, 0x00, 
  0x96, 0xb9, 0x00, 0x00, 0xa8, 0xb9, 0x00, 0x00, 0xb9, 0xb9, 0x00, 0x00, 
  0xcf, 0xb9, 0x00, 0x00, 0xe4, 0xb9, 0x00, 0x00, 0xee, 0xb9, 0x00, 0x00, 
  0xf9, 0xb9, 0x00, 0x00, 0x04, 0xba, 0x00, 0x00, 0x0f, 0xba, 0x00, 0x00, 
  0x1a, 0xba, 0x00, 0x00, 0x27, 0xba, 0x00, 0x00, 0x35, 0xba, 0x00, 0x00, 
  0x4a, 0xba, 0x00, 0x00, 0x54, 0xba, 0x00, 0x00, 0x5f, 0xba, 0x00, 0x00, 
  0x66, 0xba, 0x00, 0x00, 0x6e, 0xba, 0x00, 0x00, 0x77, 0xba, 0x00, 0x00, 
  0x7c, 0xba, 0x00, 0x00, 0x8a, 0xba, 0x00, 0x00, 0x94, 0xba, 0x00, 0x00, 
  0xa1, 0xba, 0x00, 0x00, 0xa8, 0xba, 0x00, 0x00, 0xb0, 0xba, 0x00, 0x00, 
  0xb8, 0xba, 0x00, 0x00, 0xbf, 0xba, 0x00, 0x00, 0xcd, 0xba, 0x00, 0x00, 
  0xd6, 0xba, 0x00, 0x00, 0xde, 0xba, 0x00, 0x00, 0xe8, 0xba, 0x00, 0x00, 
  0xf1, 0xba, 0x00, 0x00, 0xfd, 0xba, 0x00, 0x00, 0x06, 0xbb, 0x00, 0x00, 
  0x0f, 0xbb, 0x00, 0x00, 0x17, 0xbb, 0x00, 0x00, 0x20, 0xbb, 0x00, 0x00, 
  0x2c, 0xbb, 0x00, 0x00, 0x39, 0xbb, 0x00, 0x00, 0x45, 0xbb, 0x00, 0x00, 
  0x4e, 0xbb, 0x00, 0x00, 0x5b, 0xbb, 0x00, 0x00, 0x69, 0xbb, 0x00, 0x00, 
  0x81, 0xbb, 0x00, 0x00, 0x9e, 0xbb, 0x00, 0x00, 0xaf, 0xbb, 0x00, 0x00, 
  0xc3, 0xbb, 0x00, 0x00, 0xdc, 0xbb, 0x00, 0x00, 0xe7, 0xbb, 0x00, 0x00, 
  0xfe, 0xbb, 0x00, 0x00, 0x08, 0xbc, 0x00, 0x00, 0x14, 0xbc, 0x00, 0x00, 
  0x20, 0xbc, 0x00, 0x00, 0x29, 0xbc, 0x00, 0x00, 0x30, 0xbc, 0x00, 0x00, 
  0x3b, 0xbc, 0x00, 0x00, 0x43, 0xbc, 0x00, 0x00, 0x55, 0xbc, 0x00, 0x00, 
  0x65, 0xbc, 0x00, 0x00, 0x7c, 0xbc, 0x00, 0x00, 0x8a, 0xbc, 0x00, 0x00, 
  0x9b, 0xbc, 0x00, 0x00, 0xa6, 0xbc, 0x00, 0x00, 0xb4, 0xbc, 0x00, 0x00, 
  0xc0, 0xbc, 0x00, 0x00, 0xc9, 0xbc, 0x00, 0x00, 0xd2, 0xbc, 0x00, 0x00, 
  0xde, 0xbc, 0x00, 0x00, 0xec, 0xbc, 0x00, 0x00, 0xf8, 0xbc, 0x00, 0x00, 
  0x04, 0xbd, 0x00, 0x00, 0x10, 0xbd, 0x00, 0x00, 0x1c, 0xbd, 0x00, 0x00, 
  0x25, 0xbd, 0x00, 0x00, 0x2f, 0xbd, 0x00, 0x00, 0x37, 0xbd, 0x00, 0x00, 
  0x40, 0xbd, 0x00, 0x00, 0x47, 0xbd, 0x00, 0x00, 0x50, 0xbd, 0x00, 0x00, 
  0x58, 0xbd, 0x00, 0x00, 0x60, 0xbd, 0x00, 0x00, 0x67, 0xbd, 0x00, 0x00, 
  0x72, 0xbd, 0x00, 0x00, 0x79, 0xbd, 0x00, 0x00, 0x81, 0xbd, 0x00, 0x00, 
  0x8b, 0xbd, 0x00, 0x00, 0x96, 0xbd, 0x00, 0x00, 0x9d, 0xbd, 0x00, 0x00, 
  0xa4, 0xbd, 0x00, 0x00, 0xac, 0xbd, 0x00, 0x00, 0xba, 0xbd, 0x00, 0x00, 
  0xc1, 0xbd, 0x00, 0x00, 0xc9, 0xbd, 0x00, 0x00, 0xd6, 0xbd, 0x00, 0x00, 
  0xe5, 0xbd, 0x00, 0x00, 0xf2, 0xbd, 0x00, 0x00, 0xfa, 0xbd, 0x00, 0x00, 
  0x08, 0xbe, 0x00, 0x00, 0x11, 0xbe, 0x00, 0x00, 0x17, 0xbe, 0x00, 0x00, 
  0x23, 0xbe, 0x00, 0x00, 0x2c, 0xbe, 0x00, 0x00, 0x3f, 0xbe, 0x00, 0x00, 
  0x4b, 0xbe, 0x00, 0x00, 0x5f, 0xbe, 0x00, 0x00, 0x6e, 0xbe, 0x00, 0x00, 
  0x79, 0xbe, 0x00, 0x00, 0x8d, 0xbe, 0x00, 0x00, 0xa1, 0xbe, 0x00, 0x00, 
  0xa9, 0xbe, 0x00, 0x00, 0xb8, 0xbe, 0x00, 0x00, 0xc0, 0xbe, 0x00, 0x00, 
  0xcb, 0xbe, 0x00, 0x00, 0xdb, 0xbe, 0x00, 0x00, 0xec, 0xbe, 0x00, 0x00, 
  0x01, 0xbf, 0x00, 0x00, 0x0d, 0xbf, 0x00, 0x00, 0x1a, 0xbf, 0x00, 0x00, 
  0x28, 0xbf, 0x00, 0x00, 0x2f, 0xbf, 0x00, 0x00, 0x36, 0xbf, 0x00, 0x00, 
  0x43, 0xbf, 0x00, 0x00, 0x51, 0xbf, 0x00, 0x00, 0x5d, 0xbf, 0x00, 0x00, 
  0x65, 0xbf, 0x00, 0x00, 0x81, 0xbf, 0x00, 0x00, 0xa1, 0xbf, 0x00, 0x00, 
  0xb0, 0xbf, 0x00, 0x00, 0xc3, 0xbf, 0x00, 0x00, 0xe0, 0xbf, 0x00, 0x00, 
  0xf2, 0xbf, 0x00, 0x00, 0x0c, 0xc0, 0x00, 0x00, 0x23, 0xc0, 0x00, 0x00, 
  0x2d, 0xc0, 0x00, 0x00, 0x35, 0xc0, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 
  0x49, 0xc0, 0x00, 0x00, 0x50, 0xc0, 0x00, 0x00, 0x58, 0xc0, 0x00, 0x00, 
  0x61, 0xc0, 0x00, 0x00, 0x6f, 0xc0, 0x00, 0x00, 0x77, 0xc0, 0x00, 0x00, 
  0x8f, 0xc0, 0x00, 0x00, 0xae, 0xc0, 0x00, 0x00, 0xb5, 0xc0, 0x00, 0x00, 
  0xbc, 0xc0, 0x00, 0x00, 0xc4, 0xc0, 0x00, 0x00, 0xd7, 0xc0, 0x00, 0x00, 
  0xed, 0xc0, 0x00, 0x00, 0xf5, 0xc0, 0x00, 0x00, 0xfd, 0xc0, 0x00, 0x00, 
  0x07, 0xc1, 0x00, 0x00, 0x11, 0xc1, 0x00, 0x00, 0x20, 0xc1, 0x00, 0x00, 
  0x30, 0xc1, 0x00, 0x00, 0x3f, 0xc1, 0x00, 0x00, 0x4d, 0xc1, 0x00, 0x00, 
  0x5d, 0xc1, 0x00, 0x00, 0x6f, 0xc1, 0x00, 0x00, 0x89, 0xc1, 0x00, 0x00, 
  0xb0, 0xc1, 0x00, 0x00, 0xc6, 0xc1, 0x00, 0x00, 0xda, 0xc1, 0x00, 0x00, 
  0xed, 0xc1, 0x00, 0x00, 0x01, 0xc2, 0x00, 0x00, 0x0a, 0xc2, 0x00, 0x00, 
  0x14, 0xc2, 0x00, 0x00, 0x21, 0xc2, 0x00, 0x00, 0x31, 0xc2, 0x00, 0x00, 
  0x3d, 0xc2, 0x00, 0x00, 0x44, 0xc2, 0x00, 0x00, 0x4d, 0xc2, 0x00, 0x00, 
  0x5a, 0xc2, 0x00, 0x00, 0x63, 0xc2, 0x00, 0x00, 0x6d, 0xc2, 0x00, 0x00, 
  0x7c, 0xc2, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x98, 0xc2, 0x00, 0x00, 
  0xa0, 0xc2, 0x00, 0x00, 0xa9, 0xc2, 0x00, 0x00, 0xb8, 0xc2, 0x00, 0x00, 
  0xcc, 0xc2, 0x00, 0x00, 0xd7, 0xc2, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x33, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc8, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x21, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x35, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd8, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x2a, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd8, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x25, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd8, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x24, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd8, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x1e, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc8, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x31, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x04, 0x8e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x38, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x04, 0x8e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc8, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x20, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc8, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x22, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc8, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x26, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc8, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x2b, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc8, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x28, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xa8, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x29, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xa8, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x2c, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc8, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x2d, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc8, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x30, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc8, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x32, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc8, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x2f, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x10, 0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x34, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc8, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x27, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x88, 0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x36, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc8, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0x37, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc8, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0xda, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x3c, 0x92, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x61, 0x00, 0x00, 
  0xff, 0xff, 0x03, 0x00, 0xd7, 0x01, 0x00, 0x00, 0x70, 0x60, 0x00, 0x00, 
  0xd8, 0x01, 0x00, 0x00, 0x40, 0x74, 0x00, 0x00, 0xe0, 0x92, 0x00, 0x00, 
  0xba, 0x00, 0x00, 0x00, 0x6a, 0x0e, 0x00, 0x00, 0x82, 0x0d, 0x00, 0x00, 
  0xc0, 0x92, 0x00, 0x00, 0xa4, 0x7b, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 
  0x02, 0x00, 0x00, 0x00, 0xd0, 0x92, 0x00, 0x00, 0xdc, 0x41, 0xe4, 0x72, 
  0x21, 0xa6, 0xf3, 0xaf, 0x44, 0x85, 0x00, 0x00, 0xd2, 0x01, 0x00, 0x00, 
  0x0a, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x0f, 0x2c, 0x00, 0x00, 
  0x4c, 0x2f, 0x00, 0x00, 0xb9, 0x43, 0x00, 0x00, 0x58, 0x34, 0x00, 0x00, 
  0x0a, 0x37, 0x00, 0x00, 0xcb, 0x39, 0x00, 0x00, 0xc0, 0x3c, 0x00, 0x00, 
  0x2f, 0x3e, 0x00, 0x00, 0x1c, 0x40, 0x00, 0x00, 0x22, 0x45, 0x00, 0x00, 
  0xf3, 0x46, 0x00, 0x00, 0xb6, 0x47, 0x00, 0x00, 0xd3, 0x48, 0x00, 0x00, 
  0x7b, 0x49, 0x00, 0x00, 0x44, 0x4a, 0x00, 0x00, 0x0e, 0x4b, 0x00, 0x00, 
  0xe9, 0x4b, 0x00, 0x00, 0x9b, 0x4c, 0x00, 0x00, 0x5f, 0x4d, 0x00, 0x00, 
  0xf6, 0x4d, 0x00, 0x00, 0x96, 0x4e, 0x00, 0x00, 0x3b, 0x4f, 0x00, 0x00, 
  0xdf, 0x4f, 0x00, 0x00, 0xbd, 0x50, 0x00, 0x00, 0x5a, 0x51, 0x00, 0x00, 
  0x54, 0xab, 0x00, 0x00, 0x6a, 0x52, 0x00, 0x00, 0xed, 0x52, 0x00, 0x00, 
  0x5c, 0x53, 0x00, 0x00, 0x14, 0x54, 0x00, 0x00, 0xad, 0x54, 0x00, 0x00, 
  0x2d, 0x55, 0x00, 0x00, 0xae, 0x55, 0x00, 0x00, 0x0a, 0x56, 0x00, 0x00, 
  0x64, 0x56, 0x00, 0x00, 0xa0, 0x56, 0x00, 0x00, 0xdc, 0x56, 0x00, 0x00, 
  0x47, 0x57, 0x00, 0x00, 0xa6, 0x57, 0x00, 0x00, 0xf0, 0x57, 0x00, 0x00, 
  0xf3, 0xab, 0x00, 0x00, 0x47, 0xac, 0x00, 0x00, 0x65, 0x58, 0x00, 0x00, 
  0xaa, 0x58, 0x00, 0x00, 0xf9, 0x58, 0x00, 0x00, 0x5c, 0x59, 0x00, 0x00, 
  0xd1, 0x59, 0x00, 0x00, 0x9d, 0xac, 0x00, 0x00, 0x1c, 0xa9, 0x00, 0x00, 
  0x47, 0xa9, 0x00, 0x00, 0xa1, 0xa9, 0x00, 0x00, 0x63, 0xae, 0x00, 0x00, 
  0x77, 0xae, 0x00, 0x00, 0x8a, 0xae, 0x00, 0x00, 0xa1, 0xae, 0x00, 0x00, 
  0xe8, 0xa9, 0x00, 0x00, 0xc1, 0xae, 0x00, 0x00, 0xce, 0xae, 0x00, 0x00, 
  0xe1, 0xae, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x98, 0x94, 0x00, 0x00, 0x20, 0x95, 0x00, 0x00, 
  0x3c, 0x95, 0x00, 0x00, 0xb0, 0x95, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0xa0, 0xc3, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0xdc, 0x96, 0x00, 0x00, 
  0xf8, 0x96, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x30, 0xc4, 0x00, 0x00, 
  0x1c, 0x94, 0x00, 0x00, 0x08, 0x97, 0x00, 0x00, 0x24, 0x97, 0x00, 0x00, 
  0x02, 0x00, 0x00, 0x00, 0x50, 0xc4, 0x00, 0x00, 0x30, 0x94, 0x00, 0x00, 
  0x30, 0x97, 0x00, 0x00, 0x44, 0x97, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0x70, 0xc4, 0x00, 0x00, 0x44, 0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x10, 0x94, 0x00, 0x00, 0x24, 0x94, 0x00, 0x00, 
  0x38, 0x94, 0x00, 0x00, 0x4c, 0x94, 0x00, 0x00, 0xa4, 0x94, 0x00, 0x00, 
  0xb0, 0x94, 0x00, 0x00, 0xbc, 0x94, 0x00, 0x00, 0xc8, 0x94, 0x00, 0x00, 
  0xd4, 0x94, 0x00, 0x00, 0xe0, 0x94, 0x00, 0x00, 0xec, 0x94, 0x00, 0x00, 
  0xf8, 0x94, 0x00, 0x00, 0x04, 0x95, 0x00, 0x00, 0x10, 0x95, 0x00, 0x00, 
  0x02, 0x00, 0x00, 0x00, 0xe0, 0xc4, 0x00, 0x00, 0x70, 0x94, 0x00, 0x00, 
  0x02, 0x18, 0x00, 0x00, 0x40, 0xc5, 0x00, 0x00, 0x10, 0xc6, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0x30, 0xc6, 0x00, 0x00, 0x50, 0xc6, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0x60, 0xc6, 0x00, 0x00, 0x8c, 0xc6, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0xa0, 0xc6, 0x00, 0x00, 0xc0, 0xc6, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0xd0, 0xc6, 0x00, 0x00, 0xf0, 0xc6, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x24, 0xc7, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0x30, 0xc7, 0x00, 0x00, 0x90, 0xc7, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0xa0, 0xc7, 0x00, 0x00, 0xd4, 0xc7, 0x00, 0x00, 
  0x02, 0x04, 0x00, 0x00, 0xe0, 0xc7, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0x10, 0xc8, 0x00, 0x00, 0x24, 0xc8, 0x00, 0x00, 
  0x2c, 0x95, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x30, 0xc8, 0x00, 0x00, 
  0x1c, 0x95, 0x00, 0x00, 0x02, 0x14, 0x00, 0x00, 0x50, 0xc8, 0x00, 0x00, 
  0x70, 0xc8, 0x00, 0x00, 0x48, 0x95, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0x90, 0xc8, 0x00, 0x00, 0x38, 0x95, 0x00, 0x00, 0x02, 0x14, 0x00, 0x00, 
  0xb0, 0xc8, 0x00, 0x00, 0xd0, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x95, 0x00, 0x00, 
  0xf4, 0x95, 0x00, 0x00, 0x00, 0x96, 0x00, 0x00, 0x0c, 0x96, 0x00, 0x00, 
  0x18, 0x96, 0x00, 0x00, 0x24, 0x96, 0x00, 0x00, 0x30, 0x96, 0x00, 0x00, 
  0x3c, 0x96, 0x00, 0x00, 0x48, 0x96, 0x00, 0x00, 0x54, 0x96, 0x00, 0x00, 
  0x60, 0x96, 0x00, 0x00, 0x6c, 0x96, 0x00, 0x00, 0x78, 0x96, 0x00, 0x00, 
  0x84, 0x96, 0x00, 0x00, 0x90, 0x96, 0x00, 0x00, 0x9c, 0x96, 0x00, 0x00, 
  0xa8, 0x96, 0x00, 0x00, 0xb4, 0x96, 0x00, 0x00, 0xc0, 0x96, 0x00, 0x00, 
  0xcc, 0x96, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf0, 0xc8, 0x00, 0x00, 
  0x60, 0x95, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4a, 0x04, 0x00, 0x00, 
  0x22, 0x0f, 0x00, 0x00, 0x2a, 0x0f, 0x00, 0x00, 0x32, 0x0f, 0x00, 0x00, 
  0x3a, 0x0f, 0x00, 0x00, 0xe4, 0x95, 0x00, 0x00, 0x02, 0x14, 0x00, 0x00, 
  0x90, 0xc9, 0x00, 0x00, 0xc0, 0x95, 0x00, 0x00, 0xb8, 0x83, 0x00, 0x00, 
  0x12, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0xca, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0x10, 0xca, 0x00, 0x00, 0x30, 0xca, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0x40, 0xca, 0x00, 0x00, 0x6c, 0xca, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0x80, 0xca, 0x00, 0x00, 0xd8, 0xca, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0xe0, 0xca, 0x00, 0x00, 0x08, 0xcb, 0x00, 0x00, 
  0x02, 0x0c, 0x00, 0x00, 0x10, 0xcb, 0x00, 0x00, 0x34, 0xcb, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0x40, 0xcb, 0x00, 0x00, 0x64, 0xcb, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0x70, 0xcb, 0x00, 0x00, 0x68, 0xcc, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0x70, 0xcc, 0x00, 0x00, 0xf8, 0xcc, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x14, 0xcd, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0x20, 0xcd, 0x00, 0x00, 0x44, 0xcd, 0x00, 0x00, 
  0x02, 0x04, 0x00, 0x00, 0x50, 0xcd, 0x00, 0x00, 0x74, 0xcd, 0x00, 0x00, 
  0x02, 0x04, 0x00, 0x00, 0x80, 0xcd, 0x00, 0x00, 0xcc, 0xcd, 0x00, 0x00, 
  0x02, 0x04, 0x00, 0x00, 0xd0, 0xcd, 0x00, 0x00, 0x00, 0xce, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0x10, 0xce, 0x00, 0x00, 0x2c, 0xce, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0x40, 0xce, 0x00, 0x00, 0x60, 0xce, 0x00, 0x00, 
  0x02, 0x08, 0x00, 0x00, 0x70, 0xce, 0x00, 0x00, 0x90, 0xce, 0x00, 0x00, 
  0x02, 0x0c, 0x00, 0x00, 0xa0, 0xce, 0x00, 0x00, 0xc8, 0xce, 0x00, 0x00, 
  0x02, 0x0c, 0x00, 0x00, 0xe0, 0xce, 0x00, 0x00, 0x10, 0xcf, 0x00, 0x00, 
  0x02, 0x0c, 0x00, 0x00, 0x20, 0xcf, 0x00, 0x00, 0x50, 0xcf, 0x00, 0x00, 
  0xe8, 0x96, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x60, 0xcf, 0x00, 0x00, 
  0xd8, 0x96, 0x00, 0x00, 0x18, 0x82, 0x00, 0x00, 0xd6, 0x75, 0x00, 0x00, 
  0x15, 0x00, 0x00, 0x00, 0x5b, 0xb0, 0x00, 0x00, 0x02, 0x0c, 0x00, 0x00, 
  0x80, 0xcf, 0x00, 0x00, 0x98, 0xcf, 0x00, 0x00, 0x14, 0x97, 0x00, 0x00, 
  0x02, 0x00, 0x00, 0x00, 0xb0, 0xcf, 0x00, 0x00, 0x04, 0x97, 0x00, 0x00, 
  0x18, 0x82, 0x00, 0x00, 0x4e, 0x34, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 
  0x95, 0xb0, 0x00, 0x00, 0x02, 0x0c, 0x00, 0x00, 0xd0, 0xcf, 0x00, 0x00, 
  0xe8, 0xcf, 0x00, 0x00, 0x18, 0x82, 0x00, 0x00, 0x39, 0x77, 0x00, 0x00, 
  0x12, 0x00, 0x00, 0x00, 0xbe, 0xb0, 0x00, 0x00, 0x50, 0x97, 0x00, 0x00, 
  0x02, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x40, 0x97, 0x00, 0x00, 
  0x18, 0x82, 0x00, 0x00, 0xe9, 0x38, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 
  0xe1, 0xb0, 0x00, 0x00, 
};

static const u8 data_segment_data_61[] = {
  0x90, 0x5a, 0x00, 0x00, 
};

static const u8 data_segment_data_62[] = {
  0x6d, 0x70, 0x7a, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 
  0x5f, 0x73, 0x74, 0x72, 0x00, 
};

static const u8 data_segment_data_63[] = {
  0x6d, 0x70, 0x7a, 0x5f, 0x64, 0x69, 0x76, 0x6d, 0x6f, 0x64, 0x5f, 0x69, 
  0x6e, 0x70, 0x6c, 0x00, 
};

static const u8 data_segment_data_64[] = {
  0x6d, 0x70, 0x7a, 0x5f, 0x61, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x5f, 0x69, 
  0x6e, 0x70, 0x6c, 0x00, 
};

static const u8 data_segment_data_65[] = {
  0x6d, 0x70, 0x7a, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x67, 
  0x00, 
};

static const u8 data_segment_data_66[] = {
  0x6d, 0x70, 0x6e, 0x5f, 0x6f, 0x72, 0x5f, 0x6e, 0x65, 0x67, 0x00, 
};

static const u8 data_segment_data_67[] = {
  0x6d, 0x70, 0x7a, 0x5f, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x00, 
};

static const u8 data_segment_data_68[] = {
  0x6d, 0x70, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x66, 0x6c, 
  0x6f, 0x61, 0x74, 0x00, 
};

static const u8 data_segment_data_69[] = {
  0x76, 0x73, 0x74, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x63, 0x68, 0x61, 
  0x72, 0x00, 
};

static const u8 data_segment_data_70[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 
  0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x6f, 0x70, 0x00, 
};

static const u8 data_segment_data_71[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 
  0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x01, 0x01, 
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x01, 0x01, 
  0x01, 0x01, 0x01, 0x01, 0x01, 0x59, 0x59, 0x59, 0x59, 0x59, 0x59, 0x19, 
  0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
  0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x01, 0x01, 0x01, 0x01, 0x01, 
  0x01, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x29, 0x29, 0x29, 0x29, 0x29, 
  0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 
  0x29, 0x29, 0x29, 0x01, 0x01, 0x01, 0x01, 0x00, 
};

static const u8 data_segment_data_72[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xf8, 0x3f, 
};

static const u8 data_segment_data_73[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xd0, 0xcf, 0x43, 
  0xeb, 0xfd, 0x4c, 0x3e, 
};

static const u8 data_segment_data_74[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 
  0x03, 0xb8, 0xe2, 0x3f, 
};

static const u8 data_segment_data_75[] = {
  0x4f, 0xbb, 0x61, 0x05, 0x67, 0xac, 0xdd, 0x3f, 0x18, 0x2d, 0x44, 0x54, 
  0xfb, 0x21, 0xe9, 0x3f, 0x9b, 0xf6, 0x81, 0xd2, 0x0b, 0x73, 0xef, 0x3f, 
  0x18, 0x2d, 0x44, 0x54, 0xfb, 0x21, 0xf9, 0x3f, 
};

static const u8 data_segment_data_76[] = {
  0xe2, 0x65, 0x2f, 0x22, 0x7f, 0x2b, 0x7a, 0x3c, 0x07, 0x5c, 0x14, 0x33, 
  0x26, 0xa6, 0x81, 0x3c, 0xbd, 0xcb, 0xf0, 0x7a, 0x88, 0x07, 0x70, 0x3c, 
  0x07, 0x5c, 0x14, 0x33, 0x26, 0xa6, 0x91, 0x3c, 
};

static const u8 data_segment_data_77[] = {
  0xd2, 0x21, 0x33, 0x7f, 0x7c, 0xd9, 0x02, 0x40, 0xd2, 0x21, 0x33, 0x7f, 
  0x7c, 0xd9, 0x02, 0xc0, 0x18, 0x2d, 0x44, 0x54, 0xfb, 0x21, 0xe9, 0x3f, 
  0x18, 0x2d, 0x44, 0x54, 0xfb, 0x21, 0xe9, 0xbf, 
};

static const u8 data_segment_data_78[] = {
  0x18, 0x2d, 0x44, 0x54, 0xfb, 0x21, 0x09, 0x40, 0x18, 0x2d, 0x44, 0x54, 
  0xfb, 0x21, 0x09, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
};

static const u8 data_segment_data_79[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x3f, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xe0, 0xbf, 
};

static const u8 data_segment_data_80[] = {
  0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_81[] = {
  0x83, 0xf9, 0xa2, 0x00, 0x44, 0x4e, 0x6e, 0x00, 0xfc, 0x29, 0x15, 0x00, 
  0xd1, 0x57, 0x27, 0x00, 0xdd, 0x34, 0xf5, 0x00, 0x62, 0xdb, 0xc0, 0x00, 
  0x3c, 0x99, 0x95, 0x00, 0x41, 0x90, 0x43, 0x00, 0x63, 0x51, 0xfe, 0x00, 
  0xbb, 0xde, 0xab, 0x00, 0xb7, 0x61, 0xc5, 0x00, 0x3a, 0x6e, 0x24, 0x00, 
  0xd2, 0x4d, 0x42, 0x00, 0x49, 0x06, 0xe0, 0x00, 0x09, 0xea, 0x2e, 0x00, 
  0x1c, 0x92, 0xd1, 0x00, 0xeb, 0x1d, 0xfe, 0x00, 0x29, 0xb1, 0x1c, 0x00, 
  0xe8, 0x3e, 0xa7, 0x00, 0xf5, 0x35, 0x82, 0x00, 0x44, 0xbb, 0x2e, 0x00, 
  0x9c, 0xe9, 0x84, 0x00, 0xb4, 0x26, 0x70, 0x00, 0x41, 0x7e, 0x5f, 0x00, 
  0xd6, 0x91, 0x39, 0x00, 0x53, 0x83, 0x39, 0x00, 0x9c, 0xf4, 0x39, 0x00, 
  0x8b, 0x5f, 0x84, 0x00, 0x28, 0xf9, 0xbd, 0x00, 0xf8, 0x1f, 0x3b, 0x00, 
  0xde, 0xff, 0x97, 0x00, 0x0f, 0x98, 0x05, 0x00, 0x11, 0x2f, 0xef, 0x00, 
  0x0a, 0x5a, 0x8b, 0x00, 0x6d, 0x1f, 0x6d, 0x00, 0xcf, 0x7e, 0x36, 0x00, 
  0x09, 0xcb, 0x27, 0x00, 0x46, 0x4f, 0xb7, 0x00, 0x9e, 0x66, 0x3f, 0x00, 
  0x2d, 0xea, 0x5f, 0x00, 0xba, 0x27, 0x75, 0x00, 0xe5, 0xeb, 0xc7, 0x00, 
  0x3d, 0x7b, 0xf1, 0x00, 0xf7, 0x39, 0x07, 0x00, 0x92, 0x52, 0x8a, 0x00, 
  0xfb, 0x6b, 0xea, 0x00, 0x1f, 0xb1, 0x5f, 0x00, 0x08, 0x5d, 0x8d, 0x00, 
  0x30, 0x03, 0x56, 0x00, 0x7b, 0xfc, 0x46, 0x00, 0xf0, 0xab, 0x6b, 0x00, 
  0x20, 0xbc, 0xcf, 0x00, 0x36, 0xf4, 0x9a, 0x00, 0xe3, 0xa9, 0x1d, 0x00, 
  0x5e, 0x61, 0x91, 0x00, 0x08, 0x1b, 0xe6, 0x00, 0x85, 0x99, 0x65, 0x00, 
  0xa0, 0x14, 0x5f, 0x00, 0x8d, 0x40, 0x68, 0x00, 0x80, 0xd8, 0xff, 0x00, 
  0x27, 0x73, 0x4d, 0x00, 0x06, 0x06, 0x31, 0x00, 0xca, 0x56, 0x15, 0x00, 
  0xc9, 0xa8, 0x73, 0x00, 0x7b, 0xe2, 0x60, 0x00, 0x6b, 0x8c, 0xc0, 0x00, 
  0x19, 0xc4, 0x47, 0x00, 0xcd, 0x67, 0xc3, 0x00, 0x09, 0xe8, 0xdc, 0x00, 
  0x59, 0x83, 0x2a, 0x00, 0x8b, 0x76, 0xc4, 0x00, 0xa6, 0x1c, 0x96, 0x00, 
  0x44, 0xaf, 0xdd, 0x00, 0x19, 0x57, 0xd1, 0x00, 0xa5, 0x3e, 0x05, 0x00, 
  0x05, 0x07, 0xff, 0x00, 0x33, 0x7e, 0x3f, 0x00, 0xc2, 0x32, 0xe8, 0x00, 
  0x98, 0x4f, 0xde, 0x00, 0xbb, 0x7d, 0x32, 0x00, 0x26, 0x3d, 0xc3, 0x00, 
  0x1e, 0x6b, 0xef, 0x00, 0x9f, 0xf8, 0x5e, 0x00, 0x35, 0x1f, 0x3a, 0x00, 
  0x7f, 0xf2, 0xca, 0x00, 0xf1, 0x87, 0x1d, 0x00, 0x7c, 0x90, 0x21, 0x00, 
  0x6a, 0x24, 0x7c, 0x00, 0xd5, 0x6e, 0xfa, 0x00, 0x30, 0x2d, 0x77, 0x00, 
  0x15, 0x3b, 0x43, 0x00, 0xb5, 0x14, 0xc6, 0x00, 0xc3, 0x19, 0x9d, 0x00, 
  0xad, 0xc4, 0xc2, 0x00, 0x2c, 0x4d, 0x41, 0x00, 0x0c, 0x00, 0x5d, 0x00, 
  0x86, 0x7d, 0x46, 0x00, 0xe3, 0x71, 0x2d, 0x00, 0x9b, 0xc6, 0x9a, 0x00, 
  0x33, 0x62, 0x00, 0x00, 0xb4, 0xd2, 0x7c, 0x00, 0xb4, 0xa7, 0x97, 0x00, 
  0x37, 0x55, 0xd5, 0x00, 0xd7, 0x3e, 0xf6, 0x00, 0xa3, 0x10, 0x18, 0x00, 
  0x4d, 0x76, 0xfc, 0x00, 0x64, 0x9d, 0x2a, 0x00, 0x70, 0xd7, 0xab, 0x00, 
  0x63, 0x7c, 0xf8, 0x00, 0x7a, 0xb0, 0x57, 0x00, 0x17, 0x15, 0xe7, 0x00, 
  0xc0, 0x49, 0x56, 0x00, 0x3b, 0xd6, 0xd9, 0x00, 0xa7, 0x84, 0x38, 0x00, 
  0x24, 0x23, 0xcb, 0x00, 0xd6, 0x8a, 0x77, 0x00, 0x5a, 0x54, 0x23, 0x00, 
  0x00, 0x1f, 0xb9, 0x00, 0xf1, 0x0a, 0x1b, 0x00, 0x19, 0xce, 0xdf, 0x00, 
  0x9f, 0x31, 0xff, 0x00, 0x66, 0x1e, 0x6a, 0x00, 0x99, 0x57, 0x61, 0x00, 
  0xac, 0xfb, 0x47, 0x00, 0x7e, 0x7f, 0xd8, 0x00, 0x22, 0x65, 0xb7, 0x00, 
  0x32, 0xe8, 0x89, 0x00, 0xe6, 0xbf, 0x60, 0x00, 0xef, 0xc4, 0xcd, 0x00, 
  0x6c, 0x36, 0x09, 0x00, 0x5d, 0x3f, 0xd4, 0x00, 0x16, 0xde, 0xd7, 0x00, 
  0x58, 0x3b, 0xde, 0x00, 0xde, 0x9b, 0x92, 0x00, 0xd2, 0x22, 0x28, 0x00, 
  0x28, 0x86, 0xe8, 0x00, 0xe2, 0x58, 0x4d, 0x00, 0xc6, 0xca, 0x32, 0x00, 
  0x08, 0xe3, 0x16, 0x00, 0xe0, 0x7d, 0xcb, 0x00, 0x17, 0xc0, 0x50, 0x00, 
  0xf3, 0x1d, 0xa7, 0x00, 0x18, 0xe0, 0x5b, 0x00, 0x2e, 0x13, 0x34, 0x00, 
  0x83, 0x12, 0x62, 0x00, 0x83, 0x48, 0x01, 0x00, 0xf5, 0x8e, 0x5b, 0x00, 
  0xad, 0xb0, 0x7f, 0x00, 0x1e, 0xe9, 0xf2, 0x00, 0x48, 0x4a, 0x43, 0x00, 
  0x10, 0x67, 0xd3, 0x00, 0xaa, 0xdd, 0xd8, 0x00, 0xae, 0x5f, 0x42, 0x00, 
  0x6a, 0x61, 0xce, 0x00, 0x0a, 0x28, 0xa4, 0x00, 0xd3, 0x99, 0xb4, 0x00, 
  0x06, 0xa6, 0xf2, 0x00, 0x5c, 0x77, 0x7f, 0x00, 0xa3, 0xc2, 0x83, 0x00, 
  0x61, 0x3c, 0x88, 0x00, 0x8a, 0x73, 0x78, 0x00, 0xaf, 0x8c, 0x5a, 0x00, 
  0x6f, 0xd7, 0xbd, 0x00, 0x2d, 0xa6, 0x63, 0x00, 0xf4, 0xbf, 0xcb, 0x00, 
  0x8d, 0x81, 0xef, 0x00, 0x26, 0xc1, 0x67, 0x00, 0x55, 0xca, 0x45, 0x00, 
  0xca, 0xd9, 0x36, 0x00, 0x28, 0xa8, 0xd2, 0x00, 0xc2, 0x61, 0x8d, 0x00, 
  0x12, 0xc9, 0x77, 0x00, 0x04, 0x26, 0x14, 0x00, 0x12, 0x46, 0x9b, 0x00, 
  0xc4, 0x59, 0xc4, 0x00, 0xc8, 0xc5, 0x44, 0x00, 0x4d, 0xb2, 0x91, 0x00, 
  0x00, 0x17, 0xf3, 0x00, 0xd4, 0x43, 0xad, 0x00, 0x29, 0x49, 0xe5, 0x00, 
  0xfd, 0xd5, 0x10, 0x00, 0x00, 0xbe, 0xfc, 0x00, 0x1e, 0x94, 0xcc, 0x00, 
  0x70, 0xce, 0xee, 0x00, 0x13, 0x3e, 0xf5, 0x00, 0xec, 0xf1, 0x80, 0x00, 
  0xb3, 0xe7, 0xc3, 0x00, 0xc7, 0xf8, 0x28, 0x00, 0x93, 0x05, 0x94, 0x00, 
  0xc1, 0x71, 0x3e, 0x00, 0x2e, 0x09, 0xb3, 0x00, 0x0b, 0x45, 0xf3, 0x00, 
  0x88, 0x12, 0x9c, 0x00, 0xab, 0x20, 0x7b, 0x00, 0x2e, 0xb5, 0x9f, 0x00, 
  0x47, 0x92, 0xc2, 0x00, 0x7b, 0x32, 0x2f, 0x00, 0x0c, 0x55, 0x6d, 0x00, 
  0x72, 0xa7, 0x90, 0x00, 0x6b, 0xe7, 0x1f, 0x00, 0x31, 0xcb, 0x96, 0x00, 
  0x79, 0x16, 0x4a, 0x00, 0x41, 0x79, 0xe2, 0x00, 0xf4, 0xdf, 0x89, 0x00, 
  0xe8, 0x94, 0x97, 0x00, 0xe2, 0xe6, 0x84, 0x00, 0x99, 0x31, 0x97, 0x00, 
  0x88, 0xed, 0x6b, 0x00, 0x5f, 0x5f, 0x36, 0x00, 0xbb, 0xfd, 0x0e, 0x00, 
  0x48, 0x9a, 0xb4, 0x00, 0x67, 0xa4, 0x6c, 0x00, 0x71, 0x72, 0x42, 0x00, 
  0x8d, 0x5d, 0x32, 0x00, 0x9f, 0x15, 0xb8, 0x00, 0xbc, 0xe5, 0x09, 0x00, 
  0x8d, 0x31, 0x25, 0x00, 0xf7, 0x74, 0x39, 0x00, 0x30, 0x05, 0x1c, 0x00, 
  0x0d, 0x0c, 0x01, 0x00, 0x4b, 0x08, 0x68, 0x00, 0x2c, 0xee, 0x58, 0x00, 
  0x47, 0xaa, 0x90, 0x00, 0x74, 0xe7, 0x02, 0x00, 0xbd, 0xd6, 0x24, 0x00, 
  0xf7, 0x7d, 0xa6, 0x00, 0x6e, 0x48, 0x72, 0x00, 0x9f, 0x16, 0xef, 0x00, 
  0x8e, 0x94, 0xa6, 0x00, 0xb4, 0x91, 0xf6, 0x00, 0xd1, 0x53, 0x51, 0x00, 
  0xcf, 0x0a, 0xf2, 0x00, 0x20, 0x98, 0x33, 0x00, 0xf5, 0x4b, 0x7e, 0x00, 
  0xb2, 0x63, 0x68, 0x00, 0xdd, 0x3e, 0x5f, 0x00, 0x40, 0x5d, 0x03, 0x00, 
  0x85, 0x89, 0x7f, 0x00, 0x55, 0x52, 0x29, 0x00, 0x37, 0x64, 0xc0, 0x00, 
  0x6d, 0xd8, 0x10, 0x00, 0x32, 0x48, 0x32, 0x00, 0x5b, 0x4c, 0x75, 0x00, 
  0x4e, 0x71, 0xd4, 0x00, 0x45, 0x54, 0x6e, 0x00, 0x0b, 0x09, 0xc1, 0x00, 
  0x2a, 0xf5, 0x69, 0x00, 0x14, 0x66, 0xd5, 0x00, 0x27, 0x07, 0x9d, 0x00, 
  0x5d, 0x04, 0x50, 0x00, 0xb4, 0x3b, 0xdb, 0x00, 0xea, 0x76, 0xc5, 0x00, 
  0x87, 0xf9, 0x17, 0x00, 0x49, 0x6b, 0x7d, 0x00, 0x1d, 0x27, 0xba, 0x00, 
  0x96, 0x69, 0x29, 0x00, 0xc6, 0xcc, 0xac, 0x00, 0xad, 0x14, 0x54, 0x00, 
  0x90, 0xe2, 0x6a, 0x00, 0x88, 0xd9, 0x89, 0x00, 0x2c, 0x72, 0x50, 0x00, 
  0x04, 0xa4, 0xbe, 0x00, 0x77, 0x07, 0x94, 0x00, 0xf3, 0x30, 0x70, 0x00, 
  0x00, 0xfc, 0x27, 0x00, 0xea, 0x71, 0xa8, 0x00, 0x66, 0xc2, 0x49, 0x00, 
  0x64, 0xe0, 0x3d, 0x00, 0x97, 0xdd, 0x83, 0x00, 0xa3, 0x3f, 0x97, 0x00, 
  0x43, 0x94, 0xfd, 0x00, 0x0d, 0x86, 0x8c, 0x00, 0x31, 0x41, 0xde, 0x00, 
  0x92, 0x39, 0x9d, 0x00, 0xdd, 0x70, 0x8c, 0x00, 0x17, 0xb7, 0xe7, 0x00, 
  0x08, 0xdf, 0x3b, 0x00, 0x15, 0x37, 0x2b, 0x00, 0x5c, 0x80, 0xa0, 0x00, 
  0x5a, 0x80, 0x93, 0x00, 0x10, 0x11, 0x92, 0x00, 0x0f, 0xe8, 0xd8, 0x00, 
  0x6c, 0x80, 0xaf, 0x00, 0xdb, 0xff, 0x4b, 0x00, 0x38, 0x90, 0x0f, 0x00, 
  0x59, 0x18, 0x76, 0x00, 0x62, 0xa5, 0x15, 0x00, 0x61, 0xcb, 0xbb, 0x00, 
  0xc7, 0x89, 0xb9, 0x00, 0x10, 0x40, 0xbd, 0x00, 0xd2, 0xf2, 0x04, 0x00, 
  0x49, 0x75, 0x27, 0x00, 0xeb, 0xb6, 0xf6, 0x00, 0xdb, 0x22, 0xbb, 0x00, 
  0x0a, 0x14, 0xaa, 0x00, 0x89, 0x26, 0x2f, 0x00, 0x64, 0x83, 0x76, 0x00, 
  0x09, 0x3b, 0x33, 0x00, 0x0e, 0x94, 0x1a, 0x00, 0x51, 0x3a, 0xaa, 0x00, 
  0x1d, 0xa3, 0xc2, 0x00, 0xaf, 0xed, 0xae, 0x00, 0x5c, 0x26, 0x12, 0x00, 
  0x6d, 0xc2, 0x4d, 0x00, 0x2d, 0x7a, 0x9c, 0x00, 0xc0, 0x56, 0x97, 0x00, 
  0x03, 0x3f, 0x83, 0x00, 0x09, 0xf0, 0xf6, 0x00, 0x2b, 0x40, 0x8c, 0x00, 
  0x6d, 0x31, 0x99, 0x00, 0x39, 0xb4, 0x07, 0x00, 0x0c, 0x20, 0x15, 0x00, 
  0xd8, 0xc3, 0x5b, 0x00, 0xf5, 0x92, 0xc4, 0x00, 0xc6, 0xad, 0x4b, 0x00, 
  0x4e, 0xca, 0xa5, 0x00, 0xa7, 0x37, 0xcd, 0x00, 0xe6, 0xa9, 0x36, 0x00, 
  0xab, 0x92, 0x94, 0x00, 0xdd, 0x42, 0x68, 0x00, 0x19, 0x63, 0xde, 0x00, 
  0x76, 0x8c, 0xef, 0x00, 0x68, 0x8b, 0x52, 0x00, 0xfc, 0xdb, 0x37, 0x00, 
  0xae, 0xa1, 0xab, 0x00, 0xdf, 0x15, 0x31, 0x00, 0x00, 0xae, 0xa1, 0x00, 
  0x0c, 0xfb, 0xda, 0x00, 0x64, 0x4d, 0x66, 0x00, 0xed, 0x05, 0xb7, 0x00, 
  0x29, 0x65, 0x30, 0x00, 0x57, 0x56, 0xbf, 0x00, 0x47, 0xff, 0x3a, 0x00, 
  0x6a, 0xf9, 0xb9, 0x00, 0x75, 0xbe, 0xf3, 0x00, 0x28, 0x93, 0xdf, 0x00, 
  0xab, 0x80, 0x30, 0x00, 0x66, 0x8c, 0xf6, 0x00, 0x04, 0xcb, 0x15, 0x00, 
  0xfa, 0x22, 0x06, 0x00, 0xd9, 0xe4, 0x1d, 0x00, 0x3d, 0xb3, 0xa4, 0x00, 
  0x57, 0x1b, 0x8f, 0x00, 0x36, 0xcd, 0x09, 0x00, 0x4e, 0x42, 0xe9, 0x00, 
  0x13, 0xbe, 0xa4, 0x00, 0x33, 0x23, 0xb5, 0x00, 0xf0, 0xaa, 0x1a, 0x00, 
  0x4f, 0x65, 0xa8, 0x00, 0xd2, 0xc1, 0xa5, 0x00, 0x0b, 0x3f, 0x0f, 0x00, 
  0x5b, 0x78, 0xcd, 0x00, 0x23, 0xf9, 0x76, 0x00, 0x7b, 0x8b, 0x04, 0x00, 
  0x89, 0x17, 0x72, 0x00, 0xc6, 0xa6, 0x53, 0x00, 0x6f, 0x6e, 0xe2, 0x00, 
  0xef, 0xeb, 0x00, 0x00, 0x9b, 0x4a, 0x58, 0x00, 0xc4, 0xda, 0xb7, 0x00, 
  0xaa, 0x66, 0xba, 0x00, 0x76, 0xcf, 0xcf, 0x00, 0xd1, 0x02, 0x1d, 0x00, 
  0xb1, 0xf1, 0x2d, 0x00, 0x8c, 0x99, 0xc1, 0x00, 0xc3, 0xad, 0x77, 0x00, 
  0x86, 0x48, 0xda, 0x00, 0xf7, 0x5d, 0xa0, 0x00, 0xc6, 0x80, 0xf4, 0x00, 
  0xac, 0xf0, 0x2f, 0x00, 0xdd, 0xec, 0x9a, 0x00, 0x3f, 0x5c, 0xbc, 0x00, 
  0xd0, 0xde, 0x6d, 0x00, 0x90, 0xc7, 0x1f, 0x00, 0x2a, 0xdb, 0xb6, 0x00, 
  0xa3, 0x25, 0x3a, 0x00, 0x00, 0xaf, 0x9a, 0x00, 0xad, 0x53, 0x93, 0x00, 
  0xb6, 0x57, 0x04, 0x00, 0x29, 0x2d, 0xb4, 0x00, 0x4b, 0x80, 0x7e, 0x00, 
  0xda, 0x07, 0xa7, 0x00, 0x76, 0xaa, 0x0e, 0x00, 0x7b, 0x59, 0xa1, 0x00, 
  0x16, 0x12, 0x2a, 0x00, 0xdc, 0xb7, 0x2d, 0x00, 0xfa, 0xe5, 0xfd, 0x00, 
  0x89, 0xdb, 0xfe, 0x00, 0x89, 0xbe, 0xfd, 0x00, 0xe4, 0x76, 0x6c, 0x00, 
  0x06, 0xa9, 0xfc, 0x00, 0x3e, 0x80, 0x70, 0x00, 0x85, 0x6e, 0x15, 0x00, 
  0xfd, 0x87, 0xff, 0x00, 0x28, 0x3e, 0x07, 0x00, 0x61, 0x67, 0x33, 0x00, 
  0x2a, 0x18, 0x86, 0x00, 0x4d, 0xbd, 0xea, 0x00, 0xb3, 0xe7, 0xaf, 0x00, 
  0x8f, 0x6d, 0x6e, 0x00, 0x95, 0x67, 0x39, 0x00, 0x31, 0xbf, 0x5b, 0x00, 
  0x84, 0xd7, 0x48, 0x00, 0x30, 0xdf, 0x16, 0x00, 0xc7, 0x2d, 0x43, 0x00, 
  0x25, 0x61, 0x35, 0x00, 0xc9, 0x70, 0xce, 0x00, 0x30, 0xcb, 0xb8, 0x00, 
  0xbf, 0x6c, 0xfd, 0x00, 0xa4, 0x00, 0xa2, 0x00, 0x05, 0x6c, 0xe4, 0x00, 
  0x5a, 0xdd, 0xa0, 0x00, 0x21, 0x6f, 0x47, 0x00, 0x62, 0x12, 0xd2, 0x00, 
  0xb9, 0x5c, 0x84, 0x00, 0x70, 0x61, 0x49, 0x00, 0x6b, 0x56, 0xe0, 0x00, 
  0x99, 0x52, 0x01, 0x00, 0x50, 0x55, 0x37, 0x00, 0x1e, 0xd5, 0xb7, 0x00, 
  0x33, 0xf1, 0xc4, 0x00, 0x13, 0x6e, 0x5f, 0x00, 0x5d, 0x30, 0xe4, 0x00, 
  0x85, 0x2e, 0xa9, 0x00, 0x1d, 0xb2, 0xc3, 0x00, 0xa1, 0x32, 0x36, 0x00, 
  0x08, 0xb7, 0xa4, 0x00, 0xea, 0xb1, 0xd4, 0x00, 0x16, 0xf7, 0x21, 0x00, 
  0x8f, 0x69, 0xe4, 0x00, 0x27, 0xff, 0x77, 0x00, 0x0c, 0x03, 0x80, 0x00, 
  0x8d, 0x40, 0x2d, 0x00, 0x4f, 0xcd, 0xa0, 0x00, 0x20, 0xa5, 0x99, 0x00, 
  0xb3, 0xa2, 0xd3, 0x00, 0x2f, 0x5d, 0x0a, 0x00, 0xb4, 0xf9, 0x42, 0x00, 
  0x11, 0xda, 0xcb, 0x00, 0x7d, 0xbe, 0xd0, 0x00, 0x9b, 0xdb, 0xc1, 0x00, 
  0xab, 0x17, 0xbd, 0x00, 0xca, 0xa2, 0x81, 0x00, 0x08, 0x6a, 0x5c, 0x00, 
  0x2e, 0x55, 0x17, 0x00, 0x27, 0x00, 0x55, 0x00, 0x7f, 0x14, 0xf0, 0x00, 
  0xe1, 0x07, 0x86, 0x00, 0x14, 0x0b, 0x64, 0x00, 0x96, 0x41, 0x8d, 0x00, 
  0x87, 0xbe, 0xde, 0x00, 0xda, 0xfd, 0x2a, 0x00, 0x6b, 0x25, 0xb6, 0x00, 
  0x7b, 0x89, 0x34, 0x00, 0x05, 0xf3, 0xfe, 0x00, 0xb9, 0xbf, 0x9e, 0x00, 
  0x68, 0x6a, 0x4f, 0x00, 0x4a, 0x2a, 0xa8, 0x00, 0x4f, 0xc4, 0x5a, 0x00, 
  0x2d, 0xf8, 0xbc, 0x00, 0xd7, 0x5a, 0x98, 0x00, 0xf4, 0xc7, 0x95, 0x00, 
  0x0d, 0x4d, 0x8d, 0x00, 0x20, 0x3a, 0xa6, 0x00, 0xa4, 0x57, 0x5f, 0x00, 
  0x14, 0x3f, 0xb1, 0x00, 0x80, 0x38, 0x95, 0x00, 0xcc, 0x20, 0x01, 0x00, 
  0x71, 0xdd, 0x86, 0x00, 0xc9, 0xde, 0xb6, 0x00, 0xbf, 0x60, 0xf5, 0x00, 
  0x4d, 0x65, 0x11, 0x00, 0x01, 0x07, 0x6b, 0x00, 0x8c, 0xb0, 0xac, 0x00, 
  0xb2, 0xc0, 0xd0, 0x00, 0x51, 0x55, 0x48, 0x00, 0x1e, 0xfb, 0x0e, 0x00, 
  0x95, 0x72, 0xc3, 0x00, 0xa3, 0x06, 0x3b, 0x00, 0xc0, 0x40, 0x35, 0x00, 
  0x06, 0xdc, 0x7b, 0x00, 0xe0, 0x45, 0xcc, 0x00, 0x4e, 0x29, 0xfa, 0x00, 
  0xd6, 0xca, 0xc8, 0x00, 0xe8, 0xf3, 0x41, 0x00, 0x7c, 0x64, 0xde, 0x00, 
  0x9b, 0x64, 0xd8, 0x00, 0xd9, 0xbe, 0x31, 0x00, 0xa4, 0x97, 0xc3, 0x00, 
  0x77, 0x58, 0xd4, 0x00, 0x69, 0xe3, 0xc5, 0x00, 0xf0, 0xda, 0x13, 0x00, 
  0xba, 0x3a, 0x3c, 0x00, 0x46, 0x18, 0x46, 0x00, 0x55, 0x75, 0x5f, 0x00, 
  0xd2, 0xbd, 0xf5, 0x00, 0x6e, 0x92, 0xc6, 0x00, 0xac, 0x2e, 0x5d, 0x00, 
  0x0e, 0x44, 0xed, 0x00, 0x1c, 0x3e, 0x42, 0x00, 0x61, 0xc4, 0x87, 0x00, 
  0x29, 0xfd, 0xe9, 0x00, 0xe7, 0xd6, 0xf3, 0x00, 0x22, 0x7c, 0xca, 0x00, 
  0x6f, 0x91, 0x35, 0x00, 0x08, 0xe0, 0xc5, 0x00, 0xff, 0xd7, 0x8d, 0x00, 
  0x6e, 0x6a, 0xe2, 0x00, 0xb0, 0xfd, 0xc6, 0x00, 0x93, 0x08, 0xc1, 0x00, 
  0x7c, 0x5d, 0x74, 0x00, 0x6b, 0xad, 0xb2, 0x00, 0xcd, 0x6e, 0x9d, 0x00, 
  0x3e, 0x72, 0x7b, 0x00, 0xc6, 0x11, 0x6a, 0x00, 0xf7, 0xcf, 0xa9, 0x00, 
  0x29, 0x73, 0xdf, 0x00, 0xb5, 0xc9, 0xba, 0x00, 0xb7, 0x00, 0x51, 0x00, 
  0xe2, 0xb2, 0x0d, 0x00, 0x74, 0xba, 0x24, 0x00, 0xe5, 0x7d, 0x60, 0x00, 
  0x74, 0xd8, 0x8a, 0x00, 0x0d, 0x15, 0x2c, 0x00, 0x81, 0x18, 0x0c, 0x00, 
  0x7e, 0x66, 0x94, 0x00, 0x01, 0x29, 0x16, 0x00, 0x9f, 0x7a, 0x76, 0x00, 
  0xfd, 0xfd, 0xbe, 0x00, 0x56, 0x45, 0xef, 0x00, 0xd9, 0x7e, 0x36, 0x00, 
  0xec, 0xd9, 0x13, 0x00, 0x8b, 0xba, 0xb9, 0x00, 0xc4, 0x97, 0xfc, 0x00, 
  0x31, 0xa8, 0x27, 0x00, 0xf1, 0x6e, 0xc3, 0x00, 0x94, 0xc5, 0x36, 0x00, 
  0xd8, 0xa8, 0x56, 0x00, 0xb4, 0xa8, 0xb5, 0x00, 0xcf, 0xcc, 0x0e, 0x00, 
  0x12, 0x89, 0x2d, 0x00, 0x6f, 0x57, 0x34, 0x00, 0x2c, 0x56, 0x89, 0x00, 
  0x99, 0xce, 0xe3, 0x00, 0xd6, 0x20, 0xb9, 0x00, 0x6b, 0x5e, 0xaa, 0x00, 
  0x3e, 0x2a, 0x9c, 0x00, 0x11, 0x5f, 0xcc, 0x00, 0xfd, 0x0b, 0x4a, 0x00, 
  0xe1, 0xf4, 0xfb, 0x00, 0x8e, 0x3b, 0x6d, 0x00, 0xe2, 0x86, 0x2c, 0x00, 
  0xe9, 0xd4, 0x84, 0x00, 0xfc, 0xb4, 0xa9, 0x00, 0xef, 0xee, 0xd1, 0x00, 
  0x2e, 0x35, 0xc9, 0x00, 0x2f, 0x39, 0x61, 0x00, 0x38, 0x21, 0x44, 0x00, 
  0x1b, 0xd9, 0xc8, 0x00, 0x81, 0xfc, 0x0a, 0x00, 0xfb, 0x4a, 0x6a, 0x00, 
  0x2f, 0x1c, 0xd8, 0x00, 0x53, 0xb4, 0x84, 0x00, 0x4e, 0x99, 0x8c, 0x00, 
  0x54, 0x22, 0xcc, 0x00, 0x2a, 0x55, 0xdc, 0x00, 0xc0, 0xc6, 0xd6, 0x00, 
  0x0b, 0x19, 0x96, 0x00, 0x1a, 0x70, 0xb8, 0x00, 0x69, 0x95, 0x64, 0x00, 
  0x26, 0x5a, 0x60, 0x00, 0x3f, 0x52, 0xee, 0x00, 0x7f, 0x11, 0x0f, 0x00, 
  0xf4, 0xb5, 0x11, 0x00, 0xfc, 0xcb, 0xf5, 0x00, 0x34, 0xbc, 0x2d, 0x00, 
  0x34, 0xbc, 0xee, 0x00, 0xe8, 0x5d, 0xcc, 0x00, 0xdd, 0x5e, 0x60, 0x00, 
  0x67, 0x8e, 0x9b, 0x00, 0x92, 0x33, 0xef, 0x00, 0xc9, 0x17, 0xb8, 0x00, 
  0x61, 0x58, 0x9b, 0x00, 0xe1, 0x57, 0xbc, 0x00, 0x51, 0x83, 0xc6, 0x00, 
  0xd8, 0x3e, 0x10, 0x00, 0xdd, 0x71, 0x48, 0x00, 0x2d, 0x1c, 0xdd, 0x00, 
  0xaf, 0x18, 0xa1, 0x00, 0x21, 0x2c, 0x46, 0x00, 0x59, 0xf3, 0xd7, 0x00, 
  0xd9, 0x7a, 0x98, 0x00, 0x9e, 0x54, 0xc0, 0x00, 0x4f, 0x86, 0xfa, 0x00, 
  0x56, 0x06, 0xfc, 0x00, 0xe5, 0x79, 0xae, 0x00, 0x89, 0x22, 0x36, 0x00, 
  0x38, 0xad, 0x22, 0x00, 0x67, 0x93, 0xdc, 0x00, 0x55, 0xe8, 0xaa, 0x00, 
  0x82, 0x26, 0x38, 0x00, 0xca, 0xe7, 0x9b, 0x00, 0x51, 0x0d, 0xa4, 0x00, 
  0x99, 0x33, 0xb1, 0x00, 0xa9, 0xd7, 0x0e, 0x00, 0x69, 0x05, 0x48, 0x00, 
  0x65, 0xb2, 0xf0, 0x00, 0x7f, 0x88, 0xa7, 0x00, 0x88, 0x4c, 0x97, 0x00, 
  0xf9, 0xd1, 0x36, 0x00, 0x21, 0x92, 0xb3, 0x00, 0x7b, 0x82, 0x4a, 0x00, 
  0x98, 0xcf, 0x21, 0x00, 0x40, 0x9f, 0xdc, 0x00, 0xdc, 0x47, 0x55, 0x00, 
  0xe1, 0x74, 0x3a, 0x00, 0x67, 0xeb, 0x42, 0x00, 0xfe, 0x9d, 0xdf, 0x00, 
  0x5e, 0xd4, 0x5f, 0x00, 0x7b, 0x67, 0xa4, 0x00, 0xba, 0xac, 0x7a, 0x00, 
  0x55, 0xf6, 0xa2, 0x00, 0x2b, 0x88, 0x23, 0x00, 0x41, 0xba, 0x55, 0x00, 
  0x59, 0x6e, 0x08, 0x00, 0x21, 0x2a, 0x86, 0x00, 0x39, 0x47, 0x83, 0x00, 
  0x89, 0xe3, 0xe6, 0x00, 0xe5, 0x9e, 0xd4, 0x00, 0x49, 0xfb, 0x40, 0x00, 
  0xff, 0x56, 0xe9, 0x00, 0x1c, 0x0f, 0xca, 0x00, 0xc5, 0x59, 0x8a, 0x00, 
  0x94, 0xfa, 0x2b, 0x00, 0xd3, 0xc1, 0xc5, 0x00, 0x0f, 0xc5, 0xcf, 0x00, 
  0xdb, 0x5a, 0xae, 0x00, 0x47, 0xc5, 0x86, 0x00, 0x85, 0x43, 0x62, 0x00, 
  0x21, 0x86, 0x3b, 0x00, 0x2c, 0x79, 0x94, 0x00, 0x10, 0x61, 0x87, 0x00, 
  0x2a, 0x4c, 0x7b, 0x00, 0x80, 0x2c, 0x1a, 0x00, 0x43, 0xbf, 0x12, 0x00, 
  0x88, 0x26, 0x90, 0x00, 0x78, 0x3c, 0x89, 0x00, 0xa8, 0xc4, 0xe4, 0x00, 
  0xe5, 0xdb, 0x7b, 0x00, 0xc4, 0x3a, 0xc2, 0x00, 0x26, 0xf4, 0xea, 0x00, 
  0xf7, 0x67, 0x8a, 0x00, 0x0d, 0x92, 0xbf, 0x00, 0x65, 0xa3, 0x2b, 0x00, 
  0x3d, 0x93, 0xb1, 0x00, 0xbd, 0x7c, 0x0b, 0x00, 0xa4, 0x51, 0xdc, 0x00, 
  0x27, 0xdd, 0x63, 0x00, 0x69, 0xe1, 0xdd, 0x00, 0x9a, 0x94, 0x19, 0x00, 
  0xa8, 0x29, 0x95, 0x00, 0x68, 0xce, 0x28, 0x00, 0x09, 0xed, 0xb4, 0x00, 
  0x44, 0x9f, 0x20, 0x00, 0x4e, 0x98, 0xca, 0x00, 0x70, 0x82, 0x63, 0x00, 
  0x7e, 0x7c, 0x23, 0x00, 0x0f, 0xb9, 0x32, 0x00, 0xa7, 0xf5, 0x8e, 0x00, 
  0x14, 0x56, 0xe7, 0x00, 0x21, 0xf1, 0x08, 0x00, 0xb5, 0x9d, 0x2a, 0x00, 
  0x6f, 0x7e, 0x4d, 0x00, 0xa5, 0x19, 0x51, 0x00, 0xb5, 0xf9, 0xab, 0x00, 
  0x82, 0xdf, 0xd6, 0x00, 0x96, 0xdd, 0x61, 0x00, 0x16, 0x36, 0x02, 0x00, 
  0xc4, 0x3a, 0x9f, 0x00, 0x83, 0xa2, 0xa1, 0x00, 0x72, 0xed, 0x6d, 0x00, 
  0x39, 0x8d, 0x7a, 0x00, 0x82, 0xb8, 0xa9, 0x00, 0x6b, 0x32, 0x5c, 0x00, 
  0x46, 0x27, 0x5b, 0x00, 0x00, 0x34, 0xed, 0x00, 0xd2, 0x00, 0x77, 0x00, 
  0xfc, 0xf4, 0x55, 0x00, 0x01, 0x59, 0x4d, 0x00, 0xe0, 0x71, 0x80, 0x00, 
  
};

static const u8 data_segment_data_82[] = {
  0x00, 0x00, 0x00, 0x40, 0xfb, 0x21, 0xf9, 0x3f, 0x00, 0x00, 0x00, 0x00, 
  0x2d, 0x44, 0x74, 0x3e, 0x00, 0x00, 0x00, 0x80, 0x98, 0x46, 0xf8, 0x3c, 
  0x00, 0x00, 0x00, 0x60, 0x51, 0xcc, 0x78, 0x3b, 0x00, 0x00, 0x00, 0x80, 
  0x83, 0x1b, 0xf0, 0x39, 0x00, 0x00, 0x00, 0x40, 0x20, 0x25, 0x7a, 0x38, 
  0x00, 0x00, 0x00, 0x80, 0x22, 0x82, 0xe3, 0x36, 0x00, 0x00, 0x00, 0x00, 
  0x1d, 0xf3, 0x69, 0x35, 
};

static const u8 data_segment_data_83[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 
  0x65, 0x78, 0x5f, 0x67, 0x65, 0x74, 0x00, 
};

static const u8 data_segment_data_84[] = {
  0x6d, 0x70, 0x5f, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x63, 
  0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x72, 0x61, 
  0x77, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x00, 
};

static const u8 data_segment_data_85[] = {
  0x69, 0x00, 0x03, 0x02, 0x06, 0x00, 0x00, 0x00, 0x83, 0x00, 0x01, 0x02, 
  0x00, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_86[] = {
  0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x00, 
  
};

static const u8 data_segment_data_87[] = {
  0x6d, 0x70, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x75, 0x6e, 0x6c, 
  0x6f, 0x63, 0x6b, 0x00, 
};

static const u8 data_segment_data_88[] = {
  0x6d, 0x70, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x62, 
  0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x00, 
};

static const u8 data_segment_data_89[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x66, 
  0x75, 0x6e, 0x5f, 0x62, 0x63, 0x00, 
};

static const u8 data_segment_data_90[] = {
  0x66, 0x75, 0x6e, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x5f, 
  0x30, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x00, 
};

static const u8 data_segment_data_91[] = {
  0x66, 0x75, 0x6e, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x5f, 
  0x31, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x00, 
};

static const u8 data_segment_data_92[] = {
  0x66, 0x75, 0x6e, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x5f, 
  0x32, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x00, 
};

static const u8 data_segment_data_93[] = {
  0x66, 0x75, 0x6e, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x5f, 
  0x33, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x00, 
};

static const u8 data_segment_data_94[] = {
  0x66, 0x75, 0x6e, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x5f, 
  0x76, 0x61, 0x72, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x00, 
};

static const u8 data_segment_data_95[] = {
  0x66, 0x75, 0x6e, 0x5f, 0x62, 0x63, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x00, 
  
};

static const u8 data_segment_data_96[] = {
  0x6d, 0x70, 0x5f, 0x70, 0x79, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x66, 
  0x72, 0x65, 0x65, 0x00, 0x6d, 0x70, 0x5f, 0x70, 0x79, 0x73, 0x74, 0x61, 
  0x63, 0x6b, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x00, 0x6d, 0x70, 0x5f, 0x70, 
  0x79, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x00, 
  0x6d, 0x70, 0x5f, 0x70, 0x79, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x66, 
  0x72, 0x65, 0x65, 0x00, 
};

static const u8 data_segment_data_97[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 
  0x31, 0x32, 0x38, 0x5f, 0x67, 0x65, 0x74, 0x00, 
};

static const u8 data_segment_data_98[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 
  0x74, 0x6f, 0x5f, 0x75, 0x6c, 0x6c, 0x00, 
};

static const u8 data_segment_data_99[] = {
  0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6f, 0x62, 0x6a, 0x00, 
};

static const u8 data_segment_data_100[] = {
  0x6d, 0x70, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x5f, 0x5f, 
  0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_101[] = {
  0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 
  0x00, 
};

static const u8 data_segment_data_102[] = {
  0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 
  0x00, 
};

static const u8 data_segment_data_103[] = {
  0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 
  0x00, 
};

static const u8 data_segment_data_104[] = {
  0x5f, 0x01, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x92, 0x00, 0x02, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_105[] = {
  0x65, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x74, 
  0x65, 0x72, 0x6e, 0x65, 0x78, 0x74, 0x00, 
};

static const u8 data_segment_data_106[] = {
  0x01, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, 
  0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, 0x00, 
  0x2a, 0x01, 0x03, 0x00, 0x06, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_107[] = {
  0x6d, 0x70, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x5f, 0x5f, 
  0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 
  0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_108[] = {
  0x6d, 0x70, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 
  0x69, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x00, 0x6d, 0x70, 
  0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x73, 
  0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x00, 0x6d, 0x70, 0x5f, 0x6d, 
  0x61, 0x70, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x73, 0x5f, 0x66, 
  0x69, 0x6c, 0x6c, 0x65, 0x64, 0x00, 0x6d, 0x70, 0x5f, 0x6d, 0x61, 0x70, 
  0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6c, 
  0x6c, 0x65, 0x64, 0x00, 
};

static const u8 data_segment_data_109[] = {
  0x8b, 0x00, 0x03, 0x02, 0x22, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x03, 0x02, 
  0x1a, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_110[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xf0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x40, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x38, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5e, 0x40, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x86, 0x40, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xb0, 0xb3, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0xe3, 0x40, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x16, 0x41, 0x00, 0x00, 0x00, 0x00, 
  0x80, 0xaf, 0x4b, 0x41, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x08, 0x83, 0x41, 
  0x00, 0x00, 0x00, 0x00, 0xfc, 0x8c, 0xbc, 0x41, 0x00, 0x00, 0x00, 0xc0, 
  0x8c, 0x32, 0xf7, 0x41, 0x00, 0x00, 0x00, 0x28, 0x3b, 0x4c, 0x34, 0x42, 
  0x00, 0x00, 0x80, 0x75, 0x77, 0x07, 0x73, 0x42, 0x00, 0x00, 0x80, 0x75, 
  0x77, 0x07, 0xb3, 0x42, 0x00, 0x00, 0xd8, 0xec, 0xee, 0x37, 0xf4, 0x42, 
  0x00, 0x00, 0x73, 0xca, 0xec, 0xbe, 0x36, 0x43, 0x00, 0x90, 0x68, 0x30, 
  0xb9, 0x02, 0x7b, 0x43, 0x00, 0x5a, 0x41, 0xbe, 0xb3, 0xe1, 0xc0, 0x43, 
  0x20, 0xc6, 0xb5, 0xe9, 0x3b, 0x28, 0x06, 0x44, 0x6c, 0xf0, 0x59, 0x61, 
  0x52, 0x77, 0x4e, 0x44, 
};

static const u8 data_segment_data_111[] = {
  0x01, 0x00, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0x8a, 0x01, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 
  0xdc, 0x00, 0x03, 0x02, 0x01, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_112[] = {
  0x73, 0x01, 0x00, 0x00, 0xd0, 0x01, 0x00, 0x00, 0x71, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_113[] = {
  0x98, 0x2f, 0x8a, 0x42, 0x91, 0x44, 0x37, 0x71, 0xcf, 0xfb, 0xc0, 0xb5, 
  0xa5, 0xdb, 0xb5, 0xe9, 0x5b, 0xc2, 0x56, 0x39, 0xf1, 0x11, 0xf1, 0x59, 
  0xa4, 0x82, 0x3f, 0x92, 0xd5, 0x5e, 0x1c, 0xab, 0x98, 0xaa, 0x07, 0xd8, 
  0x01, 0x5b, 0x83, 0x12, 0xbe, 0x85, 0x31, 0x24, 0xc3, 0x7d, 0x0c, 0x55, 
  0x74, 0x5d, 0xbe, 0x72, 0xfe, 0xb1, 0xde, 0x80, 0xa7, 0x06, 0xdc, 0x9b, 
  0x74, 0xf1, 0x9b, 0xc1, 0xc1, 0x69, 0x9b, 0xe4, 0x86, 0x47, 0xbe, 0xef, 
  0xc6, 0x9d, 0xc1, 0x0f, 0xcc, 0xa1, 0x0c, 0x24, 0x6f, 0x2c, 0xe9, 0x2d, 
  0xaa, 0x84, 0x74, 0x4a, 0xdc, 0xa9, 0xb0, 0x5c, 0xda, 0x88, 0xf9, 0x76, 
  0x52, 0x51, 0x3e, 0x98, 0x6d, 0xc6, 0x31, 0xa8, 0xc8, 0x27, 0x03, 0xb0, 
  0xc7, 0x7f, 0x59, 0xbf, 0xf3, 0x0b, 0xe0, 0xc6, 0x47, 0x91, 0xa7, 0xd5, 
  0x51, 0x63, 0xca, 0x06, 0x67, 0x29, 0x29, 0x14, 0x85, 0x0a, 0xb7, 0x27, 
  0x38, 0x21, 0x1b, 0x2e, 0xfc, 0x6d, 0x2c, 0x4d, 0x13, 0x0d, 0x38, 0x53, 
  0x54, 0x73, 0x0a, 0x65, 0xbb, 0x0a, 0x6a, 0x76, 0x2e, 0xc9, 0xc2, 0x81, 
  0x85, 0x2c, 0x72, 0x92, 0xa1, 0xe8, 0xbf, 0xa2, 0x4b, 0x66, 0x1a, 0xa8, 
  0x70, 0x8b, 0x4b, 0xc2, 0xa3, 0x51, 0x6c, 0xc7, 0x19, 0xe8, 0x92, 0xd1, 
  0x24, 0x06, 0x99, 0xd6, 0x85, 0x35, 0x0e, 0xf4, 0x70, 0xa0, 0x6a, 0x10, 
  0x16, 0xc1, 0xa4, 0x19, 0x08, 0x6c, 0x37, 0x1e, 0x4c, 0x77, 0x48, 0x27, 
  0xb5, 0xbc, 0xb0, 0x34, 0xb3, 0x0c, 0x1c, 0x39, 0x4a, 0xaa, 0xd8, 0x4e, 
  0x4f, 0xca, 0x9c, 0x5b, 0xf3, 0x6f, 0x2e, 0x68, 0xee, 0x82, 0x8f, 0x74, 
  0x6f, 0x63, 0xa5, 0x78, 0x14, 0x78, 0xc8, 0x84, 0x08, 0x02, 0xc7, 0x8c, 
  0xfa, 0xff, 0xbe, 0x90, 0xeb, 0x6c, 0x50, 0xa4, 0xf7, 0xa3, 0xf9, 0xbe, 
  0xf2, 0x78, 0x71, 0xc6, 
};

static const u8 data_segment_data_114[] = {
  0x6e, 0x6f, 0x74, 0x20, 0x61, 0x6e, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x74, 
  0x79, 0x70, 0x65, 0x00, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x73, 0x6c, 0x69, 
  0x63, 0x65, 0x73, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x73, 0x74, 0x65, 
  0x70, 0x3d, 0x31, 0x20, 0x28, 0x61, 0x6b, 0x61, 0x20, 0x4e, 0x6f, 0x6e, 
  0x65, 0x29, 0x20, 0x61, 0x72, 0x65, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 
  0x72, 0x74, 0x65, 0x64, 0x00, 0xa1, 0x65, 0x07, 0x4f, 0x53, 0x45, 0x72, 
  0x72, 0x6f, 0x72, 0x00, 0x51, 0x72, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 
  0x00, 
};

static const u8 data_segment_data_115[] = {
  0x6e, 0x6f, 0x74, 0x20, 0x61, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 
  0x74, 0x79, 0x70, 0x65, 0x00, 0x81, 0xe1, 0x0d, 0x4f, 0x76, 0x65, 0x72, 
  0x66, 0x6c, 0x6f, 0x77, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x00, 0x92, 0x5c, 
  0x07, 0x2b, 0x2b, 0x2b, 0x66, 0x6f, 0x6f, 0x3a, 0x00, 
};

static const u8 data_segment_data_116[] = {
  0x6e, 0x6f, 0x74, 0x20, 0x61, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x31, 
  0x32, 0x38, 0x20, 0x74, 0x79, 0x70, 0x65, 0x00, 0x63, 0x61, 0x6e, 0x27, 
  0x74, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x27, 0x25, 
  0x71, 0x27, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x74, 0x6f, 
  0x20, 0x25, 0x71, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 
  0x6c, 0x79, 0x00, 0x61, 0xf1, 0x0c, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 
  0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x00, 0xc4, 0xb5, 0x01, 0x61, 0x00, 
  
};

static const u8 data_segment_data_117[] = {
  0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 
  0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_118[] = {
  0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 
  0x61, 0x72, 0x79, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x00, 0x96, 0x87, 
  0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x00, 
  0xc7, 0xf3, 0x08, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x2e, 0x70, 0x79, 0x00, 
  
};

static const u8 data_segment_data_119[] = {
  0x73, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 
  0x69, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 
  0x73, 0x3a, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x61, 0x72, 0x72, 0x61, 
  0x79, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x21, 0x00, 0xc2, 0xc6, 
  0x04, 0x61, 0x72, 0x67, 0x73, 0x00, 
};

static const u8 data_segment_data_120[] = {
  0x64, 0x69, 0x63, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x65, 
  0x78, 0x74, 0x00, 
};

static const u8 data_segment_data_121[] = {
  0x64, 0x69, 0x63, 0x74, 0x5f, 0x70, 0x6f, 0x70, 0x69, 0x74, 0x65, 0x6d, 
  0x00, 
};

static const u8 data_segment_data_122[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x69, 
  0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x00, 
};

static const u8 data_segment_data_123[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 
  0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x6e, 0x65, 0x77, 
  0x00, 
};

static const u8 data_segment_data_124[] = {
  0xc2, 0xbf, 0xb6, 0x00, 0xaa, 0x14, 0x10, 0xa6, 0x12, 0x00, 
};

static const u8 data_segment_data_125[] = {
  0xba, 0xb3, 0xaf, 0xb8, 0xb2, 0xbe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xb4, 0xb7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xca, 
  0xa8, 0xb9, 0xc6, 0xa7, 0xc7, 0xbd, 0xbb, 0xb1, 0xc9, 0xbc, 0xc3, 0xae, 
  0xac, 
};

static const u8 data_segment_data_126[] = {
  0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 
  0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x62, 0x61, 
  0x73, 0x65, 0x73, 0x00, 
};

static const u8 data_segment_data_127[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 
  0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x00, 
};

static const u8 data_segment_data_128[] = {
  0x74, 0x79, 0x70, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x00, 
};

static const u8 data_segment_data_129[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 
  0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x74, 0x74, 
  0x72, 0x00, 
};

static const u8 data_segment_data_130[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x79, 
  0x70, 0x65, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x6e, 0x2c, 0x20, 
  0x26, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x75, 0x70, 
  0x65, 0x72, 0x29, 0x00, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 
  0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 
  0x72, 0x74, 0x65, 0x64, 0x20, 0x79, 0x65, 0x74, 0x00, 0x70, 0x79, 0x73, 
  0x74, 0x61, 0x63, 0x6b, 0x2e, 0x68, 0x00, 0x02, 0x73, 0x08, 0x5f, 0x5f, 
  0x6e, 0x65, 0x78, 0x74, 0x5f, 0x5f, 0x00, 0x3c, 0x18, 0x09, 0x5f, 0x64, 
  0x62, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x00, 
};

static const u8 data_segment_data_131[] = {
  0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x00, 
};

static const u8 data_segment_data_132[] = {
  0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 
  0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6d, 0x61, 0x6b, 0x65, 
  0x5f, 0x6e, 0x65, 0x77, 0x00, 
};

static const u8 data_segment_data_133[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x70, 0x72, 0x69, 0x6e, 0x74, 
  0x5f, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_134[] = {
  0x62, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_135[] = {
  0x20, 0x09, 0x0a, 0x0d, 0x0b, 0x0c, 0x00, 
};

static const u8 data_segment_data_136[] = {
  0x73, 0x74, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x5f, 0x73, 0x74, 0x72, 0x69, 
  0x70, 0x00, 
};

static const u8 data_segment_data_137[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x73, 0x74, 0x72, 0x5f, 0x66, 
  0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 
  0x00, 
};

static const u8 data_segment_data_138[] = {
  0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x20, 0x6e, 0x65, 0x65, 0x64, 
  0x65, 0x64, 0x00, 0x83, 0xad, 0x0a, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 
  0x72, 0x72, 0x6f, 0x72, 0x00, 0x61, 0x74, 0x0f, 0x69, 0x64, 0x78, 0x5f, 
  0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x00, 
  
};

static const u8 data_segment_data_139[] = {
  0x75, 0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x20, 
  0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 
  0x63, 0x74, 0x65, 0x72, 0x20, 0x27, 0x25, 0x63, 0x27, 0x20, 0x28, 0x30, 
  0x78, 0x25, 0x78, 0x29, 0x20, 0x61, 0x74, 0x20, 0x69, 0x6e, 0x64, 0x65, 
  0x78, 0x20, 0x25, 0x64, 0x00, 0xea, 0x00, 0x08, 0x4b, 0x65, 0x79, 0x45, 
  0x72, 0x72, 0x6f, 0x72, 0x00, 0x21, 0x95, 0x15, 0x67, 0x65, 0x74, 0x5f, 
  0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x6e, 
  0x64, 0x65, 0x78, 0x65, 0x73, 0x00, 
};

static const u8 data_segment_data_140[] = {
  0x73, 0x74, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x00, 
  
};

static const u8 data_segment_data_141[] = {
  0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 
  0x20, 0x6f, 0x66, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 
  0x73, 0x00, 0xc6, 0x98, 0x13, 0x4e, 0x6f, 0x74, 0x49, 0x6d, 0x70, 0x6c, 
  0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 
  0x00, 0x24, 0xe9, 0x06, 0x66, 0x6f, 0x6f, 0x2e, 0x70, 0x79, 0x00, 
};

static const u8 data_segment_data_142[] = {
  0x73, 0x74, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x00, 
};

static const u8 data_segment_data_143[] = {
  0x6d, 0x70, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 
  0x70, 0x00, 
};

static const u8 data_segment_data_144[] = {
  0x6d, 0x70, 0x5f, 0x61, 0x72, 0x67, 0x5f, 0x70, 0x61, 0x72, 0x73, 0x65, 
  0x5f, 0x61, 0x6c, 0x6c, 0x00, 
};

static const u8 data_segment_data_145[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 
  0x5f, 0x67, 0x65, 0x74, 0x00, 
};

static const u8 data_segment_data_146[] = {
  0xff, 0xff, 0xff, 0x7f, 
};

static const u8 data_segment_data_147[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x6e, 0x74, 0x5f, 0x66, 
  0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6d, 0x70, 
  0x6c, 0x00, 
};

static const u8 data_segment_data_148[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x6e, 0x74, 0x5f, 0x74, 
  0x6f, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x69, 0x6d, 0x70, 0x6c, 
  0x00, 
};

static const u8 data_segment_data_149[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x6e, 0x74, 0x5f, 0x62, 
  0x69, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x6f, 0x70, 0x00, 
};

static const u8 data_segment_data_150[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 
  0x73, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x69, 0x6d, 0x70, 0x6c, 
  0x00, 
};

static const u8 data_segment_data_151[] = {
  0x6d, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 
  0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x00, 
};

static const u8 data_segment_data_152[] = {
  0x00, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 
  0x03, 0x03, 0x03, 0x04, 
};

static const u8 data_segment_data_153[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x6e, 0x74, 0x5f, 0x66, 
  0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x00, 
};

static const u8 data_segment_data_154[] = {
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
  0x20, 0x20, 0x20, 0x20, 0x00, 
};

static const u8 data_segment_data_155[] = {
  0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 
  0x30, 0x30, 0x30, 0x30, 0x00, 
};

static const u8 data_segment_data_156[] = {
  0x6d, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x6d, 0x70, 0x5f, 
  0x69, 0x6e, 0x74, 0x00, 
};

static const u8 data_segment_data_157[] = {
  0x6d, 0x70, 0x5f, 0x76, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x66, 0x00, 
};

static const u8 data_segment_data_158[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x74, 0x75, 0x70, 0x6c, 0x65, 
  0x5f, 0x67, 0x65, 0x74, 0x00, 
};

static const u8 data_segment_data_159[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x74, 0x75, 0x70, 0x6c, 0x65, 
  0x5f, 0x64, 0x65, 0x6c, 0x00, 
};

static const u8 data_segment_data_160[] = {
  0x6d, 0x70, 0x5f, 0x75, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x6f, 0x70, 0x00, 
  
};

static const u8 data_segment_data_161[] = {
  0x6d, 0x70, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x68, 
  0x6f, 0x64, 0x5f, 0x6d, 0x61, 0x79, 0x62, 0x65, 0x00, 
};

static const u8 data_segment_data_162[] = {
  0x6d, 0x70, 0x5f, 0x67, 0x65, 0x74, 0x69, 0x74, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_163[] = {
  0x6d, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x00, 
};

static const u8 data_segment_data_164[] = {
  0x6d, 0x70, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x70, 
  0x61, 0x72, 0x65, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x5f, 0x6e, 0x5f, 0x6b, 
  0x77, 0x5f, 0x76, 0x61, 0x72, 0x00, 
};

static const u8 data_segment_data_165[] = {
  0xea, 0x1c, 0x0d, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x72, 0x61, 
  0x74, 0x69, 0x6f, 0x6e, 0x00, 0xc7, 0xb5, 0x01, 0x62, 0x00, 
};

static const u8 data_segment_data_166[] = {
  0x94, 0x8f, 0x0b, 0x53, 0x79, 0x6e, 0x74, 0x61, 0x78, 0x45, 0x72, 0x72, 
  0x6f, 0x72, 0x00, 0xc6, 0xb5, 0x01, 0x63, 0x00, 
};

static const u8 data_segment_data_167[] = {
  0x20, 0xff, 0x0a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x78, 0x69, 
  0x74, 0x00, 0x53, 0x4f, 0x06, 0x62, 0x61, 0x72, 0x2e, 0x70, 0x79, 0x00, 
  
};

static const u8 data_segment_data_168[] = {
  0x25, 0x96, 0x09, 0x54, 0x79, 0x70, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 
  0x00, 0x65, 0xa9, 0x07, 0x2b, 0x2b, 0x2b, 0x62, 0x61, 0x72, 0x3a, 0x00, 
  
};

static const u8 data_segment_data_169[] = {
  0xb6, 0x27, 0x11, 0x5a, 0x65, 0x72, 0x6f, 0x44, 0x69, 0x76, 0x69, 0x73, 
  0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x00, 0x83, 0x6d, 0x02, 
  0x64, 0x62, 0x00, 
};

static const u8 data_segment_data_170[] = {
  0x95, 0x32, 0x03, 0x61, 0x62, 0x73, 0x00, 0x91, 0x3c, 0x08, 0x62, 0x69, 
  0x6e, 0x61, 0x73, 0x63, 0x69, 0x69, 0x00, 
};

static const u8 data_segment_data_171[] = {
  0x44, 0x33, 0x03, 0x61, 0x6c, 0x6c, 0x00, 0x10, 0x6d, 0x07, 0x68, 0x61, 
  0x73, 0x68, 0x6c, 0x69, 0x62, 0x00, 
};

static const u8 data_segment_data_172[] = {
  0x13, 0x33, 0x03, 0x61, 0x6e, 0x79, 0x00, 
};

static const u8 data_segment_data_173[] = {
  0x6b, 0x97, 0x06, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_174[] = {
  0xeb, 0x3c, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x00, 
};

static const u8 data_segment_data_175[] = {
  0xf7, 0x31, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x73, 0x00, 
  
};

static const u8 data_segment_data_176[] = {
  0x76, 0xa3, 0x09, 0x62, 0x79, 0x74, 0x65, 0x61, 0x72, 0x72, 0x61, 0x79, 
  0x00, 
};

static const u8 data_segment_data_177[] = {
  0x22, 0x7d, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x00, 
  
};

static const u8 data_segment_data_178[] = {
  0x5c, 0xb2, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x00, 
};

static const u8 data_segment_data_179[] = {
  0x0d, 0x70, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x00, 
  
};

static const u8 data_segment_data_180[] = {
  0xdc, 0x4c, 0x03, 0x63, 0x68, 0x72, 0x00, 
};

static const u8 data_segment_data_181[] = {
  0xb4, 0x8c, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x6d, 0x65, 0x74, 0x68, 
  0x6f, 0x64, 0x00, 
};

static const u8 data_segment_data_182[] = {
  0x7c, 0xa0, 0x05, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x00, 
};

static const u8 data_segment_data_183[] = {
  0x33, 0x67, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x00, 
};

static const u8 data_segment_data_184[] = {
  0xc0, 0xff, 0x05, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x00, 
};

static const u8 data_segment_data_185[] = {
  0xe0, 0xdb, 0x04, 0x63, 0x6f, 0x70, 0x79, 0x00, 
};

static const u8 data_segment_data_186[] = {
  0xa6, 0x4d, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x00, 
};

static const u8 data_segment_data_187[] = {
  0x3f, 0xfc, 0x04, 0x64, 0x69, 0x63, 0x74, 0x00, 
};

static const u8 data_segment_data_188[] = {
  0xfa, 0x1e, 0x03, 0x64, 0x69, 0x72, 0x00, 
};

static const u8 data_segment_data_189[] = {
  0xb8, 0x04, 0x06, 0x64, 0x69, 0x76, 0x6d, 0x6f, 0x64, 0x00, 
};

static const u8 data_segment_data_190[] = {
  0x0a, 0x23, 0x03, 0x65, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_191[] = {
  0x1b, 0xa3, 0x08, 0x65, 0x6e, 0x64, 0x73, 0x77, 0x69, 0x74, 0x68, 0x00, 
  
};

static const u8 data_segment_data_192[] = {
  0x9b, 0xa6, 0x04, 0x65, 0x76, 0x61, 0x6c, 0x00, 
};

static const u8 data_segment_data_193[] = {
  0x1e, 0xc0, 0x04, 0x65, 0x78, 0x65, 0x63, 0x00, 
};

static const u8 data_segment_data_194[] = {
  0x63, 0xe8, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_195[] = {
  0x00, 0x34, 0x04, 0x66, 0x69, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_196[] = {
  0x26, 0x33, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x00, 
};

static const u8 data_segment_data_197[] = {
  0x35, 0x74, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x62, 0x79, 0x74, 0x65, 
  0x73, 0x00, 
};

static const u8 data_segment_data_198[] = {
  0x33, 0x3b, 0x03, 0x67, 0x65, 0x74, 0x00, 
};

static const u8 data_segment_data_199[] = {
  0xc0, 0x17, 0x07, 0x67, 0x65, 0x74, 0x61, 0x74, 0x74, 0x72, 0x00, 
};

static const u8 data_segment_data_200[] = {
  0x9d, 0x49, 0x07, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x73, 0x00, 
};

static const u8 data_segment_data_201[] = {
  0x8c, 0xb0, 0x07, 0x68, 0x61, 0x73, 0x61, 0x74, 0x74, 0x72, 0x00, 
};

static const u8 data_segment_data_202[] = {
  0xb7, 0x70, 0x04, 0x68, 0x61, 0x73, 0x68, 0x00, 
};

static const u8 data_segment_data_203[] = {
  0x28, 0x6f, 0x02, 0x69, 0x64, 0x00, 
};

static const u8 data_segment_data_204[] = {
  0x7b, 0x28, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x00, 
};

static const u8 data_segment_data_205[] = {
  0x12, 0x54, 0x06, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x00, 
};

static const u8 data_segment_data_206[] = {
  0x16, 0x53, 0x03, 0x69, 0x6e, 0x74, 0x00, 
};

static const u8 data_segment_data_207[] = {
  0xeb, 0x37, 0x07, 0x69, 0x73, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x00, 
};

static const u8 data_segment_data_208[] = {
  0xa8, 0x9a, 0x07, 0x69, 0x73, 0x64, 0x69, 0x67, 0x69, 0x74, 0x00, 
};

static const u8 data_segment_data_209[] = {
  0xb6, 0xbe, 0x0a, 0x69, 0x73, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 
  0x65, 0x00, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x77, 0x6f, 0x72, 0x6c, 
  0x64, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x66, 0x6f, 0x6f, 0x6f, 0x00, 
  
};

static const u8 data_segment_data_210[] = {
  0xfc, 0x80, 0x07, 0x69, 0x73, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_211[] = {
  0x5b, 0xf8, 0x07, 0x69, 0x73, 0x73, 0x70, 0x61, 0x63, 0x65, 0x00, 
};

static const u8 data_segment_data_212[] = {
  0xb5, 0x7f, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x62, 0x63, 0x6c, 0x61, 0x73, 
  0x73, 0x00, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x77, 0x6f, 0x72, 0x6c, 
  0x64, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x62, 0x61, 0x72, 0x00, 
};

static const u8 data_segment_data_213[] = {
  0xdd, 0xa7, 0x07, 0x69, 0x73, 0x75, 0x70, 0x70, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_214[] = {
  0xe3, 0x53, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x00, 0x69, 0x6e, 0x69, 
  0x74, 0x2e, 0x70, 0x79, 0x3a, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x64, 0x6f, 
  0x6e, 0x65, 0x21, 0x00, 
};

static const u8 data_segment_data_215[] = {
  0x8f, 0x21, 0x04, 0x69, 0x74, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_216[] = {
  0xa7, 0x5c, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x00, 0x68, 0x65, 0x6c, 0x6c, 
  0x6f, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x66, 0x72, 0x6f, 0x6d, 
  0x20, 0x69, 0x6e, 0x69, 0x74, 0x00, 
};

static const u8 data_segment_data_217[] = {
  0x32, 0x6d, 0x03, 0x6b, 0x65, 0x79, 0x00, 
};

static const u8 data_segment_data_218[] = {
  0x01, 0x13, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x00, 
};

static const u8 data_segment_data_219[] = {
  0x62, 0x40, 0x03, 0x6c, 0x65, 0x6e, 0x00, 
};

static const u8 data_segment_data_220[] = {
  0x27, 0x1d, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x00, 
};

static const u8 data_segment_data_221[] = {
  0x89, 0x6a, 0x06, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x00, 
};

static const u8 data_segment_data_222[] = {
  0x3b, 0xa1, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x73, 0x00, 
};

static const u8 data_segment_data_223[] = {
  0xc6, 0xcb, 0x05, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_224[] = {
  0xe5, 0xb9, 0x06, 0x6c, 0x73, 0x74, 0x72, 0x69, 0x70, 0x00, 
};

static const u8 data_segment_data_225[] = {
  0xce, 0xb7, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x00, 
};

static const u8 data_segment_data_226[] = {
  0xb9, 0x43, 0x03, 0x6d, 0x61, 0x70, 0x00, 
};

static const u8 data_segment_data_227[] = {
  0x0b, 0x7c, 0x0b, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x70, 0x79, 0x74, 0x68, 
  0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_228[] = {
  0x42, 0x88, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x00, 
};

static const u8 data_segment_data_229[] = {
  0x90, 0x8d, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x00, 
};

static const u8 data_segment_data_230[] = {
  0xd1, 0x3a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x00, 
};

static const u8 data_segment_data_231[] = {
  0x1c, 0x5e, 0x03, 0x6f, 0x72, 0x64, 0x00, 
};

static const u8 data_segment_data_232[] = {
  0x2a, 0x73, 0x03, 0x70, 0x6f, 0x70, 0x00, 
};

static const u8 data_segment_data_233[] = {
  0xbf, 0x2c, 0x07, 0x70, 0x6f, 0x70, 0x69, 0x74, 0x65, 0x6d, 0x00, 
};

static const u8 data_segment_data_234[] = {
  0x2d, 0x73, 0x03, 0x70, 0x6f, 0x77, 0x00, 
};

static const u8 data_segment_data_235[] = {
  0x54, 0xc6, 0x05, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x00, 
};

static const u8 data_segment_data_236[] = {
  0x1a, 0x5e, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x00, 
};

static const u8 data_segment_data_237[] = {
  0xb7, 0xf9, 0x04, 0x72, 0x65, 0x61, 0x64, 0x00, 
};

static const u8 data_segment_data_238[] = {
  0x4b, 0xbf, 0x08, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x74, 0x6f, 0x00, 
  
};

static const u8 data_segment_data_239[] = {
  0xf9, 0x19, 0x08, 0x72, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x00, 
  
};

static const u8 data_segment_data_240[] = {
  0x63, 0x8a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x00, 
};

static const u8 data_segment_data_241[] = {
  0x49, 0x25, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x00, 
};

static const u8 data_segment_data_242[] = {
  0xd0, 0xf7, 0x04, 0x72, 0x65, 0x70, 0x72, 0x00, 
};

static const u8 data_segment_data_243[] = {
  0x25, 0x2a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x00, 
};

static const u8 data_segment_data_244[] = {
  0xd2, 0x9c, 0x05, 0x72, 0x66, 0x69, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_245[] = {
  0xe9, 0x2b, 0x06, 0x72, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x00, 
};

static const u8 data_segment_data_246[] = {
  0xe7, 0x25, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_247[] = {
  0xa5, 0x00, 0x06, 0x72, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x00, 
};

static const u8 data_segment_data_248[] = {
  0x3b, 0x95, 0x06, 0x72, 0x73, 0x74, 0x72, 0x69, 0x70, 0x00, 
};

static const u8 data_segment_data_249[] = {
  0x79, 0x77, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x00, 
};

static const u8 data_segment_data_250[] = {
  0xb9, 0x76, 0x04, 0x73, 0x65, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_251[] = {
  0x23, 0x8f, 0x03, 0x73, 0x65, 0x70, 0x00, 
};

static const u8 data_segment_data_252[] = {
  0x27, 0x8f, 0x03, 0x73, 0x65, 0x74, 0x00, 
};

static const u8 data_segment_data_253[] = {
  0xd4, 0xa8, 0x07, 0x73, 0x65, 0x74, 0x61, 0x74, 0x74, 0x72, 0x00, 
};

static const u8 data_segment_data_254[] = {
  0x6c, 0xa3, 0x0a, 0x73, 0x65, 0x74, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 
  0x74, 0x00, 
};

static const u8 data_segment_data_255[] = {
  0xbf, 0x9d, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x00, 
};

static const u8 data_segment_data_256[] = {
  0x5e, 0x15, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x00, 
};

static const u8 data_segment_data_257[] = {
  0xb7, 0x33, 0x05, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x00, 
};

static const u8 data_segment_data_258[] = {
  0x85, 0xef, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x00, 
};

static const u8 data_segment_data_259[] = {
  0x74, 0xe8, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x77, 0x69, 0x74, 
  0x68, 0x00, 
};

static const u8 data_segment_data_260[] = {
  0x62, 0xaf, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x6d, 0x65, 0x74, 
  0x68, 0x6f, 0x64, 0x00, 
};

static const u8 data_segment_data_261[] = {
  0x57, 0x36, 0x04, 0x73, 0x74, 0x65, 0x70, 0x00, 
};

static const u8 data_segment_data_262[] = {
  0x9d, 0x36, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x00, 
};

static const u8 data_segment_data_263[] = {
  0x50, 0x8d, 0x03, 0x73, 0x74, 0x72, 0x00, 
};

static const u8 data_segment_data_264[] = {
  0x29, 0x1e, 0x05, 0x73, 0x74, 0x72, 0x69, 0x70, 0x00, 
};

static const u8 data_segment_data_265[] = {
  0x2e, 0x8d, 0x03, 0x73, 0x75, 0x6d, 0x00, 
};

static const u8 data_segment_data_266[] = {
  0xc4, 0xb2, 0x05, 0x73, 0x75, 0x70, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_267[] = {
  0xb3, 0x44, 0x05, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x00, 
};

static const u8 data_segment_data_268[] = {
  0xd8, 0x3e, 0x08, 0x74, 0x6f, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x00, 
  
};

static const u8 data_segment_data_269[] = {
  0xfd, 0x41, 0x05, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x00, 
};

static const u8 data_segment_data_270[] = {
  0x9d, 0x7f, 0x04, 0x74, 0x79, 0x70, 0x65, 0x00, 
};

static const u8 data_segment_data_271[] = {
  0xb4, 0x76, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x00, 
};

static const u8 data_segment_data_272[] = {
  0x27, 0x94, 0x05, 0x75, 0x70, 0x70, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_273[] = {
  0xb7, 0x82, 0x05, 0x75, 0x74, 0x66, 0x2d, 0x38, 0x00, 
};

static const u8 data_segment_data_274[] = {
  0x4e, 0x34, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x00, 
};

static const u8 data_segment_data_275[] = {
  0x7d, 0xbe, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x00, 
};

static const u8 data_segment_data_276[] = {
  0x98, 0xa8, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x00, 
};

static const u8 data_segment_data_277[] = {
  0xe6, 0xac, 0x03, 0x7a, 0x69, 0x70, 0x00, 
};

static const u8 data_segment_data_278[] = {
  0x95, 0xd6, 0x07, 0x5f, 0x5f, 0x61, 0x62, 0x73, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_279[] = {
  0xc4, 0x82, 0x07, 0x5f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_280[] = {
  0x0e, 0xdb, 0x07, 0x5f, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_281[] = {
  0x03, 0x30, 0x09, 0x5f, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x73, 0x5f, 0x5f, 
  0x00, 
};

static const u8 data_segment_data_282[] = {
  0x2b, 0x65, 0x08, 0x5f, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x5f, 0x00, 
  
};

static const u8 data_segment_data_283[] = {
  0x42, 0x88, 0x0f, 0x5f, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x63, 
  0x6c, 0x61, 0x73, 0x73, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_284[] = {
  0xc6, 0x5f, 0x0c, 0x5f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 
  0x73, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_285[] = {
  0x7f, 0x54, 0x08, 0x5f, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x5f, 0x00, 
  
};

static const u8 data_segment_data_286[] = {
  0x78, 0x11, 0x0a, 0x5f, 0x5f, 0x64, 0x69, 0x76, 0x6d, 0x6f, 0x64, 0x5f, 
  0x5f, 0x00, 
};

static const u8 data_segment_data_287[] = {
  0x71, 0x3e, 0x06, 0x5f, 0x5f, 0x65, 0x71, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_288[] = {
  0x03, 0x54, 0x08, 0x5f, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x5f, 0x00, 
  
};

static const u8 data_segment_data_289[] = {
  0x46, 0x5f, 0x0c, 0x5f, 0x5f, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x64, 0x69, 
  0x76, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_290[] = {
  0xa7, 0x46, 0x06, 0x5f, 0x5f, 0x67, 0x65, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_291[] = {
  0xb6, 0x82, 0x06, 0x5f, 0x5f, 0x67, 0x74, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_292[] = {
  0x6d, 0x4a, 0x08, 0x5f, 0x5f, 0x69, 0x61, 0x64, 0x64, 0x5f, 0x5f, 0x00, 
  
};

static const u8 data_segment_data_293[] = {
  0x38, 0x3e, 0x0a, 0x5f, 0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
  0x5f, 0x00, 
};

static const u8 data_segment_data_294[] = {
  0xf7, 0x77, 0x0a, 0x5f, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x5f, 
  0x5f, 0x00, 
};

static const u8 data_segment_data_295[] = {
  0x08, 0x78, 0x08, 0x5f, 0x5f, 0x69, 0x73, 0x75, 0x62, 0x5f, 0x5f, 0x00, 
  
};

static const u8 data_segment_data_296[] = {
  0xcc, 0x13, 0x06, 0x5f, 0x5f, 0x6c, 0x65, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_297[] = {
  0x09, 0x88, 0x0a, 0x5f, 0x5f, 0x6c, 0x73, 0x68, 0x69, 0x66, 0x74, 0x5f, 
  0x5f, 0x00, 
};

static const u8 data_segment_data_298[] = {
  0x5d, 0x68, 0x06, 0x5f, 0x5f, 0x6c, 0x74, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_299[] = {
  0x49, 0xf3, 0x0a, 0x5f, 0x5f, 0x6d, 0x61, 0x74, 0x6d, 0x75, 0x6c, 0x5f, 
  0x5f, 0x00, 
};

static const u8 data_segment_data_300[] = {
  0x63, 0x37, 0x07, 0x5f, 0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_301[] = {
  0x31, 0x42, 0x07, 0x5f, 0x5f, 0x6d, 0x75, 0x6c, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_302[] = {
  0x0e, 0x0b, 0x06, 0x5f, 0x5f, 0x6e, 0x65, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_303[] = {
  0x69, 0xd5, 0x07, 0x5f, 0x5f, 0x6e, 0x65, 0x67, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_304[] = {
  0x38, 0xbb, 0x06, 0x5f, 0x5f, 0x6f, 0x72, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_305[] = {
  0xc8, 0x23, 0x08, 0x5f, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x5f, 0x00, 
  
};

static const u8 data_segment_data_306[] = {
  0x29, 0xf0, 0x07, 0x5f, 0x5f, 0x70, 0x6f, 0x73, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_307[] = {
  0x2d, 0x00, 0x07, 0x5f, 0x5f, 0x70, 0x6f, 0x77, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_308[] = {
  0x00, 0xbb, 0x0e, 0x5f, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x5f, 0x70, 0x72, 
  0x69, 0x6e, 0x74, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_309[] = {
  0x61, 0xff, 0x0c, 0x5f, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 
  0x64, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_310[] = {
  0x57, 0x98, 0x0a, 0x5f, 0x5f, 0x72, 0x73, 0x68, 0x69, 0x66, 0x74, 0x5f, 
  0x5f, 0x00, 
};

static const u8 data_segment_data_311[] = {
  0x21, 0x09, 0x07, 0x5f, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_312[] = {
  0x4f, 0xcf, 0x0d, 0x5f, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x62, 0x61, 
  0x63, 0x6b, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_313[] = {
  0x88, 0xef, 0x0b, 0x5f, 0x5f, 0x74, 0x72, 0x75, 0x65, 0x64, 0x69, 0x76, 
  0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_314[] = {
  0x20, 0xec, 0x07, 0x5f, 0x5f, 0x78, 0x6f, 0x72, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_315[] = {
  0x6c, 0x1a, 0x03, 0x25, 0x23, 0x6f, 0x00, 
};

static const u8 data_segment_data_316[] = {
  0x7b, 0x1a, 0x03, 0x25, 0x23, 0x78, 0x00, 
};

static const u8 data_segment_data_317[] = {
  0x58, 0x37, 0x05, 0x7b, 0x3a, 0x23, 0x62, 0x7d, 0x00, 
};

static const u8 data_segment_data_318[] = {
  0x73, 0x1e, 0x20, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x72, 
  0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x64, 0x65, 0x70, 
  0x74, 0x68, 0x20, 0x65, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x00, 
  
};

static const u8 data_segment_data_319[] = {
  0x80, 0x8c, 0x08, 0x3c, 0x6c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x3e, 0x00, 
  
};

static const u8 data_segment_data_320[] = {
  0xd4, 0x15, 0x0a, 0x3c, 0x6c, 0x69, 0x73, 0x74, 0x63, 0x6f, 0x6d, 0x70, 
  0x3e, 0x00, 
};

static const u8 data_segment_data_321[] = {
  0xcc, 0x8d, 0x0a, 0x3c, 0x64, 0x69, 0x63, 0x74, 0x63, 0x6f, 0x6d, 0x70, 
  0x3e, 0x00, 
};

static const u8 data_segment_data_322[] = {
  0x54, 0x51, 0x09, 0x3c, 0x73, 0x65, 0x74, 0x63, 0x6f, 0x6d, 0x70, 0x3e, 
  0x00, 
};

static const u8 data_segment_data_323[] = {
  0x34, 0x6a, 0x09, 0x3c, 0x67, 0x65, 0x6e, 0x65, 0x78, 0x70, 0x72, 0x3e, 
  0x00, 
};

static const u8 data_segment_data_324[] = {
  0x52, 0x53, 0x08, 0x3c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3e, 0x00, 
  
};

static const u8 data_segment_data_325[] = {
  0xe3, 0x63, 0x07, 0x3c, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x3e, 0x00, 
};

static const u8 data_segment_data_326[] = {
  0x25, 0xa4, 0x11, 0x70, 0x79, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x20, 0x65, 
  0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x65, 0x64, 0x00, 
};

static const u8 data_segment_data_327[] = {
  0x1a, 0xb7, 0x07, 0x42, 0x79, 0x74, 0x65, 0x73, 0x49, 0x4f, 0x00, 
};

static const u8 data_segment_data_328[] = {
  0xf0, 0x7e, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x44, 0x69, 
  0x63, 0x74, 0x00, 
};

static const u8 data_segment_data_329[] = {
  0x76, 0x76, 0x08, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x4f, 0x00, 
  
};

static const u8 data_segment_data_330[] = {
  0x22, 0xd1, 0x0c, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x64, 0x65, 0x45, 0x72, 
  0x72, 0x6f, 0x72, 0x00, 
};

static const u8 data_segment_data_331[] = {
  0x3c, 0x0b, 0x0a, 0x61, 0x32, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x36, 
  0x34, 0x00, 
};

static const u8 data_segment_data_332[] = {
  0x7d, 0x6d, 0x07, 0x61, 0x62, 0x73, 0x5f, 0x74, 0x6f, 0x6c, 0x00, 
};

static const u8 data_segment_data_333[] = {
  0x1b, 0xa0, 0x04, 0x61, 0x63, 0x6f, 0x73, 0x00, 
};

static const u8 data_segment_data_334[] = {
  0x13, 0xa3, 0x05, 0x61, 0x63, 0x6f, 0x73, 0x68, 0x00, 
};

static const u8 data_segment_data_335[] = {
  0xd1, 0xc5, 0x15, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 
  0x64, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 
  0x00, 
};

static const u8 data_segment_data_336[] = {
  0x90, 0x23, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 
  0x65, 0x65, 0x00, 
};

static const u8 data_segment_data_337[] = {
  0x78, 0x1a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x65, 
  0x77, 0x00, 
};

static const u8 data_segment_data_338[] = {
  0x58, 0x3f, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 
  0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_339[] = {
  0x44, 0x32, 0x03, 0x61, 0x64, 0x64, 0x00, 
};

static const u8 data_segment_data_340[] = {
  0xc7, 0xc6, 0x04, 0x61, 0x72, 0x67, 0x76, 0x00, 
};

static const u8 data_segment_data_341[] = {
  0x7c, 0x72, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x00, 
};

static const u8 data_segment_data_342[] = {
  0x50, 0xe5, 0x04, 0x61, 0x73, 0x69, 0x6e, 0x00, 
};

static const u8 data_segment_data_343[] = {
  0x38, 0x8f, 0x05, 0x61, 0x73, 0x69, 0x6e, 0x68, 0x00, 
};

static const u8 data_segment_data_344[] = {
  0x0a, 0x69, 0x12, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x72, 0x65, 
  0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x00, 
};

static const u8 data_segment_data_345[] = {
  0x08, 0x86, 0x10, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x72, 0x69, 
  0x70, 0x65, 0x6d, 0x64, 0x31, 0x36, 0x30, 0x00, 
};

static const u8 data_segment_data_346[] = {
  0x73, 0x45, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x68, 
  0x61, 0x31, 0x00, 
};

static const u8 data_segment_data_347[] = {
  0xd3, 0x5b, 0x0d, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x68, 
  0x61, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_348[] = {
  0x14, 0x81, 0x0d, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x68, 
  0x61, 0x35, 0x31, 0x32, 0x00, 
};

static const u8 data_segment_data_349[] = {
  0x1f, 0xbe, 0x04, 0x61, 0x74, 0x61, 0x6e, 0x00, 
};

static const u8 data_segment_data_350[] = {
  0xcd, 0x81, 0x05, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x00, 
};

static const u8 data_segment_data_351[] = {
  0x97, 0x81, 0x05, 0x61, 0x74, 0x61, 0x6e, 0x68, 0x00, 
};

static const u8 data_segment_data_352[] = {
  0x3c, 0x8f, 0x0a, 0x62, 0x32, 0x61, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x36, 
  0x34, 0x00, 
};

static const u8 data_segment_data_353[] = {
  0xe0, 0x48, 0x03, 0x62, 0x69, 0x6e, 0x00, 
};

static const u8 data_segment_data_354[] = {
  0x97, 0xa2, 0x0c, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x74, 
  0x68, 0x6f, 0x64, 0x00, 
};

static const u8 data_segment_data_355[] = {
  0x61, 0x99, 0x09, 0x62, 0x79, 0x74, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 
  0x00, 
};

static const u8 data_segment_data_356[] = {
  0x4d, 0x38, 0x08, 0x63, 0x61, 0x6c, 0x63, 0x73, 0x69, 0x7a, 0x65, 0x00, 
  
};

static const u8 data_segment_data_357[] = {
  0x0a, 0x5b, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 
  0x72, 0x61, 0x63, 0x74, 0x00, 
};

static const u8 data_segment_data_358[] = {
  0x06, 0xb0, 0x04, 0x63, 0x65, 0x69, 0x6c, 0x00, 
};

static const u8 data_segment_data_359[] = {
  0x4e, 0xbf, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_360[] = {
  0xe8, 0xbf, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x00, 
};

static const u8 data_segment_data_361[] = {
  0x74, 0xca, 0x07, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x00, 
};

static const u8 data_segment_data_362[] = {
  0xb6, 0xf4, 0x05, 0x63, 0x6d, 0x61, 0x74, 0x68, 0x00, 
};

static const u8 data_segment_data_363[] = {
  0xc5, 0x9d, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x00, 
};

static const u8 data_segment_data_364[] = {
  0x33, 0x14, 0x08, 0x63, 0x6f, 0x70, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x00, 
  
};

static const u8 data_segment_data_365[] = {
  0x7a, 0x4c, 0x03, 0x63, 0x6f, 0x73, 0x00, 
};

static const u8 data_segment_data_366[] = {
  0xd2, 0xdb, 0x04, 0x63, 0x6f, 0x73, 0x68, 0x00, 
};

static const u8 data_segment_data_367[] = {
  0xca, 0xeb, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 
  0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_368[] = {
  0x46, 0x41, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 
  0x69, 0x6d, 0x65, 0x00, 
};

static const u8 data_segment_data_369[] = {
  0xf4, 0xbd, 0x0b, 0x64, 0x62, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x32, 
  0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_370[] = {
  0x07, 0x0d, 0x0a, 0x64, 0x62, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x36, 
  0x34, 0x00, 
};

static const u8 data_segment_data_371[] = {
  0xde, 0xd8, 0x0c, 0x64, 0x62, 0x5f, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x69, 
  0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_372[] = {
  0x6d, 0x5b, 0x0b, 0x64, 0x62, 0x5f, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x69, 
  0x36, 0x34, 0x00, 
};

static const u8 data_segment_data_373[] = {
  0x2d, 0x2a, 0x0b, 0x64, 0x62, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x32, 
  0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_374[] = {
  0x3e, 0xd2, 0x0a, 0x64, 0x62, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x36, 
  0x34, 0x00, 
};

static const u8 data_segment_data_375[] = {
  0xc2, 0x49, 0x16, 0x64, 0x62, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x61, 
  0x62, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 
  0x74, 0x00, 
};

static const u8 data_segment_data_376[] = {
  0xd9, 0x86, 0x0a, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x65, 0x6e, 
  0x64, 0x00, 
};

static const u8 data_segment_data_377[] = {
  0x40, 0x69, 0x13, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x66, 0x69, 
  0x6e, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x00, 
};

static const u8 data_segment_data_378[] = {
  0xf6, 0x26, 0x15, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x66, 0x69, 
  0x6e, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 
  0x00, 
};

static const u8 data_segment_data_379[] = {
  0xe7, 0x21, 0x11, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x6c, 0x6f, 
  0x77, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_380[] = {
  0x71, 0x41, 0x0b, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x6e, 0x65, 
  0x78, 0x74, 0x00, 
};

static const u8 data_segment_data_381[] = {
  0xc7, 0x7e, 0x0f, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x70, 0x72, 
  0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x00, 
};

static const u8 data_segment_data_382[] = {
  0x50, 0x0e, 0x0d, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x72, 0x65, 
  0x6d, 0x6f, 0x76, 0x65, 0x00, 
};

static const u8 data_segment_data_383[] = {
  0xc9, 0xb4, 0x0c, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x73, 0x74, 
  0x6f, 0x72, 0x65, 0x00, 
};

static const u8 data_segment_data_384[] = {
  0x07, 0x5c, 0x0d, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x75, 0x70, 
  0x64, 0x61, 0x74, 0x65, 0x00, 
};

static const u8 data_segment_data_385[] = {
  0x26, 0x52, 0x11, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x75, 0x70, 
  0x70, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_386[] = {
  0x8a, 0x8e, 0x12, 0x64, 0x62, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x62, 
  0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_387[] = {
  0xb9, 0xa7, 0x11, 0x64, 0x62, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x62, 
  0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x36, 0x34, 0x00, 
};

static const u8 data_segment_data_388[] = {
  0xdc, 0xbf, 0x0c, 0x64, 0x62, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 
  0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_389[] = {
  0x2f, 0x6a, 0x0b, 0x64, 0x62, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 
  0x36, 0x34, 0x00, 
};

static const u8 data_segment_data_390[] = {
  0xea, 0x6f, 0x10, 0x64, 0x62, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 
  0x75, 0x73, 0x5f, 0x69, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_391[] = {
  0xd9, 0xe4, 0x0f, 0x64, 0x62, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 
  0x75, 0x73, 0x5f, 0x69, 0x36, 0x34, 0x00, 
};

static const u8 data_segment_data_392[] = {
  0x9d, 0x94, 0x0e, 0x64, 0x62, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 
  0x5f, 0x69, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_393[] = {
  0xce, 0x2a, 0x0d, 0x64, 0x62, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 
  0x5f, 0x69, 0x36, 0x34, 0x00, 
};

static const u8 data_segment_data_394[] = {
  0xe4, 0x06, 0x0d, 0x64, 0x62, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 
  0x69, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_395[] = {
  0x17, 0x74, 0x0c, 0x64, 0x62, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 
  0x69, 0x36, 0x34, 0x00, 
};

static const u8 data_segment_data_396[] = {
  0x2a, 0x7d, 0x0e, 0x64, 0x62, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 
  0x5f, 0x69, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_397[] = {
  0x19, 0x4a, 0x0d, 0x64, 0x62, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 
  0x5f, 0x69, 0x36, 0x34, 0x00, 
};

static const u8 data_segment_data_398[] = {
  0xab, 0x17, 0x12, 0x64, 0x62, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x62, 
  0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_399[] = {
  0x78, 0x18, 0x11, 0x64, 0x62, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x62, 
  0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x36, 0x34, 0x00, 
};

static const u8 data_segment_data_400[] = {
  0xa9, 0x59, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x00, 
};

static const u8 data_segment_data_401[] = {
  0xce, 0x7d, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x00, 
};

static const u8 data_segment_data_402[] = {
  0x02, 0x41, 0x07, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x00, 
};

static const u8 data_segment_data_403[] = {
  0xdb, 0xc8, 0x07, 0x64, 0x65, 0x6c, 0x61, 0x74, 0x74, 0x72, 0x00, 
};

static const u8 data_segment_data_404[] = {
  0x6e, 0xdb, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_405[] = {
  0x2d, 0xa9, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x76, 0x69, 0x65, 0x77, 
  0x00, 
};

static const u8 data_segment_data_406[] = {
  0x72, 0x24, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 
  0x65, 0x00, 
};

static const u8 data_segment_data_407[] = {
  0x9c, 0xfa, 0x11, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 
  0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x00, 
};

static const u8 data_segment_data_408[] = {
  0xcd, 0xc4, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x00, 
};

static const u8 data_segment_data_409[] = {
  0x0f, 0x71, 0x07, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x00, 
};

static const u8 data_segment_data_410[] = {
  0x2d, 0x1f, 0x03, 0x64, 0x6f, 0x63, 0x00, 
};

static const u8 data_segment_data_411[] = {
  0xe9, 0x2f, 0x04, 0x64, 0x75, 0x6d, 0x70, 0x00, 
};

static const u8 data_segment_data_412[] = {
  0x7a, 0x2d, 0x05, 0x64, 0x75, 0x6d, 0x70, 0x73, 0x00, 
};

static const u8 data_segment_data_413[] = {
  0xc0, 0xb5, 0x01, 0x65, 0x00, 
};

static const u8 data_segment_data_414[] = {
  0x3f, 0x70, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 
  0x67, 0x00, 
};

static const u8 data_segment_data_415[] = {
  0x43, 0xca, 0x06, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x00, 
};

static const u8 data_segment_data_416[] = {
  0x71, 0xba, 0x09, 0x65, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 
  0x00, 
};

static const u8 data_segment_data_417[] = {
  0x94, 0x23, 0x03, 0x65, 0x72, 0x66, 0x00, 
};

static const u8 data_segment_data_418[] = {
  0x77, 0x96, 0x04, 0x65, 0x72, 0x66, 0x63, 0x00, 
};

static const u8 data_segment_data_419[] = {
  0x85, 0xbe, 0x04, 0x65, 0x78, 0x69, 0x74, 0x00, 
};

static const u8 data_segment_data_420[] = {
  0xc8, 0x24, 0x03, 0x65, 0x78, 0x70, 0x00, 
};

static const u8 data_segment_data_421[] = {
  0xce, 0x41, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 
  0x6e, 0x00, 
};

static const u8 data_segment_data_422[] = {
  0x74, 0x72, 0x05, 0x65, 0x78, 0x70, 0x6d, 0x31, 0x00, 
};

static const u8 data_segment_data_423[] = {
  0x93, 0x12, 0x04, 0x66, 0x61, 0x62, 0x73, 0x00, 
};

static const u8 data_segment_data_424[] = {
  0x25, 0xbe, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_425[] = {
  0x35, 0x44, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x00, 
};

static const u8 data_segment_data_426[] = {
  0x2e, 0x12, 0x08, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x31, 0x32, 0x38, 0x00, 
  
};

static const u8 data_segment_data_427[] = {
  0x7d, 0x46, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x00, 
};

static const u8 data_segment_data_428[] = {
  0x61, 0xc1, 0x05, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x00, 
};

static const u8 data_segment_data_429[] = {
  0xe5, 0x44, 0x04, 0x66, 0x6d, 0x6f, 0x64, 0x00, 
};

static const u8 data_segment_data_430[] = {
  0x1c, 0x98, 0x05, 0x66, 0x72, 0x65, 0x78, 0x70, 0x00, 
};

static const u8 data_segment_data_431[] = {
  0x37, 0xbd, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x6b, 0x65, 0x79, 0x73, 0x00, 
  
};

static const u8 data_segment_data_432[] = {
  0xed, 0x9c, 0x09, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x73, 0x65, 0x74, 
  0x00, 
};

static const u8 data_segment_data_433[] = {
  0x27, 0x02, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00, 
  
};

static const u8 data_segment_data_434[] = {
  0x02, 0x90, 0x05, 0x67, 0x61, 0x6d, 0x6d, 0x61, 0x00, 
};

static const u8 data_segment_data_435[] = {
  0x96, 0xc3, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 
  0x00, 
};

static const u8 data_segment_data_436[] = {
  0x12, 0x3f, 0x0a, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 
  0x6e, 0x00, 
};

static const u8 data_segment_data_437[] = {
  0xc4, 0x4a, 0x14, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 
  0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x73, 0x00, 
  
};

static const u8 data_segment_data_438[] = {
  0x4d, 0x1a, 0x19, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 
  0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 
  0x74, 0x65, 0x72, 0x73, 0x00, 
};

static const u8 data_segment_data_439[] = {
  0xac, 0x98, 0x0d, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 
  0x68, 0x61, 0x73, 0x68, 0x00, 
};

static const u8 data_segment_data_440[] = {
  0x84, 0x13, 0x10, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 
  0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_441[] = {
  0x17, 0xff, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 
  0x78, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 
  0x00, 
};

static const u8 data_segment_data_442[] = {
  0x48, 0x29, 0x07, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x00, 
};

static const u8 data_segment_data_443[] = {
  0x1f, 0x2a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 
  0x72, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x00, 
};

static const u8 data_segment_data_444[] = {
  0x90, 0xb2, 0x06, 0x67, 0x65, 0x74, 0x74, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_445[] = {
  0x78, 0xac, 0x08, 0x67, 0x65, 0x74, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x00, 
  
};

static const u8 data_segment_data_446[] = {
  0xe8, 0xbb, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x00, 
  
};

static const u8 data_segment_data_447[] = {
  0xe7, 0xed, 0x05, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x00, 
};

static const u8 data_segment_data_448[] = {
  0x70, 0x50, 0x03, 0x68, 0x65, 0x78, 0x00, 
};

static const u8 data_segment_data_449[] = {
  0x2a, 0x7f, 0x07, 0x68, 0x65, 0x78, 0x6c, 0x69, 0x66, 0x79, 0x00, 
};

static const u8 data_segment_data_450[] = {
  0x47, 0xb7, 0x04, 0x69, 0x6d, 0x61, 0x67, 0x00, 
};

static const u8 data_segment_data_451[] = {
  0x17, 0x2d, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 
  0x61, 0x74, 0x69, 0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_452[] = {
  0x28, 0x2a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 
  0x69, 0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_453[] = {
  0x06, 0xdd, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 
  0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x00, 
};

static const u8 data_segment_data_454[] = {
  0x21, 0x97, 0x0a, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 
  0x74, 0x00, 
};

static const u8 data_segment_data_455[] = {
  0x1b, 0xc6, 0x0d, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 
  0x65, 0x67, 0x65, 0x64, 0x00, 
};

static const u8 data_segment_data_456[] = {
  0x49, 0x4e, 0x07, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x00, 
};

static const u8 data_segment_data_457[] = {
  0xf7, 0x68, 0x0a, 0x69, 0x73, 0x64, 0x69, 0x73, 0x6a, 0x6f, 0x69, 0x6e, 
  0x74, 0x00, 
};

static const u8 data_segment_data_458[] = {
  0xa6, 0xab, 0x08, 0x69, 0x73, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x65, 0x00, 
  
};

static const u8 data_segment_data_459[] = {
  0x3e, 0x11, 0x05, 0x69, 0x73, 0x69, 0x6e, 0x66, 0x00, 
};

static const u8 data_segment_data_460[] = {
  0x9e, 0x03, 0x05, 0x69, 0x73, 0x6e, 0x61, 0x6e, 0x00, 
};

static const u8 data_segment_data_461[] = {
  0xb9, 0xc1, 0x08, 0x69, 0x73, 0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x00, 
  
};

static const u8 data_segment_data_462[] = {
  0xfc, 0xec, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x65, 
  0x74, 0x00, 
};

static const u8 data_segment_data_463[] = {
  0x25, 0x92, 0x08, 0x69, 0x74, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x00, 
  
};

static const u8 data_segment_data_464[] = {
  0x47, 0xbe, 0x08, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x00, 
  
};

static const u8 data_segment_data_465[] = {
  0xf6, 0x13, 0x08, 0x6b, 0x62, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x00, 
  
};

static const u8 data_segment_data_466[] = {
  0x62, 0x8b, 0x08, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x00, 
  
};

static const u8 data_segment_data_467[] = {
  0x40, 0x6f, 0x05, 0x6c, 0x64, 0x65, 0x78, 0x70, 0x00, 
};

static const u8 data_segment_data_468[] = {
  0xce, 0x6c, 0x06, 0x6c, 0x67, 0x61, 0x6d, 0x6d, 0x61, 0x00, 
};

static const u8 data_segment_data_469[] = {
  0x63, 0x24, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x00, 
};

static const u8 data_segment_data_470[] = {
  0xb0, 0xb0, 0x05, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x00, 
};

static const u8 data_segment_data_471[] = {
  0x21, 0x3f, 0x03, 0x6c, 0x6f, 0x67, 0x00, 
};

static const u8 data_segment_data_472[] = {
  0x40, 0x91, 0x05, 0x6c, 0x6f, 0x67, 0x31, 0x30, 0x00, 
};

static const u8 data_segment_data_473[] = {
  0x73, 0x23, 0x04, 0x6c, 0x6f, 0x67, 0x32, 0x00, 
};

static const u8 data_segment_data_474[] = {
  0x35, 0xbb, 0x04, 0x6d, 0x61, 0x74, 0x68, 0x00, 
};

static const u8 data_segment_data_475[] = {
  0xb1, 0x43, 0x03, 0x6d, 0x61, 0x78, 0x00, 
};

static const u8 data_segment_data_476[] = {
  0xd4, 0x70, 0x07, 0x6d, 0x61, 0x78, 0x73, 0x69, 0x7a, 0x65, 0x00, 
};

static const u8 data_segment_data_477[] = {
  0xaf, 0x42, 0x03, 0x6d, 0x69, 0x6e, 0x00, 
};

static const u8 data_segment_data_478[] = {
  0x25, 0xc0, 0x04, 0x6d, 0x6f, 0x64, 0x66, 0x00, 
};

static const u8 data_segment_data_479[] = {
  0xbf, 0x99, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x00, 
};

static const u8 data_segment_data_480[] = {
  0xec, 0xd1, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x00, 
};

static const u8 data_segment_data_481[] = {
  0xc1, 0x45, 0x03, 0x6d, 0x70, 0x79, 0x00, 
};

static const u8 data_segment_data_482[] = {
  0x4a, 0x52, 0x03, 0x6e, 0x32, 0x73, 0x00, 
};

static const u8 data_segment_data_483[] = {
  0xa2, 0x75, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x00, 
};

static const u8 data_segment_data_484[] = {
  0x1e, 0x16, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x74, 0x75, 0x70, 0x6c, 
  0x65, 0x00, 
};

static const u8 data_segment_data_485[] = {
  0xfd, 0x5c, 0x03, 0x6f, 0x63, 0x74, 0x00, 
};

static const u8 data_segment_data_486[] = {
  0xbc, 0xd1, 0x04, 0x70, 0x61, 0x63, 0x6b, 0x00, 
};

static const u8 data_segment_data_487[] = {
  0x1f, 0xa9, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x6f, 
  0x00, 
};

static const u8 data_segment_data_488[] = {
  0x24, 0xe5, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x69, 0x6e, 0x74, 
  0x33, 0x32, 0x00, 
};

static const u8 data_segment_data_489[] = {
  0x87, 0xe5, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 
  0x00, 
};

static const u8 data_segment_data_490[] = {
  0x88, 0xce, 0x04, 0x70, 0x61, 0x74, 0x68, 0x00, 
};

static const u8 data_segment_data_491[] = {
  0xf3, 0x74, 0x0a, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x68, 0x72, 0x6f, 
  0x77, 0x00, 
};

static const u8 data_segment_data_492[] = {
  0x6a, 0xd5, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x00, 
};

static const u8 data_segment_data_493[] = {
  0x1c, 0x70, 0x02, 0x70, 0x69, 0x00, 
};

static const u8 data_segment_data_494[] = {
  0x3a, 0x19, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x00, 
  
};

static const u8 data_segment_data_495[] = {
  0x05, 0x0c, 0x05, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x00, 
};

static const u8 data_segment_data_496[] = {
  0x1c, 0x22, 0x0f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x63, 
  0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_497[] = {
  0xc2, 0x29, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x00, 
  
};

static const u8 data_segment_data_498[] = {
  0x73, 0xd2, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 
  0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x00, 
};

static const u8 data_segment_data_499[] = {
  0xfe, 0x41, 0x0b, 0x70, 0x79, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x75, 
  0x73, 0x65, 0x00, 
};

static const u8 data_segment_data_500[] = {
  0x87, 0x3f, 0x07, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x73, 0x00, 
};

static const u8 data_segment_data_501[] = {
  0x99, 0xea, 0x10, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x00, 
};

static const u8 data_segment_data_502[] = {
  0xec, 0xed, 0x10, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 
  0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_503[] = {
  0xbf, 0xf9, 0x04, 0x72, 0x65, 0x61, 0x6c, 0x00, 
};

static const u8 data_segment_data_504[] = {
  0xd7, 0x9b, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6b, 
  0x65, 0x79, 0x00, 
};

static const u8 data_segment_data_505[] = {
  0xe5, 0xf9, 0x04, 0x72, 0x65, 0x63, 0x74, 0x00, 
};

static const u8 data_segment_data_506[] = {
  0x56, 0x46, 0x07, 0x72, 0x65, 0x6c, 0x5f, 0x74, 0x6f, 0x6c, 0x00, 
};

static const u8 data_segment_data_507[] = {
  0xbf, 0x84, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x61, 
  0x75, 0x74, 0x68, 0x00, 
};

static const u8 data_segment_data_508[] = {
  0xad, 0x1c, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x61, 
  0x75, 0x74, 0x68, 0x32, 0x00, 
};

static const u8 data_segment_data_509[] = {
  0xec, 0x4c, 0x11, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x72, 
  0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x00, 
};

static const u8 data_segment_data_510[] = {
  0xa1, 0x6e, 0x08, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x64, 0x00, 
  
};

static const u8 data_segment_data_511[] = {
  0x55, 0x64, 0x09, 0x72, 0x69, 0x70, 0x65, 0x6d, 0x64, 0x31, 0x36, 0x30, 
  0x00, 
};

static const u8 data_segment_data_512[] = {
  0x15, 0xd0, 0x0a, 0x72, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 
  0x6e, 0x00, 
};

static const u8 data_segment_data_513[] = {
  0x46, 0x85, 0x03, 0x73, 0x32, 0x62, 0x00, 
};

static const u8 data_segment_data_514[] = {
  0x4a, 0x85, 0x03, 0x73, 0x32, 0x6e, 0x00, 
};

static const u8 data_segment_data_515[] = {
  0x53, 0x8b, 0x09, 0x73, 0x61, 0x79, 0x5f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 
  0x00, 
};

static const u8 data_segment_data_516[] = {
  0x81, 0xf5, 0x0a, 0x73, 0x61, 0x79, 0x5f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 
  0x32, 0x00, 
};

static const u8 data_segment_data_517[] = {
  0xe0, 0xac, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x00, 
  
};

static const u8 data_segment_data_518[] = {
  0x9d, 0x75, 0x04, 0x73, 0x65, 0x65, 0x6b, 0x00, 
};

static const u8 data_segment_data_519[] = {
  0xe4, 0x36, 0x18, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 
  0x65, 0x78, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x69, 0x6e, 0x6c, 
  0x69, 0x6e, 0x65, 0x00, 
};

static const u8 data_segment_data_520[] = {
  0x1f, 0xe5, 0x1c, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 
  0x65, 0x78, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x69, 0x6e, 0x6c, 
  0x69, 0x6e, 0x65, 0x5f, 0x72, 0x61, 0x77, 0x00, 
};

static const u8 data_segment_data_521[] = {
  0x2f, 0xac, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 
  0x6e, 0x65, 0x00, 
};

static const u8 data_segment_data_522[] = {
  0x14, 0x00, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 
  0x6e, 0x65, 0x5f, 0x72, 0x61, 0x77, 0x00, 
};

static const u8 data_segment_data_523[] = {
  0x59, 0xa8, 0x19, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 
  0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 
  0x74, 0x65, 0x72, 0x73, 0x00, 
};

static const u8 data_segment_data_524[] = {
  0x03, 0x39, 0x0e, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x69, 
  0x6c, 0x65, 0x67, 0x65, 0x64, 0x00, 
};

static const u8 data_segment_data_525[] = {
  0xdc, 0x69, 0x16, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 
  0x73, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 
  0x73, 0x00, 
};

static const u8 data_segment_data_526[] = {
  0x0b, 0xbb, 0x13, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 
  0x72, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x00, 
};

static const u8 data_segment_data_527[] = {
  0x04, 0x59, 0x06, 0x73, 0x65, 0x74, 0x74, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_528[] = {
  0x8e, 0xac, 0x04, 0x73, 0x68, 0x61, 0x31, 0x00, 
};

static const u8 data_segment_data_529[] = {
  0x2e, 0x01, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_530[] = {
  0x69, 0xfd, 0x06, 0x73, 0x68, 0x61, 0x35, 0x31, 0x32, 0x00, 
};

static const u8 data_segment_data_531[] = {
  0xb1, 0x90, 0x03, 0x73, 0x69, 0x6e, 0x00, 
};

static const u8 data_segment_data_532[] = {
  0xb9, 0xa6, 0x04, 0x73, 0x69, 0x6e, 0x68, 0x00, 
};

static const u8 data_segment_data_533[] = {
  0xb5, 0xf4, 0x05, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x00, 
};

static const u8 data_segment_data_534[] = {
  0x6a, 0xd3, 0x0a, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x6c, 0x69, 0x6e, 0x65, 
  0x73, 0x00, 
};

static const u8 data_segment_data_535[] = {
  0x21, 0x44, 0x04, 0x73, 0x71, 0x72, 0x74, 0x00, 
};

static const u8 data_segment_data_536[] = {
  0xce, 0x67, 0x14, 0x73, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 
  0x5f, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x00, 
  
};

static const u8 data_segment_data_537[] = {
  0x60, 0xf8, 0x1b, 0x73, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 
  0x5f, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 
  0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x00, 
};

static const u8 data_segment_data_538[] = {
  0xbc, 0x8e, 0x03, 0x73, 0x79, 0x73, 0x00, 
};

static const u8 data_segment_data_539[] = {
  0xfe, 0x61, 0x03, 0x74, 0x61, 0x6e, 0x00, 
};

static const u8 data_segment_data_540[] = {
  0xd6, 0xa1, 0x04, 0x74, 0x61, 0x6e, 0x68, 0x00, 
};

static const u8 data_segment_data_541[] = {
  0x03, 0x4b, 0x0f, 0x74, 0x61, 0x70, 0x6f, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 
  0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x00, 
};

static const u8 data_segment_data_542[] = {
  0xe5, 0xaa, 0x12, 0x74, 0x61, 0x70, 0x6f, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 
  0x63, 0x6b, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x00, 
};

static const u8 data_segment_data_543[] = {
  0x14, 0xb1, 0x04, 0x74, 0x65, 0x6c, 0x6c, 0x00, 
};

static const u8 data_segment_data_544[] = {
  0xf0, 0xc1, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x00, 
};

static const u8 data_segment_data_545[] = {
  0x92, 0xb0, 0x06, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x74, 0x00, 
};

static const u8 data_segment_data_546[] = {
  0xd4, 0xea, 0x06, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x72, 0x00, 
};

static const u8 data_segment_data_547[] = {
  0xf7, 0xa3, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6c, 0x6f, 
  0x73, 0x65, 0x00, 
};

static const u8 data_segment_data_548[] = {
  0x85, 0xf2, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x72, 0x65, 
  0x61, 0x74, 0x65, 0x00, 
};

static const u8 data_segment_data_549[] = {
  0x98, 0x34, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x73, 0x73, 
  0x75, 0x65, 0x00, 
};

static const u8 data_segment_data_550[] = {
  0x95, 0x1f, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 
  0x6e, 0x00, 
};

static const u8 data_segment_data_551[] = {
  0x5c, 0xc0, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x74, 
  0x69, 0x72, 0x65, 0x00, 
};

static const u8 data_segment_data_552[] = {
  0xaa, 0xc6, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72, 0x61, 
  0x6e, 0x73, 0x66, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_553[] = {
  0x3e, 0x15, 0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 
  0x6e, 0x00, 
};

static const u8 data_segment_data_554[] = {
  0xb5, 0x79, 0x23, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 
  0x78, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_555[] = {
  0x78, 0xd2, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x00, 
};

static const u8 data_segment_data_556[] = {
  0x8a, 0x29, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x00, 
};

static const u8 data_segment_data_557[] = {
  0xa2, 0x08, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x5f, 0x6e, 0x65, 0x77, 0x00, 
};

static const u8 data_segment_data_558[] = {
  0xc2, 0x4f, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_559[] = {
  0x5b, 0x99, 0x05, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x00, 
};

static const u8 data_segment_data_560[] = {
  0x89, 0x86, 0x06, 0x75, 0x61, 0x72, 0x72, 0x61, 0x79, 0x00, 
};

static const u8 data_segment_data_561[] = {
  0xc4, 0x88, 0x09, 0x75, 0x62, 0x69, 0x6e, 0x61, 0x73, 0x63, 0x69, 0x69, 
  0x00, 
};

static const u8 data_segment_data_562[] = {
  0x15, 0x9a, 0x0c, 0x75, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x73, 0x00, 
};

static const u8 data_segment_data_563[] = {
  0x65, 0x9d, 0x08, 0x75, 0x68, 0x61, 0x73, 0x68, 0x6c, 0x69, 0x62, 0x00, 
  
};

static const u8 data_segment_data_564[] = {
  0xb6, 0x66, 0x03, 0x75, 0x69, 0x6f, 0x00, 
};

static const u8 data_segment_data_565[] = {
  0xe8, 0x30, 0x05, 0x75, 0x6a, 0x73, 0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_566[] = {
  0xb1, 0xb9, 0x09, 0x75, 0x6e, 0x68, 0x65, 0x78, 0x6c, 0x69, 0x66, 0x79, 
  0x00, 
};

static const u8 data_segment_data_567[] = {
  0xf6, 0x7c, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_568[] = {
  0x07, 0x3c, 0x06, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x00, 
};

static const u8 data_segment_data_569[] = {
  0x0e, 0x6d, 0x0b, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x66, 0x72, 
  0x6f, 0x6d, 0x00, 
};

static const u8 data_segment_data_570[] = {
  0xff, 0x7c, 0x0d, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x69, 
  0x6e, 0x74, 0x33, 0x32, 0x00, 
};

static const u8 data_segment_data_571[] = {
  0x47, 0x08, 0x07, 0x75, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x00, 
};

static const u8 data_segment_data_572[] = {
  0xc9, 0xf3, 0x04, 0x75, 0x73, 0x79, 0x73, 0x00, 
};

static const u8 data_segment_data_573[] = {
  0xe5, 0x9d, 0x05, 0x75, 0x74, 0x69, 0x6d, 0x65, 0x00, 
};

static const u8 data_segment_data_574[] = {
  0x24, 0xa8, 0x0b, 0x75, 0x75, 0x6f, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x65, 
  0x72, 0x74, 0x00, 
};

static const u8 data_segment_data_575[] = {
  0xd6, 0x08, 0x10, 0x75, 0x75, 0x6f, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x65, 
  0x72, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x00, 
};

static const u8 data_segment_data_576[] = {
  0xbf, 0xd3, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_577[] = {
  0x6e, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 
  0x6e, 0x66, 0x6f, 0x00, 
};

static const u8 data_segment_data_578[] = {
  0x6e, 0x61, 0x6d, 0x65, 0x20, 0x74, 0x6f, 0x6f, 0x20, 0x6c, 0x6f, 0x6e, 
  0x67, 0x00, 
};

static const u8 data_segment_data_579[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x65, 
  0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_580[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x65, 
  0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x72, 0x67, 
  0x31, 0x00, 
};

static const u8 data_segment_data_581[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x65, 
  0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x67, 
  0x00, 
};

static const u8 data_segment_data_582[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x65, 
  0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x67, 
  0x5f, 0x76, 0x6c, 0x69, 0x73, 0x74, 0x00, 
};

static const u8 data_segment_data_583[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x70, 
  0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x72, 0x61, 
  0x63, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x00, 
};

static const u8 data_segment_data_584[] = {
  0x6d, 0x70, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x70, 
  0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 
  0x63, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x00, 
};

static const u8 data_segment_data_585[] = {
  0x18, 0x2a, 0x07, 0x00, 0xd2, 0x01, 0x28, 0x28, 0x48, 0x24, 0x24, 0x24, 
  0x24, 0x44, 0x24, 0x44, 0x8e, 0x42, 0x6e, 0x20, 0x6e, 0x20, 0x00, 0x80, 
  0x51, 0x1b, 0xd3, 0x01, 0x16, 0xd3, 0x01, 0x80, 0x51, 0x1b, 0xd4, 0x01, 
  0x16, 0xd4, 0x01, 0x80, 0x51, 0x1b, 0xf8, 0x00, 0x16, 0xf8, 0x00, 0x80, 
  0x16, 0xd5, 0x01, 0x81, 0x16, 0xd6, 0x01, 0x82, 0x16, 0xd7, 0x01, 0x83, 
  0x16, 0xd8, 0x01, 0x84, 0x16, 0xd9, 0x01, 0x80, 0x16, 0xda, 0x01, 0x81, 
  0x16, 0xdb, 0x01, 0x54, 0x32, 0x00, 0x10, 0xdc, 0x01, 0x11, 0x75, 0x00, 
  0x34, 0x03, 0x16, 0xdc, 0x01, 0x54, 0x32, 0x01, 0x10, 0xdd, 0x01, 0x11, 
  0xdc, 0x01, 0x34, 0x03, 0x16, 0xdd, 0x01, 0x54, 0x32, 0x02, 0x10, 0xde, 
  0x01, 0x11, 0xdc, 0x01, 0x34, 0x03, 0x16, 0xde, 0x01, 0x54, 0x32, 0x03, 
  0x10, 0xdf, 0x01, 0x34, 0x02, 0x16, 0xdf, 0x01, 0x51, 0x63, 
};

static const u8 data_segment_data_586[] = {
  0x00, 0x0c, 0x07, 0x00, 0x01, 0x02, 0x65, 0x00, 0x32, 0x00, 0x16, 0x93, 
  0x01, 0x32, 0x01, 0x16, 0x02, 0x02, 0x51, 0x63, 
};

static const u8 data_segment_data_587[] = {
  0x00, 0x0c, 0x07, 0x00, 0x07, 0x02, 0x65, 0x00, 0x32, 0x00, 0x16, 0x93, 
  0x01, 0x32, 0x01, 0x16, 0x02, 0x02, 0x51, 0x63, 
};

static const u8 data_segment_data_588[] = {
  0x08, 0x18, 0x07, 0x00, 0x09, 0x02, 0x28, 0x28, 0x28, 0x28, 0x28, 0x48, 
  0x45, 0x00, 0x80, 0x51, 0x1b, 0x0a, 0x02, 0x16, 0x0a, 0x02, 0x80, 0x51, 
  0x1b, 0xf8, 0x00, 0x16, 0xf8, 0x00, 0x80, 0x51, 0x1b, 0xd4, 0x01, 0x16, 
  0xd4, 0x01, 0x80, 0x51, 0x1b, 0x0b, 0x02, 0x16, 0x0b, 0x02, 0x80, 0x51, 
  0x1b, 0x0c, 0x02, 0x16, 0x0c, 0x02, 0x80, 0x51, 0x1b, 0xc4, 0x01, 0x16, 
  0xc4, 0x01, 0x32, 0x01, 0x16, 0x93, 0x01, 0x11, 0x7b, 0x00, 0x23, 0x00, 
  0x34, 0x01, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_589[] = {
  0x64, 0x62, 0x2e, 0x70, 0x79, 0x00, 0x66, 0x6f, 0x6f, 0x2e, 0x70, 0x79, 
  0x00, 0x62, 0x61, 0x72, 0x2e, 0x70, 0x79, 0x00, 0x5f, 0x69, 0x6e, 0x69, 
  0x74, 0x2e, 0x70, 0x79, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_590[] = {
  0x00, 0x2a, 0xdc, 0x01, 0xd2, 0x01, 0x8c, 0x0e, 0x85, 0x18, 0x65, 0x65, 
  0x60, 0x65, 0x65, 0x65, 0x60, 0x85, 0x08, 0x65, 0x60, 0x65, 0x00, 0x11, 
  0x17, 0x00, 0x16, 0x16, 0x00, 0x10, 0xdc, 0x01, 0x16, 0x1a, 0x00, 0x32, 
  0x00, 0x16, 0x11, 0x00, 0x32, 0x01, 0x16, 0x53, 0x00, 0x32, 0x02, 0x16, 
  0x56, 0x00, 0x32, 0x03, 0x16, 0xe0, 0x01, 0x32, 0x04, 0x16, 0xe1, 0x01, 
  0x32, 0x05, 0x16, 0x65, 0x01, 0x32, 0x06, 0x16, 0xe2, 0x01, 0x32, 0x07, 
  0x16, 0x80, 0x00, 0x32, 0x08, 0x16, 0x14, 0x00, 0x32, 0x09, 0x16, 0xe3, 
  0x01, 0x51, 0x63, 
};

static const u8 data_segment_data_591[] = {
  0xba, 0x04, 0x34, 0x11, 0x00, 0xd2, 0x01, 0x80, 0x0f, 0x25, 0x25, 0x25, 
  0x25, 0x45, 0x28, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x4d, 0x2a, 0x2a, 
  0x2a, 0x2a, 0x2a, 0x2a, 0x00, 0xb2, 0xb0, 0x18, 0xe4, 0x01, 0xb3, 0xb0, 
  0x18, 0xe5, 0x01, 0xb4, 0xb0, 0x18, 0xe6, 0x01, 0xb5, 0xb0, 0x18, 0xe7, 
  0x01, 0xb1, 0xb0, 0x18, 0xe8, 0x01, 0xb1, 0x12, 0xda, 0x01, 0xd9, 0x44, 
  0x49, 0x80, 0x12, 0xf8, 0x00, 0x13, 0x04, 0x01, 0xb0, 0x18, 0xe9, 0x01, 
  0x12, 0xf8, 0x00, 0x13, 0x06, 0x01, 0xb0, 0x18, 0xea, 0x01, 0x12, 0xf8, 
  0x00, 0x13, 0x1b, 0x01, 0xb0, 0x18, 0xeb, 0x01, 0x12, 0xf8, 0x00, 0x13, 
  0x1d, 0x01, 0xb0, 0x18, 0xec, 0x01, 0x12, 0xf8, 0x00, 0x13, 0x19, 0x01, 
  0xb0, 0x18, 0xed, 0x01, 0x12, 0xf8, 0x00, 0x13, 0x13, 0x01, 0xb0, 0x18, 
  0xee, 0x01, 0x12, 0xf8, 0x00, 0x13, 0x1f, 0x01, 0xb0, 0x18, 0xef, 0x01, 
  0x42, 0x46, 0x80, 0x12, 0xf8, 0x00, 0x13, 0x03, 0x01, 0xb0, 0x18, 0xe9, 
  0x01, 0x12, 0xf8, 0x00, 0x13, 0x05, 0x01, 0xb0, 0x18, 0xea, 0x01, 0x12, 
  0xf8, 0x00, 0x13, 0x1a, 0x01, 0xb0, 0x18, 0xeb, 0x01, 0x12, 0xf8, 0x00, 
  0x13, 0x1c, 0x01, 0xb0, 0x18, 0xec, 0x01, 0x12, 0xf8, 0x00, 0x13, 0x18, 
  0x01, 0xb0, 0x18, 0xed, 0x01, 0x12, 0xf8, 0x00, 0x13, 0x12, 0x01, 0xb0, 
  0x18, 0xee, 0x01, 0x12, 0xf8, 0x00, 0x13, 0x1e, 0x01, 0xb0, 0x18, 0xef, 
  0x01, 0x51, 0x63, 
};

static const u8 data_segment_data_592[] = {
  0x4a, 0x04, 0x00, 0x00, 0x42, 0x0f, 0x00, 0x00, 0x22, 0x0f, 0x00, 0x00, 
  0x2a, 0x0f, 0x00, 0x00, 0x32, 0x0f, 0x00, 0x00, 0x3a, 0x0f, 0x00, 0x00, 
  
};

static const u8 data_segment_data_593[] = {
  0x3a, 0x0e, 0x53, 0x00, 0xd2, 0x01, 0x80, 0x27, 0x00, 0xb0, 0x14, 0xe9, 
  0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb0, 0x13, 0xe6, 
  0x01, 0xb1, 0x36, 0x04, 0x63, 
};

static const u8 data_segment_data_594[] = {
  0x4a, 0x04, 0x00, 0x00, 0x82, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_595[] = {
  0x2a, 0x14, 0x56, 0x00, 0xd2, 0x01, 0x80, 0x2a, 0x26, 0x24, 0x28, 0x00, 
  0xb1, 0x80, 0xd7, 0x44, 0x04, 0x80, 0x12, 0x28, 0x00, 0x65, 0xb0, 0x14, 
  0xea, 0x01, 0xb1, 0x36, 0x01, 0xc2, 0xb0, 0x13, 0xe7, 0x01, 0x14, 0xc8, 
  0x01, 0xb2, 0x36, 0x01, 0x63, 
};

static const u8 data_segment_data_596[] = {
  0x4a, 0x04, 0x00, 0x00, 0x8a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_597[] = {
  0x3a, 0x0e, 0xe0, 0x01, 0xd2, 0x01, 0x80, 0x30, 0x00, 0xb0, 0x14, 0xef, 
  0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb0, 0x13, 0xe6, 
  0x01, 0xb1, 0x36, 0x04, 0x63, 
};

static const u8 data_segment_data_598[] = {
  0x4a, 0x04, 0x00, 0x00, 0x92, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_599[] = {
  0x3a, 0x0e, 0xe1, 0x01, 0xd2, 0x01, 0x80, 0x33, 0x00, 0xb0, 0x14, 0xee, 
  0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb0, 0x13, 0xe6, 
  0x01, 0xb1, 0x36, 0x04, 0x63, 
};

static const u8 data_segment_data_600[] = {
  0x4a, 0x04, 0x00, 0x00, 0x92, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_601[] = {
  0x2a, 0x14, 0x65, 0x01, 0xd2, 0x01, 0x80, 0x36, 0x28, 0x26, 0x22, 0x00, 
  0xb0, 0x14, 0x53, 0x00, 0xb1, 0x36, 0x01, 0xc2, 0xb2, 0x80, 0xd7, 0x44, 
  0x02, 0x80, 0x51, 0x63, 0xb0, 0x14, 0x56, 0x00, 0xb2, 0x36, 0x01, 0x63, 
  
};

static const u8 data_segment_data_602[] = {
  0x4a, 0x04, 0x00, 0x00, 0x82, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_603[] = {
  0x5a, 0x16, 0xe2, 0x01, 0xd2, 0x01, 0x80, 0x3c, 0x27, 0x34, 0x26, 0x5d, 
  0x00, 0xb1, 0x14, 0xf3, 0x01, 0x36, 0x00, 0xc2, 0xb0, 0x14, 0xe9, 0x01, 
  0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb0, 0x13, 0xe6, 0x01, 
  0xb2, 0x36, 0x04, 0xc3, 0xb3, 0x80, 0xd7, 0x44, 0x1d, 0x80, 0xb0, 0x14, 
  0xeb, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb0, 0x13, 0xe6, 0x01, 0xb1, 0x13, 
  0xf4, 0x01, 0xb2, 0xb1, 0x14, 0x76, 0x01, 0x36, 0x00, 0x36, 0x05, 0x59, 
  0x42, 0x12, 0x80, 0xb0, 0x14, 0xec, 0x01, 0xb3, 0xb1, 0x13, 0xf4, 0x01, 
  0xb1, 0x14, 0x76, 0x01, 0x36, 0x00, 0x36, 0x03, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_604[] = {
  0x4a, 0x04, 0x00, 0x00, 0xaa, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_605[] = {
  0x42, 0x14, 0x80, 0x00, 0xd2, 0x01, 0x80, 0x44, 0x34, 0x26, 0x24, 0x00, 
  0xb0, 0x14, 0xe9, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 
  0xb0, 0x13, 0xe6, 0x01, 0xb1, 0x36, 0x04, 0xc2, 0xb2, 0x80, 0xd7, 0x44, 
  0x04, 0x80, 0x12, 0x28, 0x00, 0x65, 0xb0, 0x14, 0xed, 0x01, 0xb2, 0x36, 
  0x01, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_606[] = {
  0x4a, 0x04, 0x00, 0x00, 0x82, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_607[] = {
  0x29, 0x0e, 0x14, 0x00, 0xd2, 0x01, 0x80, 0x4a, 0x00, 0x12, 0xf8, 0x00, 
  0x14, 0x07, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb0, 
  0x13, 0xe6, 0x01, 0x36, 0x03, 0x63, 
};

static const u8 data_segment_data_608[] = {
  0x4a, 0x04, 0x00, 0x00, 
};

static const u8 data_segment_data_609[] = {
  0x22, 0x0e, 0xe3, 0x01, 0xd2, 0x01, 0x80, 0x4d, 0x00, 0xb0, 0x14, 0xed, 
  0x01, 0xb1, 0x36, 0x01, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_610[] = {
  0x4a, 0x04, 0x00, 0x00, 0x8a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_611[] = {
  0x00, 0x0e, 0xdd, 0x01, 0xd2, 0x01, 0x8c, 0x50, 0x00, 0x11, 0x17, 0x00, 
  0x16, 0x16, 0x00, 0x10, 0xdd, 0x01, 0x16, 0x1a, 0x00, 0x32, 0x00, 0x16, 
  0x11, 0x00, 0x51, 0x63, 
};

static const u8 data_segment_data_612[] = {
  0xe1, 0x04, 0x0e, 0x11, 0x00, 0xd2, 0x01, 0x80, 0x51, 0x00, 0x12, 0xdc, 
  0x01, 0x14, 0x11, 0x00, 0xb0, 0x12, 0xda, 0x01, 0xb1, 0xb2, 0xb3, 0xb4, 
  0x36, 0x06, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_613[] = {
  0x4a, 0x04, 0x00, 0x00, 0x22, 0x0f, 0x00, 0x00, 0x2a, 0x0f, 0x00, 0x00, 
  0x32, 0x0f, 0x00, 0x00, 0x3a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_614[] = {
  0x00, 0x0e, 0xde, 0x01, 0xd2, 0x01, 0x8c, 0x54, 0x00, 0x11, 0x17, 0x00, 
  0x16, 0x16, 0x00, 0x10, 0xde, 0x01, 0x16, 0x1a, 0x00, 0x32, 0x00, 0x16, 
  0x11, 0x00, 0x51, 0x63, 
};

static const u8 data_segment_data_615[] = {
  0xe1, 0x04, 0x0e, 0x11, 0x00, 0xd2, 0x01, 0x80, 0x55, 0x00, 0x12, 0xdc, 
  0x01, 0x14, 0x11, 0x00, 0xb0, 0x12, 0xdb, 0x01, 0xb1, 0xb2, 0xb3, 0xb4, 
  0x36, 0x06, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_616[] = {
  0x4a, 0x04, 0x00, 0x00, 0x22, 0x0f, 0x00, 0x00, 0x2a, 0x0f, 0x00, 0x00, 
  0x32, 0x0f, 0x00, 0x00, 0x3a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_617[] = {
  0x00, 0x4e, 0xdf, 0x01, 0xd2, 0x01, 0x8c, 0x58, 0x85, 0x0c, 0x65, 0x65, 
  0x60, 0x85, 0x0c, 0x65, 0x60, 0x65, 0x20, 0x65, 0x60, 0x85, 0x15, 0x85, 
  0x0d, 0x65, 0x65, 0x65, 0x20, 0x85, 0x08, 0x65, 0x60, 0x65, 0x65, 0x65, 
  0x65, 0x20, 0x65, 0x40, 0x00, 0x11, 0x17, 0x00, 0x16, 0x16, 0x00, 0x10, 
  0xdf, 0x01, 0x16, 0x1a, 0x00, 0x32, 0x00, 0x16, 0x11, 0x00, 0x32, 0x01, 
  0x16, 0x53, 0x00, 0x32, 0x02, 0x16, 0x56, 0x00, 0x32, 0x03, 0x16, 0xf6, 
  0x01, 0x32, 0x04, 0x16, 0x0f, 0x00, 0x32, 0x05, 0x16, 0x1c, 0x00, 0x32, 
  0x06, 0x16, 0x65, 0x01, 0x32, 0x07, 0x16, 0xe2, 0x01, 0x32, 0x08, 0x16, 
  0x80, 0x00, 0x32, 0x09, 0x16, 0x0b, 0x00, 0x32, 0x0a, 0x16, 0xac, 0x00, 
  0x32, 0x0b, 0x16, 0x13, 0x00, 0x32, 0x0c, 0x16, 0x19, 0x00, 0x32, 0x0d, 
  0x16, 0x14, 0x00, 0x32, 0x0e, 0x16, 0xf7, 0x01, 0x32, 0x0f, 0x16, 0xe0, 
  0x01, 0x32, 0x10, 0x16, 0xe1, 0x01, 0x32, 0x11, 0x16, 0xf8, 0x01, 0x32, 
  0x12, 0x16, 0xf9, 0x01, 0x32, 0x13, 0x16, 0xfa, 0x01, 0x51, 0x63, 
};

static const u8 data_segment_data_618[] = {
  0xd1, 0x04, 0x20, 0x11, 0x00, 0xd2, 0x01, 0x80, 0x59, 0x25, 0x25, 0x25, 
  0x2a, 0x25, 0x25, 0x26, 0x2f, 0x2f, 0x00, 0xb1, 0xb0, 0x18, 0xe4, 0x01, 
  0xb2, 0xb0, 0x18, 0xe5, 0x01, 0xb3, 0xb0, 0x18, 0xe6, 0x01, 0xb4, 0x14, 
  0xfb, 0x01, 0x36, 0x00, 0xb0, 0x18, 0xfc, 0x01, 0xb4, 0xb0, 0x18, 0xe7, 
  0x01, 0x80, 0xb0, 0x18, 0xf0, 0x01, 0x2b, 0x00, 0xb0, 0x18, 0xfd, 0x01, 
  0x12, 0x6b, 0x00, 0xb0, 0x13, 0xfc, 0x01, 0x34, 0x01, 0x80, 0x42, 0x1e, 
  0x80, 0x57, 0xc5, 0x12, 0x5e, 0x00, 0xb0, 0x13, 0xe6, 0x01, 0x34, 0x01, 
  0x23, 0x05, 0xef, 0xb5, 0xed, 0xc3, 0xb0, 0x13, 0xfd, 0x01, 0x14, 0x3c, 
  0x00, 0xb3, 0x36, 0x01, 0x59, 0x81, 0xe5, 0x58, 0x5a, 0xd7, 0x43, 0xdc, 
  0x7f, 0x59, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_619[] = {
  0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
};

static const u8 data_segment_data_620[] = {
  0x3a, 0x0e, 0x53, 0x00, 0xd2, 0x01, 0x80, 0x65, 0x00, 0x12, 0xf8, 0x00, 
  0x14, 0x04, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb0, 
  0x13, 0xe6, 0x01, 0xb1, 0x36, 0x04, 0x63, 
};

static const u8 data_segment_data_621[] = {
  0x4a, 0x04, 0x00, 0x00, 0x82, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_622[] = {
  0x2a, 0x14, 0x56, 0x00, 0xd2, 0x01, 0x80, 0x68, 0x26, 0x24, 0x2a, 0x00, 
  0xb1, 0x80, 0xd7, 0x44, 0x04, 0x80, 0x12, 0x28, 0x00, 0x65, 0x12, 0xf8, 
  0x00, 0x14, 0x06, 0x01, 0xb1, 0x36, 0x01, 0xc2, 0xb0, 0x13, 0xe7, 0x01, 
  0x14, 0xc8, 0x01, 0xb2, 0x36, 0x01, 0x63, 
};

static const u8 data_segment_data_623[] = {
  0x4a, 0x04, 0x00, 0x00, 0x8a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_624[] = {
  0x92, 0x10, 0x20, 0xf6, 0x01, 0xd2, 0x01, 0x80, 0x6e, 0x23, 0x22, 0x29, 
  0x27, 0x37, 0x26, 0x22, 0x28, 0x27, 0x00, 0x2b, 0x00, 0xc2, 0x80, 0xc3, 
  0xb0, 0x13, 0xfc, 0x01, 0x5f, 0x4b, 0x36, 0x00, 0xc4, 0xb0, 0x13, 0xfd, 
  0x01, 0xb3, 0x55, 0xc5, 0x12, 0xf8, 0x00, 0x14, 0x09, 0x01, 0xb4, 0xb0, 
  0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb5, 0xb1, 0x36, 0x05, 0x30, 
  0x02, 0xc6, 0xc7, 0xb6, 0x80, 0xd7, 0x44, 0x02, 0x80, 0x51, 0x63, 0xb2, 
  0x14, 0x3c, 0x00, 0xb7, 0x36, 0x01, 0x59, 0xb3, 0x81, 0xe5, 0xc3, 0x42, 
  0xc7, 0x7f, 0xb2, 0x63, 
};

static const u8 data_segment_data_625[] = {
  0x4a, 0x04, 0x00, 0x00, 0x82, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_626[] = {
  0x2a, 0x14, 0x0f, 0x00, 0xd2, 0x01, 0x80, 0x7a, 0x28, 0x26, 0x24, 0x00, 
  0xb0, 0x14, 0x53, 0x00, 0xb1, 0x36, 0x01, 0xc2, 0xb2, 0x80, 0xd7, 0x44, 
  0x04, 0x80, 0x12, 0x28, 0x00, 0x65, 0xb0, 0x14, 0x56, 0x00, 0xb2, 0x36, 
  0x01, 0x63, 
};

static const u8 data_segment_data_627[] = {
  0x4a, 0x04, 0x00, 0x00, 0x82, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_628[] = {
  0x2b, 0x10, 0x1c, 0x00, 0xd2, 0x01, 0x80, 0x80, 0x2f, 0x00, 0xb1, 0xb2, 
  0x14, 0xf3, 0x01, 0x36, 0x00, 0xd9, 0x43, 0x04, 0x80, 0x12, 0x1f, 0x00, 
  0x65, 0xb0, 0x14, 0xe2, 0x01, 0xb2, 0x36, 0x01, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_629[] = {
  0x4a, 0x04, 0x00, 0x00, 0x82, 0x0f, 0x00, 0x00, 0xaa, 0x0f, 0x00, 0x00, 
  
};

static const u8 data_segment_data_630[] = {
  0x2a, 0x14, 0x65, 0x01, 0xd2, 0x01, 0x80, 0x84, 0x28, 0x26, 0x22, 0x00, 
  0xb0, 0x14, 0x53, 0x00, 0xb1, 0x36, 0x01, 0xc2, 0xb2, 0x80, 0xd7, 0x44, 
  0x02, 0x80, 0x51, 0x63, 0xb0, 0x14, 0x56, 0x00, 0xb2, 0x36, 0x01, 0x63, 
  
};

static const u8 data_segment_data_631[] = {
  0x4a, 0x04, 0x00, 0x00, 0x82, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_632[] = {
  0xaa, 0x10, 0x30, 0xe2, 0x01, 0xd2, 0x01, 0x80, 0x8a, 0x27, 0x36, 0x26, 
  0x3c, 0x22, 0x29, 0x27, 0x3c, 0x4a, 0x34, 0x22, 0x29, 0x27, 0x37, 0x29, 
  0x26, 0x30, 0x00, 0xb1, 0x14, 0xf3, 0x01, 0x36, 0x00, 0xc2, 0x12, 0xf8, 
  0x00, 0x14, 0x04, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 
  0xb0, 0x13, 0xe6, 0x01, 0xb2, 0x36, 0x04, 0xc3, 0xb3, 0x80, 0xd7, 0x44, 
  0x54, 0x80, 0x12, 0xf8, 0x00, 0x14, 0x1b, 0x01, 0xb0, 0x13, 0xe5, 0x01, 
  0xb0, 0x13, 0xe6, 0x01, 0xb1, 0x13, 0xf4, 0x01, 0xb2, 0xb1, 0x14, 0x76, 
  0x01, 0x36, 0x00, 0x36, 0x05, 0x59, 0x80, 0xc4, 0xb0, 0x13, 0xfc, 0x01, 
  0x5f, 0x4b, 0x2b, 0x00, 0xc5, 0xb0, 0x13, 0xfd, 0x01, 0xb4, 0x55, 0xc6, 
  0x12, 0xf8, 0x00, 0x14, 0x0f, 0x01, 0xb5, 0xb0, 0x13, 0xe5, 0x01, 0xb6, 
  0xb1, 0x13, 0xf4, 0x01, 0xb2, 0xb1, 0x14, 0xf6, 0x01, 0x36, 0x00, 0xb4, 
  0x55, 0x36, 0x06, 0x59, 0xb4, 0x81, 0xe5, 0xc4, 0x42, 0xd2, 0x7f, 0x42, 
  0x63, 0x80, 0x12, 0xf8, 0x00, 0x14, 0x1d, 0x01, 0xb3, 0xb1, 0x13, 0xf4, 
  0x01, 0xb1, 0x14, 0x76, 0x01, 0x36, 0x00, 0x36, 0x03, 0x59, 0x80, 0xc4, 
  0xb0, 0x13, 0xfc, 0x01, 0x5f, 0x4b, 0x45, 0x00, 0xc5, 0xb0, 0x13, 0xfd, 
  0x01, 0xb4, 0x55, 0xc6, 0x12, 0xf8, 0x00, 0x14, 0x09, 0x01, 0xb5, 0xb0, 
  0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb6, 0xb2, 0x36, 0x05, 0x30, 
  0x02, 0xc3, 0xc7, 0xb1, 0x14, 0xf6, 0x01, 0x36, 0x00, 0xb4, 0x55, 0xc8, 
  0xb8, 0xb7, 0xd9, 0x43, 0x10, 0x80, 0x12, 0xf8, 0x00, 0x14, 0x10, 0x01, 
  0xb5, 0xb3, 0xb1, 0x13, 0xf4, 0x01, 0xb8, 0x36, 0x04, 0x59, 0xb4, 0x81, 
  0xe5, 0xc4, 0x42, 0xb8, 0x7f, 0x51, 0x63, 
};

static const u8 data_segment_data_633[] = {
  0x4a, 0x04, 0x00, 0x00, 0xaa, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_634[] = {
  0x8a, 0x10, 0x22, 0x80, 0x00, 0xd2, 0x01, 0x80, 0x9f, 0x36, 0x26, 0x24, 
  0x2a, 0x22, 0x29, 0x27, 0x37, 0x2a, 0x2b, 0x00, 0x12, 0xf8, 0x00, 0x14, 
  0x04, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb0, 0x13, 
  0xe6, 0x01, 0xb1, 0x36, 0x04, 0xc2, 0xb2, 0x80, 0xd7, 0x44, 0x04, 0x80, 
  0x12, 0x28, 0x00, 0x65, 0x12, 0xf8, 0x00, 0x14, 0x19, 0x01, 0xb2, 0x36, 
  0x01, 0x59, 0x80, 0xc3, 0xb0, 0x13, 0xfc, 0x01, 0x5f, 0x4b, 0x3b, 0x00, 
  0xc4, 0xb0, 0x13, 0xfd, 0x01, 0xb3, 0x55, 0xc5, 0x12, 0xf8, 0x00, 0x14, 
  0x09, 0x01, 0xb4, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb5, 
  0xb1, 0x36, 0x05, 0x30, 0x02, 0xc2, 0xc6, 0xb2, 0x80, 0xdb, 0x43, 0x04, 
  0x80, 0x12, 0x1f, 0x00, 0x65, 0x12, 0xf8, 0x00, 0x14, 0x0e, 0x01, 0xb4, 
  0xb2, 0x36, 0x02, 0x59, 0xb3, 0x81, 0xe5, 0xc3, 0x42, 0xc2, 0x7f, 0x51, 
  0x63, 
};

static const u8 data_segment_data_635[] = {
  0x4a, 0x04, 0x00, 0x00, 0x82, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_636[] = {
  0x22, 0x0e, 0x0b, 0x00, 0xd2, 0x01, 0x80, 0xac, 0x00, 0xb0, 0x14, 0x80, 
  0x00, 0xb1, 0x36, 0x01, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_637[] = {
  0x4a, 0x04, 0x00, 0x00, 0x82, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_638[] = {
  0x3a, 0x0e, 0xac, 0x00, 0xd2, 0x01, 0x80, 0xaf, 0x00, 0x12, 0xf8, 0x00, 
  0x14, 0x04, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb0, 
  0x13, 0xe6, 0x01, 0xb1, 0x36, 0x04, 0x80, 0xdb, 0x63, 
};

static const u8 data_segment_data_639[] = {
  0x4a, 0x04, 0x00, 0x00, 0x82, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_640[] = {
  0x29, 0x10, 0x13, 0x00, 0xd2, 0x01, 0x80, 0xb2, 0x38, 0x00, 0x12, 0xf8, 
  0x00, 0x14, 0x02, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 
  0xb0, 0x13, 0xe6, 0x01, 0x36, 0x03, 0xb0, 0x18, 0xf1, 0x01, 0xb0, 0x63, 
  
};

static const u8 data_segment_data_641[] = {
  0x4a, 0x04, 0x00, 0x00, 
};

static const u8 data_segment_data_642[] = {
  0x19, 0x18, 0x19, 0x00, 0xd2, 0x01, 0x80, 0xb6, 0x29, 0x24, 0x36, 0x29, 
  0x24, 0x00, 0xb0, 0x13, 0xf1, 0x01, 0x7f, 0xd9, 0x44, 0x04, 0x80, 0x12, 
  0x33, 0x00, 0x65, 0x12, 0xf8, 0x00, 0x14, 0x17, 0x01, 0xb0, 0x13, 0xf1, 
  0x01, 0x36, 0x01, 0x30, 0x02, 0xb0, 0x18, 0xf1, 0x01, 0xb0, 0x18, 0xf0, 
  0x01, 0xb0, 0x13, 0xf1, 0x01, 0x80, 0xd7, 0x44, 0x04, 0x80, 0x12, 0x33, 
  0x00, 0x65, 0xb0, 0x14, 0x56, 0x00, 0xb0, 0x13, 0xf1, 0x01, 0x36, 0x01, 
  0x63, 
};

static const u8 data_segment_data_643[] = {
  0x4a, 0x04, 0x00, 0x00, 
};

static const u8 data_segment_data_644[] = {
  0x31, 0x14, 0x14, 0x00, 0xd2, 0x01, 0x80, 0xbe, 0x35, 0x27, 0x24, 0x00, 
  0x12, 0xf8, 0x00, 0x14, 0x07, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 
  0xe5, 0x01, 0xb0, 0x13, 0xe6, 0x01, 0x36, 0x03, 0xc1, 0xb0, 0x13, 0xfc, 
  0x01, 0x44, 0x04, 0x80, 0xb1, 0x82, 0xea, 0xc1, 0xb1, 0x63, 
};

static const u8 data_segment_data_645[] = {
  0x4a, 0x04, 0x00, 0x00, 
};

static const u8 data_segment_data_646[] = {
  0x2a, 0x0e, 0xf7, 0x01, 0xd2, 0x01, 0x80, 0xc4, 0x00, 0x12, 0xfe, 0x01, 
  0xb0, 0xb0, 0x13, 0xfc, 0x01, 0xb1, 0x55, 0xb0, 0x13, 0xe7, 0x01, 0x34, 
  0x03, 0x63, 
};

static const u8 data_segment_data_647[] = {
  0x4a, 0x04, 0x00, 0x00, 0xfa, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_648[] = {
  0x3a, 0x0e, 0xe0, 0x01, 0xd2, 0x01, 0x80, 0xc7, 0x00, 0x12, 0xf8, 0x00, 
  0x14, 0x1f, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb0, 
  0x13, 0xe6, 0x01, 0xb1, 0x36, 0x04, 0x63, 
};

static const u8 data_segment_data_649[] = {
  0x4a, 0x04, 0x00, 0x00, 0x92, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_650[] = {
  0x3a, 0x0e, 0xe1, 0x01, 0xd2, 0x01, 0x80, 0xca, 0x00, 0x12, 0xf8, 0x00, 
  0x14, 0x13, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb0, 
  0x13, 0xe6, 0x01, 0xb1, 0x36, 0x04, 0x63, 
};

static const u8 data_segment_data_651[] = {
  0x4a, 0x04, 0x00, 0x00, 0x92, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_652[] = {
  0x53, 0x10, 0xf8, 0x01, 0xd2, 0x01, 0x80, 0xcd, 0x27, 0x00, 0xb0, 0x13, 
  0xfc, 0x01, 0xb1, 0x55, 0xc3, 0x12, 0xf8, 0x00, 0x14, 0x0a, 0x01, 0xb3, 
  0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb0, 0x13, 0xe6, 0x01, 
  0xb2, 0x36, 0x05, 0x63, 
};

static const u8 data_segment_data_653[] = {
  0x4a, 0x04, 0x00, 0x00, 0xe2, 0x02, 0x00, 0x00, 0x02, 0x10, 0x00, 0x00, 
  
};

static const u8 data_segment_data_654[] = {
  0x5b, 0x12, 0xf9, 0x01, 0xd2, 0x01, 0x80, 0xd1, 0x27, 0x27, 0x00, 0xb0, 
  0x13, 0xfc, 0x01, 0xb1, 0x55, 0xc3, 0xb0, 0x13, 0xfd, 0x01, 0xb1, 0x55, 
  0xc4, 0x12, 0xf8, 0x00, 0x14, 0x11, 0x01, 0xb3, 0xb0, 0x13, 0xe4, 0x01, 
  0xb0, 0x13, 0xe5, 0x01, 0xb4, 0xb2, 0x36, 0x05, 0x63, 
};

static const u8 data_segment_data_655[] = {
  0x4a, 0x04, 0x00, 0x00, 0xe2, 0x02, 0x00, 0x00, 0x02, 0x10, 0x00, 0x00, 
  
};

static const u8 data_segment_data_656[] = {
  0x5b, 0x12, 0xfa, 0x01, 0xd2, 0x01, 0x80, 0xd6, 0x27, 0x27, 0x00, 0xb0, 
  0x13, 0xfc, 0x01, 0xb1, 0x55, 0xc3, 0xb0, 0x13, 0xfd, 0x01, 0xb1, 0x55, 
  0xc4, 0x12, 0xf8, 0x00, 0x14, 0x0b, 0x01, 0xb3, 0xb0, 0x13, 0xe4, 0x01, 
  0xb0, 0x13, 0xe5, 0x01, 0xb4, 0xb2, 0x36, 0x05, 0x63, 
};

static const u8 data_segment_data_657[] = {
  0x4a, 0x04, 0x00, 0x00, 0xe2, 0x02, 0x00, 0x00, 0x02, 0x10, 0x00, 0x00, 
  
};

static const u8 data_segment_data_658[] = {
  0x08, 0x0c, 0x93, 0x01, 0x01, 0x02, 0x20, 0x00, 0x12, 0x7b, 0x00, 0x23, 
  0x00, 0x34, 0x01, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_659[] = {
  0x3b, 0x0e, 0x02, 0x02, 0x01, 0x02, 0x60, 0x20, 0x00, 0x12, 0x7b, 0x00, 
  0x10, 0x03, 0x02, 0xb0, 0xb1, 0xb2, 0x34, 0x04, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_660[] = {
  0x22, 0x10, 0x00, 0x00, 0x2a, 0x10, 0x00, 0x00, 0x32, 0x10, 0x00, 0x00, 
  
};

static const u8 data_segment_data_661[] = {
  0x08, 0x0c, 0x93, 0x01, 0x07, 0x02, 0x20, 0x00, 0x12, 0x7b, 0x00, 0x23, 
  0x00, 0x34, 0x01, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_662[] = {
  0x3b, 0x0e, 0x02, 0x02, 0x07, 0x02, 0x60, 0x20, 0x00, 0x12, 0x7b, 0x00, 
  0x10, 0x08, 0x02, 0xb0, 0xb1, 0xb2, 0x34, 0x04, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_663[] = {
  0x22, 0x10, 0x00, 0x00, 0x2a, 0x10, 0x00, 0x00, 0x32, 0x10, 0x00, 0x00, 
  
};

static const u8 data_segment_data_664[] = {
  0x08, 0x0e, 0x93, 0x01, 0x09, 0x02, 0x80, 0x08, 0x00, 0x12, 0x7b, 0x00, 
  0x23, 0x00, 0x34, 0x01, 0x59, 0x51, 0x63, 
};

static void init_memory(void) {
  memset(&M0, 0, sizeof(M0));wasm_rt_allocate_memory((&M0), 1, PYTHON_VM_MAX_MEMORY_SIZE/65536);
  memcpy(&(M0.data[5120u]), data_segment_data_0, 2772);
  memcpy(&(M0.data[7904u]), data_segment_data_1, 88);
  memcpy(&(M0.data[8000u]), data_segment_data_2, 1804);
  memcpy(&(M0.data[9804u]), data_segment_data_3, 1484);
  memcpy(&(M0.data[11288u]), data_segment_data_4, 828);
  memcpy(&(M0.data[12128u]), data_segment_data_5, 464);
  memcpy(&(M0.data[12592u]), data_segment_data_6, 16);
  memcpy(&(M0.data[12608u]), data_segment_data_7, 801);
  memcpy(&(M0.data[13409u]), data_segment_data_8, 691);
  memcpy(&(M0.data[14100u]), data_segment_data_9, 705);
  memcpy(&(M0.data[14805u]), data_segment_data_10, 761);
  memcpy(&(M0.data[15566u]), data_segment_data_11, 372);
  memcpy(&(M0.data[15938u]), data_segment_data_12, 494);
  memcpy(&(M0.data[16432u]), data_segment_data_13, 915);
  memcpy(&(M0.data[17347u]), data_segment_data_14, 372);
  memcpy(&(M0.data[17719u]), data_segment_data_15, 455);
  memcpy(&(M0.data[18174u]), data_segment_data_16, 200);
  memcpy(&(M0.data[18374u]), data_segment_data_17, 286);
  memcpy(&(M0.data[18660u]), data_segment_data_18, 165);
  memcpy(&(M0.data[18825u]), data_segment_data_19, 202);
  memcpy(&(M0.data[19027u]), data_segment_data_20, 202);
  memcpy(&(M0.data[19229u]), data_segment_data_21, 213);
  memcpy(&(M0.data[19442u]), data_segment_data_22, 186);
  memcpy(&(M0.data[19628u]), data_segment_data_23, 187);
  memcpy(&(M0.data[19815u]), data_segment_data_24, 152);
  memcpy(&(M0.data[19967u]), data_segment_data_25, 160);
  memcpy(&(M0.data[20127u]), data_segment_data_26, 169);
  memcpy(&(M0.data[20296u]), data_segment_data_27, 167);
  memcpy(&(M0.data[20463u]), data_segment_data_28, 218);
  memcpy(&(M0.data[20681u]), data_segment_data_29, 156);
  memcpy(&(M0.data[20837u]), data_segment_data_30, 275);
  memcpy(&(M0.data[21112u]), data_segment_data_31, 131);
  memcpy(&(M0.data[21243u]), data_segment_data_32, 112);
  memcpy(&(M0.data[21355u]), data_segment_data_33, 184);
  memcpy(&(M0.data[21539u]), data_segment_data_34, 153);
  memcpy(&(M0.data[21692u]), data_segment_data_35, 120);
  memcpy(&(M0.data[21812u]), data_segment_data_36, 133);
  memcpy(&(M0.data[21945u]), data_segment_data_37, 100);
  memcpy(&(M0.data[22045u]), data_segment_data_38, 80);
  memcpy(&(M0.data[22125u]), data_segment_data_39, 58);
  memcpy(&(M0.data[22183u]), data_segment_data_40, 77);
  memcpy(&(M0.data[22260u]), data_segment_data_41, 106);
  memcpy(&(M0.data[22366u]), data_segment_data_42, 84);
  memcpy(&(M0.data[22450u]), data_segment_data_43, 81);
  memcpy(&(M0.data[22531u]), data_segment_data_44, 109);
  memcpy(&(M0.data[22640u]), data_segment_data_45, 72);
  memcpy(&(M0.data[22712u]), data_segment_data_46, 83);
  memcpy(&(M0.data[22795u]), data_segment_data_47, 88);
  memcpy(&(M0.data[22883u]), data_segment_data_48, 127);
  memcpy(&(M0.data[23010u]), data_segment_data_49, 14);
  memcpy(&(M0.data[23024u]), data_segment_data_50, 15);
  memcpy(&(M0.data[23039u]), data_segment_data_51, 15);
  memcpy(&(M0.data[23054u]), data_segment_data_52, 12);
  memcpy(&(M0.data[23066u]), data_segment_data_53, 13);
  memcpy(&(M0.data[23079u]), data_segment_data_54, 17);
  memcpy(&(M0.data[23096u]), data_segment_data_55, 13);
  memcpy(&(M0.data[23109u]), data_segment_data_56, 12);
  memcpy(&(M0.data[23121u]), data_segment_data_57, 19);
  memcpy(&(M0.data[23140u]), data_segment_data_58, 19);
  memcpy(&(M0.data[23159u]), data_segment_data_59, 23);
  memcpy(&(M0.data[23184u]), data_segment_data_60, 15568);
  memcpy(&(M0.data[38752u]), data_segment_data_61, 4);
  memcpy(&(M0.data[38756u]), data_segment_data_62, 17);
  memcpy(&(M0.data[38773u]), data_segment_data_63, 16);
  memcpy(&(M0.data[38789u]), data_segment_data_64, 16);
  memcpy(&(M0.data[38805u]), data_segment_data_65, 13);
  memcpy(&(M0.data[38818u]), data_segment_data_66, 11);
  memcpy(&(M0.data[38829u]), data_segment_data_67, 10);
  memcpy(&(M0.data[38839u]), data_segment_data_68, 16);
  memcpy(&(M0.data[38855u]), data_segment_data_69, 14);
  memcpy(&(M0.data[38869u]), data_segment_data_70, 22);
  memcpy(&(M0.data[38896u]), data_segment_data_71, 128);
  memcpy(&(M0.data[39024u]), data_segment_data_72, 16);
  memcpy(&(M0.data[39040u]), data_segment_data_73, 16);
  memcpy(&(M0.data[39056u]), data_segment_data_74, 16);
  memcpy(&(M0.data[39072u]), data_segment_data_75, 32);
  memcpy(&(M0.data[39104u]), data_segment_data_76, 32);
  memcpy(&(M0.data[39136u]), data_segment_data_77, 32);
  memcpy(&(M0.data[39168u]), data_segment_data_78, 32);
  memcpy(&(M0.data[39200u]), data_segment_data_79, 16);
  memcpy(&(M0.data[39216u]), data_segment_data_80, 16);
  memcpy(&(M0.data[39232u]), data_segment_data_81, 2760);
  memcpy(&(M0.data[42000u]), data_segment_data_82, 64);
  memcpy(&(M0.data[42064u]), data_segment_data_83, 19);
  memcpy(&(M0.data[42083u]), data_segment_data_84, 31);
  memcpy(&(M0.data[42128u]), data_segment_data_85, 16);
  memcpy(&(M0.data[42144u]), data_segment_data_86, 12);
  memcpy(&(M0.data[42156u]), data_segment_data_87, 16);
  memcpy(&(M0.data[42172u]), data_segment_data_88, 20);
  memcpy(&(M0.data[42192u]), data_segment_data_89, 18);
  memcpy(&(M0.data[42210u]), data_segment_data_90, 19);
  memcpy(&(M0.data[42229u]), data_segment_data_91, 19);
  memcpy(&(M0.data[42248u]), data_segment_data_92, 19);
  memcpy(&(M0.data[42267u]), data_segment_data_93, 19);
  memcpy(&(M0.data[42286u]), data_segment_data_94, 21);
  memcpy(&(M0.data[42307u]), data_segment_data_95, 12);
  memcpy(&(M0.data[42319u]), data_segment_data_96, 64);
  memcpy(&(M0.data[42383u]), data_segment_data_97, 20);
  memcpy(&(M0.data[42403u]), data_segment_data_98, 19);
  memcpy(&(M0.data[42422u]), data_segment_data_99, 9);
  memcpy(&(M0.data[42431u]), data_segment_data_100, 22);
  memcpy(&(M0.data[42453u]), data_segment_data_101, 13);
  memcpy(&(M0.data[42466u]), data_segment_data_102, 13);
  memcpy(&(M0.data[42479u]), data_segment_data_103, 13);
  memcpy(&(M0.data[42496u]), data_segment_data_104, 16);
  memcpy(&(M0.data[42512u]), data_segment_data_105, 19);
  memcpy(&(M0.data[42544u]), data_segment_data_106, 32);
  memcpy(&(M0.data[42576u]), data_segment_data_107, 27);
  memcpy(&(M0.data[42603u]), data_segment_data_108, 88);
  memcpy(&(M0.data[42704u]), data_segment_data_109, 16);
  memcpy(&(M0.data[42720u]), data_segment_data_110, 184);
  memcpy(&(M0.data[42912u]), data_segment_data_111, 32);
  memcpy(&(M0.data[42944u]), data_segment_data_112, 12);
  memcpy(&(M0.data[42960u]), data_segment_data_113, 256);
  memcpy(&(M0.data[43216u]), data_segment_data_114, 85);
  memcpy(&(M0.data[43301u]), data_segment_data_115, 45);
  memcpy(&(M0.data[43346u]), data_segment_data_116, 84);
  memcpy(&(M0.data[43440u]), data_segment_data_117, 20);
  memcpy(&(M0.data[43460u]), data_segment_data_118, 48);
  memcpy(&(M0.data[43508u]), data_segment_data_119, 54);
  memcpy(&(M0.data[43562u]), data_segment_data_120, 15);
  memcpy(&(M0.data[43577u]), data_segment_data_121, 13);
  memcpy(&(M0.data[43590u]), data_segment_data_122, 20);
  memcpy(&(M0.data[43610u]), data_segment_data_123, 25);
  memcpy(&(M0.data[43635u]), data_segment_data_124, 10);
  memcpy(&(M0.data[43648u]), data_segment_data_125, 37);
  memcpy(&(M0.data[43685u]), data_segment_data_126, 28);
  memcpy(&(M0.data[43713u]), data_segment_data_127, 20);
  memcpy(&(M0.data[43733u]), data_segment_data_128, 10);
  memcpy(&(M0.data[43743u]), data_segment_data_129, 26);
  memcpy(&(M0.data[43769u]), data_segment_data_130, 104);
  memcpy(&(M0.data[43873u]), data_segment_data_131, 11);
  memcpy(&(M0.data[43884u]), data_segment_data_132, 29);
  memcpy(&(M0.data[43913u]), data_segment_data_133, 23);
  memcpy(&(M0.data[43936u]), data_segment_data_134, 8);
  memcpy(&(M0.data[43944u]), data_segment_data_135, 7);
  memcpy(&(M0.data[43951u]), data_segment_data_136, 14);
  memcpy(&(M0.data[43965u]), data_segment_data_137, 25);
  memcpy(&(M0.data[43990u]), data_segment_data_138, 48);
  memcpy(&(M0.data[44038u]), data_segment_data_139, 90);
  memcpy(&(M0.data[44128u]), data_segment_data_140, 12);
  memcpy(&(M0.data[44140u]), data_segment_data_141, 59);
  memcpy(&(M0.data[44199u]), data_segment_data_142, 11);
  memcpy(&(M0.data[44210u]), data_segment_data_143, 14);
  memcpy(&(M0.data[44224u]), data_segment_data_144, 17);
  memcpy(&(M0.data[44241u]), data_segment_data_145, 17);
  memcpy(&(M0.data[44258u]), data_segment_data_146, 4);
  memcpy(&(M0.data[44262u]), data_segment_data_147, 26);
  memcpy(&(M0.data[44288u]), data_segment_data_148, 25);
  memcpy(&(M0.data[44313u]), data_segment_data_149, 21);
  memcpy(&(M0.data[44334u]), data_segment_data_150, 25);
  memcpy(&(M0.data[44359u]), data_segment_data_151, 19);
  memcpy(&(M0.data[44384u]), data_segment_data_152, 16);
  memcpy(&(M0.data[44400u]), data_segment_data_153, 21);
  memcpy(&(M0.data[44432u]), data_segment_data_154, 17);
  memcpy(&(M0.data[44464u]), data_segment_data_155, 17);
  memcpy(&(M0.data[44481u]), data_segment_data_156, 16);
  memcpy(&(M0.data[44497u]), data_segment_data_157, 11);
  memcpy(&(M0.data[44508u]), data_segment_data_158, 17);
  memcpy(&(M0.data[44525u]), data_segment_data_159, 17);
  memcpy(&(M0.data[44542u]), data_segment_data_160, 12);
  memcpy(&(M0.data[44554u]), data_segment_data_161, 21);
  memcpy(&(M0.data[44575u]), data_segment_data_162, 11);
  memcpy(&(M0.data[44586u]), data_segment_data_163, 10);
  memcpy(&(M0.data[44596u]), data_segment_data_164, 30);
  memcpy(&(M0.data[44626u]), data_segment_data_165, 22);
  memcpy(&(M0.data[44648u]), data_segment_data_166, 20);
  memcpy(&(M0.data[44668u]), data_segment_data_167, 24);
  memcpy(&(M0.data[44692u]), data_segment_data_168, 24);
  memcpy(&(M0.data[44716u]), data_segment_data_169, 27);
  memcpy(&(M0.data[44743u]), data_segment_data_170, 19);
  memcpy(&(M0.data[44762u]), data_segment_data_171, 18);
  memcpy(&(M0.data[44780u]), data_segment_data_172, 7);
  memcpy(&(M0.data[44787u]), data_segment_data_173, 10);
  memcpy(&(M0.data[44797u]), data_segment_data_174, 8);
  memcpy(&(M0.data[44805u]), data_segment_data_175, 12);
  memcpy(&(M0.data[44817u]), data_segment_data_176, 13);
  memcpy(&(M0.data[44830u]), data_segment_data_177, 12);
  memcpy(&(M0.data[44842u]), data_segment_data_178, 9);
  memcpy(&(M0.data[44851u]), data_segment_data_179, 12);
  memcpy(&(M0.data[44863u]), data_segment_data_180, 7);
  memcpy(&(M0.data[44870u]), data_segment_data_181, 15);
  memcpy(&(M0.data[44885u]), data_segment_data_182, 9);
  memcpy(&(M0.data[44894u]), data_segment_data_183, 9);
  memcpy(&(M0.data[44903u]), data_segment_data_184, 9);
  memcpy(&(M0.data[44912u]), data_segment_data_185, 8);
  memcpy(&(M0.data[44920u]), data_segment_data_186, 9);
  memcpy(&(M0.data[44929u]), data_segment_data_187, 8);
  memcpy(&(M0.data[44937u]), data_segment_data_188, 7);
  memcpy(&(M0.data[44944u]), data_segment_data_189, 10);
  memcpy(&(M0.data[44954u]), data_segment_data_190, 7);
  memcpy(&(M0.data[44961u]), data_segment_data_191, 12);
  memcpy(&(M0.data[44973u]), data_segment_data_192, 8);
  memcpy(&(M0.data[44981u]), data_segment_data_193, 8);
  memcpy(&(M0.data[44989u]), data_segment_data_194, 10);
  memcpy(&(M0.data[44999u]), data_segment_data_195, 8);
  memcpy(&(M0.data[45007u]), data_segment_data_196, 10);
  memcpy(&(M0.data[45017u]), data_segment_data_197, 14);
  memcpy(&(M0.data[45031u]), data_segment_data_198, 7);
  memcpy(&(M0.data[45038u]), data_segment_data_199, 11);
  memcpy(&(M0.data[45049u]), data_segment_data_200, 11);
  memcpy(&(M0.data[45060u]), data_segment_data_201, 11);
  memcpy(&(M0.data[45071u]), data_segment_data_202, 8);
  memcpy(&(M0.data[45079u]), data_segment_data_203, 6);
  memcpy(&(M0.data[45085u]), data_segment_data_204, 9);
  memcpy(&(M0.data[45094u]), data_segment_data_205, 10);
  memcpy(&(M0.data[45104u]), data_segment_data_206, 7);
  memcpy(&(M0.data[45111u]), data_segment_data_207, 11);
  memcpy(&(M0.data[45122u]), data_segment_data_208, 11);
  memcpy(&(M0.data[45133u]), data_segment_data_209, 36);
  memcpy(&(M0.data[45169u]), data_segment_data_210, 11);
  memcpy(&(M0.data[45180u]), data_segment_data_211, 11);
  memcpy(&(M0.data[45191u]), data_segment_data_212, 35);
  memcpy(&(M0.data[45226u]), data_segment_data_213, 11);
  memcpy(&(M0.data[45237u]), data_segment_data_214, 28);
  memcpy(&(M0.data[45265u]), data_segment_data_215, 8);
  memcpy(&(M0.data[45273u]), data_segment_data_216, 30);
  memcpy(&(M0.data[45303u]), data_segment_data_217, 7);
  memcpy(&(M0.data[45310u]), data_segment_data_218, 8);
  memcpy(&(M0.data[45318u]), data_segment_data_219, 7);
  memcpy(&(M0.data[45325u]), data_segment_data_220, 8);
  memcpy(&(M0.data[45333u]), data_segment_data_221, 10);
  memcpy(&(M0.data[45343u]), data_segment_data_222, 10);
  memcpy(&(M0.data[45353u]), data_segment_data_223, 9);
  memcpy(&(M0.data[45362u]), data_segment_data_224, 10);
  memcpy(&(M0.data[45372u]), data_segment_data_225, 8);
  memcpy(&(M0.data[45380u]), data_segment_data_226, 7);
  memcpy(&(M0.data[45387u]), data_segment_data_227, 15);
  memcpy(&(M0.data[45402u]), data_segment_data_228, 8);
  memcpy(&(M0.data[45410u]), data_segment_data_229, 10);
  memcpy(&(M0.data[45420u]), data_segment_data_230, 8);
  memcpy(&(M0.data[45428u]), data_segment_data_231, 7);
  memcpy(&(M0.data[45435u]), data_segment_data_232, 7);
  memcpy(&(M0.data[45442u]), data_segment_data_233, 11);
  memcpy(&(M0.data[45453u]), data_segment_data_234, 7);
  memcpy(&(M0.data[45460u]), data_segment_data_235, 9);
  memcpy(&(M0.data[45469u]), data_segment_data_236, 9);
  memcpy(&(M0.data[45478u]), data_segment_data_237, 8);
  memcpy(&(M0.data[45486u]), data_segment_data_238, 12);
  memcpy(&(M0.data[45498u]), data_segment_data_239, 12);
  memcpy(&(M0.data[45510u]), data_segment_data_240, 10);
  memcpy(&(M0.data[45520u]), data_segment_data_241, 11);
  memcpy(&(M0.data[45531u]), data_segment_data_242, 8);
  memcpy(&(M0.data[45539u]), data_segment_data_243, 11);
  memcpy(&(M0.data[45550u]), data_segment_data_244, 9);
  memcpy(&(M0.data[45559u]), data_segment_data_245, 10);
  memcpy(&(M0.data[45569u]), data_segment_data_246, 9);
  memcpy(&(M0.data[45578u]), data_segment_data_247, 10);
  memcpy(&(M0.data[45588u]), data_segment_data_248, 10);
  memcpy(&(M0.data[45598u]), data_segment_data_249, 8);
  memcpy(&(M0.data[45606u]), data_segment_data_250, 8);
  memcpy(&(M0.data[45614u]), data_segment_data_251, 7);
  memcpy(&(M0.data[45621u]), data_segment_data_252, 7);
  memcpy(&(M0.data[45628u]), data_segment_data_253, 11);
  memcpy(&(M0.data[45639u]), data_segment_data_254, 14);
  memcpy(&(M0.data[45653u]), data_segment_data_255, 8);
  memcpy(&(M0.data[45661u]), data_segment_data_256, 10);
  memcpy(&(M0.data[45671u]), data_segment_data_257, 9);
  memcpy(&(M0.data[45680u]), data_segment_data_258, 9);
  memcpy(&(M0.data[45689u]), data_segment_data_259, 14);
  memcpy(&(M0.data[45703u]), data_segment_data_260, 16);
  memcpy(&(M0.data[45719u]), data_segment_data_261, 8);
  memcpy(&(M0.data[45727u]), data_segment_data_262, 8);
  memcpy(&(M0.data[45735u]), data_segment_data_263, 7);
  memcpy(&(M0.data[45742u]), data_segment_data_264, 9);
  memcpy(&(M0.data[45751u]), data_segment_data_265, 7);
  memcpy(&(M0.data[45758u]), data_segment_data_266, 9);
  memcpy(&(M0.data[45767u]), data_segment_data_267, 9);
  memcpy(&(M0.data[45776u]), data_segment_data_268, 12);
  memcpy(&(M0.data[45788u]), data_segment_data_269, 9);
  memcpy(&(M0.data[45797u]), data_segment_data_270, 8);
  memcpy(&(M0.data[45805u]), data_segment_data_271, 10);
  memcpy(&(M0.data[45815u]), data_segment_data_272, 9);
  memcpy(&(M0.data[45824u]), data_segment_data_273, 9);
  memcpy(&(M0.data[45833u]), data_segment_data_274, 9);
  memcpy(&(M0.data[45842u]), data_segment_data_275, 10);
  memcpy(&(M0.data[45852u]), data_segment_data_276, 9);
  memcpy(&(M0.data[45861u]), data_segment_data_277, 7);
  memcpy(&(M0.data[45868u]), data_segment_data_278, 11);
  memcpy(&(M0.data[45879u]), data_segment_data_279, 11);
  memcpy(&(M0.data[45890u]), data_segment_data_280, 11);
  memcpy(&(M0.data[45901u]), data_segment_data_281, 13);
  memcpy(&(M0.data[45914u]), data_segment_data_282, 12);
  memcpy(&(M0.data[45926u]), data_segment_data_283, 19);
  memcpy(&(M0.data[45945u]), data_segment_data_284, 16);
  memcpy(&(M0.data[45961u]), data_segment_data_285, 12);
  memcpy(&(M0.data[45973u]), data_segment_data_286, 14);
  memcpy(&(M0.data[45987u]), data_segment_data_287, 10);
  memcpy(&(M0.data[45997u]), data_segment_data_288, 12);
  memcpy(&(M0.data[46009u]), data_segment_data_289, 16);
  memcpy(&(M0.data[46025u]), data_segment_data_290, 10);
  memcpy(&(M0.data[46035u]), data_segment_data_291, 10);
  memcpy(&(M0.data[46045u]), data_segment_data_292, 12);
  memcpy(&(M0.data[46057u]), data_segment_data_293, 14);
  memcpy(&(M0.data[46071u]), data_segment_data_294, 14);
  memcpy(&(M0.data[46085u]), data_segment_data_295, 12);
  memcpy(&(M0.data[46097u]), data_segment_data_296, 10);
  memcpy(&(M0.data[46107u]), data_segment_data_297, 14);
  memcpy(&(M0.data[46121u]), data_segment_data_298, 10);
  memcpy(&(M0.data[46131u]), data_segment_data_299, 14);
  memcpy(&(M0.data[46145u]), data_segment_data_300, 11);
  memcpy(&(M0.data[46156u]), data_segment_data_301, 11);
  memcpy(&(M0.data[46167u]), data_segment_data_302, 10);
  memcpy(&(M0.data[46177u]), data_segment_data_303, 11);
  memcpy(&(M0.data[46188u]), data_segment_data_304, 10);
  memcpy(&(M0.data[46198u]), data_segment_data_305, 12);
  memcpy(&(M0.data[46210u]), data_segment_data_306, 11);
  memcpy(&(M0.data[46221u]), data_segment_data_307, 11);
  memcpy(&(M0.data[46232u]), data_segment_data_308, 18);
  memcpy(&(M0.data[46250u]), data_segment_data_309, 16);
  memcpy(&(M0.data[46266u]), data_segment_data_310, 14);
  memcpy(&(M0.data[46280u]), data_segment_data_311, 11);
  memcpy(&(M0.data[46291u]), data_segment_data_312, 17);
  memcpy(&(M0.data[46308u]), data_segment_data_313, 15);
  memcpy(&(M0.data[46323u]), data_segment_data_314, 11);
  memcpy(&(M0.data[46334u]), data_segment_data_315, 7);
  memcpy(&(M0.data[46341u]), data_segment_data_316, 7);
  memcpy(&(M0.data[46348u]), data_segment_data_317, 9);
  memcpy(&(M0.data[46357u]), data_segment_data_318, 36);
  memcpy(&(M0.data[46393u]), data_segment_data_319, 12);
  memcpy(&(M0.data[46405u]), data_segment_data_320, 14);
  memcpy(&(M0.data[46419u]), data_segment_data_321, 14);
  memcpy(&(M0.data[46433u]), data_segment_data_322, 13);
  memcpy(&(M0.data[46446u]), data_segment_data_323, 13);
  memcpy(&(M0.data[46459u]), data_segment_data_324, 12);
  memcpy(&(M0.data[46471u]), data_segment_data_325, 11);
  memcpy(&(M0.data[46482u]), data_segment_data_326, 21);
  memcpy(&(M0.data[46503u]), data_segment_data_327, 11);
  memcpy(&(M0.data[46514u]), data_segment_data_328, 15);
  memcpy(&(M0.data[46529u]), data_segment_data_329, 12);
  memcpy(&(M0.data[46541u]), data_segment_data_330, 16);
  memcpy(&(M0.data[46557u]), data_segment_data_331, 14);
  memcpy(&(M0.data[46571u]), data_segment_data_332, 11);
  memcpy(&(M0.data[46582u]), data_segment_data_333, 8);
  memcpy(&(M0.data[46590u]), data_segment_data_334, 9);
  memcpy(&(M0.data[46599u]), data_segment_data_335, 25);
  memcpy(&(M0.data[46624u]), data_segment_data_336, 15);
  memcpy(&(M0.data[46639u]), data_segment_data_337, 14);
  memcpy(&(M0.data[46653u]), data_segment_data_338, 15);
  memcpy(&(M0.data[46668u]), data_segment_data_339, 7);
  memcpy(&(M0.data[46675u]), data_segment_data_340, 8);
  memcpy(&(M0.data[46683u]), data_segment_data_341, 9);
  memcpy(&(M0.data[46692u]), data_segment_data_342, 8);
  memcpy(&(M0.data[46700u]), data_segment_data_343, 9);
  memcpy(&(M0.data[46709u]), data_segment_data_344, 22);
  memcpy(&(M0.data[46731u]), data_segment_data_345, 20);
  memcpy(&(M0.data[46751u]), data_segment_data_346, 15);
  memcpy(&(M0.data[46766u]), data_segment_data_347, 17);
  memcpy(&(M0.data[46783u]), data_segment_data_348, 17);
  memcpy(&(M0.data[46800u]), data_segment_data_349, 8);
  memcpy(&(M0.data[46808u]), data_segment_data_350, 9);
  memcpy(&(M0.data[46817u]), data_segment_data_351, 9);
  memcpy(&(M0.data[46826u]), data_segment_data_352, 14);
  memcpy(&(M0.data[46840u]), data_segment_data_353, 7);
  memcpy(&(M0.data[46847u]), data_segment_data_354, 16);
  memcpy(&(M0.data[46863u]), data_segment_data_355, 13);
  memcpy(&(M0.data[46876u]), data_segment_data_356, 12);
  memcpy(&(M0.data[46888u]), data_segment_data_357, 17);
  memcpy(&(M0.data[46905u]), data_segment_data_358, 8);
  memcpy(&(M0.data[46913u]), data_segment_data_359, 10);
  memcpy(&(M0.data[46923u]), data_segment_data_360, 9);
  memcpy(&(M0.data[46932u]), data_segment_data_361, 11);
  memcpy(&(M0.data[46943u]), data_segment_data_362, 9);
  memcpy(&(M0.data[46952u]), data_segment_data_363, 11);
  memcpy(&(M0.data[46963u]), data_segment_data_364, 12);
  memcpy(&(M0.data[46975u]), data_segment_data_365, 7);
  memcpy(&(M0.data[46982u]), data_segment_data_366, 8);
  memcpy(&(M0.data[46990u]), data_segment_data_367, 20);
  memcpy(&(M0.data[47010u]), data_segment_data_368, 16);
  memcpy(&(M0.data[47026u]), data_segment_data_369, 15);
  memcpy(&(M0.data[47041u]), data_segment_data_370, 14);
  memcpy(&(M0.data[47055u]), data_segment_data_371, 16);
  memcpy(&(M0.data[47071u]), data_segment_data_372, 15);
  memcpy(&(M0.data[47086u]), data_segment_data_373, 15);
  memcpy(&(M0.data[47101u]), data_segment_data_374, 14);
  memcpy(&(M0.data[47115u]), data_segment_data_375, 26);
  memcpy(&(M0.data[47141u]), data_segment_data_376, 14);
  memcpy(&(M0.data[47155u]), data_segment_data_377, 23);
  memcpy(&(M0.data[47178u]), data_segment_data_378, 25);
  memcpy(&(M0.data[47203u]), data_segment_data_379, 21);
  memcpy(&(M0.data[47224u]), data_segment_data_380, 15);
  memcpy(&(M0.data[47239u]), data_segment_data_381, 19);
  memcpy(&(M0.data[47258u]), data_segment_data_382, 17);
  memcpy(&(M0.data[47275u]), data_segment_data_383, 16);
  memcpy(&(M0.data[47291u]), data_segment_data_384, 17);
  memcpy(&(M0.data[47308u]), data_segment_data_385, 21);
  memcpy(&(M0.data[47329u]), data_segment_data_386, 22);
  memcpy(&(M0.data[47351u]), data_segment_data_387, 21);
  memcpy(&(M0.data[47372u]), data_segment_data_388, 16);
  memcpy(&(M0.data[47388u]), data_segment_data_389, 15);
  memcpy(&(M0.data[47403u]), data_segment_data_390, 20);
  memcpy(&(M0.data[47423u]), data_segment_data_391, 19);
  memcpy(&(M0.data[47442u]), data_segment_data_392, 18);
  memcpy(&(M0.data[47460u]), data_segment_data_393, 17);
  memcpy(&(M0.data[47477u]), data_segment_data_394, 17);
  memcpy(&(M0.data[47494u]), data_segment_data_395, 16);
  memcpy(&(M0.data[47510u]), data_segment_data_396, 18);
  memcpy(&(M0.data[47528u]), data_segment_data_397, 17);
  memcpy(&(M0.data[47545u]), data_segment_data_398, 22);
  memcpy(&(M0.data[47567u]), data_segment_data_399, 21);
  memcpy(&(M0.data[47588u]), data_segment_data_400, 10);
  memcpy(&(M0.data[47598u]), data_segment_data_401, 11);
  memcpy(&(M0.data[47609u]), data_segment_data_402, 11);
  memcpy(&(M0.data[47620u]), data_segment_data_403, 11);
  memcpy(&(M0.data[47631u]), data_segment_data_404, 11);
  memcpy(&(M0.data[47642u]), data_segment_data_405, 13);
  memcpy(&(M0.data[47655u]), data_segment_data_406, 14);
  memcpy(&(M0.data[47669u]), data_segment_data_407, 21);
  memcpy(&(M0.data[47690u]), data_segment_data_408, 10);
  memcpy(&(M0.data[47700u]), data_segment_data_409, 11);
  memcpy(&(M0.data[47711u]), data_segment_data_410, 7);
  memcpy(&(M0.data[47718u]), data_segment_data_411, 8);
  memcpy(&(M0.data[47726u]), data_segment_data_412, 9);
  memcpy(&(M0.data[47735u]), data_segment_data_413, 5);
  memcpy(&(M0.data[47740u]), data_segment_data_414, 14);
  memcpy(&(M0.data[47754u]), data_segment_data_415, 10);
  memcpy(&(M0.data[47764u]), data_segment_data_416, 13);
  memcpy(&(M0.data[47777u]), data_segment_data_417, 7);
  memcpy(&(M0.data[47784u]), data_segment_data_418, 8);
  memcpy(&(M0.data[47792u]), data_segment_data_419, 8);
  memcpy(&(M0.data[47800u]), data_segment_data_420, 7);
  memcpy(&(M0.data[47807u]), data_segment_data_421, 14);
  memcpy(&(M0.data[47821u]), data_segment_data_422, 9);
  memcpy(&(M0.data[47830u]), data_segment_data_423, 8);
  memcpy(&(M0.data[47838u]), data_segment_data_424, 10);
  memcpy(&(M0.data[47848u]), data_segment_data_425, 9);
  memcpy(&(M0.data[47857u]), data_segment_data_426, 12);
  memcpy(&(M0.data[47869u]), data_segment_data_427, 9);
  memcpy(&(M0.data[47878u]), data_segment_data_428, 9);
  memcpy(&(M0.data[47887u]), data_segment_data_429, 8);
  memcpy(&(M0.data[47895u]), data_segment_data_430, 9);
  memcpy(&(M0.data[47904u]), data_segment_data_431, 12);
  memcpy(&(M0.data[47916u]), data_segment_data_432, 13);
  memcpy(&(M0.data[47929u]), data_segment_data_433, 12);
  memcpy(&(M0.data[47941u]), data_segment_data_434, 9);
  memcpy(&(M0.data[47950u]), data_segment_data_435, 13);
  memcpy(&(M0.data[47963u]), data_segment_data_436, 14);
  memcpy(&(M0.data[47977u]), data_segment_data_437, 24);
  memcpy(&(M0.data[48001u]), data_segment_data_438, 29);
  memcpy(&(M0.data[48030u]), data_segment_data_439, 17);
  memcpy(&(M0.data[48047u]), data_segment_data_440, 20);
  memcpy(&(M0.data[48067u]), data_segment_data_441, 25);
  memcpy(&(M0.data[48092u]), data_segment_data_442, 11);
  memcpy(&(M0.data[48103u]), data_segment_data_443, 23);
  memcpy(&(M0.data[48126u]), data_segment_data_444, 10);
  memcpy(&(M0.data[48136u]), data_segment_data_445, 12);
  memcpy(&(M0.data[48148u]), data_segment_data_446, 12);
  memcpy(&(M0.data[48160u]), data_segment_data_447, 9);
  memcpy(&(M0.data[48169u]), data_segment_data_448, 7);
  memcpy(&(M0.data[48176u]), data_segment_data_449, 11);
  memcpy(&(M0.data[48187u]), data_segment_data_450, 8);
  memcpy(&(M0.data[48195u]), data_segment_data_451, 18);
  memcpy(&(M0.data[48213u]), data_segment_data_452, 16);
  memcpy(&(M0.data[48229u]), data_segment_data_453, 23);
  memcpy(&(M0.data[48252u]), data_segment_data_454, 14);
  memcpy(&(M0.data[48266u]), data_segment_data_455, 17);
  memcpy(&(M0.data[48283u]), data_segment_data_456, 11);
  memcpy(&(M0.data[48294u]), data_segment_data_457, 14);
  memcpy(&(M0.data[48308u]), data_segment_data_458, 12);
  memcpy(&(M0.data[48320u]), data_segment_data_459, 9);
  memcpy(&(M0.data[48329u]), data_segment_data_460, 9);
  memcpy(&(M0.data[48338u]), data_segment_data_461, 12);
  memcpy(&(M0.data[48350u]), data_segment_data_462, 14);
  memcpy(&(M0.data[48364u]), data_segment_data_463, 12);
  memcpy(&(M0.data[48376u]), data_segment_data_464, 12);
  memcpy(&(M0.data[48388u]), data_segment_data_465, 12);
  memcpy(&(M0.data[48400u]), data_segment_data_466, 12);
  memcpy(&(M0.data[48412u]), data_segment_data_467, 9);
  memcpy(&(M0.data[48421u]), data_segment_data_468, 10);
  memcpy(&(M0.data[48431u]), data_segment_data_469, 8);
  memcpy(&(M0.data[48439u]), data_segment_data_470, 9);
  memcpy(&(M0.data[48448u]), data_segment_data_471, 7);
  memcpy(&(M0.data[48455u]), data_segment_data_472, 9);
  memcpy(&(M0.data[48464u]), data_segment_data_473, 8);
  memcpy(&(M0.data[48472u]), data_segment_data_474, 8);
  memcpy(&(M0.data[48480u]), data_segment_data_475, 7);
  memcpy(&(M0.data[48487u]), data_segment_data_476, 11);
  memcpy(&(M0.data[48498u]), data_segment_data_477, 7);
  memcpy(&(M0.data[48505u]), data_segment_data_478, 8);
  memcpy(&(M0.data[48513u]), data_segment_data_479, 10);
  memcpy(&(M0.data[48523u]), data_segment_data_480, 11);
  memcpy(&(M0.data[48534u]), data_segment_data_481, 7);
  memcpy(&(M0.data[48541u]), data_segment_data_482, 7);
  memcpy(&(M0.data[48548u]), data_segment_data_483, 8);
  memcpy(&(M0.data[48556u]), data_segment_data_484, 14);
  memcpy(&(M0.data[48570u]), data_segment_data_485, 7);
  memcpy(&(M0.data[48577u]), data_segment_data_486, 8);
  memcpy(&(M0.data[48585u]), data_segment_data_487, 13);
  memcpy(&(M0.data[48598u]), data_segment_data_488, 15);
  memcpy(&(M0.data[48613u]), data_segment_data_489, 13);
  memcpy(&(M0.data[48626u]), data_segment_data_490, 8);
  memcpy(&(M0.data[48634u]), data_segment_data_491, 14);
  memcpy(&(M0.data[48648u]), data_segment_data_492, 9);
  memcpy(&(M0.data[48657u]), data_segment_data_493, 6);
  memcpy(&(M0.data[48663u]), data_segment_data_494, 12);
  memcpy(&(M0.data[48675u]), data_segment_data_495, 9);
  memcpy(&(M0.data[48684u]), data_segment_data_496, 19);
  memcpy(&(M0.data[48703u]), data_segment_data_497, 12);
  memcpy(&(M0.data[48715u]), data_segment_data_498, 20);
  memcpy(&(M0.data[48735u]), data_segment_data_499, 15);
  memcpy(&(M0.data[48750u]), data_segment_data_500, 11);
  memcpy(&(M0.data[48761u]), data_segment_data_501, 20);
  memcpy(&(M0.data[48781u]), data_segment_data_502, 20);
  memcpy(&(M0.data[48801u]), data_segment_data_503, 8);
  memcpy(&(M0.data[48809u]), data_segment_data_504, 15);
  memcpy(&(M0.data[48824u]), data_segment_data_505, 8);
  memcpy(&(M0.data[48832u]), data_segment_data_506, 11);
  memcpy(&(M0.data[48843u]), data_segment_data_507, 16);
  memcpy(&(M0.data[48859u]), data_segment_data_508, 17);
  memcpy(&(M0.data[48876u]), data_segment_data_509, 21);
  memcpy(&(M0.data[48897u]), data_segment_data_510, 12);
  memcpy(&(M0.data[48909u]), data_segment_data_511, 13);
  memcpy(&(M0.data[48922u]), data_segment_data_512, 14);
  memcpy(&(M0.data[48936u]), data_segment_data_513, 7);
  memcpy(&(M0.data[48943u]), data_segment_data_514, 7);
  memcpy(&(M0.data[48950u]), data_segment_data_515, 13);
  memcpy(&(M0.data[48963u]), data_segment_data_516, 14);
  memcpy(&(M0.data[48977u]), data_segment_data_517, 12);
  memcpy(&(M0.data[48989u]), data_segment_data_518, 8);
  memcpy(&(M0.data[48997u]), data_segment_data_519, 28);
  memcpy(&(M0.data[49025u]), data_segment_data_520, 32);
  memcpy(&(M0.data[49057u]), data_segment_data_521, 15);
  memcpy(&(M0.data[49072u]), data_segment_data_522, 19);
  memcpy(&(M0.data[49091u]), data_segment_data_523, 29);
  memcpy(&(M0.data[49120u]), data_segment_data_524, 18);
  memcpy(&(M0.data[49138u]), data_segment_data_525, 26);
  memcpy(&(M0.data[49164u]), data_segment_data_526, 23);
  memcpy(&(M0.data[49187u]), data_segment_data_527, 10);
  memcpy(&(M0.data[49197u]), data_segment_data_528, 8);
  memcpy(&(M0.data[49205u]), data_segment_data_529, 10);
  memcpy(&(M0.data[49215u]), data_segment_data_530, 10);
  memcpy(&(M0.data[49225u]), data_segment_data_531, 7);
  memcpy(&(M0.data[49232u]), data_segment_data_532, 8);
  memcpy(&(M0.data[49240u]), data_segment_data_533, 9);
  memcpy(&(M0.data[49249u]), data_segment_data_534, 14);
  memcpy(&(M0.data[49263u]), data_segment_data_535, 8);
  memcpy(&(M0.data[49271u]), data_segment_data_536, 24);
  memcpy(&(M0.data[49295u]), data_segment_data_537, 31);
  memcpy(&(M0.data[49326u]), data_segment_data_538, 7);
  memcpy(&(M0.data[49333u]), data_segment_data_539, 7);
  memcpy(&(M0.data[49340u]), data_segment_data_540, 8);
  memcpy(&(M0.data[49348u]), data_segment_data_541, 19);
  memcpy(&(M0.data[49367u]), data_segment_data_542, 22);
  memcpy(&(M0.data[49389u]), data_segment_data_543, 8);
  memcpy(&(M0.data[49397u]), data_segment_data_544, 8);
  memcpy(&(M0.data[49405u]), data_segment_data_545, 10);
  memcpy(&(M0.data[49415u]), data_segment_data_546, 10);
  memcpy(&(M0.data[49425u]), data_segment_data_547, 15);
  memcpy(&(M0.data[49440u]), data_segment_data_548, 16);
  memcpy(&(M0.data[49456u]), data_segment_data_549, 15);
  memcpy(&(M0.data[49471u]), data_segment_data_550, 14);
  memcpy(&(M0.data[49485u]), data_segment_data_551, 16);
  memcpy(&(M0.data[49501u]), data_segment_data_552, 18);
  memcpy(&(M0.data[49519u]), data_segment_data_553, 26);
  memcpy(&(M0.data[49545u]), data_segment_data_554, 39);
  memcpy(&(M0.data[49584u]), data_segment_data_555, 22);
  memcpy(&(M0.data[49606u]), data_segment_data_556, 20);
  memcpy(&(M0.data[49626u]), data_segment_data_557, 19);
  memcpy(&(M0.data[49645u]), data_segment_data_558, 20);
  memcpy(&(M0.data[49665u]), data_segment_data_559, 9);
  memcpy(&(M0.data[49674u]), data_segment_data_560, 10);
  memcpy(&(M0.data[49684u]), data_segment_data_561, 13);
  memcpy(&(M0.data[49697u]), data_segment_data_562, 16);
  memcpy(&(M0.data[49713u]), data_segment_data_563, 12);
  memcpy(&(M0.data[49725u]), data_segment_data_564, 7);
  memcpy(&(M0.data[49732u]), data_segment_data_565, 9);
  memcpy(&(M0.data[49741u]), data_segment_data_566, 13);
  memcpy(&(M0.data[49754u]), data_segment_data_567, 9);
  memcpy(&(M0.data[49763u]), data_segment_data_568, 10);
  memcpy(&(M0.data[49773u]), data_segment_data_569, 15);
  memcpy(&(M0.data[49788u]), data_segment_data_570, 17);
  memcpy(&(M0.data[49805u]), data_segment_data_571, 11);
  memcpy(&(M0.data[49816u]), data_segment_data_572, 8);
  memcpy(&(M0.data[49824u]), data_segment_data_573, 9);
  memcpy(&(M0.data[49833u]), data_segment_data_574, 15);
  memcpy(&(M0.data[49848u]), data_segment_data_575, 20);
  memcpy(&(M0.data[49868u]), data_segment_data_576, 11);
  memcpy(&(M0.data[49879u]), data_segment_data_577, 16);
  memcpy(&(M0.data[49895u]), data_segment_data_578, 14);
  memcpy(&(M0.data[49909u]), data_segment_data_579, 21);
  memcpy(&(M0.data[49930u]), data_segment_data_580, 26);
  memcpy(&(M0.data[49956u]), data_segment_data_581, 25);
  memcpy(&(M0.data[49981u]), data_segment_data_582, 31);
  memcpy(&(M0.data[50012u]), data_segment_data_583, 31);
  memcpy(&(M0.data[50043u]), data_segment_data_584, 31);
  memcpy(&(M0.data[50080u]), data_segment_data_585, 130);
  memcpy(&(M0.data[50224u]), data_segment_data_586, 20);
  memcpy(&(M0.data[50256u]), data_segment_data_587, 20);
  memcpy(&(M0.data[50288u]), data_segment_data_588, 77);
  memcpy(&(M0.data[50368u]), data_segment_data_589, 31);
  memcpy(&(M0.data[50400u]), data_segment_data_590, 87);
  memcpy(&(M0.data[50496u]), data_segment_data_591, 207);
  memcpy(&(M0.data[50704u]), data_segment_data_592, 24);
  memcpy(&(M0.data[50736u]), data_segment_data_593, 29);
  memcpy(&(M0.data[50768u]), data_segment_data_594, 8);
  memcpy(&(M0.data[50784u]), data_segment_data_595, 41);
  memcpy(&(M0.data[50828u]), data_segment_data_596, 8);
  memcpy(&(M0.data[50848u]), data_segment_data_597, 29);
  memcpy(&(M0.data[50880u]), data_segment_data_598, 8);
  memcpy(&(M0.data[50896u]), data_segment_data_599, 29);
  memcpy(&(M0.data[50928u]), data_segment_data_600, 8);
  memcpy(&(M0.data[50944u]), data_segment_data_601, 36);
  memcpy(&(M0.data[50980u]), data_segment_data_602, 8);
  memcpy(&(M0.data[50992u]), data_segment_data_603, 95);
  memcpy(&(M0.data[51088u]), data_segment_data_604, 8);
  memcpy(&(M0.data[51104u]), data_segment_data_605, 52);
  memcpy(&(M0.data[51156u]), data_segment_data_606, 8);
  memcpy(&(M0.data[51168u]), data_segment_data_607, 30);
  memcpy(&(M0.data[51200u]), data_segment_data_608, 4);
  memcpy(&(M0.data[51216u]), data_segment_data_609, 19);
  memcpy(&(M0.data[51236u]), data_segment_data_610, 8);
  memcpy(&(M0.data[51248u]), data_segment_data_611, 28);
  memcpy(&(M0.data[51280u]), data_segment_data_612, 29);
  memcpy(&(M0.data[51312u]), data_segment_data_613, 20);
  memcpy(&(M0.data[51344u]), data_segment_data_614, 28);
  memcpy(&(M0.data[51376u]), data_segment_data_615, 29);
  memcpy(&(M0.data[51408u]), data_segment_data_616, 20);
  memcpy(&(M0.data[51440u]), data_segment_data_617, 155);
  memcpy(&(M0.data[51600u]), data_segment_data_618, 113);
  memcpy(&(M0.data[51714u]), data_segment_data_619, 8);
  memcpy(&(M0.data[51728u]), data_segment_data_620, 31);
  memcpy(&(M0.data[51760u]), data_segment_data_621, 8);
  memcpy(&(M0.data[51776u]), data_segment_data_622, 43);
  memcpy(&(M0.data[51820u]), data_segment_data_623, 8);
  memcpy(&(M0.data[51840u]), data_segment_data_624, 88);
  memcpy(&(M0.data[51928u]), data_segment_data_625, 8);
  memcpy(&(M0.data[51936u]), data_segment_data_626, 38);
  memcpy(&(M0.data[51976u]), data_segment_data_627, 8);
  memcpy(&(M0.data[51984u]), data_segment_data_628, 35);
  memcpy(&(M0.data[52020u]), data_segment_data_629, 12);
  memcpy(&(M0.data[52032u]), data_segment_data_630, 36);
  memcpy(&(M0.data[52068u]), data_segment_data_631, 8);
  memcpy(&(M0.data[52080u]), data_segment_data_632, 247);
  memcpy(&(M0.data[52328u]), data_segment_data_633, 8);
  memcpy(&(M0.data[52336u]), data_segment_data_634, 133);
  memcpy(&(M0.data[52472u]), data_segment_data_635, 8);
  memcpy(&(M0.data[52480u]), data_segment_data_636, 19);
  memcpy(&(M0.data[52500u]), data_segment_data_637, 8);
  memcpy(&(M0.data[52512u]), data_segment_data_638, 33);
  memcpy(&(M0.data[52548u]), data_segment_data_639, 8);
  memcpy(&(M0.data[52560u]), data_segment_data_640, 36);
  memcpy(&(M0.data[52596u]), data_segment_data_641, 4);
  memcpy(&(M0.data[52608u]), data_segment_data_642, 73);
  memcpy(&(M0.data[52684u]), data_segment_data_643, 4);
  memcpy(&(M0.data[52688u]), data_segment_data_644, 46);
  memcpy(&(M0.data[52736u]), data_segment_data_645, 4);
  memcpy(&(M0.data[52752u]), data_segment_data_646, 26);
  memcpy(&(M0.data[52780u]), data_segment_data_647, 8);
  memcpy(&(M0.data[52800u]), data_segment_data_648, 31);
  memcpy(&(M0.data[52832u]), data_segment_data_649, 8);
  memcpy(&(M0.data[52848u]), data_segment_data_650, 31);
  memcpy(&(M0.data[52880u]), data_segment_data_651, 8);
  memcpy(&(M0.data[52896u]), data_segment_data_652, 40);
  memcpy(&(M0.data[52936u]), data_segment_data_653, 12);
  memcpy(&(M0.data[52960u]), data_segment_data_654, 45);
  memcpy(&(M0.data[53008u]), data_segment_data_655, 12);
  memcpy(&(M0.data[53024u]), data_segment_data_656, 45);
  memcpy(&(M0.data[53072u]), data_segment_data_657, 12);
  memcpy(&(M0.data[53088u]), data_segment_data_658, 18);
  memcpy(&(M0.data[53120u]), data_segment_data_659, 23);
  memcpy(&(M0.data[53144u]), data_segment_data_660, 12);
  memcpy(&(M0.data[53168u]), data_segment_data_661, 18);
  memcpy(&(M0.data[53200u]), data_segment_data_662, 23);
  memcpy(&(M0.data[53224u]), data_segment_data_663, 12);
  memcpy(&(M0.data[53248u]), data_segment_data_664, 19);
}

static void init_table(void) {
  uint32_t offset;
  wasm_rt_allocate_table((&T0), 473, 473);
  offset = 1u;
  T0.data[offset + 0] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&__stdio_close)};
  T0.data[offset + 1] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&__stdio_write)};
  T0.data[offset + 2] = (wasm_rt_elem_t){func_types[2], (wasm_rt_anyfunc_t)(&__stdio_seek)};
  T0.data[offset + 3] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&vstr_add_strn)};
  T0.data[offset + 4] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&complex_print)};
  T0.data[offset + 5] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&complex_make_new)};
  T0.data[offset + 6] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&complex_unary_op)};
  T0.data[offset + 7] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&complex_binary_op)};
  T0.data[offset + 8] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&complex_attr)};
  T0.data[offset + 9] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&gen_wrap_call)};
  T0.data[offset + 10] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_generic_unary_op)};
  T0.data[offset + 11] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&mp_obj_fun_bc_attr)};
  T0.data[offset + 12] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&gen_instance_print)};
  T0.data[offset + 13] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_identity_getiter)};
  T0.data[offset + 14] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&gen_instance_iternext)};
  T0.data[offset + 15] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&gen_instance_throw)};
  T0.data[offset + 16] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&gen_instance_close)};
  T0.data[offset + 17] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&gen_instance_send)};
  T0.data[offset + 18] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&gen_instance_pend_throw)};
  T0.data[offset + 19] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&closure_call)};
  T0.data[offset + 20] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&polymorph_it_iternext)};
  T0.data[offset + 21] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&op_getitem)};
  T0.data[offset + 22] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&op_setitem)};
  T0.data[offset + 23] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&op_delitem)};
  T0.data[offset + 24] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&op_contains)};
  T0.data[offset + 25] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_it_iternext)};
  T0.data[offset + 26] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&set_print)};
  T0.data[offset + 27] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&set_make_new)};
  T0.data[offset + 28] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&set_unary_op)};
  T0.data[offset + 29] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&set_binary_op)};
  T0.data[offset + 30] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&set_getiter)};
  T0.data[offset + 31] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&set_diff)};
  T0.data[offset + 32] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&set_diff_update)};
  T0.data[offset + 33] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&set_update)};
  T0.data[offset + 34] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&set_add)};
  T0.data[offset + 35] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_clear)};
  T0.data[offset + 36] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_copy)};
  T0.data[offset + 37] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&set_discard)};
  T0.data[offset + 38] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&set_intersect)};
  T0.data[offset + 39] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&set_intersect_update)};
  T0.data[offset + 40] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&set_isdisjoint)};
  T0.data[offset + 41] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&set_issubset)};
  T0.data[offset + 42] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&set_issuperset)};
  T0.data[offset + 43] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_pop)};
  T0.data[offset + 44] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&set_remove)};
  T0.data[offset + 45] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&set_symmetric_difference)};
  T0.data[offset + 46] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&set_symmetric_difference_update)};
  T0.data[offset + 47] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&set_union)};
  T0.data[offset + 48] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&slice_print)};
  T0.data[offset + 49] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&slice_attr)};
  T0.data[offset + 50] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&list_it_iternext)};
  T0.data[offset + 51] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&list_print)};
  T0.data[offset + 52] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&list_make_new)};
  T0.data[offset + 53] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&list_unary_op)};
  T0.data[offset + 54] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&list_binary_op)};
  T0.data[offset + 55] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&list_subscr)};
  T0.data[offset + 56] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&list_getiter)};
  T0.data[offset + 57] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&list_index)};
  T0.data[offset + 58] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&list_pop)};
  T0.data[offset + 59] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_obj_list_append)};
  T0.data[offset + 60] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&list_clear)};
  T0.data[offset + 61] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&list_copy)};
  T0.data[offset + 62] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&list_count)};
  T0.data[offset + 63] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&list_extend)};
  T0.data[offset + 64] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&list_insert)};
  T0.data[offset + 65] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_obj_list_remove)};
  T0.data[offset + 66] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&list_reverse)};
  T0.data[offset + 67] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_obj_list_sort)};
  T0.data[offset + 68] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&fun_builtin_0_call)};
  T0.data[offset + 69] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&fun_builtin_1_call)};
  T0.data[offset + 70] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&fun_builtin_2_call)};
  T0.data[offset + 71] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&fun_builtin_3_call)};
  T0.data[offset + 72] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&fun_builtin_var_call)};
  T0.data[offset + 73] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&fun_bc_print)};
  T0.data[offset + 74] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&fun_bc_call)};
  T0.data[offset + 75] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&float128_print)};
  T0.data[offset + 76] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&float128_make_new)};
  T0.data[offset + 77] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&float128_unary_op)};
  T0.data[offset + 78] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&float128_binary_op)};
  T0.data[offset + 79] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&float128_to_bytes)};
  T0.data[offset + 80] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&float128_from_bytes)};
  T0.data[offset + 81] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_obj_str_binary_op)};
  T0.data[offset + 82] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&mp_obj_name_print)};
  T0.data[offset + 83] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&mp_obj_name_make_new)};
  T0.data[offset + 84] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_obj_name_unary_op)};
  T0.data[offset + 85] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_obj_name_binary_op)};
  T0.data[offset + 86] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&name_to_bytes)};
  T0.data[offset + 87] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&name_to_int)};
  T0.data[offset + 88] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_name_to_str)};
  T0.data[offset + 89] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&name_from_bytes)};
  T0.data[offset + 90] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&bound_meth_call)};
  T0.data[offset + 91] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&bound_meth_attr)};
  T0.data[offset + 92] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&singleton_print)};
  T0.data[offset + 93] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_reader_mem_readbyte)};
  T0.data[offset + 94] = (wasm_rt_elem_t){func_types[6], (wasm_rt_anyfunc_t)(&mp_reader_mem_close)};
  T0.data[offset + 95] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_builtin___import__)};
  T0.data[offset + 96] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&bool_print)};
  T0.data[offset + 97] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&bool_make_new)};
  T0.data[offset + 98] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&bool_unary_op)};
  T0.data[offset + 99] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&bool_binary_op)};
  T0.data[offset + 100] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&array_subscr)};
  T0.data[offset + 101] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&array_print)};
  T0.data[offset + 102] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&array_make_new)};
  T0.data[offset + 103] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&array_unary_op)};
  T0.data[offset + 104] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&array_binary_op)};
  T0.data[offset + 105] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&array_iterator_new)};
  T0.data[offset + 106] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&array_get_buffer)};
  T0.data[offset + 107] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&bytearray_make_new)};
  T0.data[offset + 108] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&array_append)};
  T0.data[offset + 109] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&array_extend)};
  T0.data[offset + 110] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&array_it_iternext)};
  T0.data[offset + 111] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&enumerate_make_new)};
  T0.data[offset + 112] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&enumerate_iternext)};
  T0.data[offset + 113] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&filter_make_new)};
  T0.data[offset + 114] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&filter_iternext)};
  T0.data[offset + 115] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&map_make_new)};
  T0.data[offset + 116] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&map_iternext)};
  T0.data[offset + 117] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&property_make_new)};
  T0.data[offset + 118] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&property_getter)};
  T0.data[offset + 119] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&property_setter)};
  T0.data[offset + 120] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&property_deleter)};
  T0.data[offset + 121] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&range_print)};
  T0.data[offset + 122] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&range_make_new)};
  T0.data[offset + 123] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&range_unary_op)};
  T0.data[offset + 124] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&range_attr)};
  T0.data[offset + 125] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&range_subscr)};
  T0.data[offset + 126] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&range_getiter)};
  T0.data[offset + 127] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&range_it_iternext)};
  T0.data[offset + 128] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&reversed_make_new)};
  T0.data[offset + 129] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&reversed_iternext)};
  T0.data[offset + 130] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&zip_make_new)};
  T0.data[offset + 131] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&zip_iternext)};
  T0.data[offset + 132] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_builtin___build_class__)};
  T0.data[offset + 133] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_abs)};
  T0.data[offset + 134] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_all)};
  T0.data[offset + 135] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_any)};
  T0.data[offset + 136] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_bin)};
  T0.data[offset + 137] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_callable)};
  T0.data[offset + 138] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_chr)};
  T0.data[offset + 139] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_builtin_dir)};
  T0.data[offset + 140] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_builtin_divmod)};
  T0.data[offset + 141] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_hash)};
  T0.data[offset + 142] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_hex)};
  T0.data[offset + 143] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_iter)};
  T0.data[offset + 144] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_max)};
  T0.data[offset + 145] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_min)};
  T0.data[offset + 146] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_next)};
  T0.data[offset + 147] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_oct)};
  T0.data[offset + 148] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_ord)};
  T0.data[offset + 149] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_builtin_pow)};
  T0.data[offset + 150] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_print)};
  T0.data[offset + 151] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin___repl_print__)};
  T0.data[offset + 152] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_repr)};
  T0.data[offset + 153] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_builtin_round)};
  T0.data[offset + 154] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_builtin_sum)};
  T0.data[offset + 155] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_sorted)};
  T0.data[offset + 156] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_builtin_getattr)};
  T0.data[offset + 157] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_setattr)};
  T0.data[offset + 158] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_builtin_delattr)};
  T0.data[offset + 159] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_builtin_hasattr)};
  T0.data[offset + 160] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mp_builtin_globals)};
  T0.data[offset + 161] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mp_builtin_locals)};
  T0.data[offset + 162] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_obj_id)};
  T0.data[offset + 163] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_obj_len)};
  T0.data[offset + 164] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mp_micropython_pystack_use)};
  T0.data[offset + 165] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_micropython_kbd_intr)};
  T0.data[offset + 166] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_micropython_schedule)};
  T0.data[offset + 167] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&stream_read)};
  T0.data[offset + 168] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&stream_write_method)};
  T0.data[offset + 169] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&stream_readinto)};
  T0.data[offset + 170] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&stream_unbuffered_readline)};
  T0.data[offset + 171] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_stream_close)};
  T0.data[offset + 172] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&stream_seek)};
  T0.data[offset + 173] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&stream_tell)};
  T0.data[offset + 174] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&stream_flush)};
  T0.data[offset + 175] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&stringio_read)};
  T0.data[offset + 176] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&stringio_write)};
  T0.data[offset + 177] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&stringio_ioctl)};
  T0.data[offset + 178] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&stringio_print)};
  T0.data[offset + 179] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&stringio_make_new)};
  T0.data[offset + 180] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_stream_unbuffered_iter)};
  T0.data[offset + 181] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&stringio___exit__)};
  T0.data[offset + 182] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&stringio_getvalue)};
  T0.data[offset + 183] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&mp_obj_attrtuple_print)};
  T0.data[offset + 184] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_obj_tuple_unary_op)};
  T0.data[offset + 185] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_obj_tuple_binary_op)};
  T0.data[offset + 186] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&mp_obj_attrtuple_attr)};
  T0.data[offset + 187] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_obj_tuple_subscr)};
  T0.data[offset + 188] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_obj_tuple_getiter)};
  T0.data[offset + 189] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&namedtuple_print)};
  T0.data[offset + 190] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&namedtuple_make_new)};
  T0.data[offset + 191] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&namedtuple_attr)};
  T0.data[offset + 192] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&new_namedtuple_type)};
  T0.data[offset + 193] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&struct_calcsize)};
  T0.data[offset + 194] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&struct_unpack_from)};
  T0.data[offset + 195] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&struct_pack)};
  T0.data[offset + 196] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&struct_pack_into)};
  T0.data[offset + 197] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&struct_pack_uint32)};
  T0.data[offset + 198] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&struct_unpack_uint32)};
  T0.data[offset + 199] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_isclose)};
  T0.data[offset + 200] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_math_log)};
  T0.data[offset + 201] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_sqrt)};
  T0.data[offset + 202] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_math_pow)};
  T0.data[offset + 203] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_exp)};
  T0.data[offset + 204] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_expm1)};
  T0.data[offset + 205] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_log2)};
  T0.data[offset + 206] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_log10)};
  T0.data[offset + 207] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_cosh)};
  T0.data[offset + 208] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_sinh)};
  T0.data[offset + 209] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_tanh)};
  T0.data[offset + 210] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_acosh)};
  T0.data[offset + 211] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_asinh)};
  T0.data[offset + 212] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_atanh)};
  T0.data[offset + 213] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_cos)};
  T0.data[offset + 214] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_sin)};
  T0.data[offset + 215] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_tan)};
  T0.data[offset + 216] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_acos)};
  T0.data[offset + 217] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_asin)};
  T0.data[offset + 218] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_atan)};
  T0.data[offset + 219] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_math_atan2)};
  T0.data[offset + 220] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_ceil)};
  T0.data[offset + 221] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_math_copysign)};
  T0.data[offset + 222] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_fabs)};
  T0.data[offset + 223] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_floor)};
  T0.data[offset + 224] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_math_fmod)};
  T0.data[offset + 225] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_frexp)};
  T0.data[offset + 226] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_math_ldexp)};
  T0.data[offset + 227] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_modf)};
  T0.data[offset + 228] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_isfinite)};
  T0.data[offset + 229] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_isinf)};
  T0.data[offset + 230] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_isnan)};
  T0.data[offset + 231] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_trunc)};
  T0.data[offset + 232] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_radians)};
  T0.data[offset + 233] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_degrees)};
  T0.data[offset + 234] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_erf)};
  T0.data[offset + 235] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_erfc)};
  T0.data[offset + 236] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_gamma)};
  T0.data[offset + 237] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_lgamma)};
  T0.data[offset + 238] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_cmath_phase)};
  T0.data[offset + 239] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_cmath_polar)};
  T0.data[offset + 240] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_cmath_rect)};
  T0.data[offset + 241] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_cmath_exp)};
  T0.data[offset + 242] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_cmath_log)};
  T0.data[offset + 243] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_cmath_log10)};
  T0.data[offset + 244] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_cmath_sqrt)};
  T0.data[offset + 245] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_cmath_cos)};
  T0.data[offset + 246] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_cmath_sin)};
  T0.data[offset + 247] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_sys_exit)};
  T0.data[offset + 248] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_sys_print_exception)};
  T0.data[offset + 249] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&mp_stream_write_adaptor)};
  T0.data[offset + 250] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_ujson_dump)};
  T0.data[offset + 251] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_ujson_dumps)};
  T0.data[offset + 252] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_ujson_load)};
  T0.data[offset + 253] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_ujson_loads)};
  T0.data[offset + 254] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&uhashlib_sha256_make_new)};
  T0.data[offset + 255] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&uhashlib_sha256_update)};
  T0.data[offset + 256] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&uhashlib_sha256_digest)};
  T0.data[offset + 257] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_binascii_hexlify)};
  T0.data[offset + 258] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_binascii_unhexlify)};
  T0.data[offset + 259] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_binascii_a2b_base64)};
  T0.data[offset + 260] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_binascii_b2a_base64)};
  T0.data[offset + 261] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&module_print)};
  T0.data[offset + 262] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&module_attr)};
  T0.data[offset + 263] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mod_chain_read_action_data)};
  T0.data[offset + 264] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_send_inline)};
  T0.data[offset + 265] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_send_context_free_inline)};
  T0.data[offset + 266] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mod_chain_publication_time)};
  T0.data[offset + 267] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mod_chain_current_receiver)};
  T0.data[offset + 268] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mod_chain_get_active_producers)};
  T0.data[offset + 269] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_action_new)};
  T0.data[offset + 270] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_action_add_permission)};
  T0.data[offset + 271] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_transaction_new)};
  T0.data[offset + 272] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_transaction_send)};
  T0.data[offset + 273] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_store_i64)};
  T0.data[offset + 274] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_find_i64)};
  T0.data[offset + 275] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_lowerbound_i64)};
  T0.data[offset + 276] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_upperbound_i64)};
  T0.data[offset + 277] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_end_i64)};
  T0.data[offset + 278] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_store_i256)};
  T0.data[offset + 279] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_find_i256)};
  T0.data[offset + 280] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_lowerbound_i256)};
  T0.data[offset + 281] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_upperbound_i256)};
  T0.data[offset + 282] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_end_i256)};
  T0.data[offset + 283] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_store)};
  T0.data[offset + 284] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_update)};
  T0.data[offset + 285] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_find_primary)};
  T0.data[offset + 286] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_find_secondary)};
  T0.data[offset + 287] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_lowerbound)};
  T0.data[offset + 288] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_upperbound)};
  T0.data[offset + 289] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_end)};
  T0.data[offset + 290] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_set_resource_limits)};
  T0.data[offset + 291] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mod_chain_get_blockchain_parameters)};
  T0.data[offset + 292] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mod_chain_current_time)};
  T0.data[offset + 293] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mod_chain_read_transaction)};
  T0.data[offset + 294] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mod_chain_tapos_block_num)};
  T0.data[offset + 295] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mod_chain_tapos_block_prefix)};
  T0.data[offset + 296] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mod_chain_expiration)};
  T0.data[offset + 297] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_token_issue)};
  T0.data[offset + 298] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_token_transfer)};
  T0.data[offset + 299] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_token_open)};
  T0.data[offset + 300] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_token_retire)};
  T0.data[offset + 301] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_token_close)};
  T0.data[offset + 302] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mod_chain_get_log)};
  T0.data[offset + 303] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mod_chain_get_code_version)};
  T0.data[offset + 304] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_s2n)};
  T0.data[offset + 305] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_s2b)};
  T0.data[offset + 306] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_n2s)};
  T0.data[offset + 307] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_require_recipient)};
  T0.data[offset + 308] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_require_auth)};
  T0.data[offset + 309] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_require_auth2)};
  T0.data[offset + 310] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_has_auth)};
  T0.data[offset + 311] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_is_account)};
  T0.data[offset + 312] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_send_inline_raw)};
  T0.data[offset + 313] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_send_context_free_inline_raw)};
  T0.data[offset + 314] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_action_send)};
  T0.data[offset + 315] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_action_free)};
  T0.data[offset + 316] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_transaction_add_action)};
  T0.data[offset + 317] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_transaction_add_context_free_action)};
  T0.data[offset + 318] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_transaction_cancel)};
  T0.data[offset + 319] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_transaction_free)};
  T0.data[offset + 320] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_assert_sha256)};
  T0.data[offset + 321] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_assert_sha1)};
  T0.data[offset + 322] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_assert_sha512)};
  T0.data[offset + 323] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_assert_ripemd160)};
  T0.data[offset + 324] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_assert_recover_key)};
  T0.data[offset + 325] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_sha256)};
  T0.data[offset + 326] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_sha1)};
  T0.data[offset + 327] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_sha512)};
  T0.data[offset + 328] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_ripemd160)};
  T0.data[offset + 329] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_recover_key)};
  T0.data[offset + 330] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_db_update_i64)};
  T0.data[offset + 331] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_remove_i64)};
  T0.data[offset + 332] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_get_i64)};
  T0.data[offset + 333] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_next_i64)};
  T0.data[offset + 334] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_previous_i64)};
  T0.data[offset + 335] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_db_update_i256)};
  T0.data[offset + 336] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_remove_i256)};
  T0.data[offset + 337] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_get_i256)};
  T0.data[offset + 338] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_next_i256)};
  T0.data[offset + 339] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_previous_i256)};
  T0.data[offset + 340] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_db_get_table_row_count)};
  T0.data[offset + 341] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_call_contract)};
  T0.data[offset + 342] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_get_code_hash)};
  T0.data[offset + 343] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_remove)};
  T0.data[offset + 344] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_next)};
  T0.data[offset + 345] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_previous)};
  T0.data[offset + 346] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_get_resource_limits)};
  T0.data[offset + 347] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_set_proposed_producers)};
  T0.data[offset + 348] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_is_privileged)};
  T0.data[offset + 349] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_set_privileged)};
  T0.data[offset + 350] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_set_blockchain_parameters)};
  T0.data[offset + 351] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_eosio_assert)};
  T0.data[offset + 352] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_eosio_assert_code)};
  T0.data[offset + 353] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mod_chain_get_action)};
  T0.data[offset + 354] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_get_context_free_data)};
  T0.data[offset + 355] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_token_create)};
  T0.data[offset + 356] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_enable_log)};
  T0.data[offset + 357] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&mp_obj_dict_make_new)};
  T0.data[offset + 358] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&dict_print)};
  T0.data[offset + 359] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&dict_unary_op)};
  T0.data[offset + 360] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&dict_binary_op)};
  T0.data[offset + 361] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&dict_subscr)};
  T0.data[offset + 362] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&dict_getiter)};
  T0.data[offset + 363] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&dict_view_it_iternext)};
  T0.data[offset + 364] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&dict_get)};
  T0.data[offset + 365] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&dict_pop)};
  T0.data[offset + 366] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&dict_setdefault)};
  T0.data[offset + 367] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&dict_clear)};
  T0.data[offset + 368] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_obj_dict_copy)};
  T0.data[offset + 369] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&dict_fromkeys)};
  T0.data[offset + 370] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&dict_items)};
  T0.data[offset + 371] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&dict_view_print)};
  T0.data[offset + 372] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&dict_view_binary_op)};
  T0.data[offset + 373] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&dict_view_getiter)};
  T0.data[offset + 374] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&dict_keys)};
  T0.data[offset + 375] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&dict_popitem)};
  T0.data[offset + 376] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&dict_update)};
  T0.data[offset + 377] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&dict_values)};
  T0.data[offset + 378] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&mp_obj_instance_make_new)};
  T0.data[offset + 379] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&object_make_new)};
  T0.data[offset + 380] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&object___init__)};
  T0.data[offset + 381] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&object___new__)};
  T0.data[offset + 382] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&instance_print)};
  T0.data[offset + 383] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&mp_obj_instance_call)};
  T0.data[offset + 384] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&instance_unary_op)};
  T0.data[offset + 385] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&instance_binary_op)};
  T0.data[offset + 386] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&mp_obj_instance_attr)};
  T0.data[offset + 387] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&instance_subscr)};
  T0.data[offset + 388] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_obj_instance_getiter)};
  T0.data[offset + 389] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&instance_get_buffer)};
  T0.data[offset + 390] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&mp_obj_exception_make_new)};
  T0.data[offset + 391] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&native_base_init_wrapper)};
  T0.data[offset + 392] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&type_print)};
  T0.data[offset + 393] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&type_make_new)};
  T0.data[offset + 394] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&type_call)};
  T0.data[offset + 395] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&type_attr)};
  T0.data[offset + 396] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&static_class_method_make_new)};
  T0.data[offset + 397] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&super_print)};
  T0.data[offset + 398] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&super_make_new)};
  T0.data[offset + 399] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&super_attr)};
  T0.data[offset + 400] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_builtin_issubclass)};
  T0.data[offset + 401] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_builtin_isinstance)};
  T0.data[offset + 402] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&none_print)};
  T0.data[offset + 403] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_identity)};
  T0.data[offset + 404] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&bytes_it_iternext)};
  T0.data[offset + 405] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&str_join)};
  T0.data[offset + 406] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_obj_str_split)};
  T0.data[offset + 407] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&str_splitlines)};
  T0.data[offset + 408] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&str_rsplit)};
  T0.data[offset + 409] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&str_find)};
  T0.data[offset + 410] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&str_rfind)};
  T0.data[offset + 411] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&str_index)};
  T0.data[offset + 412] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&str_rindex)};
  T0.data[offset + 413] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&str_startswith)};
  T0.data[offset + 414] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&str_endswith)};
  T0.data[offset + 415] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&str_strip)};
  T0.data[offset + 416] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&str_lstrip)};
  T0.data[offset + 417] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&str_rstrip)};
  T0.data[offset + 418] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&str_center)};
  T0.data[offset + 419] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_obj_str_format)};
  T0.data[offset + 420] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&str_replace)};
  T0.data[offset + 421] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&str_count)};
  T0.data[offset + 422] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&str_partition)};
  T0.data[offset + 423] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&str_rpartition)};
  T0.data[offset + 424] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_lower)};
  T0.data[offset + 425] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_upper)};
  T0.data[offset + 426] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_isspace)};
  T0.data[offset + 427] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_isalpha)};
  T0.data[offset + 428] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_isdigit)};
  T0.data[offset + 429] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_isupper)};
  T0.data[offset + 430] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_islower)};
  T0.data[offset + 431] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&bytes_decode)};
  T0.data[offset + 432] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&str_encode)};
  T0.data[offset + 433] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&str_print)};
  T0.data[offset + 434] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&bytes_make_new)};
  T0.data[offset + 435] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&bytes_subscr)};
  T0.data[offset + 436] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_obj_new_bytes_iterator)};
  T0.data[offset + 437] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_obj_str_get_buffer)};
  T0.data[offset + 438] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_it_iternext)};
  T0.data[offset + 439] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&uni_print)};
  T0.data[offset + 440] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&mp_obj_str_make_new)};
  T0.data[offset + 441] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&uni_unary_op)};
  T0.data[offset + 442] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&str_subscr)};
  T0.data[offset + 443] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_obj_new_str_iterator)};
  T0.data[offset + 444] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&float_print)};
  T0.data[offset + 445] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&float_make_new)};
  T0.data[offset + 446] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&float_unary_op)};
  T0.data[offset + 447] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&float_binary_op)};
  T0.data[offset + 448] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&mp_obj_int_print)};
  T0.data[offset + 449] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&mp_obj_int_make_new)};
  T0.data[offset + 450] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_obj_int_unary_op)};
  T0.data[offset + 451] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_obj_int_binary_op)};
  T0.data[offset + 452] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&int_to_bytes)};
  T0.data[offset + 453] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&int_from_bytes)};
  T0.data[offset + 454] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&plat_print_strn)};
  T0.data[offset + 455] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&tuple_it_iternext)};
  T0.data[offset + 456] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&mp_obj_tuple_print)};
  T0.data[offset + 457] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&mp_obj_tuple_make_new)};
  T0.data[offset + 458] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&tuple_index)};
  T0.data[offset + 459] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&tuple_count)};
  T0.data[offset + 460] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&it_iternext)};
  T0.data[offset + 461] = (wasm_rt_elem_t){func_types[8], (wasm_rt_anyfunc_t)(&checked_fun_call)};
  T0.data[offset + 462] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&exc_add_strn)};
  T0.data[offset + 463] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&mp_obj_exception_print)};
  T0.data[offset + 464] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&mp_obj_exception_attr)};
  T0.data[offset + 465] = (wasm_rt_elem_t){func_types[26], (wasm_rt_anyfunc_t)(&micropython_apply)};
  T0.data[offset + 466] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&micropython_init_module)};
  T0.data[offset + 467] = (wasm_rt_elem_t){func_types[6], (wasm_rt_anyfunc_t)(&mp_js_init)};
  T0.data[offset + 468] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&micropython_init_module_from_mpy_with_name)};
  T0.data[offset + 469] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&micropython_init_frozen_modules)};
  T0.data[offset + 470] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_open)};
  T0.data[offset + 471] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&time_time)};
}

/* export: 'apply' */
void (*WASM_RT_ADD_PREFIX(Z_applyZ_vjjj))(u64, u64, u64);

static void init_exports(void) {
  /* export: 'apply' */
  WASM_RT_ADD_PREFIX(Z_applyZ_vjjj) = (&apply);
}

