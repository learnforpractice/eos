#include <assert.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>

#include "micropython_eosio.h"
#define UNLIKELY(x) __builtin_expect(!!(x), 0)
#define LIKELY(x) __builtin_expect(!!(x), 1)

#define TRAP(x) (wasm_rt_trap(WASM_RT_TRAP_##x), 0)

#define FUNC_PROLOGUE                                            \
  if (++wasm_rt_call_stack_depth > WASM_RT_MAX_CALL_STACK_DEPTH) \
    TRAP(EXHAUSTION)

#define FUNC_EPILOGUE --wasm_rt_call_stack_depth

#define UNREACHABLE TRAP(UNREACHABLE)

#define CALL_INDIRECT(table, t, ft, x, ...)          \
  (LIKELY((x) < table.size && table.data[x].func &&  \
          table.data[x].func_type == func_types[ft]) \
       ? ((t)table.data[x].func)(__VA_ARGS__)        \
       : TRAP(CALL_INDIRECT))

#define MEMCHECK(mem, a, t)  \
  if (UNLIKELY((a) + sizeof(t) > mem->size)) TRAP(OOB)

#define DEFINE_LOAD(name, t1, t2, t3)              \
  static inline t3 name(wasm_rt_memory_t* mem, u64 addr) {   \
    MEMCHECK(mem, addr, t1);                       \
    t1 result;                                     \
    memcpy(&result, &mem->data[addr], sizeof(t1)); \
    return (t3)(t2)result;                         \
  }

#define DEFINE_STORE(name, t1, t2)                           \
  static inline void name(wasm_rt_memory_t* mem, u64 addr, t2 value) { \
    MEMCHECK(mem, addr, t1);                                 \
    t1 wrapped = (t1)value;                                  \
    memcpy(&mem->data[addr], &wrapped, sizeof(t1));          \
  }

DEFINE_LOAD(i32_load, u32, u32, u32);
DEFINE_LOAD(i64_load, u64, u64, u64);
DEFINE_LOAD(f32_load, f32, f32, f32);
DEFINE_LOAD(f64_load, f64, f64, f64);
DEFINE_LOAD(i32_load8_s, s8, s32, u32);
DEFINE_LOAD(i64_load8_s, s8, s64, u64);
DEFINE_LOAD(i32_load8_u, u8, u32, u32);
DEFINE_LOAD(i64_load8_u, u8, u64, u64);
DEFINE_LOAD(i32_load16_s, s16, s32, u32);
DEFINE_LOAD(i64_load16_s, s16, s64, u64);
DEFINE_LOAD(i32_load16_u, u16, u32, u32);
DEFINE_LOAD(i64_load16_u, u16, u64, u64);
DEFINE_LOAD(i64_load32_s, s32, s64, u64);
DEFINE_LOAD(i64_load32_u, u32, u64, u64);
DEFINE_STORE(i32_store, u32, u32);
DEFINE_STORE(i64_store, u64, u64);
DEFINE_STORE(f32_store, f32, f32);
DEFINE_STORE(f64_store, f64, f64);
DEFINE_STORE(i32_store8, u8, u32);
DEFINE_STORE(i32_store16, u16, u32);
DEFINE_STORE(i64_store8, u8, u64);
DEFINE_STORE(i64_store16, u16, u64);
DEFINE_STORE(i64_store32, u32, u64);

#define I32_CLZ(x) ((x) ? __builtin_clz(x) : 32)
#define I64_CLZ(x) ((x) ? __builtin_clzll(x) : 64)
#define I32_CTZ(x) ((x) ? __builtin_ctz(x) : 32)
#define I64_CTZ(x) ((x) ? __builtin_ctzll(x) : 64)
#define I32_POPCNT(x) (__builtin_popcount(x))
#define I64_POPCNT(x) (__builtin_popcountll(x))

#define DIV_S(ut, min, x, y)                                 \
   ((UNLIKELY((y) == 0)) ?                TRAP(DIV_BY_ZERO)  \
  : (UNLIKELY((x) == min && (y) == -1)) ? TRAP(INT_OVERFLOW) \
  : (ut)((x) / (y)))

#define REM_S(ut, min, x, y)                                \
   ((UNLIKELY((y) == 0)) ?                TRAP(DIV_BY_ZERO) \
  : (UNLIKELY((x) == min && (y) == -1)) ? 0                 \
  : (ut)((x) % (y)))

#define I32_DIV_S(x, y) DIV_S(u32, INT32_MIN, (s32)x, (s32)y)
#define I64_DIV_S(x, y) DIV_S(u64, INT64_MIN, (s64)x, (s64)y)
#define I32_REM_S(x, y) REM_S(u32, INT32_MIN, (s32)x, (s32)y)
#define I64_REM_S(x, y) REM_S(u64, INT64_MIN, (s64)x, (s64)y)

#define DIVREM_U(op, x, y) \
  ((UNLIKELY((y) == 0)) ? TRAP(DIV_BY_ZERO) : ((x) op (y)))

#define DIV_U(x, y) DIVREM_U(/, x, y)
#define REM_U(x, y) DIVREM_U(%, x, y)

#define ROTL(x, y, mask) \
  (((x) << ((y) & (mask))) | ((x) >> (((mask) - (y) + 1) & (mask))))
#define ROTR(x, y, mask) \
  (((x) >> ((y) & (mask))) | ((x) << (((mask) - (y) + 1) & (mask))))

#define I32_ROTL(x, y) ROTL(x, y, 31)
#define I64_ROTL(x, y) ROTL(x, y, 63)
#define I32_ROTR(x, y) ROTR(x, y, 31)
#define I64_ROTR(x, y) ROTR(x, y, 63)

#define FMIN(x, y)                                          \
   ((UNLIKELY((x) != (x))) ? NAN                            \
  : (UNLIKELY((y) != (y))) ? NAN                            \
  : (UNLIKELY((x) == 0 && (y) == 0)) ? (signbit(x) ? x : y) \
  : (x < y) ? x : y)

#define FMAX(x, y)                                          \
   ((UNLIKELY((x) != (x))) ? NAN                            \
  : (UNLIKELY((y) != (y))) ? NAN                            \
  : (UNLIKELY((x) == 0 && (y) == 0)) ? (signbit(x) ? y : x) \
  : (x > y) ? x : y)

#define TRUNC_S(ut, st, ft, min, max, maxop, x)                             \
   ((UNLIKELY((x) != (x))) ? TRAP(INVALID_CONVERSION)                       \
  : (UNLIKELY((x) < (ft)(min) || (x) maxop (ft)(max))) ? TRAP(INT_OVERFLOW) \
  : (ut)(st)(x))

#define I32_TRUNC_S_F32(x) TRUNC_S(u32, s32, f32, INT32_MIN, INT32_MAX, >=, x)
#define I64_TRUNC_S_F32(x) TRUNC_S(u64, s64, f32, INT64_MIN, INT64_MAX, >=, x)
#define I32_TRUNC_S_F64(x) TRUNC_S(u32, s32, f64, INT32_MIN, INT32_MAX, >,  x)
#define I64_TRUNC_S_F64(x) TRUNC_S(u64, s64, f64, INT64_MIN, INT64_MAX, >=, x)

#define TRUNC_U(ut, ft, max, maxop, x)                                    \
   ((UNLIKELY((x) != (x))) ? TRAP(INVALID_CONVERSION)                     \
  : (UNLIKELY((x) <= (ft)-1 || (x) maxop (ft)(max))) ? TRAP(INT_OVERFLOW) \
  : (ut)(x))

#define I32_TRUNC_U_F32(x) TRUNC_U(u32, f32, UINT32_MAX, >=, x)
#define I64_TRUNC_U_F32(x) TRUNC_U(u64, f32, UINT64_MAX, >=, x)
#define I32_TRUNC_U_F64(x) TRUNC_U(u32, f64, UINT32_MAX, >,  x)
#define I64_TRUNC_U_F64(x) TRUNC_U(u64, f64, UINT64_MAX, >=, x)

#define DEFINE_REINTERPRET(name, t1, t2)  \
  static inline t2 name(t1 x) {           \
    t2 result;                            \
    memcpy(&result, &x, sizeof(result));  \
    return result;                        \
  }

DEFINE_REINTERPRET(f32_reinterpret_i32, u32, f32)
DEFINE_REINTERPRET(i32_reinterpret_f32, f32, u32)
DEFINE_REINTERPRET(f64_reinterpret_i64, u64, f64)
DEFINE_REINTERPRET(i64_reinterpret_f64, f64, u64)


static u32 func_types[73];

static void init_func_types(void) {
  func_types[0] = wasm_rt_register_func_type(3, 0, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[1] = wasm_rt_register_func_type(1, 1, WASM_RT_I32, WASM_RT_I32);
  func_types[2] = wasm_rt_register_func_type(1, 0, WASM_RT_I32);
  func_types[3] = wasm_rt_register_func_type(2, 1, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[4] = wasm_rt_register_func_type(3, 1, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[5] = wasm_rt_register_func_type(4, 1, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[6] = wasm_rt_register_func_type(0, 1, WASM_RT_I32);
  func_types[7] = wasm_rt_register_func_type(0, 0);
  func_types[8] = wasm_rt_register_func_type(2, 0, WASM_RT_I32, WASM_RT_F64);
  func_types[9] = wasm_rt_register_func_type(2, 0, WASM_RT_I32, WASM_RT_I32);
  func_types[10] = wasm_rt_register_func_type(2, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32);
  func_types[11] = wasm_rt_register_func_type(4, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32);
  func_types[12] = wasm_rt_register_func_type(2, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_F64);
  func_types[13] = wasm_rt_register_func_type(5, 0, WASM_RT_I32, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64);
  func_types[14] = wasm_rt_register_func_type(0, 1, WASM_RT_I64);
  func_types[15] = wasm_rt_register_func_type(1, 1, WASM_RT_I64, WASM_RT_I32);
  func_types[16] = wasm_rt_register_func_type(1, 0, WASM_RT_I64);
  func_types[17] = wasm_rt_register_func_type(2, 0, WASM_RT_I64, WASM_RT_I64);
  func_types[18] = wasm_rt_register_func_type(5, 0, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[19] = wasm_rt_register_func_type(5, 1, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[20] = wasm_rt_register_func_type(6, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[21] = wasm_rt_register_func_type(4, 0, WASM_RT_I32, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32);
  func_types[22] = wasm_rt_register_func_type(3, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32);
  func_types[23] = wasm_rt_register_func_type(5, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32);
  func_types[24] = wasm_rt_register_func_type(3, 0, WASM_RT_I32, WASM_RT_I64, WASM_RT_I32);
  func_types[25] = wasm_rt_register_func_type(5, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I64, WASM_RT_I32);
  func_types[26] = wasm_rt_register_func_type(6, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I64, WASM_RT_I32);
  func_types[27] = wasm_rt_register_func_type(5, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[28] = wasm_rt_register_func_type(6, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[29] = wasm_rt_register_func_type(4, 0, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[30] = wasm_rt_register_func_type(4, 0, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64);
  func_types[31] = wasm_rt_register_func_type(2, 1, WASM_RT_I32, WASM_RT_I32, WASM_RT_I64);
  func_types[32] = wasm_rt_register_func_type(2, 0, WASM_RT_I64, WASM_RT_I32);
  func_types[33] = wasm_rt_register_func_type(2, 0, WASM_RT_I32, WASM_RT_I64);
  func_types[34] = wasm_rt_register_func_type(5, 0, WASM_RT_I32, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[35] = wasm_rt_register_func_type(2, 0, WASM_RT_I32, WASM_RT_F32);
  func_types[36] = wasm_rt_register_func_type(2, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_F32);
  func_types[37] = wasm_rt_register_func_type(6, 1, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[38] = wasm_rt_register_func_type(8, 1, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[39] = wasm_rt_register_func_type(7, 1, WASM_RT_I32, WASM_RT_F64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[40] = wasm_rt_register_func_type(4, 0, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[41] = wasm_rt_register_func_type(1, 1, WASM_RT_I32, WASM_RT_F64);
  func_types[42] = wasm_rt_register_func_type(6, 1, WASM_RT_F64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[43] = wasm_rt_register_func_type(1, 1, WASM_RT_F64, WASM_RT_F64);
  func_types[44] = wasm_rt_register_func_type(2, 1, WASM_RT_F64, WASM_RT_I32, WASM_RT_F64);
  func_types[45] = wasm_rt_register_func_type(2, 1, WASM_RT_F64, WASM_RT_F64, WASM_RT_F64);
  func_types[46] = wasm_rt_register_func_type(6, 0, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[47] = wasm_rt_register_func_type(2, 1, WASM_RT_F64, WASM_RT_I32, WASM_RT_I32);
  func_types[48] = wasm_rt_register_func_type(3, 1, WASM_RT_F64, WASM_RT_F64, WASM_RT_I32, WASM_RT_F64);
  func_types[49] = wasm_rt_register_func_type(4, 1, WASM_RT_I32, WASM_RT_F64, WASM_RT_F64, WASM_RT_I32, WASM_RT_I32);
  func_types[50] = wasm_rt_register_func_type(2, 1, WASM_RT_F64, WASM_RT_F64, WASM_RT_I32);
  func_types[51] = wasm_rt_register_func_type(3, 1, WASM_RT_I32, WASM_RT_F64, WASM_RT_I32, WASM_RT_I32);
  func_types[52] = wasm_rt_register_func_type(1, 1, WASM_RT_F64, WASM_RT_I32);
  func_types[53] = wasm_rt_register_func_type(7, 0, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[54] = wasm_rt_register_func_type(2, 1, WASM_RT_I32, WASM_RT_F64, WASM_RT_F64);
  func_types[55] = wasm_rt_register_func_type(4, 1, WASM_RT_I32, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32);
  func_types[56] = wasm_rt_register_func_type(3, 0, WASM_RT_I32, WASM_RT_I64, WASM_RT_I64);
  func_types[57] = wasm_rt_register_func_type(5, 0, WASM_RT_I32, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32);
  func_types[58] = wasm_rt_register_func_type(1, 1, WASM_RT_I32, WASM_RT_I64);
  func_types[59] = wasm_rt_register_func_type(3, 1, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[60] = wasm_rt_register_func_type(4, 0, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32);
  func_types[61] = wasm_rt_register_func_type(6, 0, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32);
  func_types[62] = wasm_rt_register_func_type(7, 1, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32, WASM_RT_I32);
  func_types[63] = wasm_rt_register_func_type(3, 0, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32);
  func_types[64] = wasm_rt_register_func_type(3, 0, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64);
  func_types[65] = wasm_rt_register_func_type(4, 0, WASM_RT_I32, WASM_RT_I32, WASM_RT_I64, WASM_RT_I32);
  func_types[66] = wasm_rt_register_func_type(3, 1, WASM_RT_I32, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32);
  func_types[67] = wasm_rt_register_func_type(5, 0, WASM_RT_I64, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32, WASM_RT_I32);
  func_types[68] = wasm_rt_register_func_type(2, 1, WASM_RT_I64, WASM_RT_I32, WASM_RT_I64);
  func_types[69] = wasm_rt_register_func_type(3, 0, WASM_RT_I64, WASM_RT_I64, WASM_RT_I32);
  func_types[70] = wasm_rt_register_func_type(1, 1, WASM_RT_F64, WASM_RT_F32);
  func_types[71] = wasm_rt_register_func_type(1, 1, WASM_RT_F32, WASM_RT_F64);
  func_types[72] = wasm_rt_register_func_type(2, 1, WASM_RT_F32, WASM_RT_F32, WASM_RT_F32);
}

static void __wasm_call_ctors(void);
static u32 nlr_push_tail(u32);
static void nlr_pop(void);
static void nlr_jump(u32);
static u32 m_malloc(u32);
static u32 m_malloc_maybe(u32);
static u32 m_malloc0(u32);
static u32 m_realloc(u32, u32);
static u32 m_realloc_maybe(u32, u32, u32);
static void m_free(u32);
static void mp_pystack_init(u32, u32);
static u32 mp_pystack_alloc(u32);
static u32 memcmp_0(u32, u32, u32);
static u32 strlen_0(u32);
static u32 qstr_compute_hash(u32, u32);
static void qstr_init(void);
static u32 qstr_find_strn(u32, u32);
static u32 qstr_from_str(u32);
static u32 qstr_from_strn(u32, u32);
static u32 qstr_hash(u32);
static u32 qstr_len(u32);
static u32 qstr_str(u32);
static u32 qstr_data(u32, u32);
static void vstr_init(u32, u32);
static void vstr_init_len(u32, u32);
static void vstr_init_fixed_buf(u32, u32, u32);
static void vstr_init_print(u32, u32, u32);
static void vstr_add_strn(u32, u32, u32);
static void vstr_clear(u32);
static u32 vstr_new(u32);
static void vstr_free(u32);
static u32 vstr_extend(u32, u32);
static u32 vstr_add_len(u32, u32);
static u32 vstr_null_terminated_str(u32);
static void vstr_add_byte(u32, u32);
static void vstr_add_char(u32, u32);
static void vstr_add_str(u32, u32);
static void vstr_ins_byte(u32, u32, u32);
static void vstr_cut_tail_bytes(u32, u32);
static void plat_print_strn(u32, u32, u32);
static u32 mp_print_str(u32, u32);
static u32 mp_print_strn(u32, u32, u32, u32, u32, u32);
static u32 mp_print_mp_int(u32, u32, u32, u32, u32, u32, u32, u32);
static u32 mp_print_float(u32, f64, u32, u32, u32, u32, u32);
static u32 mp_printf(u32, u32, u32);
static u32 mp_vprintf(u32, u32, u32);
static u32 mp_print_int(u32, u32, u32, u32, u32, u32, u32, u32);
static u32 utf8_get_char(u32);
static u32 utf8_next_char(u32);
static u32 utf8_ptr_to_index(u32, u32);
static u32 utf8_charlen(u32, u32);
static u32 unichar_isspace(u32);
static u32 unichar_isalpha(u32);
static u32 unichar_isdigit(u32);
static u32 unichar_isxdigit(u32);
static u32 unichar_isupper(u32);
static u32 unichar_islower(u32);
static u32 unichar_tolower(u32);
static u32 unichar_toupper(u32);
static u32 unichar_xdigit_value(u32);
static u32 utf8_check(u32, u32);
static void mpz_init_zero(u32);
static void mpz_init_from_int(u32, u32);
static void mpz_init_fixed_from_int(u32, u32, u32, u32);
static void mpz_deinit(u32);
static void mpz_set_from_ll(u32, u64, u32);
static void mpz_set_from_float(u32, f64);
static u32 mpz_set_from_str(u32, u32, u32, u32, u32);
static void mpz_set_from_bytes(u32, u32, u32, u32);
static u32 mpz_cmp(u32, u32);
static void mpz_abs_inpl(u32, u32);
static void mpz_neg_inpl(u32, u32);
static void mpz_not_inpl(u32, u32);
static void mpz_shl_inpl(u32, u32, u32);
static void mpz_shr_inpl(u32, u32, u32);
static void mpz_add_inpl(u32, u32, u32);
static void mpz_sub_inpl(u32, u32, u32);
static void mpz_and_inpl(u32, u32, u32);
static void mpz_or_inpl(u32, u32, u32);
static void mpz_xor_inpl(u32, u32, u32);
static void mpz_mul_inpl(u32, u32, u32);
static void mpz_pow_inpl(u32, u32, u32);
static void mpz_pow3_inpl(u32, u32, u32, u32);
static void mpz_divmod_inpl(u32, u32, u32, u32);
static u32 mpz_hash(u32);
static u32 mpz_as_int_checked(u32, u32);
static u32 mpz_as_uint_checked(u32, u32);
static u32 mpz_as_bytes(u32, u32, u32, u32);
static f64 mpz_as_float(u32);
static u32 mpz_as_str_inpl(u32, u32, u32, u32, u32, u32);
static void mp_reader_new_mem(u32, u32, u32, u32);
static u32 mp_reader_mem_readbyte(u32);
static void mp_reader_mem_close(u32);
static u32 mp_format_float(f64, u32, u32, u32, u32, u32);
static u32 mp_parse_num_base(u32, u32, u32);
static f64 nan_0(u32);
static f64 sqrt_0(f64);
static f64 fabs_0(f64);
static f64 scalbn_0(f64, u32);
static f64 pow_0(f64, f64);
static u32 mp_parse_num_integer(u32, u32, u32, u32);
static void raise_exc(u32, u32);
static u32 _mp_parse_num_decimal(u32, u32, u32, u32, u32, u32);
static u32 mp_parse_num_decimal(u32, u32, u32, u32, u32);
static u32 mp_parse_num_decimal_float128(u32, u32, u32, u32, u32);
static u32 mp_emit_glue_new_raw_code(void);
static void mp_emit_glue_assign_bytecode(u32, u32, u32, u32);
static u32 mp_make_function_from_raw_code(u32, u32, u32);
static u32 mp_make_closure_from_raw_code(u32, u32, u32);
static u32 mp_raw_code_load(u32);
static u32 load_raw_code(u32, u32);
static u32 load_qstr(u32, u32);
static u32 mp_raw_code_load_mem(u32, u32);
static void mp_init(void);
static u32 mp_load_name(u32);
static void mp_raise_msg_varg(u32, u32, u32);
static u32 mp_load_global(u32);
static u32 mp_load_build_class(void);
static void mp_store_name(u32, u32);
static void mp_delete_name(u32);
static void mp_store_global(u32, u32);
static void mp_delete_global(u32);
static u32 mp_unary_op(u32, u32);
static u32 mp_binary_op(u32, u32, u32);
static void mp_raise_msg(u32, u32);
static void mp_raise_ValueError(u32);
static u32 mp_getiter(u32, u32);
static u32 mp_iternext(u32);
static void mp_load_method_maybe(u32, u32, u32);
static u32 mp_call_function_0(u32);
static u32 mp_call_function_n_kw(u32, u32, u32, u32);
static u32 mp_call_function_1(u32, u32);
static u32 mp_call_method_n_kw(u32, u32, u32);
static u32 mp_call_method_n_kw_var(u32, u32, u32);
static void mp_unpack_sequence(u32, u32, u32);
static void mp_unpack_ex(u32, u32, u32);
static u32 mp_load_attr(u32, u32);
static void mp_load_method(u32, u32, u32);
static void mp_convert_member_lookup(u32, u32, u32, u32);
static void mp_load_method_protected(u32, u32, u32, u32);
static void mp_store_attr(u32, u32, u32);
static u32 mp_iternext_allow_raise(u32);
static u32 mp_resume(u32, u32, u32, u32);
static u32 mp_make_raise_obj(u32);
static u32 mp_import_name(u32, u32, u32);
static u32 mp_import_from(u32, u32);
static void mp_import_all(u32);
static void m_malloc_fail(u32);
static void mp_raise_TypeError(u32);
static void mp_raise_OSError(u32);
static void mp_raise_NotImplementedError(u32);
static u32 checked_fun_call(u32, u32, u32, u32);
static u32 mp_call_function_1_protected(u32, u32);
static void mp_handle_pending_tail(u32);
static u32 mp_sched_schedule(u32, u32);
static void mp_arg_check_num_sig(u32, u32, u32);
static void mp_arg_parse_all(u32, u32, u32, u32, u32, u32);
static void mp_arg_parse_all_kw_array(u32, u32, u32, u32, u32, u32);
static void mp_arg_error_unimpl_kw(void);
static void mp_warning(u32, u32, u32);
static void mp_map_init(u32, u32);
static void mp_map_init_fixed_table(u32, u32, u32);
static void mp_map_clear(u32);
static u32 mp_map_lookup(u32, u32, u32);
static u32 get_hash_alloc_greater_or_equal_to(u32);
static void mp_set_init(u32, u32);
static u32 mp_set_lookup(u32, u32, u32);
static u32 mp_set_remove_first(u32);
static void mp_set_clear(u32);
static u32 mp_obj_get_type(u32);
static u32 mp_obj_get_type_str(u32);
static void mp_obj_print_helper(u32, u32, u32);
static void mp_obj_print_exception(u32, u32);
static u32 mp_obj_is_true(u32);
static u32 mp_obj_len_maybe(u32);
static u32 mp_obj_is_callable(u32);
static u32 mp_obj_equal_not_equal(u32, u32, u32);
static u32 mp_obj_equal(u32, u32);
static u32 mp_obj_get_int(u32);
static u32 mp_obj_get_int_truncated(u32);
static u32 mp_obj_get_int_maybe(u32, u32);
static u32 mp_obj_get_float_maybe(u32, u32);
static f64 mp_obj_get_float(u32);
static u32 mp_obj_get_complex_maybe(u32, u32, u32);
static void mp_obj_get_complex(u32, u32, u32);
static void mp_obj_get_array(u32, u32, u32);
static u32 mp_get_index(u32, u32, u32, u32);
static u32 mp_obj_id(u32);
static u32 mp_obj_len(u32);
static u32 mp_obj_subscr(u32, u32, u32);
static u32 mp_identity(u32);
static u32 mp_identity_getiter(u32, u32);
static u32 mp_get_buffer(u32, u32, u32);
static void mp_get_buffer_raise(u32, u32, u32);
static u32 mp_generic_unary_op(u32, u32);
static void array_print(u32, u32, u32);
static u32 array_make_new(u32, u32, u32, u32);
static u32 array_construct(u32, u32);
static u32 array_unary_op(u32, u32);
static u32 array_binary_op(u32, u32, u32);
static u32 array_extend(u32, u32);
static u32 array_subscr(u32, u32, u32);
static u32 array_iterator_new(u32, u32);
static u32 array_get_buffer(u32, u32, u32);
static u32 bytearray_make_new(u32, u32, u32, u32);
static u32 memoryview_make_new(u32, u32, u32, u32);
static u32 array_append(u32, u32);
static u32 array_it_iternext(u32);
static void mp_obj_attrtuple_print_helper(u32, u32, u32);
static void mp_obj_attrtuple_print(u32, u32, u32);
static void mp_obj_attrtuple_attr(u32, u32, u32);
static void bool_print(u32, u32, u32);
static u32 bool_make_new(u32, u32, u32, u32);
static u32 bool_unary_op(u32, u32);
static u32 bool_binary_op(u32, u32, u32);
static u32 mp_call_method_self_n_kw(u32, u32, u32, u32, u32);
static u32 mp_obj_new_bound_meth(u32, u32);
static u32 bound_meth_call(u32, u32, u32, u32);
static void bound_meth_attr(u32, u32, u32);
static u32 mp_obj_cell_get(u32);
static void mp_obj_cell_set(u32, u32);
static u32 mp_obj_new_cell(u32);
static u32 closure_call(u32, u32, u32, u32);
static u32 mp_obj_new_closure(u32, u32, u32);
static f64 log_0(f64);
static f64 atan_0(f64);
static f64 atan2_0(f64, f64);
static f64 exp_0(f64);
static f64 __cos(f64, f64);
static f64 floor_0(f64);
static u32 __rem_pio2_large(u32, u32, u32, u32, u32);
static u32 __rem_pio2(f64, u32);
static f64 __sin(f64, f64, u32);
static f64 cos_0(f64);
static f64 sin_0(f64);
static void complex_print(u32, u32, u32);
static u32 complex_make_new(u32, u32, u32, u32);
static u32 complex_unary_op(u32, u32);
static u32 complex_binary_op(u32, u32, u32);
static u32 mp_obj_complex_binary_op(u32, f64, f64, u32);
static void complex_attr(u32, u32, u32);
static u32 mp_obj_new_complex(f64, f64);
static void mp_obj_complex_get(u32, u32, u32);
static u32 mp_obj_dict_make_new(u32, u32, u32, u32);
static u32 dict_update(u32, u32, u32);
static u32 mp_obj_new_dict(u32);
static u32 mp_obj_dict_get(u32, u32);
static u32 mp_obj_dict_copy(u32);
static void dict_print(u32, u32, u32);
static u32 dict_unary_op(u32, u32);
static u32 dict_binary_op(u32, u32, u32);
static u32 dict_subscr(u32, u32, u32);
static u32 dict_getiter(u32, u32);
static void mp_obj_dict_init(u32, u32);
static u32 mp_obj_dict_len(u32);
static u32 mp_obj_dict_store(u32, u32, u32);
static u32 mp_obj_dict_delete(u32, u32);
static u32 dict_view_it_iternext(u32);
static u32 dict_clear(u32);
static u32 dict_fromkeys(u32, u32);
static u32 dict_get(u32, u32);
static u32 dict_items(u32);
static void dict_view_print(u32, u32, u32);
static u32 dict_view_binary_op(u32, u32, u32);
static u32 dict_view_getiter(u32, u32);
static u32 dict_keys(u32);
static u32 dict_pop(u32, u32);
static u32 dict_popitem(u32);
static u32 dict_setdefault(u32, u32);
static u32 dict_values(u32);
static u32 enumerate_make_new(u32, u32, u32, u32);
static u32 enumerate_iternext(u32);
static void mp_obj_exception_print(u32, u32, u32);
static u32 mp_obj_exception_make_new(u32, u32, u32, u32);
static u32 mp_obj_exception_get_value(u32);
static void mp_obj_exception_attr(u32, u32, u32);
static u32 mp_obj_new_exception(u32);
static u32 mp_obj_new_exception_arg1(u32, u32);
static u32 mp_obj_new_exception_msg(u32, u32);
static u32 mp_obj_new_exception_msg_varg(u32, u32, u32);
static u32 mp_obj_new_exception_msg_vlist(u32, u32, u32);
static void exc_add_strn(u32, u32, u32);
static u32 mp_obj_is_exception_type(u32);
static u32 mp_obj_is_exception_instance(u32);
static u32 mp_obj_exception_match(u32, u32);
static void mp_obj_exception_add_traceback(u32, u32, u32, u32);
static void mp_obj_exception_get_traceback(u32, u32, u32);
static u32 filter_make_new(u32, u32, u32, u32);
static u32 filter_iternext(u32);
static u32 __strchrnul(u32, u32);
static u32 strchr_0(u32, u32);
static f64 fmod_0(f64, f64);
static f64 copysign_0(f64, f64);
static void float_print(u32, u32, u32);
static u32 float_make_new(u32, u32, u32, u32);
static u32 float_unary_op(u32, u32);
static u32 float_binary_op(u32, u32, u32);
static u32 mp_obj_float_binary_op(u32, f64, u32);
static u32 mp_obj_new_float(f64);
static f64 mp_obj_float_get(u32);
static u32 fun_builtin_0_call(u32, u32, u32, u32);
static u32 fun_builtin_1_call(u32, u32, u32, u32);
static u32 fun_builtin_2_call(u32, u32, u32, u32);
static u32 fun_builtin_3_call(u32, u32, u32, u32);
static u32 fun_builtin_var_call(u32, u32, u32, u32);
static u32 mp_obj_fun_get_name(u32);
static void mp_obj_fun_bc_attr(u32, u32, u32);
static void fun_bc_print(u32, u32, u32);
static u32 fun_bc_call(u32, u32, u32, u32);
static u32 mp_obj_new_fun_bc(u32, u32, u32, u32);
static u32 gen_wrap_call(u32, u32, u32, u32);
static u32 mp_obj_gen_resume(u32, u32, u32, u32);
static void gen_instance_print(u32, u32, u32);
static u32 gen_instance_iternext(u32);
static u32 gen_instance_close(u32);
static u32 gen_instance_send(u32, u32);
static u32 gen_instance_throw(u32, u32);
static u32 gen_instance_pend_throw(u32, u32);
static u32 mp_obj_new_getitem_iter(u32, u32);
static u32 it_iternext(u32);
static u32 mp_obj_new_int_from_float(f64);
static void mp_obj_int_print(u32, u32, u32);
static u32 mp_obj_int_formatted(u32, u32, u32, u32, u32, u32, u32, u32);
static u32 mp_int_format_size(u32, u32, u32, u32);
static u32 mp_obj_int_binary_op_extra_cases(u32, u32, u32);
static u32 mp_obj_int_make_new(u32, u32, u32, u32);
static u32 int_from_bytes(u32, u32);
static u32 int_to_bytes(u32, u32);
static u32 mp_obj_int_new_mpz(void);
static u32 mp_obj_int_formatted_impl(u32, u32, u32, u32, u32, u32, u32, u32);
static u32 mp_obj_int_from_bytes_impl(u32, u32, u32);
static u32 mp_obj_int_to_bytes_impl(u32, u32, u32, u32);
static u32 mp_obj_int_sign(u32);
static u32 mp_obj_int_unary_op(u32, u32);
static u32 mp_obj_int_binary_op(u32, u32, u32);
static u32 mp_obj_int_get_checked(u32);
static u32 mp_obj_int_pow3(u32, u32, u32);
static u32 mp_obj_new_int_from_ull(u64);
static u32 mp_obj_new_int(u32);
static u32 mp_obj_new_int_from_ll(u64);
static u32 mp_obj_new_int_from_uint(u32);
static u32 mp_obj_new_int_from_str_len(u32, u32, u32, u32);
static u32 mp_obj_int_get_truncated(u32);
static u32 mp_obj_int_get_uint_checked(u32);
static f64 mp_obj_int_as_float_impl(u32);
static u32 mp_obj_list_append(u32, u32);
static u32 mp_obj_list_sort(u32, u32, u32);
static void mp_quicksort(u32, u32, u32, u32);
static u32 mp_obj_list_remove(u32, u32);
static u32 list_pop(u32, u32);
static u32 list_index(u32, u32);
static void list_print(u32, u32, u32);
static u32 list_make_new(u32, u32, u32, u32);
static u32 list_extend_from_iter(u32, u32);
static u32 list_unary_op(u32, u32);
static u32 list_binary_op(u32, u32, u32);
static u32 list_extend(u32, u32);
static u32 list_subscr(u32, u32, u32);
static u32 list_getiter(u32, u32);
static u32 list_it_iternext(u32);
static void mp_obj_list_init(u32, u32);
static u32 mp_obj_new_list(u32, u32);
static void mp_obj_list_get(u32, u32, u32);
static void mp_obj_list_set_len(u32, u32);
static u32 list_clear(u32);
static u32 list_copy(u32);
static u32 list_count(u32, u32);
static u32 list_insert(u32, u32, u32);
static u32 list_reverse(u32);
static u32 map_make_new(u32, u32, u32, u32);
static u32 map_iternext(u32);
static u32 strcmp_0(u32, u32);
static void module_print(u32, u32, u32);
static void module_attr(u32, u32, u32);
static u32 mp_obj_new_module(u32);
static u32 mp_module_get(u32);
static u32 mp_module_search_umodule(u32);
static u32 object_make_new(u32, u32, u32, u32);
static u32 object___init__(u32);
static u32 object___new__(u32);
static u32 polymorph_it_iternext(u32);
static u32 property_make_new(u32, u32, u32, u32);
static u32 mp_obj_property_get(u32);
static u32 property_getter(u32, u32);
static u32 property_setter(u32, u32);
static u32 property_deleter(u32, u32);
static void none_print(u32, u32, u32);
static u32 new_namedtuple_type(u32, u32);
static void namedtuple_print(u32, u32, u32);
static u32 namedtuple_make_new(u32, u32, u32, u32);
static void namedtuple_attr(u32, u32, u32);
static void range_print(u32, u32, u32);
static u32 range_make_new(u32, u32, u32, u32);
static u32 range_unary_op(u32, u32);
static void range_attr(u32, u32, u32);
static u32 range_subscr(u32, u32, u32);
static u32 range_getiter(u32, u32);
static u32 range_it_iternext(u32);
static u32 reversed_make_new(u32, u32, u32, u32);
static u32 reversed_iternext(u32);
static void set_print(u32, u32, u32);
static u32 set_make_new(u32, u32, u32, u32);
static u32 set_unary_op(u32, u32);
static u32 set_binary_op(u32, u32, u32);
static u32 set_issubset_internal(u32, u32, u32);
static u32 set_intersect_int(u32, u32, u32);
static u32 set_union(u32, u32);
static u32 set_symmetric_difference(u32, u32);
static u32 set_getiter(u32, u32);
static u32 set_it_iternext(u32);
static u32 mp_obj_new_set(u32, u32);
static void mp_obj_set_store(u32, u32);
static u32 set_intersect(u32, u32);
static u32 set_diff(u32, u32);
static u32 set_diff_int(u32, u32, u32);
static u32 set_update(u32, u32);
static u32 set_symmetric_difference_update(u32, u32);
static u32 set_copy(u32);
static u32 set_issubset(u32, u32);
static u32 set_issuperset(u32, u32);
static u32 set_add(u32, u32);
static u32 set_clear(u32);
static u32 set_discard(u32, u32);
static u32 set_diff_update(u32, u32);
static u32 set_intersect_update(u32, u32);
static u32 set_isdisjoint(u32, u32);
static u32 set_pop(u32);
static u32 set_remove(u32, u32);
static void singleton_print(u32, u32, u32);
static void slice_print(u32, u32, u32);
static void slice_attr(u32, u32, u32);
static u32 mp_obj_new_slice(u32, u32, u32);
static void mp_obj_slice_indices(u32, u32, u32);
static void mp_str_print_quoted(u32, u32, u32, u32);
static void mp_str_print_json(u32, u32, u32);
static u32 mp_obj_str_make_new(u32, u32, u32, u32);
static u32 mp_obj_new_str_from_vstr(u32, u32);
static u32 mp_obj_new_str(u32, u32);
static u32 find_subbytes(u32, u32, u32, u32, u32);
static u32 mp_obj_str_binary_op(u32, u32, u32);
static void bad_implicit_conversion(u32);
static u32 str_join(u32, u32);
static u32 mp_obj_str_split(u32, u32);
static u32 mp_obj_new_str_of_type(u32, u32, u32);
static u32 mp_obj_str_get_data(u32, u32);
static u32 str_splitlines(u32, u32, u32);
static u32 str_rsplit(u32, u32);
static u32 str_find(u32, u32);
static u32 str_finder(u32, u32, u32, u32);
static u32 str_rfind(u32, u32);
static u32 str_index(u32, u32);
static u32 str_rindex(u32, u32);
static u32 str_startswith(u32, u32);
static u32 str_endswith(u32, u32);
static u32 str_strip(u32, u32);
static u32 str_uni_strip(u32, u32, u32);
static u32 str_lstrip(u32, u32);
static u32 str_rstrip(u32, u32);
static u32 str_center(u32, u32);
static u32 mp_obj_str_format(u32, u32, u32);
static void mp_obj_str_format_helper(u32, u32, u32, u32, u32, u32, u32);
static u32 str_replace(u32, u32);
static u32 str_count(u32, u32);
static u32 str_partition(u32, u32);
static u32 str_partitioner(u32, u32, u32);
static u32 str_rpartition(u32, u32);
static u32 str_lower(u32);
static u32 str_upper(u32);
static u32 str_isspace(u32);
static u32 str_isalpha(u32);
static u32 str_isdigit(u32);
static u32 str_isupper(u32);
static u32 str_islower(u32);
static u32 bytes_decode(u32, u32);
static u32 str_encode(u32, u32);
static u32 bytes_make_new(u32, u32, u32, u32);
static u32 mp_obj_str_get_buffer(u32, u32, u32);
static void str_print(u32, u32, u32);
static u32 bytes_subscr(u32, u32, u32);
static u32 mp_obj_new_bytes_iterator(u32, u32);
static u32 bytes_it_iternext(u32);
static u32 mp_obj_new_bytes(u32, u32);
static u32 mp_obj_new_str_via_qstr(u32, u32);
static u32 mp_obj_str_intern_checked(u32);
static u32 mp_obj_str_equal(u32, u32);
static u32 mp_obj_str_get_qstr(u32);
static u32 mp_obj_str_get_str(u32);
static u32 str_index_to_ptr(u32, u32, u32, u32, u32);
static void uni_print(u32, u32, u32);
static u32 uni_unary_op(u32, u32);
static u32 str_subscr(u32, u32, u32);
static u32 mp_obj_new_str_iterator(u32, u32);
static u32 str_it_iternext(u32);
static void stringio_print(u32, u32, u32);
static u32 stringio_make_new(u32, u32, u32, u32);
static u32 stringio_write(u32, u32, u32, u32);
static u32 stringio_read(u32, u32, u32, u32);
static u32 stringio_ioctl(u32, u32, u32, u32);
static u32 stringio_getvalue(u32);
static u32 stringio___exit__(u32, u32);
static void mp_obj_tuple_print(u32, u32, u32);
static u32 mp_obj_tuple_unary_op(u32, u32);
static u32 mp_obj_tuple_binary_op(u32, u32, u32);
static u32 mp_obj_tuple_getiter(u32, u32);
static u32 mp_obj_new_tuple(u32, u32);
static u32 mp_obj_tuple_subscr(u32, u32, u32);
static u32 mp_obj_tuple_make_new(u32, u32, u32, u32);
static u32 tuple_it_iternext(u32);
static void mp_obj_tuple_get(u32, u32, u32);
static void mp_obj_tuple_del(u32);
static u32 tuple_count(u32, u32);
static u32 tuple_index(u32, u32);
static u32 mp_obj_new_instance(u32, u32);
static u32 instance_count_native_bases(u32, u32);
static u32 mp_obj_instance_make_new(u32, u32, u32, u32);
static void mp_obj_class_lookup(u32, u32);
static u32 mp_obj_instance_is_callable(u32);
static u32 mp_obj_instance_call(u32, u32, u32, u32);
static u32 mp_obj_instance_getiter(u32, u32);
static void type_print(u32, u32, u32);
static u32 type_make_new(u32, u32, u32, u32);
static u32 mp_obj_new_type(u32, u32, u32);
static u32 type_call(u32, u32, u32, u32);
static void type_attr(u32, u32, u32);
static void instance_print(u32, u32, u32);
static u32 instance_unary_op(u32, u32);
static u32 instance_binary_op(u32, u32, u32);
static void mp_obj_instance_attr(u32, u32, u32);
static u32 instance_subscr(u32, u32, u32);
static u32 instance_get_buffer(u32, u32, u32);
static u32 static_class_method_make_new(u32, u32, u32, u32);
static void super_print(u32, u32, u32);
static u32 super_make_new(u32, u32, u32, u32);
static void super_attr(u32, u32, u32);
static void mp_load_super_method(u32, u32);
static u32 mp_obj_is_subclass_fast(u32, u32);
static u32 mp_builtin_issubclass(u32, u32);
static u32 mp_builtin_isinstance(u32, u32);
static u32 mp_obj_cast_to_native_base(u32, u32);
static u32 native_base_init_wrapper(u32, u32);
static u32 zip_make_new(u32, u32, u32, u32);
static u32 zip_iternext(u32);
static u32 op_getitem(u32, u32);
static u32 op_setitem(u32, u32, u32);
static u32 op_delitem(u32, u32);
static u32 op_contains(u32, u32);
static void mp_seq_multiply(u32, u32, u32, u32, u32);
static u32 mp_seq_get_fast_slice_indexes(u32, u32, u32);
static u32 mp_seq_extract_slice(u32, u32, u32);
static u32 mp_seq_cmp_bytes(u32, u32, u32, u32, u32);
static u32 mp_seq_cmp_objs(u32, u32, u32, u32, u32);
static u32 mp_seq_index_obj(u32, u32, u32, u32);
static u32 mp_seq_count_obj(u32, u32, u32);
static u32 mp_get_stream_raise(u32, u32);
static u32 stream_read(u32, u32);
static u32 stream_read_generic(u32, u32, u32);
static void mp_stream_write_adaptor(u32, u32, u32);
static u32 stream_write_method(u32, u32);
static u32 stream_readinto(u32, u32);
static u32 stream_unbuffered_readline(u32, u32);
static u32 mp_stream_unbuffered_iter(u32);
static u32 mp_stream_close(u32);
static u32 stream_seek(u32, u32);
static u32 stream_tell(u32);
static u32 stream_flush(u32);
static u32 mp_binary_get_size(u32, u32, u32);
static u32 mp_binary_get_val_array(u32, u32, u32);
static u32 mp_binary_get_val(u32, u32, u32, u32);
static void mp_binary_set_int(u32, u32, u32, u32);
static void mp_binary_set_val(u32, u32, u32, u32, u32);
static void mp_binary_set_val_array(u32, u32, u32, u32);
static void mp_binary_set_val_array_from_int(u32, u32, u32, u32);
static u32 mp_obj_is_package(u32);
static u32 mp_builtin___import__(u32, u32);
static void do_execute_raw_code(u32, u32, u32);
static u32 micropython_new_module(void);
static u32 micropython_init_module_from_mpy(u32, u32);
static u32 micropython_init_module_from_mpy_with_name(u32, u32, u32);
static u32 micropython_init_module(u32, u32, u32);
static u32 micropython_apply(u64, u64, u64);
static void micropython_init_frozen_modules(void);
static f64 rint_0(f64);
static f64 nearbyint_0(f64);
static u32 mp_builtin___build_class__(u32, u32);
static u32 mp_builtin_abs(u32);
static u32 mp_builtin_all(u32);
static u32 mp_builtin_any(u32);
static u32 mp_builtin_bin(u32);
static u32 mp_builtin_callable(u32);
static u32 mp_builtin_chr(u32);
static u32 mp_builtin_dir(u32, u32);
static u32 mp_builtin_divmod(u32, u32);
static u32 mp_builtin_hash(u32);
static u32 mp_builtin_hex(u32);
static u32 mp_builtin_iter(u32);
static u32 mp_builtin_max(u32, u32, u32);
static u32 mp_builtin_min_max(u32, u32, u32, u32);
static u32 mp_builtin_min(u32, u32, u32);
static u32 mp_builtin_next(u32);
static u32 mp_builtin_oct(u32);
static u32 mp_builtin_ord(u32);
static u32 mp_builtin_pow(u32, u32);
static u32 mp_builtin_print(u32, u32, u32);
static u32 mp_builtin___repl_print__(u32);
static u32 mp_builtin_repr(u32);
static u32 mp_builtin_round(u32, u32);
static u32 mp_builtin_sum(u32, u32);
static u32 mp_builtin_sorted(u32, u32, u32);
static u32 mp_builtin_getattr(u32, u32);
static u32 mp_builtin_setattr(u32, u32, u32);
static u32 mp_builtin_delattr(u32, u32);
static u32 mp_builtin_hasattr(u32, u32);
static u32 mp_builtin_globals(void);
static u32 mp_builtin_locals(void);
static f64 expm1_0(f64);
static f64 log2_0(f64);
static f64 log10_0(f64);
static f64 __expo2(f64);
static f64 cosh_0(f64);
static f64 sinh_0(f64);
static f64 tanh_0(f64);
static f64 log1p_0(f64);
static f64 acosh_0(f64);
static f64 asinh_0(f64);
static f64 atanh_0(f64);
static f64 __tan(f64, f64, u32);
static f64 tan_0(f64);
static f64 acos_0(f64);
static f64 asin_0(f64);
static f64 ceil_0(f64);
static f64 frexp_0(f64, u32);
static f64 ldexp_0(f64, u32);
static f64 modf_0(f64, u32);
static f64 trunc_0(f64);
static f64 erf_0(f64);
static f64 erfc2(u32, f64);
static f64 erfc_0(f64);
static f64 tgamma_0(f64);
static f64 __lgamma_r(f64, u32);
static f64 lgamma_0(f64);
static u32 mp_math_isclose(u32, u32, u32);
static void math_error(void);
static u32 mp_math_sqrt(u32);
static u32 mp_math_pow(u32, u32);
static u32 mp_math_exp(u32);
static u32 mp_math_expm1(u32);
static u32 mp_math_log(u32, u32);
static u32 mp_math_log2(u32);
static u32 mp_math_log10(u32);
static u32 mp_math_cosh(u32);
static u32 mp_math_sinh(u32);
static u32 mp_math_tanh(u32);
static u32 mp_math_acosh(u32);
static u32 mp_math_asinh(u32);
static u32 mp_math_atanh(u32);
static u32 mp_math_cos(u32);
static u32 mp_math_sin(u32);
static u32 mp_math_tan(u32);
static u32 mp_math_acos(u32);
static u32 mp_math_asin(u32);
static u32 mp_math_atan(u32);
static u32 mp_math_atan2(u32, u32);
static u32 mp_math_ceil(u32);
static u32 mp_math_copysign(u32, u32);
static u32 mp_math_fabs(u32);
static u32 mp_math_floor(u32);
static u32 mp_math_fmod(u32, u32);
static u32 mp_math_frexp(u32);
static u32 mp_math_ldexp(u32, u32);
static u32 mp_math_modf(u32);
static u32 mp_math_isfinite(u32);
static u32 mp_math_isinf(u32);
static u32 mp_math_isnan(u32);
static u32 mp_math_trunc(u32);
static u32 mp_math_radians(u32);
static u32 mp_math_degrees(u32);
static u32 mp_math_erf(u32);
static u32 mp_math_erfc(u32);
static u32 mp_math_gamma(u32);
static u32 mp_math_lgamma(u32);
static u32 mp_cmath_phase(u32);
static u32 mp_cmath_polar(u32);
static u32 mp_cmath_rect(u32, u32);
static u32 mp_cmath_exp(u32);
static u32 mp_cmath_log(u32);
static u32 mp_cmath_log10(u32);
static u32 mp_cmath_sqrt(u32);
static u32 mp_cmath_cos(u32);
static u32 mp_cmath_sin(u32);
static u32 mp_micropython_pystack_use(void);
static u32 mp_micropython_kbd_intr(u32);
static u32 mp_micropython_schedule(u32, u32);
static u32 struct_calcsize(u32);
static u32 calc_size_items(u32, u32);
static u32 struct_unpack_from(u32, u32);
static u32 struct_pack(u32, u32);
static void struct_pack_into_internal(u32, u32, u32, u32);
static u32 struct_pack_into(u32, u32);
static u32 get_fmt_num(u32);
static u32 mp_sys_exit(u32, u32);
static u32 mp_sys_print_exception(u32, u32);
static void add_trace(u32, u32);
static void mp_print_exception(u32);
static u32 mp_execute_bytecode(u32, u32);
static void mp_setup_code_state(u32, u32, u32, u32);
static void fun_pos_args_mismatch(u32, u32);
static u32 mp_opcode_format(u32, u32, u32);
static u32 mp_small_int_mul_overflow(u32, u32);
static u32 mp_small_int_modulo(u32, u32);
static u32 mp_small_int_floor_divide(u32, u32);
static u32 mp_frozen_stat(u32);
static u32 mp_find_frozen_module(u32, u32, u32);
static u32 mod_ujson_dump(u32, u32);
static u32 mod_ujson_dumps(u32);
static u32 mod_ujson_load(u32);
static u32 mod_ujson_loads(u32);
static void sha256_transform(u32, u32);
static void sha256_final(u32, u32);
static u32 uhashlib_sha256_make_new(u32, u32, u32, u32);
static u32 uhashlib_sha256_update(u32, u32);
static u32 uhashlib_sha256_digest(u32);
static u32 mod_binascii_hexlify(u32, u32);
static u32 mod_binascii_unhexlify(u32);
static u32 mod_binascii_a2b_base64(u32);
static u32 mod_binascii_b2a_base64(u32);
static void mp_hal_set_interrupt_char(u32);
static void mp_hal_stdout_tx_strn_cooked(u32, u32);
static u32 __signbitl(u64, u64);
static u32 ____fpclassifyl(u64, u64);
static void float128_print(u32, u32, u32);
static u32 float128_make_new(u32, u32, u32, u32);
static u32 float128_unary_op(u32, u32);
static u32 float128_binary_op(u32, u32, u32);
static u32 mp_obj_float128_binary_op(u32, u64, u64, u32);
static u32 mp_obj_new_float128(u64, u64);
static void mp_obj_float128_get(u32, u32);
static void mp_obj_float128_divmod(u32, u32);
static u32 float128_from_bytes(u32, u32);
static u32 float128_to_bytes(u32, u32);
static void mp_js_write(u32, u32);
static u32 mod_chain_s2n(u32);
static u32 mod_chain_n2s(u32);
static u32 mod_chain_read_action_data(void);
static u32 mod_chain_require_recipient(u32);
static u32 mod_chain_require_auth(u32);
static u32 mod_chain_require_auth2(u32, u32);
static u32 mod_chain_has_auth(u32);
static u32 mod_chain_is_account(u32);
static u32 mod_chain_send_inline(u32, u32);
static u32 mod_chain_send_inline_raw(u32);
static u32 mod_chain_send_context_free_inline(u32, u32);
static u32 mod_chain_send_context_free_inline_raw(u32);
static u32 mod_chain_publication_time(void);
static u32 mod_chain_current_receiver(void);
static u32 mod_chain_get_active_producers(void);
static u32 mod_chain_action_new(u32, u32);
static u32 mod_chain_action_add_permission(u32, u32);
static u32 mod_chain_action_send(u32);
static u32 mod_chain_action_free(u32);
static u32 mod_chain_transaction_new(u32, u32);
static u32 mod_chain_transaction_add_action(u32, u32);
static u32 mod_chain_transaction_add_context_free_action(u32, u32);
static u32 mod_chain_transaction_send(u32, u32);
static u32 mod_chain_transaction_cancel(u32);
static u32 mod_chain_transaction_free(u32);
static u32 mod_chain_assert_sha256(u32, u32);
static u32 mod_chain_assert_sha1(u32, u32);
static u32 mod_chain_assert_sha512(u32, u32);
static u32 mod_chain_assert_ripemd160(u32, u32);
static u32 mod_chain_assert_recover_key(u32, u32, u32);
static u32 mod_chain_sha256(u32);
static u32 mod_chain_sha1(u32);
static u32 mod_chain_sha512(u32);
static u32 mod_chain_ripemd160(u32);
static u32 mod_chain_recover_key(u32, u32);
static u32 mod_chain_db_store_i64(u32, u32);
static u32 mod_chain_db_update_i64(u32, u32, u32);
static u32 mod_chain_db_remove_i64(u32);
static u32 mod_chain_db_get_i64(u32);
static u32 mod_chain_db_next_i64(u32);
static u32 mod_chain_db_previous_i64(u32);
static u32 mod_chain_db_find_i64(u32, u32);
static u32 mod_chain_db_lowerbound_i64(u32, u32);
static u32 mod_chain_db_upperbound_i64(u32, u32);
static u32 mod_chain_db_end_i64(u32, u32);
static u32 mod_chain_db_store_i256(u32, u32);
static u32 mod_chain_db_update_i256(u32, u32, u32);
static u32 mod_chain_db_remove_i256(u32);
static u32 mod_chain_db_get_i256(u32);
static u32 mod_chain_db_next_i256(u32);
static u32 mod_chain_db_previous_i256(u32);
static u32 mod_chain_db_find_i256(u32, u32);
static u32 mod_chain_db_lowerbound_i256(u32, u32);
static u32 mod_chain_db_upperbound_i256(u32, u32);
static u32 mod_chain_db_end_i256(u32, u32);
static u32 mod_chain_db_get_table_row_count(u32, u32, u32);
static u32 mod_chain_call_contract(u32, u32);
static u32 mod_chain_get_code_hash(u32);
static u32 mod_chain_db_idx_store(u32, u32);
static void parse_secondary_value(u32, u32, u32);
static u32 mod_chain_db_idx_update(u32, u32);
static u32 mod_chain_db_idx_remove(u32, u32);
static u32 mod_chain_db_idx_next(u32, u32);
static u32 mod_chain_db_idx_previous(u32, u32);
static u32 mod_chain_db_idx_find_primary(u32, u32);
static u32 mod_chain_db_idx_find_secondary(u32, u32);
static u32 mod_chain_db_idx_lowerbound(u32, u32);
static u32 mod_chain_db_idx_upperbound(u32, u32);
static u32 mod_chain_db_idx_end(u32, u32);
static u32 mod_chain_get_resource_limits(u32);
static u32 mod_chain_set_resource_limits(u32, u32);
static u32 mod_chain_set_proposed_producers(u32);
static u32 mod_chain_is_privileged(u32);
static u32 mod_chain_set_privileged(u32, u32);
static u32 mod_chain_set_blockchain_parameters(u32);
static u32 mod_chain_get_blockchain_parameters(void);
static u32 mod_chain_eosio_assert(u32, u32);
static u32 mod_chain_eosio_assert_code(u32, u32);
static u32 mod_chain_current_time(void);
static u32 mod_chain_read_transaction(void);
static u32 mod_chain_tapos_block_num(void);
static u32 mod_chain_tapos_block_prefix(void);
static u32 mod_chain_expiration(void);
static u32 mod_chain_get_action(u32, u32);
static u32 mod_chain_get_context_free_data(u32);
static u32 mod_chain_token_create(u32, u32, u32);
static u32 mod_chain_token_issue(u32, u32);
static u32 mod_chain_token_transfer(u32, u32);
static u32 mod_chain_token_open(u32, u32);
static u32 mod_chain_token_retire(u32, u32);
static u32 mod_chain_token_close(u32, u32);
static u32 mod_chain_get_log(void);
static u32 mod_chain_enable_log(u32);
static u32 __errno_location(void);
static u32 __memalign(u32, u32);
static u32 _posix_memalign(u32, u32, u32);
static u32 operator_new_unsigned_int_(u32);
static u32 operator_new___unsigned_int_(u32);
static void operator_delete_void__(u32);
static void operator_delete___void__(u32);
static u32 operator_new_unsigned_int__std__align_val_t_(u32, u32);
static u32 operator_new___unsigned_int__std__align_val_t_(u32, u32);
static void operator_delete_void___std__align_val_t_(u32, u32);
static void operator_delete___void___std__align_val_t_(u32, u32);
static void std____1____vector_base_common_true_____throw_length_error___const(u32);
static void pointer_add(u32);
static u32 pointer_check(u32);
static void pointer_free(u32);
static u32 action_new(u64, u64, u64, u64, u32, u32);
static void void_std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level_______push_back_slow_path_eosio__permission_level_const___eosio__permission_level_const____(u32, u32);
static void std____1__vector_char__std____1__allocator_char_______append_unsigned_int_(u32, u32);
static void action_add_permission(u32, u64, u64);
static void action_send(u32);
static void std____1__vector_char__std____1__allocator_char____eosio__pack_eosio__action__eosio__action_const__(u32, u32);
static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__permission_level__eosio__datastream_char_____std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level____const__(u32, u32);
static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____std____1__vector_char__std____1__allocator_char____const__(u32, u32);
static void action_free(u32);
static u32 transaction_new(u32, u32, u32, u32, u32, u32);
static void transaction_add_action(u32, u32);
static u32 eosio__action__action_eosio__action_const__(u32, u32);
static void void_std____1__vector_eosio__action__std____1__allocator_eosio__action_______push_back_slow_path_eosio__action_const___eosio__action_const____(u32, u32);
static void transaction_add_context_free_action(u32, u32);
static void transaction_send(u32, u64, u64, u64, u32);
static void std____1__vector_char__std____1__allocator_char____eosio__pack_eosio__transaction__eosio__transaction_const__(u32, u32);
static u32 eosio__datastream_unsigned_int___eosio__operator___eosio__datastream_unsigned_int____eosio__datastream_unsigned_int____eosio__transaction_const__(u32, u32);
static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__transaction_header_const__(u32, u32);
static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__action__eosio__datastream_char_____std____1__vector_eosio__action__std____1__allocator_eosio__action____const__(u32, u32);
static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char____std____1__tuple_unsigned_short__std____1__vector_char__std____1__allocator_char________eosio__datastream_char_____std____1__vector_std____1__tuple_unsigned_short__std____1__vector_char__std____1__allocator_char_______std____1__allocator_std____1__tuple_unsigned_short__std____1__vector_char__std____1__allocator_char__________const__(u32, u32);
static u32 transaction_cancel(u64, u64);
static void transaction_free(u32);
static void set_blockchain_parameters(u32);
static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__blockchain_parameters_const__(u32, u32);
static void get_blockchain_parameters(u32);
static u32 eosio__datastream_char_const____eosio__operator___eosio__datastream_char_const_____eosio__datastream_char_const_____eosio__blockchain_parameters__(u32, u32);
static u64 mp_obj_int_get_ull(u32);
static u64 obj_to_u64(u32);
static void obj_int_to_u128(u32, u32);
static void obj_int_to_u256(u32, u32, u32);
static u32 u64_to_name(u64);
static void obj_pack_data(u32, u32);
static void micropython_raise_exception(u32);
static u64 mp_obj_name_to_ull(u32);
static u32 mp_obj_name_to_str_obj(u32);
static void mp_obj_name_print(u32, u32, u32);
static u32 mp_obj_name_binary_op_extra_cases(u32, u32, u32);
static u32 mp_obj_name_make_new(u32, u32, u32, u32);
static u32 name_from_bytes(u32, u32);
static u32 name_to_bytes(u32, u32);
static u32 name_to_int(u32, u32);
static u32 mp_name_to_str(u32, u32);
static u32 mp_obj_new_name_from_ull(u64);
static u32 mp_obj_name_unary_op(u32, u32);
static u32 mp_obj_name_binary_op(u32, u32, u32);
static u32 vm_load_code(u64, u32, u32);
static void vm_store_code(u64, u64, u32, u32);
static void vm_take_snapshot(u64);
static u32 vm_restore_from_snapshot(u64);
static void vm_send_inline(u64, u64, u64, u64, u32, u32);
static void void_std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level_______emplace_back_slow_path_eosio__permission_level___eosio__permission_level____(u32, u32);
static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__action_const__(u32, u32);
static void vm_send_context_free_inline(u64, u64, u32, u32);
static void eosio__action__send_context_free___const(u32);
static u64 s2n(u32, u32);
static u32 n2s(u64, u32, u32);
static u32 call_vm_api(u32, u32, u32, u32);
static u32 db_store_i256(u64, u64, u64, u32, u32, u32, u32);
static void db_update_i256(u32, u64, u32, u32);
static void db_remove_i256(u32);
static u32 db_get_i256(u32, u32, u32);
static u32 db_find_i256(u64, u64, u64, u32, u32);
static u32 db_previous_i256(u32, u32, u32);
static u32 db_next_i256(u32, u32, u32);
static u32 db_end_i256(u64, u64, u64);
static u32 db_lowerbound_i256(u64, u64, u64, u32, u32);
static u32 db_upperbound_i256(u64, u64, u64, u32, u32);
static u32 db_get_table_row_count(u64, u64, u64);
static void call_contract(u64, u32, u32);
static u32 call_contract_get_results(u32, u32);
static void __cxa_finalize(u32);
static void mp_js_init(u32);
static u32 mp_import_stat(u32);
static u32 mp_builtin_open(u32, u32, u32);
static void nlr_jump_fail(u32);
static void exec_code(u64, u64, u64);
static void apply(u64, u64, u64);
static void mp_hal_stdout_tx_strn(u32, u32);
static u32 time_time(void);
static u32 realloc_0(u32, u32);
static u32 get_current_memory(void);
static u32 malloc_0(u32);
static void free_0(u32);
static u64 get_code_version(void);
static void mp_js_hook(void);
static u32 setjmp_ex(u32);
static void longjmp_ex(u32, u32);
static void std____1____basic_string_common_true_____throw_length_error___const(u32);
static void eosio__token__create_eosio__name_const___eosio__asset_const__(u32, u32, u32);
static u32 eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___load_object_by_primary_iterator_int__const(u32, u32);
static void void_boost__pfr__detail__for_each_field_impl_boost__pfr__detail__sequence_tuple__tuple_eosio__asset_const___eosio__asset_const___eosio__name_const____eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__token__currency_stats___void__0__eosio__datastream_char_____eosio__token__currency_stats_const_____lambda__eosio__datastream_char___const____0u__1u__2u__eosio__datastream_char_____eosio__token__currency_stats____std____1__integer_sequence_unsigned_int__0u__1u__2u___std____1__integral_constant_bool__false__(u32, u32);
static void void_std____1__vector_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_______unsigned_long_long_____int____(u32, u32, u32, u32);
static void eosio__token__issue_eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const__(u32, u32, u32, u32);
static void void_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___modify_eosio__token__issue_eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______1__eosio__token__currency_stats_const___eosio__name__eosio__token__issue_eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______1___(u32, u32, u32);
static void eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const__(u32, u32, u32, u32);
static u32 eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___load_object_by_primary_iterator_int__const(u32, u32);
static void void_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___modify_eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const______5__eosio__token__account_const___eosio__name__eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const______5___(u32, u32, u32);
static void void_std____1__vector_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_______unsigned_long_long_____int____(u32, u32, u32, u32);
static void eosio__token__retire_eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const__(u32, u32, u32);
static void void_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___modify_eosio__token__retire_eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______2__eosio__token__currency_stats_const___eosio__name__eosio__token__retire_eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______2___(u32, u32, u32);
static void eosio__token__sub_balance_eosio__name_const___eosio__asset_const__(u32, u32, u32);
static void void_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___modify_eosio__token__sub_balance_eosio__name_const___eosio__asset_const______3__eosio__token__account_const___eosio__name__eosio__token__sub_balance_eosio__name_const___eosio__asset_const______3___(u32, u32, u64, u32);
static void eosio__token__transfer_eosio__name_const___eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const__(u32, u32, u32, u32, u32);
static u32 eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___get_unsigned_long_long__char_const___const(u32, u64, u32);
static void eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const__(u32, u32, u32, u32);
static void auto_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___const_iterator_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___emplace_eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6__eosio__name__eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6______lambda__eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6____operator___eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6___const(u32, u32);
static void eosio__token__close_eosio__name_const___eosio__symbol_const__(u32, u32, u32);
static void eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___erase_eosio__token__account_const__(u32, u32);
static void token_create(u64, u64, u64);
static void token_issue(u64, u64, u64, u32, u32);
static void token_transfer(u64, u64, u64, u64, u32, u32);
static void token_open(u64, u64, u64);
static void token_retire(u64, u64, u32, u32);
static void token_close(u64, u64);
static u64 token_get_balance(u64, u32);
static void token_set_balance(u64, u64, u32);
static void void_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___modify_token_set_balance____8__eosio__token__account_const___eosio__name__token_set_balance____8___(u32, u32, u32);
static void void_boost__pfr__detail__for_each_field_impl_boost__pfr__detail__sequence_tuple__tuple_eosio__asset___eosio__asset___eosio__name____eosio__datastream_char_const____eosio__operator___eosio__datastream_char_const____eosio__token__currency_stats___void__0__eosio__datastream_char_const_____eosio__token__currency_stats_____lambda__eosio__datastream_char_const______0u__1u__2u__eosio__datastream_char_const_____eosio__token__currency_stats____std____1__integer_sequence_unsigned_int__0u__1u__2u___std____1__integral_constant_bool__false__(u32, u32);

static u32 g0;
static u32 g1;
static u32 g2;

static void init_globals(void) {
  g0 = 5120u;
  g1 = 47060u;
  g2 = 47060u;
}

static wasm_rt_memory_t M0;

static wasm_rt_table_t T0;

static void __wasm_call_ctors(void) {
  FUNC_PROLOGUE;
  FUNC_EPILOGUE;
}

static u32 nlr_push_tail(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5144));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 168), i1);
  i0 = p0;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5132));
  i32_store((&M0), (u64)(i0 + 164), i1);
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5144), i1);
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static void nlr_pop(void) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5144));
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 5144), i1);
  FUNC_EPILOGUE;
}

static void nlr_jump(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5144));
  l0 = i0;
  if (i0) {goto B0;}
  i0 = p0;
  nlr_jump_fail(i0);
  UNREACHABLE;
  B0:;
  i0 = p0;
  mp_print_exception(i0);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 1u;
  longjmp_ex(i0, i1);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static u32 m_malloc(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = malloc_0(i0);
  l0 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = p0;
  m_malloc_fail(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 m_malloc_maybe(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = malloc_0(i0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 m_malloc0(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = malloc_0(i0);
  l0 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 0u;
  i2 = p0;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = p0;
  m_malloc_fail(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 m_realloc(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  i0 = realloc_0(i0, i1);
  p0 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = p1;
  m_malloc_fail(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 m_realloc_maybe(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  l0 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i0 = realloc_0(i0, i1);
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void m_free(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  free_0(i0);
  FUNC_EPILOGUE;
}

static void mp_pystack_init(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 5128), i1);
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5124), i1);
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5132), i1);
  FUNC_EPILOGUE;
}

static u32 mp_pystack_alloc(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5132));
  l0 = i0;
  i1 = p0;
  i2 = 7u;
  i1 += i2;
  i2 = 4294967288u;
  i1 &= i2;
  i0 += i1;
  p0 = i0;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5128));
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5132), i1);
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 32352u;
  i1 = 1714u;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 memcmp_0(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B1;}
  L2: vm_checktime();
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l0 = i0;
    i1 = p1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    l1 = i1;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i0 = p2;
    i1 = 4294967295u;
    i0 += i1;
    p2 = i0;
    if (i0) {goto L2;}
  B1:;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = l1;
  i0 -= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 strlen_0(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  l0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  l0 = i0;
  L3: vm_checktime();
    i0 = l0;
    i1 = 3u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l1 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    l0 = i0;
    i0 = l1;
    if (i0) {goto L3;}
  i0 = l2;
  i1 = 4294967295u;
  i0 += i1;
  i1 = p0;
  i0 -= i1;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = 4294967292u;
  i0 += i1;
  l0 = i0;
  L4: vm_checktime();
    i0 = l0;
    i1 = 4u;
    i0 += i1;
    l0 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i1 = 4294967295u;
    i0 ^= i1;
    i1 = l1;
    i2 = 4278124287u;
    i1 += i2;
    i0 &= i1;
    i1 = 2155905152u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto L4;}
  i0 = l1;
  i1 = 255u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  L5: vm_checktime();
    i0 = l0;
    i0 = i32_load8_u((&M0), (u64)(i0 + 1));
    l1 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    l0 = i0;
    i0 = l1;
    if (i0) {goto L5;}
  i0 = l2;
  i1 = p0;
  i0 -= i1;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = p0;
  i0 -= i1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i0 -= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 qstr_compute_hash(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i0 += i1;
  l0 = i0;
  i0 = 5381u;
  p1 = i0;
  L1: vm_checktime();
    i0 = p1;
    i1 = 33u;
    i0 *= i1;
    i1 = p0;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i0 ^= i1;
    p1 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L1;}
  i0 = p1;
  i1 = 65535u;
  i0 &= i1;
  p0 = i0;
  i1 = p0;
  i1 = !(i1);
  i0 += i1;
  goto Bfunc;
  B0:;
  i0 = 5381u;
  i1 = 5381u;
  i1 = !(i1);
  i0 += i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void qstr_init(void) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 42880u;
  i32_store((&M0), (u64)(i0 + 5148), i1);
  i0 = 0u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 5300), i1);
  FUNC_EPILOGUE;
}

static u32 qstr_find_strn(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B3;}
  i0 = p0;
  i1 = p1;
  i0 += i1;
  l0 = i0;
  i0 = 5381u;
  l1 = i0;
  i0 = p0;
  l2 = i0;
  L4: vm_checktime();
    i0 = l1;
    i1 = 33u;
    i0 *= i1;
    i1 = l2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i0 ^= i1;
    l1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L4;}
  i0 = l1;
  i1 = 65535u;
  i0 &= i1;
  l2 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5148));
  l4 = i0;
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = 5381u;
  l2 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5148));
  l4 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  i0 = l2;
  i1 = l2;
  i1 = !(i1);
  i0 += i1;
  l5 = i0;
  L5: vm_checktime();
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    l2 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B6;}
    i0 = l4;
    i1 = 16u;
    i0 += i1;
    l6 = i0;
    i1 = l2;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l0 = i0;
    i0 = l6;
    l2 = i0;
    L7: vm_checktime();
      i0 = l2;
      i0 = i32_load((&M0), (u64)(i0));
      l1 = i0;
      i0 = i32_load8_u((&M0), (u64)(i0 + 1));
      i1 = 8u;
      i0 <<= (i1 & 31);
      i1 = l1;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i0 |= i1;
      i1 = l5;
      i0 = i0 != i1;
      if (i0) {goto B8;}
      i0 = l1;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      i1 = p1;
      i0 = i0 != i1;
      if (i0) {goto B8;}
      i0 = l1;
      i1 = 3u;
      i0 += i1;
      i1 = p0;
      i2 = p1;
      i0 = memcmp_0(i0, i1, i2);
      i0 = !(i0);
      if (i0) {goto B0;}
      B8:;
      i0 = l2;
      i1 = 4u;
      i0 += i1;
      l2 = i0;
      i1 = l0;
      i0 = i0 < i1;
      if (i0) {goto L7;}
    B6:;
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto L5;}
  B1:;
  i0 = l3;
  goto Bfunc;
  B0:;
  i0 = l4;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l2;
  i2 = l6;
  i1 -= i2;
  i2 = 2u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i0 += i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 qstr_from_str(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p0;
  i1 = strlen_0(i1);
  i0 = qstr_from_strn(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static u32 qstr_from_strn(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i1 = p1;
  i0 += i1;
  l0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = 5381u;
  l1 = i0;
  i0 = p0;
  l2 = i0;
  L3: vm_checktime();
    i0 = l1;
    i1 = 33u;
    i0 *= i1;
    i1 = l2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i0 ^= i1;
    l1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L3;}
  i0 = l1;
  i1 = 65535u;
  i0 &= i1;
  l2 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5148));
  l3 = i0;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = 5381u;
  l2 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5148));
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l2;
  i1 = l2;
  i1 = !(i1);
  i0 += i1;
  l4 = i0;
  L5: vm_checktime();
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    l2 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B6;}
    i0 = l3;
    i1 = 16u;
    i0 += i1;
    l5 = i0;
    i1 = l2;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l6 = i0;
    i0 = l5;
    l2 = i0;
    L7: vm_checktime();
      i0 = l2;
      i0 = i32_load((&M0), (u64)(i0));
      l1 = i0;
      i0 = i32_load8_u((&M0), (u64)(i0 + 1));
      i1 = 8u;
      i0 <<= (i1 & 31);
      i1 = l1;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i0 |= i1;
      i1 = l4;
      i0 = i0 != i1;
      if (i0) {goto B8;}
      i0 = l1;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      i1 = p1;
      i0 = i0 != i1;
      if (i0) {goto B8;}
      i0 = l1;
      i1 = 3u;
      i0 += i1;
      i1 = p0;
      i2 = p1;
      i0 = memcmp_0(i0, i1, i2);
      i0 = !(i0);
      if (i0) {goto B4;}
      B8:;
      i0 = l2;
      i1 = 4u;
      i0 += i1;
      l2 = i0;
      i1 = l6;
      i0 = i0 < i1;
      if (i0) {goto L7;}
    B6:;
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    if (i0) {goto L5;}
    goto B0;
  B4:;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l2;
  i2 = l5;
  i1 -= i2;
  i2 = 2u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i0 += i1;
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l2;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = 256u;
  i0 = i0 >= i1;
  if (i0) {goto B11;}
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5300));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5308));
  i1 = l2;
  i0 += i1;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5304));
  l6 = i1;
  i0 = i0 <= i1;
  if (i0) {goto B15;}
  i0 = l1;
  i1 = l6;
  i2 = l2;
  i1 += i2;
  i2 = 0u;
  i0 = m_realloc_maybe(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = 0u;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5304));
  i2 = l2;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 5304), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5300));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B13;}
  B15:;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5308));
  l6 = i0;
  goto B12;
  B14:;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5300));
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5308));
  i2 = 0u;
  i0 = m_realloc_maybe(i0, i1, i2);
  i0 = 0u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 5300), i1);
  B13:;
  i0 = 0u;
  i1 = l2;
  i2 = 128u;
  i3 = l2;
  i4 = 128u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  l4 = i1;
  i1 = m_malloc_maybe(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 5300), i1);
  i0 = l1;
  if (i0) {goto B16;}
  i0 = 0u;
  i1 = l2;
  i1 = m_malloc_maybe(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 5300), i1);
  i0 = l2;
  l4 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B9;}
  B16:;
  i0 = 0u;
  l6 = i0;
  i0 = 0u;
  i1 = l4;
  i32_store((&M0), (u64)(i0 + 5304), i1);
  i0 = 0u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 5308), i1);
  B12:;
  i0 = p1;
  i1 = 3u;
  i0 += i1;
  l4 = i0;
  i0 = 0u;
  i1 = l6;
  i2 = l2;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 5308), i1);
  i0 = l1;
  i1 = l6;
  i0 += i1;
  l6 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B18;}
  i0 = 5381u;
  l1 = i0;
  i0 = p0;
  l2 = i0;
  L19: vm_checktime();
    i0 = l1;
    i1 = 33u;
    i0 *= i1;
    i1 = l2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i0 ^= i1;
    l1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L19;}
  i0 = l1;
  i1 = 65535u;
  i0 &= i1;
  l2 = i0;
  goto B17;
  B18:;
  i0 = 5381u;
  l2 = i0;
  B17:;
  i0 = l6;
  i1 = p1;
  i32_store8((&M0), (u64)(i0 + 2), i1);
  i0 = l6;
  i1 = l2;
  i2 = l2;
  i2 = !(i2);
  i1 += i2;
  l2 = i1;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l6;
  i1 = l2;
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = l6;
  i1 = 3u;
  i0 += i1;
  i1 = p0;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l6;
  i1 = l4;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5148));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l4 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B21;}
  i0 = l2;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  goto B20;
  B21:;
  i0 = l4;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l2 = i0;
  i1 = 10u;
  i2 = l2;
  i3 = 10u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 16u;
  i0 += i1;
  i0 = m_malloc_maybe(i0);
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = 0u;
  l1 = i0;
  i0 = l2;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5148));
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5148));
  l4 = i0;
  i0 = 0u;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 5148), i1);
  i0 = l4;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = l4;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l4 = i0;
  i0 = l2;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l2;
  i1 = l4;
  i2 = l0;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  B20:;
  i0 = l2;
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 16u;
  i0 += i1;
  i1 = l6;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = l1;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5148));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i0 += i1;
  i1 = 4294967295u;
  i0 += i1;
  goto Bfunc;
  B11:;
  i0 = 32352u;
  i1 = 26476u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B10:;
  i0 = p1;
  m_malloc_fail(i0);
  UNREACHABLE;
  B9:;
  i0 = l2;
  m_malloc_fail(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 qstr_hash(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 5148u;
  l0 = i0;
  L0: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    l0 = i0;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    l1 = i0;
    i1 = p0;
    i0 = i0 > i1;
    if (i0) {goto L0;}
  i0 = l0;
  i1 = p0;
  i2 = l1;
  i1 -= i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 16u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 1));
  i1 = 8u;
  i0 <<= (i1 & 31);
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i0 |= i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 qstr_len(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 5148u;
  l0 = i0;
  L0: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    l0 = i0;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    l1 = i0;
    i1 = p0;
    i0 = i0 > i1;
    if (i0) {goto L0;}
  i0 = l0;
  i1 = p0;
  i2 = l1;
  i1 -= i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 16u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load8_u((&M0), (u64)(i0 + 2));
  FUNC_EPILOGUE;
  return i0;
}

static u32 qstr_str(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 5148u;
  l0 = i0;
  L0: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    l0 = i0;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    l1 = i0;
    i1 = p0;
    i0 = i0 > i1;
    if (i0) {goto L0;}
  i0 = l0;
  i1 = p0;
  i2 = l1;
  i1 -= i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 16u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 3u;
  i0 += i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 qstr_data(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 5148u;
  l0 = i0;
  L0: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    l0 = i0;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    l1 = i0;
    i1 = p0;
    i0 = i0 > i1;
    if (i0) {goto L0;}
  i0 = p1;
  i1 = l0;
  i2 = p0;
  i3 = l1;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i2 = 16u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l0 = i1;
  i1 = i32_load8_u((&M0), (u64)(i1 + 2));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 3u;
  i0 += i1;
  FUNC_EPILOGUE;
  return i0;
}

static void vstr_init(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i3 = p1;
  i1 = i3 ? i1 : i2;
  p1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i1 = m_malloc(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 12));
  i2 = 254u;
  i1 &= i2;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  FUNC_EPILOGUE;
}

static void vstr_init_len(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i1 += i2;
  l0 = i1;
  i2 = 1u;
  i3 = l0;
  i1 = i3 ? i1 : i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = l0;
  i1 = m_malloc(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 12));
  i2 = 254u;
  i1 &= i2;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  FUNC_EPILOGUE;
}

static void vstr_init_fixed_buf(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 12));
  i2 = 1u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  FUNC_EPILOGUE;
}

static void vstr_init_print(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i3 = p1;
  i1 = i3 ? i1 : i2;
  p1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = m_malloc(i0);
  p1 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 12));
  i2 = 254u;
  i1 &= i2;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void vstr_add_strn(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = p2;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l1;
  i3 = 24u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  l0 = i2;
  i1 = m_realloc(i1, i2);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  goto B1;
  B2:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  B1:;
  i0 = l1;
  i1 = l0;
  i0 += i1;
  i1 = p1;
  i2 = p2;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p2;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 32352u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void vstr_clear(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  m_free(i0);
  B0:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static u32 vstr_new(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p0;
  i2 = 1u;
  i3 = p0;
  i1 = i3 ? i1 : i2;
  p0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p0;
  i1 = m_malloc(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 12));
  i2 = 254u;
  i1 &= i2;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void vstr_free(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  m_free(i0);
  B1:;
  i0 = p0;
  m_free(i0);
  B0:;
  FUNC_EPILOGUE;
}

static u32 vstr_extend(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = p1;
  i2 += i3;
  i1 = m_realloc(i1, i2);
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i2 = p1;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l1;
  i0 += i1;
  goto Bfunc;
  B0:;
  i0 = 32352u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 vstr_add_len(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = p1;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l1;
  i3 = 24u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  l1 = i2;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = p1;
  i0 += i1;
  l1 = i0;
  goto B1;
  B2:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  B1:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l0;
  i0 += i1;
  goto Bfunc;
  B0:;
  i0 = 32352u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 vstr_null_terminated_str(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l1 = i1;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i3 = 1u;
  i2 += i3;
  i1 = m_realloc(i1, i2);
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B1;
  B2:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  B1:;
  i0 = l0;
  i1 = l1;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  goto Bfunc;
  B0:;
  i0 = 32352u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void vstr_add_byte(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i3 = 25u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  l0 = i2;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  goto B1;
  B2:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  B1:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l0;
  i0 += i1;
  i1 = p1;
  i32_store8((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 32352u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void vstr_add_char(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = 127u;
  i0 = i0 > i1;
  if (i0) {goto B14;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B13;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i3 = 25u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  l0 = i2;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  goto B12;
  B14:;
  i0 = p1;
  i1 = 2047u;
  i0 = i0 > i1;
  if (i0) {goto B11;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 2u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B10;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i3 = 26u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  l0 = i2;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 2u;
  i0 += i1;
  l1 = i0;
  goto B9;
  B13:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  B12:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l0;
  i0 += i1;
  i1 = p1;
  i32_store8((&M0), (u64)(i0), i1);
  goto Bfunc;
  B11:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = p1;
  i1 = 65535u;
  i0 = i0 > i1;
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 3u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B7;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i3 = 27u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  l0 = i2;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 3u;
  i0 += i1;
  l1 = i0;
  goto B6;
  B10:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  B9:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l0;
  i0 += i1;
  p0 = i0;
  i1 = p1;
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = p0;
  i1 = p1;
  i2 = 6u;
  i1 >>= (i2 & 31);
  i2 = 192u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0), i1);
  goto Bfunc;
  B8:;
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B5;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i3 = 28u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  l0 = i2;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  goto B4;
  B7:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  B6:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l0;
  i0 += i1;
  p0 = i0;
  i1 = p1;
  i2 = 12u;
  i1 >>= (i2 & 31);
  i2 = 224u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 2), i1);
  i0 = p0;
  i1 = p1;
  i2 = 6u;
  i1 >>= (i2 & 31);
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  goto Bfunc;
  B5:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  B4:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l0;
  i0 += i1;
  p0 = i0;
  i1 = p1;
  i2 = 18u;
  i1 >>= (i2 & 31);
  i2 = 240u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 3), i1);
  i0 = p0;
  i1 = p1;
  i2 = 12u;
  i1 >>= (i2 & 31);
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = p0;
  i1 = p1;
  i2 = 6u;
  i1 >>= (i2 & 31);
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 2), i1);
  goto Bfunc;
  B3:;
  i0 = 32352u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B2:;
  i0 = 32352u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B1:;
  i0 = 32352u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B0:;
  i0 = 32352u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void vstr_add_str(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = strlen_0(i0);
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l1 = i1;
  i0 += i1;
  l2 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l2;
  i3 = 24u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  l1 = i2;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B1;
  B2:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  B1:;
  i0 = l2;
  i1 = l1;
  i0 += i1;
  i1 = p1;
  i2 = l0;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l0;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 32352u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void vstr_ins_byte(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i3 = 25u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  l1 = i2;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  goto B1;
  B2:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  B1:;
  i0 = l2;
  i1 = l0;
  i2 = p1;
  i3 = l0;
  i4 = p1;
  i3 = i3 < i4;
  i1 = i3 ? i1 : i2;
  p1 = i1;
  i0 += i1;
  l2 = i0;
  i1 = 1u;
  i0 += i1;
  i1 = l2;
  i2 = l0;
  i3 = p1;
  i2 -= i3;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i0 += i1;
  i1 = p2;
  i32_store8((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 32352u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void vstr_cut_tail_bytes(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i1 = p1;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  l0 = i2;
  i3 = l0;
  i4 = p1;
  i3 = i3 < i4;
  i1 = i3 ? i1 : i2;
  i2 = p1;
  i1 -= i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  FUNC_EPILOGUE;
}

static void plat_print_strn(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = p2;
  mp_hal_stdout_tx_strn_cooked(i0, i1);
  FUNC_EPILOGUE;
}

static u32 mp_print_str(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = strlen_0(i0);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i2 = l0;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_print_strn(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p4;
  i32_store8((&M0), (u64)(i0 + 15), i1);
  i0 = 26512u;
  l1 = i0;
  i0 = 16u;
  l2 = i0;
  i0 = p4;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = p4;
  i1 = 32u;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  i0 = p4;
  i1 = 48u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = 26544u;
  l1 = i0;
  B8:;
  i0 = p5;
  i1 = p2;
  i0 -= i1;
  l3 = i0;
  i0 = p3;
  i1 = 128u;
  i0 &= i1;
  if (i0) {goto B6;}
  goto B5;
  B7:;
  i0 = l0;
  i1 = 15u;
  i0 += i1;
  l1 = i0;
  i0 = 1u;
  l2 = i0;
  i0 = p5;
  i1 = p2;
  i0 -= i1;
  l3 = i0;
  i0 = p3;
  i1 = 128u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B5;}
  B6:;
  i0 = l3;
  i1 = l3;
  i2 = 2u;
  i1 = I32_DIV_S(i1, i2);
  p4 = i1;
  i0 -= i1;
  l4 = i0;
  i0 = p4;
  l3 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B4;}
  goto B2;
  B5:;
  i0 = 0u;
  l4 = i0;
  i0 = l3;
  l5 = i0;
  i0 = p3;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = l3;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  B4:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p5 = i0;
  i0 = l3;
  p4 = i0;
  L9: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l1;
    i2 = l2;
    i3 = p4;
    i4 = p4;
    i5 = l2;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p3 = i2;
    i3 = p5;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = p4;
    i1 = p3;
    i0 -= i1;
    p4 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L9;}
  i0 = l4;
  l5 = i0;
  i0 = l3;
  l4 = i0;
  B3:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B1;
  B2:;
  i0 = l4;
  l5 = i0;
  i0 = 0u;
  l4 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i2 = p2;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
  i0 = l4;
  i1 = p2;
  i0 += i1;
  l4 = i0;
  B0:;
  i0 = l5;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B10;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p5 = i0;
  i0 = l5;
  p4 = i0;
  L11: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l1;
    i2 = l2;
    i3 = p4;
    i4 = p4;
    i5 = l2;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p3 = i2;
    i3 = p5;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = p4;
    i1 = p3;
    i0 -= i1;
    p4 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L11;}
  i0 = l4;
  i1 = l5;
  i0 += i1;
  l4 = i0;
  B10:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_print_mp_int(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5, u32 p6, u32 p7) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6, i7;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p1;
  i0 = mp_obj_get_int(i0);
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  p1 = i0;
  B0:;
  i0 = p4;
  i1 = 129u;
  i0 &= i1;
  i0 = !(i0);
  i1 = p5;
  i2 = 48u;
  i1 = i1 == i2;
  i0 &= i1;
  l1 = i0;
  i0 = l0;
  i1 = 43u;
  i0 += i1;
  l2 = i0;
  i0 = p1;
  i0 = mp_obj_int_sign(i0);
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = p4;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p4;
  i1 = 4u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 32u;
  i32_store8((&M0), (u64)(i0 + 43), i1);
  i0 = l0;
  i1 = 44u;
  i0 += i1;
  l2 = i0;
  goto B2;
  B3:;
  i0 = l0;
  i1 = 43u;
  i32_store8((&M0), (u64)(i0 + 43), i1);
  i0 = l0;
  i1 = 44u;
  i0 += i1;
  l2 = i0;
  B2:;
  i0 = p7;
  i1 = p6;
  i0 = (u32)((s32)i0 > (s32)i1);
  l3 = i0;
  i0 = 0u;
  i1 = p7;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i0 = p4;
  i1 = 16u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p2;
  i1 = 16u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = p2;
  i1 = 8u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = p2;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 48u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = p3;
  i2 = 1u;
  i1 += i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = l2;
  i1 = 2u;
  i0 += i1;
  l2 = i0;
  goto B4;
  B6:;
  i0 = l2;
  i1 = 48u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = p3;
  i2 = 23u;
  i1 += i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = l2;
  i1 = 2u;
  i0 += i1;
  l2 = i0;
  goto B4;
  B5:;
  i0 = l2;
  i1 = 48u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p4;
  i1 = 512u;
  i0 &= i1;
  if (i0) {goto B7;}
  i0 = l2;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  goto B4;
  B7:;
  i0 = l2;
  i1 = 1u;
  i0 += i1;
  i1 = p3;
  i2 = 14u;
  i1 += i2;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 2u;
  i0 += i1;
  l2 = i0;
  B4:;
  i0 = p7;
  i1 = p6;
  i2 = l3;
  i0 = i2 ? i0 : i1;
  p7 = i0;
  i0 = l2;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 16u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 3), i1);
  i0 = p4;
  i1 = 26u;
  i0 <<= (i1 & 31);
  i1 = 31u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = 44u;
  i0 &= i1;
  l3 = i0;
  i0 = p4;
  i1 = 64u;
  i0 |= i1;
  i1 = p4;
  i2 = l4;
  i3 = 1u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  l5 = i0;
  i1 = 64u;
  i0 &= i1;
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = 4u;
  i2 += i3;
  i3 = p1;
  i4 = p2;
  i5 = 0u;
  i6 = p3;
  i7 = 24u;
  i6 <<= (i7 & 31);
  i7 = 24u;
  i6 = (u32)((s32)i6 >> (i7 & 31));
  i7 = l3;
  i0 = mp_obj_int_formatted(i0, i1, i2, i3, i4, i5, i6, i7);
  l7 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 45u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 45u;
  i32_store8((&M0), (u64)(i0 + 3), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4294967295u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l7;
  i1 = 1u;
  i0 += i1;
  l7 = i0;
  goto B8;
  B9:;
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = 4u;
  i2 += i3;
  i3 = p1;
  i4 = p2;
  i5 = l0;
  i6 = 43u;
  i5 += i6;
  i6 = p3;
  i7 = 24u;
  i6 <<= (i7 & 31);
  i7 = 24u;
  i6 = (u32)((s32)i6 >> (i7 & 31));
  i7 = l3;
  i0 = mp_obj_int_formatted(i0, i1, i2, i3, i4, i5, i6, i7);
  l7 = i0;
  B8:;
  i0 = p7;
  i1 = p6;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = l2;
  i1 = l0;
  i2 = 43u;
  i1 += i2;
  i0 -= i1;
  p2 = i0;
  i0 = 0u;
  p7 = i0;
  i0 = 0u;
  p3 = i0;
  i0 = l4;
  i1 = 2u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B13;}
  i0 = l4;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  p1 = i1;
  i2 = p1;
  i3 = l4;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = p1;
  i1 = p2;
  i0 += i1;
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 3));
  i2 = 0u;
  i1 = i1 != i2;
  i0 += i1;
  p1 = i0;
  B14:;
  i0 = 0u;
  p3 = i0;
  i0 = 0u;
  p7 = i0;
  i0 = l1;
  i1 = p1;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B15;}
  i0 = l1;
  i1 = p1;
  i0 -= i1;
  l3 = i0;
  i0 = l5;
  i1 = 1u;
  i0 &= i1;
  p1 = i0;
  if (i0) {goto B16;}
  i0 = 0u;
  p7 = i0;
  i0 = l5;
  i1 = 4294967294u;
  i0 &= i1;
  p4 = i0;
  i0 = 48u;
  p5 = i0;
  i0 = l3;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B12;}
  i0 = 0u;
  i1 = p1;
  i0 -= i1;
  i1 = l3;
  i0 &= i1;
  p7 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p6 = i0;
  i0 = l3;
  p1 = i0;
  L17: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 26512u;
    i2 = p1;
    i3 = 16u;
    i4 = p1;
    i5 = 16u;
    i4 = (u32)((s32)i4 < (s32)i5);
    i2 = i4 ? i2 : i3;
    l2 = i2;
    i3 = p6;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = p1;
    i1 = l2;
    i0 -= i1;
    p1 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L17;}
  i0 = l3;
  p3 = i0;
  i0 = p4;
  i1 = 64u;
  i0 &= i1;
  if (i0) {goto B11;}
  goto B10;
  B16:;
  i0 = l3;
  p7 = i0;
  B15:;
  i0 = l5;
  i1 = 4294967294u;
  i0 &= i1;
  p4 = i0;
  i0 = 48u;
  p5 = i0;
  B13:;
  i0 = p4;
  i1 = 64u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B10;}
  goto B11;
  B12:;
  i0 = 0u;
  p3 = i0;
  i0 = p4;
  i1 = 64u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B10;}
  B11:;
  i0 = l0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 3));
  i0 = !(i0);
  if (i0) {goto B18;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 3u;
  i1 += i2;
  i2 = 1u;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
  i0 = l1;
  i1 = 4294967295u;
  i0 += i1;
  l1 = i0;
  i0 = p3;
  i1 = 1u;
  i0 += i1;
  p3 = i0;
  B18:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = 1u;
  i1 = p2;
  i0 -= i1;
  l3 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B20;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p6 = i0;
  i0 = l3;
  p1 = i0;
  L21: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 26512u;
    i2 = p1;
    i3 = 16u;
    i4 = p1;
    i5 = 16u;
    i4 = (u32)((s32)i4 < (s32)i5);
    i2 = i4 ? i2 : i3;
    l2 = i2;
    i3 = p6;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = p1;
    i1 = l2;
    i0 -= i1;
    p1 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L21;}
    goto B19;
  B20:;
  i0 = 0u;
  l3 = i0;
  B19:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 43u;
  i1 += i2;
  i2 = p2;
  i3 = p0;
  i4 = 4u;
  i3 += i4;
  i3 = i32_load((&M0), (u64)(i3));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
  i0 = l1;
  i1 = p2;
  i0 -= i1;
  l1 = i0;
  i0 = p3;
  i1 = p2;
  i0 += i1;
  i1 = l3;
  i0 += i1;
  p3 = i0;
  B10:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p2 = i0;
  i0 = l0;
  i1 = p5;
  i32_store8((&M0), (u64)(i0 + 47), i1);
  i0 = l4;
  i1 = l1;
  i2 = l4;
  i3 = 1u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i0 = 26512u;
  p6 = i0;
  i0 = 16u;
  l2 = i0;
  i0 = p5;
  i0 = !(i0);
  if (i0) {goto B30;}
  i0 = p5;
  i1 = 255u;
  i0 &= i1;
  l4 = i0;
  i1 = 32u;
  i0 = i0 == i1;
  if (i0) {goto B30;}
  i0 = l4;
  i1 = 48u;
  i0 = i0 != i1;
  if (i0) {goto B29;}
  i0 = 26544u;
  p6 = i0;
  B30:;
  i0 = p1;
  i1 = p2;
  i0 -= i1;
  l1 = i0;
  i0 = p4;
  i1 = 128u;
  i0 &= i1;
  if (i0) {goto B28;}
  goto B27;
  B29:;
  i0 = l0;
  i1 = 47u;
  i0 += i1;
  p6 = i0;
  i0 = 1u;
  l2 = i0;
  i0 = p1;
  i1 = p2;
  i0 -= i1;
  l1 = i0;
  i0 = p4;
  i1 = 128u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B27;}
  B28:;
  i0 = l1;
  i1 = l1;
  i2 = 2u;
  i1 = I32_DIV_S(i1, i2);
  p1 = i1;
  i0 -= i1;
  p5 = i0;
  i0 = p1;
  l1 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B26;}
  goto B24;
  B27:;
  i0 = 0u;
  p5 = i0;
  i0 = l1;
  l3 = i0;
  i0 = p4;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B25;}
  i0 = l1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B24;}
  B26:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  i0 = l1;
  p1 = i0;
  L31: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p6;
    i2 = l2;
    i3 = p1;
    i4 = p1;
    i5 = l2;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p4 = i2;
    i3 = l4;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = p1;
    i1 = p4;
    i0 -= i1;
    p1 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L31;}
  i0 = p5;
  l3 = i0;
  i0 = l1;
  p5 = i0;
  B25:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B22;}
  goto B23;
  B24:;
  i0 = p5;
  l3 = i0;
  i0 = 0u;
  p5 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B22;}
  B23:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l7;
  i2 = p2;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
  i0 = p5;
  i1 = p2;
  i0 += i1;
  p5 = i0;
  B22:;
  i0 = l3;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B32;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  i0 = l3;
  p1 = i0;
  L33: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p6;
    i2 = l2;
    i3 = p1;
    i4 = p1;
    i5 = l2;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p4 = i2;
    i3 = l4;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = p1;
    i1 = p4;
    i0 -= i1;
    p1 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L33;}
  i0 = p5;
  i1 = l3;
  i0 += i1;
  p5 = i0;
  B32:;
  i0 = p5;
  i1 = p3;
  i0 += i1;
  p6 = i0;
  i0 = p7;
  i0 = !(i0);
  if (i0) {goto B34;}
  i0 = p7;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B36;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p4 = i0;
  i0 = p7;
  p1 = i0;
  L37: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 26512u;
    i2 = p1;
    i3 = 16u;
    i4 = p1;
    i5 = 16u;
    i4 = (u32)((s32)i4 < (s32)i5);
    i2 = i4 ? i2 : i3;
    l2 = i2;
    i3 = p4;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = p1;
    i1 = l2;
    i0 -= i1;
    p1 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L37;}
    goto B35;
  B36:;
  i0 = 0u;
  p7 = i0;
  B35:;
  i0 = p7;
  i1 = p6;
  i0 += i1;
  p6 = i0;
  B34:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B38;}
  i0 = p1;
  m_free(i0);
  B38:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p6;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_print_float(u32 p0, f64 p1, u32 p2, u32 p3, u32 p4, u32 p5, u32 p6) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  f64 d0;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 43u;
  l1 = i0;
  i0 = p3;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p3;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 32u;
  i0 &= i1;
  l1 = i0;
  B0:;
  d0 = p1;
  i1 = l0;
  i2 = 32u;
  i3 = p2;
  i4 = p6;
  i5 = l1;
  i0 = mp_format_float(d0, i1, i2, i3, i4, i5);
  l1 = i0;
  i0 = p3;
  i1 = 256u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  i1 = 31u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = l2;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l1;
  i0 += i1;
  i1 = 37u;
  i32_store8((&M0), (u64)(i0), i1);
  goto B1;
  B2:;
  i0 = l1;
  l2 = i0;
  B1:;
  i0 = 0u;
  l3 = i0;
  i0 = l0;
  l4 = i0;
  i0 = p3;
  i1 = 64u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i0 = i32_load8_s((&M0), (u64)(i0));
  i1 = 47u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B3;}
  i0 = 1u;
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 1u;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
  i0 = l2;
  i1 = 4294967295u;
  i0 += i1;
  l2 = i0;
  i0 = p5;
  i1 = 4294967295u;
  i0 += i1;
  p5 = i0;
  i0 = l0;
  i1 = 1u;
  i0 |= i1;
  l4 = i0;
  B3:;
  i0 = l0;
  i1 = p4;
  i32_store8((&M0), (u64)(i0 + 47), i1);
  i0 = 26512u;
  p2 = i0;
  i0 = 16u;
  l1 = i0;
  i0 = p4;
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = p4;
  i1 = 32u;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  i0 = p4;
  i1 = 48u;
  i0 = i0 != i1;
  if (i0) {goto B11;}
  i0 = 26544u;
  p2 = i0;
  B12:;
  i0 = p5;
  i1 = l2;
  i0 -= i1;
  l5 = i0;
  i0 = p3;
  i1 = 128u;
  i0 &= i1;
  if (i0) {goto B10;}
  goto B9;
  B11:;
  i0 = l0;
  i1 = 47u;
  i0 += i1;
  p2 = i0;
  i0 = 1u;
  l1 = i0;
  i0 = p5;
  i1 = l2;
  i0 -= i1;
  l5 = i0;
  i0 = p3;
  i1 = 128u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B9;}
  B10:;
  i0 = l5;
  i1 = l5;
  i2 = 2u;
  i1 = I32_DIV_S(i1, i2);
  p3 = i1;
  i0 -= i1;
  p6 = i0;
  i0 = p3;
  l5 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B8;}
  goto B6;
  B9:;
  i0 = 0u;
  p6 = i0;
  i0 = l5;
  l6 = i0;
  i0 = p3;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B7;}
  i0 = l5;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B6;}
  B8:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p5 = i0;
  i0 = l5;
  p3 = i0;
  L13: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p2;
    i2 = l1;
    i3 = p3;
    i4 = p3;
    i5 = l1;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p4 = i2;
    i3 = p5;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = p3;
    i1 = p4;
    i0 -= i1;
    p3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L13;}
  i0 = p6;
  l6 = i0;
  i0 = l5;
  p6 = i0;
  B7:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B4;}
  goto B5;
  B6:;
  i0 = p6;
  l6 = i0;
  i0 = 0u;
  p6 = i0;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B4;}
  B5:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l4;
  i2 = l2;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
  i0 = p6;
  i1 = l2;
  i0 += i1;
  p6 = i0;
  B4:;
  i0 = l6;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B14;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p5 = i0;
  i0 = l6;
  p3 = i0;
  L15: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p2;
    i2 = l1;
    i3 = p3;
    i4 = p3;
    i5 = l1;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p4 = i2;
    i3 = p5;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = p3;
    i1 = p4;
    i0 -= i1;
    p3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L15;}
  i0 = p6;
  i1 = l6;
  i0 += i1;
  p6 = i0;
  B14:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p6;
  i1 = l3;
  i0 += i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_printf(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i0 = mp_vprintf(i0, i1, i2);
  p2 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_vprintf(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6, i7;
  f64 d1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p1;
  l3 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l4 = i0;
  if (i0) {goto B1;}
  i0 = 2u;
  l5 = i0;
  goto B0;
  B1:;
  i0 = 0u;
  l5 = i0;
  B0:;
  L2: vm_checktime();
    i0 = l5;
    switch (i0) {
      case 0: goto B151;
      case 1: goto B150;
      case 2: goto B149;
      case 3: goto B147;
      case 4: goto B146;
      case 5: goto B145;
      case 6: goto B141;
      case 7: goto B140;
      case 8: goto B139;
      case 9: goto B133;
      case 10: goto B132;
      case 11: goto B125;
      case 12: goto B255;
      case 13: goto B254;
      case 14: goto B210;
      case 15: goto B208;
      case 16: goto B207;
      case 17: goto B206;
      case 18: goto B170;
      case 19: goto B169;
      case 20: goto B168;
      case 21: goto B197;
      case 22: goto B196;
      case 23: goto B192;
      case 24: goto B195;
      case 25: goto B194;
      case 26: goto B193;
      case 27: goto B201;
      case 28: goto B200;
      case 29: goto B199;
      case 30: goto B198;
      case 31: goto B203;
      case 32: goto B202;
      case 33: goto B205;
      case 34: goto B204;
      case 35: goto B209;
      case 36: goto B227;
      case 37: goto B226;
      case 38: goto B225;
      case 39: goto B173;
      case 40: goto B172;
      case 41: goto B171;
      case 42: goto B216;
      case 43: goto B215;
      case 44: goto B211;
      case 45: goto B214;
      case 46: goto B213;
      case 47: goto B212;
      case 48: goto B220;
      case 49: goto B219;
      case 50: goto B218;
      case 51: goto B217;
      case 52: goto B222;
      case 53: goto B221;
      case 54: goto B224;
      case 55: goto B223;
      case 56: goto B228;
      case 57: goto B238;
      case 58: goto B237;
      case 59: goto B236;
      case 60: goto B181;
      case 61: goto B180;
      case 62: goto B179;
      case 63: goto B178;
      case 64: goto B174;
      case 65: goto B177;
      case 66: goto B176;
      case 67: goto B175;
      case 68: goto B231;
      case 69: goto B230;
      case 70: goto B229;
      case 71: goto B233;
      case 72: goto B232;
      case 73: goto B235;
      case 74: goto B234;
      case 75: goto B249;
      case 76: goto B248;
      case 77: goto B247;
      case 78: goto B246;
      case 79: goto B167;
      case 80: goto B166;
      case 81: goto B165;
      case 82: goto B164;
      case 83: goto B160;
      case 84: goto B163;
      case 85: goto B162;
      case 86: goto B161;
      case 87: goto B241;
      case 88: goto B240;
      case 89: goto B239;
      case 90: goto B243;
      case 91: goto B242;
      case 92: goto B245;
      case 93: goto B244;
      case 94: goto B191;
      case 95: goto B190;
      case 96: goto B189;
      case 97: goto B159;
      case 98: goto B158;
      case 99: goto B157;
      case 100: goto B156;
      case 101: goto B152;
      case 102: goto B155;
      case 103: goto B154;
      case 104: goto B153;
      case 105: goto B184;
      case 106: goto B183;
      case 107: goto B182;
      case 108: goto B186;
      case 109: goto B185;
      case 110: goto B188;
      case 111: goto B187;
      case 112: goto B252;
      case 113: goto B251;
      case 114: goto B250;
      case 115: goto B253;
      case 116: goto B124;
      case 117: goto B135;
      case 118: goto B131;
      case 119: goto B126;
      case 120: goto B130;
      case 121: goto B129;
      case 122: goto B128;
      case 123: goto B127;
      case 124: goto B134;
      case 125: goto B138;
      case 126: goto B137;
      case 127: goto B136;
      case 128: goto B142;
      case 129: goto B143;
      case 130: goto B144;
      case 131: goto B148;
      default: goto B148;
    }
    B255:;
    i0 = l3;
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 24u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l4 = i0;
    i1 = 4294967227u;
    i0 += i1;
    l3 = i0;
    i1 = 51u;
    i0 = i0 > i1;
    if (i0) {goto B82;}
    i0 = 13u;
    l5 = i0;
    goto L2;
    B254:;
    i0 = l3;
    switch (i0) {
      case 0: goto B256;
      case 1: goto B256;
      case 2: goto B256;
      case 3: goto B81;
      case 4: goto B81;
      case 5: goto B81;
      case 6: goto B81;
      case 7: goto B81;
      case 8: goto B81;
      case 9: goto B81;
      case 10: goto B81;
      case 11: goto B80;
      case 12: goto B81;
      case 13: goto B81;
      case 14: goto B81;
      case 15: goto B81;
      case 16: goto B81;
      case 17: goto B81;
      case 18: goto B81;
      case 19: goto B79;
      case 20: goto B81;
      case 21: goto B81;
      case 22: goto B81;
      case 23: goto B81;
      case 24: goto B81;
      case 25: goto B81;
      case 26: goto B81;
      case 27: goto B81;
      case 28: goto B81;
      case 29: goto B78;
      case 30: goto B77;
      case 31: goto B76;
      case 32: goto B256;
      case 33: goto B256;
      case 34: goto B256;
      case 35: goto B81;
      case 36: goto B81;
      case 37: goto B81;
      case 38: goto B81;
      case 39: goto B81;
      case 40: goto B81;
      case 41: goto B81;
      case 42: goto B81;
      case 43: goto B80;
      case 44: goto B75;
      case 45: goto B81;
      case 46: goto B74;
      case 47: goto B81;
      case 48: goto B79;
      case 49: goto B81;
      case 50: goto B81;
      case 51: goto B79;
      default: goto B256;
    }
    B256:;
    i0 = 115u;
    l5 = i0;
    goto L2;
    B253:;
    i0 = p0;
    i1 = l6;
    i2 = 7u;
    i1 += i2;
    i2 = 4294967288u;
    i1 &= i2;
    l3 = i1;
    d1 = f64_load((&M0), (u64)(i1));
    i2 = l4;
    i3 = l9;
    i4 = l7;
    i5 = 24u;
    i4 <<= (i5 & 31);
    i5 = 24u;
    i4 = (u32)((s32)i4 >> (i5 & 31));
    i5 = p1;
    i6 = l8;
    i0 = mp_print_float(i0, d1, i2, i3, i4, i5, i6);
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i1 = 8u;
    i0 += i1;
    p2 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B103;}
    goto B104;
    B252:;
    i0 = p0;
    i1 = l6;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 0u;
    i3 = 16u;
    i4 = l4;
    i5 = 1u;
    i4 += i5;
    i5 = 6u;
    i4 &= i5;
    i3 -= i4;
    i4 = l4;
    i5 = 24u;
    i4 <<= (i5 & 31);
    i5 = 4026531840u;
    i4 &= i5;
    i5 = 4043309056u;
    i4 += i5;
    i5 = 24u;
    i4 = (u32)((s32)i4 >> (i5 & 31));
    i5 = l9;
    i6 = l7;
    i7 = 24u;
    i6 <<= (i7 & 31);
    i7 = 24u;
    i6 = (u32)((s32)i6 >> (i7 & 31));
    i7 = p1;
    i0 = mp_print_int(i0, i1, i2, i3, i4, i5, i6, i7);
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l6;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B118;}
    goto B119;
    B251:;
    i0 = l6;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = p0;
    i1 = l6;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 0u;
    i3 = 16u;
    i4 = 97u;
    i5 = l9;
    i6 = l7;
    i7 = 24u;
    i6 <<= (i7 & 31);
    i7 = 24u;
    i6 = (u32)((s32)i6 >> (i7 & 31));
    i7 = p1;
    i0 = mp_print_int(i0, i1, i2, i3, i4, i5, i6, i7);
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B120;}
    goto B121;
    B250:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l10;
    i2 = 1u;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = l6;
    p2 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B105;}
    goto B106;
    B249:;
    i0 = l6;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto B32;}
    i0 = 76u;
    l5 = i0;
    goto L2;
    B248:;
    i0 = l0;
    i1 = l7;
    i32_store8((&M0), (u64)(i0 + 11), i1);
    i0 = 26512u;
    l11 = i0;
    i0 = 16u;
    l4 = i0;
    i0 = l7;
    i1 = 255u;
    i0 &= i1;
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B31;}
    i0 = 77u;
    l5 = i0;
    goto L2;
    B247:;
    i0 = l3;
    i1 = 32u;
    i0 = i0 == i1;
    if (i0) {goto B30;}
    i0 = 78u;
    l5 = i0;
    goto L2;
    B246:;
    i0 = l3;
    i1 = 48u;
    i0 = i0 != i1;
    if (i0) {goto B29;}
    i0 = 92u;
    l5 = i0;
    goto L2;
    B245:;
    i0 = 26544u;
    l11 = i0;
    i0 = 93u;
    l5 = i0;
    goto L2;
    B244:;
    i0 = p1;
    i1 = 4294967292u;
    i0 += i1;
    l7 = i0;
    i0 = l9;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto B28;}
    i0 = 90u;
    l5 = i0;
    goto L2;
    B243:;
    i0 = 0u;
    l6 = i0;
    i0 = l7;
    l8 = i0;
    i0 = l9;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B24;}
    i0 = 91u;
    l5 = i0;
    goto L2;
    B242:;
    i0 = l7;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B26;}
    i0 = 87u;
    l5 = i0;
    goto L2;
    B241:;
    i0 = l7;
    l3 = i0;
    i0 = 88u;
    l5 = i0;
    goto L2;
    B240:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l11;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B20;}
    i0 = 89u;
    l5 = i0;
    goto L2;
    B239:;
    i0 = l6;
    l8 = i0;
    i0 = l7;
    l6 = i0;
    goto B23;
    B238:;
    i0 = l0;
    i1 = l6;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0 + 10), i1);
    i0 = l0;
    i1 = l7;
    i32_store8((&M0), (u64)(i0 + 13), i1);
    i0 = 26512u;
    l11 = i0;
    i0 = 16u;
    l4 = i0;
    i0 = l7;
    i1 = 255u;
    i0 &= i1;
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B44;}
    i0 = 58u;
    l5 = i0;
    goto L2;
    B237:;
    i0 = l3;
    i1 = 32u;
    i0 = i0 == i1;
    if (i0) {goto B43;}
    i0 = 59u;
    l5 = i0;
    goto L2;
    B236:;
    i0 = l3;
    i1 = 48u;
    i0 = i0 != i1;
    if (i0) {goto B42;}
    i0 = 73u;
    l5 = i0;
    goto L2;
    B235:;
    i0 = 26544u;
    l11 = i0;
    i0 = 74u;
    l5 = i0;
    goto L2;
    B234:;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    l7 = i0;
    i0 = l9;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto B41;}
    i0 = 71u;
    l5 = i0;
    goto L2;
    B233:;
    i0 = 0u;
    l8 = i0;
    i0 = l7;
    p2 = i0;
    i0 = l9;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B37;}
    i0 = 72u;
    l5 = i0;
    goto L2;
    B232:;
    i0 = l7;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B39;}
    i0 = 68u;
    l5 = i0;
    goto L2;
    B231:;
    i0 = l7;
    l3 = i0;
    i0 = 69u;
    l5 = i0;
    goto L2;
    B230:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l11;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B33;}
    i0 = 70u;
    l5 = i0;
    goto L2;
    B229:;
    i0 = l8;
    p2 = i0;
    i0 = l7;
    l8 = i0;
    goto B36;
    B228:;
    i0 = l6;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = p0;
    i1 = l6;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i3 = 10u;
    i4 = 97u;
    i5 = l9;
    i6 = l7;
    i7 = 24u;
    i6 <<= (i7 & 31);
    i7 = 24u;
    i6 = (u32)((s32)i6 >> (i7 & 31));
    i7 = p1;
    i0 = mp_print_int(i0, i1, i2, i3, i4, i5, i6, i7);
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B116;}
    goto B117;
    B227:;
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i2 = 4u;
    i1 += i2;
    i0 = qstr_data(i0, i1);
    l12 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    i1 = l8;
    i2 = l8;
    i3 = 0u;
    i2 = (u32)((s32)i2 < (s32)i3);
    i0 = i2 ? i0 : i1;
    l8 = i0;
    i0 = l0;
    i1 = l7;
    i32_store8((&M0), (u64)(i0 + 14), i1);
    i0 = 26512u;
    l11 = i0;
    i0 = 16u;
    l4 = i0;
    i0 = l7;
    i1 = 255u;
    i0 &= i1;
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B58;}
    i0 = 37u;
    l5 = i0;
    goto L2;
    B226:;
    i0 = l3;
    i1 = 32u;
    i0 = i0 == i1;
    if (i0) {goto B57;}
    i0 = 38u;
    l5 = i0;
    goto L2;
    B225:;
    i0 = l3;
    i1 = 48u;
    i0 = i0 != i1;
    if (i0) {goto B56;}
    i0 = 54u;
    l5 = i0;
    goto L2;
    B224:;
    i0 = 26544u;
    l11 = i0;
    i0 = 55u;
    l5 = i0;
    goto L2;
    B223:;
    i0 = p1;
    i1 = l8;
    i0 -= i1;
    p2 = i0;
    i0 = l9;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto B55;}
    i0 = 52u;
    l5 = i0;
    goto L2;
    B222:;
    i0 = 0u;
    l7 = i0;
    i0 = p2;
    l13 = i0;
    i0 = l9;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B45;}
    i0 = 53u;
    l5 = i0;
    goto L2;
    B221:;
    i0 = p2;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B53;}
    i0 = 48u;
    l5 = i0;
    goto L2;
    B220:;
    i0 = p2;
    l3 = i0;
    i0 = 49u;
    l5 = i0;
    goto L2;
    B219:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l11;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B46;}
    i0 = 50u;
    l5 = i0;
    goto L2;
    B218:;
    i0 = l7;
    l13 = i0;
    i0 = p2;
    l7 = i0;
    i0 = 51u;
    l5 = i0;
    goto L2;
    B217:;
    i0 = l8;
    i0 = !(i0);
    if (i0) {goto B51;}
    i0 = 42u;
    l5 = i0;
    goto L2;
    B216:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l12;
    i2 = l8;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = l7;
    i1 = l8;
    i0 += i1;
    l7 = i0;
    i0 = 43u;
    l5 = i0;
    goto L2;
    B215:;
    i0 = l13;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B48;}
    i0 = 45u;
    l5 = i0;
    goto L2;
    B214:;
    i0 = l13;
    l3 = i0;
    i0 = 46u;
    l5 = i0;
    goto L2;
    B213:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l11;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B47;}
    i0 = 47u;
    l5 = i0;
    goto L2;
    B212:;
    i0 = l7;
    i1 = l13;
    i0 += i1;
    l7 = i0;
    i0 = 44u;
    l5 = i0;
    goto L2;
    B211:;
    i0 = l6;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = l7;
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B112;}
    goto B113;
    B210:;
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0));
    l12 = i0;
    i0 = l8;
    i1 = 4294967295u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B73;}
    i0 = 35u;
    l5 = i0;
    goto L2;
    B209:;
    i0 = l12;
    i0 = strlen_0(i0);
    l8 = i0;
    i0 = 15u;
    l5 = i0;
    goto L2;
    B208:;
    i0 = l0;
    i1 = l7;
    i32_store8((&M0), (u64)(i0 + 15), i1);
    i0 = 26512u;
    l11 = i0;
    i0 = 16u;
    l4 = i0;
    i0 = l7;
    i1 = 255u;
    i0 &= i1;
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B72;}
    i0 = 16u;
    l5 = i0;
    goto L2;
    B207:;
    i0 = l3;
    i1 = 32u;
    i0 = i0 == i1;
    if (i0) {goto B71;}
    i0 = 17u;
    l5 = i0;
    goto L2;
    B206:;
    i0 = l3;
    i1 = 48u;
    i0 = i0 != i1;
    if (i0) {goto B70;}
    i0 = 33u;
    l5 = i0;
    goto L2;
    B205:;
    i0 = 26544u;
    l11 = i0;
    i0 = 34u;
    l5 = i0;
    goto L2;
    B204:;
    i0 = p1;
    i1 = l8;
    i0 -= i1;
    p2 = i0;
    i0 = l9;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto B69;}
    i0 = 31u;
    l5 = i0;
    goto L2;
    B203:;
    i0 = 0u;
    l7 = i0;
    i0 = p2;
    l13 = i0;
    i0 = l9;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B59;}
    i0 = 32u;
    l5 = i0;
    goto L2;
    B202:;
    i0 = p2;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B67;}
    i0 = 27u;
    l5 = i0;
    goto L2;
    B201:;
    i0 = p2;
    l3 = i0;
    i0 = 28u;
    l5 = i0;
    goto L2;
    B200:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l11;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B60;}
    i0 = 29u;
    l5 = i0;
    goto L2;
    B199:;
    i0 = l7;
    l13 = i0;
    i0 = p2;
    l7 = i0;
    i0 = 30u;
    l5 = i0;
    goto L2;
    B198:;
    i0 = l8;
    i0 = !(i0);
    if (i0) {goto B65;}
    i0 = 21u;
    l5 = i0;
    goto L2;
    B197:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l12;
    i2 = l8;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = l7;
    i1 = l8;
    i0 += i1;
    l7 = i0;
    i0 = 22u;
    l5 = i0;
    goto L2;
    B196:;
    i0 = l13;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B62;}
    i0 = 24u;
    l5 = i0;
    goto L2;
    B195:;
    i0 = l13;
    l3 = i0;
    i0 = 25u;
    l5 = i0;
    goto L2;
    B194:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l11;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B61;}
    i0 = 26u;
    l5 = i0;
    goto L2;
    B193:;
    i0 = l7;
    i1 = l13;
    i0 += i1;
    l7 = i0;
    i0 = 23u;
    l5 = i0;
    goto L2;
    B192:;
    i0 = l6;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = l7;
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B114;}
    goto B115;
    B191:;
    i0 = l0;
    i1 = l7;
    i32_store8((&M0), (u64)(i0 + 12), i1);
    i0 = 26512u;
    l11 = i0;
    i0 = 16u;
    l4 = i0;
    i0 = l7;
    i1 = 255u;
    i0 &= i1;
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B19;}
    i0 = 95u;
    l5 = i0;
    goto L2;
    B190:;
    i0 = l3;
    i1 = 32u;
    i0 = i0 == i1;
    if (i0) {goto B18;}
    i0 = 96u;
    l5 = i0;
    goto L2;
    B189:;
    i0 = l3;
    i1 = 48u;
    i0 = i0 != i1;
    if (i0) {goto B17;}
    i0 = 110u;
    l5 = i0;
    goto L2;
    B188:;
    i0 = 26544u;
    l11 = i0;
    i0 = 111u;
    l5 = i0;
    goto L2;
    B187:;
    i0 = p1;
    i1 = 4294967291u;
    i0 += i1;
    l7 = i0;
    i0 = l9;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto B16;}
    i0 = 108u;
    l5 = i0;
    goto L2;
    B186:;
    i0 = 0u;
    l6 = i0;
    i0 = l7;
    l8 = i0;
    i0 = l9;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B12;}
    i0 = 109u;
    l5 = i0;
    goto L2;
    B185:;
    i0 = l7;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B14;}
    i0 = 105u;
    l5 = i0;
    goto L2;
    B184:;
    i0 = l7;
    l3 = i0;
    i0 = 106u;
    l5 = i0;
    goto L2;
    B183:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l11;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B8;}
    i0 = 107u;
    l5 = i0;
    goto L2;
    B182:;
    i0 = l6;
    l8 = i0;
    i0 = l7;
    l6 = i0;
    goto B11;
    B181:;
    i0 = l0;
    i1 = 13u;
    i0 += i1;
    l11 = i0;
    i0 = 1u;
    l4 = i0;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    l7 = i0;
    i0 = l9;
    i1 = 128u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B40;}
    i0 = 61u;
    l5 = i0;
    goto L2;
    B180:;
    i0 = l7;
    i1 = l7;
    i2 = 2u;
    i1 = I32_DIV_S(i1, i2);
    l3 = i1;
    i0 -= i1;
    l8 = i0;
    i0 = l3;
    l7 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B38;}
    i0 = 62u;
    l5 = i0;
    goto L2;
    B179:;
    i0 = l8;
    p2 = i0;
    i0 = 0u;
    l8 = i0;
    i0 = 63u;
    l5 = i0;
    goto L2;
    B178:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i2 = 10u;
    i1 += i2;
    i2 = 1u;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = l8;
    i1 = 1u;
    i0 += i1;
    l9 = i0;
    i0 = p2;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B35;}
    i0 = 65u;
    l5 = i0;
    goto L2;
    B177:;
    i0 = p2;
    l3 = i0;
    i0 = 66u;
    l5 = i0;
    goto L2;
    B176:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l11;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B34;}
    i0 = 67u;
    l5 = i0;
    goto L2;
    B175:;
    i0 = l9;
    i1 = p2;
    i0 += i1;
    l9 = i0;
    i0 = 64u;
    l5 = i0;
    goto L2;
    B174:;
    i0 = l6;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = l9;
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B110;}
    goto B111;
    B173:;
    i0 = l0;
    i1 = 14u;
    i0 += i1;
    l11 = i0;
    i0 = 1u;
    l4 = i0;
    i0 = p1;
    i1 = l8;
    i0 -= i1;
    p2 = i0;
    i0 = l9;
    i1 = 128u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B54;}
    i0 = 40u;
    l5 = i0;
    goto L2;
    B172:;
    i0 = p2;
    i1 = p2;
    i2 = 2u;
    i1 = I32_DIV_S(i1, i2);
    l3 = i1;
    i0 -= i1;
    l7 = i0;
    i0 = l3;
    p2 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B52;}
    i0 = 41u;
    l5 = i0;
    goto L2;
    B171:;
    i0 = l7;
    l13 = i0;
    i0 = 0u;
    l7 = i0;
    i0 = l8;
    if (i0) {goto B49;}
    goto B50;
    B170:;
    i0 = l0;
    i1 = 15u;
    i0 += i1;
    l11 = i0;
    i0 = 1u;
    l4 = i0;
    i0 = p1;
    i1 = l8;
    i0 -= i1;
    p2 = i0;
    i0 = l9;
    i1 = 128u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B68;}
    i0 = 19u;
    l5 = i0;
    goto L2;
    B169:;
    i0 = p2;
    i1 = p2;
    i2 = 2u;
    i1 = I32_DIV_S(i1, i2);
    l3 = i1;
    i0 -= i1;
    l7 = i0;
    i0 = l3;
    p2 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B66;}
    i0 = 20u;
    l5 = i0;
    goto L2;
    B168:;
    i0 = l7;
    l13 = i0;
    i0 = 0u;
    l7 = i0;
    i0 = l8;
    if (i0) {goto B63;}
    goto B64;
    B167:;
    i0 = l0;
    i1 = 11u;
    i0 += i1;
    l11 = i0;
    i0 = 1u;
    l4 = i0;
    i0 = p1;
    i1 = 4294967292u;
    i0 += i1;
    l7 = i0;
    i0 = l9;
    i1 = 128u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B27;}
    i0 = 80u;
    l5 = i0;
    goto L2;
    B166:;
    i0 = l7;
    i1 = l7;
    i2 = 2u;
    i1 = I32_DIV_S(i1, i2);
    l3 = i1;
    i0 -= i1;
    l6 = i0;
    i0 = l3;
    l7 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B25;}
    i0 = 81u;
    l5 = i0;
    goto L2;
    B165:;
    i0 = l6;
    l8 = i0;
    i0 = 0u;
    l6 = i0;
    i0 = 82u;
    l5 = i0;
    goto L2;
    B164:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 11075u;
    i2 = 4u;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = l6;
    i1 = 4u;
    i0 += i1;
    l9 = i0;
    i0 = l8;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B22;}
    i0 = 84u;
    l5 = i0;
    goto L2;
    B163:;
    i0 = l8;
    l3 = i0;
    i0 = 85u;
    l5 = i0;
    goto L2;
    B162:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l11;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B21;}
    i0 = 86u;
    l5 = i0;
    goto L2;
    B161:;
    i0 = l9;
    i1 = l8;
    i0 += i1;
    l9 = i0;
    i0 = 83u;
    l5 = i0;
    goto L2;
    B160:;
    i0 = l9;
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B108;}
    goto B109;
    B159:;
    i0 = l0;
    i1 = 12u;
    i0 += i1;
    l11 = i0;
    i0 = 1u;
    l4 = i0;
    i0 = p1;
    i1 = 4294967291u;
    i0 += i1;
    l7 = i0;
    i0 = l9;
    i1 = 128u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B15;}
    i0 = 98u;
    l5 = i0;
    goto L2;
    B158:;
    i0 = l7;
    i1 = l7;
    i2 = 2u;
    i1 = I32_DIV_S(i1, i2);
    l3 = i1;
    i0 -= i1;
    l6 = i0;
    i0 = l3;
    l7 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B13;}
    i0 = 99u;
    l5 = i0;
    goto L2;
    B157:;
    i0 = l6;
    l8 = i0;
    i0 = 0u;
    l6 = i0;
    i0 = 100u;
    l5 = i0;
    goto L2;
    B156:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 11918u;
    i2 = 5u;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = l6;
    i1 = 5u;
    i0 += i1;
    l9 = i0;
    i0 = l8;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B10;}
    i0 = 102u;
    l5 = i0;
    goto L2;
    B155:;
    i0 = l8;
    l3 = i0;
    i0 = 103u;
    l5 = i0;
    goto L2;
    B154:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l11;
    i2 = l4;
    i3 = l3;
    i4 = l3;
    i5 = l4;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p1 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = l3;
    i1 = p1;
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B9;}
    i0 = 104u;
    l5 = i0;
    goto L2;
    B153:;
    i0 = l9;
    i1 = l8;
    i0 += i1;
    l9 = i0;
    i0 = 101u;
    l5 = i0;
    goto L2;
    B152:;
    i0 = l9;
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B107;}
    i0 = 0u;
    l5 = i0;
    goto L2;
    B151:;
    i0 = l4;
    i1 = 37u;
    i0 = i0 == i1;
    if (i0) {goto B123;}
    i0 = 1u;
    l5 = i0;
    goto L2;
    B150:;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    if (i0) {goto B122;}
    i0 = 2u;
    l5 = i0;
    goto L2;
    B149:;
    i0 = l3;
    i1 = p1;
    i0 = i0 <= i1;
    if (i0) {goto B102;}
    i0 = 131u;
    l5 = i0;
    goto L2;
    B148:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p1;
    i2 = l3;
    i3 = p1;
    i2 -= i3;
    l4 = i2;
    i3 = l1;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = l4;
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i0 = i32_load8_u((&M0), (u64)(i0));
    if (i0) {goto B99;}
    goto B100;
    B147:;
    i0 = p1;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto B101;}
    i0 = 4u;
    l5 = i0;
    goto L2;
    B146:;
    i0 = 0u;
    l9 = i0;
    i0 = 32u;
    l7 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    i1 = 4294967264u;
    i0 += i1;
    l11 = i0;
    i1 = 16u;
    i0 = i0 > i1;
    if (i0) {goto B98;}
    i0 = 5u;
    l5 = i0;
    goto L2;
    B145:;
    i0 = 1u;
    p1 = i0;
    i0 = l11;
    switch (i0) {
      case 0: goto B257;
      case 1: goto B96;
      case 2: goto B95;
      case 3: goto B95;
      case 4: goto B95;
      case 5: goto B95;
      case 6: goto B95;
      case 7: goto B95;
      case 8: goto B95;
      case 9: goto B95;
      case 10: goto B95;
      case 11: goto B94;
      case 12: goto B95;
      case 13: goto B93;
      case 14: goto B95;
      case 15: goto B95;
      case 16: goto B92;
      default: goto B257;
    }
    B257:;
    i0 = 130u;
    l5 = i0;
    goto L2;
    B144:;
    i0 = 4u;
    p1 = i0;
    goto B90;
    B143:;
    i0 = 8u;
    p1 = i0;
    goto B91;
    B142:;
    i0 = 2u;
    p1 = i0;
    goto B89;
    B141:;
    i0 = 48u;
    l7 = i0;
    i0 = 64u;
    p1 = i0;
    i0 = 7u;
    l5 = i0;
    goto L2;
    B140:;
    i0 = l9;
    i1 = p1;
    i0 |= i1;
    l9 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    i1 = 4294967264u;
    i0 += i1;
    l11 = i0;
    i1 = 16u;
    i0 = i0 <= i1;
    if (i0) {goto B97;}
    i0 = 8u;
    l5 = i0;
    goto L2;
    B139:;
    i0 = 0u;
    p1 = i0;
    i0 = l4;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 9u;
    i0 = i0 > i1;
    if (i0) {goto B88;}
    i0 = 125u;
    l5 = i0;
    goto L2;
    B138:;
    i0 = 0u;
    p1 = i0;
    i0 = 126u;
    l5 = i0;
    goto L2;
    B137:;
    i0 = l4;
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 24u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    i1 = p1;
    i2 = 10u;
    i1 *= i2;
    i0 += i1;
    i1 = 4294967248u;
    i0 += i1;
    p1 = i0;
    i0 = l3;
    i0 = i32_load8_u((&M0), (u64)(i0 + 1));
    l4 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l11 = i0;
    l3 = i0;
    i0 = l4;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 10u;
    i0 = i0 < i1;
    if (i0) {goto B3;}
    i0 = 127u;
    l5 = i0;
    goto L2;
    B136:;
    i0 = 4294967295u;
    l8 = i0;
    i0 = l4;
    i1 = 255u;
    i0 &= i1;
    i1 = 46u;
    i0 = i0 != i1;
    if (i0) {goto B87;}
    i0 = 117u;
    l5 = i0;
    goto L2;
    B135:;
    i0 = l11;
    i0 = i32_load8_u((&M0), (u64)(i0 + 1));
    l4 = i0;
    i1 = 42u;
    i0 = i0 != i1;
    if (i0) {goto B7;}
    i0 = 124u;
    l5 = i0;
    goto L2;
    B134:;
    i0 = p2;
    i1 = 4u;
    i0 += i1;
    l6 = i0;
    i0 = l11;
    i1 = 2u;
    i0 += i1;
    l10 = i0;
    i0 = l11;
    i0 = i32_load8_u((&M0), (u64)(i0 + 2));
    l4 = i0;
    i0 = p2;
    i0 = i32_load((&M0), (u64)(i0));
    l11 = i0;
    goto B4;
    B133:;
    i0 = l3;
    l11 = i0;
    i0 = 4294967295u;
    l8 = i0;
    i0 = l4;
    i1 = 255u;
    i0 &= i1;
    i1 = 46u;
    i0 = i0 == i1;
    if (i0) {goto B86;}
    i0 = 10u;
    l5 = i0;
    goto L2;
    B132:;
    i0 = p2;
    l6 = i0;
    i0 = l11;
    l10 = i0;
    goto B84;
    B131:;
    i0 = l11;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = 0u;
    l8 = i0;
    i0 = l4;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 9u;
    i0 = i0 > i1;
    if (i0) {goto B6;}
    i0 = 120u;
    l5 = i0;
    goto L2;
    B130:;
    i0 = 0u;
    l11 = i0;
    i0 = 121u;
    l5 = i0;
    goto L2;
    B129:;
    i0 = l11;
    i1 = 10u;
    i0 *= i1;
    i1 = l4;
    i2 = 24u;
    i1 <<= (i2 & 31);
    i2 = 24u;
    i1 = (u32)((s32)i1 >> (i2 & 31));
    i0 += i1;
    i1 = 4294967248u;
    i0 += i1;
    l11 = i0;
    i0 = l3;
    i0 = i32_load8_u((&M0), (u64)(i0 + 1));
    l4 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l10 = i0;
    l3 = i0;
    i0 = l4;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 10u;
    i0 = i0 < i1;
    if (i0) {goto B5;}
    i0 = 122u;
    l5 = i0;
    goto L2;
    B128:;
    i0 = p2;
    l6 = i0;
    i0 = 123u;
    l5 = i0;
    goto L2;
    B127:;
    i0 = l11;
    i1 = 0u;
    i2 = l11;
    i3 = 0u;
    i2 = (u32)((s32)i2 > (s32)i3);
    i0 = i2 ? i0 : i1;
    l8 = i0;
    goto B85;
    B126:;
    i0 = p2;
    l6 = i0;
    i0 = l3;
    l10 = i0;
    i0 = 11u;
    l5 = i0;
    goto L2;
    B125:;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    i1 = l10;
    i2 = l4;
    i3 = 255u;
    i2 &= i3;
    i3 = 108u;
    i2 = i2 == i3;
    i0 = i2 ? i0 : i1;
    l10 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l3 = i0;
    if (i0) {goto B83;}
    i0 = 116u;
    l5 = i0;
    goto L2;
    B124:;
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    g0 = i0;
    i0 = l2;
    goto Bfunc;
    B123:;
    i0 = 2u;
    l5 = i0;
    goto L2;
    B122:;
    i0 = 0u;
    l5 = i0;
    goto L2;
    B121:;
    i0 = 2u;
    l5 = i0;
    goto L2;
    B120:;
    i0 = 0u;
    l5 = i0;
    goto L2;
    B119:;
    i0 = 2u;
    l5 = i0;
    goto L2;
    B118:;
    i0 = 0u;
    l5 = i0;
    goto L2;
    B117:;
    i0 = 2u;
    l5 = i0;
    goto L2;
    B116:;
    i0 = 0u;
    l5 = i0;
    goto L2;
    B115:;
    i0 = 2u;
    l5 = i0;
    goto L2;
    B114:;
    i0 = 0u;
    l5 = i0;
    goto L2;
    B113:;
    i0 = 2u;
    l5 = i0;
    goto L2;
    B112:;
    i0 = 0u;
    l5 = i0;
    goto L2;
    B111:;
    i0 = 2u;
    l5 = i0;
    goto L2;
    B110:;
    i0 = 0u;
    l5 = i0;
    goto L2;
    B109:;
    i0 = 2u;
    l5 = i0;
    goto L2;
    B108:;
    i0 = 0u;
    l5 = i0;
    goto L2;
    B107:;
    i0 = 2u;
    l5 = i0;
    goto L2;
    B106:;
    i0 = 2u;
    l5 = i0;
    goto L2;
    B105:;
    i0 = 0u;
    l5 = i0;
    goto L2;
    B104:;
    i0 = 2u;
    l5 = i0;
    goto L2;
    B103:;
    i0 = 0u;
    l5 = i0;
    goto L2;
    B102:;
    i0 = 3u;
    l5 = i0;
    goto L2;
    B101:;
    i0 = 116u;
    l5 = i0;
    goto L2;
    B100:;
    i0 = 116u;
    l5 = i0;
    goto L2;
    B99:;
    i0 = 4u;
    l5 = i0;
    goto L2;
    B98:;
    i0 = 8u;
    l5 = i0;
    goto L2;
    B97:;
    i0 = 5u;
    l5 = i0;
    goto L2;
    B96:;
    i0 = 129u;
    l5 = i0;
    goto L2;
    B95:;
    i0 = 8u;
    l5 = i0;
    goto L2;
    B94:;
    i0 = 128u;
    l5 = i0;
    goto L2;
    B93:;
    i0 = 7u;
    l5 = i0;
    goto L2;
    B92:;
    i0 = 6u;
    l5 = i0;
    goto L2;
    B91:;
    i0 = 7u;
    l5 = i0;
    goto L2;
    B90:;
    i0 = 7u;
    l5 = i0;
    goto L2;
    B89:;
    i0 = 7u;
    l5 = i0;
    goto L2;
    B88:;
    i0 = 9u;
    l5 = i0;
    goto L2;
    B87:;
    i0 = 10u;
    l5 = i0;
    goto L2;
    B86:;
    i0 = 117u;
    l5 = i0;
    goto L2;
    B85:;
    i0 = 11u;
    l5 = i0;
    goto L2;
    B84:;
    i0 = 11u;
    l5 = i0;
    goto L2;
    B83:;
    i0 = 12u;
    l5 = i0;
    goto L2;
    B82:;
    i0 = 114u;
    l5 = i0;
    goto L2;
    B81:;
    i0 = 114u;
    l5 = i0;
    goto L2;
    B80:;
    i0 = 113u;
    l5 = i0;
    goto L2;
    B79:;
    i0 = 112u;
    l5 = i0;
    goto L2;
    B78:;
    i0 = 75u;
    l5 = i0;
    goto L2;
    B77:;
    i0 = 57u;
    l5 = i0;
    goto L2;
    B76:;
    i0 = 56u;
    l5 = i0;
    goto L2;
    B75:;
    i0 = 36u;
    l5 = i0;
    goto L2;
    B74:;
    i0 = 14u;
    l5 = i0;
    goto L2;
    B73:;
    i0 = 15u;
    l5 = i0;
    goto L2;
    B72:;
    i0 = 34u;
    l5 = i0;
    goto L2;
    B71:;
    i0 = 34u;
    l5 = i0;
    goto L2;
    B70:;
    i0 = 18u;
    l5 = i0;
    goto L2;
    B69:;
    i0 = 19u;
    l5 = i0;
    goto L2;
    B68:;
    i0 = 31u;
    l5 = i0;
    goto L2;
    B67:;
    i0 = 20u;
    l5 = i0;
    goto L2;
    B66:;
    i0 = 27u;
    l5 = i0;
    goto L2;
    B65:;
    i0 = 22u;
    l5 = i0;
    goto L2;
    B64:;
    i0 = 22u;
    l5 = i0;
    goto L2;
    B63:;
    i0 = 21u;
    l5 = i0;
    goto L2;
    B62:;
    i0 = 23u;
    l5 = i0;
    goto L2;
    B61:;
    i0 = 25u;
    l5 = i0;
    goto L2;
    B60:;
    i0 = 28u;
    l5 = i0;
    goto L2;
    B59:;
    i0 = 30u;
    l5 = i0;
    goto L2;
    B58:;
    i0 = 55u;
    l5 = i0;
    goto L2;
    B57:;
    i0 = 55u;
    l5 = i0;
    goto L2;
    B56:;
    i0 = 39u;
    l5 = i0;
    goto L2;
    B55:;
    i0 = 40u;
    l5 = i0;
    goto L2;
    B54:;
    i0 = 52u;
    l5 = i0;
    goto L2;
    B53:;
    i0 = 41u;
    l5 = i0;
    goto L2;
    B52:;
    i0 = 48u;
    l5 = i0;
    goto L2;
    B51:;
    i0 = 43u;
    l5 = i0;
    goto L2;
    B50:;
    i0 = 43u;
    l5 = i0;
    goto L2;
    B49:;
    i0 = 42u;
    l5 = i0;
    goto L2;
    B48:;
    i0 = 44u;
    l5 = i0;
    goto L2;
    B47:;
    i0 = 46u;
    l5 = i0;
    goto L2;
    B46:;
    i0 = 49u;
    l5 = i0;
    goto L2;
    B45:;
    i0 = 51u;
    l5 = i0;
    goto L2;
    B44:;
    i0 = 74u;
    l5 = i0;
    goto L2;
    B43:;
    i0 = 74u;
    l5 = i0;
    goto L2;
    B42:;
    i0 = 60u;
    l5 = i0;
    goto L2;
    B41:;
    i0 = 61u;
    l5 = i0;
    goto L2;
    B40:;
    i0 = 71u;
    l5 = i0;
    goto L2;
    B39:;
    i0 = 62u;
    l5 = i0;
    goto L2;
    B38:;
    i0 = 68u;
    l5 = i0;
    goto L2;
    B37:;
    i0 = 63u;
    l5 = i0;
    goto L2;
    B36:;
    i0 = 63u;
    l5 = i0;
    goto L2;
    B35:;
    i0 = 64u;
    l5 = i0;
    goto L2;
    B34:;
    i0 = 66u;
    l5 = i0;
    goto L2;
    B33:;
    i0 = 69u;
    l5 = i0;
    goto L2;
    B32:;
    i0 = 94u;
    l5 = i0;
    goto L2;
    B31:;
    i0 = 93u;
    l5 = i0;
    goto L2;
    B30:;
    i0 = 93u;
    l5 = i0;
    goto L2;
    B29:;
    i0 = 79u;
    l5 = i0;
    goto L2;
    B28:;
    i0 = 80u;
    l5 = i0;
    goto L2;
    B27:;
    i0 = 90u;
    l5 = i0;
    goto L2;
    B26:;
    i0 = 81u;
    l5 = i0;
    goto L2;
    B25:;
    i0 = 87u;
    l5 = i0;
    goto L2;
    B24:;
    i0 = 82u;
    l5 = i0;
    goto L2;
    B23:;
    i0 = 82u;
    l5 = i0;
    goto L2;
    B22:;
    i0 = 83u;
    l5 = i0;
    goto L2;
    B21:;
    i0 = 85u;
    l5 = i0;
    goto L2;
    B20:;
    i0 = 88u;
    l5 = i0;
    goto L2;
    B19:;
    i0 = 111u;
    l5 = i0;
    goto L2;
    B18:;
    i0 = 111u;
    l5 = i0;
    goto L2;
    B17:;
    i0 = 97u;
    l5 = i0;
    goto L2;
    B16:;
    i0 = 98u;
    l5 = i0;
    goto L2;
    B15:;
    i0 = 108u;
    l5 = i0;
    goto L2;
    B14:;
    i0 = 99u;
    l5 = i0;
    goto L2;
    B13:;
    i0 = 105u;
    l5 = i0;
    goto L2;
    B12:;
    i0 = 100u;
    l5 = i0;
    goto L2;
    B11:;
    i0 = 100u;
    l5 = i0;
    goto L2;
    B10:;
    i0 = 101u;
    l5 = i0;
    goto L2;
    B9:;
    i0 = 103u;
    l5 = i0;
    goto L2;
    B8:;
    i0 = 106u;
    l5 = i0;
    goto L2;
    B7:;
    i0 = 118u;
    l5 = i0;
    goto L2;
    B6:;
    i0 = 119u;
    l5 = i0;
    goto L2;
    B5:;
    i0 = 121u;
    l5 = i0;
    goto L2;
    B4:;
    i0 = 123u;
    l5 = i0;
    goto L2;
    B3:;
    i0 = 126u;
    l5 = i0;
    goto L2;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_print_int(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5, u32 p6, u32 p7) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 30), i1);
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B7;}
  i0 = p5;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p5;
  i1 = 4u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = 32u;
  l1 = i0;
  i0 = l0;
  i1 = 32u;
  i32_store8((&M0), (u64)(i0 + 30), i1);
  i0 = 16u;
  l2 = i0;
  i0 = p1;
  if (i0) {goto B3;}
  goto B4;
  B7:;
  i0 = 45u;
  l1 = i0;
  i0 = l0;
  i1 = 45u;
  i32_store8((&M0), (u64)(i0 + 30), i1);
  i0 = 0u;
  i1 = p1;
  i0 -= i1;
  p1 = i0;
  B6:;
  i0 = 16u;
  l2 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B4;}
  goto B3;
  B5:;
  i0 = 43u;
  l1 = i0;
  i0 = l0;
  i1 = 43u;
  i32_store8((&M0), (u64)(i0 + 30), i1);
  i0 = 16u;
  l2 = i0;
  i0 = p1;
  if (i0) {goto B3;}
  B4:;
  i0 = l0;
  i1 = 48u;
  i32_store8((&M0), (u64)(i0 + 15), i1);
  i0 = l0;
  i1 = 15u;
  i0 |= i1;
  l5 = i0;
  i0 = l0;
  i1 = l2;
  i0 += i1;
  p1 = i0;
  i0 = p5;
  i1 = 64u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = p4;
  i1 = 246u;
  i0 += i1;
  l3 = i0;
  i0 = l0;
  i1 = 15u;
  i0 |= i1;
  l1 = i0;
  L9: vm_checktime();
    i0 = l1;
    i1 = l3;
    i2 = 48u;
    i3 = p1;
    i4 = p1;
    i5 = p3;
    i4 = DIV_U(i4, i5);
    p4 = i4;
    i5 = p3;
    i4 *= i5;
    i3 -= i4;
    p2 = i3;
    i4 = 9u;
    i3 = (u32)((s32)i3 > (s32)i4);
    i1 = i3 ? i1 : i2;
    i2 = p2;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    p2 = i0;
    i0 = p1;
    i1 = p3;
    i0 = i0 < i1;
    if (i0) {goto B8;}
    i0 = l1;
    i1 = l0;
    i0 = i0 > i1;
    l4 = i0;
    i0 = p2;
    l1 = i0;
    i0 = p4;
    p1 = i0;
    i0 = l4;
    if (i0) {goto L9;}
  B8:;
  i0 = p2;
  i1 = 1u;
  i0 += i1;
  l5 = i0;
  i0 = l0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 30));
  l1 = i0;
  i0 = l0;
  i1 = l2;
  i0 += i1;
  p1 = i0;
  i0 = p5;
  i1 = 64u;
  i0 &= i1;
  if (i0) {goto B1;}
  B2:;
  i0 = 0u;
  l2 = i0;
  i0 = l5;
  i1 = l0;
  i0 = i0 <= i1;
  if (i0) {goto B0;}
  i0 = l1;
  i1 = 255u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l5;
  i1 = 4294967295u;
  i0 += i1;
  l5 = i0;
  i1 = l1;
  i32_store8((&M0), (u64)(i0), i1);
  goto B0;
  B1:;
  i0 = l1;
  i1 = 255u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = 1u;
  l2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 30u;
  i1 += i2;
  i2 = 1u;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
  i0 = p7;
  i1 = 4294967295u;
  i0 += i1;
  p7 = i0;
  goto B0;
  B10:;
  i0 = 0u;
  l2 = i0;
  B0:;
  i0 = l0;
  i1 = p6;
  i32_store8((&M0), (u64)(i0 + 31), i1);
  i0 = p1;
  i1 = l5;
  i0 -= i1;
  l3 = i0;
  i0 = 26512u;
  p2 = i0;
  i0 = 16u;
  l1 = i0;
  i0 = p6;
  i0 = !(i0);
  if (i0) {goto B19;}
  i0 = p6;
  i1 = 32u;
  i0 = i0 == i1;
  if (i0) {goto B19;}
  i0 = p6;
  i1 = 48u;
  i0 = i0 != i1;
  if (i0) {goto B18;}
  i0 = 26544u;
  p2 = i0;
  B19:;
  i0 = p7;
  i1 = l3;
  i0 -= i1;
  p6 = i0;
  i0 = p5;
  i1 = 128u;
  i0 &= i1;
  if (i0) {goto B17;}
  goto B16;
  B18:;
  i0 = l0;
  i1 = 31u;
  i0 += i1;
  p2 = i0;
  i0 = 1u;
  l1 = i0;
  i0 = p7;
  i1 = l3;
  i0 -= i1;
  p6 = i0;
  i0 = p5;
  i1 = 128u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B16;}
  B17:;
  i0 = p6;
  i1 = p6;
  i2 = 2u;
  i1 = I32_DIV_S(i1, i2);
  p1 = i1;
  i0 -= i1;
  l4 = i0;
  i0 = p1;
  p6 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B15;}
  goto B13;
  B16:;
  i0 = 0u;
  l4 = i0;
  i0 = p6;
  p7 = i0;
  i0 = p5;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B14;}
  i0 = p6;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B13;}
  B15:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p4 = i0;
  i0 = p6;
  p1 = i0;
  L20: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p2;
    i2 = l1;
    i3 = p1;
    i4 = p1;
    i5 = l1;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p3 = i2;
    i3 = p4;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = p1;
    i1 = p3;
    i0 -= i1;
    p1 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L20;}
  i0 = l4;
  p7 = i0;
  i0 = p6;
  l4 = i0;
  B14:;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B11;}
  goto B12;
  B13:;
  i0 = l4;
  p7 = i0;
  i0 = 0u;
  l4 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B11;}
  B12:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l5;
  i2 = l3;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
  i0 = l4;
  i1 = l3;
  i0 += i1;
  l4 = i0;
  B11:;
  i0 = p7;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B21;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p4 = i0;
  i0 = p7;
  p1 = i0;
  L22: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p2;
    i2 = l1;
    i3 = p1;
    i4 = p1;
    i5 = l1;
    i4 = (u32)((s32)i4 > (s32)i5);
    i2 = i4 ? i2 : i3;
    p3 = i2;
    i3 = p4;
    i3 = i32_load((&M0), (u64)(i3));
    CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
    i0 = p1;
    i1 = p3;
    i0 -= i1;
    p1 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L22;}
  i0 = l4;
  i1 = p7;
  i0 += i1;
  l4 = i0;
  B21:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  i1 = l2;
  i0 += i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 utf8_get_char(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l0 = i0;
  i1 = 128u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 127u;
  i0 &= i1;
  l1 = i0;
  i0 = 64u;
  l2 = i0;
  i0 = l0;
  i1 = 64u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  L2: vm_checktime();
    i0 = l2;
    i1 = 4294967295u;
    i0 ^= i1;
    l0 = i0;
    i0 = l2;
    i1 = 1u;
    i0 >>= (i1 & 31);
    l3 = i0;
    l2 = i0;
    i0 = l3;
    i1 = l1;
    i2 = l0;
    i1 &= i2;
    l1 = i1;
    i0 &= i1;
    if (i0) {goto L2;}
  B1:;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 1));
  l2 = i0;
  i1 = 192u;
  i0 &= i1;
  i1 = 128u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 2u;
  i0 += i1;
  l0 = i0;
  L4: vm_checktime();
    i0 = l2;
    i1 = 63u;
    i0 &= i1;
    i1 = l1;
    i2 = 6u;
    i1 <<= (i2 & 31);
    i0 |= i1;
    l1 = i0;
    i0 = l0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l2 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = l2;
    i1 = 192u;
    i0 &= i1;
    i1 = 128u;
    i0 = i0 == i1;
    if (i0) {goto L4;}
  B3:;
  i0 = l1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 utf8_next_char(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  L0: vm_checktime();
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0 + 1));
    l0 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    p0 = i0;
    i0 = l0;
    i1 = 192u;
    i0 &= i1;
    i1 = 128u;
    i0 = i0 == i1;
    if (i0) {goto L0;}
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 utf8_ptr_to_index(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = p1;
  i1 = p0;
  i0 = i0 <= i1;
  if (i0) {goto B0;}
  i0 = 0u;
  l0 = i0;
  L1: vm_checktime();
    i0 = l0;
    i1 = p1;
    i2 = 4294967295u;
    i1 += i2;
    p1 = i1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i2 = 192u;
    i1 &= i2;
    i2 = 128u;
    i1 = i1 != i2;
    i0 += i1;
    l0 = i0;
    i0 = p1;
    i1 = p0;
    i0 = i0 > i1;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 utf8_charlen(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i0 += i1;
  l0 = i0;
  i0 = 0u;
  p1 = i0;
  L1: vm_checktime();
    i0 = p1;
    i1 = p0;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i2 = 192u;
    i1 &= i2;
    i2 = 128u;
    i1 = i1 != i2;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L1;}
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 unichar_isspace(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 127u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 26576u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  i1 = 1u;
  i0 >>= (i1 & 31);
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 unichar_isalpha(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 127u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 26576u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 8u;
  i0 &= i1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 unichar_isdigit(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 128u;
  i0 = i0 < i1;
  i1 = p0;
  i2 = 4294967248u;
  i1 += i2;
  i2 = 10u;
  i1 = i1 < i2;
  i0 &= i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 unichar_isxdigit(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 127u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 26576u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 64u;
  i0 &= i1;
  i1 = 6u;
  i0 >>= (i1 & 31);
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 unichar_isupper(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 128u;
  i0 = i0 < i1;
  i1 = p0;
  i2 = 4294967231u;
  i1 += i2;
  i2 = 26u;
  i1 = i1 < i2;
  i0 &= i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 unichar_islower(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 128u;
  i0 = i0 < i1;
  i1 = p0;
  i2 = 4294967199u;
  i1 += i2;
  i2 = 26u;
  i1 = i1 < i2;
  i0 &= i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 unichar_tolower(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 32u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 4294967231u;
  i2 += i3;
  i3 = 26u;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  i1 = p0;
  i2 = p0;
  i3 = 128u;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 unichar_toupper(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 4294967264u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 4294967199u;
  i2 += i3;
  i3 = 26u;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  i1 = p0;
  i2 = p0;
  i3 = 128u;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 unichar_xdigit_value(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 4294967248u;
  i0 += i1;
  p0 = i0;
  i1 = 4294967263u;
  i0 &= i1;
  i1 = 4294967289u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 9u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 utf8_check(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B4;}
  i0 = p0;
  i1 = p1;
  i0 += i1;
  l0 = i0;
  i0 = 0u;
  p1 = i0;
  L5: vm_checktime();
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l1 = i0;
    i0 = p1;
    i1 = 255u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B6;}
    i0 = l1;
    i1 = 192u;
    i0 &= i1;
    i1 = 128u;
    i0 = i0 != i1;
    if (i0) {goto B1;}
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L5;}
    goto B3;
    B6:;
    i0 = l1;
    i1 = 192u;
    i0 = i0 < i1;
    if (i0) {goto B7;}
    i0 = l1;
    i1 = 247u;
    i0 = i0 > i1;
    if (i0) {goto B0;}
    i0 = 229u;
    i1 = l1;
    i2 = 3u;
    i1 >>= (i2 & 31);
    i2 = 6u;
    i1 &= i2;
    i0 >>= (i1 & 31);
    i1 = 3u;
    i0 &= i1;
    p1 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L5;}
    goto B3;
    B7:;
    i0 = 0u;
    p1 = i0;
    i0 = l1;
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 24u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B2;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L5;}
    goto B3;
  B4:;
  i0 = 0u;
  p1 = i0;
  B3:;
  i0 = p1;
  i1 = 255u;
  i0 &= i1;
  i0 = !(i0);
  p1 = i0;
  B2:;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mpz_init_zero(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  FUNC_EPILOGUE;
}

static void mpz_init_from_int(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = 0u;
  i2 = 4u;
  i1 = m_realloc(i1, i2);
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  l2 = i1;
  i2 = 8u;
  i1 |= i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = l0;
  i2 = 10u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  goto B1;
  B2:;
  i0 = p0;
  i1 = l2;
  i2 = 9u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  i1 = p1;
  i0 -= i1;
  p1 = i0;
  B1:;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  L3: vm_checktime();
    i0 = l1;
    i1 = p1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = p1;
    i1 = 16u;
    i0 >>= (i1 & 31);
    p1 = i0;
    if (i0) {goto L3;}
  B0:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mpz_init_fixed_from_int(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  p2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p2;
  i1 = 7u;
  i0 = i0 <= i1;
  if (i0) {goto B4;}
  i0 = 0u;
  l0 = i0;
  i0 = p3;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B3;}
  goto B2;
  B4:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  i2 = 4u;
  i1 = m_realloc(i1, i2);
  p1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = 8u;
  i1 |= i2;
  p2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  l0 = i0;
  i0 = p3;
  i1 = 0u;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B2;}
  B3:;
  i0 = p0;
  i1 = p2;
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p3;
  i0 -= i1;
  p3 = i0;
  goto B1;
  B2:;
  i0 = p0;
  i1 = p2;
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  B1:;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  L5: vm_checktime();
    i0 = p1;
    i1 = p3;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = p3;
    i1 = 16u;
    i0 >>= (i1 & 31);
    p3 = i0;
    if (i0) {goto L5;}
  B0:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mpz_deinit(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  m_free(i0);
  B0:;
  FUNC_EPILOGUE;
}

static void mpz_set_from_ll(u32 p0, u64 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 15u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 = m_realloc(i1, i2);
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = 16u;
  i1 |= i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  j0 = p1;
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B4;}
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i1 = l1;
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  j0 = 0ull;
  j1 = p1;
  j0 -= j1;
  p1 = j0;
  i0 = !(j0);
  i0 = !(i0);
  if (i0) {goto B3;}
  goto B2;
  B4:;
  i0 = p0;
  i1 = l1;
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  j0 = p1;
  i0 = !(j0);
  if (i0) {goto B2;}
  B3:;
  L5: vm_checktime();
    i0 = l0;
    j1 = p1;
    i64_store16((&M0), (u64)(i0), j1);
    i0 = l0;
    i1 = 2u;
    i0 += i1;
    l0 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    j0 = p1;
    j1 = 16ull;
    j0 >>= (j1 & 63);
    p1 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L5;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B2:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mpz_set_from_float(u32 p0, f64 p1) {
  u32 l0 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2, j3;
  f64 d2;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l0 = i1;
  i2 = 4294967294u;
  i1 &= i2;
  d2 = p1;
  j2 = i64_reinterpret_f64(d2);
  l1 = j2;
  j3 = 63ull;
  j2 >>= (j3 & 63);
  i2 = (u32)(j2);
  i1 |= i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  j0 = l1;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l3 = i0;
  i1 = 2047u;
  i0 &= i1;
  l4 = i0;
  i1 = 2047u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l4;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  goto Bfunc;
  B0:;
  i0 = l4;
  i1 = 1022u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  goto Bfunc;
  B2:;
  i0 = l4;
  i1 = 1023u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l4 = i0;
  i0 = l2;
  i1 = 8u;
  i0 = i0 < i1;
  if (i0) {goto B5;}
  i0 = l4;
  if (i0) {goto B4;}
  B5:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l4;
  i2 = 4u;
  i1 = m_realloc(i1, i2);
  l4 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = 8u;
  i1 |= i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B4:;
  i0 = p0;
  i1 = l2;
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l4;
  i1 = 1u;
  i32_store16((&M0), (u64)(i0), i1);
  goto Bfunc;
  B3:;
  j0 = l1;
  j1 = 4503599627370495ull;
  j0 &= j1;
  j1 = 4503599627370496ull;
  j0 |= j1;
  l1 = j0;
  i0 = l4;
  i1 = 4294966289u;
  i0 += i1;
  i1 = 16u;
  i0 = I32_DIV_S(i0, i1);
  l2 = i0;
  i0 = l4;
  i1 = 1074u;
  i0 = i0 > i1;
  if (i0) {goto B7;}
  j0 = l1;
  i1 = 1075u;
  i2 = l4;
  i1 -= i2;
  j1 = (u64)(i1);
  j0 >>= (j1 & 63);
  l1 = j0;
  i0 = 0u;
  l4 = i0;
  i0 = 0u;
  l5 = i0;
  goto B6;
  B7:;
  i0 = l4;
  i1 = 4294966221u;
  i0 += i1;
  i1 = 16u;
  i0 = I32_DIV_S(i0, i1);
  l4 = i0;
  i0 = l3;
  i1 = 13u;
  i0 += i1;
  i1 = 15u;
  i0 &= i1;
  l5 = i0;
  B6:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i0 = l0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l2;
  i2 = 2u;
  i3 = l2;
  i4 = 2u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  l0 = i1;
  i0 = i0 < i1;
  if (i0) {goto B9;}
  i0 = l3;
  if (i0) {goto B8;}
  B9:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l3;
  i2 = l0;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l3 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l0;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  B8:;
  i0 = p0;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = l3;
  i1 = 0u;
  i2 = l4;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  B10:;
  i0 = l5;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l4;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  j1 = l1;
  i2 = l5;
  j2 = (u64)(i2);
  j1 <<= (j2 & 63);
  i64_store16((&M0), (u64)(i0), j1);
  i0 = l4;
  i1 = 1u;
  i0 += i1;
  l4 = i0;
  j0 = l1;
  i1 = 16u;
  i2 = l5;
  i1 -= i2;
  j1 = (u64)(i1);
  j0 >>= (j1 & 63);
  l1 = j0;
  B11:;
  i0 = l4;
  i1 = l2;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l4;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p0 = i0;
  i0 = l2;
  i1 = l4;
  i0 -= i1;
  l4 = i0;
  L13: vm_checktime();
    i0 = p0;
    j1 = l1;
    i64_store16((&M0), (u64)(i0), j1);
    i0 = p0;
    i1 = 2u;
    i0 += i1;
    p0 = i0;
    j0 = l1;
    j1 = 16ull;
    j0 >>= (j1 & 63);
    l1 = j0;
    i0 = l4;
    i1 = 4294967295u;
    i0 += i1;
    l4 = i0;
    if (i0) {goto L13;}
  B12:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mpz_set_from_str(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p2;
  i1 = 1u;
  i0 >>= (i1 & 31);
  i1 = 268435455u;
  i0 &= i1;
  i1 = 1u;
  i0 += i1;
  l0 = i0;
  i1 = 2u;
  i2 = l0;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  i2 = l1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = 0u;
  l3 = i0;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  i2 = 1u;
  i1 |= i2;
  i2 = l0;
  i3 = 4294967294u;
  i2 &= i3;
  i3 = p3;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  p3 = i0;
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = p1;
  i1 = p2;
  i0 += i1;
  l4 = i0;
  i0 = p4;
  i1 = 65535u;
  i0 &= i1;
  l1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l5 = i0;
  i0 = p1;
  p3 = i0;
  L3: vm_checktime();
    i0 = 4294967248u;
    p0 = i0;
    i0 = p3;
    i0 = i32_load8_s((&M0), (u64)(i0));
    p2 = i0;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 10u;
    i0 = i0 < i1;
    if (i0) {goto B4;}
    i0 = 4294967241u;
    p0 = i0;
    i0 = p2;
    i1 = 4294967231u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 26u;
    i0 = i0 < i1;
    if (i0) {goto B4;}
    i0 = 4294967209u;
    p0 = i0;
    i0 = p2;
    i1 = 4294967199u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 25u;
    i0 = i0 > i1;
    if (i0) {goto B2;}
    B4:;
    i0 = p0;
    i1 = p2;
    i0 += i1;
    p0 = i0;
    i1 = p4;
    i0 = i0 >= i1;
    if (i0) {goto B2;}
    i0 = p0;
    i1 = 65535u;
    i0 &= i1;
    p2 = i0;
    i0 = l3;
    if (i0) {goto B7;}
    i0 = l2;
    p0 = i0;
    i0 = p2;
    if (i0) {goto B6;}
    goto B5;
    B7:;
    i0 = l2;
    p0 = i0;
    i0 = l3;
    l0 = i0;
    L8: vm_checktime();
      i0 = p0;
      i1 = l1;
      i2 = p0;
      i2 = i32_load16_u((&M0), (u64)(i2));
      i1 *= i2;
      i2 = p2;
      i1 += i2;
      p2 = i1;
      i32_store16((&M0), (u64)(i0), i1);
      i0 = p0;
      i1 = 2u;
      i0 += i1;
      p0 = i0;
      i0 = p2;
      i1 = 16u;
      i0 >>= (i1 & 31);
      p2 = i0;
      i0 = l0;
      i1 = 4294967295u;
      i0 += i1;
      l0 = i0;
      if (i0) {goto L8;}
    i0 = l2;
    i1 = l3;
    i2 = 1u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p0 = i0;
    i0 = p2;
    i0 = !(i0);
    if (i0) {goto B5;}
    B6:;
    i0 = p0;
    i1 = p2;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 2u;
    i0 += i1;
    p0 = i0;
    B5:;
    i0 = l5;
    i1 = p0;
    i2 = l2;
    i1 -= i2;
    i2 = 1u;
    i1 = (u32)((s32)i1 >> (i2 & 31));
    l3 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p3;
    i1 = 1u;
    i0 += i1;
    p3 = i0;
    i1 = l4;
    i0 = i0 < i1;
    if (i0) {goto L3;}
  B2:;
  i0 = p3;
  i1 = p1;
  i0 -= i1;
  FUNC_EPILOGUE;
  return i0;
}

static void mpz_set_from_bytes(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p2;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 15u;
  i0 += i1;
  i1 = 4u;
  i0 >>= (i1 & 31);
  l0 = i0;
  i1 = 2u;
  i2 = l0;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i2 = l0;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l0;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = 0u;
  l3 = i0;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l2;
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 4294967295u;
  i1 = 1u;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i0 = p3;
  i1 = p2;
  i0 += i1;
  i1 = 4294967295u;
  i0 += i1;
  i1 = p3;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  l5 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l6 = i0;
  i0 = 0u;
  l0 = i0;
  L3: vm_checktime();
    i0 = l3;
    l7 = i0;
    i0 = p2;
    i0 = !(i0);
    if (i0) {goto B5;}
    i0 = l0;
    i1 = 15u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B5;}
    i0 = 0u;
    p1 = i0;
    i0 = l5;
    l3 = i0;
    i0 = p2;
    p3 = i0;
    L6: vm_checktime();
      i0 = p3;
      i1 = 4294967295u;
      i0 += i1;
      p2 = i0;
      i0 = l3;
      i1 = l4;
      i0 += i1;
      l5 = i0;
      i0 = l0;
      i1 = 8u;
      i0 += i1;
      l2 = i0;
      i0 = p1;
      i1 = l3;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i2 = l0;
      i1 <<= (i2 & 31);
      i0 |= i1;
      p1 = i0;
      i0 = p3;
      i1 = 1u;
      i0 = i0 == i1;
      if (i0) {goto B4;}
      i0 = l0;
      i1 = 8u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l8 = i0;
      i0 = l2;
      l0 = i0;
      i0 = l5;
      l3 = i0;
      i0 = p2;
      p3 = i0;
      i0 = l8;
      if (i0) {goto L6;}
      goto B4;
    B5:;
    i0 = 0u;
    p1 = i0;
    i0 = l0;
    l2 = i0;
    B4:;
    i0 = l6;
    i1 = l7;
    i2 = 1u;
    i1 += i2;
    l3 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = l7;
    i2 = 1u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = p1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = 4294967280u;
    i0 += i1;
    l0 = i0;
    i0 = p2;
    if (i0) {goto L3;}
  B2:;
  i0 = l1;
  i1 = l3;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l3 = i0;
  L8: vm_checktime();
    i0 = l3;
    l0 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto B7;}
    i0 = l0;
    i1 = 4294967294u;
    i0 += i1;
    l3 = i0;
    i0 = l0;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto L8;}
  B7:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i2 = 2u;
  i1 += i2;
  i2 = l1;
  i1 -= i2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static u32 mpz_cmp(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 &= i2;
  l1 = i1;
  i0 -= i1;
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l2;
  goto Bfunc;
  B3:;
  i0 = 4294967295u;
  l3 = i0;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l2 = i1;
  i0 = i0 < i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = l2;
  i0 = i0 > i1;
  l3 = i0;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i1 = l2;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 4294967294u;
  i1 += i2;
  l2 = i1;
  i0 += i1;
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i0 += i1;
  p0 = i0;
  i0 = 4294967295u;
  l3 = i0;
  L5: vm_checktime();
    i0 = p0;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i1 = p1;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 -= i1;
    l2 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B4;}
    i0 = l2;
    if (i0) {goto B0;}
    i0 = p1;
    i1 = 4294967294u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4294967294u;
    i0 += i1;
    p0 = i0;
    i0 = l0;
    i1 = 4294967295u;
    i0 += i1;
    l0 = i0;
    if (i0) {goto L5;}
  i0 = 0u;
  l3 = i0;
  B4:;
  i0 = 0u;
  i1 = l3;
  i0 -= i1;
  i1 = l3;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = 0u;
  i1 = 1u;
  i0 -= i1;
  i1 = 1u;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mpz_abs_inpl(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 2u;
  i2 = l0;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = l1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B1:;
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 &= i2;
  i2 = l2;
  i3 = 4294967294u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  l1 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B0:;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mpz_neg_inpl(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 2u;
  i2 = l0;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = l1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B1:;
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 &= i2;
  i2 = l2;
  i3 = 4294967294u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  l1 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B0:;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 ^= i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mpz_not_inpl(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 2u;
  i2 = l0;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  B4:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = l1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B3:;
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 &= i2;
  i2 = l2;
  i3 = 4294967294u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  l1 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B5;}
  B6:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  i2 = 4u;
  i1 = m_realloc(i1, i2);
  p1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = 8u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  B5:;
  i0 = p1;
  i1 = 1u;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = 1u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B7;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i0 = p1;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l2;
  i2 = 1u;
  i1 += i2;
  p1 = i1;
  i2 = 2u;
  i3 = p1;
  i4 = 2u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  p1 = i1;
  i0 = i0 < i1;
  if (i0) {goto B9;}
  i0 = l3;
  if (i0) {goto B8;}
  B9:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l3;
  i2 = p1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l3 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = p1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  B8:;
  i0 = l3;
  i1 = l3;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  l0 = i1;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 >>= (i1 & 31);
  l0 = i0;
  i0 = l2;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  i0 = 1u;
  i1 = l2;
  i0 -= i1;
  l1 = i0;
  L11: vm_checktime();
    i0 = p1;
    i1 = l0;
    i2 = p1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = l0;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l0 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    if (i0) {goto L11;}
  i0 = l3;
  i1 = l2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  B10:;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = p1;
  i1 = l0;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  B12:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = l3;
  i1 -= i2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B7:;
  i0 = p0;
  i1 = p1;
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i1 = p0;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i2 = 4294967295u;
  i1 += i2;
  l0 = i1;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  i0 = l2;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B13;}
  i0 = 1u;
  i1 = l2;
  i0 -= i1;
  l1 = i0;
  L14: vm_checktime();
    i0 = p1;
    i1 = l0;
    i2 = 16u;
    i1 = (u32)((s32)i1 >> (i2 & 31));
    i2 = p1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    if (i0) {goto L14;}
  i0 = p0;
  i1 = l2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  B13:;
  i0 = p1;
  i1 = 4294967294u;
  i0 += i1;
  l0 = i0;
  L16: vm_checktime();
    i0 = l0;
    p1 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto B15;}
    i0 = p1;
    i1 = 4294967294u;
    i0 += i1;
    l0 = i0;
    i0 = p1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto L16;}
  B15:;
  i0 = l3;
  i1 = p1;
  i2 = 2u;
  i1 += i2;
  i2 = p0;
  i1 -= i2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0), i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mpz_shl_inpl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = p2;
  i2 = 15u;
  i1 += i2;
  i2 = 4u;
  i1 >>= (i2 & 31);
  l1 = i1;
  i0 += i1;
  l2 = i0;
  i1 = 2u;
  i2 = l2;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l4 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l3;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  B4:;
  i0 = l4;
  i1 = l3;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = m_realloc(i0, i1);
  l4 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l4;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l0 = i1;
  i2 = l1;
  i1 += i2;
  l2 = i1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l3 = i0;
  i0 = p2;
  i1 = 15u;
  i0 &= i1;
  p2 = i0;
  i1 = 16u;
  i2 = p2;
  i0 = i2 ? i0 : i1;
  p2 = i0;
  i0 = l0;
  if (i0) {goto B1;}
  i0 = 16u;
  i1 = p2;
  i0 -= i1;
  l5 = i0;
  i0 = 0u;
  l6 = i0;
  goto B0;
  B3:;
  i0 = l0;
  i1 = 2u;
  i2 = l0;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  p2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = p2;
  i0 = i0 >= i1;
  if (i0) {goto B5;}
  B6:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l3;
  i2 = p2;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l3 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = p2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B5:;
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 &= i2;
  i2 = l0;
  i3 = 4294967294u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  p2 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l3;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  goto Bfunc;
  B2:;
  i0 = p2;
  i1 = 15u;
  i0 &= i1;
  l3 = i0;
  i1 = 16u;
  i2 = l3;
  i0 = i2 ? i0 : i1;
  p2 = i0;
  i0 = l4;
  i1 = l2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l3 = i0;
  B1:;
  i0 = 16u;
  i1 = p2;
  i0 -= i1;
  l5 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  p2 = i0;
  i0 = 0u;
  l6 = i0;
  L7: vm_checktime();
    i0 = l3;
    i1 = l6;
    i2 = p2;
    i2 = i32_load16_u((&M0), (u64)(i2));
    l7 = i2;
    i1 |= i2;
    i2 = l5;
    i1 >>= (i2 & 31);
    i32_store16((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = 4294967294u;
    i0 += i1;
    p2 = i0;
    i0 = l3;
    i1 = 4294967294u;
    i0 += i1;
    l3 = i0;
    i0 = l7;
    i1 = 16u;
    i0 <<= (i1 & 31);
    l6 = i0;
    i0 = l0;
    i1 = 4294967295u;
    i0 += i1;
    l0 = i0;
    if (i0) {goto L7;}
  i0 = l4;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l3 = i0;
  B0:;
  i0 = l3;
  i1 = l6;
  i2 = l5;
  i1 >>= (i2 & 31);
  i32_store16((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = 1u;
  i2 = l1;
  i1 -= i2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = l1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i3 = 4294967294u;
  i2 += i3;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l3;
  i1 = l2;
  i2 = l1;
  i1 -= i2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l3 = i0;
  L9: vm_checktime();
    i0 = l2;
    p2 = i0;
    i0 = !(i0);
    if (i0) {goto B8;}
    i0 = p2;
    i1 = 4294967295u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i0 = i32_load16_u((&M0), (u64)(i0));
    l0 = i0;
    i0 = l3;
    i1 = 4294967294u;
    i0 += i1;
    l3 = i0;
    i0 = l0;
    i0 = !(i0);
    if (i0) {goto L9;}
  B8:;
  i0 = p0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mpz_shr_inpl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 2u;
  i2 = l0;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B5;}
  B6:;
  i0 = l2;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = m_realloc(i0, i1);
  l2 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l3 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B5:;
  i0 = p2;
  i1 = 15u;
  i0 &= i1;
  l4 = i0;
  i0 = 0u;
  l5 = i0;
  i0 = l0;
  i1 = p2;
  i2 = 4u;
  i1 >>= (i2 & 31);
  l6 = i1;
  i0 = i0 <= i1;
  if (i0) {goto B0;}
  i0 = l2;
  p2 = i0;
  i0 = l0;
  i1 = l6;
  i0 -= i1;
  l5 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p2 = i0;
  i1 = l6;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load16_u((&M0), (u64)(i0));
  l1 = i0;
  i0 = l5;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = l2;
  l0 = i0;
  goto B2;
  B4:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B7;}
  B8:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  i2 = l1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B7:;
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 &= i2;
  i2 = l0;
  i3 = 4294967294u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  goto Bfunc;
  B3:;
  i0 = l6;
  i1 = 1u;
  i0 += i1;
  l7 = i0;
  i1 = l0;
  i0 -= i1;
  l3 = i0;
  i0 = l0;
  i1 = 4294967295u;
  i0 += i1;
  i1 = l6;
  i0 -= i1;
  l8 = i0;
  i0 = p2;
  i1 = l7;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l0 = i0;
  i0 = l2;
  p2 = i0;
  L9: vm_checktime();
    i0 = p2;
    i1 = l0;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i2 = 16u;
    i1 <<= (i2 & 31);
    i2 = l1;
    i1 |= i2;
    i2 = l4;
    i1 >>= (i2 & 31);
    i32_store16((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = 2u;
    i0 += i1;
    p2 = i0;
    i0 = l0;
    i0 = i32_load16_u((&M0), (u64)(i0));
    l1 = i0;
    i0 = l0;
    i1 = 2u;
    i0 += i1;
    l0 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    if (i0) {goto L9;}
  i0 = l2;
  i1 = l8;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l0 = i0;
  B2:;
  i0 = l0;
  i1 = l1;
  i2 = l4;
  i1 >>= (i2 & 31);
  i32_store16((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l5;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  B1:;
  i0 = l5;
  i1 = p2;
  i2 = 4294967294u;
  i1 += i2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i1 = !(i1);
  i0 -= i1;
  l5 = i0;
  B0:;
  i0 = p0;
  i1 = l5;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l3;
  i2 = 4294967294u;
  i1 &= i2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  l0 = i2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = 0u;
  l7 = i0;
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i0 = 1u;
  l0 = i0;
  L17: vm_checktime();
    i0 = p2;
    i0 = i32_load16_u((&M0), (u64)(i0));
    if (i0) {goto B15;}
    i0 = l0;
    i1 = l6;
    i0 = i0 >= i1;
    if (i0) {goto B16;}
    i0 = p2;
    i1 = 2u;
    i0 += i1;
    p2 = i0;
    i0 = l0;
    i1 = l3;
    i0 = i0 >= i1;
    l1 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto L17;}
  B16:;
  i0 = l6;
  i1 = l3;
  i0 = i0 < i1;
  if (i0) {goto B14;}
  goto B13;
  B15:;
  i0 = 1u;
  l7 = i0;
  i0 = l6;
  i1 = l3;
  i0 = i0 >= i1;
  if (i0) {goto B13;}
  B14:;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l6;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load16_u((&M0), (u64)(i0));
  i1 = 4294967295u;
  i2 = l4;
  i1 <<= (i2 & 31);
  i2 = 4294967295u;
  i1 ^= i2;
  i0 &= i1;
  if (i0) {goto B12;}
  B13:;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B11;}
  B12:;
  i0 = l5;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = l2;
  i1 = l2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  p2 = i1;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 2u;
  i0 += i1;
  l0 = i0;
  i0 = p2;
  i1 = 16u;
  i0 >>= (i1 & 31);
  p2 = i0;
  i0 = l5;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B18;}
  i0 = 1u;
  i1 = l5;
  i0 -= i1;
  l1 = i0;
  L19: vm_checktime();
    i0 = l0;
    i1 = p2;
    i2 = l0;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    p2 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 2u;
    i0 += i1;
    l0 = i0;
    i0 = p2;
    i1 = 16u;
    i0 >>= (i1 & 31);
    p2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    if (i0) {goto L19;}
  i0 = l2;
  i1 = l5;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l0 = i0;
  B18:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B20;}
  i0 = l0;
  i1 = p2;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 2u;
  i0 += i1;
  l0 = i0;
  B20:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i2 = l2;
  i1 -= i2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0), i1);
  B11:;
  goto Bfunc;
  B10:;
  i0 = l2;
  i1 = 1u;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = 1u;
  i32_store((&M0), (u64)(i0), i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mpz_add_inpl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l1 = i1;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 4294967295u;
  i0 += i1;
  l2 = i0;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  i0 = 1u;
  i1 = l0;
  i0 -= i1;
  l3 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l1 = i1;
  i0 += i1;
  l0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l1;
  i0 += i1;
  l1 = i0;
  L3: vm_checktime();
    i0 = l1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i1 = l0;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 -= i1;
    l2 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B1;}
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l0;
    i1 = 4294967294u;
    i0 += i1;
    l0 = i0;
    i0 = l1;
    i1 = 4294967294u;
    i0 += i1;
    l1 = i0;
    i0 = l2;
    i0 = !(i0);
    if (i0) {goto L3;}
  B2:;
  i0 = p2;
  l0 = i0;
  i0 = p1;
  p2 = i0;
  goto B0;
  B1:;
  i0 = p1;
  l0 = i0;
  B0:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l4 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 ^= i1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B11;}
  i0 = l4;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i1 = 2u;
  i2 = l1;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l5 = i0;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B12;}
  B13:;
  i0 = l5;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = m_realloc(i0, i1);
  l5 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l5;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  B12:;
  i0 = l4;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l6 = i1;
  i0 -= i1;
  l7 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i0 = 0u;
  l0 = i0;
  i0 = l5;
  l2 = i0;
  i0 = l6;
  l8 = i0;
  i0 = l1;
  p1 = i0;
  L14: vm_checktime();
    i0 = l2;
    i1 = l0;
    i2 = p1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    i2 = l3;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 2u;
    i0 += i1;
    l3 = i0;
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i0 = l0;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l0 = i0;
    i0 = l8;
    i1 = 4294967295u;
    i0 += i1;
    l8 = i0;
    if (i0) {goto L14;}
  i0 = l1;
  i1 = l6;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l3 = i1;
  i0 += i1;
  l1 = i0;
  i0 = l5;
  i1 = l3;
  i0 += i1;
  p1 = i0;
  i0 = l7;
  if (i0) {goto B9;}
  goto B8;
  B11:;
  i0 = l4;
  i1 = 2u;
  i2 = l4;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l5 = i0;
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B15;}
  B16:;
  i0 = l5;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = m_realloc(i0, i1);
  l5 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l5;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  B15:;
  i0 = l4;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l6 = i1;
  i0 -= i1;
  l7 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i0 = 0u;
  l0 = i0;
  i0 = l5;
  l2 = i0;
  i0 = l6;
  l8 = i0;
  i0 = l1;
  p1 = i0;
  L17: vm_checktime();
    i0 = l2;
    i1 = p1;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i2 = l3;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 -= i2;
    i2 = l0;
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 2u;
    i0 += i1;
    l3 = i0;
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i0 = l0;
    i1 = 16u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l0 = i0;
    i0 = l8;
    i1 = 4294967295u;
    i0 += i1;
    l8 = i0;
    if (i0) {goto L17;}
  i0 = l1;
  i1 = l6;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l3 = i1;
  i0 += i1;
  l1 = i0;
  i0 = l5;
  i1 = l3;
  i0 += i1;
  p1 = i0;
  i0 = l7;
  if (i0) {goto B6;}
  goto B5;
  B10:;
  i0 = 0u;
  l0 = i0;
  i0 = l5;
  p1 = i0;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B8;}
  B9:;
  i0 = l6;
  i1 = l4;
  i0 -= i1;
  l2 = i0;
  i0 = p1;
  l3 = i0;
  L18: vm_checktime();
    i0 = l3;
    i1 = l0;
    i2 = l1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    i1 = 2u;
    i0 += i1;
    l3 = i0;
    i0 = l0;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l0 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    if (i0) {goto L18;}
  i0 = p1;
  i1 = l7;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  B8:;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = l0;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  goto B4;
  B7:;
  i0 = 0u;
  l0 = i0;
  i0 = l5;
  p1 = i0;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B5;}
  B6:;
  i0 = l6;
  i1 = l4;
  i0 -= i1;
  l2 = i0;
  i0 = p1;
  l3 = i0;
  L19: vm_checktime();
    i0 = l3;
    i1 = l0;
    i2 = l1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    i1 = 2u;
    i0 += i1;
    l3 = i0;
    i0 = l0;
    i1 = 16u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l0 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    if (i0) {goto L19;}
  i0 = p1;
  i1 = l7;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  B5:;
  i0 = p1;
  i1 = 4294967294u;
  i0 += i1;
  l1 = i0;
  L21: vm_checktime();
    i0 = l1;
    l0 = i0;
    i1 = l5;
    i0 = i0 < i1;
    if (i0) {goto B20;}
    i0 = l0;
    i1 = 4294967294u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto L21;}
  B20:;
  i0 = l0;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  B4:;
  i0 = p0;
  i1 = p1;
  i2 = l5;
  i1 -= i2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mpz_sub_inpl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l1 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = p1;
  l0 = i0;
  i0 = 1u;
  l2 = i0;
  goto B0;
  B1:;
  i0 = 0u;
  l2 = i0;
  i0 = l0;
  i1 = 4294967295u;
  i0 += i1;
  l3 = i0;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B4;}
  i0 = 1u;
  l2 = i0;
  i0 = 1u;
  i1 = l0;
  i0 -= i1;
  l4 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l3;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l1 = i1;
  i0 += i1;
  l0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l1;
  i0 += i1;
  l1 = i0;
  L5: vm_checktime();
    i0 = l1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i1 = l0;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 -= i1;
    l3 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B2;}
    i0 = l4;
    i0 = !(i0);
    if (i0) {goto B6;}
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i0 = l0;
    i1 = 4294967294u;
    i0 += i1;
    l0 = i0;
    i0 = l1;
    i1 = 4294967294u;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto L5;}
    B6:;
  i0 = p2;
  l0 = i0;
  i0 = 0u;
  l2 = i0;
  goto B3;
  B4:;
  i0 = p2;
  l0 = i0;
  B3:;
  i0 = p1;
  p2 = i0;
  goto B0;
  B2:;
  i0 = p1;
  l0 = i0;
  B0:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l5 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 ^= i1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B14;}
  i0 = l5;
  i1 = 2u;
  i2 = l5;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B15;}
  B16:;
  i0 = l6;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = m_realloc(i0, i1);
  l6 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l6;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l5 = i0;
  B15:;
  i0 = l5;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l7 = i1;
  i0 -= i1;
  l8 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l4 = i0;
  i0 = 0u;
  l0 = i0;
  i0 = l6;
  l3 = i0;
  i0 = l7;
  l9 = i0;
  i0 = l1;
  p1 = i0;
  L17: vm_checktime();
    i0 = l3;
    i1 = p1;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i2 = l4;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 -= i2;
    i2 = l0;
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l4;
    i1 = 2u;
    i0 += i1;
    l4 = i0;
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = l3;
    i1 = 2u;
    i0 += i1;
    l3 = i0;
    i0 = l0;
    i1 = 16u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l0 = i0;
    i0 = l9;
    i1 = 4294967295u;
    i0 += i1;
    l9 = i0;
    if (i0) {goto L17;}
  i0 = l1;
  i1 = l7;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l4 = i1;
  i0 += i1;
  l1 = i0;
  i0 = l6;
  i1 = l4;
  i0 += i1;
  p1 = i0;
  i0 = l8;
  if (i0) {goto B12;}
  goto B11;
  B14:;
  i0 = l5;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i1 = 2u;
  i2 = l1;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B19;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B18;}
  B19:;
  i0 = l6;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = m_realloc(i0, i1);
  l6 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l6;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l5 = i0;
  B18:;
  i0 = l5;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l7 = i1;
  i0 -= i1;
  l8 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l4 = i0;
  i0 = 0u;
  l0 = i0;
  i0 = l6;
  l3 = i0;
  i0 = l7;
  l9 = i0;
  i0 = l1;
  p1 = i0;
  L20: vm_checktime();
    i0 = l3;
    i1 = l0;
    i2 = p1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    i2 = l4;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l4;
    i1 = 2u;
    i0 += i1;
    l4 = i0;
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = l3;
    i1 = 2u;
    i0 += i1;
    l3 = i0;
    i0 = l0;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l0 = i0;
    i0 = l9;
    i1 = 4294967295u;
    i0 += i1;
    l9 = i0;
    if (i0) {goto L20;}
  i0 = l1;
  i1 = l7;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l4 = i1;
  i0 += i1;
  l1 = i0;
  i0 = l6;
  i1 = l4;
  i0 += i1;
  p1 = i0;
  i0 = l8;
  if (i0) {goto B9;}
  goto B8;
  B13:;
  i0 = 0u;
  l0 = i0;
  i0 = l6;
  p1 = i0;
  i0 = l8;
  i0 = !(i0);
  if (i0) {goto B11;}
  B12:;
  i0 = l7;
  i1 = l5;
  i0 -= i1;
  l3 = i0;
  i0 = p1;
  l4 = i0;
  L21: vm_checktime();
    i0 = l4;
    i1 = l0;
    i2 = l1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l4;
    i1 = 2u;
    i0 += i1;
    l4 = i0;
    i0 = l0;
    i1 = 16u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l0 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    if (i0) {goto L21;}
  i0 = p1;
  i1 = l8;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  B11:;
  i0 = p1;
  i1 = 4294967294u;
  i0 += i1;
  l1 = i0;
  L23: vm_checktime();
    i0 = l1;
    l0 = i0;
    i1 = l6;
    i0 = i0 < i1;
    if (i0) {goto B22;}
    i0 = l0;
    i1 = 4294967294u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto L23;}
  B22:;
  i0 = l0;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  goto B7;
  B10:;
  i0 = 0u;
  l0 = i0;
  i0 = l6;
  p1 = i0;
  i0 = l8;
  i0 = !(i0);
  if (i0) {goto B8;}
  B9:;
  i0 = l7;
  i1 = l5;
  i0 -= i1;
  l3 = i0;
  i0 = p1;
  l4 = i0;
  L24: vm_checktime();
    i0 = l4;
    i1 = l0;
    i2 = l1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i1 += i2;
    l0 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l4;
    i1 = 2u;
    i0 += i1;
    l4 = i0;
    i0 = l0;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l0 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    if (i0) {goto L24;}
  i0 = p1;
  i1 = l8;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  B8:;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = p1;
  i1 = l0;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  B7:;
  i0 = p0;
  i1 = p1;
  i2 = l6;
  i1 -= i2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  i1 |= i2;
  i2 = l2;
  i1 ^= i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mpz_and_inpl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p1;
  i1 = p2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p2;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  i2 = i2 < i3;
  l0 = i2;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = 1u;
  l2 = i0;
  i0 = p2;
  i1 = p1;
  i2 = l0;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l4 = i0;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  l5 = i0;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  l2 = i0;
  B0:;
  i0 = l2;
  i1 = l4;
  i0 += i1;
  p1 = i0;
  i1 = 2u;
  i2 = p1;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l6;
  i2 = p1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l6 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = p1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  l5 = i0;
  i0 = l3;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  B1:;
  i0 = l5;
  i1 = 0u;
  i2 = l5;
  i3 = l1;
  i3 = i32_load((&M0), (u64)(i3));
  i4 = 1u;
  i3 &= i4;
  l7 = i3;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l8 = i0;
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = 0u;
  i1 = l7;
  i0 -= i1;
  l9 = i0;
  i0 = 65535u;
  i1 = 0u;
  i2 = l8;
  i0 = i2 ? i0 : i1;
  l10 = i0;
  i0 = 65535u;
  i1 = 0u;
  i2 = l5;
  i0 = i2 ? i0 : i1;
  l11 = i0;
  i0 = l4;
  i1 = 4294967295u;
  i0 += i1;
  p1 = i0;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 4294967295u;
  i0 += i1;
  p2 = i0;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l12 = i0;
  i0 = l6;
  l0 = i0;
  L6: vm_checktime();
    i0 = l11;
    i1 = l2;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 ^= i1;
    i1 = l5;
    i0 += i1;
    l5 = i0;
    i0 = p2;
    i1 = p1;
    i0 = i0 <= i1;
    if (i0) {goto B8;}
    i0 = l9;
    l13 = i0;
    goto B7;
    B8:;
    i0 = l12;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i1 = l9;
    i0 ^= i1;
    l13 = i0;
    i0 = l12;
    i1 = 2u;
    i0 += i1;
    l12 = i0;
    B7:;
    i0 = l0;
    i1 = l5;
    i2 = l7;
    i3 = l13;
    i4 = 65535u;
    i3 &= i4;
    i2 += i3;
    l7 = i2;
    i1 &= i2;
    i2 = 65535u;
    i1 &= i2;
    i2 = l10;
    i1 ^= i2;
    i2 = l8;
    i1 += i2;
    l8 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = 4294967295u;
    i0 += i1;
    p2 = i0;
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i0 = l0;
    i1 = 2u;
    i0 += i1;
    l0 = i0;
    i0 = l5;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l5 = i0;
    i0 = l7;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l7 = i0;
    i0 = l8;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l8 = i0;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    i1 = 4294967295u;
    i0 = i0 != i1;
    if (i0) {goto L6;}
  i0 = l6;
  i1 = l4;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  i0 = l8;
  i0 = !(i0);
  if (i0) {goto B3;}
  goto B4;
  B5:;
  i0 = l6;
  p1 = i0;
  i0 = l8;
  i0 = !(i0);
  if (i0) {goto B3;}
  B4:;
  i0 = p1;
  i1 = l8;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  B3:;
  i0 = p1;
  i1 = 4294967294u;
  i0 += i1;
  p2 = i0;
  L10: vm_checktime();
    i0 = p2;
    p1 = i0;
    i1 = l6;
    i0 = i0 < i1;
    if (i0) {goto B9;}
    i0 = p1;
    i1 = 4294967294u;
    i0 += i1;
    p2 = i0;
    i0 = p1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto L10;}
  B9:;
  i0 = p0;
  i1 = p1;
  i2 = 2u;
  i1 += i2;
  i2 = l6;
  i1 -= i2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i2 = l3;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = l1;
  i3 = i32_load((&M0), (u64)(i3));
  i2 &= i3;
  i3 = 1u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mpz_or_inpl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = p1;
  i1 = p2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p2;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  i2 = i2 < i3;
  l0 = i2;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = 1u;
  l2 = i0;
  i0 = p2;
  i1 = p1;
  i2 = l0;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l4 = i0;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  l2 = i0;
  B0:;
  i0 = l2;
  i1 = l4;
  i0 += i1;
  p1 = i0;
  i1 = 2u;
  i2 = p1;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l5 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  B2:;
  i0 = l5;
  i1 = p1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = m_realloc(i0, i1);
  l5 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = p1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l5;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  B1:;
  i0 = l5;
  p1 = i0;
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 &= i2;
  l6 = i1;
  i0 -= i1;
  l7 = i0;
  i0 = 65535u;
  i1 = 0u;
  i2 = 1u;
  i3 = l6;
  i4 = p2;
  i5 = 1u;
  i4 &= i5;
  l8 = i4;
  i2 = i4 ? i2 : i3;
  l9 = i2;
  i0 = i2 ? i0 : i1;
  l10 = i0;
  i0 = 65535u;
  i1 = 0u;
  i2 = l8;
  i0 = i2 ? i0 : i1;
  l11 = i0;
  i0 = l4;
  i1 = 4294967295u;
  i0 += i1;
  p1 = i0;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 4294967295u;
  i0 += i1;
  p2 = i0;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l12 = i0;
  i0 = l5;
  l0 = i0;
  L4: vm_checktime();
    i0 = l11;
    i1 = l2;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 ^= i1;
    i1 = l8;
    i0 += i1;
    l8 = i0;
    i0 = p2;
    i1 = p1;
    i0 = i0 <= i1;
    if (i0) {goto B6;}
    i0 = l7;
    l13 = i0;
    goto B5;
    B6:;
    i0 = l12;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i1 = l7;
    i0 ^= i1;
    l13 = i0;
    i0 = l12;
    i1 = 2u;
    i0 += i1;
    l12 = i0;
    B5:;
    i0 = l0;
    i1 = l6;
    i2 = l13;
    i3 = 65535u;
    i2 &= i3;
    i1 += i2;
    l6 = i1;
    i2 = l8;
    i1 |= i2;
    i2 = 65535u;
    i1 &= i2;
    i2 = l10;
    i1 ^= i2;
    i2 = l9;
    i1 += i2;
    l9 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = 4294967295u;
    i0 += i1;
    p2 = i0;
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i0 = l0;
    i1 = 2u;
    i0 += i1;
    l0 = i0;
    i0 = l8;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l8 = i0;
    i0 = l6;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l6 = i0;
    i0 = l9;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l9 = i0;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    i1 = 4294967295u;
    i0 = i0 != i1;
    if (i0) {goto L4;}
  i0 = l5;
  i1 = l4;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  B3:;
  i0 = p1;
  i1 = 4294967294u;
  i0 += i1;
  p2 = i0;
  L8: vm_checktime();
    i0 = p2;
    p1 = i0;
    i1 = l5;
    i0 = i0 < i1;
    if (i0) {goto B7;}
    i0 = p1;
    i1 = 4294967294u;
    i0 += i1;
    p2 = i0;
    i0 = p1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto L8;}
  B7:;
  i0 = p0;
  i1 = p1;
  i2 = 2u;
  i1 += i2;
  i2 = l5;
  i1 -= i2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i2 = l1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = l3;
  i3 = i32_load((&M0), (u64)(i3));
  i2 |= i3;
  i3 = 1u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mpz_xor_inpl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = p2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p2;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  i2 = i2 < i3;
  l0 = i2;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = 1u;
  l2 = i0;
  i0 = p2;
  i1 = p1;
  i2 = l0;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l4 = i0;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  p2 = i0;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  l2 = i0;
  B0:;
  i0 = l2;
  i1 = l4;
  i0 += i1;
  p1 = i0;
  i1 = 2u;
  i2 = p1;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l5 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l5;
  i2 = p1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l5 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = p1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  p2 = i0;
  i0 = l3;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  B1:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  l2 = i0;
  i1 = p2;
  i0 ^= i1;
  l6 = i0;
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = l4;
  i1 = 4294967295u;
  i0 += i1;
  p1 = i0;
  i0 = p2;
  i1 = 1u;
  i0 ^= i1;
  l7 = i0;
  i0 = l2;
  i1 = 1u;
  i0 ^= i1;
  l8 = i0;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 4294967295u;
  i0 += i1;
  p2 = i0;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l9 = i0;
  i0 = l5;
  l0 = i0;
  L6: vm_checktime();
    i0 = l7;
    i1 = l2;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 += i1;
    i1 = 65535u;
    i0 += i1;
    l7 = i0;
    i0 = p2;
    i1 = p1;
    i0 = i0 <= i1;
    if (i0) {goto B8;}
    i0 = 65535u;
    l10 = i0;
    goto B7;
    B8:;
    i0 = l9;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i1 = 65535u;
    i0 += i1;
    l10 = i0;
    i0 = l9;
    i1 = 2u;
    i0 += i1;
    l9 = i0;
    B7:;
    i0 = l0;
    i1 = l10;
    i2 = l8;
    i1 += i2;
    l8 = i1;
    i2 = l7;
    i1 ^= i2;
    i2 = 65535u;
    i1 &= i2;
    i2 = l6;
    i1 += i2;
    l6 = i1;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = 4294967295u;
    i0 += i1;
    p2 = i0;
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i0 = l0;
    i1 = 2u;
    i0 += i1;
    l0 = i0;
    i0 = l7;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l7 = i0;
    i0 = l8;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l8 = i0;
    i0 = l6;
    i1 = 16u;
    i0 >>= (i1 & 31);
    l6 = i0;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    i1 = 4294967295u;
    i0 = i0 != i1;
    if (i0) {goto L6;}
  i0 = l5;
  i1 = l4;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B3;}
  goto B4;
  B5:;
  i0 = l5;
  p1 = i0;
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B3;}
  B4:;
  i0 = p1;
  i1 = l6;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  B3:;
  i0 = p1;
  i1 = 4294967294u;
  i0 += i1;
  p2 = i0;
  L10: vm_checktime();
    i0 = p2;
    p1 = i0;
    i1 = l5;
    i0 = i0 < i1;
    if (i0) {goto B9;}
    i0 = p1;
    i1 = 4294967294u;
    i0 += i1;
    p2 = i0;
    i0 = p1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto L10;}
  B9:;
  i0 = p0;
  i1 = p1;
  i2 = 2u;
  i1 += i2;
  i2 = l5;
  i1 -= i2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i2 = l1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = l3;
  i3 = i32_load((&M0), (u64)(i3));
  i2 ^= i3;
  i3 = 1u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mpz_mul_inpl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p1;
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p2;
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  l2 = i0;
  i0 = p2;
  l3 = i0;
  goto B0;
  B3:;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  goto Bfunc;
  B2:;
  i0 = 12u;
  i0 = m_malloc(i0);
  l2 = i0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967292u;
  i1 &= i2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  l0 = i2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  l4 = i1;
  i2 = 4294967292u;
  i1 &= i2;
  i2 = l0;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = l4;
  i2 = 1u;
  i1 >>= (i2 & 31);
  i2 = 2147483646u;
  i1 &= i2;
  i1 = m_malloc(i1);
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 >>= (i3 & 31);
  i3 = 2147483646u;
  i2 &= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = p2;
  i2 = p2;
  i3 = p1;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i0 = l2;
  l1 = i0;
  goto B0;
  B1:;
  i0 = 12u;
  i0 = m_malloc(i0);
  l3 = i0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967292u;
  i1 &= i2;
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  l4 = i2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  l5 = i1;
  i2 = 4294967292u;
  i1 &= i2;
  i2 = l4;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = p2;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l3;
  i1 = l5;
  i2 = 1u;
  i1 >>= (i2 & 31);
  i2 = 2147483646u;
  i1 &= i2;
  i1 = m_malloc(i1);
  l4 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l4;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 >>= (i3 & 31);
  i3 = 2147483646u;
  i2 &= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  l2 = i0;
  i0 = l3;
  l1 = i0;
  B0:;
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i0 += i1;
  p1 = i0;
  i1 = 2u;
  i2 = p1;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 2u;
  i0 >>= (i1 & 31);
  l4 = i0;
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B4;}
  B5:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = p2;
  i2 = p1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  p2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = p1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 1073741823u;
  i0 &= i1;
  l4 = i0;
  B4:;
  i0 = 0u;
  p1 = i0;
  i0 = p2;
  i1 = 0u;
  i2 = l4;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l3;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l7 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l8 = i0;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l5 = i0;
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l9 = i0;
  i0 = l7;
  i1 = l8;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l10 = i0;
  i1 = 4294967294u;
  i0 += i1;
  l11 = i0;
  i0 = l7;
  l12 = i0;
  L9: vm_checktime();
    i0 = 0u;
    p1 = i0;
    i0 = l8;
    l0 = i0;
    i0 = 0u;
    p2 = i0;
    L10: vm_checktime();
      i0 = l12;
      i1 = p1;
      i0 += i1;
      l4 = i0;
      i1 = p2;
      i2 = l4;
      i2 = i32_load16_u((&M0), (u64)(i2));
      i1 += i2;
      i2 = l5;
      i2 = i32_load16_u((&M0), (u64)(i2));
      i3 = l9;
      i4 = p1;
      i3 += i4;
      i3 = i32_load16_u((&M0), (u64)(i3));
      i2 *= i3;
      i1 += i2;
      p2 = i1;
      i32_store16((&M0), (u64)(i0), i1);
      i0 = p2;
      i1 = 16u;
      i0 >>= (i1 & 31);
      p2 = i0;
      i0 = p1;
      i1 = 2u;
      i0 += i1;
      p1 = i0;
      i0 = l0;
      i1 = 4294967295u;
      i0 += i1;
      l0 = i0;
      if (i0) {goto L10;}
    i0 = l10;
    p1 = i0;
    i0 = p2;
    i0 = !(i0);
    if (i0) {goto B11;}
    i0 = l10;
    i1 = p2;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l11;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    B11:;
    i0 = l10;
    i1 = 2u;
    i0 += i1;
    l10 = i0;
    i0 = l11;
    i1 = 2u;
    i0 += i1;
    l11 = i0;
    i0 = l5;
    i1 = 2u;
    i0 += i1;
    l5 = i0;
    i0 = l12;
    i1 = 2u;
    i0 += i1;
    l12 = i0;
    i0 = l6;
    i1 = 4294967295u;
    i0 += i1;
    l6 = i0;
    if (i0) {goto L9;}
    goto B7;
  B8:;
  i0 = l7;
  i1 = l6;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  p1 = i0;
  B7:;
  i0 = p1;
  i1 = l7;
  i0 -= i1;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  p1 = i0;
  B6:;
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i2 = 1u;
  i1 |= i2;
  i2 = p1;
  i3 = 4294967294u;
  i2 &= i3;
  i3 = l3;
  i3 = i32_load((&M0), (u64)(i3));
  i4 = l2;
  i4 = i32_load((&M0), (u64)(i4));
  i3 ^= i4;
  i4 = 1u;
  i3 &= i4;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  m_free(i0);
  i0 = l1;
  m_free(i0);
  B12:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mpz_pow_inpl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p2;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 12u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967292u;
  i1 &= i2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  l1 = i2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  l2 = i1;
  i2 = 4294967292u;
  i1 &= i2;
  i2 = l1;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l2;
  i2 = 1u;
  i1 >>= (i2 & 31);
  i2 = 2147483646u;
  i1 &= i2;
  i1 = m_malloc(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 >>= (i3 & 31);
  i3 = 2147483646u;
  i2 &= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = 12u;
  i0 = m_malloc(i0);
  l3 = i0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967292u;
  i1 &= i2;
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  p1 = i2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i2 = 4294967292u;
  i1 &= i2;
  i2 = p1;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = p2;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l3;
  i1 = l1;
  i2 = 1u;
  i1 >>= (i2 & 31);
  i2 = 2147483646u;
  i1 &= i2;
  i1 = m_malloc(i1);
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 >>= (i3 & 31);
  i3 = 2147483646u;
  i2 &= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B5;}
  B6:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  i2 = 4u;
  i1 = m_realloc(i1, i2);
  p1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = 8u;
  i1 |= i2;
  p2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B5:;
  i0 = p0;
  i1 = p2;
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 1u;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l3;
  i1 = 8u;
  i0 += i1;
  l5 = i0;
  L8: vm_checktime();
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 1u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B9;}
    i0 = p0;
    i1 = p0;
    i2 = l0;
    mpz_mul_inpl(i0, i1, i2);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    B9:;
    i0 = p1;
    i1 = 4294967294u;
    i0 += i1;
    l6 = i0;
    i0 = p1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    p2 = i0;
    i0 = l2;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B11;}
    i0 = l6;
    i1 = l2;
    i2 = 1u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l1 = i0;
    goto B10;
    B11:;
    i0 = 1u;
    i1 = l2;
    i0 -= i1;
    l1 = i0;
    L12: vm_checktime();
      i0 = p1;
      i1 = p2;
      i2 = 65534u;
      i1 &= i2;
      i2 = p1;
      i2 = i32_load16_u((&M0), (u64)(i2 + 2));
      p2 = i2;
      i3 = 16u;
      i2 <<= (i3 & 31);
      i1 |= i2;
      i2 = 1u;
      i1 >>= (i2 & 31);
      i32_store16((&M0), (u64)(i0), i1);
      i0 = p1;
      i1 = 2u;
      i0 += i1;
      p1 = i0;
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      l1 = i0;
      if (i0) {goto L12;}
    i0 = l6;
    i1 = l2;
    i2 = 1u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l1 = i0;
    p1 = i0;
    B10:;
    i0 = p1;
    i1 = p2;
    i2 = 65534u;
    i1 &= i2;
    i2 = 1u;
    i1 >>= (i2 & 31);
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l4;
    i1 = l2;
    i2 = l1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i2 = !(i2);
    i1 -= i2;
    p1 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B7;}
    i0 = l0;
    i1 = l0;
    i2 = l0;
    mpz_mul_inpl(i0, i1, i2);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    if (i0) {goto L8;}
  B7:;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B1;
  B4:;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  goto Bfunc;
  B3:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B13;}
  B14:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  i2 = 4u;
  i1 = m_realloc(i1, i2);
  p1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = 8u;
  i1 |= i2;
  p2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B13:;
  i0 = p0;
  i1 = p2;
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 1u;
  i32_store16((&M0), (u64)(i0), i1);
  goto Bfunc;
  B2:;
  i0 = l3;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  m_free(i0);
  i0 = l0;
  m_free(i0);
  B0:;
  i0 = l3;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  m_free(i0);
  i0 = l3;
  m_free(i0);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mpz_pow3_inpl(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p2;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = i32_load16_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  goto B0;
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  B4:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i2 = 4u;
  i1 = m_realloc(i1, i2);
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = 8u;
  i1 |= i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B3:;
  i0 = p0;
  i1 = l2;
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = 1u;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 12u;
  i0 = m_malloc(i0);
  l2 = i0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967292u;
  i1 &= i2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  l1 = i2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i2 = 4294967292u;
  i1 &= i2;
  i2 = l1;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = l3;
  i2 = 1u;
  i1 >>= (i2 & 31);
  i2 = 2147483646u;
  i1 &= i2;
  i1 = m_malloc(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 >>= (i3 & 31);
  i3 = 2147483646u;
  i2 &= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = 12u;
  i0 = m_malloc(i0);
  l4 = i0;
  i1 = l4;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967292u;
  i1 &= i2;
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  p1 = i2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i2 = 4294967292u;
  i1 &= i2;
  i2 = p1;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = p2;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l4;
  i1 = l1;
  i2 = 1u;
  i1 >>= (i2 & 31);
  i2 = 2147483646u;
  i1 &= i2;
  i1 = m_malloc(i1);
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 >>= (i3 & 31);
  i3 = 2147483646u;
  i2 &= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l4;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = l4;
  i1 = 8u;
  i0 += i1;
  l5 = i0;
  i0 = l4;
  i1 = 4u;
  i0 += i1;
  l6 = i0;
  L9: vm_checktime();
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 1u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B10;}
    i0 = p0;
    i1 = p0;
    i2 = l2;
    mpz_mul_inpl(i0, i1, i2);
    i0 = l0;
    i1 = p0;
    i2 = p0;
    i3 = p3;
    mpz_divmod_inpl(i0, i1, i2, i3);
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B7;}
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    B10:;
    i0 = p1;
    i1 = 4294967294u;
    i0 += i1;
    l7 = i0;
    i0 = p1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    p2 = i0;
    i0 = l3;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B12;}
    i0 = l7;
    i1 = l3;
    i2 = 1u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l1 = i0;
    goto B11;
    B12:;
    i0 = 1u;
    i1 = l3;
    i0 -= i1;
    l1 = i0;
    L13: vm_checktime();
      i0 = p1;
      i1 = p2;
      i2 = 65534u;
      i1 &= i2;
      i2 = p1;
      i2 = i32_load16_u((&M0), (u64)(i2 + 2));
      p2 = i2;
      i3 = 16u;
      i2 <<= (i3 & 31);
      i1 |= i2;
      i2 = 1u;
      i1 >>= (i2 & 31);
      i32_store16((&M0), (u64)(i0), i1);
      i0 = p1;
      i1 = 2u;
      i0 += i1;
      p1 = i0;
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      l1 = i0;
      if (i0) {goto L13;}
    i0 = l7;
    i1 = l3;
    i2 = 1u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l1 = i0;
    p1 = i0;
    B11:;
    i0 = p1;
    i1 = p2;
    i2 = 65534u;
    i1 &= i2;
    i2 = 1u;
    i1 >>= (i2 & 31);
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l6;
    i1 = l3;
    i2 = l1;
    i2 = i32_load16_u((&M0), (u64)(i2));
    i2 = !(i2);
    i1 -= i2;
    p1 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B8;}
    i0 = l2;
    i1 = l2;
    i2 = l2;
    mpz_mul_inpl(i0, i1, i2);
    i0 = l0;
    i1 = l2;
    i2 = l2;
    i3 = p3;
    mpz_divmod_inpl(i0, i1, i2, i3);
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    if (i0) {goto L9;}
  B8:;
  i0 = l0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B5;}
  goto B6;
  B7:;
  i0 = l4;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B5;}
  B6:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  m_free(i0);
  B5:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = l2;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  m_free(i0);
  i0 = l2;
  m_free(i0);
  B14:;
  i0 = l4;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  m_free(i0);
  i0 = l4;
  m_free(i0);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mpz_divmod_inpl(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0, l15 = 0, 
      l16 = 0, l17 = 0, l18 = 0, l19 = 0, l20 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  i1 = 2u;
  i2 = l2;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l3;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l2;
  i1 = l3;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = m_realloc(i0, i1);
  l2 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  B0:;
  i0 = l2;
  i1 = 0u;
  i2 = l1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i3 = 2u;
  i2 += i3;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l5 = i0;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  i1 = 2u;
  i2 = l2;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B4;}
  B5:;
  i0 = l2;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = m_realloc(i0, i1);
  l2 = i0;
  i0 = p1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l3 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 2u;
  i2 = l1;
  i3 = 2u;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l3;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  goto B3;
  B4:;
  i0 = l3;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = l5;
  i2 = 2u;
  i3 = l5;
  i4 = 2u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  l1 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  B3:;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  i2 = l1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 &= i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  l3 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B2:;
  i0 = p1;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 &= i2;
  i2 = l3;
  i3 = 4294967294u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i1 = p2;
  i2 = 4u;
  i1 += i2;
  l1 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l1;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 1u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  l6 = i0;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l7 = i1;
  i0 = i0 < i1;
  if (i0) {goto B7;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l8 = i0;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l9 = i0;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l10 = i0;
  i0 = l6;
  i1 = l7;
  i0 = i0 > i1;
  if (i0) {goto B8;}
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l10;
  i1 = l6;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 4294967294u;
  i1 += i2;
  l3 = i1;
  i0 += i1;
  l2 = i0;
  i0 = l9;
  i1 = l3;
  i0 += i1;
  l3 = i0;
  i0 = l6;
  l4 = i0;
  L10: vm_checktime();
    i0 = l3;
    i0 = i32_load16_u((&M0), (u64)(i0));
    i1 = l2;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 -= i1;
    l1 = i0;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B7;}
    i0 = l1;
    if (i0) {goto B8;}
    i0 = l2;
    i1 = 4294967294u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i1 = 4294967294u;
    i0 += i1;
    l3 = i0;
    i0 = l4;
    i1 = 4294967295u;
    i0 += i1;
    l4 = i0;
    if (i0) {goto L10;}
  B9:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l8;
  i1 = 1u;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = 1u;
  i32_store((&M0), (u64)(i0), i1);
  goto B6;
  B8:;
  i0 = 0u;
  l5 = i0;
  i0 = l10;
  i1 = l7;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l11 = i0;
  i0 = i32_load16_s((&M0), (u64)(i0));
  l3 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B11;}
  i0 = 0u;
  l2 = i0;
  L12: vm_checktime();
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i1 = 17u;
    i0 <<= (i1 & 31);
    i1 = 16u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l3 = i0;
    i1 = 4294967295u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L12;}
  i0 = l2;
  i1 = 65535u;
  i0 &= i1;
  l5 = i0;
  B11:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i1 = l6;
  i2 = 1u;
  i1 += i2;
  l12 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l9;
  i1 = l6;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l13 = i0;
  i1 = 0u;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = l12;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B13;}
  i0 = l9;
  i1 = l12;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l4 = i0;
  i0 = 16u;
  i1 = l5;
  i0 -= i1;
  l14 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = l9;
  l2 = i0;
  L14: vm_checktime();
    i0 = l2;
    i1 = l2;
    i1 = i32_load16_u((&M0), (u64)(i1));
    l1 = i1;
    i2 = l5;
    i1 <<= (i2 & 31);
    i2 = l3;
    i1 |= i2;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = l14;
    i0 >>= (i1 & 31);
    l3 = i0;
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i1 = l4;
    i0 = i0 < i1;
    if (i0) {goto L14;}
  B13:;
  i0 = l11;
  i0 = i32_load16_u((&M0), (u64)(i0));
  i1 = l5;
  i0 <<= (i1 & 31);
  l15 = i0;
  i0 = l7;
  i1 = 1u;
  i0 = i0 <= i1;
  if (i0) {goto B15;}
  i0 = l10;
  i1 = l7;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967292u;
  i0 += i1;
  i0 = i32_load16_u((&M0), (u64)(i0));
  i1 = 16u;
  i2 = l5;
  i1 -= i2;
  i0 >>= (i1 & 31);
  i1 = l15;
  i0 |= i1;
  l15 = i0;
  B15:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l12;
  i2 = l7;
  i1 -= i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l16 = i0;
  i1 = l7;
  i0 = i0 <= i1;
  if (i0) {goto B19;}
  i0 = l8;
  i1 = l2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l17 = i0;
  i0 = 0u;
  i1 = l7;
  i0 -= i1;
  l2 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B18;}
  i0 = l9;
  i1 = l6;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l2 = i0;
  L21: vm_checktime();
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    if (i0) {goto B20;}
    i0 = l17;
    i1 = l2;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i2 = l15;
    i1 = DIV_U(i1, i2);
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = 4294967294u;
    i0 += i1;
    l2 = i0;
    i0 = l17;
    i1 = 4294967294u;
    i0 += i1;
    l17 = i0;
    i0 = l16;
    i1 = 4294967295u;
    i0 += i1;
    l16 = i0;
    i1 = l7;
    i0 = i0 > i1;
    if (i0) {goto L21;}
    goto B17;
  B20:;
  L22: vm_checktime();
    goto L22;
  B19:;
  i0 = l16;
  l7 = i0;
  goto B16;
  B18:;
  i0 = l2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l18 = i0;
  L23: vm_checktime();
    i0 = l13;
    l14 = i0;
    i1 = 4294967294u;
    i0 += i1;
    l13 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l15;
    i0 = DIV_U(i0, i1);
    l6 = i0;
    i0 = 0u;
    l1 = i0;
    i0 = l14;
    i1 = l18;
    i0 += i1;
    l19 = i0;
    l2 = i0;
    i0 = 0u;
    l11 = i0;
    i0 = l10;
    l3 = i0;
    L25: vm_checktime();
      i0 = l3;
      i0 = i32_load16_u((&M0), (u64)(i0));
      i1 = l5;
      i0 <<= (i1 & 31);
      i1 = l11;
      i2 = 16u;
      i1 >>= (i2 & 31);
      i0 |= i1;
      l11 = i0;
      i1 = 65535u;
      i0 &= i1;
      i1 = l6;
      i0 *= i1;
      l4 = i0;
      i1 = l2;
      i1 = i32_load16_u((&M0), (u64)(i1));
      l12 = i1;
      i0 = i0 >= i1;
      if (i0) {goto B26;}
      i0 = l12;
      i1 = l4;
      i0 -= i1;
      l20 = i0;
      i1 = l1;
      i0 = i0 <= i1;
      if (i0) {goto B26;}
      i0 = l2;
      i1 = l20;
      i2 = l1;
      i1 -= i2;
      i32_store16((&M0), (u64)(i0), i1);
      i0 = 0u;
      l1 = i0;
      i0 = l3;
      i1 = 2u;
      i0 += i1;
      l3 = i0;
      i0 = l2;
      i1 = 2u;
      i0 += i1;
      l2 = i0;
      i1 = l14;
      i0 = i0 < i1;
      if (i0) {goto L25;}
      goto B24;
      B26:;
      i0 = l2;
      i1 = 0u;
      i2 = l4;
      i3 = l12;
      i2 -= i3;
      i3 = l1;
      i2 += i3;
      l1 = i2;
      i1 -= i2;
      i32_store16((&M0), (u64)(i0), i1);
      i0 = l1;
      i1 = 16u;
      i0 >>= (i1 & 31);
      i1 = l1;
      i2 = 65535u;
      i1 &= i2;
      i2 = 0u;
      i1 = i1 != i2;
      i0 += i1;
      l1 = i0;
      i0 = l3;
      i1 = 2u;
      i0 += i1;
      l3 = i0;
      i0 = l2;
      i1 = 2u;
      i0 += i1;
      l2 = i0;
      i1 = l14;
      i0 = i0 < i1;
      if (i0) {goto L25;}
    B24:;
    i0 = l1;
    i1 = l14;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 -= i1;
    l12 = i0;
    i0 = !(i0);
    if (i0) {goto B27;}
    L28: vm_checktime();
      i0 = 0u;
      l1 = i0;
      i0 = l19;
      l2 = i0;
      i0 = 0u;
      l4 = i0;
      i0 = l10;
      l3 = i0;
      L29: vm_checktime();
        i0 = l2;
        i1 = l1;
        i2 = l2;
        i2 = i32_load16_u((&M0), (u64)(i2));
        i1 += i2;
        i2 = l3;
        i2 = i32_load16_u((&M0), (u64)(i2));
        i3 = l5;
        i2 <<= (i3 & 31);
        i3 = l4;
        i4 = 16u;
        i3 >>= (i4 & 31);
        i2 |= i3;
        l4 = i2;
        i3 = 65535u;
        i2 &= i3;
        i1 += i2;
        l1 = i1;
        i32_store16((&M0), (u64)(i0), i1);
        i0 = l1;
        i1 = 16u;
        i0 >>= (i1 & 31);
        l1 = i0;
        i0 = l3;
        i1 = 2u;
        i0 += i1;
        l3 = i0;
        i0 = l2;
        i1 = 2u;
        i0 += i1;
        l2 = i0;
        i1 = l14;
        i0 = i0 < i1;
        if (i0) {goto L29;}
      i0 = l6;
      i1 = 4294967295u;
      i0 += i1;
      l6 = i0;
      i0 = l12;
      i1 = l1;
      i0 -= i1;
      l12 = i0;
      if (i0) {goto L28;}
    B27:;
    i0 = l17;
    i1 = l6;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l17;
    i1 = 4294967294u;
    i0 += i1;
    l17 = i0;
    i0 = l16;
    i1 = 4294967295u;
    i0 += i1;
    l16 = i0;
    i1 = l7;
    i0 = i0 > i1;
    if (i0) {goto L23;}
  B17:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i1 = l7;
  i32_store((&M0), (u64)(i0), i1);
  B16:;
  i0 = l9;
  i1 = l7;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l2 = i0;
  i1 = l9;
  i0 = i0 < i1;
  if (i0) {goto B30;}
  i0 = 16u;
  i1 = l5;
  i0 -= i1;
  l4 = i0;
  i0 = 0u;
  l3 = i0;
  L31: vm_checktime();
    i0 = l2;
    i1 = l2;
    i1 = i32_load16_u((&M0), (u64)(i1));
    l1 = i1;
    i2 = l5;
    i1 >>= (i2 & 31);
    i2 = l3;
    i1 |= i2;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = l4;
    i0 <<= (i1 & 31);
    l3 = i0;
    i0 = l2;
    i1 = 4294967294u;
    i0 += i1;
    l2 = i0;
    i1 = l9;
    i0 = i0 >= i1;
    if (i0) {goto L31;}
  B30:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B32;}
  i0 = l8;
  i1 = l2;
  i2 = 4294967295u;
  i1 += i2;
  l3 = i1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l2 = i0;
  L34: vm_checktime();
    i0 = l2;
    i0 = i32_load16_u((&M0), (u64)(i0));
    if (i0) {goto B33;}
    i0 = l1;
    i1 = l3;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = 4294967294u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i1 = 4294967295u;
    i0 += i1;
    l3 = i0;
    i1 = 4294967295u;
    i0 = i0 != i1;
    if (i0) {goto L34;}
  B33:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l7 = i0;
  B32:;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l9;
  i1 = l7;
  i2 = 4294967295u;
  i1 += i2;
  l3 = i1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l2 = i0;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  L35: vm_checktime();
    i0 = l2;
    i0 = i32_load16_u((&M0), (u64)(i0));
    if (i0) {goto B6;}
    i0 = l1;
    i1 = l3;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = 4294967294u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i1 = 4294967295u;
    i0 += i1;
    l3 = i0;
    i1 = 4294967295u;
    i0 = i0 != i1;
    if (i0) {goto L35;}
    goto B6;
  B7:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  B6:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 ^= i1;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B36;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B36;}
  i0 = 0u;
  i1 = 4u;
  i0 = m_realloc(i0, i1);
  l2 = i0;
  i1 = 1u;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  j1 = 4294967305ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i1 = p0;
  i2 = l0;
  mpz_add_inpl(i0, i1, i2);
  i0 = p1;
  i1 = p1;
  i2 = p3;
  mpz_add_inpl(i0, i1, i2);
  B36:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 mpz_hash(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l1 = i0;
  i0 = 0u;
  l0 = i0;
  L1: vm_checktime();
    i0 = l0;
    i1 = 16u;
    i0 <<= (i1 & 31);
    i1 = l1;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 |= i1;
    l0 = i0;
    i0 = l1;
    i1 = l2;
    i0 = i0 > i1;
    l3 = i0;
    i0 = l1;
    i1 = 4294967294u;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    if (i0) {goto L1;}
  B0:;
  i0 = 0u;
  i1 = l0;
  i0 -= i1;
  i1 = l0;
  i2 = p0;
  i2 = i32_load8_u((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mpz_as_int_checked(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l1 = i0;
  i0 = 0u;
  l0 = i0;
  L2: vm_checktime();
    i0 = l0;
    i1 = 32767u;
    i0 = i0 > i1;
    if (i0) {goto B0;}
    i0 = l0;
    i1 = 16u;
    i0 <<= (i1 & 31);
    i1 = l1;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 |= i1;
    l0 = i0;
    i0 = l1;
    i1 = l2;
    i0 = i0 > i1;
    l3 = i0;
    i0 = l1;
    i1 = 4294967294u;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    if (i0) {goto L2;}
  B1:;
  i0 = p1;
  i1 = 0u;
  i2 = l0;
  i1 -= i2;
  i2 = l0;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3));
  i4 = 1u;
  i3 &= i4;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 1u;
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mpz_as_uint_checked(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  p0 = i0;
  i0 = 0u;
  l0 = i0;
  i0 = 0u;
  l1 = i0;
  L3: vm_checktime();
    i0 = l1;
    i1 = 65535u;
    i0 = i0 > i1;
    if (i0) {goto B0;}
    i0 = l1;
    i1 = 16u;
    i0 <<= (i1 & 31);
    i1 = p0;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 |= i1;
    l1 = i0;
    i0 = p0;
    i1 = l2;
    i0 = i0 > i1;
    l3 = i0;
    i0 = p0;
    i1 = 4294967294u;
    i0 += i1;
    p0 = i0;
    i0 = l3;
    if (i0) {goto L3;}
    goto B1;
  B2:;
  i0 = 0u;
  l1 = i0;
  B1:;
  i0 = p1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 1u;
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mpz_as_bytes(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p3;
  i1 = p2;
  i0 += i1;
  p2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 0u;
  l2 = i0;
  i0 = 1u;
  l3 = i0;
  i0 = 0u;
  l4 = i0;
  i0 = 0u;
  p1 = i0;
  L3: vm_checktime();
    i0 = l2;
    i1 = 16u;
    i0 <<= (i1 & 31);
    i1 = l1;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 |= i1;
    l2 = i0;
    i0 = l4;
    i1 = 4294967288u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B4;}
    i0 = p2;
    i1 = 4294967295u;
    i0 += i1;
    p2 = i0;
    i0 = l4;
    i1 = 24u;
    i0 += i1;
    l4 = i0;
    L5: vm_checktime();
      i0 = p0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i1 = 1u;
      i0 &= i1;
      if (i0) {goto B7;}
      i0 = p2;
      i1 = l2;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i0 = p3;
      i1 = p2;
      i0 = i0 != i1;
      if (i0) {goto B6;}
      goto B0;
      B7:;
      i0 = l2;
      i1 = 4294967295u;
      i0 ^= i1;
      i1 = 255u;
      i0 &= i1;
      i1 = l3;
      i0 += i1;
      l5 = i0;
      i1 = 8u;
      i0 >>= (i1 & 31);
      i1 = 255u;
      i0 &= i1;
      l3 = i0;
      i0 = p2;
      i1 = l5;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i0 = p3;
      i1 = p2;
      i0 = i0 == i1;
      if (i0) {goto B0;}
      B6:;
      i0 = p2;
      i1 = 4294967295u;
      i0 += i1;
      p2 = i0;
      i0 = l2;
      i1 = 8u;
      i0 >>= (i1 & 31);
      l2 = i0;
      i0 = l4;
      i1 = 4294967288u;
      i0 += i1;
      l4 = i0;
      i1 = 15u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L5;}
    i0 = p2;
    i1 = 1u;
    i0 += i1;
    p2 = i0;
    i0 = l4;
    i1 = 4294967288u;
    i0 += i1;
    l4 = i0;
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 4294967295u;
    i0 += i1;
    l0 = i0;
    if (i0) {goto L3;}
    goto B0;
    B4:;
    i0 = l4;
    i1 = 16u;
    i0 += i1;
    l4 = i0;
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 4294967295u;
    i0 += i1;
    l0 = i0;
    if (i0) {goto L3;}
    goto B0;
  B2:;
  i0 = 0u;
  i1 = 24u;
  i0 <<= (i1 & 31);
  i1 = 24u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = 4294967295u;
  i0 += i1;
  l4 = i0;
  i0 = 0u;
  p2 = i0;
  i0 = 1u;
  l3 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = 0u;
  p1 = i0;
  L8: vm_checktime();
    i0 = p2;
    i1 = 16u;
    i0 <<= (i1 & 31);
    i1 = l1;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i0 |= i1;
    p2 = i0;
    i0 = l2;
    i1 = 4294967288u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B9;}
    i0 = l2;
    i1 = 24u;
    i0 += i1;
    l2 = i0;
    L10: vm_checktime();
      i0 = p0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i1 = 1u;
      i0 &= i1;
      if (i0) {goto B12;}
      i0 = p3;
      i1 = p2;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i0 = l4;
      i1 = p3;
      i0 = i0 != i1;
      if (i0) {goto B11;}
      goto B0;
      B12:;
      i0 = p2;
      i1 = 4294967295u;
      i0 ^= i1;
      i1 = 255u;
      i0 &= i1;
      i1 = l3;
      i0 += i1;
      l5 = i0;
      i1 = 8u;
      i0 >>= (i1 & 31);
      i1 = 255u;
      i0 &= i1;
      l3 = i0;
      i0 = p3;
      i1 = l5;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i0 = l4;
      i1 = p3;
      i0 = i0 == i1;
      if (i0) {goto B0;}
      B11:;
      i0 = p3;
      i1 = 1u;
      i0 += i1;
      p3 = i0;
      i0 = p2;
      i1 = 8u;
      i0 >>= (i1 & 31);
      p2 = i0;
      i0 = l2;
      i1 = 4294967288u;
      i0 += i1;
      l2 = i0;
      i1 = 15u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L10;}
    i0 = l2;
    i1 = 4294967288u;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 4294967295u;
    i0 += i1;
    l0 = i0;
    if (i0) {goto L8;}
    goto B0;
    B9:;
    i0 = l2;
    i1 = 16u;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 4294967295u;
    i0 += i1;
    l0 = i0;
    if (i0) {goto L8;}
  B0:;
  i0 = p1;
  i1 = 24u;
  i0 <<= (i1 & 31);
  i1 = 24u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static f64 mpz_as_float(u32 p0) {
  u32 l0 = 0, l1 = 0, l3 = 0;
  f64 l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  f64 d0, d1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i1 = l0;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967294u;
  i0 += i1;
  l0 = i0;
  d0 = 0;
  l2 = d0;
  L2: vm_checktime();
    d0 = l2;
    d1 = 65536;
    d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
    i1 = l0;
    i1 = i32_load16_u((&M0), (u64)(i1));
    d1 = (f64)(i1);
    d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
    l2 = d0;
    i0 = l0;
    i1 = l1;
    i0 = i0 > i1;
    l3 = i0;
    i0 = l0;
    i1 = 4294967294u;
    i0 += i1;
    l0 = i0;
    i0 = l3;
    if (i0) {goto L2;}
    goto B0;
  B1:;
  d0 = 0;
  l2 = d0;
  B0:;
  d0 = l2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = l2;
  i2 = p0;
  i2 = i32_load8_u((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  d0 = i2 ? d0 : d1;
  FUNC_EPILOGUE;
  return d0;
}

static u32 mpz_as_str_inpl(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l0 = i0;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = l0;
  i0 += i1;
  l2 = i0;
  i1 = 4294967294u;
  i0 += i1;
  l3 = i0;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  i0 = p5;
  l0 = i0;
  i0 = p5;
  l4 = i0;
  L3: vm_checktime();
    i0 = l0;
    p3 = i0;
    i1 = 48u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 0u;
    p1 = i0;
    i0 = l2;
    i1 = l1;
    i0 = i0 <= i1;
    if (i0) {goto B7;}
    i0 = l1;
    l0 = i0;
    L8: vm_checktime();
      i0 = l0;
      i0 = i32_load16_u((&M0), (u64)(i0));
      if (i0) {goto B6;}
      i0 = l0;
      i1 = 2u;
      i0 += i1;
      l0 = i0;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto L8;}
    B7:;
    i0 = p3;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = p4;
    i0 = !(i0);
    if (i0) {goto B4;}
    goto B5;
    B6:;
    i0 = 1u;
    p1 = i0;
    i0 = p3;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = p4;
    i0 = !(i0);
    if (i0) {goto B4;}
    B5:;
    i0 = l0;
    i1 = l4;
    i0 -= i1;
    i1 = 3u;
    i0 = i0 != i1;
    if (i0) {goto B4;}
    i0 = p3;
    i1 = 1u;
    i0 += i1;
    i1 = p4;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p3;
    i1 = 2u;
    i0 += i1;
    l0 = i0;
    l4 = i0;
    i0 = p1;
    if (i0) {goto L3;}
    goto B1;
    B4:;
    i0 = p1;
    if (i0) {goto L3;}
    goto B1;
  B2:;
  i0 = p3;
  i1 = 255u;
  i0 &= i1;
  i1 = 198u;
  i0 += i1;
  l5 = i0;
  i0 = p5;
  l0 = i0;
  i0 = p5;
  l6 = i0;
  L9: vm_checktime();
    i0 = l0;
    l7 = i0;
    i0 = 0u;
    p3 = i0;
    i0 = l3;
    l0 = i0;
    L10: vm_checktime();
      i0 = l0;
      i1 = p3;
      i2 = 16u;
      i1 <<= (i2 & 31);
      i2 = l0;
      i2 = i32_load16_u((&M0), (u64)(i2));
      i1 |= i2;
      p3 = i1;
      i2 = p1;
      i1 = DIV_U(i1, i2);
      l4 = i1;
      i32_store16((&M0), (u64)(i0), i1);
      i0 = p3;
      i1 = l4;
      i2 = p1;
      i1 *= i2;
      i0 -= i1;
      p3 = i0;
      i0 = l0;
      i1 = 4294967294u;
      i0 += i1;
      l0 = i0;
      i1 = l1;
      i0 = i0 >= i1;
      if (i0) {goto L10;}
    i0 = 0u;
    l4 = i0;
    i0 = l7;
    i1 = p3;
    i2 = 48u;
    i1 += i2;
    l0 = i1;
    i2 = l5;
    i3 = 0u;
    i4 = l0;
    i5 = 57u;
    i4 = i4 > i5;
    i2 = i4 ? i2 : i3;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = l1;
    i0 = i0 <= i1;
    if (i0) {goto B14;}
    i0 = l1;
    l0 = i0;
    L15: vm_checktime();
      i0 = l0;
      i0 = i32_load16_u((&M0), (u64)(i0));
      if (i0) {goto B13;}
      i0 = l0;
      i1 = 2u;
      i0 += i1;
      l0 = i0;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto L15;}
    B14:;
    i0 = l7;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = p4;
    i0 = !(i0);
    if (i0) {goto B11;}
    goto B12;
    B13:;
    i0 = 1u;
    l4 = i0;
    i0 = l7;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = p4;
    i0 = !(i0);
    if (i0) {goto B11;}
    B12:;
    i0 = l0;
    i1 = l6;
    i0 -= i1;
    i1 = 3u;
    i0 = i0 != i1;
    if (i0) {goto B11;}
    i0 = l7;
    i1 = 1u;
    i0 += i1;
    i1 = p4;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l7;
    i1 = 2u;
    i0 += i1;
    l0 = i0;
    l6 = i0;
    i0 = l4;
    if (i0) {goto L9;}
    goto B1;
    B11:;
    i0 = l4;
    if (i0) {goto L9;}
  B1:;
  i0 = l1;
  m_free(i0);
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = p2;
  i0 = strlen_0(i0);
  p3 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B16;}
  i0 = p2;
  i1 = p3;
  i0 += i1;
  p3 = i0;
  L17: vm_checktime();
    i0 = l0;
    i1 = p3;
    i2 = 4294967295u;
    i1 += i2;
    p3 = i1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = p3;
    i1 = p2;
    i0 = i0 > i1;
    if (i0) {goto L17;}
  B16:;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B18;}
  i0 = l0;
  i1 = 45u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  l0 = i0;
  B18:;
  i0 = l0;
  i1 = 4294967295u;
  i0 += i1;
  p3 = i0;
  i1 = p5;
  i0 = i0 <= i1;
  if (i0) {goto B19;}
  i0 = p5;
  p1 = i0;
  L20: vm_checktime();
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    i0 = p1;
    i1 = p3;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p3;
    i1 = l4;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p3;
    i2 = 4294967295u;
    i1 += i2;
    p3 = i1;
    i0 = i0 < i1;
    if (i0) {goto L20;}
  B19:;
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p5;
  i0 -= i1;
  goto Bfunc;
  B0:;
  i0 = p5;
  l0 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B21;}
  i0 = p5;
  l0 = i0;
  i0 = p2;
  i0 = i32_load8_u((&M0), (u64)(i0));
  p3 = i0;
  i0 = !(i0);
  if (i0) {goto B21;}
  i0 = p2;
  i1 = 1u;
  i0 += i1;
  p1 = i0;
  i0 = p5;
  l0 = i0;
  L22: vm_checktime();
    i0 = l0;
    i1 = p3;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p3 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i0 = p3;
    if (i0) {goto L22;}
  B21:;
  i0 = l0;
  i1 = 48u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  l0 = i0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p5;
  i0 -= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_reader_new_mem(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p1;
  i2 = p2;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 3u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 4u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  FUNC_EPILOGUE;
}

static u32 mp_reader_mem_readbyte(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 4294967295u;
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_reader_mem_close(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  m_free(i0);
  B0:;
  i0 = p0;
  m_free(i0);
  FUNC_EPILOGUE;
}

static u32 mp_format_float(f64 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5) {
  u32 l1 = 0, l2 = 0, l3 = 0, l4 = 0, l6 = 0, l7 = 0, l8 = 0, l9 = 0, 
      l10 = 0, l11 = 0, l12 = 0, l13 = 0;
  u64 l0 = 0;
  f64 l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1;
  f64 d0, d1, d2, d3, d4;
  i0 = p2;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B5;}
  i0 = p2;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 63u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 1u;
  i0 += i1;
  p1 = i0;
  goto B3;
  B5:;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B1;}
  j0 = l0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 45u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 1u;
  i0 += i1;
  p5 = i0;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  p0 = d0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  goto B0;
  B4:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B2;}
  B3:;
  i0 = p1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  B2:;
  i0 = p2;
  i1 = 1u;
  i0 = i0 > i1;
  goto Bfunc;
  B1:;
  i0 = p5;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p1;
  i1 = p5;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 1u;
  i0 += i1;
  p5 = i0;
  goto B0;
  B6:;
  i0 = p1;
  p5 = i0;
  B0:;
  i0 = p3;
  i1 = 32u;
  i0 &= i1;
  l1 = i0;
  j0 = l0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l0 = j0;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B9;}
  i0 = p5;
  i1 = l1;
  i2 = 78u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = p5;
  i1 = l1;
  i2 = 73u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p5;
  i1 = l1;
  i2 = 70u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 2), i1);
  goto B8;
  B9:;
  j0 = l0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B7;}
  i0 = p5;
  i1 = l1;
  i2 = 65u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = p5;
  i1 = l1;
  i2 = 78u;
  i1 |= i2;
  p2 = i1;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p5;
  i1 = p2;
  i32_store8((&M0), (u64)(i0 + 2), i1);
  B8:;
  i0 = p5;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 3), i1);
  i0 = p5;
  i1 = 3u;
  i0 += i1;
  i1 = p1;
  i0 -= i1;
  goto Bfunc;
  B7:;
  i0 = p2;
  i1 = p1;
  i2 = p5;
  i1 -= i2;
  i0 += i1;
  i1 = 4294967295u;
  i0 += i1;
  l2 = i0;
  i0 = 6u;
  i1 = p4;
  i2 = p4;
  i3 = 0u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  p2 = i0;
  i1 = 1u;
  i2 = p2;
  i0 = i2 ? i0 : i1;
  i1 = p2;
  i2 = p3;
  i3 = 32u;
  i2 |= i3;
  l3 = i2;
  i3 = 103u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  p2 = i0;
  d0 = p0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B35;}
  i0 = l3;
  i1 = 102u;
  i0 = i0 != i1;
  if (i0) {goto B34;}
  i0 = l2;
  i1 = 4294967294u;
  i0 += i1;
  i1 = p2;
  i2 = p2;
  i3 = 2u;
  i2 += i3;
  i3 = l2;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  p2 = i0;
  i1 = 1u;
  i0 += i1;
  p4 = i0;
  i0 = 0u;
  l4 = i0;
  d0 = p0;
  l5 = d0;
  i0 = 0u;
  l6 = i0;
  goto B20;
  B35:;
  d0 = p0;
  d1 = 1;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i0 = !(i0);
  if (i0) {goto B33;}
  d0 = p0;
  d1 = 9.9999999999999998e-257;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  p3 = i0;
  i1 = 8u;
  i0 <<= (i1 & 31);
  p4 = i0;
  i1 = 128u;
  i0 |= i1;
  i1 = p4;
  d2 = p0;
  d3 = 1e+256;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = p0;
  i4 = p3;
  d2 = i4 ? d2 : d3;
  l5 = d2;
  d3 = 1.0000000000000001e-128;
  i2 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d2, d3);
  p3 = i2;
  i0 = i2 ? i0 : i1;
  p4 = i0;
  i1 = 64u;
  i0 |= i1;
  i1 = p4;
  d2 = l5;
  d3 = 1.0000000000000001e+128;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l5;
  i4 = p3;
  d2 = i4 ? d2 : d3;
  l5 = d2;
  d3 = 9.9999999999999997e-65;
  i2 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d2, d3);
  p3 = i2;
  i0 = i2 ? i0 : i1;
  p4 = i0;
  i1 = 32u;
  i0 |= i1;
  i1 = p4;
  d2 = l5;
  d3 = 1e+64;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l5;
  i4 = p3;
  d2 = i4 ? d2 : d3;
  l5 = d2;
  d3 = 1.0000000000000001e-32;
  i2 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d2, d3);
  p3 = i2;
  i0 = i2 ? i0 : i1;
  p4 = i0;
  i1 = 16u;
  i0 += i1;
  i1 = p4;
  d2 = l5;
  d3 = 1.0000000000000001e+32;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l5;
  i4 = p3;
  d2 = i4 ? d2 : d3;
  l5 = d2;
  d3 = 9.9999999999999998e-17;
  i2 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d2, d3);
  p3 = i2;
  i0 = i2 ? i0 : i1;
  p4 = i0;
  i1 = 8u;
  i0 += i1;
  i1 = p4;
  d2 = l5;
  d3 = 10000000000000000;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l5;
  i4 = p3;
  d2 = i4 ? d2 : d3;
  l5 = d2;
  d3 = 1e-08;
  i2 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d2, d3);
  p3 = i2;
  i0 = i2 ? i0 : i1;
  p4 = i0;
  i1 = 4u;
  i0 += i1;
  i1 = p4;
  d2 = l5;
  d3 = 100000000;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l5;
  i4 = p3;
  d2 = i4 ? d2 : d3;
  l5 = d2;
  d3 = 0.0001;
  i2 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d2, d3);
  p3 = i2;
  i0 = i2 ? i0 : i1;
  p4 = i0;
  i1 = 2u;
  i0 += i1;
  i1 = p4;
  d2 = l5;
  d3 = 10000;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l5;
  i4 = p3;
  d2 = i4 ? d2 : d3;
  l5 = d2;
  d3 = 0.01;
  i2 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d2, d3);
  p3 = i2;
  i0 = i2 ? i0 : i1;
  d1 = l5;
  d2 = 100;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = l5;
  i3 = p3;
  d1 = i3 ? d1 : d2;
  l5 = d1;
  d2 = 0.10000000000000001;
  i1 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d1, d2);
  p3 = i1;
  i0 += i1;
  l4 = i0;
  d0 = l5;
  d1 = 10;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l5;
  i2 = p3;
  d0 = i2 ? d0 : d1;
  l5 = d0;
  d1 = 1;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B32;}
  d0 = l5;
  d1 = 0.999999999995;
  i0 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B32;}
  i0 = 45u;
  i1 = 43u;
  i2 = l4;
  i0 = i2 ? i0 : i1;
  l7 = i0;
  d0 = 1;
  l5 = d0;
  goto B31;
  B34:;
  i0 = l2;
  i1 = 4294967290u;
  i0 += i1;
  i1 = p2;
  i2 = p2;
  i3 = 6u;
  i2 += i3;
  i3 = l2;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  p2 = i0;
  i0 = 0u;
  l4 = i0;
  i0 = 43u;
  i1 = 0u;
  i2 = l3;
  i3 = 101u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l7 = i0;
  i0 = l3;
  p3 = i0;
  goto B23;
  B33:;
  d0 = p0;
  d1 = p0;
  d2 = 9.9999999999999998e-257;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 1e+256;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  p3 = i2;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d1 = p0;
  d2 = 1.0000000000000001e-128;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 1.0000000000000001e+128;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  p4 = i2;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d1 = p0;
  d2 = 9.9999999999999997e-65;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 1e+64;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  l6 = i2;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d1 = p0;
  d2 = 1.0000000000000001e-32;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 1.0000000000000001e+32;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  l4 = i2;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d1 = p0;
  d2 = 9.9999999999999998e-17;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 10000000000000000;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  l7 = i2;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d1 = p0;
  d2 = 1e-08;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 100000000;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  l8 = i2;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d1 = p0;
  d2 = 0.0001;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 10000;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  l9 = i2;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d1 = p0;
  d2 = 0.01;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 100;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  l10 = i2;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d1 = p0;
  d2 = 0.10000000000000001;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 10;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  l11 = i2;
  i3 = 1u;
  i2 ^= i3;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B30;}
  i0 = 2147483648u;
  l12 = i0;
  goto B29;
  B32:;
  i0 = 45u;
  l7 = i0;
  d0 = l5;
  d1 = 1;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B31;}
  d0 = l5;
  d1 = 10;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l5 = d0;
  i0 = l4;
  i1 = 1u;
  i0 += i1;
  l4 = i0;
  B31:;
  i0 = l3;
  i1 = 103u;
  i0 = i0 == i1;
  p3 = i0;
  i0 = 102u;
  l8 = i0;
  i0 = l3;
  i1 = 102u;
  i0 = i0 == i1;
  if (i0) {goto B28;}
  i0 = p3;
  i1 = l4;
  i2 = 5u;
  i1 = (u32)((s32)i1 < (s32)i2);
  i0 &= i1;
  if (i0) {goto B28;}
  i0 = p2;
  i1 = l2;
  i2 = 4294967289u;
  i1 += i2;
  p3 = i1;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B36;}
  i0 = l2;
  i1 = 4294967290u;
  i0 += i1;
  i1 = p3;
  i2 = l3;
  i3 = 103u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  p2 = i0;
  B36:;
  i0 = l3;
  p3 = i0;
  goto B24;
  B30:;
  d0 = p0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  l12 = i0;
  B29:;
  d0 = p0;
  d1 = 0.10000000000000001;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l5 = d0;
  i0 = 0u;
  i1 = 256u;
  i2 = p3;
  i0 = i2 ? i0 : i1;
  p3 = i0;
  i1 = p3;
  i2 = 128u;
  i1 |= i2;
  i2 = p4;
  i0 = i2 ? i0 : i1;
  p3 = i0;
  i1 = p3;
  i2 = 64u;
  i1 |= i2;
  i2 = l6;
  i0 = i2 ? i0 : i1;
  p3 = i0;
  i1 = p3;
  i2 = 32u;
  i1 |= i2;
  i2 = l4;
  i0 = i2 ? i0 : i1;
  p3 = i0;
  i1 = p3;
  i2 = 16u;
  i1 += i2;
  i2 = l7;
  i0 = i2 ? i0 : i1;
  p3 = i0;
  i1 = p3;
  i2 = 8u;
  i1 += i2;
  i2 = l8;
  i0 = i2 ? i0 : i1;
  p3 = i0;
  i1 = p3;
  i2 = 4u;
  i1 += i2;
  i2 = l9;
  i0 = i2 ? i0 : i1;
  p3 = i0;
  i1 = p3;
  i2 = 2u;
  i1 += i2;
  i2 = l10;
  i0 = i2 ? i0 : i1;
  i1 = l11;
  i0 += i1;
  i1 = l12;
  i2 = 9u;
  i1 = (u32)((s32)i1 > (s32)i2);
  p4 = i1;
  i0 += i1;
  l4 = i0;
  i0 = 101u;
  p3 = i0;
  i0 = l3;
  i1 = 101u;
  i0 = i0 == i1;
  if (i0) {goto B27;}
  i0 = l3;
  i1 = 255u;
  i0 &= i1;
  i1 = 102u;
  i0 = i0 != i1;
  if (i0) {goto B26;}
  i0 = l2;
  i1 = l4;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B27;}
  i0 = 102u;
  p3 = i0;
  i0 = p2;
  i1 = l4;
  i0 += i1;
  i1 = 2u;
  i0 += i1;
  i1 = l2;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B25;}
  i0 = 4294967295u;
  i1 = 4294967294u;
  i2 = l2;
  i3 = l4;
  i2 -= i3;
  p2 = i2;
  i3 = 2u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  i1 = p2;
  i0 += i1;
  p2 = i0;
  goto B25;
  B28:;
  i0 = p5;
  i1 = 48u;
  i2 = 49u;
  d3 = p0;
  d4 = 0.999999999995;
  i3 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d3, d4);
  i4 = 1u;
  i3 ^= i4;
  i1 = i3 ? i1 : i2;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = 4294967295u;
  l6 = i0;
  i0 = 0u;
  p4 = i0;
  i0 = l2;
  i1 = 4294967294u;
  i0 += i1;
  i1 = l4;
  i2 = 4294967295u;
  i1 += i2;
  l7 = i1;
  i2 = 0u;
  i3 = p3;
  i1 = i3 ? i1 : i2;
  i2 = p2;
  i1 += i2;
  p2 = i1;
  i2 = p2;
  i3 = 2u;
  i2 += i3;
  i3 = l2;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B22;}
  i0 = p5;
  i1 = 1u;
  i0 += i1;
  i1 = 46u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p5;
  i1 = 2u;
  i0 += i1;
  p5 = i0;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B21;}
  i0 = p2;
  i1 = 4294967295u;
  i0 += i1;
  l2 = i0;
  i0 = l4;
  i1 = 4294967294u;
  i0 += i1;
  l7 = i0;
  i0 = 0u;
  p3 = i0;
  L38: vm_checktime();
    i0 = p5;
    i1 = p3;
    i0 += i1;
    i1 = 48u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p3;
    i1 = 1u;
    i0 += i1;
    p4 = i0;
    i0 = l2;
    i1 = p3;
    i0 = i0 == i1;
    if (i0) {goto B37;}
    i0 = l7;
    i1 = p3;
    i0 = i0 != i1;
    l6 = i0;
    i0 = p4;
    p3 = i0;
    i0 = l6;
    if (i0) {goto L38;}
  B37:;
  i0 = p5;
  i1 = p4;
  i0 += i1;
  p5 = i0;
  i0 = 4294967295u;
  l6 = i0;
  i0 = l4;
  i1 = p4;
  i0 -= i1;
  i1 = 4294967295u;
  i0 += i1;
  l4 = i0;
  i0 = p2;
  i1 = 3u;
  i0 += i1;
  i1 = p4;
  i0 -= i1;
  i1 = 4294967293u;
  i0 += i1;
  p4 = i0;
  goto B20;
  B27:;
  i0 = l2;
  i1 = 4294967289u;
  i0 += i1;
  l6 = i0;
  i1 = p2;
  i2 = p2;
  i3 = l6;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  p2 = i0;
  goto B25;
  B26:;
  i0 = l3;
  p3 = i0;
  B25:;
  d0 = l5;
  d1 = p0;
  i2 = p4;
  d0 = i2 ? d0 : d1;
  l5 = d0;
  i0 = l2;
  i1 = 4294967290u;
  i0 += i1;
  i1 = p2;
  i2 = p2;
  i3 = 6u;
  i2 += i3;
  i3 = l2;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  i1 = p2;
  i2 = p3;
  i3 = 103u;
  i2 = i2 == i3;
  p4 = i2;
  i0 = i2 ? i0 : i1;
  p2 = i0;
  i1 = l4;
  i2 = 1u;
  i1 += i2;
  l6 = i1;
  i2 = 0u;
  i3 = p4;
  i4 = l4;
  i5 = p2;
  i4 = (u32)((s32)i4 < (s32)i5);
  i3 &= i4;
  p4 = i3;
  i1 = i3 ? i1 : i2;
  i0 -= i1;
  p2 = i0;
  i0 = 43u;
  l7 = i0;
  i0 = 102u;
  i1 = p3;
  i2 = p4;
  i0 = i2 ? i0 : i1;
  p3 = i0;
  i1 = 102u;
  i0 = i0 != i1;
  if (i0) {goto B24;}
  i0 = l6;
  i1 = p2;
  i0 += i1;
  p4 = i0;
  i0 = l4;
  l6 = i0;
  goto B20;
  B24:;
  d0 = l5;
  p0 = d0;
  B23:;
  i0 = 0u;
  p4 = i0;
  i0 = p2;
  i1 = 0u;
  i2 = p2;
  i3 = 0u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  l2 = i0;
  i0 = 103u;
  l8 = i0;
  i0 = p3;
  i1 = 103u;
  i0 = i0 == i1;
  if (i0) {goto B40;}
  i0 = 101u;
  l8 = i0;
  i0 = p3;
  i1 = 255u;
  i0 &= i1;
  i1 = 101u;
  i0 = i0 != i1;
  if (i0) {goto B39;}
  i0 = l2;
  i1 = 1u;
  i0 += i1;
  p4 = i0;
  i0 = 0u;
  l6 = i0;
  d0 = p0;
  l5 = d0;
  i0 = l2;
  if (i0) {goto B19;}
  goto B18;
  B40:;
  i0 = 0u;
  l6 = i0;
  i0 = 1u;
  i1 = l2;
  i2 = p2;
  i3 = 1u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  l2 = i0;
  p4 = i0;
  goto B16;
  B39:;
  i0 = p3;
  l8 = i0;
  d0 = p0;
  l5 = d0;
  i0 = l3;
  i1 = 102u;
  i0 = i0 == i1;
  if (i0) {goto B14;}
  goto B15;
  B22:;
  i0 = p5;
  i1 = 1u;
  i0 += i1;
  p5 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = 0u;
  l7 = i0;
  i0 = l3;
  i1 = 102u;
  i0 = i0 == i1;
  if (i0) {goto B14;}
  goto B15;
  B21:;
  i0 = 0u;
  l4 = i0;
  i0 = p2;
  p4 = i0;
  B20:;
  i0 = 0u;
  l7 = i0;
  i0 = p2;
  i1 = 0u;
  i2 = p2;
  i3 = 0u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  l2 = i0;
  i0 = 102u;
  l8 = i0;
  i0 = p4;
  i1 = 0u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B17;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B18;}
  B19:;
  d0 = l5;
  p0 = d0;
  goto B16;
  B18:;
  i0 = 0u;
  p2 = i0;
  L41: vm_checktime();
    d0 = l5;
    d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
    d1 = 2147483648;
    i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
    if (i0) {goto B43;}
    i0 = 2147483648u;
    p3 = i0;
    goto B42;
    B43:;
    d0 = l5;
    i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
    p3 = i0;
    B42:;
    i0 = p5;
    i1 = p2;
    i0 += i1;
    i1 = 48u;
    i2 = p3;
    i3 = 48u;
    i2 += i3;
    i3 = p3;
    i4 = 0u;
    i3 = (u32)((s32)i3 < (s32)i4);
    i1 = i3 ? i1 : i2;
    i32_store8((&M0), (u64)(i0), i1);
    d0 = l5;
    d1 = l5;
    d1 = (*Z_eosio_injectionZ__eosio_f64_truncZ_dd)(d1);
    d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
    d1 = 10;
    d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
    l5 = d0;
    i0 = p4;
    i1 = p2;
    i2 = 1u;
    i1 += i2;
    p2 = i1;
    i0 = i0 != i1;
    if (i0) {goto L41;}
  i0 = p5;
  i1 = p4;
  i0 += i1;
  p5 = i0;
  B17:;
  i0 = l3;
  i1 = 102u;
  i0 = i0 != i1;
  if (i0) {goto B15;}
  goto B14;
  B16:;
  i0 = 0u;
  p3 = i0;
  L44: vm_checktime();
    d0 = p0;
    d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
    d1 = 2147483648;
    i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
    if (i0) {goto B46;}
    i0 = 2147483648u;
    p2 = i0;
    goto B45;
    B46:;
    d0 = p0;
    i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
    p2 = i0;
    B45:;
    i0 = p5;
    i1 = 48u;
    i2 = p2;
    i3 = 48u;
    i2 += i3;
    i3 = p2;
    i4 = 0u;
    i3 = (u32)((s32)i3 < (s32)i4);
    i1 = i3 ? i1 : i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l6;
    i1 = p3;
    i0 = i0 != i1;
    if (i0) {goto B48;}
    i0 = p5;
    i1 = 1u;
    i0 += i1;
    i1 = 46u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p5;
    i1 = 2u;
    i0 += i1;
    p5 = i0;
    goto B47;
    B48:;
    i0 = p5;
    i1 = 1u;
    i0 += i1;
    p5 = i0;
    B47:;
    d0 = p0;
    i1 = p2;
    d1 = (f64)(s32)(i1);
    d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
    d1 = 10;
    d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
    p0 = d0;
    i0 = p4;
    i1 = p3;
    i2 = 1u;
    i1 += i2;
    p3 = i1;
    i0 = i0 != i1;
    if (i0) {goto L44;}
  d0 = p0;
  l5 = d0;
  i0 = l3;
  i1 = 102u;
  i0 = i0 == i1;
  if (i0) {goto B14;}
  B15:;
  d0 = l5;
  d1 = 5;
  i0 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = 17u;
  l13 = i0;
  goto B10;
  B14:;
  i0 = l4;
  i1 = p4;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B12;}
  d0 = l5;
  d1 = 5;
  i0 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d0, d1);
  i0 = !(i0);
  if (i0) {goto B11;}
  B13:;
  i0 = p5;
  i1 = 4294967295u;
  i0 += i1;
  p2 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  p3 = i0;
  i1 = 46u;
  i0 = i0 != i1;
  if (i0) {goto B49;}
  i0 = 1u;
  l13 = i0;
  goto B10;
  B49:;
  i0 = 2u;
  l13 = i0;
  goto B10;
  B12:;
  i0 = 17u;
  l13 = i0;
  goto B10;
  B11:;
  i0 = 17u;
  l13 = i0;
  B10:;
  L50: vm_checktime();
    i0 = l13;
    switch (i0) {
      case 0: goto B102;
      case 1: goto B101;
      case 2: goto B100;
      case 3: goto B103;
      case 4: goto B97;
      case 5: goto B81;
      case 6: goto B80;
      case 7: goto B78;
      case 8: goto B77;
      case 9: goto B76;
      case 10: goto B79;
      case 11: goto B86;
      case 12: goto B85;
      case 13: goto B84;
      case 14: goto B83;
      case 15: goto B82;
      case 16: goto B99;
      case 17: goto B87;
      case 18: goto B98;
      case 19: goto B95;
      case 20: goto B94;
      case 21: goto B91;
      case 22: goto B88;
      case 23: goto B90;
      case 24: goto B89;
      case 25: goto B93;
      case 26: goto B92;
      case 27: goto B96;
      default: goto B96;
    }
    B103:;
    i0 = p3;
    i1 = 57u;
    i0 = i0 != i1;
    if (i0) {goto B74;}
    i0 = 0u;
    l13 = i0;
    goto L50;
    B102:;
    i0 = p2;
    i1 = 48u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = p2;
    i0 = i0 == i1;
    if (i0) {goto B75;}
    i0 = 1u;
    l13 = i0;
    goto L50;
    B101:;
    i0 = p2;
    i1 = 4294967295u;
    i0 += i1;
    p2 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p3 = i0;
    i1 = 46u;
    i0 = i0 == i1;
    if (i0) {goto B73;}
    i0 = 2u;
    l13 = i0;
    goto L50;
    B100:;
    i0 = p3;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 9u;
    i0 = i0 <= i1;
    if (i0) {goto B72;}
    i0 = 16u;
    l13 = i0;
    goto L50;
    B99:;
    i0 = p2;
    i1 = 1u;
    i0 += i1;
    p4 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 48u;
    i0 = i0 != i1;
    if (i0) {goto B62;}
    i0 = 18u;
    l13 = i0;
    goto L50;
    B98:;
    i0 = l8;
    i1 = 102u;
    i0 = i0 != i1;
    if (i0) {goto B60;}
    goto B61;
    B97:;
    i0 = p2;
    i1 = p3;
    i2 = 1u;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 103u;
    i0 = i0 == i1;
    if (i0) {goto B68;}
    goto B67;
    B96:;
    i0 = p1;
    p4 = i0;
    i0 = l8;
    i1 = 102u;
    i0 = i0 == i1;
    if (i0) {goto B59;}
    i0 = 19u;
    l13 = i0;
    goto L50;
    B95:;
    i0 = p4;
    i0 = i32_load8_u((&M0), (u64)(i0 + 1));
    i1 = 255u;
    i0 &= i1;
    i1 = 46u;
    i0 = i0 != i1;
    if (i0) {goto B58;}
    i0 = 20u;
    l13 = i0;
    goto L50;
    B94:;
    i0 = p4;
    i1 = 12334u;
    i32_store16((&M0), (u64)(i0), i1);
    i0 = l7;
    i1 = 45u;
    i0 = i0 != i1;
    if (i0) {goto B57;}
    i0 = 25u;
    l13 = i0;
    goto L50;
    B93:;
    i0 = 45u;
    i1 = 43u;
    i2 = l4;
    i3 = 4294967295u;
    i2 += i3;
    l4 = i2;
    i0 = i2 ? i0 : i1;
    l7 = i0;
    i0 = p5;
    i1 = p4;
    i0 = i0 > i1;
    if (i0) {goto B55;}
    goto B54;
    B92:;
    i0 = p5;
    i1 = 1u;
    i0 += i1;
    p5 = i0;
    i1 = p4;
    i0 = i0 > i1;
    if (i0) {goto B53;}
    goto B52;
    B91:;
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i0 = p5;
    i1 = p4;
    i0 = i0 <= i1;
    if (i0) {goto B51;}
    i0 = 23u;
    l13 = i0;
    goto L50;
    B90:;
    i0 = p5;
    p2 = i0;
    i0 = 24u;
    l13 = i0;
    goto L50;
    B89:;
    i0 = p2;
    i1 = p2;
    i2 = 4294967295u;
    i1 += i2;
    p3 = i1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p3;
    p2 = i0;
    i0 = p3;
    i1 = p4;
    i0 = i0 > i1;
    if (i0) {goto B56;}
    i0 = 22u;
    l13 = i0;
    goto L50;
    B88:;
    i0 = p4;
    i1 = 49u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 17u;
    l13 = i0;
    goto L50;
    B87:;
    i0 = l3;
    i1 = 103u;
    i0 = i0 != i1;
    if (i0) {goto B71;}
    i0 = 11u;
    l13 = i0;
    goto L50;
    B86:;
    i0 = l2;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B70;}
    i0 = 12u;
    l13 = i0;
    goto L50;
    B85:;
    i0 = 13u;
    l13 = i0;
    goto L50;
    B84:;
    i0 = p5;
    i1 = 4294967295u;
    i0 += i1;
    p5 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p2 = i0;
    i1 = 48u;
    i0 = i0 == i1;
    if (i0) {goto B63;}
    i0 = 14u;
    l13 = i0;
    goto L50;
    B83:;
    i0 = p2;
    i1 = 46u;
    i0 = i0 == i1;
    if (i0) {goto B69;}
    i0 = 15u;
    l13 = i0;
    goto L50;
    B82:;
    i0 = p5;
    i1 = 1u;
    i0 += i1;
    p5 = i0;
    i0 = 5u;
    l13 = i0;
    goto L50;
    B81:;
    i0 = l7;
    i0 = !(i0);
    if (i0) {goto B66;}
    i0 = 6u;
    l13 = i0;
    goto L50;
    B80:;
    i0 = p5;
    i1 = l7;
    i32_store8((&M0), (u64)(i0 + 1), i1);
    i0 = p5;
    i1 = l1;
    i2 = 69u;
    i1 |= i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l4;
    i1 = 100u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B65;}
    i0 = 10u;
    l13 = i0;
    goto L50;
    B79:;
    i0 = p5;
    i1 = 2u;
    i0 += i1;
    i1 = l4;
    i2 = 100u;
    i1 = DIV_U(i1, i2);
    i2 = 48u;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p5;
    i1 = 3u;
    i0 += i1;
    p5 = i0;
    goto B64;
    B78:;
    i0 = p5;
    i1 = 2u;
    i0 += i1;
    p5 = i0;
    i0 = 8u;
    l13 = i0;
    goto L50;
    B77:;
    i0 = p5;
    i1 = l4;
    i2 = 10u;
    i1 = I32_DIV_S(i1, i2);
    p2 = i1;
    i2 = 10u;
    i1 = I32_REM_S(i1, i2);
    i2 = 48u;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p5;
    i1 = l4;
    i2 = p2;
    i3 = 10u;
    i2 *= i3;
    i1 -= i2;
    i2 = 48u;
    i1 += i2;
    i32_store8((&M0), (u64)(i0 + 1), i1);
    i0 = p5;
    i1 = 2u;
    i0 += i1;
    p5 = i0;
    i0 = 9u;
    l13 = i0;
    goto L50;
    B76:;
    i0 = p5;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p5;
    i1 = p1;
    i0 -= i1;
    goto Bfunc;
    B75:;
    i0 = 27u;
    l13 = i0;
    goto L50;
    B74:;
    i0 = 4u;
    l13 = i0;
    goto L50;
    B73:;
    i0 = 1u;
    l13 = i0;
    goto L50;
    B72:;
    i0 = 3u;
    l13 = i0;
    goto L50;
    B71:;
    i0 = 5u;
    l13 = i0;
    goto L50;
    B70:;
    i0 = 5u;
    l13 = i0;
    goto L50;
    B69:;
    i0 = 5u;
    l13 = i0;
    goto L50;
    B68:;
    i0 = 11u;
    l13 = i0;
    goto L50;
    B67:;
    i0 = 5u;
    l13 = i0;
    goto L50;
    B66:;
    i0 = 9u;
    l13 = i0;
    goto L50;
    B65:;
    i0 = 7u;
    l13 = i0;
    goto L50;
    B64:;
    i0 = 8u;
    l13 = i0;
    goto L50;
    B63:;
    i0 = 13u;
    l13 = i0;
    goto L50;
    B62:;
    i0 = 17u;
    l13 = i0;
    goto L50;
    B61:;
    i0 = 26u;
    l13 = i0;
    goto L50;
    B60:;
    i0 = 19u;
    l13 = i0;
    goto L50;
    B59:;
    i0 = 26u;
    l13 = i0;
    goto L50;
    B58:;
    i0 = 26u;
    l13 = i0;
    goto L50;
    B57:;
    i0 = 21u;
    l13 = i0;
    goto L50;
    B56:;
    i0 = 24u;
    l13 = i0;
    goto L50;
    B55:;
    i0 = 23u;
    l13 = i0;
    goto L50;
    B54:;
    i0 = 22u;
    l13 = i0;
    goto L50;
    B53:;
    i0 = 23u;
    l13 = i0;
    goto L50;
    B52:;
    i0 = 22u;
    l13 = i0;
    goto L50;
    B51:;
    i0 = 22u;
    l13 = i0;
    goto L50;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_parse_num_base(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = 2u;
  i0 = i0 >= i1;
  if (i0) {goto B6;}
  i0 = p0;
  p1 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  if (i0) {goto B0;}
  goto B5;
  B6:;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 255u;
  i0 &= i1;
  i1 = 48u;
  i0 = i0 != i1;
  p1 = i0;
  if (i0) {goto B9;}
  i0 = l1;
  i1 = 16u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  B9:;
  i0 = p1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 8u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 2u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 1u;
  i2 += i3;
  i2 = i32_load8_u((&M0), (u64)(i2));
  i3 = 32u;
  i2 |= i3;
  i3 = 111u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  i1 = p0;
  i0 -= i1;
  goto Bfunc;
  B8:;
  i0 = l0;
  i1 = 255u;
  i0 &= i1;
  i1 = 48u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  B7:;
  i0 = p0;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 32u;
  i0 |= i1;
  l0 = i0;
  i1 = 255u;
  i0 &= i1;
  i1 = 120u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p2;
  i1 = 16u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  i0 -= i1;
  goto Bfunc;
  B5:;
  i0 = p2;
  i1 = 10u;
  i32_store((&M0), (u64)(i0), i1);
  goto B1;
  B4:;
  i0 = l1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 255u;
  i0 &= i1;
  i1 = 111u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = 8u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  i0 -= i1;
  goto Bfunc;
  B3:;
  i0 = p0;
  p1 = i0;
  i0 = l0;
  i1 = 255u;
  i0 &= i1;
  i1 = 48u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  p1 = i0;
  i0 = l1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 2u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 1u;
  i2 += i3;
  i2 = i32_load8_u((&M0), (u64)(i2));
  i3 = 32u;
  i2 |= i3;
  i3 = 98u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  i1 = p0;
  i0 -= i1;
  goto Bfunc;
  B2:;
  i0 = l1;
  if (i0) {goto B10;}
  i0 = l0;
  i1 = 255u;
  i0 &= i1;
  i1 = 98u;
  i0 = i0 != i1;
  if (i0) {goto B10;}
  i0 = p2;
  i1 = 2u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  i0 -= i1;
  goto Bfunc;
  B10:;
  i0 = p0;
  p1 = i0;
  i0 = l1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 10u;
  i32_store((&M0), (u64)(i0), i1);
  B1:;
  i0 = p0;
  p1 = i0;
  B0:;
  i0 = p1;
  i1 = p0;
  i0 -= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static f64 nan_0(u32 p0) {
  FUNC_PROLOGUE;
  f64 d0;
  d0 = f64_reinterpret_i64(0x7ff8000000000000) /* nan:0x8000000000000 */;
  FUNC_EPILOGUE;
  return d0;
}

static f64 sqrt_0(f64 p0) {
  u32 l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, l8 = 0, 
      l9 = 0;
  u64 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  f64 d0, d1;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i1 = 2146435072u;
  i0 &= i1;
  i1 = 2146435072u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  j0 = l0;
  i0 = (u32)(j0);
  l2 = i0;
  i0 = l1;
  i1 = 0u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 2147483647u;
  i0 &= i1;
  i1 = l2;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B2;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B2:;
  j0 = l0;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l3 = i0;
  if (i0) {goto B3;}
  i0 = 0u;
  l4 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = 0u;
  l3 = i0;
  i0 = l2;
  l5 = i0;
  i0 = l1;
  i1 = 1048576u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B6;}
  goto B5;
  B7:;
  i0 = 0u;
  l3 = i0;
  L8: vm_checktime();
    i0 = l2;
    i1 = 11u;
    i0 >>= (i1 & 31);
    l1 = i0;
    i0 = l3;
    i1 = 4294967275u;
    i0 += i1;
    l3 = i0;
    i0 = l2;
    i1 = 21u;
    i0 <<= (i1 & 31);
    l5 = i0;
    l2 = i0;
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto L8;}
  i0 = l1;
  i1 = 1048576u;
  i0 &= i1;
  if (i0) {goto B5;}
  B6:;
  i0 = 0u;
  l4 = i0;
  L9: vm_checktime();
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i0 = l1;
    i1 = 524288u;
    i0 &= i1;
    l2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 <<= (i1 & 31);
    l6 = i0;
    l1 = i0;
    i0 = l2;
    i0 = !(i0);
    if (i0) {goto L9;}
    goto B4;
  B5:;
  i0 = l1;
  l6 = i0;
  B4:;
  i0 = l5;
  i1 = l4;
  i0 <<= (i1 & 31);
  l2 = i0;
  i0 = l3;
  i1 = 1u;
  i0 += i1;
  i1 = l4;
  i0 -= i1;
  l3 = i0;
  i0 = l5;
  i1 = 32u;
  i2 = l4;
  i1 -= i2;
  i0 >>= (i1 & 31);
  i1 = l6;
  i0 |= i1;
  l1 = i0;
  B3:;
  i0 = l1;
  i1 = 1048575u;
  i0 &= i1;
  i1 = 1048576u;
  i0 |= i1;
  l1 = i0;
  i0 = l3;
  i1 = 4294966273u;
  i0 += i1;
  l6 = i0;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 31u;
  i1 >>= (i2 & 31);
  i0 |= i1;
  l1 = i0;
  i0 = l2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l2 = i0;
  B10:;
  i0 = 0u;
  i1 = 2097152u;
  i2 = l2;
  i3 = 31u;
  i2 >>= (i3 & 31);
  i3 = l1;
  i4 = 1u;
  i3 <<= (i4 & 31);
  i2 |= i3;
  l4 = i2;
  i3 = 2097152u;
  i2 = (u32)((s32)i2 < (s32)i3);
  l1 = i2;
  i0 = i2 ? i0 : i1;
  l7 = i0;
  i0 = l4;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l4 = i0;
  i1 = l4;
  i2 = 4290772992u;
  i1 += i2;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  i1 = l2;
  i2 = 30u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l3 = i0;
  i1 = 0u;
  i2 = 4194304u;
  i3 = l1;
  i1 = i3 ? i1 : i2;
  l4 = i1;
  i2 = 1048576u;
  i1 |= i2;
  l1 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B11;}
  i0 = l7;
  i1 = 1048576u;
  i0 |= i1;
  l7 = i0;
  i0 = l3;
  i1 = l1;
  i0 -= i1;
  l3 = i0;
  i0 = l1;
  i1 = 1048576u;
  i0 += i1;
  l4 = i0;
  B11:;
  i0 = l3;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 29u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 524288u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B12;}
  i0 = l7;
  i1 = 524288u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 1048576u;
  i0 += i1;
  l4 = i0;
  B12:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 28u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 262144u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B13;}
  i0 = l7;
  i1 = 262144u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 524288u;
  i0 += i1;
  l4 = i0;
  B13:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 27u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 131072u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B14;}
  i0 = l7;
  i1 = 131072u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 262144u;
  i0 += i1;
  l4 = i0;
  B14:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 26u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 65536u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B15;}
  i0 = l7;
  i1 = 65536u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 131072u;
  i0 += i1;
  l4 = i0;
  B15:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 25u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 32768u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B16;}
  i0 = l7;
  i1 = 32768u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 65536u;
  i0 += i1;
  l4 = i0;
  B16:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 24u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 16384u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B17;}
  i0 = l7;
  i1 = 16384u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 32768u;
  i0 += i1;
  l4 = i0;
  B17:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 23u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 8192u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B18;}
  i0 = l7;
  i1 = 8192u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 16384u;
  i0 += i1;
  l4 = i0;
  B18:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 22u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 4096u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B19;}
  i0 = l7;
  i1 = 4096u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 8192u;
  i0 += i1;
  l4 = i0;
  B19:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 21u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 2048u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B20;}
  i0 = l7;
  i1 = 2048u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 4096u;
  i0 += i1;
  l4 = i0;
  B20:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 20u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 1024u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B21;}
  i0 = l7;
  i1 = 1024u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 2048u;
  i0 += i1;
  l4 = i0;
  B21:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 19u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 512u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B22;}
  i0 = l7;
  i1 = 512u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 1024u;
  i0 += i1;
  l4 = i0;
  B22:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 18u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 256u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B23;}
  i0 = l7;
  i1 = 256u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 512u;
  i0 += i1;
  l4 = i0;
  B23:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 17u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 128u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B24;}
  i0 = l7;
  i1 = 128u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 256u;
  i0 += i1;
  l4 = i0;
  B24:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 16u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 64u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B25;}
  i0 = l7;
  i1 = 64u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 128u;
  i0 += i1;
  l4 = i0;
  B25:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 15u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 32u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B26;}
  i0 = l7;
  i1 = 32u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 64u;
  i0 += i1;
  l4 = i0;
  B26:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 14u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 16u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B27;}
  i0 = l7;
  i1 = 16u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 32u;
  i0 += i1;
  l4 = i0;
  B27:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 13u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 8u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B28;}
  i0 = l7;
  i1 = 8u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 16u;
  i0 += i1;
  l4 = i0;
  B28:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 12u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 4u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B29;}
  i0 = l7;
  i1 = 4u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 8u;
  i0 += i1;
  l4 = i0;
  B29:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 11u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l1 = i0;
  i1 = l4;
  i2 = 2u;
  i1 += i2;
  l3 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B30;}
  i0 = l7;
  i1 = 2u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  i1 = l3;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  B30:;
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 10u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l3 = i0;
  i1 = l4;
  i2 = 1u;
  i1 += i2;
  l1 = i1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B31;}
  i0 = l7;
  i1 = 1u;
  i0 += i1;
  l7 = i0;
  i0 = l3;
  i1 = l1;
  i0 -= i1;
  l3 = i0;
  i0 = l4;
  i1 = 2u;
  i0 += i1;
  l4 = i0;
  B31:;
  i0 = l2;
  i1 = 23u;
  i0 <<= (i1 & 31);
  l1 = i0;
  i0 = l3;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 9u;
  i1 >>= (i2 & 31);
  i2 = 1u;
  i1 &= i2;
  i0 |= i1;
  l2 = i0;
  i0 = l6;
  i1 = 1u;
  i0 >>= (i1 & 31);
  l8 = i0;
  i0 = 2147483648u;
  l3 = i0;
  i0 = 0u;
  l9 = i0;
  i0 = 0u;
  l5 = i0;
  L32: vm_checktime();
    i0 = l5;
    i1 = l3;
    i0 += i1;
    l6 = i0;
    i0 = l2;
    i1 = l4;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B34;}
    i0 = l2;
    i1 = l4;
    i0 = i0 != i1;
    if (i0) {goto B33;}
    i0 = l1;
    i1 = l6;
    i0 = i0 < i1;
    if (i0) {goto B33;}
    B34:;
    i0 = l2;
    i1 = l4;
    i0 -= i1;
    i1 = l1;
    i2 = l6;
    i1 = i1 < i2;
    i0 -= i1;
    l2 = i0;
    i0 = l4;
    i1 = l6;
    i2 = 0u;
    i1 = (u32)((s32)i1 < (s32)i2);
    i2 = l6;
    i3 = l3;
    i2 += i3;
    l5 = i2;
    i3 = 4294967295u;
    i2 = (u32)((s32)i2 > (s32)i3);
    i1 &= i2;
    i0 += i1;
    l4 = i0;
    i0 = l9;
    i1 = l3;
    i0 += i1;
    l9 = i0;
    i0 = l1;
    i1 = l6;
    i0 -= i1;
    l1 = i0;
    B33:;
    i0 = l1;
    i1 = 31u;
    i0 >>= (i1 & 31);
    i1 = l2;
    i2 = 1u;
    i1 <<= (i2 & 31);
    i0 |= i1;
    l2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 <<= (i1 & 31);
    l1 = i0;
    i0 = l3;
    i1 = 1u;
    i0 >>= (i1 & 31);
    l3 = i0;
    if (i0) {goto L32;}
  i0 = l1;
  i1 = l2;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B35;}
  i0 = l9;
  i1 = 4294967295u;
  i0 = i0 == i1;
  if (i0) {goto B36;}
  i0 = l9;
  i1 = 1u;
  i0 &= i1;
  i1 = l9;
  i0 += i1;
  l9 = i0;
  goto B35;
  B36:;
  i0 = l7;
  i1 = 1u;
  i0 += i1;
  l7 = i0;
  i0 = 0u;
  l9 = i0;
  B35:;
  i0 = l8;
  i1 = 20u;
  i0 <<= (i1 & 31);
  i1 = l7;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i0 += i1;
  i1 = 1071644672u;
  i0 += i1;
  j0 = (u64)(i0);
  j1 = 32ull;
  j0 <<= (j1 & 63);
  i1 = l9;
  i2 = 1u;
  i1 >>= (i2 & 31);
  i2 = l7;
  i3 = 31u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  j1 = (u64)(i1);
  j0 |= j1;
  d0 = f64_reinterpret_i64(j0);
  p0 = d0;
  B1:;
  d0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 fabs_0(f64 p0) {
  FUNC_PROLOGUE;
  u64 j0, j1;
  f64 d0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  d0 = f64_reinterpret_i64(j0);
  FUNC_EPILOGUE;
  return d0;
}

static f64 scalbn_0(f64 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1, j2;
  f64 d0, d1;
  i0 = p1;
  i1 = 1024u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B3;}
  d0 = p0;
  d1 = 8.9884656743115795e+307;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  i0 = p1;
  i1 = 2047u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 4294965250u;
  i0 += i1;
  p1 = i0;
  i1 = 1023u;
  i2 = p1;
  i3 = 1023u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  p1 = i0;
  d0 = p0;
  d1 = 8.9884656743115795e+307;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  goto B0;
  B3:;
  i0 = p1;
  i1 = 4294966273u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  d0 = p0;
  d1 = 2.0041683600089728e-292;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  i0 = p1;
  i1 = 4294965304u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 1938u;
  i0 += i1;
  p1 = i0;
  i1 = 4294966274u;
  i2 = p1;
  i3 = 4294966274u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  p1 = i0;
  d0 = p0;
  d1 = 2.0041683600089728e-292;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  goto B0;
  B2:;
  i0 = p1;
  i1 = 4294966273u;
  i0 += i1;
  p1 = i0;
  goto B0;
  B1:;
  i0 = p1;
  i1 = 969u;
  i0 += i1;
  p1 = i0;
  B0:;
  d0 = p0;
  i1 = p1;
  i2 = 1023u;
  i1 += i2;
  j1 = (u64)(i1);
  j2 = 52ull;
  j1 <<= (j2 & 63);
  d1 = f64_reinterpret_i64(j1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  FUNC_EPILOGUE;
  return d0;
}

static f64 pow_0(f64 p0, f64 p1) {
  u32 l2 = 0, l3 = 0, l4 = 0, l6 = 0, l7 = 0, l8 = 0, l9 = 0, l10 = 0;
  u64 l1 = 0, l5 = 0;
  f64 l0 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0, l15 = 0, l16 = 0, l17 = 0, 
      l18 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i7, i8, i9;
  u64 j0, j1, j2, j3, j7, j8;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9, d10;
  d0 = 1;
  l0 = d0;
  d0 = p1;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l2 = i0;
  i1 = 2147483647u;
  i0 &= i1;
  l3 = i0;
  j1 = l1;
  i1 = (u32)(j1);
  l4 = i1;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l5 = j0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l6 = i0;
  j0 = l5;
  i0 = (u32)(j0);
  l7 = i0;
  if (i0) {goto B1;}
  i0 = l6;
  i1 = 1072693248u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l6;
  i1 = 2147483647u;
  i0 &= i1;
  l8 = i0;
  i1 = 2146435072u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = l7;
  i1 = 0u;
  i0 = i0 != i1;
  i1 = l8;
  i2 = 2146435072u;
  i1 = i1 == i2;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = l3;
  i1 = 2146435072u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l3;
  i1 = 2146435072u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  B3:;
  d0 = p0;
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B2:;
  i0 = 0u;
  l9 = i0;
  i0 = l6;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B7;}
  i0 = 2u;
  l9 = i0;
  i0 = l3;
  i1 = 1128267775u;
  i0 = i0 > i1;
  if (i0) {goto B7;}
  i0 = 0u;
  l9 = i0;
  i0 = l3;
  i1 = 1072693248u;
  i0 = i0 < i1;
  if (i0) {goto B7;}
  i0 = l3;
  i1 = 20u;
  i0 >>= (i1 & 31);
  l10 = i0;
  i0 = l3;
  i1 = 1094713344u;
  i0 = i0 < i1;
  if (i0) {goto B6;}
  i0 = 2u;
  i1 = l4;
  i2 = 1075u;
  i3 = l10;
  i2 -= i3;
  l9 = i2;
  i1 >>= (i2 & 31);
  l10 = i1;
  i2 = 1u;
  i1 &= i2;
  i0 -= i1;
  i1 = 0u;
  i2 = l10;
  i3 = l9;
  i2 <<= (i3 & 31);
  i3 = l4;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l9 = i0;
  B7:;
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B5;}
  goto B4;
  B6:;
  i0 = 0u;
  l9 = i0;
  i0 = l4;
  if (i0) {goto B4;}
  i0 = 2u;
  i1 = l3;
  i2 = 1043u;
  i3 = l10;
  i2 -= i3;
  l4 = i2;
  i1 >>= (i2 & 31);
  l9 = i1;
  i2 = 1u;
  i1 &= i2;
  i0 -= i1;
  i1 = 0u;
  i2 = l9;
  i3 = l4;
  i2 <<= (i3 & 31);
  i3 = l3;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l9 = i0;
  B5:;
  i0 = l3;
  i1 = 2146435072u;
  i0 = i0 != i1;
  if (i0) {goto B11;}
  i0 = l8;
  i1 = 3222274048u;
  i0 += i1;
  i1 = l7;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l8;
  i1 = 1072693248u;
  i0 = i0 < i1;
  if (i0) {goto B10;}
  d0 = p1;
  d1 = 0;
  i2 = l2;
  i3 = 4294967295u;
  i2 = (u32)((s32)i2 > (s32)i3);
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B11:;
  i0 = l3;
  i1 = 1072693248u;
  i0 = i0 != i1;
  if (i0) {goto B12;}
  i0 = l2;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B8;}
  d0 = p0;
  goto Bfunc;
  B12:;
  i0 = l2;
  i1 = 1073741824u;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B10:;
  d0 = 0;
  d1 = p1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  i2 = l2;
  i3 = 4294967295u;
  i2 = (u32)((s32)i2 > (s32)i3);
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B9:;
  i0 = l6;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 1071644672u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  d0 = p0;
  d0 = sqrt_0(d0);
  goto Bfunc;
  B8:;
  d0 = 1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B4:;
  d0 = p0;
  d0 = fabs_0(d0);
  l0 = d0;
  i0 = l7;
  if (i0) {goto B25;}
  i0 = l8;
  i0 = !(i0);
  if (i0) {goto B24;}
  i0 = l8;
  i1 = 1073741824u;
  i0 |= i1;
  i1 = 2146435072u;
  i0 = i0 == i1;
  if (i0) {goto B24;}
  B25:;
  d0 = 1;
  l11 = d0;
  i0 = l6;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B21;}
  i0 = l9;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B23;}
  i0 = l9;
  if (i0) {goto B21;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p1 = d0;
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B24:;
  d0 = 1;
  d1 = l0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = l0;
  i2 = l2;
  i3 = 0u;
  i2 = (u32)((s32)i2 < (s32)i3);
  d0 = i2 ? d0 : d1;
  l0 = d0;
  i0 = l6;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = l9;
  i1 = l8;
  i2 = 3222274048u;
  i1 += i2;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B22;}
  d0 = l0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = l0;
  i2 = l9;
  i3 = 1u;
  i2 = i2 == i3;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B23:;
  d0 = -1;
  l11 = d0;
  i0 = l3;
  i1 = 1105199105u;
  i0 = i0 >= i1;
  if (i0) {goto B20;}
  goto B19;
  B22:;
  d0 = l0;
  d1 = l0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p1 = d0;
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B21:;
  i0 = l3;
  i1 = 1105199105u;
  i0 = i0 < i1;
  if (i0) {goto B19;}
  B20:;
  i0 = l3;
  i1 = 1139802113u;
  i0 = i0 < i1;
  if (i0) {goto B26;}
  i0 = l8;
  i1 = 1072693247u;
  i0 = i0 > i1;
  if (i0) {goto B18;}
  d0 = INFINITY;
  d1 = 0;
  i2 = l2;
  i3 = 0u;
  i2 = (u32)((s32)i2 < (s32)i3);
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B26:;
  i0 = l8;
  i1 = 1072693246u;
  i0 = i0 > i1;
  if (i0) {goto B17;}
  d0 = l11;
  d1 = 1.0000000000000001e+300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 1.0000000000000001e+300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l11;
  d2 = 1e-300;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1e-300;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i2 = l2;
  i3 = 0u;
  i2 = (u32)((s32)i2 < (s32)i3);
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B19:;
  i0 = 0u;
  l3 = i0;
  i0 = l8;
  i1 = 1048575u;
  i0 = i0 > i1;
  if (i0) {goto B28;}
  d0 = l0;
  d1 = 9007199254740992;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l0 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l8 = i0;
  i0 = 4294967243u;
  l2 = i0;
  goto B27;
  B28:;
  i0 = 0u;
  l2 = i0;
  B27:;
  i0 = l8;
  i1 = 1048575u;
  i0 &= i1;
  l4 = i0;
  i1 = 1072693248u;
  i0 |= i1;
  l6 = i0;
  i0 = l8;
  i1 = 20u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = l2;
  i0 += i1;
  i1 = 4294966273u;
  i0 += i1;
  l2 = i0;
  i0 = l4;
  i1 = 235663u;
  i0 = i0 < i1;
  if (i0) {goto B15;}
  i0 = l4;
  i1 = 767610u;
  i0 = i0 >= i1;
  if (i0) {goto B16;}
  i0 = 1u;
  l3 = i0;
  goto B15;
  B18:;
  d0 = INFINITY;
  d1 = 0;
  i2 = l2;
  i3 = 0u;
  i2 = (u32)((s32)i2 > (s32)i3);
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B17:;
  i0 = l8;
  i1 = 1072693249u;
  i0 = i0 < i1;
  if (i0) {goto B14;}
  d0 = l11;
  d1 = 1.0000000000000001e+300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 1.0000000000000001e+300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l11;
  d2 = 1e-300;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1e-300;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i2 = l2;
  i3 = 0u;
  i2 = (u32)((s32)i2 > (s32)i3);
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B16:;
  i0 = l6;
  i1 = 4293918720u;
  i0 += i1;
  l6 = i0;
  i0 = l2;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  B15:;
  i0 = l3;
  i1 = 3u;
  i0 <<= (i1 & 31);
  l4 = i0;
  i1 = 26736u;
  i0 += i1;
  d0 = f64_load((&M0), (u64)(i0));
  l12 = d0;
  i1 = l6;
  j1 = (u64)(i1);
  j2 = 32ull;
  j1 <<= (j2 & 63);
  d2 = l0;
  j2 = i64_reinterpret_f64(d2);
  j3 = 4294967295ull;
  j2 &= j3;
  j1 |= j2;
  d1 = f64_reinterpret_i64(j1);
  l13 = d1;
  i2 = l4;
  i3 = 26704u;
  i2 += i3;
  d2 = f64_load((&M0), (u64)(i2));
  l14 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  l15 = d1;
  d2 = 1;
  d3 = l14;
  d4 = l13;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d2, d3);
  l16 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l0 = d1;
  j1 = i64_reinterpret_f64(d1);
  j2 = 18446744069414584320ull;
  j1 &= j2;
  d1 = f64_reinterpret_i64(j1);
  p0 = d1;
  d2 = p0;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  l17 = d2;
  d3 = 3;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d3 = l0;
  d4 = p0;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d4 = l16;
  d5 = l15;
  d6 = p0;
  i7 = l6;
  i8 = 1u;
  i7 = (u32)((s32)i7 >> (i8 & 31));
  i8 = 536870912u;
  i7 |= i8;
  i8 = l3;
  i9 = 18u;
  i8 <<= (i9 & 31);
  i7 += i8;
  i8 = 524288u;
  i7 += i8;
  j7 = (u64)(i7);
  j8 = 32ull;
  j7 <<= (j8 & 63);
  d7 = f64_reinterpret_i64(j7);
  l18 = d7;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d5, d6);
  d6 = p0;
  d7 = l13;
  d8 = l18;
  d9 = l14;
  d8 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  l13 = d4;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = l0;
  d5 = l0;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  p0 = d4;
  d5 = p0;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = p0;
  d6 = p0;
  d7 = p0;
  d8 = p0;
  d9 = p0;
  d10 = 0.20697501780033842;
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = 0.23066074577556175;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 0.27272812380853401;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.33333332981837743;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.42857142857855018;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.59999999999999465;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  l14 = d3;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  j2 = i64_reinterpret_f64(d2);
  j3 = 18446744069414584320ull;
  j2 &= j3;
  d2 = f64_reinterpret_i64(j2);
  p0 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l15 = d1;
  d2 = l13;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l0;
  d4 = l14;
  d5 = p0;
  d6 = -3;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d6 = l17;
  d5 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  l0 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  j1 = i64_reinterpret_f64(d1);
  j2 = 18446744069414584320ull;
  j1 &= j2;
  d1 = f64_reinterpret_i64(j1);
  p0 = d1;
  d2 = 0.96179670095443726;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l13 = d1;
  i2 = l4;
  i3 = 26720u;
  i2 += i3;
  d2 = f64_load((&M0), (u64)(i2));
  d3 = l0;
  d4 = p0;
  d5 = l15;
  d4 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d4 = 0.96179669392597555;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = p0;
  d5 = -7.0284616509527583e-09;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  l14 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  i1 = l2;
  d1 = (f64)(s32)(i1);
  l0 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  j0 = i64_reinterpret_f64(d0);
  j1 = 18446744069414584320ull;
  j0 &= j1;
  d0 = f64_reinterpret_i64(j0);
  p0 = d0;
  d1 = l0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = l12;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = l13;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l12 = d0;
  goto B13;
  B14:;
  d0 = l0;
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d1 = 1.4426950216293335;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l0 = d0;
  d1 = p0;
  d2 = 1.9259629911266175e-08;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 0.5;
  d4 = p0;
  d5 = p0;
  d6 = -0.25;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.33333333333333331;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -1.4426950408889634;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l14 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  j0 = i64_reinterpret_f64(d0);
  j1 = 18446744069414584320ull;
  j0 &= j1;
  d0 = f64_reinterpret_i64(j0);
  p0 = d0;
  d1 = l0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l12 = d0;
  B13:;
  d0 = p0;
  j1 = l1;
  j2 = 18446744069414584320ull;
  j1 &= j2;
  d1 = f64_reinterpret_i64(j1);
  l13 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l0 = d0;
  d1 = l14;
  d2 = l12;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = p1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p1;
  d3 = l13;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p1 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  i0 = (u32)(j0);
  l3 = i0;
  j0 = l1;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l6 = i0;
  i1 = 1083179008u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B33;}
  i0 = l6;
  i1 = 3211788288u;
  i0 += i1;
  i1 = l3;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B32;}
  d0 = l11;
  d1 = 1.0000000000000001e+300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 1.0000000000000001e+300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B33:;
  i0 = l6;
  i1 = 2147482624u;
  i0 &= i1;
  i1 = 1083231232u;
  i0 = i0 < i1;
  if (i0) {goto B30;}
  i0 = l6;
  i1 = 1064252416u;
  i0 += i1;
  i1 = l3;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B31;}
  d0 = l11;
  d1 = 1e-300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 1e-300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B32:;
  d0 = p1;
  d1 = 8.0085662595372941e-17;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p0;
  d2 = l0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  i0 = (*Z_eosio_injectionZ__eosio_f64_gtZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B30;}
  d0 = l11;
  d1 = 1.0000000000000001e+300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 1.0000000000000001e+300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B31:;
  d0 = p1;
  d1 = p0;
  d2 = l0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  i0 = (*Z_eosio_injectionZ__eosio_f64_leZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  i0 = !(i0);
  if (i0) {goto B29;}
  B30:;
  i0 = 0u;
  l3 = i0;
  i0 = l6;
  i1 = 2147483647u;
  i0 &= i1;
  l4 = i0;
  i1 = 1071644673u;
  i0 = i0 < i1;
  if (i0) {goto B34;}
  i0 = 0u;
  i1 = 1048576u;
  i2 = l4;
  i3 = 20u;
  i2 >>= (i3 & 31);
  i3 = 4294966274u;
  i2 += i3;
  i1 >>= (i2 & 31);
  i2 = l6;
  i1 += i2;
  l4 = i1;
  i2 = 1048575u;
  i1 &= i2;
  i2 = 1048576u;
  i1 |= i2;
  i2 = 1043u;
  i3 = l4;
  i4 = 20u;
  i3 >>= (i4 & 31);
  i4 = 2047u;
  i3 &= i4;
  l2 = i3;
  i2 -= i3;
  i1 >>= (i2 & 31);
  l3 = i1;
  i0 -= i1;
  i1 = l3;
  i2 = l6;
  i3 = 0u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  l3 = i0;
  d0 = p1;
  d1 = l0;
  i2 = 4293918720u;
  i3 = l2;
  i4 = 4294966273u;
  i3 += i4;
  i2 = (u32)((s32)i2 >> (i3 & 31));
  i3 = l4;
  i2 &= i3;
  j2 = (u64)(i2);
  j3 = 32ull;
  j2 <<= (j3 & 63);
  d2 = f64_reinterpret_i64(j2);
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  l0 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  B34:;
  i0 = l3;
  i1 = 20u;
  i0 <<= (i1 & 31);
  j1 = l1;
  j2 = 18446744069414584320ull;
  j1 &= j2;
  d1 = f64_reinterpret_i64(j1);
  p0 = d1;
  d2 = 0.69314718246459961;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l13 = d1;
  d2 = p1;
  d3 = p0;
  d4 = l0;
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d3 = 0.69314718055994529;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = p0;
  d4 = -1.904654299957768e-09;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  l0 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p1 = d1;
  d2 = p1;
  d3 = p1;
  d4 = p1;
  d5 = p1;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  p0 = d4;
  d5 = p0;
  d6 = p0;
  d7 = p0;
  d8 = p0;
  d9 = 4.1381367970572385e-08;
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = -1.6533902205465252e-06;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 6.6137563214379344e-05;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = -0.0027777777777015593;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.16666666666666602;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  p0 = d3;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = p0;
  d4 = -2;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d2, d3);
  d3 = l0;
  d4 = p1;
  d5 = l13;
  d4 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  p0 = d3;
  d4 = p1;
  d5 = p0;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p1 = d1;
  j1 = i64_reinterpret_f64(d1);
  l1 = j1;
  j2 = 32ull;
  j1 >>= (j2 & 63);
  i1 = (u32)(j1);
  i0 += i1;
  l6 = i0;
  i1 = 1048575u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B35;}
  d0 = l11;
  d1 = p1;
  i2 = l3;
  d1 = scalbn_0(d1, i2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B35:;
  d0 = l11;
  i1 = l6;
  j1 = (u64)(i1);
  j2 = 32ull;
  j1 <<= (j2 & 63);
  j2 = l1;
  j3 = 4294967295ull;
  j2 &= j3;
  j1 |= j2;
  d1 = f64_reinterpret_i64(j1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B29:;
  d0 = l11;
  d1 = 1e-300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 1e-300;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  d0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static u32 mp_parse_num_integer(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p2;
  i1 = 36u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B2;}
  i0 = p2;
  i1 = 0u;
  i0 = i0 != i1;
  i1 = p2;
  i2 = 2u;
  i1 = (u32)((s32)i1 < (s32)i2);
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = p1;
  i0 += i1;
  p2 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B4;}
  L6: vm_checktime();
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_isspace(i0);
    i0 = !(i0);
    if (i0) {goto B5;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L6;}
    goto B4;
  B5:;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  p1 = i0;
  i1 = 43u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = p1;
  i1 = 45u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = 1u;
  l2 = i0;
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  p0 = i0;
  goto B3;
  B7:;
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  p0 = i0;
  B4:;
  i0 = 0u;
  l2 = i0;
  B3:;
  i0 = p0;
  i1 = p0;
  i2 = p2;
  i3 = p0;
  i2 -= i3;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i1 = mp_parse_num_base(i1, i2, i3);
  i0 += i1;
  l3 = i0;
  p0 = i0;
  i0 = l3;
  i1 = p2;
  i0 = i0 >= i1;
  if (i0) {goto B9;}
  i0 = l3;
  p0 = i0;
  i0 = 0u;
  l1 = i0;
  L10: vm_checktime();
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    i1 = 4294967248u;
    i0 += i1;
    p1 = i0;
    i1 = 255u;
    i0 &= i1;
    i1 = 9u;
    i0 = i0 <= i1;
    if (i0) {goto B12;}
    i0 = l4;
    i1 = 95u;
    i0 = i0 == i1;
    if (i0) {goto B11;}
    i0 = l4;
    i1 = 32u;
    i0 |= i1;
    p1 = i0;
    i1 = 4294967199u;
    i0 += i1;
    i1 = 25u;
    i0 = i0 > i1;
    if (i0) {goto B9;}
    i0 = p1;
    i1 = 4294967209u;
    i0 += i1;
    p1 = i0;
    B12:;
    i0 = p1;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    l4 = i1;
    i0 = i0 >= i1;
    if (i0) {goto B9;}
    i0 = l1;
    i1 = l4;
    i0 = mp_small_int_mul_overflow(i0, i1);
    l5 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    l4 = i0;
    i0 = l5;
    if (i0) {goto B8;}
    i0 = l4;
    i1 = l1;
    i0 *= i1;
    i1 = p1;
    i0 += i1;
    l1 = i0;
    i1 = 1u;
    i0 <<= (i1 & 31);
    i1 = l1;
    i0 ^= i1;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B8;}
    B11:;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L10;}
  B9:;
  i0 = 0u;
  i1 = l1;
  i0 -= i1;
  i1 = l1;
  i2 = l2;
  i0 = i2 ? i0 : i1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l1 = i0;
  i0 = p0;
  i1 = l3;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  goto B1;
  B8:;
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p2;
  i2 = l3;
  i1 -= i2;
  i2 = l2;
  i3 = l4;
  i0 = mp_obj_new_int_from_str_len(i0, i1, i2, i3);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i1 = l3;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = 9928u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B1:;
  i0 = p0;
  i1 = p2;
  i0 = i0 >= i1;
  if (i0) {goto B13;}
  L14: vm_checktime();
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_isspace(i0);
    i0 = !(i0);
    if (i0) {goto B13;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L14;}
  B13:;
  i0 = p0;
  i1 = p2;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32652u;
  i1 = 11080u;
  i2 = l0;
  i0 = mp_obj_new_exception_msg_varg(i0, i1, i2);
  i1 = p3;
  raise_exc(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void raise_exc(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 32472u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 56));
  i3 = 0u;
  mp_obj_exception_add_traceback(i0, i1, i2, i3);
  B0:;
  i0 = p0;
  nlr_jump(i0);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static u32 _mp_parse_num_decimal(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l5 = 0, l6 = 0, l7 = 0, l8 = 0, 
      l9 = 0;
  f64 l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = p1;
  i0 += i1;
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B7;}
  L9: vm_checktime();
    i0 = p0;
    i0 = i32_load8_s((&M0), (u64)(i0));
    i0 = unichar_isspace(i0);
    i0 = !(i0);
    if (i0) {goto B8;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L9;}
    goto B7;
  B8:;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  p1 = i0;
  i1 = 43u;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  i0 = p1;
  i1 = 45u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = 1u;
  l3 = i0;
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  p0 = i0;
  i1 = l1;
  i0 = i0 < i1;
  if (i0) {goto B6;}
  goto B5;
  B10:;
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  p0 = i0;
  B7:;
  i0 = 0u;
  l3 = i0;
  i0 = p0;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B5;}
  B6:;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 32u;
  i0 |= i1;
  p1 = i0;
  i1 = 110u;
  i0 = i0 == i1;
  if (i0) {goto B13;}
  i0 = p1;
  i1 = 105u;
  i0 = i0 != i1;
  if (i0) {goto B11;}
  i0 = p0;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 1));
  i1 = 32u;
  i0 |= i1;
  i1 = 110u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 32u;
  i0 |= i1;
  i1 = 102u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 3u;
  i0 += i1;
  p1 = i0;
  d0 = INFINITY;
  l4 = d0;
  i0 = p0;
  i1 = 7u;
  i0 += i1;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B12;}
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 32u;
  i0 |= i1;
  i1 = 105u;
  i0 = i0 != i1;
  if (i0) {goto B12;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i1 = 32u;
  i0 |= i1;
  i1 = 110u;
  i0 = i0 != i1;
  if (i0) {goto B12;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 5));
  i1 = 32u;
  i0 |= i1;
  i1 = 105u;
  i0 = i0 != i1;
  if (i0) {goto B12;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 6));
  i1 = 32u;
  i0 |= i1;
  i1 = 116u;
  i0 = i0 != i1;
  if (i0) {goto B12;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  i2 = p0;
  i3 = 7u;
  i2 += i3;
  i2 = i32_load8_u((&M0), (u64)(i2));
  i3 = 32u;
  i2 |= i3;
  i3 = 121u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  goto B12;
  B13:;
  i0 = p0;
  i1 = 2u;
  i0 += i1;
  p1 = i0;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 1));
  i1 = 32u;
  i0 |= i1;
  i1 = 97u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 32u;
  i0 |= i1;
  i1 = 110u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 3u;
  i0 += i1;
  p1 = i0;
  i0 = 11924u;
  d0 = nan_0(i0);
  l4 = d0;
  B12:;
  d0 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = l4;
  i2 = l3;
  d0 = i2 ? d0 : d1;
  l4 = d0;
  i0 = 0u;
  p2 = i0;
  i0 = p1;
  i1 = l1;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  goto B2;
  B11:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B17;}
  d0 = 0;
  l4 = d0;
  i0 = 0u;
  l2 = i0;
  i0 = 0u;
  l6 = i0;
  i0 = 0u;
  l7 = i0;
  i0 = 0u;
  p2 = i0;
  i0 = p0;
  p1 = i0;
  L18: vm_checktime();
    i0 = p1;
    l5 = i0;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i0 = l5;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l8 = i0;
    i1 = 4294967248u;
    i0 += i1;
    l9 = i0;
    i1 = 255u;
    i0 &= i1;
    i1 = 10u;
    i0 = i0 >= i1;
    if (i0) {goto B25;}
    i0 = p2;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B24;}
    i0 = 2u;
    p2 = i0;
    i0 = l6;
    i1 = 107374180u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B19;}
    i0 = l9;
    i1 = l6;
    i2 = 10u;
    i1 *= i2;
    i0 += i1;
    l6 = i0;
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L18;}
    goto B16;
    B25:;
    i0 = p2;
    if (i0) {goto B23;}
    i0 = l8;
    i1 = 46u;
    i0 = i0 != i1;
    if (i0) {goto B23;}
    i0 = 1u;
    p2 = i0;
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L18;}
    goto B16;
    B24:;
    d0 = l4;
    d1 = 9.9999999999999997e+199;
    i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
    i0 = !(i0);
    if (i0) {goto B22;}
    i0 = l2;
    i1 = p2;
    i2 = 1u;
    i1 = i1 == i2;
    i0 -= i1;
    l2 = i0;
    d0 = l4;
    d1 = 10;
    d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
    i1 = l9;
    d1 = (f64)(i1);
    d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
    l4 = d0;
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L18;}
    goto B16;
    B23:;
    i0 = l8;
    i1 = 32u;
    i0 |= i1;
    l9 = i0;
    i0 = p2;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B26;}
    i0 = l9;
    i1 = 101u;
    i0 = i0 != i1;
    if (i0) {goto B26;}
    i0 = p1;
    i1 = l1;
    i0 = i0 >= i1;
    if (i0) {goto B20;}
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p2 = i0;
    i1 = 43u;
    i0 = i0 == i1;
    if (i0) {goto B21;}
    i0 = p2;
    i1 = 45u;
    i0 = i0 != i1;
    if (i0) {goto B20;}
    i0 = 1u;
    l7 = i0;
    i0 = 2u;
    p2 = i0;
    i0 = l5;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 != i1;
    if (i0) {goto B19;}
    goto B1;
    B26:;
    i0 = l9;
    i1 = 106u;
    i0 = i0 == i1;
    if (i0) {goto B15;}
    i0 = p1;
    i1 = l5;
    i2 = l8;
    i3 = 95u;
    i2 = i2 == i3;
    i0 = i2 ? i0 : i1;
    p1 = i0;
    i0 = l8;
    i1 = 95u;
    i0 = i0 == i1;
    if (i0) {goto B19;}
    goto B16;
    B22:;
    i0 = l2;
    i1 = p2;
    i1 = !(i1);
    i0 += i1;
    l2 = i0;
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L18;}
    goto B16;
    B21:;
    i0 = l5;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    B20:;
    i0 = 2u;
    p2 = i0;
    i0 = p1;
    i1 = l1;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    B19:;
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L18;}
    goto B16;
  B17:;
  d0 = 0;
  l4 = d0;
  i0 = 0u;
  l2 = i0;
  i0 = 0u;
  l6 = i0;
  i0 = 0u;
  l7 = i0;
  i0 = 0u;
  p2 = i0;
  i0 = p0;
  p1 = i0;
  L27: vm_checktime();
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    i0 = p1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l8 = i0;
    i1 = 4294967248u;
    i0 += i1;
    l9 = i0;
    i1 = 255u;
    i0 &= i1;
    i1 = 9u;
    i0 = i0 > i1;
    if (i0) {goto B35;}
    i0 = p2;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B34;}
    i0 = 2u;
    p2 = i0;
    i0 = l6;
    i1 = 107374180u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B36;}
    i0 = l9;
    i1 = l6;
    i2 = 10u;
    i1 *= i2;
    i0 += i1;
    l6 = i0;
    B36:;
    i0 = l5;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L27;}
    goto B16;
    B35:;
    i0 = p2;
    if (i0) {goto B33;}
    i0 = l8;
    i1 = 46u;
    i0 = i0 != i1;
    if (i0) {goto B33;}
    i0 = 1u;
    p2 = i0;
    i0 = l5;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L27;}
    goto B16;
    B34:;
    d0 = l4;
    d1 = 9.9999999999999997e+199;
    i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
    i1 = 1u;
    i0 ^= i1;
    if (i0) {goto B32;}
    i0 = l2;
    i1 = p2;
    i2 = 1u;
    i1 = i1 == i2;
    i0 -= i1;
    l2 = i0;
    d0 = l4;
    d1 = 10;
    d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
    i1 = l9;
    d1 = (f64)(i1);
    d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
    l4 = d0;
    i0 = l5;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L27;}
    goto B16;
    B33:;
    i0 = p2;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B31;}
    i0 = l8;
    i1 = 32u;
    i0 |= i1;
    i1 = 101u;
    i0 = i0 != i1;
    if (i0) {goto B31;}
    i0 = l5;
    i1 = l1;
    i0 = i0 >= i1;
    if (i0) {goto B30;}
    i0 = l5;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p2 = i0;
    i1 = 45u;
    i0 = i0 == i1;
    if (i0) {goto B29;}
    i0 = p2;
    i1 = 43u;
    i0 = i0 != i1;
    if (i0) {goto B30;}
    i0 = 2u;
    p2 = i0;
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 != i1;
    if (i0) {goto B28;}
    goto B1;
    B32:;
    i0 = l2;
    i1 = p2;
    i1 = !(i1);
    i0 += i1;
    l2 = i0;
    i0 = l5;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L27;}
    goto B16;
    B31:;
    i0 = l5;
    i1 = p1;
    i2 = l8;
    i3 = 95u;
    i2 = i2 == i3;
    i0 = i2 ? i0 : i1;
    p1 = i0;
    i0 = l8;
    i1 = 95u;
    i0 = i0 == i1;
    if (i0) {goto B28;}
    goto B16;
    B30:;
    i0 = 2u;
    p2 = i0;
    i0 = l5;
    p1 = i0;
    i1 = l1;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    goto B28;
    B29:;
    i0 = 1u;
    l7 = i0;
    i0 = 2u;
    p2 = i0;
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    B28:;
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L27;}
  B16:;
  i0 = 0u;
  p2 = i0;
  goto B14;
  B15:;
  i0 = 1u;
  p2 = i0;
  B14:;
  i0 = 0u;
  i1 = l6;
  i0 -= i1;
  i1 = l6;
  i2 = l7;
  i3 = 1u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  l5 = i0;
  goto B4;
  B5:;
  d0 = 0;
  l4 = d0;
  i0 = 0u;
  p2 = i0;
  i0 = p0;
  p1 = i0;
  i0 = 0u;
  l5 = i0;
  B4:;
  d0 = l4;
  d1 = 9.9999999999999991e-308;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l4;
  i2 = l5;
  i3 = l2;
  i2 += i3;
  l5 = i2;
  i3 = 4294966989u;
  i2 = (u32)((s32)i2 < (s32)i3);
  l8 = i2;
  d0 = i2 ? d0 : d1;
  l4 = d0;
  i0 = l5;
  i1 = 307u;
  i0 += i1;
  i1 = l5;
  i2 = l8;
  i0 = i2 ? i0 : i1;
  l5 = i0;
  i1 = 4294967274u;
  i0 = i0 < i1;
  if (i0) {goto B38;}
  d0 = l4;
  d1 = 10;
  i2 = 0u;
  i3 = l5;
  i2 -= i3;
  d2 = (f64)(s32)(i2);
  d1 = pow_0(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l4 = d0;
  i0 = p1;
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  goto B37;
  B38:;
  d0 = l4;
  d1 = 10;
  i2 = l5;
  d2 = (f64)(s32)(i2);
  d1 = pow_0(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l4 = d0;
  i0 = p1;
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B37:;
  d0 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = l4;
  i2 = l3;
  d0 = i2 ? d0 : d1;
  l4 = d0;
  i0 = p1;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  B3:;
  L39: vm_checktime();
    i0 = p1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    i0 = unichar_isspace(i0);
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L39;}
  B2:;
  i0 = p1;
  i1 = l1;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B40;}
  d0 = 0;
  d1 = l4;
  i0 = mp_obj_new_complex(d0, d1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B40:;
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B0;}
  d0 = l4;
  d1 = 0;
  i0 = mp_obj_new_complex(d0, d1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 32652u;
  i1 = 12603u;
  i0 = mp_obj_new_exception_msg(i0, i1);
  i1 = p4;
  raise_exc(i0, i1);
  UNREACHABLE;
  B0:;
  i0 = p5;
  i0 = !(i0);
  if (i0) {goto B41;}
  i0 = l0;
  d1 = l4;
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = mp_obj_new_float128(j0, j1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B41:;
  d0 = l4;
  i0 = mp_obj_new_float(d0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_parse_num_decimal(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i4 = p4;
  i5 = 0u;
  i0 = _mp_parse_num_decimal(i0, i1, i2, i3, i4, i5);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_parse_num_decimal_float128(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i4 = p4;
  i5 = 1u;
  i0 = _mp_parse_num_decimal(i0, i1, i2, i3, i4, i5);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_emit_glue_new_raw_code(void) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 12u;
  i0 = m_malloc0(i0);
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967288u;
  i1 &= i2;
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_emit_glue_assign_bytecode(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p3;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 1016u;
  i1 &= i2;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 4294966272u;
  i2 &= i3;
  i1 |= i2;
  i2 = 2u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static u32 mp_make_function_from_raw_code(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = p2;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 8));
  i0 = mp_obj_new_fun_bc(i0, i1, i2, i3);
  p1 = i0;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 8u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 33304u;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_make_closure_from_raw_code(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p1;
  i1 = 256u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 0u;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 8));
  i0 = mp_obj_new_fun_bc(i0, i1, i2, i3);
  l0 = i0;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 8u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 33304u;
  i32_store((&M0), (u64)(i0), i1);
  goto B0;
  B1:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 8));
  i0 = mp_obj_new_fun_bc(i0, i1, i2, i3);
  l0 = i0;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 8u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 33304u;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = l0;
  i1 = p1;
  i2 = 255u;
  i1 &= i2;
  i2 = p2;
  i3 = p1;
  i4 = 5u;
  i3 >>= (i4 & 31);
  i4 = 8u;
  i3 &= i4;
  i2 += i3;
  i0 = mp_obj_new_closure(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_raw_code_load(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 80u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i1, i0);
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i1, i0);
  l2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i1, i0);
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i1, i0);
  i1 = 255u;
  i0 &= i1;
  i1 = 31u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 255u;
  i0 &= i1;
  i1 = 77u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l2;
  i1 = 255u;
  i0 &= i1;
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l3;
  i1 = 3u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  L2: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i1, i0);
    l2 = i0;
    i1 = 127u;
    i0 &= i1;
    i1 = l1;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i0 |= i1;
    l1 = i0;
    i0 = l2;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L2;}
  i0 = l1;
  i1 = 33u;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = l3;
  i1 = 255u;
  i0 &= i1;
  i1 = 4u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 0u;
  i32_store16((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = load_raw_code(i0, i1);
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  CALL_INDIRECT(T0, void (*)(u32), 2, i1, i0);
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = 9963u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = 11120u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 load_raw_code(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  L0: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i1, i0);
    l3 = i0;
    i1 = 127u;
    i0 &= i1;
    i1 = l1;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i0 |= i1;
    l1 = i0;
    i0 = l3;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L0;}
  i0 = l3;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i0 = l1;
  i1 = 2u;
  i0 >>= (i1 & 31);
  l4 = i0;
  i0 = m_malloc(i0);
  l5 = i0;
  l1 = i0;
  L5: vm_checktime();
    i0 = l1;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l2;
    i2 = i32_load((&M0), (u64)(i2));
    i1 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i2, i1);
    l3 = i1;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L5;}
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  L6: vm_checktime();
    i0 = l1;
    i1 = 4294967292u;
    i0 += i1;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = p0;
    i3 = 4u;
    i2 += i3;
    i2 = i32_load((&M0), (u64)(i2));
    i1 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i2, i1);
    l3 = i1;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L6;}
  i0 = l5;
  i1 = 1u;
  i0 += i1;
  l6 = i0;
  i0 = l5;
  i0 = i32_load8_s((&M0), (u64)(i0));
  l3 = i0;
  i1 = 3u;
  i0 &= i1;
  l7 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = l3;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B8;}
  i0 = 0u;
  l8 = i0;
  i0 = 0u;
  l9 = i0;
  goto B7;
  B8:;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l9 = i0;
  i0 = 0u;
  l8 = i0;
  L9: vm_checktime();
    i0 = l6;
    i1 = l3;
    i0 += i1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l10 = i0;
    i1 = 4u;
    i0 &= i1;
    i1 = l3;
    i0 <<= (i1 & 31);
    i1 = l7;
    i0 |= i1;
    l7 = i0;
    i0 = l10;
    i1 = 255u;
    i0 &= i1;
    l11 = i0;
    i1 = 3u;
    i0 >>= (i1 & 31);
    i1 = 1u;
    i0 &= i1;
    i1 = l3;
    i0 <<= (i1 & 31);
    i1 = l9;
    i0 |= i1;
    l9 = i0;
    i0 = l11;
    i1 = 6u;
    i0 >>= (i1 & 31);
    i1 = 1u;
    i0 &= i1;
    i1 = l3;
    i0 <<= (i1 & 31);
    i1 = l8;
    i0 |= i1;
    l8 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l11 = i0;
    l3 = i0;
    i0 = l10;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L9;}
  i0 = l6;
  i1 = l11;
  i0 += i1;
  l6 = i0;
  B7:;
  i0 = l1;
  i1 = 4294967292u;
  i0 += i1;
  l12 = i0;
  i0 = 0u;
  l11 = i0;
  i0 = 0u;
  l13 = i0;
  i0 = 0u;
  l3 = i0;
  L10: vm_checktime();
    i0 = l6;
    i1 = l3;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l10 = i0;
    i1 = 1u;
    i0 &= i1;
    i1 = l3;
    i0 <<= (i1 & 31);
    i1 = l13;
    i0 |= i1;
    l13 = i0;
    i0 = l10;
    i1 = 1u;
    i0 >>= (i1 & 31);
    i1 = 63u;
    i0 &= i1;
    i1 = l2;
    i0 <<= (i1 & 31);
    i1 = l11;
    i0 |= i1;
    l11 = i0;
    i0 = l2;
    i1 = 6u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l14 = i0;
    l3 = i0;
    i0 = l10;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L10;}
  i0 = l12;
  i1 = p0;
  i2 = p1;
  i1 = load_qstr(i1, i2);
  l3 = i1;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 4294967293u;
  i0 += i1;
  i1 = l3;
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 4294967294u;
  i0 += i1;
  i1 = p0;
  i2 = p1;
  i1 = load_qstr(i1, i2);
  l3 = i1;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 4294967295u;
  i0 += i1;
  i1 = l3;
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l6;
  i1 = l11;
  i2 = l13;
  i1 += i2;
  i0 += i1;
  i1 = l14;
  i0 += i1;
  l2 = i0;
  i1 = l1;
  i0 -= i1;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l1;
  i1 = l2;
  i0 -= i1;
  l3 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l10 = i0;
  L12: vm_checktime();
    i0 = l1;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l10;
    i2 = i32_load((&M0), (u64)(i2));
    i1 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i2, i1);
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    if (i0) {goto L12;}
  B11:;
  i0 = l2;
  i1 = l5;
  i2 = l4;
  i1 += i2;
  l11 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B13;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l10 = i0;
  L14: vm_checktime();
    i0 = l2;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l10;
    i2 = i32_load((&M0), (u64)(i2));
    i1 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i2, i1);
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = l0;
    i2 = 0u;
    i0 = mp_opcode_format(i0, i1, i2);
    l1 = i0;
    i0 = l0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 4294967295u;
    i1 += i2;
    l3 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 = i0 == i1;
    if (i0) {goto B17;}
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B18;}
    L19: vm_checktime();
      i0 = l2;
      i1 = p0;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l10;
      i2 = i32_load((&M0), (u64)(i2));
      i1 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i2, i1);
      l1 = i1;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l2 = i0;
      i0 = l1;
      i1 = 128u;
      i0 &= i1;
      if (i0) {goto L19;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    B18:;
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B16;}
    goto B15;
    B17:;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    i1 = p0;
    i2 = p1;
    i1 = load_qstr(i1, i2);
    l1 = i1;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = l1;
    i2 = 8u;
    i1 >>= (i2 & 31);
    i32_store8((&M0), (u64)(i0 + 2), i1);
    i0 = l0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 4294967294u;
    i1 += i2;
    l3 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = 3u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    if (i0) {goto B15;}
    B16:;
    i0 = l2;
    i1 = 0u;
    i0 += i1;
    l2 = i0;
    i1 = l11;
    i0 = i0 < i1;
    if (i0) {goto L14;}
    goto B13;
    B15:;
    i0 = l2;
    l1 = i0;
    L20: vm_checktime();
      i0 = l1;
      i1 = p0;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l10;
      i2 = i32_load((&M0), (u64)(i2));
      i1 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i2, i1);
      i32_store8((&M0), (u64)(i0), i1);
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      l1 = i0;
      i0 = l3;
      i1 = 4294967295u;
      i0 += i1;
      l3 = i0;
      if (i0) {goto L20;}
    i0 = l2;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1));
    i0 += i1;
    l2 = i0;
    i1 = l11;
    i0 = i0 < i1;
    if (i0) {goto L14;}
  B13:;
  i0 = 0u;
  l11 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  L21: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i1, i0);
    l1 = i0;
    i1 = 127u;
    i0 &= i1;
    i1 = l11;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i0 |= i1;
    l11 = i0;
    i0 = l1;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L21;}
  i0 = 0u;
  l10 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  L22: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i1, i0);
    l1 = i0;
    i1 = 127u;
    i0 &= i1;
    i1 = l10;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i0 |= i1;
    l10 = i0;
    i0 = l1;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L22;}
  i0 = l11;
  i1 = l9;
  i2 = l7;
  i1 += i2;
  l3 = i1;
  i0 += i1;
  i1 = l10;
  i0 += i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i0 = m_malloc(i0);
  l4 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B24;}
  i0 = l4;
  i1 = l3;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l13 = i0;
  i0 = l4;
  l1 = i0;
  L25: vm_checktime();
    i0 = l1;
    i1 = p0;
    i2 = p1;
    i1 = load_qstr(i1, i2);
    i2 = 3u;
    i1 <<= (i2 & 31);
    i2 = 2u;
    i1 |= i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = l3;
    i1 = 4294967295u;
    i0 += i1;
    l3 = i0;
    if (i0) {goto L25;}
  i0 = l11;
  if (i0) {goto B23;}
  goto B3;
  B24:;
  i0 = l4;
  l13 = i0;
  i0 = l11;
  i0 = !(i0);
  if (i0) {goto B3;}
  B23:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  l9 = i0;
  i0 = 0u;
  l7 = i0;
  i0 = l13;
  l6 = i0;
  L26: vm_checktime();
    i0 = 35476u;
    l1 = i0;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i1, i0);
    i1 = 255u;
    i0 &= i1;
    l14 = i0;
    i1 = 101u;
    i0 = i0 == i1;
    if (i0) {goto B27;}
    i0 = 0u;
    l1 = i0;
    L28: vm_checktime();
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l2;
      i1 = i32_load((&M0), (u64)(i1));
      i0 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i1, i0);
      l3 = i0;
      i1 = 127u;
      i0 &= i1;
      i1 = l1;
      i2 = 7u;
      i1 <<= (i2 & 31);
      i0 |= i1;
      l1 = i0;
      i0 = l3;
      i1 = 128u;
      i0 &= i1;
      if (i0) {goto L28;}
    i0 = l0;
    i1 = l1;
    vstr_init_len(i0, i1);
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B29;}
    i0 = l9;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    L30: vm_checktime();
      i0 = l3;
      i1 = p0;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l2;
      i2 = i32_load((&M0), (u64)(i2));
      i1 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i2, i1);
      i32_store8((&M0), (u64)(i0), i1);
      i0 = l3;
      i1 = 1u;
      i0 += i1;
      l3 = i0;
      i0 = l1;
      i1 = 4294967295u;
      i0 += i1;
      l1 = i0;
      if (i0) {goto L30;}
    B29:;
    i0 = l14;
    i1 = 115u;
    i0 = i0 == i1;
    l1 = i0;
    if (i0) {goto B31;}
    i0 = l14;
    i1 = 98u;
    i0 = i0 == i1;
    if (i0) {goto B31;}
    i0 = l9;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    l3 = i0;
    i0 = l14;
    i1 = 105u;
    i0 = i0 != i1;
    if (i0) {goto B32;}
    i0 = l1;
    i1 = l3;
    i2 = 10u;
    i3 = 0u;
    i0 = mp_parse_num_integer(i0, i1, i2, i3);
    l1 = i0;
    goto B27;
    B32:;
    i0 = l1;
    i1 = l3;
    i2 = l14;
    i3 = 99u;
    i2 = i2 == i3;
    i3 = 0u;
    i4 = 0u;
    i0 = mp_parse_num_decimal(i0, i1, i2, i3, i4);
    l1 = i0;
    goto B27;
    B31:;
    i0 = 36168u;
    i1 = 35852u;
    i2 = l1;
    i0 = i2 ? i0 : i1;
    i1 = l0;
    i0 = mp_obj_new_str_from_vstr(i0, i1);
    l1 = i0;
    B27:;
    i0 = l6;
    i1 = l1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    i1 = 4u;
    i0 += i1;
    l6 = i0;
    i0 = l7;
    i1 = 1u;
    i0 += i1;
    l7 = i0;
    i1 = l11;
    i0 = i0 != i1;
    if (i0) {goto L26;}
  i0 = l13;
  i1 = l11;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l13 = i0;
  i0 = l10;
  i0 = !(i0);
  if (i0) {goto B1;}
  goto B2;
  B4:;
  i0 = 9963u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B3:;
  i0 = l10;
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  L33: vm_checktime();
    i0 = l13;
    i1 = p0;
    i2 = p1;
    i1 = load_raw_code(i1, i2);
    i32_store((&M0), (u64)(i0), i1);
    i0 = l13;
    i1 = 4u;
    i0 += i1;
    l13 = i0;
    i0 = l10;
    i1 = 4294967295u;
    i0 += i1;
    l10 = i0;
    if (i0) {goto L33;}
  B1:;
  i0 = mp_emit_glue_new_raw_code();
  p0 = i0;
  i1 = l5;
  i2 = l4;
  i3 = l8;
  mp_emit_glue_assign_bytecode(i0, i1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 load_qstr(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  L0: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i1, i0);
    l2 = i0;
    i1 = 127u;
    i0 &= i1;
    i1 = l0;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i0 |= i1;
    l0 = i0;
    i0 = l2;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L0;}
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 1u;
  i0 >>= (i1 & 31);
  l3 = i0;
  i0 = l2;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = l3;
  i0 = m_malloc(i0);
  l4 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = l3;
  i0 -= i1;
  l2 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = l4;
  l0 = i0;
  L4: vm_checktime();
    i0 = l0;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l1;
    i2 = i32_load((&M0), (u64)(i2));
    i1 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i2, i1);
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    if (i0) {goto L4;}
  B3:;
  i0 = l4;
  i1 = l3;
  i0 = qstr_from_strn(i0, i1);
  l0 = i0;
  i0 = l4;
  m_free(i0);
  i0 = p1;
  i1 = p1;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  i2 = 31u;
  i1 &= i2;
  l2 = i1;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = l2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 2u;
  i0 += i1;
  i1 = l0;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = l0;
  goto Bfunc;
  B2:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i1, i0);
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = p1;
  i1 = i32_load16_u((&M0), (u64)(i1));
  l2 = i1;
  i2 = l3;
  i1 -= i2;
  i2 = 31u;
  i1 &= i2;
  l0 = i1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 2u;
  i0 += i1;
  l1 = i0;
  i0 = i32_load16_u((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = l2;
  i0 = i0 <= i1;
  if (i0) {goto B6;}
  i0 = l1;
  i1 = p1;
  i2 = 2u;
  i1 += i2;
  l3 = i1;
  i2 = l0;
  i3 = 1u;
  i2 <<= (i3 & 31);
  l0 = i2;
  i1 += i2;
  i2 = 2u;
  i1 += i2;
  i2 = 62u;
  i3 = l0;
  i2 -= i3;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = 64u;
  i0 += i1;
  i1 = p1;
  i1 = i32_load16_u((&M0), (u64)(i1 + 2));
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = i32_load16_u((&M0), (u64)(i0));
  l2 = i0;
  i0 = 0u;
  l0 = i0;
  goto B5;
  B6:;
  i0 = l1;
  l3 = i0;
  B5:;
  i0 = l3;
  i1 = p1;
  i2 = 2u;
  i1 += i2;
  l1 = i1;
  i2 = l0;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i2 = 2u;
  i1 += i2;
  i2 = l2;
  i3 = l0;
  i2 -= i3;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p1;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p0;
  i32_store16((&M0), (u64)(i0), i1);
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_raw_code_load_mem(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p0;
  i2 = p1;
  i3 = 0u;
  mp_reader_new_mem(i0, i1, i2, i3);
  i0 = l0;
  i0 = mp_raw_code_load(i0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_init(void) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  qstr_init();
  i0 = 0u;
  i1 = 31332u;
  i32_store((&M0), (u64)(i0 + 5168), i1);
  i0 = 0u;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 5172), j1);
  i0 = 0u;
  i1 = 36748u;
  i32_store((&M0), (u64)(i0 + 5180), i1);
  i0 = 0u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 5200), i1);
  i0 = 0u;
  i1 = 1u;
  i32_store16((&M0), (u64)(i0 + 5312), i1);
  i0 = 0u;
  i1 = 0u;
  i32_store16((&M0), (u64)(i0 + 5314), i1);
  i0 = 5184u;
  i1 = 3u;
  mp_obj_dict_init(i0, i1);
  i0 = 5212u;
  i1 = 1u;
  mp_obj_dict_init(i0, i1);
  i0 = 5212u;
  i1 = 186u;
  i2 = 170u;
  i0 = mp_obj_dict_store(i0, i1, i2);
  i0 = 0u;
  i1 = 5212u;
  i32_store((&M0), (u64)(i0 + 5140), i1);
  i0 = 0u;
  i1 = 5212u;
  i32_store((&M0), (u64)(i0 + 5136), i1);
  i0 = 0u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 5260), i1);
  FUNC_EPILOGUE;
}

static u32 mp_load_name(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5136));
  l1 = i0;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5140));
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  l2 = i1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l1 = i0;
  if (i0) {goto B1;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5140));
  l1 = i0;
  goto B2;
  B3:;
  i0 = p0;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  l2 = i0;
  B2:;
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = l2;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l1 = i0;
  if (i0) {goto B1;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5260));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = l2;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l1 = i0;
  if (i0) {goto B1;}
  B4:;
  i0 = 38476u;
  i1 = l2;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32232u;
  i1 = 9986u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_raise_msg_varg(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i0 = mp_obj_new_exception_msg_vlist(i0, i1, i2);
  nlr_jump(i0);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static u32 mp_load_global(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5140));
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  l1 = i1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l2 = i0;
  if (i0) {goto B1;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5260));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l2 = i0;
  if (i0) {goto B1;}
  B2:;
  i0 = 38476u;
  i1 = l1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32232u;
  i1 = 9986u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_load_build_class(void) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 37424u;
  l0 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5260));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = 1370u;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_store_name(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5136));
  i1 = p0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i2 = p1;
  i0 = mp_obj_dict_store(i0, i1, i2);
  FUNC_EPILOGUE;
}

static void mp_delete_name(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5136));
  i1 = p0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i0 = mp_obj_dict_delete(i0, i1);
  FUNC_EPILOGUE;
}

static void mp_store_global(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5140));
  i1 = p0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i2 = p1;
  i0 = mp_obj_dict_store(i0, i1, i2);
  FUNC_EPILOGUE;
}

static void mp_delete_global(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5140));
  i1 = p0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i0 = mp_obj_dict_delete(i0, i1);
  FUNC_EPILOGUE;
}

static u32 mp_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = mp_obj_is_true(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B13;}
  i0 = p0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B11;}
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  l1 = i0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B12;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i0 = qstr_hash(i0);
  p0 = i0;
  if (i0) {goto B1;}
  goto B2;
  B13:;
  i0 = p0;
  i1 = 8u;
  i0 = i0 > i1;
  if (i0) {goto B9;}
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  l2 = i0;
  i0 = p1;
  l1 = i0;
  i0 = p0;
  switch (i0) {
    case 0: goto B3;
    case 1: goto B14;
    case 2: goto B9;
    case 3: goto B9;
    case 4: goto B8;
    case 5: goto B9;
    case 6: goto B3;
    case 7: goto B10;
    case 8: goto B3;
    default: goto B3;
  }
  B14:;
  i0 = 0u;
  i1 = l2;
  i0 -= i1;
  p1 = i0;
  i0 = l2;
  i1 = 3221225472u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = p1;
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B12:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B11;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  B11:;
  i0 = p1;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i1 = p1;
  i2 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32), 3, i2, i0, i1);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  goto B3;
  B10:;
  i0 = p1;
  l1 = i0;
  i0 = p1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = l2;
  i0 -= i1;
  p1 = i0;
  i0 = l2;
  i1 = 3221225472u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p1;
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B9:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 |= i1;
  i1 = 4294967294u;
  i0 ^= i1;
  goto Bfunc;
  B8:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = l2;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B7:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B6:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B5:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  if (i0) {goto B1;}
  goto B2;
  B4:;
  i0 = p0;
  i1 = 8u;
  i0 = i0 != i1;
  if (i0) {goto B15;}
  i0 = l0;
  i1 = p1;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 11143u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B15:;
  i0 = l0;
  i1 = p1;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = p0;
  i2 = 36880u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 32592u;
  i1 = 11925u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B3:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B2:;
  i0 = l1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B17;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  p0 = i0;
  goto B16;
  B17:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  B16:;
  i0 = p1;
  i1 = p0;
  i0 = qstr_compute_hash(i0, i1);
  p0 = i0;
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 4294967294u;
  i0 += i1;
  l1 = i0;
  i1 = 6u;
  i0 = i0 > i1;
  if (i0) {goto B35;}
  i0 = l1;
  switch (i0) {
    case 0: goto B38;
    case 1: goto B35;
    case 2: goto B35;
    case 3: goto B38;
    case 4: goto B35;
    case 5: goto B36;
    case 6: goto B37;
    default: goto B38;
  }
  B38:;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i0 = mp_obj_equal_not_equal(i0, i1, i2);
  p2 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B37:;
  i0 = p2;
  i0 = mp_obj_is_exception_type(i0);
  i0 = !(i0);
  if (i0) {goto B34;}
  i0 = p1;
  i1 = p2;
  i0 = mp_obj_exception_match(i0, i1);
  p2 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = p2;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B36:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i3 = p2;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B35:;
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  l1 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B33;}
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B31;}
  goto B5;
  B34:;
  i0 = 8u;
  p0 = i0;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36756u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 14u;
  l3 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 8u;
  p0 = i0;
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i0 = 0u;
  l4 = i0;
  L39: vm_checktime();
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    i0 = mp_obj_is_exception_type(i0);
    i0 = !(i0);
    if (i0) {goto B10;}
    i0 = p1;
    i1 = l2;
    i0 = mp_obj_exception_match(i0, i1);
    if (i0) {goto B32;}
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p2;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = i0 < i1;
    if (i0) {goto L39;}
    goto B2;
  B33:;
  i0 = p0;
  i1 = 35u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  l2 = i0;
  i0 = p0;
  switch (i0) {
    case 0: goto B14;
    case 1: goto B15;
    case 2: goto B0;
    case 3: goto B12;
    case 4: goto B13;
    case 5: goto B0;
    case 6: goto B0;
    case 7: goto B0;
    case 8: goto B0;
    case 9: goto B40;
    case 10: goto B25;
    case 11: goto B24;
    case 12: goto B28;
    case 13: goto B30;
    case 14: goto B23;
    case 15: goto B20;
    case 16: goto B26;
    case 17: goto B0;
    case 18: goto B21;
    case 19: goto B29;
    case 20: goto B27;
    case 21: goto B22;
    case 22: goto B40;
    case 23: goto B25;
    case 24: goto B24;
    case 25: goto B28;
    case 26: goto B30;
    case 27: goto B23;
    case 28: goto B20;
    case 29: goto B26;
    case 30: goto B0;
    case 31: goto B21;
    case 32: goto B29;
    case 33: goto B27;
    case 34: goto B22;
    case 35: goto B16;
    default: goto B14;
  }
  B40:;
  i0 = l2;
  i1 = l1;
  i0 |= i1;
  p1 = i0;
  goto B6;
  B32:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  goto Bfunc;
  B31:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 32832u;
  i0 = i0 == i1;
  if (i0) {goto B41;}
  i0 = l2;
  i1 = 30496u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = p0;
  i1 = l1;
  d1 = (f64)(s32)(i1);
  d2 = 0;
  i3 = p2;
  i0 = mp_obj_complex_binary_op(i0, d1, d2, i3);
  l3 = i0;
  if (i0) {goto B2;}
  goto B0;
  B41:;
  i0 = p0;
  i1 = l1;
  d1 = (f64)(s32)(i1);
  i2 = p2;
  i0 = mp_obj_float_binary_op(i0, d1, i2);
  l3 = i0;
  if (i0) {goto B2;}
  goto B0;
  B30:;
  i0 = p2;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B8;}
  i0 = l1;
  i1 = 31u;
  i2 = l2;
  i3 = p2;
  i4 = 63u;
  i3 = (u32)((s32)i3 > (s32)i4);
  i1 = i3 ? i1 : i2;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  p1 = i0;
  goto B6;
  B29:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l1;
  d0 = (f64)(s32)(i0);
  i1 = l2;
  d1 = (f64)(s32)(i1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  i0 = mp_obj_new_float(d0);
  p2 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B28:;
  i0 = p2;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B7;}
  i0 = l1;
  i1 = 3221225472u;
  i2 = l2;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B18;}
  i0 = p2;
  i1 = 63u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B18;}
  i0 = l1;
  i1 = 1073741823u;
  i2 = l2;
  i1 >>= (i2 & 31);
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B18;}
  i0 = l1;
  i1 = l2;
  i0 <<= (i1 & 31);
  p1 = i0;
  goto B6;
  B27:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l1;
  i1 = l2;
  i0 = mp_small_int_modulo(i0, i1);
  p1 = i0;
  goto B6;
  B26:;
  i0 = l1;
  i1 = l2;
  i0 = mp_small_int_mul_overflow(i0, i1);
  i0 = !(i0);
  if (i0) {goto B19;}
  i0 = l1;
  j0 = (u64)(s64)(s32)(i0);
  i0 = mp_obj_new_int_from_ll(j0);
  l1 = i0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p1 = i0;
  if (i0) {goto B4;}
  goto B3;
  B25:;
  i0 = l2;
  i1 = l1;
  i0 ^= i1;
  p1 = i0;
  goto B6;
  B24:;
  i0 = l2;
  i1 = l1;
  i0 &= i1;
  p1 = i0;
  goto B6;
  B23:;
  i0 = l2;
  i1 = l1;
  i0 += i1;
  p1 = i0;
  goto B6;
  B22:;
  i0 = p2;
  i1 = 0u;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B17;}
  i0 = p0;
  i1 = l1;
  d1 = (f64)(s32)(i1);
  i2 = p2;
  i0 = mp_obj_float_binary_op(i0, d1, i2);
  p2 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B21:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l1;
  i1 = l2;
  i0 = mp_small_int_floor_divide(i0, i1);
  p1 = i0;
  goto B6;
  B20:;
  i0 = l1;
  i1 = l2;
  i0 -= i1;
  p1 = i0;
  goto B6;
  B19:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 4294967294u;
  i0 &= i1;
  i1 = l2;
  i0 *= i1;
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B18:;
  i0 = l1;
  j0 = (u64)(s64)(s32)(i0);
  i0 = mp_obj_new_int_from_ll(j0);
  l1 = i0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p1 = i0;
  if (i0) {goto B4;}
  goto B3;
  B17:;
  i0 = 1u;
  p1 = i0;
  i0 = p2;
  i1 = 2u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B6;}
  i0 = l1;
  l4 = i0;
  i0 = 1u;
  p1 = i0;
  L42: vm_checktime();
    i0 = l2;
    i1 = 1u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B43;}
    i0 = p1;
    i1 = l4;
    i0 = mp_small_int_mul_overflow(i0, i1);
    if (i0) {goto B11;}
    i0 = l4;
    i1 = p1;
    i0 *= i1;
    p1 = i0;
    B43:;
    i0 = l2;
    i1 = 1u;
    i0 = i0 == i1;
    if (i0) {goto B6;}
    i0 = l4;
    i1 = l4;
    i0 = mp_small_int_mul_overflow(i0, i1);
    if (i0) {goto B11;}
    i0 = l4;
    i1 = l4;
    i0 *= i1;
    l4 = i0;
    i0 = l2;
    i1 = 1u;
    i0 >>= (i1 & 31);
    l2 = i0;
    if (i0) {goto L42;}
    goto B6;
  B16:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = 2u;
  i1 = 0u;
  i0 = mp_obj_new_tuple(i0, i1);
  p2 = i0;
  i1 = l1;
  i2 = l2;
  i1 = mp_small_int_floor_divide(i1, i2);
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = l1;
  i2 = l2;
  i1 = mp_small_int_modulo(i1, i2);
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B15:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = l1;
  i3 = l2;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B14:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = l1;
  i3 = l2;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B13:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = l1;
  i3 = l2;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B12:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = l1;
  i3 = l2;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B11:;
  i0 = l1;
  j0 = (u64)(s64)(s32)(i0);
  i0 = mp_obj_new_int_from_ll(j0);
  l1 = i0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p1 = i0;
  if (i0) {goto B4;}
  goto B3;
  B10:;
  i0 = l2;
  p2 = i0;
  goto B0;
  B9:;
  i0 = 31692u;
  i1 = 13621u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B8:;
  i0 = 12629u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B7:;
  i0 = 12629u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B6:;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  p2 = i0;
  i1 = p1;
  i0 ^= i1;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B44;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B44:;
  i0 = p1;
  j0 = (u64)(s64)(s32)(i0);
  i0 = mp_obj_new_int_from_ll(j0);
  l3 = i0;
  goto B2;
  B5:;
  i0 = 36u;
  i1 = p0;
  i2 = p0;
  i3 = 6u;
  i2 = i2 == i3;
  l2 = i2;
  i0 = i2 ? i0 : i1;
  p0 = i0;
  i0 = p2;
  i1 = p1;
  i2 = l2;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p1;
  i1 = p2;
  i2 = l2;
  i0 = i2 ? i0 : i1;
  p2 = i0;
  i0 = l1;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  B4:;
  i0 = p0;
  i1 = l1;
  i2 = p2;
  i3 = p1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 4, i3, i0, i1, i2);
  l3 = i0;
  if (i0) {goto B2;}
  B3:;
  i0 = p0;
  i1 = 36u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_getiter(i0, i1);
  p0 = i0;
  L46: vm_checktime();
    i0 = p0;
    i0 = mp_iternext(i0);
    p1 = i0;
    i0 = !(i0);
    if (i0) {goto B45;}
    i0 = p1;
    i1 = p2;
    i0 = mp_obj_equal(i0, i1);
    i0 = !(i0);
    if (i0) {goto L46;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  goto Bfunc;
  B45:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  goto Bfunc;
  B1:;
  i0 = l1;
  p1 = i0;
  B0:;
  i0 = p1;
  i0 = mp_obj_get_type_str(i0);
  p1 = i0;
  i0 = l0;
  i1 = p2;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p0;
  i2 = 36896u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 13172u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_raise_msg(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = mp_obj_new_exception(i0);
  nlr_jump(i0);
  UNREACHABLE;
  B0:;
  i0 = p0;
  i1 = p1;
  i0 = mp_obj_new_exception_msg(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static void mp_raise_ValueError(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 32652u;
  i1 = p0;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static u32 mp_getiter(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 36));
  l2 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p1;
  if (i0) {goto B3;}
  i0 = l2;
  i1 = 7u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i0 = l1;
  i1 = 36u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  B3:;
  i0 = p0;
  i1 = p1;
  i2 = l2;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32), 3, i2, i0, i1);
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  goto Bfunc;
  B2:;
  i0 = p0;
  i1 = 15u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  if (i0) {goto B4;}
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  B4:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  i0 = mp_obj_new_getitem_iter(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 15099u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = g0;
  i1 = 208u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 40));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i1, i0);
  p0 = i0;
  i0 = l0;
  i1 = 208u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 25u;
  i2 = l0;
  i3 = 200u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 200));
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i0 = nlr_push_tail(i0);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i0 = setjmp_ex(i0);
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 31152u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 208u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B4:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 204));
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 200));
  l1 = i0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i1 = p0;
  i2 = 0u;
  i1 = i1 != i2;
  i2 = 0u;
  i3 = l0;
  i4 = 200u;
  i3 += i4;
  i4 = 4294967292u;
  i5 = 0u;
  i6 = p0;
  i4 = i6 ? i4 : i5;
  i3 += i4;
  i4 = 8u;
  i3 += i4;
  i4 = l2;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  p0 = i0;
  nlr_pop();
  i0 = l0;
  i1 = 208u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B3:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 15232u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B2:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  nlr_jump(i0);
  UNREACHABLE;
  B1:;
  i0 = l0;
  i1 = l1;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 32592u;
  i1 = 13971u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_load_method_maybe(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l0 = i0;
  i0 = p1;
  i1 = 25u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 10u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 37552u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = l1;
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
  goto Bfunc;
  B2:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 56));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = i32_load16_u((&M0), (u64)(i0 + 4));
  l2 = i0;
  i1 = 32u;
  i0 &= i1;
  if (i0) {goto B7;}
  i0 = l1;
  i1 = 36996u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = l1;
  i1 = 37132u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l0 = i0;
  B8:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B7:;
  i0 = l2;
  i1 = 64u;
  i0 &= i1;
  if (i0) {goto B9;}
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B9:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 8u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = p0;
  if (i0) {goto B5;}
  i0 = l0;
  i1 = 34300u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = 12u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 26760u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B6:;
  i0 = p2;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B5:;
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B4:;
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  B3:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_call_function_0(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 0u;
  i2 = 0u;
  i3 = 0u;
  i4 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 13971u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_call_function_n_kw(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i4 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 13971u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_call_function_1(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 1u;
  i2 = 0u;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i4 = p1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 13971u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_call_method_n_kw(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l2;
  i1 = l1;
  i2 = 0u;
  i1 = i1 != i2;
  i2 = p0;
  i1 += i2;
  i2 = p1;
  i3 = p2;
  i4 = 4294967292u;
  i5 = 0u;
  i6 = l1;
  i4 = i6 ? i4 : i5;
  i3 += i4;
  i4 = 8u;
  i3 += i4;
  i4 = l3;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  p2 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = l2;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 13971u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_call_method_n_kw_var(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6, i7;
  i0 = g0;
  i1 = 144u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  goto B0;
  B1:;
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i0 = 0u;
  p0 = i0;
  B0:;
  i0 = l3;
  i1 = p1;
  i2 = 8u;
  i1 >>= (i2 & 31);
  i2 = 255u;
  i1 &= i2;
  l4 = i1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l5 = i1;
  i2 = p1;
  i3 = 255u;
  i2 &= i3;
  l6 = i2;
  i1 += i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l7 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l7;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B6;}
  i0 = l7;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 30556u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  B6:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B4;}
  goto B3;
  B5:;
  i0 = l7;
  i0 = mp_obj_dict_len(i0);
  l2 = i0;
  i0 = p2;
  if (i0) {goto B3;}
  B4:;
  i0 = 1u;
  p2 = i0;
  i0 = l6;
  i1 = l2;
  i2 = l4;
  i1 += i2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 1u;
  i0 += i1;
  p1 = i0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i0 = mp_pystack_alloc(i0);
  l9 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = l9;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto B7;
  B8:;
  i0 = 0u;
  p2 = i0;
  B7:;
  i0 = l9;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = l3;
  i2 = l6;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p2;
  i1 = l6;
  i0 += i1;
  l2 = i0;
  goto B2;
  B3:;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B10;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 36756u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = p1;
  i1 = 33760u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  B10:;
  i0 = 1u;
  l8 = i0;
  i0 = l6;
  i1 = l2;
  i2 = l4;
  i1 += i2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4u;
  i0 += i1;
  p1 = i0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i0 = mp_pystack_alloc(i0);
  l9 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = l9;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto B11;
  B12:;
  i0 = 0u;
  l8 = i0;
  B11:;
  i0 = l9;
  i1 = l8;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = l3;
  i2 = l6;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l8;
  i1 = l6;
  i0 += i1;
  l2 = i0;
  i0 = p2;
  i1 = l0;
  i2 = 120u;
  i1 += i2;
  i0 = mp_getiter(i0, i1);
  l10 = i0;
  i0 = mp_iternext(i0);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l9;
  i1 = l8;
  i2 = l6;
  i1 += i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p2 = i0;
  L13: vm_checktime();
    i0 = l2;
    i1 = p1;
    i0 = i0 < i1;
    if (i0) {goto B14;}
    i0 = 0u;
    i1 = l9;
    i32_store((&M0), (u64)(i0 + 5132), i1);
    i0 = p1;
    i1 = 3u;
    i0 <<= (i1 & 31);
    i0 = mp_pystack_alloc(i0);
    i0 = p1;
    i1 = 1u;
    i0 <<= (i1 & 31);
    p1 = i0;
    B14:;
    i0 = p2;
    i1 = p0;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = l10;
    i0 = mp_iternext(i0);
    p0 = i0;
    if (i0) {goto L13;}
    goto B2;
  B9:;
  i0 = p2;
  i1 = l0;
  i2 = 120u;
  i1 += i2;
  i2 = l0;
  i3 = 140u;
  i2 += i3;
  mp_obj_get_array(i0, i1, i2);
  i0 = 1u;
  p2 = i0;
  i0 = l6;
  i1 = l2;
  i2 = l4;
  i1 += i2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 120));
  i0 += i1;
  i1 = 1u;
  i0 += i1;
  p1 = i0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i0 = mp_pystack_alloc(i0);
  l9 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = l9;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto B15;
  B16:;
  i0 = 0u;
  p2 = i0;
  B15:;
  i0 = l9;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p0 = i0;
  i1 = l3;
  i2 = l6;
  i3 = 2u;
  i2 <<= (i3 & 31);
  l2 = i2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = l2;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 140));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 120));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p2;
  i1 = l6;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 120));
  i0 += i1;
  l2 = i0;
  B2:;
  i0 = l9;
  i1 = l2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = l3;
  i2 = l6;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i2 = l4;
  i3 = 3u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = l5;
  i0 += i1;
  p0 = i0;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B17;}
  i0 = l7;
  i1 = 3u;
  i0 &= i1;
  l11 = i0;
  i0 = !(i0);
  if (i0) {goto B25;}
  i0 = l7;
  i1 = 106u;
  i2 = l0;
  i3 = 120u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i1 = 120u;
  i0 += i1;
  l12 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 120));
  p2 = i0;
  if (i0) {goto B24;}
  i0 = l7;
  i0 = mp_obj_get_type_str(i0);
  p2 = i0;
  i0 = l0;
  i1 = 106u;
  i32_store((&M0), (u64)(i0 + 116), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = 31812u;
  i1 = 14967u;
  i2 = l0;
  i3 = 112u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B25:;
  i0 = l7;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 30556u;
  i0 = i0 == i1;
  if (i0) {goto B23;}
  i0 = l7;
  i1 = 106u;
  i2 = l0;
  i3 = 120u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i1 = 120u;
  i0 += i1;
  l12 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 120));
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B18;}
  B24:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 124));
  l10 = i0;
  i0 = p2;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B19;}
  i0 = p2;
  i1 = l10;
  i2 = 0u;
  i1 = i1 != i2;
  i2 = 0u;
  i3 = l0;
  i4 = 120u;
  i3 += i4;
  i4 = 8u;
  i3 += i4;
  l8 = i3;
  i4 = 4294967292u;
  i5 = 0u;
  i6 = l10;
  i4 = i6 ? i4 : i5;
  i3 += i4;
  i4 = l6;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  l13 = i0;
  i0 = mp_iternext(i0);
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B17;}
  i0 = l4;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = l2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l10 = i0;
  i0 = l0;
  i1 = 120u;
  i0 += i1;
  i1 = 4u;
  i0 += i1;
  l14 = i0;
  L26: vm_checktime();
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    i1 = p1;
    i0 = i0 >= i1;
    if (i0) {goto B29;}
    i0 = p2;
    i1 = 7u;
    i0 &= i1;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B28;}
    goto B27;
    B29:;
    i0 = 0u;
    i1 = l9;
    i32_store((&M0), (u64)(i0 + 5132), i1);
    i0 = p1;
    i1 = 1u;
    i0 <<= (i1 & 31);
    p1 = i0;
    i1 = 4u;
    i2 = p1;
    i3 = 4u;
    i2 = i2 > i3;
    i0 = i2 ? i0 : i1;
    p1 = i0;
    i1 = 2u;
    i0 <<= (i1 & 31);
    i0 = mp_pystack_alloc(i0);
    i0 = p2;
    i1 = 7u;
    i0 &= i1;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B27;}
    B28:;
    i0 = p2;
    i0 = mp_obj_str_intern_checked(i0);
    p2 = i0;
    B27:;
    i0 = l7;
    i1 = 15u;
    i2 = l12;
    mp_load_method_maybe(i0, i1, i2);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 120));
    l6 = i0;
    i0 = !(i0);
    if (i0) {goto B22;}
    i0 = l8;
    i1 = p2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l14;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i0 = l6;
    i0 = mp_obj_get_type(i0);
    i0 = i32_load((&M0), (u64)(i0 + 16));
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B21;}
    i0 = l9;
    i1 = l10;
    i0 += i1;
    l5 = i0;
    i1 = 4u;
    i0 += i1;
    i1 = l6;
    i2 = 2u;
    i3 = 1u;
    i4 = l3;
    i2 = i4 ? i2 : i3;
    i3 = 0u;
    i4 = l8;
    i5 = 4294967292u;
    i6 = 0u;
    i7 = l3;
    i5 = i7 ? i5 : i6;
    i4 += i5;
    i5 = l4;
    i1 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i5, i1, i2, i3, i4);
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    i1 = p2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l10;
    i1 = 8u;
    i0 += i1;
    l10 = i0;
    i0 = p0;
    i1 = 2u;
    i0 += i1;
    p0 = i0;
    i0 = l13;
    i0 = mp_iternext(i0);
    p2 = i0;
    if (i0) {goto L26;}
    goto B17;
  B23:;
  i0 = l7;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B17;}
  i0 = 0u;
  p1 = i0;
  i0 = l7;
  i1 = 12u;
  i0 += i1;
  l6 = i0;
  i0 = 4u;
  p2 = i0;
  L30: vm_checktime();
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p2;
    i0 += i1;
    i1 = 4294967292u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l10 = i0;
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 == i1;
    if (i0) {goto B31;}
    i0 = l10;
    i1 = 7u;
    i0 &= i1;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B32;}
    i0 = l10;
    i0 = mp_obj_str_intern_checked(i0);
    l10 = i0;
    i0 = l7;
    i1 = 8u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    B32:;
    i0 = l9;
    i1 = p0;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l8 = i0;
    i1 = l10;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l8;
    i1 = 4u;
    i0 += i1;
    i1 = l6;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = p2;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 2u;
    i0 += i1;
    p0 = i0;
    B31:;
    i0 = p2;
    i1 = 8u;
    i0 += i1;
    p2 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l3;
    i0 = i0 < i1;
    if (i0) {goto L30;}
    goto B17;
  B22:;
  i0 = l11;
  if (i0) {goto B20;}
  i0 = l7;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36936u;
  i0 = i0 != i1;
  if (i0) {goto B20;}
  i0 = l7;
  i0 = i32_load16_u((&M0), (u64)(i0 + 6));
  p2 = i0;
  i0 = l0;
  i1 = 15u;
  i32_store((&M0), (u64)(i0 + 68), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 64), i1);
  i0 = 31812u;
  i1 = 14788u;
  i2 = l0;
  i3 = 64u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B21:;
  i0 = l0;
  i1 = l6;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 96), i1);
  i0 = 32592u;
  i1 = 13971u;
  i2 = l0;
  i3 = 96u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B20:;
  i0 = l7;
  i0 = mp_obj_get_type_str(i0);
  p2 = i0;
  i0 = l0;
  i1 = 15u;
  i32_store((&M0), (u64)(i0 + 84), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 80), i1);
  i0 = 31812u;
  i1 = 14967u;
  i2 = l0;
  i3 = 80u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B19:;
  i0 = l0;
  i1 = p2;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 48), i1);
  i0 = 32592u;
  i1 = 13971u;
  i2 = l0;
  i3 = 48u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B18:;
  i0 = l7;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36936u;
  i0 = i0 != i1;
  if (i0) {goto B33;}
  i0 = l7;
  i0 = i32_load16_u((&M0), (u64)(i0 + 6));
  p2 = i0;
  i0 = l0;
  i1 = 106u;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 31812u;
  i1 = 14788u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B33:;
  i0 = l7;
  i0 = mp_obj_get_type_str(i0);
  p2 = i0;
  i0 = l0;
  i1 = 106u;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = 31812u;
  i1 = 14967u;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B17:;
  i0 = l1;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B34;}
  i0 = l1;
  i1 = l2;
  i2 = p0;
  i3 = l2;
  i2 -= i3;
  i3 = 1u;
  i2 >>= (i3 & 31);
  i3 = l9;
  i4 = p2;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  p2 = i0;
  i0 = 0u;
  i1 = l9;
  i32_store((&M0), (u64)(i0 + 5132), i1);
  i0 = l0;
  i1 = 144u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B34:;
  i0 = l0;
  i1 = l1;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 13971u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_unpack_sequence(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 36756u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 33760u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  B5:;
  i0 = p0;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i0 = mp_getiter(i0, i1);
  l2 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = l2;
  i0 = mp_iternext(i0);
  l1 = i0;
  i0 = !(i0);
  p0 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p1;
  i1 = 4294967295u;
  i0 += i1;
  l3 = i0;
  L7: vm_checktime();
    i0 = p0;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B3;}
    i0 = p2;
    i1 = l3;
    i2 = l0;
    i2 = i32_load((&M0), (u64)(i2 + 44));
    p0 = i2;
    i1 -= i2;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = l1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = p0;
    i2 = 1u;
    i1 += i2;
    l4 = i1;
    i32_store((&M0), (u64)(i0 + 44), i1);
    i0 = l2;
    i0 = mp_iternext(i0);
    l1 = i0;
    i0 = !(i0);
    p0 = i0;
    i0 = l4;
    i1 = p1;
    i0 = i0 < i1;
    if (i0) {goto L7;}
  B6:;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  goto B0;
  B4:;
  i0 = p0;
  i1 = l0;
  i2 = 44u;
  i1 += i2;
  i2 = l0;
  i3 = 24u;
  i2 += i3;
  mp_obj_get_array(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 44));
  p0 = i0;
  i1 = p1;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = p1;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = p1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967292u;
  i0 += i1;
  p0 = i0;
  L8: vm_checktime();
    i0 = p2;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = p0;
    i1 = 4294967292u;
    i0 += i1;
    p0 = i0;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    if (i0) {goto L8;}
    goto B0;
  B3:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 44));
  p0 = i0;
  B2:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32652u;
  i1 = 14322u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B1:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 32652u;
  i1 = 14558u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void mp_unpack_ex(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 255u;
  i0 &= i1;
  l1 = i0;
  i0 = p1;
  i1 = 8u;
  i0 >>= (i1 & 31);
  i1 = 255u;
  i0 &= i1;
  l2 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 36756u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 33760u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  l3 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 0u;
  p0 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p2;
  i1 = l1;
  i2 = l2;
  i1 += i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  i0 = 0u;
  p0 = i0;
  L4: vm_checktime();
    i0 = l3;
    i0 = mp_iternext(i0);
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p1;
    i1 = l4;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = p0;
    i2 = 1u;
    i1 += i2;
    p0 = i1;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = p1;
    i1 = 4294967292u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L4;}
  B3:;
  i0 = 0u;
  i1 = 0u;
  i0 = mp_obj_new_list(i0, i1);
  l4 = i0;
  i0 = l3;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  L6: vm_checktime();
    i0 = l4;
    i1 = p1;
    i0 = mp_obj_list_append(i0, i1);
    i0 = l3;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L6;}
  B5:;
  i0 = l4;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i1 = l2;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = l2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  p0 = i1;
  i0 += i1;
  i1 = l4;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = l3;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = p0;
  i0 -= i1;
  p1 = i0;
  i0 = l3;
  i1 = l2;
  i0 -= i1;
  l1 = i0;
  i0 = l4;
  i1 = 12u;
  i0 += i1;
  l3 = i0;
  L9: vm_checktime();
    i0 = p2;
    i1 = p0;
    i0 += i1;
    i1 = 4294967292u;
    i0 += i1;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = p1;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4294967292u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L9;}
    goto B7;
  B8:;
  i0 = l3;
  i1 = l2;
  i0 -= i1;
  l1 = i0;
  B7:;
  i0 = l4;
  i1 = l1;
  mp_obj_list_set_len(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = l0;
  i3 = 4u;
  i2 += i3;
  mp_obj_get_array(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i1 = l2;
  i2 = l1;
  i1 += i2;
  l5 = i1;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l6 = i0;
  i1 = p0;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967292u;
  i0 += i1;
  p1 = i0;
  i0 = l2;
  l4 = i0;
  i0 = p2;
  l3 = i0;
  L12: vm_checktime();
    i0 = l3;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l3 = i0;
    i0 = p1;
    i1 = 4294967292u;
    i0 += i1;
    p1 = i0;
    i0 = l4;
    i1 = 4294967295u;
    i0 += i1;
    l4 = i0;
    if (i0) {goto L12;}
    goto B10;
  B11:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l6 = i0;
  B10:;
  i0 = p2;
  i1 = l2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  i1 = p0;
  i2 = l5;
  i1 -= i2;
  i2 = l6;
  i3 = l1;
  i4 = 2u;
  i3 <<= (i4 & 31);
  p0 = i3;
  i2 += i3;
  i1 = mp_obj_new_list(i1, i2);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l3 = i0;
  L14: vm_checktime();
    i0 = p1;
    i1 = l3;
    i2 = p0;
    i1 += i2;
    i2 = 4294967292u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4294967292u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L14;}
  B13:;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32652u;
  i1 = 14322u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_load_attr(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i3 = 24u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i1 = p0;
  i0 = mp_obj_new_bound_meth(i0, i1);
  l1 = i0;
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36936u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load16_u((&M0), (u64)(i0 + 6));
  l1 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 31812u;
  i1 = 14788u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B2:;
  i0 = p0;
  i0 = mp_obj_get_type_str(i0);
  l1 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 31812u;
  i1 = 14967u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_load_method(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  mp_load_method_maybe(i0, i1, i2);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36936u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load16_u((&M0), (u64)(i0 + 6));
  p2 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 31812u;
  i1 = 14788u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B1:;
  i0 = p0;
  i0 = mp_obj_get_type_str(i0);
  p2 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 31812u;
  i1 = 14967u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_convert_member_lookup(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = i32_load16_u((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 32u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 36996u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 37132u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  p1 = i0;
  B4:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p2 = i0;
  i0 = p3;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p3;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B3:;
  i0 = l1;
  i1 = 64u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 8u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 34300u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = 12u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 26760u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B2:;
  i0 = p3;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = p3;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p3;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = p3;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_load_method_protected(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 176u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i0 = nlr_push_tail(i0);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = setjmp_ex(i0);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p3;
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 31812u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  B2:;
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  mp_load_method_maybe(i0, i1, i2);
  nlr_pop();
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_store_attr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 28));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 4u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i3 = l1;
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i0 = mp_obj_get_type_str(i0);
  p0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 31812u;
  i1 = 14967u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_iternext_allow_raise(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 40));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i1, i0);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 25u;
  i2 = l0;
  i3 = 24u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  p0 = i0;
  i0 = l1;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i1 = p0;
  i2 = 0u;
  i1 = i1 != i2;
  i2 = 0u;
  i3 = l0;
  i4 = 24u;
  i3 += i4;
  i4 = 4294967292u;
  i5 = 0u;
  i6 = p0;
  i4 = i6 ? i4 : i5;
  i3 += i4;
  i4 = 8u;
  i3 += i4;
  i4 = l2;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 15232u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B1:;
  i0 = l0;
  i1 = l1;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 32592u;
  i1 = 13971u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_resume(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = g0;
  i1 = 112u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i1 = 33364u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 6u;
  i0 = i0 != i1;
  l2 = i0;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p3;
  i1 = p0;
  i2 = l1;
  i1 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i2, i1);
  p0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 112u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 0u;
  i0 = i0 != i1;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i0 = mp_obj_gen_resume(i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 112u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B15;}
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = p0;
  i1 = 138u;
  i2 = l0;
  i3 = 100u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 100));
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B12;}
  goto B4;
  B15:;
  i0 = p0;
  i1 = 25u;
  i2 = l0;
  i3 = 100u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 100));
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 104));
  p0 = i0;
  i0 = p2;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = p2;
  i1 = p0;
  i2 = 0u;
  i1 = i1 != i2;
  i2 = 0u;
  i3 = l0;
  i4 = 100u;
  i3 += i4;
  i4 = 4294967292u;
  i5 = 0u;
  i6 = p0;
  i4 = i6 ? i4 : i5;
  i3 += i4;
  i4 = 8u;
  i3 += i4;
  i4 = p1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  p2 = i0;
  i0 = 1u;
  p0 = i0;
  goto B3;
  B14:;
  i0 = p2;
  i0 = mp_obj_get_type(i0);
  i1 = 31392u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = p0;
  i1 = 71u;
  i2 = l0;
  i3 = 100u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 100));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 104));
  p2 = i0;
  i0 = p1;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = 0u;
  p0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 0u;
  i1 = i1 != i2;
  i2 = 0u;
  i3 = l0;
  i4 = 100u;
  i3 += i4;
  i4 = 4294967292u;
  i5 = 0u;
  i6 = p2;
  i4 = i6 ? i4 : i5;
  i3 += i4;
  i4 = 8u;
  i3 += i4;
  i4 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  p2 = i0;
  goto B3;
  B13:;
  i0 = p0;
  i1 = 138u;
  i2 = l0;
  i3 = 100u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 100));
  p2 = i0;
  if (i0) {goto B4;}
  B12:;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B9;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36936u;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  i0 = p0;
  i0 = i32_load16_u((&M0), (u64)(i0 + 6));
  p0 = i0;
  i0 = l0;
  i1 = 138u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 31812u;
  i1 = 14788u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B11:;
  i0 = p0;
  i1 = 155u;
  i2 = l0;
  i3 = 100u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 100));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 108), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 104));
  p2 = i0;
  i0 = p1;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = 1u;
  p0 = i0;
  i0 = p1;
  i1 = 2u;
  i2 = 1u;
  i3 = p2;
  i1 = i3 ? i1 : i2;
  i2 = 0u;
  i3 = l0;
  i4 = 108u;
  i3 += i4;
  i4 = 4294967292u;
  i5 = 0u;
  i6 = p2;
  i4 = i6 ? i4 : i5;
  i3 += i4;
  i4 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  p2 = i0;
  goto B3;
  B10:;
  i0 = p2;
  i1 = 31152u;
  i0 = mp_obj_exception_match(i0, i1);
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = 32352u;
  i1 = 15486u;
  i0 = mp_obj_new_exception_msg(i0, i1);
  p2 = i0;
  i0 = 2u;
  p0 = i0;
  goto B3;
  B16:;
  i0 = p2;
  i0 = mp_obj_is_exception_type(i0);
  i0 = !(i0);
  if (i0) {goto B17;}
  i0 = p2;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p2;
  i1 = 0u;
  i2 = 0u;
  i3 = 0u;
  i4 = p0;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  p2 = i0;
  i0 = 2u;
  p0 = i0;
  goto B3;
  B17:;
  i0 = 2u;
  p0 = i0;
  i0 = p2;
  i0 = mp_obj_is_exception_instance(i0);
  if (i0) {goto B3;}
  i0 = 32592u;
  i1 = 15655u;
  i0 = mp_obj_new_exception_msg(i0, i1);
  p2 = i0;
  goto B3;
  B9:;
  i0 = p0;
  i0 = mp_obj_get_type_str(i0);
  p0 = i0;
  i0 = l0;
  i1 = 138u;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 31812u;
  i1 = 14967u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B8:;
  i0 = l0;
  i1 = p2;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 48), i1);
  i0 = 32592u;
  i1 = 13971u;
  i2 = l0;
  i3 = 48u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B7:;
  i0 = l0;
  i1 = p1;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 80), i1);
  i0 = 32592u;
  i1 = 13971u;
  i2 = l0;
  i3 = 80u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B6:;
  i0 = l0;
  i1 = p1;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 96), i1);
  i0 = 32592u;
  i1 = 13971u;
  i2 = l0;
  i3 = 96u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B5:;
  i0 = l0;
  i1 = p2;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 64), i1);
  i0 = 32592u;
  i1 = 13971u;
  i2 = l0;
  i3 = 64u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B4:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 108), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 104));
  p1 = i0;
  i0 = p2;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 1u;
  p0 = i0;
  i0 = p2;
  i1 = 2u;
  i2 = 1u;
  i3 = p1;
  i1 = i3 ? i1 : i2;
  i2 = 0u;
  i3 = l0;
  i4 = 108u;
  i3 += i4;
  i4 = 4294967292u;
  i5 = 0u;
  i6 = p1;
  i4 = i6 ? i4 : i5;
  i3 += i4;
  i4 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  p2 = i0;
  B3:;
  i0 = p3;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 112u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = p2;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = 32592u;
  i1 = 13971u;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_make_raise_obj(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_is_exception_type(i0);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 0u;
  i2 = 0u;
  i3 = 0u;
  i4 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i0 = mp_obj_is_exception_instance(i0);
  if (i0) {goto B2;}
  i0 = 32592u;
  i1 = 15655u;
  i0 = mp_obj_new_exception_msg(i0, i1);
  p0 = i0;
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 13971u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_import_name(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 25769803782ull;
  i64_store((&M0), (u64)(i0 + 20), j1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l0;
  i1 = p0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5260));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = 1450u;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 5u;
  i2 = 0u;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = p2;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = 5u;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_builtin___import__(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 13971u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_import_from(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = p0;
  i0 = mp_obj_is_package(i0);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 23u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i1 = qstr_len(i1);
  i0 += i1;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  i0 = mp_pystack_alloc(i0);
  p0 = i0;
  i1 = l1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 += i1;
  i1 = 46u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 += i1;
  i1 = 1u;
  i0 += i1;
  i1 = p1;
  i1 = qstr_str(i1);
  i2 = p1;
  i2 = qstr_len(i2);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = l2;
  i0 = qstr_from_strn(i0, i1);
  p1 = i0;
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5132), i1);
  i0 = p1;
  i1 = 30u;
  i2 = 1u;
  i0 = mp_import_name(i0, i1, i2);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 31932u;
  i1 = 15885u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_import_all(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i1 = 8u;
  i0 += i1;
  l0 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l1 = i0;
  i0 = 0u;
  p0 = i0;
  i0 = 0u;
  l2 = i0;
  L1: vm_checktime();
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p0;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 == i1;
    if (i0) {goto B2;}
    i0 = l3;
    i0 = mp_obj_str_get_str(i0);
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 95u;
    i0 = i0 == i1;
    if (i0) {goto B2;}
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p0;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = mp_obj_str_get_qstr(i0);
    l3 = i0;
    i0 = 0u;
    i0 = i32_load((&M0), (u64)(i0 + 5136));
    i1 = l3;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i2 = 2u;
    i1 |= i2;
    i2 = l1;
    i2 = i32_load((&M0), (u64)(i2));
    i3 = p0;
    i2 += i3;
    i3 = 4u;
    i2 += i3;
    i2 = i32_load((&M0), (u64)(i2));
    i0 = mp_obj_dict_store(i0, i1, i2);
    B2:;
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    p0 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = i0 < i1;
    if (i0) {goto L1;}
  B0:;
  FUNC_EPILOGUE;
}

static void m_malloc_fail(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32172u;
  i1 = 16017u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static void mp_raise_TypeError(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 32592u;
  i1 = p0;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static void mp_raise_OSError(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 32292u;
  i1 = p0;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 1u;
  i1 |= i2;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static void mp_raise_NotImplementedError(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 32412u;
  i1 = p0;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static u32 checked_fun_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i4 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 13971u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B0:;
  i0 = 16168u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_call_function_1_protected(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = g0;
  i1 = 176u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i0 = nlr_push_tail(i0);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = setjmp_ex(i0);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 26492u;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  mp_obj_print_exception(i0, i1);
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = p1;
  i0 = mp_call_function_1(i0, i1);
  p0 = i0;
  nlr_pop();
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_handle_pending_tail(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  i1 = 65535u;
  i32_store16((&M0), (u64)(i0 + 5312), i1);
  i0 = 0u;
  i0 = i32_load8_u((&M0), (u64)(i0 + 5314));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load8_u((&M0), (u64)(i0 + 5315));
  i1 = 3u;
  i0 <<= (i1 & 31);
  l1 = i0;
  i1 = 5208u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = 0u;
  i1 = l0;
  i2 = 4294967295u;
  i1 += i2;
  i32_store8((&M0), (u64)(i0 + 5314), i1);
  i0 = 0u;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 5315), i1);
  i0 = l1;
  i1 = 5204u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l2;
  i0 = mp_call_function_1_protected(i0, i1);
  B0:;
  i0 = 0u;
  i1 = 0u;
  i1 = i32_load16_u((&M0), (u64)(i1 + 5312));
  i2 = 1u;
  i1 += i2;
  l0 = i1;
  i32_store16((&M0), (u64)(i0 + 5312), i1);
  i0 = l0;
  i1 = 65535u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  goto Bfunc;
  B1:;
  i0 = 0u;
  i1 = 0u;
  i1 = i32_load8_u((&M0), (u64)(i1 + 5314));
  i2 = 0u;
  i2 = i32_load((&M0), (u64)(i2 + 5200));
  i1 |= i2;
  i1 = !(i1);
  i32_store16((&M0), (u64)(i0 + 5312), i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_sched_schedule(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = 0u;
  i0 = i32_load8_u((&M0), (u64)(i0 + 5314));
  l1 = i0;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load16_u((&M0), (u64)(i0 + 5312));
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 0u;
  i32_store16((&M0), (u64)(i0 + 5312), i1);
  B1:;
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5204), i1);
  i0 = 0u;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 5208), i1);
  i0 = 1u;
  l0 = i0;
  i0 = 0u;
  i1 = l1;
  i2 = 1u;
  i1 += i2;
  i32_store8((&M0), (u64)(i0 + 5314), i1);
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_arg_check_num_sig(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  B3:;
  i0 = p2;
  i1 = 17u;
  i0 >>= (i1 & 31);
  p1 = i0;
  i1 = p2;
  i2 = 1u;
  i1 >>= (i2 & 31);
  i2 = 65535u;
  i1 &= i2;
  p2 = i1;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = p1;
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 11167u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B5:;
  i0 = p1;
  i1 = p0;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = p2;
  i1 = p0;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  B4:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = 10010u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B1:;
  i0 = l0;
  i1 = p1;
  i2 = p0;
  i1 -= i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 32592u;
  i1 = 11955u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = 32592u;
  i1 = 12650u;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_arg_parse_all(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 0u;
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = 0u;
  l3 = i0;
  L3: vm_checktime();
    i0 = l2;
    i1 = p0;
    i0 = i0 >= i1;
    if (i0) {goto B8;}
    i0 = p4;
    i1 = 2u;
    i0 += i1;
    i0 = i32_load16_u((&M0), (u64)(i0));
    l4 = i0;
    i1 = 512u;
    i0 &= i1;
    if (i0) {goto B1;}
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i0 = l4;
    i1 = 255u;
    i0 &= i1;
    l4 = i0;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B7;}
    goto B5;
    B8:;
    i0 = p2;
    i1 = p4;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i2 = 3u;
    i1 <<= (i2 & 31);
    i2 = 2u;
    i1 |= i2;
    i2 = 0u;
    i0 = mp_map_lookup(i0, i1, i2);
    l5 = i0;
    i0 = !(i0);
    if (i0) {goto B6;}
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l5;
    i1 = 4u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i0 = p4;
    i1 = 2u;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 255u;
    i0 &= i1;
    l4 = i0;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B5;}
    B7:;
    i0 = p5;
    i1 = l5;
    i1 = mp_obj_get_int(i1);
    i32_store((&M0), (u64)(i0), i1);
    goto B4;
    B6:;
    i0 = p4;
    i1 = 3u;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B9;}
    i0 = p5;
    i1 = p4;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    goto B4;
    B9:;
    i0 = l0;
    i1 = p4;
    i1 = i32_load16_u((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = 32592u;
    i1 = 13209u;
    i2 = l0;
    mp_raise_msg_varg(i0, i1, i2);
    UNREACHABLE;
    B5:;
    i0 = l4;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B10;}
    i0 = p5;
    i1 = l5;
    i1 = mp_obj_is_true(i1);
    i32_store8((&M0), (u64)(i0), i1);
    goto B4;
    B10:;
    i0 = p5;
    i1 = l5;
    i32_store((&M0), (u64)(i0), i1);
    B4:;
    i0 = p5;
    i1 = 4u;
    i0 += i1;
    p5 = i0;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p4;
    i1 = 8u;
    i0 += i1;
    p4 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = p3;
    i0 = i0 < i1;
    if (i0) {goto L3;}
  i0 = l1;
  i1 = p0;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  i1 = p0;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  B1:;
  i0 = 13636u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B0:;
  i0 = l3;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 >>= (i2 & 31);
  i0 = i0 < i1;
  if (i0) {goto B11;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B11:;
  i0 = 13998u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_arg_parse_all_kw_array(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i2 = p2;
  i3 = p0;
  i4 = 2u;
  i3 <<= (i4 & 31);
  i2 += i3;
  mp_map_init_fixed_table(i0, i1, i2);
  i0 = p0;
  i1 = p2;
  i2 = l0;
  i3 = p3;
  i4 = p4;
  i5 = p5;
  mp_arg_parse_all(i0, i1, i2, i3, i4, i5);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void mp_arg_error_unimpl_kw(void) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 14598u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static void mp_warning(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 26492u;
  i1 = p0;
  i2 = 10050u;
  i3 = p0;
  i1 = i3 ? i1 : i2;
  i0 = mp_print_str(i0, i1);
  i0 = 26492u;
  i1 = 11224u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 26492u;
  i1 = p1;
  i2 = p2;
  i0 = mp_vprintf(i0, i1, i2);
  i0 = 26492u;
  i1 = 12005u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void mp_map_init(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i1 = m_malloc0(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0), i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_map_init_fixed_table(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p1;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 7u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mp_map_clear(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  m_free(i0);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B0:;
  i0 = p0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = p0;
  i1 = l0;
  i2 = 4u;
  i1 &= i2;
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static u32 mp_map_lookup(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = 1u;
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B13;}
  i0 = 0u;
  l0 = i0;
  i0 = l1;
  i1 = 4u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B12;}
  goto B11;
  B13:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B14;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B15;}
  i0 = 0u;
  l0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36168u;
  i0 = i0 == i1;
  if (i0) {goto B14;}
  B15:;
  i0 = 1u;
  l0 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p2;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B14:;
  i0 = l1;
  i1 = 4u;
  i0 &= i1;
  if (i0) {goto B11;}
  B12:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  if (i0) {goto B16;}
  i0 = 0u;
  l2 = i0;
  i0 = p2;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = 1u;
  i0 = get_hash_alloc_greater_or_equal_to(i0);
  l2 = i0;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i0 = m_malloc0(i0);
  l3 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 6u;
  i1 &= i2;
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  m_free(i0);
  B16:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  l4 = i0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B10;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i0 = qstr_hash(i0);
  l5 = i0;
  goto B9;
  B11:;
  i0 = l1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i1 = l1;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l1 = i0;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B8;}
  L17: vm_checktime();
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p1;
    i0 = i0 == i1;
    if (i0) {goto B6;}
    i0 = l2;
    i1 = 8u;
    i0 += i1;
    l2 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L17;}
    goto B7;
  B10:;
  i0 = 6u;
  i1 = p1;
  i0 = mp_unary_op(i0, i1);
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  l5 = i0;
  B9:;
  i0 = l5;
  i1 = p0;
  i2 = 4u;
  i1 += i2;
  l6 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  l2 = i1;
  i0 = REM_U(i0, i1);
  l7 = i0;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B18;}
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l8 = i0;
  goto B5;
  B18:;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l9 = i0;
  goto B4;
  B8:;
  L19: vm_checktime();
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    l0 = i0;
    i1 = p1;
    i0 = i0 == i1;
    if (i0) {goto B6;}
    i0 = l0;
    i1 = p1;
    i0 = mp_obj_equal(i0, i1);
    if (i0) {goto B6;}
    i0 = l2;
    i1 = 8u;
    i0 += i1;
    l2 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L19;}
  B7:;
  i0 = 0u;
  l2 = i0;
  i0 = p2;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = i0 != i1;
  if (i0) {goto B20;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i1 = l1;
  i2 = 4u;
  i1 += i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l1;
  i3 = 3u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l0 = i1;
  i2 = 4294967288u;
  i1 &= i2;
  i0 += i1;
  i1 = 0u;
  i2 = l2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = l0;
  i4 = 3u;
  i3 >>= (i4 & 31);
  i2 -= i3;
  i3 = 3u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  l1 = i0;
  B20:;
  i0 = p0;
  i1 = l2;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l1;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l2 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  goto Bfunc;
  B6:;
  i0 = p2;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967288u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l2;
  i2 = 8u;
  i1 += i2;
  i2 = l1;
  i3 = 4294967288u;
  i2 += i3;
  i3 = l2;
  i2 -= i3;
  i3 = 4294967288u;
  i2 &= i3;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967288u;
  i1 &= i2;
  i0 += i1;
  l1 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  goto Bfunc;
  B5:;
  L21: vm_checktime();
    i0 = l8;
    i0 = i32_load((&M0), (u64)(i0));
    l9 = i0;
    i0 = l7;
    l1 = i0;
    L23: vm_checktime();
      i0 = l9;
      i1 = l1;
      i2 = 3u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l3 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      i1 = 4u;
      i0 = i0 == i1;
      if (i0) {goto B24;}
      i0 = l10;
      i0 = !(i0);
      if (i0) {goto B1;}
      i0 = l10;
      i1 = p1;
      i0 = i0 == i1;
      if (i0) {goto B2;}
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      i1 = l2;
      i0 = REM_U(i0, i1);
      l1 = i0;
      i1 = l7;
      i0 = i0 != i1;
      if (i0) {goto L23;}
      goto B22;
      B24:;
      i0 = l0;
      i1 = l3;
      i2 = l0;
      i0 = i2 ? i0 : i1;
      l0 = i0;
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      i1 = l2;
      i0 = REM_U(i0, i1);
      l1 = i0;
      i1 = l7;
      i0 = i0 != i1;
      if (i0) {goto L23;}
    B22:;
    i0 = p2;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B26;}
    i0 = l0;
    if (i0) {goto B3;}
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    i0 = get_hash_alloc_greater_or_equal_to(i0);
    l1 = i0;
    i1 = 3u;
    i0 <<= (i1 & 31);
    i0 = m_malloc0(i0);
    l3 = i0;
    i0 = l6;
    i1 = l1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l8;
    i1 = l3;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 6u;
    i1 &= i2;
    i2 = 1u;
    i1 |= i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l9;
    l1 = i0;
    i0 = l2;
    i0 = !(i0);
    if (i0) {goto B25;}
    L27: vm_checktime();
      i0 = l1;
      i0 = i32_load((&M0), (u64)(i0));
      l3 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B28;}
      i0 = l1;
      i1 = 8u;
      i0 += i1;
      l1 = i0;
      i0 = l2;
      i1 = 4294967295u;
      i0 += i1;
      l2 = i0;
      if (i0) {goto L27;}
      goto B25;
      B28:;
      i0 = l1;
      i1 = 4u;
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      i0 = p0;
      i1 = l3;
      i2 = 1u;
      i0 = mp_map_lookup(i0, i1, i2);
      i1 = l10;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l1;
      i1 = 8u;
      i0 += i1;
      l1 = i0;
      i0 = l2;
      i1 = 4294967295u;
      i0 += i1;
      l2 = i0;
      if (i0) {goto L27;}
      goto B25;
    B26:;
    i0 = 0u;
    goto Bfunc;
    B25:;
    i0 = l9;
    m_free(i0);
    i0 = l5;
    i1 = l6;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = REM_U(i0, i1);
    l7 = i0;
    goto L21;
  B4:;
  L29: vm_checktime();
    i0 = l7;
    l1 = i0;
    L31: vm_checktime();
      i0 = l9;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l1;
      i2 = 3u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l3 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      i1 = 4u;
      i0 = i0 == i1;
      if (i0) {goto B32;}
      i0 = l10;
      i0 = !(i0);
      if (i0) {goto B1;}
      i0 = l10;
      i1 = p1;
      i0 = i0 == i1;
      if (i0) {goto B2;}
      i0 = l10;
      i1 = p1;
      i0 = mp_obj_equal(i0, i1);
      if (i0) {goto B2;}
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      i1 = l6;
      i1 = i32_load((&M0), (u64)(i1));
      l2 = i1;
      i0 = REM_U(i0, i1);
      l1 = i0;
      i1 = l7;
      i0 = i0 != i1;
      if (i0) {goto L31;}
      goto B30;
      B32:;
      i0 = l0;
      i1 = l3;
      i2 = l0;
      i0 = i2 ? i0 : i1;
      l0 = i0;
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      i1 = l2;
      i0 = REM_U(i0, i1);
      l1 = i0;
      i1 = l7;
      i0 = i0 != i1;
      if (i0) {goto L31;}
    B30:;
    i0 = p2;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B34;}
    i0 = l0;
    if (i0) {goto B3;}
    i0 = l9;
    i0 = i32_load((&M0), (u64)(i0));
    l7 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    i0 = get_hash_alloc_greater_or_equal_to(i0);
    l1 = i0;
    i1 = 3u;
    i0 <<= (i1 & 31);
    i0 = m_malloc0(i0);
    l3 = i0;
    i0 = l6;
    i1 = l1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l9;
    i1 = l3;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 6u;
    i1 &= i2;
    i2 = 1u;
    i1 |= i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l2;
    i0 = !(i0);
    if (i0) {goto B33;}
    i0 = l7;
    l1 = i0;
    L35: vm_checktime();
      i0 = l1;
      i0 = i32_load((&M0), (u64)(i0));
      l3 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B36;}
      i0 = l1;
      i1 = 8u;
      i0 += i1;
      l1 = i0;
      i0 = l2;
      i1 = 4294967295u;
      i0 += i1;
      l2 = i0;
      if (i0) {goto L35;}
      goto B33;
      B36:;
      i0 = l1;
      i1 = 4u;
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      i0 = p0;
      i1 = l3;
      i2 = 1u;
      i0 = mp_map_lookup(i0, i1, i2);
      i1 = l10;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l1;
      i1 = 8u;
      i0 += i1;
      l1 = i0;
      i0 = l2;
      i1 = 4294967295u;
      i0 += i1;
      l2 = i0;
      if (i0) {goto L35;}
      goto B33;
    B34:;
    i0 = 0u;
    goto Bfunc;
    B33:;
    i0 = l7;
    m_free(i0);
    i0 = l5;
    i1 = l6;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = REM_U(i0, i1);
    l7 = i0;
    goto L29;
  B3:;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  l2 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  goto Bfunc;
  B2:;
  i0 = l3;
  l2 = i0;
  i0 = p2;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967288u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l1;
  i2 = 1u;
  i1 += i2;
  i2 = p0;
  i3 = 4u;
  i2 += i3;
  i2 = i32_load((&M0), (u64)(i2));
  i1 = REM_U(i1, i2);
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B37;}
  i0 = l2;
  i1 = 4u;
  i32_store((&M0), (u64)(i0), i1);
  goto B0;
  B37:;
  i0 = l2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  goto Bfunc;
  B1:;
  i0 = 0u;
  l2 = i0;
  i0 = p2;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l3;
  i2 = l0;
  i0 = i2 ? i0 : i1;
  l2 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967294u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  goto Bfunc;
  B0:;
  i0 = l2;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 get_hash_alloc_greater_or_equal_to(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 2u;
  l0 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 <= i1;
  if (i0) {goto B1;}
  i0 = 4u;
  l0 = i0;
  i0 = p0;
  i1 = 5u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 6u;
  l0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 8u;
  l0 = i0;
  i0 = p0;
  i1 = 9u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 10u;
  l0 = i0;
  i0 = p0;
  i1 = 11u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 12u;
  l0 = i0;
  i0 = p0;
  i1 = 13u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 17u;
  l0 = i0;
  i0 = p0;
  i1 = 18u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 23u;
  l0 = i0;
  i0 = p0;
  i1 = 24u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 29u;
  l0 = i0;
  i0 = p0;
  i1 = 30u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 37u;
  l0 = i0;
  i0 = p0;
  i1 = 38u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 47u;
  l0 = i0;
  i0 = p0;
  i1 = 48u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 59u;
  l0 = i0;
  i0 = p0;
  i1 = 60u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 73u;
  l0 = i0;
  i0 = p0;
  i1 = 74u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 97u;
  l0 = i0;
  i0 = p0;
  i1 = 98u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 127u;
  l0 = i0;
  i0 = p0;
  i1 = 128u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 167u;
  l0 = i0;
  i0 = p0;
  i1 = 168u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 223u;
  l0 = i0;
  i0 = p0;
  i1 = 224u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 293u;
  l0 = i0;
  i0 = p0;
  i1 = 294u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 389u;
  l0 = i0;
  i0 = p0;
  i1 = 390u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 521u;
  l0 = i0;
  i0 = p0;
  i1 = 522u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 691u;
  l0 = i0;
  i0 = p0;
  i1 = 692u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 919u;
  l0 = i0;
  i0 = p0;
  i1 = 920u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 1223u;
  l0 = i0;
  i0 = p0;
  i1 = 1224u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 1627u;
  l0 = i0;
  i0 = p0;
  i1 = 1628u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 2161u;
  l0 = i0;
  i0 = p0;
  i1 = 2162u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 3229u;
  l0 = i0;
  i0 = p0;
  i1 = 3230u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 4831u;
  l0 = i0;
  i0 = p0;
  i1 = 4832u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 7243u;
  l0 = i0;
  i0 = p0;
  i1 = 7244u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 10861u;
  l0 = i0;
  i0 = p0;
  i1 = 10862u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 16273u;
  l0 = i0;
  i0 = p0;
  i1 = 16274u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 24407u;
  l0 = i0;
  i0 = p0;
  i1 = 24408u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 36607u;
  l0 = i0;
  i0 = p0;
  i1 = 36608u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 54907u;
  l0 = i0;
  i0 = p0;
  i1 = 54908u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 1u;
  i0 >>= (i1 & 31);
  i1 = p0;
  i0 += i1;
  i1 = 1u;
  i0 |= i1;
  l0 = i0;
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_set_init(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i1 = m_malloc0(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  FUNC_EPILOGUE;
}

static u32 mp_set_lookup(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  l2 = i0;
  goto B1;
  B2:;
  i0 = 0u;
  l3 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l4 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 1u;
  i1 = get_hash_alloc_greater_or_equal_to(i1);
  l3 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = l3;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i1 = m_malloc0(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l4;
  m_free(i0);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  B1:;
  i0 = 6u;
  i1 = p1;
  i0 = mp_unary_op(i0, i1);
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  l5 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l6 = i1;
  i0 = REM_U(i0, i1);
  l7 = i0;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = 0u;
  l8 = i0;
  i0 = l7;
  l4 = i0;
  L7: vm_checktime();
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l4;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l9 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i1 = 4u;
    i0 = i0 == i1;
    if (i0) {goto B8;}
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = l3;
    i1 = p1;
    i0 = mp_obj_equal(i0, i1);
    if (i0) {goto B4;}
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    l6 = i1;
    i0 = REM_U(i0, i1);
    l4 = i0;
    i1 = l7;
    i0 = i0 != i1;
    if (i0) {goto L7;}
    goto B6;
    B8:;
    i0 = l8;
    i1 = l9;
    i2 = l8;
    i0 = i2 ? i0 : i1;
    l8 = i0;
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    i1 = l6;
    i0 = REM_U(i0, i1);
    l4 = i0;
    i1 = l7;
    i0 = i0 != i1;
    if (i0) {goto L7;}
  B6:;
  i0 = 0u;
  goto Bfunc;
  B5:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l10 = i0;
  i0 = l7;
  l4 = i0;
  i0 = 0u;
  l8 = i0;
  L9: vm_checktime();
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l4;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l9 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i1 = 4u;
    i0 = i0 == i1;
    if (i0) {goto B11;}
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = l3;
    i1 = p1;
    i0 = mp_obj_equal(i0, i1);
    if (i0) {goto B4;}
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    l6 = i1;
    i0 = REM_U(i0, i1);
    l4 = i0;
    i1 = l7;
    i0 = i0 != i1;
    if (i0) {goto L9;}
    goto B10;
    B11:;
    i0 = l8;
    i1 = l9;
    i2 = l8;
    i0 = i2 ? i0 : i1;
    l8 = i0;
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    i1 = l6;
    i0 = REM_U(i0, i1);
    l4 = i0;
    i1 = l7;
    i0 = i0 != i1;
    if (i0) {goto L9;}
    B10:;
    i0 = l8;
    if (i0) {goto B13;}
    i0 = l10;
    i0 = i32_load((&M0), (u64)(i0));
    l9 = i0;
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = l6;
    i2 = 1u;
    i1 += i2;
    i1 = get_hash_alloc_greater_or_equal_to(i1);
    l4 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l10;
    i1 = l4;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i1 = m_malloc0(i1);
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    i0 = !(i0);
    if (i0) {goto B12;}
    i0 = l9;
    l4 = i0;
    L14: vm_checktime();
      i0 = l4;
      i0 = i32_load((&M0), (u64)(i0));
      l3 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B15;}
      i0 = l4;
      i1 = 4u;
      i0 += i1;
      l4 = i0;
      i0 = l6;
      i1 = 4294967295u;
      i0 += i1;
      l6 = i0;
      if (i0) {goto L14;}
      goto B12;
      B15:;
      i0 = p0;
      i1 = l3;
      i2 = 1u;
      i0 = mp_set_lookup(i0, i1, i2);
      i0 = l4;
      i1 = 4u;
      i0 += i1;
      l4 = i0;
      i0 = l6;
      i1 = 4294967295u;
      i0 += i1;
      l6 = i0;
      if (i0) {goto L14;}
      goto B12;
    B13:;
    i0 = l8;
    i1 = p1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    goto Bfunc;
    B12:;
    i0 = l9;
    m_free(i0);
    i0 = l5;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    l6 = i1;
    i0 = REM_U(i0, i1);
    l7 = i0;
    l4 = i0;
    goto L9;
  B4:;
  i0 = p2;
  i1 = 2u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l6 = i0;
  i1 = l6;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967295u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l6 = i0;
  i1 = l4;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l8 = i0;
  i0 = l6;
  i1 = l4;
  i2 = 1u;
  i1 += i2;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2));
  i1 = REM_U(i1, i2);
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = l8;
  i1 = 4u;
  i32_store((&M0), (u64)(i0), i1);
  goto B0;
  B16:;
  i0 = l8;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  goto Bfunc;
  B3:;
  i0 = 0u;
  l3 = i0;
  i0 = l2;
  if (i0) {goto B0;}
  i0 = l8;
  i1 = l9;
  i2 = l8;
  i0 = i2 ? i0 : i1;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = l3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_set_remove_first(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  l2 = i0;
  i0 = 1u;
  l3 = i0;
  L2: vm_checktime();
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l2;
    i1 = 4u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i1 = l0;
    i0 = i0 < i1;
    l4 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l4;
    if (i0) {goto L2;}
  i0 = 0u;
  goto Bfunc;
  B1:;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4294967295u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = 4u;
  i2 = 0u;
  i3 = l1;
  i4 = l3;
  i5 = l0;
  i4 = REM_U(i4, i5);
  i5 = 2u;
  i4 <<= (i5 & 31);
  i3 += i4;
  i3 = i32_load((&M0), (u64)(i3));
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_set_clear(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  m_free(i0);
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  FUNC_EPILOGUE;
}

static u32 mp_obj_get_type(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 26832u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 3u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_get_type_str(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 26832u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 3u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load16_u((&M0), (u64)(i0 + 6));
  i0 = qstr_str(i0);
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_print_helper(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 26832u;
  i0 += i1;
  i1 = p1;
  i2 = p1;
  i3 = 3u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = l2;
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = l1;
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 10058u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_obj_print_exception(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = mp_obj_is_exception_instance(i0);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = l0;
  i2 = 44u;
  i1 += i2;
  i2 = l0;
  i3 = 40u;
  i2 += i3;
  mp_obj_exception_get_traceback(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 44));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 11227u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 44));
  l1 = i0;
  i1 = 4294967293u;
  i0 += i1;
  l2 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = l1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 4294967292u;
  i0 += i1;
  l1 = i0;
  L1: vm_checktime();
    i0 = l0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 40));
    i2 = l1;
    i1 += i2;
    i2 = 4294967288u;
    i1 += i2;
    j1 = i64_load((&M0), (u64)(i1));
    i64_store((&M0), (u64)(i0 + 32), j1);
    i0 = p0;
    i1 = 12007u;
    i2 = l0;
    i3 = 32u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 40));
    i1 = l1;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l0;
    i1 = l3;
    i32_store((&M0), (u64)(i0 + 16), i1);
    i0 = p0;
    i1 = 13232u;
    i2 = l0;
    i3 = 16u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = l1;
    i1 = 4294967284u;
    i0 += i1;
    l1 = i0;
    i0 = l2;
    i1 = 4294967293u;
    i0 += i1;
    l2 = i0;
    i1 = 4294967295u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L1;}
    goto B0;
    B2:;
    i0 = p0;
    i1 = 12697u;
    i0 = mp_print_str(i0, i1);
    i0 = l1;
    i1 = 4294967284u;
    i0 += i1;
    l1 = i0;
    i0 = l2;
    i1 = 4294967293u;
    i0 += i1;
    l2 = i0;
    i1 = 4294967295u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L1;}
  B0:;
  i0 = p1;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 26832u;
  i0 += i1;
  i1 = p1;
  i2 = p1;
  i3 = 3u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i1 = p1;
  i2 = 2u;
  i3 = l1;
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
  goto B3;
  B4:;
  i0 = l0;
  i1 = l2;
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 10058u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  B3:;
  i0 = p0;
  i1 = 12697u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 mp_obj_is_true(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 30u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = 1u;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B9;}
  i0 = p0;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 26832u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 3u;
  i2 &= i3;
  l1 = i2;
  i0 = i2 ? i0 : i1;
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = 4u;
  i1 = p0;
  i2 = l0;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32), 3, i2, i0, i1);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l0;
  i1 = 30u;
  i0 = i0 == i1;
  goto Bfunc;
  B9:;
  i0 = p0;
  i1 = 1u;
  i0 = i0 != i1;
  goto Bfunc;
  B8:;
  i0 = 0u;
  l0 = i0;
  i0 = l1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35852u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i0 = qstr_len(i0);
  p0 = i0;
  goto B5;
  B7:;
  i0 = l1;
  if (i0) {goto B11;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35852u;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  B11:;
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = 5u;
  i1 = p0;
  i2 = l0;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32), 3, i2, i0, i1);
  l0 = i0;
  goto B2;
  B12:;
  i0 = 0u;
  l0 = i0;
  goto B2;
  B10:;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i0 = qstr_len(i0);
  p0 = i0;
  goto B3;
  B6:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  B5:;
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l0 = i0;
  goto B2;
  B4:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  B3:;
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l0 = i0;
  B2:;
  i0 = l0;
  i1 = 1u;
  i0 = i0 != i1;
  l0 = i0;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_len_maybe(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  l0 = i0;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35852u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 26832u;
  i0 += i1;
  i1 = p0;
  i2 = l0;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 5u;
  i1 = p0;
  i2 = l0;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32), 3, i2, i0, i1);
  goto Bfunc;
  B2:;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i0 = qstr_len(i0);
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B3:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_is_callable(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 26832u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 3u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l0 = i0;
  i1 = 10u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 0u;
  i0 = i0 != i1;
  goto Bfunc;
  B0:;
  i0 = p0;
  i0 = mp_obj_instance_is_callable(i0);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_equal_not_equal(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 14u;
  i1 = 30u;
  i2 = p0;
  i3 = 5u;
  i2 = i2 == i3;
  l0 = i2;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p1;
  i1 = p2;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 26832u;
  i0 += i1;
  i1 = p1;
  i2 = p1;
  i3 = 3u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i1 = 4u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 30u;
  i1 = 14u;
  i2 = l0;
  i0 = i2 ? i0 : i1;
  l2 = i0;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  l3 = i0;
  if (i0) {goto B5;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36168u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  B5:;
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B7;}
  i0 = 0u;
  l0 = i0;
  i0 = p1;
  l4 = i0;
  goto B6;
  B7:;
  i0 = 0u;
  l0 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = l2;
  goto Bfunc;
  B8:;
  i0 = 1u;
  l5 = i0;
  goto B3;
  B6:;
  i0 = 5u;
  l5 = i0;
  goto B3;
  B4:;
  i0 = p2;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = 0u;
  l0 = i0;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B10;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36168u;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  goto B2;
  B10:;
  i0 = 1u;
  l5 = i0;
  goto B3;
  B9:;
  i0 = 1u;
  l5 = i0;
  B3:;
  L11: vm_checktime();
    i0 = l5;
    switch (i0) {
      case 0: goto B30;
      case 1: goto B34;
      case 2: goto B22;
      case 3: goto B21;
      case 4: goto B33;
      case 5: goto B32;
      case 6: goto B31;
      case 7: goto B29;
      case 8: goto B28;
      case 9: goto B27;
      case 10: goto B26;
      case 11: goto B25;
      case 12: goto B24;
      case 13: goto B23;
      default: goto B23;
    }
    B34:;
    i0 = l0;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B16;}
    i0 = 4u;
    l5 = i0;
    goto L11;
    B33:;
    i0 = p2;
    i1 = 3u;
    i0 &= i1;
    l3 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i0 = p2;
    l4 = i0;
    i0 = p2;
    l6 = i0;
    i0 = p1;
    p2 = i0;
    i0 = l6;
    p1 = i0;
    i0 = 5u;
    l5 = i0;
    goto L11;
    B32:;
    i0 = l4;
    i1 = 15u;
    i0 &= i1;
    i1 = 2u;
    i0 <<= (i1 & 31);
    i1 = 26832u;
    i0 += i1;
    i1 = p1;
    i2 = l3;
    i0 = i2 ? i0 : i1;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i0 = i32_load((&M0), (u64)(i0 + 24));
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B20;}
    i0 = 6u;
    l5 = i0;
    goto L11;
    B31:;
    i0 = l3;
    i0 = i32_load16_u((&M0), (u64)(i0 + 4));
    l6 = i0;
    i1 = 8u;
    i0 &= i1;
    if (i0) {goto B17;}
    i0 = 0u;
    l5 = i0;
    goto L11;
    B30:;
    i0 = p2;
    i1 = 15u;
    i0 &= i1;
    i1 = 2u;
    i0 <<= (i1 & 31);
    i1 = 26832u;
    i0 += i1;
    i1 = p2;
    i2 = p2;
    i3 = 3u;
    i2 &= i3;
    i0 = i2 ? i0 : i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l3;
    i0 = i0 != i1;
    if (i0) {goto B18;}
    i0 = 7u;
    l5 = i0;
    goto L11;
    B29:;
    i0 = l6;
    i1 = 16u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B13;}
    i0 = 8u;
    l5 = i0;
    goto L11;
    B28:;
    i0 = p0;
    i1 = 5u;
    i0 = i0 != i1;
    if (i0) {goto B12;}
    i0 = 9u;
    l5 = i0;
    goto L11;
    B27:;
    i0 = 5u;
    i1 = p1;
    i2 = p2;
    i3 = l4;
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 4, i3, i0, i1, i2);
    l4 = i0;
    if (i0) {goto B15;}
    i0 = 10u;
    l5 = i0;
    goto L11;
    B26:;
    i0 = l3;
    i1 = 24u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    i0 = 11u;
    l5 = i0;
    goto L11;
    B25:;
    i0 = 2u;
    i1 = p1;
    i2 = p2;
    i3 = l4;
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 4, i3, i0, i1, i2);
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B19;}
    i0 = 12u;
    l5 = i0;
    goto L11;
    B24:;
    i0 = p0;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B14;}
    i0 = 13u;
    l5 = i0;
    goto L11;
    B23:;
    i0 = l1;
    i1 = l2;
    i2 = l4;
    i2 = mp_obj_is_true(i2);
    i0 = i2 ? i0 : i1;
    goto Bfunc;
    B22:;
    i0 = l1;
    i1 = l2;
    i2 = p2;
    i3 = p1;
    i2 = i2 == i3;
    i0 = i2 ? i0 : i1;
    l4 = i0;
    i0 = 3u;
    l5 = i0;
    goto L11;
    B21:;
    i0 = l4;
    goto Bfunc;
    B20:;
    i0 = 1u;
    l5 = i0;
    goto L11;
    B19:;
    i0 = 1u;
    l5 = i0;
    goto L11;
    B18:;
    i0 = 1u;
    l5 = i0;
    goto L11;
    B17:;
    i0 = 7u;
    l5 = i0;
    goto L11;
    B16:;
    i0 = 2u;
    l5 = i0;
    goto L11;
    B15:;
    i0 = 3u;
    l5 = i0;
    goto L11;
    B14:;
    i0 = 3u;
    l5 = i0;
    goto L11;
    B13:;
    i0 = 11u;
    l5 = i0;
    goto L11;
    B12:;
    i0 = 11u;
    l5 = i0;
    goto L11;
  B2:;
  i0 = l1;
  i1 = l2;
  i2 = p1;
  i3 = p2;
  i2 = mp_obj_str_equal(i2, i3);
  i0 = i2 ? i0 : i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_equal(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 2u;
  i1 = p0;
  i2 = p1;
  i0 = mp_obj_equal_not_equal(i0, i1, i2);
  i0 = mp_obj_is_true(i0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_get_int(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 30u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 1u;
  goto Bfunc;
  B1:;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B4:;
  i0 = 8u;
  i1 = p0;
  i0 = mp_unary_op(i0, i1);
  i0 = mp_obj_int_get_checked(i0);
  goto Bfunc;
  B3:;
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  goto Bfunc;
  B2:;
  i0 = p0;
  i0 = mp_obj_int_get_checked(i0);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_get_int_truncated(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  l0 = i0;
  if (i0) {goto B3;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B3:;
  i0 = p0;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 30u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 1u;
  goto Bfunc;
  B2:;
  i0 = p0;
  i0 = mp_obj_int_get_truncated(i0);
  goto Bfunc;
  B1:;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = l0;
  if (i0) {goto B5;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  B5:;
  i0 = 8u;
  i1 = p0;
  i0 = mp_unary_op(i0, i1);
  i0 = mp_obj_int_get_checked(i0);
  goto Bfunc;
  B4:;
  i0 = p0;
  i0 = mp_obj_int_get_checked(i0);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_get_int_maybe(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 30u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 14u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto B1;
  B3:;
  i0 = p1;
  i1 = 1u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 1u;
  goto Bfunc;
  B2:;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = p0;
  i1 = mp_obj_int_get_checked(i1);
  i32_store((&M0), (u64)(i0), i1);
  goto B1;
  B4:;
  i0 = p1;
  i1 = p0;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0), i1);
  B1:;
  i0 = 1u;
  l0 = i0;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_get_float_maybe(u32 p0, u32 p1) {
  u32 l1 = 0, l2 = 0;
  f64 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  f64 d0, d1;
  i0 = p0;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 30u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  d0 = 1;
  l0 = d0;
  goto B1;
  B3:;
  d0 = 0;
  l0 = d0;
  goto B1;
  B2:;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 32832u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  d0 = mp_obj_float_get(i0);
  l0 = d0;
  goto B1;
  B5:;
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  d0 = (f64)(s32)(i0);
  l0 = d0;
  goto B1;
  B4:;
  i0 = p0;
  d0 = mp_obj_int_as_float_impl(i0);
  l0 = d0;
  B1:;
  i0 = p1;
  d1 = l0;
  f64_store((&M0), (u64)(i0), d1);
  i0 = 1u;
  l1 = i0;
  B0:;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static f64 mp_obj_get_float(u32 p0) {
  u32 l0 = 0, l1 = 0;
  f64 l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 30u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = 1;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = 0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 32832u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  d0 = mp_obj_float_get(i0);
  l2 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = l2;
  goto Bfunc;
  B4:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  d0 = (f64)(s32)(i0);
  goto Bfunc;
  B3:;
  i0 = p0;
  d0 = mp_obj_int_as_float_impl(i0);
  l2 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = l2;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 13669u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static u32 mp_obj_get_complex_maybe(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  f64 d1;
  i0 = p0;
  i1 = 30u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 14u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  goto B1;
  B3:;
  i0 = p1;
  j1 = 4607182418800017408ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  goto B1;
  B2:;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B6;}
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l1;
  i1 = 32832u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 30496u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  mp_obj_complex_get(i0, i1, i2);
  goto B1;
  B6:;
  i0 = p1;
  i1 = p0;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  d1 = (f64)(s32)(i1);
  f64_store((&M0), (u64)(i0), d1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  goto B1;
  B5:;
  i0 = p1;
  i1 = p0;
  d1 = mp_obj_int_as_float_impl(i1);
  f64_store((&M0), (u64)(i0), d1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  goto B1;
  B4:;
  i0 = p1;
  i1 = p0;
  d1 = mp_obj_float_get(i1);
  f64_store((&M0), (u64)(i0), d1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  B1:;
  i0 = 1u;
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_get_complex(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  f64 d1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 30u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 14u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = p1;
  j1 = 4607182418800017408ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 32832u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 30496u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  mp_obj_complex_get(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B5:;
  i0 = p1;
  i1 = p0;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  d1 = (f64)(s32)(i1);
  f64_store((&M0), (u64)(i0), d1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B4:;
  i0 = p1;
  i1 = p0;
  d1 = mp_obj_int_as_float_impl(i1);
  f64_store((&M0), (u64)(i0), d1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B3:;
  i0 = p1;
  i1 = p0;
  d1 = mp_obj_float_get(i1);
  f64_store((&M0), (u64)(i0), d1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 14028u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_obj_get_array(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 36756u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 33760u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  mp_obj_list_get(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  mp_obj_tuple_get(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 14357u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_get_index(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B7;}
  i0 = p2;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = p2;
  i1 = 30u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = 1u;
  p2 = i0;
  i0 = p3;
  if (i0) {goto B2;}
  goto B1;
  B7:;
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  p2 = i0;
  goto B4;
  B6:;
  i0 = 0u;
  p2 = i0;
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B1;}
  goto B2;
  B5:;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p2;
  i0 = mp_obj_int_get_checked(i0);
  p2 = i0;
  B4:;
  i0 = p2;
  i1 = 31u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = p1;
  i0 &= i1;
  i1 = p2;
  i0 += i1;
  p2 = i0;
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B1;}
  goto B2;
  B3:;
  i0 = p0;
  i0 = i32_load16_u((&M0), (u64)(i0 + 6));
  p1 = i0;
  i0 = l0;
  i1 = p2;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 32592u;
  i1 = 14827u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B2:;
  i0 = 0u;
  p3 = i0;
  i0 = p2;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = p2;
  i3 = p1;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B8;}
  i0 = p2;
  p3 = i0;
  i0 = p2;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  B8:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32052u;
  i1 = 15001u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_id(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = mp_obj_new_int(i0);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B1:;
  i0 = p0;
  i0 = mp_obj_new_int_from_uint(i0);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_len(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  l1 = i0;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35852u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 26832u;
  i0 += i1;
  i1 = p0;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 5u;
  i1 = p0;
  i2 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32), 3, i2, i0, i1);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i0 = qstr_len(i0);
  p0 = i0;
  goto B3;
  B4:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  B3:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 15126u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_subscr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 26832u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 3u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 32));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = l2;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 4, i3, i0, i1, i2);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = p2;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 15262u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B1:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load16_u((&M0), (u64)(i0 + 6));
  i0 = qstr_str(i0);
  p0 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 32592u;
  i1 = 15517u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B2:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = 32592u;
  i1 = 15697u;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_identity(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_identity_getiter(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_get_buffer(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 26832u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 3u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 44));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = l0;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 4, i3, i0, i1, i2);
  i0 = !(i0);
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_get_buffer_raise(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 15u;
  i0 &= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 26832u;
  i0 += i1;
  i1 = p0;
  i2 = p0;
  i3 = 3u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 44));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = l0;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 4, i3, i0, i1, i2);
  if (i0) {goto B0;}
  goto Bfunc;
  B0:;
  i0 = 15906u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_generic_unary_op(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  i1 = 0u;
  i2 = p0;
  i3 = 6u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static void array_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 10063u;
  i0 = mp_print_str(i0, i1);
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = 1u;
  mp_str_print_quoted(i0, i1, i2, i3);
  goto B0;
  B1:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 11263u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 12028u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 0u;
  l1 = i0;
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  l3 = i0;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  p1 = i0;
  L3: vm_checktime();
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B4;}
    i0 = p0;
    i1 = 12699u;
    i0 = mp_print_str(i0, i1);
    B4:;
    i0 = p0;
    i1 = p1;
    i1 = i32_load8_s((&M0), (u64)(i1));
    i2 = l3;
    i2 = i32_load((&M0), (u64)(i2));
    i3 = l1;
    i1 = mp_binary_get_val_array(i1, i2, i3);
    i2 = 1u;
    mp_obj_print_helper(i0, i1, i2);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = i0 < i1;
    if (i0) {goto L3;}
  B2:;
  i0 = p0;
  i1 = 13241u;
  i0 = mp_print_str(i0, i1);
  B0:;
  i0 = p0;
  i1 = 13695u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 array_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p1;
  i1 = p2;
  i2 = 131076u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_str_get_str(i0);
  i0 = i32_load8_u((&M0), (u64)(i0));
  p2 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 64u;
  i1 = p2;
  i2 = 24u;
  i1 <<= (i2 & 31);
  i2 = 24u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 27024u;
  i2 = 26964u;
  i3 = p2;
  i4 = 1u;
  i3 = i3 == i4;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = 0u;
  i1 = m_malloc(i1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = p2;
  i1 = 24u;
  i0 <<= (i1 & 31);
  i1 = 24u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = array_construct(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 array_construct(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 35852u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 27024u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p1;
  i1 = l0;
  i2 = 1u;
  i0 = mp_get_buffer(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 64u;
  i1 = p0;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = 64u;
  i1 = p0;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l3 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p0;
  i2 = 255u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 27024u;
  i2 = 26964u;
  i3 = p0;
  i4 = 1u;
  i3 = i3 == i4;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = l2;
  i2 = l1;
  i1 = DIV_U(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = l3;
  i2 = l2;
  i1 *= i2;
  i1 = m_malloc(i1);
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l2;
  i3 = l1;
  i2 *= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = p1;
  i0 = mp_obj_len_maybe(i0);
  l1 = i0;
  i0 = 64u;
  i1 = p0;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l2 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  l4 = i0;
  i1 = p0;
  i2 = 255u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l4;
  i1 = 27024u;
  i2 = 26964u;
  i3 = p0;
  i4 = 1u;
  i3 = i3 == i4;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = l1;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = 0u;
  i3 = l1;
  i1 = i3 ? i1 : i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l4;
  i1 = l1;
  i2 = l2;
  i1 *= i2;
  i1 = m_malloc(i1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  l2 = i0;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 0u;
  l1 = i0;
  i0 = l4;
  i1 = 12u;
  i0 += i1;
  l3 = i0;
  L4: vm_checktime();
    i0 = p0;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l1;
    i3 = p1;
    mp_binary_set_val_array(i0, i1, i2, i3);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l2;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L4;}
    goto B2;
  B3:;
  L5: vm_checktime();
    i0 = l4;
    i1 = p1;
    i0 = array_append(i0, i1);
    i0 = l2;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L5;}
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 array_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l0 = i0;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 array_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 4294967294u;
  i0 += i1;
  p0 = i0;
  i1 = 34u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  switch (i0) {
    case 0: goto B6;
    case 1: goto B0;
    case 2: goto B0;
    case 3: goto B0;
    case 4: goto B0;
    case 5: goto B0;
    case 6: goto B0;
    case 7: goto B0;
    case 8: goto B0;
    case 9: goto B0;
    case 10: goto B0;
    case 11: goto B0;
    case 12: goto B4;
    case 13: goto B0;
    case 14: goto B0;
    case 15: goto B0;
    case 16: goto B0;
    case 17: goto B0;
    case 18: goto B0;
    case 19: goto B0;
    case 20: goto B0;
    case 21: goto B0;
    case 22: goto B0;
    case 23: goto B0;
    case 24: goto B0;
    case 25: goto B5;
    case 26: goto B0;
    case 27: goto B0;
    case 28: goto B0;
    case 29: goto B0;
    case 30: goto B0;
    case 31: goto B0;
    case 32: goto B0;
    case 33: goto B0;
    case 34: goto B3;
    default: goto B6;
  }
  B6:;
  i0 = 64u;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 127u;
  i1 &= i2;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 26904u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = 14u;
  l1 = i0;
  i0 = p2;
  i1 = l0;
  i2 = 1u;
  i0 = mp_get_buffer(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B1;
  B5:;
  i0 = 64u;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 127u;
  i1 &= i2;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l3 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 *= i1;
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 26904u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = l2;
  i1 = p0;
  i2 = 8u;
  i1 >>= (i2 & 31);
  i2 = l3;
  i1 *= i2;
  i0 += i1;
  l2 = i0;
  B7:;
  i0 = p2;
  i1 = l0;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = 64u;
  i1 = p0;
  i2 = 127u;
  i1 &= i2;
  p0 = i1;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  p2 = i0;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l4 = i0;
  i0 = 64u;
  i1 = p0;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l5 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 27024u;
  i2 = 26964u;
  i3 = p0;
  i4 = 1u;
  i3 = i3 == i4;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = l3;
  i2 = l4;
  i3 = p2;
  i2 = DIV_U(i2, i3);
  p0 = i2;
  i1 += i2;
  l3 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = l5;
  i2 = l3;
  i1 *= i2;
  i1 = m_malloc(i1);
  l3 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l3;
  i1 = l2;
  i2 = l1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l1;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p0;
  i3 = p2;
  i2 *= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 26904u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = p2;
  i0 = array_extend(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B3:;
  i0 = p2;
  i1 = l0;
  i2 = 1u;
  i0 = mp_get_buffer(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = 14u;
  l1 = i0;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 27024u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 64u;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 127u;
  i1 &= i2;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l1 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 *= i1;
  p2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 26904u;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  i0 = p0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i2 = l1;
  i1 *= i2;
  i0 += i1;
  p0 = i0;
  B9:;
  i0 = p0;
  i1 = p2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  i4 = 1u;
  i0 = find_subbytes(i0, i1, i2, i3, i4);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B8:;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B10;}
  i0 = 14u;
  l1 = i0;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  i0 = p1;
  i1 = 32832u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B10:;
  i0 = 0u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  B2:;
  i0 = p0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i2 = l2;
  i1 *= i2;
  i0 += i1;
  p0 = i0;
  i0 = 14u;
  l1 = i0;
  i0 = p2;
  i1 = l0;
  i2 = 1u;
  i0 = mp_get_buffer(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = 2u;
  i1 = p0;
  i2 = l3;
  i3 = l2;
  i2 *= i3;
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3));
  i4 = l0;
  i4 = i32_load((&M0), (u64)(i4 + 4));
  i0 = mp_seq_cmp_bytes(i0, i1, i2, i3, i4);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 array_extend(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = l0;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = 64u;
  i1 = p0;
  i1 = i32_load8_s((&M0), (u64)(i1 + 4));
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 8u;
  i0 >>= (i1 & 31);
  l2 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = p1;
  i1 = DIV_U(i1, i2);
  l3 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = l3;
  i2 += i3;
  i3 = p1;
  i2 *= i3;
  i1 = m_realloc(i1, i2);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l2 = i0;
  goto B0;
  B1:;
  i0 = l2;
  i1 = l3;
  i0 -= i1;
  i1 = 8u;
  i0 <<= (i1 & 31);
  i1 = l1;
  i2 = 255u;
  i1 &= i2;
  i0 |= i1;
  l2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  B0:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  p0 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i1 *= i2;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l3;
  i3 = p1;
  i2 *= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l3;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 array_subscr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  u64 l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B7;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35484u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  B7:;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p1;
  i3 = 0u;
  i0 = mp_get_index(i0, i1, i2, i3);
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 26904u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  goto B3;
  B6:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B5:;
  i0 = l2;
  i1 = 8u;
  i0 >>= (i1 & 31);
  i1 = p1;
  i0 += i1;
  p1 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = l2;
  i1 = 128u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B3;
  B4:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_seq_get_fast_slice_indexes(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = 64u;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 127u;
  i1 &= i2;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  p1 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B14;}
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B9;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  i1 = 12u;
  i0 = i0 == i1;
  if (i0) {goto B13;}
  i0 = l2;
  i1 = 35852u;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  i0 = p1;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  i0 = p2;
  i1 = l0;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l4 = i0;
  goto B12;
  B14:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 26904u;
  i0 = i0 == i1;
  if (i0) {goto B11;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l4 = i0;
  i0 = 64u;
  i1 = p0;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  l2 = i1;
  i2 = 24u;
  i1 <<= (i2 & 31);
  i2 = 24u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l3 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 27024u;
  i2 = 26964u;
  i3 = l2;
  i4 = 1u;
  i3 = i3 == i4;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l4;
  i2 = l1;
  i1 -= i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = l3;
  i2 = l2;
  i1 *= i2;
  i1 = m_malloc(i1);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 16));
  p0 = i2;
  i3 = p1;
  i2 *= i3;
  i1 += i2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 20));
  i3 = p0;
  i2 -= i3;
  i3 = p1;
  i2 *= i3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B13:;
  i0 = p1;
  i1 = 64u;
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 127u;
  i2 &= i3;
  i3 = 0u;
  i1 = mp_binary_get_size(i1, i2, i3);
  i0 = i0 != i1;
  if (i0) {goto B8;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l4 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 26904u;
  i0 = i0 != i1;
  if (i0) {goto B12;}
  i0 = l3;
  i1 = p2;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i2 = p1;
  i1 *= i2;
  i0 += i1;
  l3 = i0;
  B12:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l5 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  l1 = i1;
  i0 -= i1;
  i1 = l4;
  i0 += i1;
  p2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 26904u;
  i0 = i0 == i1;
  if (i0) {goto B17;}
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B16;}
  i0 = p2;
  i1 = p0;
  i2 = 4u;
  i1 += i2;
  l6 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i0 = i0 <= i1;
  if (i0) {goto B18;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = l2;
  i2 = p0;
  i3 = 8u;
  i2 += i3;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = p2;
  i2 += i3;
  i3 = p1;
  i2 *= i3;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l6;
  i1 = l6;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i2 = p2;
  i3 = 8u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l5 = i0;
  B18:;
  i0 = l2;
  i1 = l5;
  i2 = l4;
  i1 += i2;
  l5 = i1;
  i2 = p1;
  i1 *= i2;
  i0 += i1;
  i1 = l2;
  i2 = l1;
  i3 = p1;
  i2 *= i3;
  i1 += i2;
  i2 = p2;
  i3 = l5;
  i2 -= i3;
  i3 = p0;
  i4 = 8u;
  i3 += i4;
  i3 = i32_load((&M0), (u64)(i3));
  i2 += i3;
  i3 = p1;
  i2 *= i3;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i2 = p1;
  i1 *= i2;
  i0 += i1;
  i1 = l3;
  i2 = l4;
  i3 = p1;
  i2 *= i3;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  goto B15;
  B17:;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l6 = i0;
  i1 = 128u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  if (i0) {goto B8;}
  i0 = l2;
  i1 = l6;
  i2 = 8u;
  i1 >>= (i2 & 31);
  i2 = p1;
  i1 *= i2;
  i0 += i1;
  l2 = i0;
  B16:;
  i0 = l2;
  i1 = l5;
  i2 = p1;
  i1 *= i2;
  i0 += i1;
  i1 = l3;
  i2 = l4;
  i3 = p1;
  i2 *= i3;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i2 = l4;
  i1 += i2;
  i2 = p1;
  i1 *= i2;
  i0 += i1;
  i1 = l2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 20));
  l1 = i2;
  i3 = p1;
  i2 *= i3;
  i1 += i2;
  i2 = p0;
  i3 = 8u;
  i2 += i3;
  l4 = i2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = l1;
  i2 -= i3;
  i3 = p1;
  i2 *= i3;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = l4;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p2;
  i1 += i2;
  i2 = p1;
  i1 *= i2;
  i0 += i1;
  i1 = 0u;
  i2 = p2;
  i3 = 0u;
  i4 = p1;
  i3 -= i4;
  i2 *= i3;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  B15:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  p1 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p2;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  p0 = i1;
  i2 = p2;
  i3 = 8u;
  i2 <<= (i3 & 31);
  i1 -= i2;
  i2 = 4294967040u;
  i1 &= i2;
  i2 = p0;
  i3 = 255u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  goto B2;
  B11:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l7 = j0;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 16));
  p0 = i2;
  i3 = 8u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  p1 = i0;
  j1 = l7;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  i2 = p0;
  i1 -= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B10:;
  i0 = 14056u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  B9:;
  i0 = 14664u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  B8:;
  i0 = 14391u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B3:;
  i0 = l2;
  i1 = 127u;
  i0 &= i1;
  l2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l2;
  i1 = p0;
  i2 = p1;
  i3 = p2;
  mp_binary_set_val_array(i0, i1, i2, i3);
  B2:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B1:;
  i0 = l2;
  i1 = p0;
  i2 = p1;
  i0 = mp_binary_get_val_array(i0, i1, i2);
  l1 = i0;
  B0:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 array_iterator_new(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 27144u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  l0 = i0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 26904u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 array_get_buffer(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 0u;
  l0 = i0;
  i0 = 64u;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 127u;
  i1 &= i2;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l1 = i0;
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = l1;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i1 *= i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 127u;
  i1 &= i2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 26904u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = p2;
  i1 = 2u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 1u;
  l0 = i0;
  i0 = p0;
  i1 = 128u;
  i0 &= i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = l2;
  i2 = p0;
  i3 = 8u;
  i2 >>= (i3 & 31);
  i3 = l1;
  i2 *= i3;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 bytearray_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = p1;
  i1 = p2;
  i2 = 6u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B2:;
  i0 = 1u;
  i1 = p1;
  i0 = array_construct(i0, i1);
  goto Bfunc;
  B1:;
  i0 = 64u;
  i1 = 1u;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = 27024u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  j1 = 1ull;
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = p1;
  i1 = 0u;
  i1 = m_malloc(i1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = p1;
  i0 = mp_obj_get_int(i0);
  p2 = i0;
  i0 = 64u;
  i1 = 1u;
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  p3 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 27024u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = p3;
  i2 = p2;
  i1 *= i2;
  i1 = m_malloc(i1);
  p3 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p3;
  i1 = 0u;
  i2 = p2;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 memoryview_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 131074u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p2 = i0;
  i0 = 64u;
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 8));
  l1 = i1;
  i2 = 24u;
  i1 <<= (i2 & 31);
  i2 = 24u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 26904u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = p2;
  i2 = l2;
  i1 = DIV_U(i1, i2);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 3u;
  i0 = mp_get_buffer(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  p3 = i0;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 128u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 array_append(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 256u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = 64u;
  i1 = l0;
  i2 = 24u;
  i1 <<= (i2 & 31);
  i2 = 24u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = 0u;
  i0 = mp_binary_get_size(i0, i1, i2);
  l0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i1 = l1;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i2 = 2048u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = l0;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 8));
  i4 = 8u;
  i3 += i4;
  i2 *= i3;
  i1 = m_realloc(i1, i2);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l2;
  i1 = l0;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = 1u;
  i2 += i3;
  i1 *= i2;
  i0 += i1;
  i1 = 0u;
  i2 = l0;
  i3 = l1;
  i3 = i32_load((&M0), (u64)(i3));
  i4 = 8u;
  i3 >>= (i4 & 31);
  i4 = 4294967295u;
  i3 += i4;
  i2 *= i3;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B0:;
  i0 = l0;
  i1 = 24u;
  i0 <<= (i1 & 31);
  i1 = 24u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = p0;
  i2 = 12u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p0;
  i3 = 8u;
  i2 += i3;
  l0 = i2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = p1;
  mp_binary_set_val_array(i0, i1, i2, i3);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967040u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 array_it_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l2 = i1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = l1;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 127u;
  i0 &= i1;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = l1;
  i2 += i3;
  i0 = mp_binary_get_val_array(i0, i1, i2);
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_attrtuple_print_helper(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 10075u;
  i0 = mp_print_str(i0, i1);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  L1: vm_checktime();
    i0 = l2;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = p0;
    i1 = 11274u;
    i0 = mp_print_str(i0, i1);
    B2:;
    i0 = l0;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 12032u;
    i2 = l0;
    i0 = mp_printf(i0, i1, i2);
    i0 = p0;
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    mp_obj_print_helper(i0, i1, i2);
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = p2;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = i0 < i1;
    if (i0) {goto L1;}
  B0:;
  i0 = p0;
  i1 = 12702u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void mp_obj_attrtuple_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = p0;
  i1 = 10075u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i0 = 0u;
  l3 = i0;
  L1: vm_checktime();
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = p0;
    i1 = 11274u;
    i0 = mp_print_str(i0, i1);
    B2:;
    i0 = l0;
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 12032u;
    i2 = l0;
    i0 = mp_printf(i0, i1, i2);
    i0 = p0;
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    mp_obj_print_helper(i0, i1, i2);
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = l2;
    i1 = 4u;
    i0 += i1;
    l2 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i1 = p1;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = i0 < i1;
    if (i0) {goto L1;}
  B0:;
  i0 = p0;
  i1 = 12702u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void mp_obj_attrtuple_attr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i1 = l0;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = 0u;
  l2 = i0;
  L2: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p1;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto L2;}
    goto B0;
  B1:;
  i0 = p2;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void bool_print(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p2;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 10077u;
  i0 = mp_print_str(i0, i1);
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 12036u;
  i0 = mp_print_str(i0, i1);
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = 11277u;
  i0 = mp_print_str(i0, i1);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 12704u;
  i0 = mp_print_str(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 bool_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 30u;
  i1 = 14u;
  i2 = p3;
  i2 = i32_load((&M0), (u64)(i2));
  i2 = mp_obj_is_true(i2);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B0:;
  i0 = 14u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 bool_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = 14u;
  i1 = i1 != i2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 1u;
  i1 |= i2;
  i0 = mp_unary_op(i0, i1);
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 bool_binary_op(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i2 = 14u;
  i1 = i1 != i2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 1u;
  i1 |= i2;
  i2 = p2;
  i0 = mp_binary_op(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_call_method_self_n_kw(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p3;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = p2;
  i0 += i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  l0 = i0;
  i1 = 4u;
  i0 += i1;
  i0 = mp_pystack_alloc(i0);
  l1 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = p4;
  i2 = l0;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p2;
  i2 = 1u;
  i1 += i2;
  i2 = p3;
  i3 = l1;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  p2 = i0;
  i0 = 0u;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 5132), i1);
  i0 = p2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_bound_meth(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 12u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 27324u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 bound_meth_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = p2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = p1;
  i0 += i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  l2 = i0;
  i1 = 4u;
  i0 += i1;
  i0 = mp_pystack_alloc(i0);
  p0 = i0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p3;
  i2 = l2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = p1;
  i2 = 1u;
  i1 += i2;
  i2 = p2;
  i3 = p0;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  p1 = i0;
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5132), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static void bound_meth_attr(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B0;}
  goto Bfunc;
  B0:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = p2;
  mp_load_method_maybe(i0, i1, i2);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_cell_get(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_cell_set(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  FUNC_EPILOGUE;
}

static u32 mp_obj_new_cell(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 8u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 27384u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 closure_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = p1;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i0 += i1;
  l3 = i0;
  i1 = 5u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p0;
  i2 = 12u;
  i1 += i2;
  i2 = l2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  l2 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i1 += i2;
  i2 = p2;
  i3 = l0;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l3;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i0 = m_malloc(i0);
  l2 = i0;
  i1 = p0;
  i2 = 12u;
  i1 += i2;
  i2 = p0;
  i3 = 8u;
  i2 += i3;
  l3 = i2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i1 += i2;
  i2 = p2;
  i3 = l2;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  p0 = i0;
  i0 = l2;
  m_free(i0);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_closure(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  l0 = i0;
  i1 = 12u;
  i0 += i1;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = 27444u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = 12u;
  i0 += i1;
  i1 = p2;
  i2 = l0;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static f64 log_0(f64 p0) {
  u32 l1 = 0, l2 = 0;
  u64 l0 = 0, l3 = 0;
  f64 l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9, d10;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 0ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B3;}
  j0 = l0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i1 = 1048575u;
  i0 = i0 <= i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 2146435071u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = 4294966273u;
  l2 = i0;
  j0 = l0;
  j1 = 4294967295ull;
  j0 &= j1;
  l0 = j0;
  j1 = 0ull;
  i0 = j0 != j1;
  if (i0) {goto B2;}
  d0 = 0;
  p0 = d0;
  i0 = l1;
  i1 = 1072693248u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  B4:;
  d0 = p0;
  goto Bfunc;
  B3:;
  j0 = l0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 0ull;
  i0 = j0 == j1;
  if (i0) {goto B1;}
  j0 = l0;
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B0;}
  d0 = p0;
  d1 = 18014398509481984;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  j0 = i64_reinterpret_f64(d0);
  l3 = j0;
  j1 = 4294967295ull;
  j0 &= j1;
  l0 = j0;
  j0 = l3;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i0 = 4294966219u;
  l2 = i0;
  B2:;
  i0 = l2;
  i1 = l1;
  i2 = 614242u;
  i1 += i2;
  l1 = i1;
  i2 = 20u;
  i1 >>= (i2 & 31);
  i0 += i1;
  d0 = (f64)(s32)(i0);
  l4 = d0;
  d1 = 0.69314718036912382;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l1;
  i2 = 1048575u;
  i1 &= i2;
  i2 = 1072079006u;
  i1 += i2;
  j1 = (u64)(i1);
  j2 = 32ull;
  j1 <<= (j2 & 63);
  j2 = l0;
  j1 |= j2;
  d1 = f64_reinterpret_i64(j1);
  d2 = -1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = l4;
  d3 = 1.9082149292705877e-10;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = p0;
  d4 = p0;
  d5 = 2;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d3, d4);
  l4 = d3;
  d4 = p0;
  d5 = p0;
  d6 = 0.5;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  l5 = d4;
  d5 = l4;
  d6 = l4;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  l4 = d5;
  d6 = l4;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  p0 = d5;
  d6 = p0;
  d7 = p0;
  d8 = 0.15313837699209373;
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.22222198432149784;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.39999999999409419;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = l4;
  d7 = p0;
  d8 = p0;
  d9 = p0;
  d10 = 0.14798198605116586;
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = 0.1818357216161805;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 0.28571428743662391;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.66666666666667351;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d3 = l5;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  d0 = -1;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 atan_0(f64 p0) {
  u32 l0 = 0, l2 = 0, l3 = 0, l4 = 0;
  u64 l1 = 0;
  f64 l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  f32 f1;
  f64 d0, d1, d2, d3, d4, d5, d6;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 63ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l2 = i0;
  j0 = l1;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l3 = i0;
  i1 = 1141899264u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  j0 = l1;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = -1.5707963267948966;
  d1 = 1.5707963267948966;
  i2 = l2;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B3:;
  i0 = l3;
  i1 = 1071382527u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = 4294967295u;
  l4 = i0;
  i0 = l3;
  i1 = 1044381695u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = l3;
  i1 = 1048575u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l0;
  d1 = p0;
  f1 = (*Z_eosio_injectionZ__eosio_f64_demoteZ_fd)(d1);
  f32_store((&M0), (u64)(i0 + 12), f1);
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B1:;
  d0 = p0;
  d0 = fabs_0(d0);
  p0 = d0;
  i0 = l3;
  i1 = 1072889855u;
  i0 = i0 > i1;
  if (i0) {goto B6;}
  i0 = l3;
  i1 = 1072037887u;
  i0 = i0 > i1;
  if (i0) {goto B5;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p0;
  d2 = 2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p0 = d0;
  i0 = 0u;
  l4 = i0;
  goto B0;
  B6:;
  i0 = l3;
  i1 = 1073971199u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  d0 = p0;
  d1 = -1.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p0;
  d2 = 1.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p0 = d0;
  i0 = 2u;
  l4 = i0;
  goto B0;
  B5:;
  d0 = p0;
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p0;
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p0 = d0;
  i0 = 1u;
  l4 = i0;
  goto B0;
  B4:;
  d0 = -1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p0 = d0;
  i0 = 3u;
  l4 = i0;
  B0:;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l5 = d0;
  d1 = l5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  d1 = l6;
  d2 = l6;
  d3 = l6;
  d4 = l6;
  d5 = -0.036531572744216916;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -0.058335701337905735;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = -0.0769187620504483;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.11111110405462356;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -0.19999999999876483;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l7 = d0;
  d0 = l5;
  d1 = l6;
  d2 = l6;
  d3 = l6;
  d4 = l6;
  d5 = l6;
  d6 = 0.016285820115365782;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.049768779946159324;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.066610731373875312;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.090908871334365066;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 0.14285714272503466;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 0.33333333333332932;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  i0 = l4;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B7;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  i1 = 3u;
  i0 <<= (i1 & 31);
  l3 = i0;
  i1 = 27504u;
  i0 += i1;
  d0 = f64_load((&M0), (u64)(i0));
  d1 = p0;
  d2 = l7;
  d3 = l6;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i2 = l3;
  i3 = 27536u;
  i2 += i3;
  d2 = f64_load((&M0), (u64)(i2));
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p0 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = p0;
  i2 = l2;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B7:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = p0;
  d2 = l7;
  d3 = l6;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 atan2_0(f64 p0, f64 p1) {
  u32 l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  u64 l0 = 0, l1 = 0;
  f64 l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2;
  f64 d0, d1, d2;
  d0 = p1;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B0;}
  B1:;
  d0 = p0;
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  j0 = l0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l2 = i0;
  i1 = 3222274048u;
  i0 += i1;
  j1 = l0;
  i1 = (u32)(j1);
  l3 = i1;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B12;}
  j0 = l0;
  j1 = 62ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2u;
  i0 &= i1;
  l4 = i0;
  j1 = l1;
  j2 = 63ull;
  j1 >>= (j2 & 63);
  i1 = (u32)(j1);
  l5 = i1;
  i0 |= i1;
  l6 = i0;
  j0 = l1;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l7 = i0;
  j1 = l1;
  i1 = (u32)(j1);
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l2;
  i1 = 2147483647u;
  i0 &= i1;
  l2 = i0;
  i1 = l3;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = l2;
  i1 = 2146435072u;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  i0 = l6;
  i1 = 2u;
  i0 ^= i1;
  i1 = 3u;
  i0 &= i1;
  l2 = i0;
  i0 = l7;
  i1 = 2146435072u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  i0 = l2;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 27568u;
  i0 += i1;
  d0 = f64_load((&M0), (u64)(i0));
  goto Bfunc;
  B12:;
  d0 = p0;
  d0 = atan_0(d0);
  goto Bfunc;
  B11:;
  i0 = l6;
  i1 = 3u;
  i0 &= i1;
  l2 = i0;
  i1 = 3u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = l2;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  d0 = p0;
  goto Bfunc;
  B10:;
  d0 = -1.5707963267948966;
  d1 = 1.5707963267948966;
  i2 = l5;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B9:;
  i0 = l7;
  i1 = 2146435072u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = l2;
  i1 = 67108864u;
  i0 += i1;
  i1 = l7;
  i0 = i0 < i1;
  if (i0) {goto B7;}
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B14;}
  d0 = 0;
  l8 = d0;
  i0 = l7;
  i1 = 67108864u;
  i0 += i1;
  i1 = l2;
  i0 = i0 < i1;
  if (i0) {goto B13;}
  B14:;
  d0 = p0;
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d0 = fabs_0(d0);
  d0 = atan_0(d0);
  l8 = d0;
  B13:;
  i0 = l6;
  i1 = 3u;
  i0 &= i1;
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = l2;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  d0 = l8;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  goto Bfunc;
  B8:;
  i0 = l2;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 27600u;
  i0 += i1;
  d0 = f64_load((&M0), (u64)(i0));
  goto Bfunc;
  B7:;
  d0 = -1.5707963267948966;
  d1 = 1.5707963267948966;
  i2 = l5;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B6:;
  d0 = -3.1415926535897931;
  goto Bfunc;
  B5:;
  d0 = 3.1415926535897931;
  goto Bfunc;
  B4:;
  d0 = l8;
  goto Bfunc;
  B3:;
  d0 = 3.1415926535897931;
  d1 = l8;
  d2 = -1.2246467991473532e-16;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B2:;
  d0 = l8;
  d1 = -1.2246467991473532e-16;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = -3.1415926535897931;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 exp_0(f64 p0) {
  u32 l0 = 0, l2 = 0, l3 = 0;
  u64 l1 = 0;
  f64 l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  f32 f1;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 63ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l2 = i0;
  j0 = l1;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l3 = i0;
  i1 = 1082532651u;
  i0 = i0 < i1;
  if (i0) {goto B9;}
  j0 = l1;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 <= j1;
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B9:;
  i0 = l3;
  i1 = 1071001155u;
  i0 = i0 < i1;
  if (i0) {goto B7;}
  i0 = l3;
  i1 = 1072734898u;
  i0 = i0 >= i1;
  if (i0) {goto B5;}
  i0 = l2;
  i1 = 1u;
  i0 ^= i1;
  i1 = l2;
  i0 -= i1;
  l3 = i0;
  goto B2;
  B8:;
  d0 = p0;
  d1 = 709.78271289338397;
  i0 = (*Z_eosio_injectionZ__eosio_f64_gtZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B6;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = 8.9884656743115795e+307;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B7:;
  i0 = l3;
  i1 = 1043333120u;
  i0 = i0 <= i1;
  if (i0) {goto B4;}
  i0 = 0u;
  l3 = i0;
  d0 = 0;
  l4 = d0;
  d0 = p0;
  l5 = d0;
  goto B1;
  B6:;
  d0 = p0;
  d1 = -708.39641853226408;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B5;}
  i0 = l0;
  d1 = -1.4012984643248171e-45;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  f1 = (*Z_eosio_injectionZ__eosio_f64_demoteZ_fd)(d1);
  f32_store((&M0), (u64)(i0 + 12), f1);
  d0 = 0;
  l6 = d0;
  d0 = p0;
  d1 = -745.13321910194111;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B0;}
  B5:;
  d0 = p0;
  d1 = 1.4426950408889634;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 27632u;
  i1 += i2;
  d1 = f64_load((&M0), (u64)(i1));
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l6 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B3;}
  i0 = 2147483648u;
  l3 = i0;
  goto B2;
  B4:;
  i0 = l0;
  d1 = p0;
  d2 = 8.9884656743115795e+307;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0), d1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B3:;
  d0 = l6;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  l3 = i0;
  B2:;
  d0 = p0;
  i1 = l3;
  d1 = (f64)(s32)(i1);
  l6 = d1;
  d2 = -0.69314718036912382;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d1 = l6;
  d2 = 1.9082149292705877e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l4 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l5 = d0;
  B1:;
  d0 = p0;
  d1 = l5;
  d2 = l5;
  d3 = l5;
  d4 = l5;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  l6 = d3;
  d4 = l6;
  d5 = l6;
  d6 = l6;
  d7 = l6;
  d8 = 4.1381367970572385e-08;
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = -1.6533902205465252e-06;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 6.6137563214379344e-05;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -0.0027777777777015593;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.16666666666666602;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  l6 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 2;
  d3 = l6;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d2 = l4;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l6 = d0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B0;}
  d0 = l6;
  i1 = l3;
  d0 = scalbn_0(d0, i1);
  l6 = d0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = l6;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 __cos(f64 p0, f64 p1) {
  f64 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  f64 d0, d1, d2, d3, d4, d5, d6, d7;
  d0 = 1;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l0 = d1;
  d2 = 0.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l1 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l2 = d0;
  d1 = 1;
  d2 = l2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = l1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = l0;
  d3 = l0;
  d4 = l0;
  d5 = l0;
  d6 = 2.4801587289476729e-05;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -0.001388888888887411;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.041666666666666602;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = l0;
  d5 = l0;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  l1 = d4;
  d5 = l1;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = l0;
  d6 = l0;
  d7 = -1.1359647557788195e-11;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 2.0875723212981748e-09;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -2.7557314351390663e-07;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = p0;
  d4 = p1;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  FUNC_EPILOGUE;
  return d0;
}

static f64 floor_0(f64 p0) {
  u32 l0 = 0, l2 = 0;
  u64 l1 = 0;
  f64 l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  d0 = p0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B0;}
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2047u;
  i0 &= i1;
  l2 = i0;
  i1 = 1074u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  d0 = p0;
  d1 = -4503599627370496;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 4503599627370496;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p0;
  d2 = 4503599627370496;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = -4503599627370496;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  j2 = l1;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  d0 = i2 ? d0 : d1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l3 = d0;
  i0 = l2;
  i1 = 1022u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l0;
  d1 = l3;
  f64_store((&M0), (u64)(i0 + 8), d1);
  j0 = l1;
  j1 = 63ull;
  j0 = (u64)((s64)j0 >> (j1 & 63));
  i0 = (u32)(j0);
  d0 = (f64)(s32)(i0);
  goto Bfunc;
  B1:;
  d0 = l3;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d0 = l3;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_gtZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B0;}
  d0 = p0;
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  B0:;
  d0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static u32 __rem_pio2_large(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l8 = 0, 
      l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0, l15 = 0, l16 = 0, 
      l17 = 0, l18 = 0, l20 = 0, l21 = 0, l22 = 0;
  f64 l7 = 0, l19 = 0, l23 = 0, l24 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1;
  f64 d0, d1, d2, d3;
  i0 = g0;
  i1 = 560u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = p2;
  i2 = 4294967293u;
  i1 += i2;
  i2 = 24u;
  i1 = I32_DIV_S(i1, i2);
  l1 = i1;
  i2 = 0u;
  i3 = l1;
  i4 = 0u;
  i3 = (u32)((s32)i3 > (s32)i4);
  i1 = i3 ? i1 : i2;
  l2 = i1;
  i2 = 4294967272u;
  i1 *= i2;
  i0 += i1;
  l3 = i0;
  i0 = p4;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 27648u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i1 = p3;
  i2 = 4294967295u;
  i1 += i2;
  p2 = i1;
  i0 += i1;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = l4;
  i1 = p3;
  i0 += i1;
  l5 = i0;
  i0 = l2;
  i1 = p2;
  i0 -= i1;
  p2 = i0;
  i0 = l2;
  i1 = 1u;
  i0 += i1;
  i1 = p3;
  i0 -= i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 27664u;
  i0 += i1;
  l6 = i0;
  i0 = l0;
  i1 = 320u;
  i0 += i1;
  l1 = i0;
  L1: vm_checktime();
    i0 = p2;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B3;}
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0));
    d0 = (f64)(s32)(i0);
    l7 = d0;
    goto B2;
    B3:;
    d0 = 0;
    l7 = d0;
    B2:;
    i0 = l1;
    d1 = l7;
    f64_store((&M0), (u64)(i0), d1);
    i0 = l1;
    i1 = 8u;
    i0 += i1;
    l1 = i0;
    i0 = l6;
    i1 = 4u;
    i0 += i1;
    l6 = i0;
    i0 = p2;
    i1 = 1u;
    i0 += i1;
    p2 = i0;
    i0 = l5;
    i1 = 4294967295u;
    i0 += i1;
    l5 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l3;
  i1 = 4294967272u;
  i0 += i1;
  l8 = i0;
  i0 = p3;
  i1 = 0u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B5;}
  i0 = l0;
  i1 = 320u;
  i0 += i1;
  i1 = p3;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967288u;
  i0 += i1;
  l9 = i0;
  i0 = 0u;
  l5 = i0;
  L6: vm_checktime();
    d0 = 0;
    l7 = d0;
    i0 = p0;
    p2 = i0;
    i0 = p3;
    l6 = i0;
    i0 = l9;
    l1 = i0;
    L7: vm_checktime();
      d0 = l7;
      i1 = p2;
      d1 = f64_load((&M0), (u64)(i1));
      i2 = l1;
      d2 = f64_load((&M0), (u64)(i2));
      d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
      d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
      l7 = d0;
      i0 = p2;
      i1 = 8u;
      i0 += i1;
      p2 = i0;
      i0 = l1;
      i1 = 4294967288u;
      i0 += i1;
      l1 = i0;
      i0 = l6;
      i1 = 4294967295u;
      i0 += i1;
      l6 = i0;
      if (i0) {goto L7;}
    i0 = l0;
    i1 = l5;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    d1 = l7;
    f64_store((&M0), (u64)(i0), d1);
    i0 = l9;
    i1 = 8u;
    i0 += i1;
    l9 = i0;
    i0 = l5;
    i1 = l4;
    i0 = (u32)((s32)i0 < (s32)i1);
    p2 = i0;
    i0 = l5;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    i0 = p2;
    if (i0) {goto L6;}
    goto B4;
  B5:;
  i0 = 4294967295u;
  l1 = i0;
  i0 = l0;
  p2 = i0;
  L8: vm_checktime();
    i0 = p2;
    j1 = 0ull;
    i64_store((&M0), (u64)(i0), j1);
    i0 = p2;
    i1 = 8u;
    i0 += i1;
    p2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i1 = l4;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L8;}
  B4:;
  i0 = 23u;
  i1 = l8;
  i0 -= i1;
  l10 = i0;
  i0 = 24u;
  i1 = l8;
  i0 -= i1;
  l11 = i0;
  i0 = l0;
  i1 = 480u;
  i0 += i1;
  i1 = l4;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4294967292u;
  i0 += i1;
  l12 = i0;
  i0 = l0;
  i1 = 8u;
  i0 |= i1;
  l13 = i0;
  i0 = l0;
  i1 = 480u;
  i0 += i1;
  i1 = 4294967292u;
  i0 += i1;
  l14 = i0;
  i0 = l0;
  i1 = 4294967288u;
  i0 += i1;
  l15 = i0;
  i0 = p3;
  i1 = 0u;
  i0 = (u32)((s32)i0 > (s32)i1);
  l16 = i0;
  i0 = l4;
  l6 = i0;
  L9: vm_checktime();
    i0 = l0;
    i1 = l6;
    i2 = 3u;
    i1 <<= (i2 & 31);
    l17 = i1;
    i0 += i1;
    d0 = f64_load((&M0), (u64)(i0));
    l7 = d0;
    i0 = l6;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    l18 = i0;
    if (i0) {goto B10;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    i0 = l15;
    i1 = l17;
    i0 += i1;
    p2 = i0;
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    l1 = i0;
    L11: vm_checktime();
      d0 = l7;
      d1 = l7;
      d2 = 5.9604644775390625e-08;
      d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
      d1 = (*Z_eosio_injectionZ__eosio_f64_truncZ_dd)(d1);
      l19 = d1;
      d2 = -16777216;
      d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
      d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
      l7 = d0;
      d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
      d1 = 2147483648;
      i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
      if (i0) {goto B13;}
      i0 = 2147483648u;
      l9 = i0;
      goto B12;
      B13:;
      d0 = l7;
      i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
      l9 = i0;
      B12:;
      i0 = l1;
      i1 = l9;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l1;
      i1 = 4u;
      i0 += i1;
      l1 = i0;
      i0 = p2;
      d0 = f64_load((&M0), (u64)(i0));
      d1 = l19;
      d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
      l7 = d0;
      i0 = p2;
      i1 = 4294967288u;
      i0 += i1;
      p2 = i0;
      i0 = l5;
      i1 = 4294967295u;
      i0 += i1;
      l5 = i0;
      i1 = 1u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L11;}
    B10:;
    d0 = l7;
    i1 = l8;
    d0 = scalbn_0(d0, i1);
    l7 = d0;
    d1 = l7;
    d2 = 0.125;
    d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
    d1 = floor_0(d1);
    d2 = -8;
    d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
    d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
    l7 = d0;
    d0 = (*Z_eosio_injectionZ__eosio_f64_truncZ_dd)(d0);
    l19 = d0;
    d0 = l7;
    d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
    d1 = 2147483648;
    i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
    if (i0) {goto B22;}
    i0 = 2147483648u;
    l20 = i0;
    d0 = l7;
    d1 = l19;
    d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
    l7 = d0;
    i0 = l8;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    l21 = i0;
    i0 = !(i0);
    if (i0) {goto B21;}
    goto B20;
    B22:;
    d0 = l7;
    i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
    l20 = i0;
    d0 = l7;
    d1 = l19;
    d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
    l7 = d0;
    i0 = l8;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    l21 = i0;
    if (i0) {goto B20;}
    B21:;
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    i1 = l6;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = 4294967292u;
    i0 += i1;
    p2 = i0;
    i1 = p2;
    i1 = i32_load((&M0), (u64)(i1));
    p2 = i1;
    i2 = p2;
    i3 = l11;
    i2 = (u32)((s32)i2 >> (i3 & 31));
    p2 = i2;
    i3 = l11;
    i2 <<= (i3 & 31);
    i1 -= i2;
    l1 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = l20;
    i0 += i1;
    l20 = i0;
    i0 = l1;
    i1 = l10;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l22 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B18;}
    goto B19;
    B20:;
    i0 = l8;
    i0 = !(i0);
    if (i0) {goto B23;}
    i0 = 2u;
    l22 = i0;
    d0 = l7;
    d1 = 0.5;
    i0 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d0, d1);
    i1 = 1u;
    i0 ^= i1;
    i0 = !(i0);
    if (i0) {goto B19;}
    i0 = 0u;
    l22 = i0;
    d0 = l7;
    d1 = 0;
    i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
    if (i0) {goto B17;}
    goto B16;
    B23:;
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    i1 = l6;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = 4294967292u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 23u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l22 = i0;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B18;}
    B19:;
    i0 = l18;
    if (i0) {goto B25;}
    i0 = 0u;
    l18 = i0;
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    p2 = i0;
    i0 = l6;
    l9 = i0;
    L26: vm_checktime();
      i0 = p2;
      i0 = i32_load((&M0), (u64)(i0));
      l1 = i0;
      i0 = 16777215u;
      l5 = i0;
      i0 = l18;
      if (i0) {goto B28;}
      i0 = l1;
      i0 = !(i0);
      if (i0) {goto B27;}
      i0 = 1u;
      l18 = i0;
      i0 = 16777216u;
      l5 = i0;
      B28:;
      i0 = p2;
      i1 = l5;
      i2 = l1;
      i1 -= i2;
      i32_store((&M0), (u64)(i0), i1);
      i0 = p2;
      i1 = 4u;
      i0 += i1;
      p2 = i0;
      i0 = l9;
      i1 = 4294967295u;
      i0 += i1;
      l9 = i0;
      if (i0) {goto L26;}
      goto B24;
      B27:;
      i0 = 0u;
      l18 = i0;
      i0 = p2;
      i1 = 4u;
      i0 += i1;
      p2 = i0;
      i0 = l9;
      i1 = 4294967295u;
      i0 += i1;
      l9 = i0;
      if (i0) {goto L26;}
      goto B24;
    B25:;
    i0 = 0u;
    l18 = i0;
    B24:;
    i0 = l21;
    if (i0) {goto B31;}
    i0 = l8;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B30;}
    i0 = l8;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B31;}
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    i1 = l6;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = 4294967292u;
    i0 += i1;
    p2 = i0;
    i1 = p2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 8388607u;
    i1 &= i2;
    i32_store((&M0), (u64)(i0), i1);
    B31:;
    i0 = l20;
    i1 = 1u;
    i0 += i1;
    l20 = i0;
    i0 = l22;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B18;}
    goto B29;
    B30:;
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    i1 = l6;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = 4294967292u;
    i0 += i1;
    p2 = i0;
    i1 = p2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 4194303u;
    i1 &= i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l20;
    i1 = 1u;
    i0 += i1;
    l20 = i0;
    i0 = l22;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B18;}
    B29:;
    d0 = 1;
    d1 = l7;
    d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
    l7 = d0;
    i0 = 2u;
    l22 = i0;
    i0 = l18;
    i0 = !(i0);
    if (i0) {goto B18;}
    d0 = l7;
    d1 = 1;
    i2 = l8;
    d1 = scalbn_0(d1, i2);
    d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
    l7 = d0;
    d1 = 0;
    i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
    if (i0) {goto B16;}
    goto B17;
    B18:;
    d0 = l7;
    d1 = 0;
    i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
    if (i0) {goto B16;}
    B17:;
    d0 = l7;
    i1 = 0u;
    i2 = l8;
    i1 -= i2;
    d0 = scalbn_0(d0, i1);
    l7 = d0;
    d1 = 16777216;
    i0 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d0, d1);
    i1 = 1u;
    i0 ^= i1;
    i0 = !(i0);
    if (i0) {goto B36;}
    d0 = l7;
    d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
    d1 = 2147483648;
    i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
    if (i0) {goto B35;}
    i0 = 2147483648u;
    p2 = i0;
    goto B32;
    B36:;
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    i1 = l6;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p2 = i0;
    d0 = l7;
    d1 = l7;
    d2 = 5.9604644775390625e-08;
    d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
    l19 = d1;
    d1 = (*Z_eosio_injectionZ__eosio_f64_truncZ_dd)(d1);
    d2 = -16777216;
    d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
    d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
    l7 = d0;
    d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
    d1 = 2147483648;
    i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
    if (i0) {goto B34;}
    i0 = 2147483648u;
    l1 = i0;
    goto B33;
    B35:;
    d0 = l7;
    i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
    p2 = i0;
    goto B32;
    B34:;
    d0 = l7;
    i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
    l1 = i0;
    B33:;
    i0 = p2;
    i1 = l1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l6 = i0;
    d0 = l19;
    d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
    d1 = 2147483648;
    i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
    if (i0) {goto B38;}
    i0 = 2147483648u;
    p2 = i0;
    goto B37;
    B38:;
    d0 = l19;
    i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
    p2 = i0;
    B37:;
    i0 = l3;
    l8 = i0;
    B32:;
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    i1 = l6;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = p2;
    i32_store((&M0), (u64)(i0), i1);
    goto B15;
    B16:;
    i0 = l6;
    i1 = l4;
    i0 = (u32)((s32)i0 <= (s32)i1);
    if (i0) {goto B40;}
    i0 = l14;
    i1 = l6;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p2 = i0;
    i0 = 0u;
    l1 = i0;
    i0 = l6;
    l5 = i0;
    L41: vm_checktime();
      i0 = p2;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l1;
      i0 |= i1;
      l1 = i0;
      i0 = p2;
      i1 = 4294967292u;
      i0 += i1;
      p2 = i0;
      i0 = l5;
      i1 = 4294967295u;
      i0 += i1;
      l5 = i0;
      i1 = l4;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L41;}
    i0 = l1;
    if (i0) {goto B39;}
    B40:;
    i0 = l12;
    p2 = i0;
    i0 = l6;
    l9 = i0;
    L42: vm_checktime();
      i0 = l9;
      i1 = 1u;
      i0 += i1;
      l9 = i0;
      i0 = p2;
      i0 = i32_load((&M0), (u64)(i0));
      l1 = i0;
      i0 = p2;
      i1 = 4294967292u;
      i0 += i1;
      p2 = i0;
      i0 = l1;
      i0 = !(i0);
      if (i0) {goto L42;}
    i0 = l16;
    i0 = !(i0);
    if (i0) {goto B43;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    p2 = i0;
    i0 = l0;
    i1 = 320u;
    i0 += i1;
    i1 = p3;
    i2 = l6;
    i1 += i2;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l18 = i0;
    L44: vm_checktime();
      i0 = l0;
      i1 = 320u;
      i0 += i1;
      i1 = l6;
      i2 = p3;
      i1 += i2;
      i2 = 3u;
      i1 <<= (i2 & 31);
      i0 += i1;
      i1 = p2;
      l5 = i1;
      i2 = l2;
      i1 += i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i2 = 27664u;
      i1 += i2;
      i1 = i32_load((&M0), (u64)(i1));
      d1 = (f64)(s32)(i1);
      f64_store((&M0), (u64)(i0), d1);
      d0 = 0;
      l7 = d0;
      i0 = p0;
      p2 = i0;
      i0 = l18;
      l1 = i0;
      i0 = p3;
      l6 = i0;
      L45: vm_checktime();
        d0 = l7;
        i1 = p2;
        d1 = f64_load((&M0), (u64)(i1));
        i2 = l1;
        d2 = f64_load((&M0), (u64)(i2));
        d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
        d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
        l7 = d0;
        i0 = p2;
        i1 = 8u;
        i0 += i1;
        p2 = i0;
        i0 = l1;
        i1 = 4294967288u;
        i0 += i1;
        l1 = i0;
        i0 = l6;
        i1 = 4294967295u;
        i0 += i1;
        l6 = i0;
        if (i0) {goto L45;}
      i0 = l0;
      i1 = l5;
      i2 = 3u;
      i1 <<= (i2 & 31);
      i0 += i1;
      d1 = l7;
      f64_store((&M0), (u64)(i0), d1);
      i0 = l18;
      i1 = 8u;
      i0 += i1;
      l18 = i0;
      i0 = l5;
      i1 = 1u;
      i0 += i1;
      p2 = i0;
      i0 = l5;
      l6 = i0;
      i0 = l5;
      i1 = l9;
      i0 = (u32)((s32)i0 < (s32)i1);
      if (i0) {goto L44;}
      goto B14;
    B43:;
    i0 = l13;
    i1 = l17;
    i0 += i1;
    p2 = i0;
    i0 = l2;
    i1 = l6;
    i0 += i1;
    i1 = 2u;
    i0 <<= (i1 & 31);
    i1 = 27668u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 320u;
    i0 += i1;
    i1 = p3;
    i2 = l6;
    i1 += i2;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l5 = i0;
    L46: vm_checktime();
      i0 = p2;
      j1 = 0ull;
      i64_store((&M0), (u64)(i0), j1);
      i0 = l5;
      i1 = l1;
      i1 = i32_load((&M0), (u64)(i1));
      d1 = (f64)(s32)(i1);
      f64_store((&M0), (u64)(i0), d1);
      i0 = l1;
      i1 = 4u;
      i0 += i1;
      l1 = i0;
      i0 = p2;
      i1 = 8u;
      i0 += i1;
      p2 = i0;
      i0 = l5;
      i1 = 8u;
      i0 += i1;
      l5 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      i1 = l9;
      i0 = (u32)((s32)i0 < (s32)i1);
      if (i0) {goto L46;}
    i0 = l9;
    l6 = i0;
    goto L9;
    B39:;
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    i1 = l6;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = 4294967292u;
    i0 += i1;
    p2 = i0;
    L47: vm_checktime();
      i0 = l6;
      i1 = 4294967295u;
      i0 += i1;
      l6 = i0;
      i0 = l8;
      i1 = 4294967272u;
      i0 += i1;
      l8 = i0;
      i0 = p2;
      i0 = i32_load((&M0), (u64)(i0));
      l1 = i0;
      i0 = p2;
      i1 = 4294967292u;
      i0 += i1;
      p2 = i0;
      i0 = l1;
      i0 = !(i0);
      if (i0) {goto L47;}
    B15:;
    d0 = 1;
    i1 = l8;
    d0 = scalbn_0(d0, i1);
    l7 = d0;
    i0 = l6;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B48;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    i0 = l0;
    i1 = l6;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p2 = i0;
    i0 = l0;
    i1 = 480u;
    i0 += i1;
    i1 = l6;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l1 = i0;
    L49: vm_checktime();
      i0 = p2;
      d1 = l7;
      i2 = l1;
      i2 = i32_load((&M0), (u64)(i2));
      d2 = (f64)(s32)(i2);
      d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
      f64_store((&M0), (u64)(i0), d1);
      i0 = p2;
      i1 = 4294967288u;
      i0 += i1;
      p2 = i0;
      i0 = l1;
      i1 = 4294967292u;
      i0 += i1;
      l1 = i0;
      d0 = l7;
      d1 = 5.9604644775390625e-08;
      d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
      l7 = d0;
      i0 = l5;
      i1 = 4294967295u;
      i0 += i1;
      l5 = i0;
      i1 = 0u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L49;}
    i0 = l6;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B48;}
    i0 = l0;
    i1 = l6;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l9 = i0;
    i0 = l6;
    p2 = i0;
    L50: vm_checktime();
      i0 = l6;
      i1 = p2;
      p3 = i1;
      i0 -= i1;
      l18 = i0;
      d0 = 0;
      l7 = d0;
      i0 = 0u;
      p2 = i0;
      i0 = 0u;
      l1 = i0;
      L52: vm_checktime();
        d0 = l7;
        i1 = p2;
        i2 = 30432u;
        i1 += i2;
        d1 = f64_load((&M0), (u64)(i1));
        i2 = l9;
        i3 = p2;
        i2 += i3;
        d2 = f64_load((&M0), (u64)(i2));
        d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
        d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
        l7 = d0;
        i0 = l1;
        i1 = l4;
        i0 = (u32)((s32)i0 >= (s32)i1);
        if (i0) {goto B51;}
        i0 = p2;
        i1 = 8u;
        i0 += i1;
        p2 = i0;
        i0 = l1;
        i1 = l18;
        i0 = i0 < i1;
        l5 = i0;
        i0 = l1;
        i1 = 1u;
        i0 += i1;
        l1 = i0;
        i0 = l5;
        if (i0) {goto L52;}
      B51:;
      i0 = l0;
      i1 = 160u;
      i0 += i1;
      i1 = l18;
      i2 = 3u;
      i1 <<= (i2 & 31);
      i0 += i1;
      d1 = l7;
      f64_store((&M0), (u64)(i0), d1);
      i0 = l9;
      i1 = 4294967288u;
      i0 += i1;
      l9 = i0;
      i0 = p3;
      i1 = 4294967295u;
      i0 += i1;
      p2 = i0;
      i0 = p3;
      i1 = 0u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L50;}
    B48:;
    i0 = p4;
    i1 = 4294967295u;
    i0 += i1;
    i1 = 2u;
    i0 = i0 < i1;
    if (i0) {goto B60;}
    i0 = p4;
    i0 = !(i0);
    if (i0) {goto B59;}
    i0 = p4;
    i1 = 3u;
    i0 = i0 != i1;
    if (i0) {goto B53;}
    d0 = 0;
    l23 = d0;
    i0 = l6;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B61;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 160u;
    i0 += i1;
    i1 = l6;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l5 = i0;
    i1 = 4294967288u;
    i0 += i1;
    p2 = i0;
    i0 = l5;
    d0 = f64_load((&M0), (u64)(i0));
    l7 = d0;
    L62: vm_checktime();
      i0 = p2;
      i1 = p2;
      d1 = f64_load((&M0), (u64)(i1));
      l24 = d1;
      d2 = l7;
      d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
      l19 = d1;
      f64_store((&M0), (u64)(i0), d1);
      i0 = p2;
      i1 = 8u;
      i0 += i1;
      d1 = l7;
      d2 = l24;
      d3 = l19;
      d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
      d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
      f64_store((&M0), (u64)(i0), d1);
      i0 = p2;
      i1 = 4294967288u;
      i0 += i1;
      p2 = i0;
      d0 = l19;
      l7 = d0;
      i0 = l1;
      i1 = 4294967295u;
      i0 += i1;
      l1 = i0;
      i1 = 1u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L62;}
    i0 = l6;
    i1 = 2u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B61;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 160u;
    i0 += i1;
    i1 = l6;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l5 = i0;
    i1 = 4294967288u;
    i0 += i1;
    p2 = i0;
    i0 = l5;
    d0 = f64_load((&M0), (u64)(i0));
    l7 = d0;
    L63: vm_checktime();
      i0 = p2;
      i1 = p2;
      d1 = f64_load((&M0), (u64)(i1));
      l24 = d1;
      d2 = l7;
      d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
      l19 = d1;
      f64_store((&M0), (u64)(i0), d1);
      i0 = p2;
      i1 = 8u;
      i0 += i1;
      d1 = l7;
      d2 = l24;
      d3 = l19;
      d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
      d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
      f64_store((&M0), (u64)(i0), d1);
      i0 = p2;
      i1 = 4294967288u;
      i0 += i1;
      p2 = i0;
      d0 = l19;
      l7 = d0;
      i0 = l1;
      i1 = 4294967295u;
      i0 += i1;
      l1 = i0;
      i1 = 2u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L63;}
    i0 = l6;
    i1 = 2u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B61;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 160u;
    i0 += i1;
    i1 = l6;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p2 = i0;
    d0 = 0;
    l23 = d0;
    L64: vm_checktime();
      d0 = l23;
      i1 = p2;
      d1 = f64_load((&M0), (u64)(i1));
      d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
      l23 = d0;
      i0 = p2;
      i1 = 4294967288u;
      i0 += i1;
      p2 = i0;
      i0 = l1;
      i1 = 4294967295u;
      i0 += i1;
      l1 = i0;
      i1 = 2u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L64;}
    B61:;
    i0 = l0;
    d0 = f64_load((&M0), (u64)(i0 + 160));
    l7 = d0;
    i0 = l22;
    i0 = !(i0);
    if (i0) {goto B56;}
    i0 = p1;
    d1 = l7;
    d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
    f64_store((&M0), (u64)(i0), d1);
    i0 = p1;
    i1 = l0;
    d1 = f64_load((&M0), (u64)(i1 + 168));
    d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
    f64_store((&M0), (u64)(i0 + 8), d1);
    i0 = p1;
    d1 = l23;
    d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
    f64_store((&M0), (u64)(i0 + 16), d1);
    goto B53;
    B60:;
    i0 = l6;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B58;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 160u;
    i0 += i1;
    i1 = l6;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p2 = i0;
    d0 = 0;
    l7 = d0;
    L65: vm_checktime();
      d0 = l7;
      i1 = p2;
      d1 = f64_load((&M0), (u64)(i1));
      d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
      l7 = d0;
      i0 = p2;
      i1 = 4294967288u;
      i0 += i1;
      p2 = i0;
      i0 = l1;
      i1 = 4294967295u;
      i0 += i1;
      l1 = i0;
      i1 = 0u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L65;}
      goto B57;
    B59:;
    i0 = l6;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B55;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 160u;
    i0 += i1;
    i1 = l6;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p2 = i0;
    d0 = 0;
    l7 = d0;
    L66: vm_checktime();
      d0 = l7;
      i1 = p2;
      d1 = f64_load((&M0), (u64)(i1));
      d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
      l7 = d0;
      i0 = p2;
      i1 = 4294967288u;
      i0 += i1;
      p2 = i0;
      i0 = l1;
      i1 = 4294967295u;
      i0 += i1;
      l1 = i0;
      i1 = 0u;
      i0 = (u32)((s32)i0 > (s32)i1);
      if (i0) {goto L66;}
      goto B54;
    B58:;
    d0 = 0;
    l7 = d0;
    B57:;
    i0 = p1;
    d1 = l7;
    d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
    d2 = l7;
    i3 = l22;
    d1 = i3 ? d1 : d2;
    f64_store((&M0), (u64)(i0), d1);
    i0 = l0;
    d0 = f64_load((&M0), (u64)(i0 + 160));
    d1 = l7;
    d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
    l7 = d0;
    i0 = l6;
    i1 = 1u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B67;}
    i0 = l0;
    i1 = 160u;
    i0 += i1;
    i1 = 8u;
    i0 |= i1;
    p2 = i0;
    L68: vm_checktime();
      d0 = l7;
      i1 = p2;
      d1 = f64_load((&M0), (u64)(i1));
      d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
      l7 = d0;
      i0 = p2;
      i1 = 8u;
      i0 += i1;
      p2 = i0;
      i0 = l6;
      i1 = 4294967295u;
      i0 += i1;
      l6 = i0;
      if (i0) {goto L68;}
    B67:;
    i0 = p1;
    d1 = l7;
    d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
    d2 = l7;
    i3 = l22;
    d1 = i3 ? d1 : d2;
    f64_store((&M0), (u64)(i0 + 8), d1);
    goto B53;
    B56:;
    i0 = p1;
    d1 = l7;
    f64_store((&M0), (u64)(i0), d1);
    i0 = p1;
    i1 = l0;
    j1 = i64_load((&M0), (u64)(i1 + 168));
    i64_store((&M0), (u64)(i0 + 8), j1);
    i0 = p1;
    d1 = l23;
    f64_store((&M0), (u64)(i0 + 16), d1);
    goto B53;
    B55:;
    d0 = 0;
    l7 = d0;
    B54:;
    i0 = p1;
    d1 = l7;
    d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
    d2 = l7;
    i3 = l22;
    d1 = i3 ? d1 : d2;
    f64_store((&M0), (u64)(i0), d1);
    B53:;
    i0 = l0;
    i1 = 560u;
    i0 += i1;
    g0 = i0;
    i0 = l20;
    i1 = 7u;
    i0 &= i1;
    goto Bfunc;
    B14:;
    i0 = l9;
    l6 = i0;
    goto L9;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 __rem_pio2(f64 p0, u32 p1) {
  u32 l0 = 0, l2 = 0, l3 = 0, l4 = 0, l8 = 0;
  u64 l1 = 0;
  f64 l5 = 0, l6 = 0, l7 = 0, l9 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2;
  f64 d0, d1, d2, d3, d4;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 63ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l2 = i0;
  j0 = l1;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l3 = i0;
  i1 = 2147483647u;
  i0 &= i1;
  l4 = i0;
  i1 = 1074752122u;
  i0 = i0 > i1;
  if (i0) {goto B12;}
  i0 = l3;
  i1 = 1048575u;
  i0 &= i1;
  i1 = 598523u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = l4;
  i1 = 1073928572u;
  i0 = i0 > i1;
  if (i0) {goto B11;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p1;
  d1 = p0;
  d2 = 1.5707963267341256;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = 6.0771005065061922e-11;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l5 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = 6.0771005065061922e-11;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 4294967295u;
  goto Bfunc;
  B12:;
  i0 = l4;
  i1 = 1075594811u;
  i0 = i0 > i1;
  if (i0) {goto B13;}
  i0 = l4;
  i1 = 1075183036u;
  i0 = i0 > i1;
  if (i0) {goto B10;}
  i0 = l4;
  i1 = 1074977148u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  d1 = p0;
  d2 = 4.7123889802023768;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = 1.8231301519518578e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l5 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = 1.8231301519518578e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 4294967293u;
  goto Bfunc;
  B13:;
  i0 = l4;
  i1 = 1094263290u;
  i0 = i0 <= i1;
  if (i0) {goto B9;}
  i0 = l4;
  i1 = 2146435072u;
  i0 = i0 < i1;
  if (i0) {goto B8;}
  i0 = p1;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  p0 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  d1 = p0;
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B11:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p1;
  d1 = p0;
  d2 = 3.1415926534682512;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = 1.2154201013012384e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l5 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = 1.2154201013012384e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 4294967294u;
  goto Bfunc;
  B10:;
  i0 = l4;
  i1 = 1075388923u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  B9:;
  i0 = p1;
  d1 = p0;
  d2 = p0;
  d3 = 0.63661977236758138;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 6755399441055744;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d3 = -6755399441055744;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  l5 = d2;
  d3 = -1.5707963267341256;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l6 = d1;
  d2 = l5;
  d3 = 6.0771005065061922e-11;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  l7 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  p0 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = l4;
  i1 = 20u;
  i0 >>= (i1 & 31);
  l8 = i0;
  d1 = p0;
  j1 = i64_reinterpret_f64(d1);
  j2 = 52ull;
  j1 >>= (j2 & 63);
  i1 = (u32)(j1);
  i2 = 2047u;
  i1 &= i2;
  i0 -= i1;
  i1 = 17u;
  i0 = (u32)((s32)i0 < (s32)i1);
  l3 = i0;
  d0 = l5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B16;}
  i0 = 2147483648u;
  l4 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B15;}
  goto B14;
  B16:;
  d0 = l5;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  l4 = i0;
  i0 = l3;
  if (i0) {goto B14;}
  B15:;
  i0 = p1;
  d1 = l6;
  d2 = l5;
  d3 = 6.077100506303966e-11;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  p0 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  l9 = d1;
  d2 = l5;
  d3 = 2.0222662487959506e-21;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l6;
  d4 = l9;
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d4 = p0;
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  l7 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  p0 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = l8;
  d1 = p0;
  j1 = i64_reinterpret_f64(d1);
  j2 = 52ull;
  j1 >>= (j2 & 63);
  i1 = (u32)(j1);
  i2 = 2047u;
  i1 &= i2;
  i0 -= i1;
  i1 = 50u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B17;}
  i0 = p1;
  d1 = l9;
  d2 = l5;
  d3 = 2.0222662487111665e-21;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  p0 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  l6 = d1;
  d2 = l5;
  d3 = 8.4784276603688996e-32;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l9;
  d4 = l6;
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d4 = p0;
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  l7 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  p0 = d1;
  f64_store((&M0), (u64)(i0), d1);
  goto B14;
  B17:;
  d0 = l9;
  l6 = d0;
  B14:;
  i0 = p1;
  d1 = l6;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = l7;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B8:;
  i0 = l0;
  j1 = l1;
  j2 = 4503599627370495ull;
  j1 &= j2;
  j2 = 4710765210229538816ull;
  j1 |= j2;
  d1 = f64_reinterpret_i64(j1);
  p0 = d1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_truncZ_dd)(d1);
  l5 = d1;
  f64_store((&M0), (u64)(i0 + 16), d1);
  i0 = l0;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = 16777216;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  p0 = d1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_truncZ_dd)(d1);
  l5 = d1;
  f64_store((&M0), (u64)(i0 + 24), d1);
  i0 = l0;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = 16777216;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  p0 = d1;
  f64_store((&M0), (u64)(i0 + 32), d1);
  d0 = p0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 8u;
  i0 |= i1;
  l3 = i0;
  i0 = 2u;
  l8 = i0;
  L18: vm_checktime();
    i0 = l8;
    i1 = 4294967295u;
    i0 += i1;
    l8 = i0;
    i0 = l3;
    d0 = f64_load((&M0), (u64)(i0));
    p0 = d0;
    i0 = l3;
    i1 = 4294967288u;
    i0 += i1;
    l3 = i0;
    d0 = p0;
    d1 = 0;
    i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
    if (i0) {goto L18;}
    goto B2;
  B7:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  d1 = p0;
  d2 = 6.2831853069365025;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = 2.4308402026024769e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l5 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = 2.4308402026024769e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 4294967292u;
  goto Bfunc;
  B6:;
  i0 = p1;
  d1 = p0;
  d2 = -1.5707963267341256;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = -6.0771005065061922e-11;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l5 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = -6.0771005065061922e-11;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 1u;
  goto Bfunc;
  B5:;
  i0 = p1;
  d1 = p0;
  d2 = -3.1415926534682512;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = -1.2154201013012384e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l5 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = -1.2154201013012384e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 2u;
  goto Bfunc;
  B4:;
  i0 = p1;
  d1 = p0;
  d2 = -4.7123889802023768;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = -1.8231301519518578e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l5 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = -1.8231301519518578e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 3u;
  goto Bfunc;
  B3:;
  i0 = 2u;
  l8 = i0;
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = l0;
  i2 = l4;
  i3 = 20u;
  i2 >>= (i3 & 31);
  i3 = 4294966250u;
  i2 += i3;
  i3 = l8;
  i4 = 1u;
  i3 += i4;
  i4 = 1u;
  i0 = __rem_pio2_large(i0, i1, i2, i3, i4);
  l3 = i0;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  p0 = d0;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  d1 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  i1 = l3;
  i0 -= i1;
  goto Bfunc;
  B1:;
  i0 = p1;
  d1 = p0;
  d2 = -6.2831853069365025;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = -2.4308402026024769e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l5 = d1;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = -2.4308402026024769e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 4u;
  goto Bfunc;
  B0:;
  i0 = p1;
  d1 = p0;
  f64_store((&M0), (u64)(i0), d1);
  i0 = p1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static f64 __sin(f64 p0, f64 p1, u32 p2) {
  f64 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  f64 d0, d1, d2, d3, d4, d5;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l0 = d0;
  d1 = l0;
  d2 = l0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l0;
  d2 = 1.5896909952115501e-10;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -2.5050760253406863e-08;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l0;
  d2 = l0;
  d3 = 2.7557313707070068e-06;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.00019841269829857949;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 0.0083333333333224895;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l1 = d0;
  d0 = l0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l2 = d0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  d0 = p0;
  d1 = l2;
  d2 = 0.16666666666666632;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = l0;
  d3 = p1;
  d4 = 0.5;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = l2;
  d5 = l1;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = p1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  d0 = l2;
  d1 = l0;
  d2 = l1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -0.16666666666666632;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 cos_0(f64 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l1 = i0;
  i1 = 1072243195u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 1044816029u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l0;
  d1 = p0;
  d2 = 1.3292279957849159e+36;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0), d1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = 1;
  goto Bfunc;
  B2:;
  i0 = l1;
  i1 = 2146435072u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  d0 = p0;
  d1 = 0;
  d0 = __cos(d0, d1);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B0:;
  d0 = p0;
  i1 = l0;
  i0 = __rem_pio2(d0, i1);
  i1 = 3u;
  i0 &= i1;
  l1 = i0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l1;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l1;
  if (i0) {goto B3;}
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  d0 = __cos(d0, d1);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B5:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  d0 = __cos(d0, d1);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  goto Bfunc;
  B4:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  i2 = 1u;
  d0 = __sin(d0, d1, i2);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  goto Bfunc;
  B3:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  i2 = 1u;
  d0 = __sin(d0, d1, i2);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 sin_0(f64 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  f64 d0, d1, d2, d3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l1 = i0;
  i1 = 1072243195u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 1045430271u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l0;
  d1 = p0;
  d2 = 7.5231638452626401e-37;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 1.3292279957849159e+36;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  i3 = l1;
  i4 = 1048576u;
  i3 = i3 < i4;
  d1 = i3 ? d1 : d2;
  f64_store((&M0), (u64)(i0), d1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B2:;
  i0 = l1;
  i1 = 2146435072u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  d0 = p0;
  d1 = 0;
  i2 = 0u;
  d0 = __sin(d0, d1, i2);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B0:;
  d0 = p0;
  i1 = l0;
  i0 = __rem_pio2(d0, i1);
  i1 = 3u;
  i0 &= i1;
  l1 = i0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l1;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l1;
  if (i0) {goto B3;}
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  i2 = 1u;
  d0 = __sin(d0, d1, i2);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B5:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  i2 = 1u;
  d0 = __sin(d0, d1, i2);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  goto Bfunc;
  B4:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  d0 = __cos(d0, d1);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B3:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  d0 = __cos(d0, d1);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static void complex_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  f64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1;
  f64 d0, d1;
  i0 = g0;
  i1 = 80u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l1 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B0;}
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i2 = 32u;
  i3 = 103u;
  i4 = 16u;
  i5 = 0u;
  i0 = mp_format_float(d0, i1, i2, i3, i4, i5);
  i0 = l0;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 12710u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  d0 = l1;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i2 = 32u;
  i3 = 103u;
  i4 = 16u;
  i5 = 0u;
  i0 = mp_format_float(d0, i1, i2, i3, i4, i5);
  i0 = l0;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = p0;
  i1 = 13243u;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  i0 = mp_printf(i0, i1, i2);
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 16));
  l1 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d0, d1);
  if (i0) {goto B2;}
  d0 = l1;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i1 = 13697u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i1 = 16u;
  i0 += i1;
  d0 = f64_load((&M0), (u64)(i0));
  l1 = d0;
  B1:;
  d0 = l1;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i2 = 32u;
  i3 = 103u;
  i4 = 16u;
  i5 = 0u;
  i0 = mp_format_float(d0, i1, i2, i3, i4, i5);
  i0 = l0;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = p0;
  i1 = 14105u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 complex_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  u64 l2 = 0;
  f64 l1 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 4u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = p1;
  if (i0) {goto B8;}
  i0 = 24u;
  i0 = m_malloc(i0);
  p1 = i0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  i1 = 30496u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B9:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  goto B0;
  B8:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B10;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 30496u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  B10:;
  i0 = p1;
  d0 = mp_obj_get_float(i0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  l2 = j0;
  d0 = 0;
  l3 = d0;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  goto B4;
  B7:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = 36168u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 30496u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  goto B1;
  B6:;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 16));
  l3 = d0;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l2 = j0;
  d0 = f64_reinterpret_i64(j0);
  l1 = d0;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B4;}
  goto B3;
  B5:;
  i0 = p1;
  d0 = mp_obj_get_float(i0);
  l3 = d0;
  i0 = 24u;
  i0 = m_malloc(i0);
  p1 = i0;
  d1 = l3;
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = p1;
  i1 = 30496u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 30496u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  d0 = l1;
  i1 = p1;
  d1 = f64_load((&M0), (u64)(i1 + 16));
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  j0 = i64_reinterpret_f64(d0);
  l2 = j0;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l1 = d0;
  goto B2;
  B3:;
  i0 = p1;
  d0 = mp_obj_get_float(i0);
  l1 = d0;
  B2:;
  i0 = 24u;
  i0 = m_malloc(i0);
  p1 = i0;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  i1 = 30496u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  d1 = l3;
  d2 = l1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 16), d1);
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = 1u;
  i3 = 1u;
  i4 = 0u;
  i0 = mp_parse_num_decimal(i0, i1, i2, i3, i4);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 complex_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0;
  f64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0, d1, d2, d3;
  i0 = p0;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B7;}
  i0 = p1;
  l0 = i0;
  i0 = p0;
  switch (i0) {
    case 0: goto B5;
    case 1: goto B8;
    case 2: goto B7;
    case 3: goto B7;
    case 4: goto B6;
    case 5: goto B7;
    case 6: goto B4;
    case 7: goto B3;
    default: goto B5;
  }
  B8:;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 16));
  l1 = d0;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l2 = d0;
  i0 = 24u;
  i0 = m_malloc(i0);
  p1 = i0;
  d1 = l2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = p1;
  i1 = 30496u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  d1 = l1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  f64_store((&M0), (u64)(i0 + 16), d1);
  i0 = p1;
  goto Bfunc;
  B7:;
  i0 = 0u;
  goto Bfunc;
  B6:;
  i0 = 30u;
  l0 = i0;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B0;}
  B5:;
  i0 = l0;
  goto Bfunc;
  B4:;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l1 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B2;}
  i0 = 2147483648u;
  p0 = i0;
  goto B1;
  B3:;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l1 = d0;
  d1 = l1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = p1;
  d1 = f64_load((&M0), (u64)(i1 + 16));
  l1 = d1;
  d2 = l1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = sqrt_0(d0);
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B2:;
  d0 = l1;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  p0 = i0;
  B1:;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 16));
  l1 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B10;}
  i0 = 2147483648u;
  p1 = i0;
  goto B9;
  B10:;
  d0 = l1;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  p1 = i0;
  B9:;
  i0 = p1;
  i1 = p0;
  i0 ^= i1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = 14u;
  i1 = 30u;
  i2 = p1;
  d2 = f64_load((&M0), (u64)(i2 + 16));
  d3 = 0;
  i2 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d2, d3);
  i0 = i2 ? i0 : i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 complex_binary_op(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  f64 d1, d2;
  i0 = p0;
  i1 = p1;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  i2 = p1;
  d2 = f64_load((&M0), (u64)(i2 + 16));
  i3 = p2;
  i0 = mp_obj_complex_binary_op(i0, d1, d2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_complex_binary_op(u32 p0, f64 p1, f64 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  f64 l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  f64 d0, d1, d2, d3, d4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p3;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i0 = mp_obj_get_complex_maybe(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = p0;
  i1 = 4294967294u;
  i0 += i1;
  p3 = i0;
  i1 = 32u;
  i0 = i0 > i1;
  if (i0) {goto B7;}
  i0 = p3;
  switch (i0) {
    case 0: goto B8;
    case 1: goto B7;
    case 2: goto B7;
    case 3: goto B7;
    case 4: goto B7;
    case 5: goto B7;
    case 6: goto B7;
    case 7: goto B7;
    case 8: goto B7;
    case 9: goto B7;
    case 10: goto B7;
    case 11: goto B7;
    case 12: goto B12;
    case 13: goto B10;
    case 14: goto B4;
    case 15: goto B7;
    case 16: goto B2;
    case 17: goto B9;
    case 18: goto B7;
    case 19: goto B11;
    case 20: goto B7;
    case 21: goto B7;
    case 22: goto B7;
    case 23: goto B7;
    case 24: goto B7;
    case 25: goto B12;
    case 26: goto B10;
    case 27: goto B4;
    case 28: goto B7;
    case 29: goto B2;
    case 30: goto B9;
    case 31: goto B7;
    case 32: goto B11;
    default: goto B8;
  }
  B12:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  d1 = p2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l2 = d0;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l3 = d0;
  goto B3;
  B11:;
  d0 = p1;
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p2;
  d2 = p2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = sqrt_0(d0);
  l2 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B6;}
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B1;}
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  p1 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B1;}
  d0 = 1;
  d1 = 0;
  d2 = p1;
  d3 = 0;
  i2 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d2, d3);
  d0 = i2 ? d0 : d1;
  l3 = d0;
  d0 = p2;
  l2 = d0;
  goto B3;
  B10:;
  d0 = p2;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l2 = d0;
  d0 = p1;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l3 = d0;
  goto B3;
  B9:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l3 = d0;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  l2 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B5;}
  d0 = l3;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B0;}
  d0 = p2;
  d1 = l3;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l2 = d0;
  d0 = p1;
  d1 = l3;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l3 = d0;
  goto B3;
  B8:;
  i0 = 14u;
  i1 = 14u;
  i2 = 30u;
  i3 = l0;
  d3 = f64_load((&M0), (u64)(i3));
  d4 = p2;
  i3 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d3, d4);
  i1 = i3 ? i1 : i2;
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2 + 8));
  d3 = p1;
  i2 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d2, d3);
  i0 = i2 ? i0 : i1;
  l1 = i0;
  B7:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B6:;
  d0 = l2;
  d0 = log_0(d0);
  l2 = d0;
  d0 = p2;
  d1 = p1;
  d0 = atan2_0(d0, d1);
  p2 = d0;
  d0 = l2;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  p1 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p2;
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2));
  l3 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d0 = exp_0(d0);
  l4 = d0;
  d1 = p2;
  d2 = p1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = l2;
  d3 = l3;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p2 = d1;
  d1 = cos_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l3 = d0;
  d0 = l4;
  d1 = p2;
  d1 = sin_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l2 = d0;
  goto B3;
  B5:;
  d0 = l3;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B13;}
  d0 = p2;
  d1 = l2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l3 = d0;
  d0 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = l2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l2 = d0;
  goto B3;
  B13:;
  i0 = l0;
  d1 = l3;
  d2 = l2;
  d3 = l2;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l3;
  d4 = l3;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  l4 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  d1 = l2;
  d2 = l4;
  d2 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d2);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0), d1);
  B4:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l3 = d0;
  d1 = p2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  l4 = d1;
  d2 = p1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l2 = d0;
  d0 = l3;
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l4;
  d2 = p2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l3 = d0;
  B3:;
  i0 = 24u;
  i0 = m_malloc(i0);
  p3 = i0;
  d1 = l3;
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = p3;
  i1 = 30496u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  d1 = l2;
  f64_store((&M0), (u64)(i0 + 16), d1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p3;
  goto Bfunc;
  B2:;
  i0 = 10082u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B1:;
  i0 = 31692u;
  i1 = 12041u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B0:;
  i0 = 31692u;
  i1 = 11283u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void complex_attr(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  f64 d1;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 339u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 392u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = p0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  i1 = mp_obj_new_float(d1);
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = p0;
  d1 = f64_load((&M0), (u64)(i1 + 16));
  i1 = mp_obj_new_float(d1);
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_new_complex(f64 p0, f64 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  f64 d1;
  i0 = 24u;
  i0 = m_malloc(i0);
  l0 = i0;
  d1 = p0;
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 30496u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  d1 = p1;
  f64_store((&M0), (u64)(i0 + 16), d1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_complex_get(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = p1;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0), j1);
  i0 = p2;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i64_store((&M0), (u64)(i0), j1);
  FUNC_EPILOGUE;
}

static u32 mp_obj_dict_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = 30556u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i1 = 0u;
  mp_map_init(i0, i1);
  i0 = l1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 30632u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = p1;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B1;
  B2:;
  i0 = l2;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = p1;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p2;
  i2 = p3;
  i3 = p1;
  i4 = 2u;
  i3 <<= (i4 & 31);
  i2 += i3;
  mp_map_init_fixed_table(i0, i1, i2);
  i0 = p1;
  i1 = 1u;
  i0 += i1;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i0 = dict_update(i0, i1, i2);
  B0:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_update(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 >>= (i2 & 31);
  i2 = 131077u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 42u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  B4:;
  i0 = p0;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  l1 = i0;
  i0 = mp_iternext(i0);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  L5: vm_checktime();
    i0 = p0;
    i1 = 0u;
    i0 = mp_getiter(i0, i1);
    p0 = i0;
    i0 = mp_iternext(i0);
    p1 = i0;
    i0 = p0;
    i0 = mp_iternext(i0);
    l3 = i0;
    i0 = p0;
    i0 = mp_iternext(i0);
    p0 = i0;
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = p0;
    if (i0) {goto B2;}
    i0 = l2;
    i1 = p1;
    i2 = 1u;
    i0 = mp_map_lookup(i0, i1, i2);
    i1 = l3;
    i32_store((&M0), (u64)(i0 + 4), i1);
    i0 = l1;
    i0 = mp_iternext(i0);
    p0 = i0;
    if (i0) {goto L5;}
    goto B0;
  B3:;
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  i0 = 0u;
  l3 = i0;
  L6: vm_checktime();
    i0 = p0;
    i1 = 12u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l3;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p0 = i0;
    L8: vm_checktime();
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l2 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B7;}
      i0 = p0;
      i1 = 8u;
      i0 += i1;
      p0 = i0;
      i0 = l3;
      i1 = 1u;
      i0 += i1;
      l3 = i0;
      i1 = l1;
      i0 = i0 < i1;
      if (i0) {goto L8;}
      goto B0;
    B7:;
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    i0 = l4;
    i1 = l2;
    i2 = 1u;
    i0 = mp_map_lookup(i0, i1, i2);
    i1 = p0;
    i32_store((&M0), (u64)(i0 + 4), i1);
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i1 = p1;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    p0 = i1;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l1 = i1;
    i0 = i0 < i1;
    if (i0) {goto L6;}
    goto B0;
  B2:;
  i0 = 10121u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B1:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B0:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  i0 = 0u;
  p1 = i0;
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  l0 = i0;
  i0 = 4u;
  p0 = i0;
  L10: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p0;
    i0 += i1;
    l3 = i0;
    i1 = 4294967292u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 != i1;
    if (i0) {goto B11;}
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    p0 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L10;}
    goto B9;
    B11:;
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i0 = l4;
    i1 = l1;
    i2 = 1u;
    i0 = mp_map_lookup(i0, i1, i2);
    i1 = l3;
    i32_store((&M0), (u64)(i0 + 4), i1);
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    p0 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p2;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = i0 < i1;
    if (i0) {goto L10;}
  B9:;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_dict(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 30556u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  mp_map_init(i0, i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_dict_get(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  goto Bfunc;
  B0:;
  i0 = 32112u;
  i1 = p1;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_dict_copy(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = 30556u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  mp_map_init(i0, i1);
  i0 = l1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 7u;
  i1 &= i2;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 4294967288u;
  i2 &= i3;
  l0 = i2;
  i1 |= i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = l2;
  i2 = 4294967292u;
  i1 &= i2;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 1u;
  i2 &= i3;
  l2 = i2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = l2;
  i2 = l0;
  i1 |= i2;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 4u;
  i2 &= i3;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = 3u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static void dict_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = 3u;
  i0 = i0 != i1;
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 30556u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = l2;
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 11306u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  B0:;
  i0 = p0;
  i1 = 12064u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 3u;
  i1 = 1u;
  i2 = p2;
  i3 = 3u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i0 = p2;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = 0u;
  l2 = i0;
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  l5 = i0;
  i0 = 1u;
  l6 = i0;
  L3: vm_checktime();
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p2 = i0;
    L5: vm_checktime();
      i0 = p2;
      i0 = i32_load((&M0), (u64)(i0));
      l7 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B4;}
      i0 = p2;
      i1 = 8u;
      i0 += i1;
      p2 = i0;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l2 = i0;
      i1 = l3;
      i0 = i0 < i1;
      if (i0) {goto L5;}
      goto B1;
    B4:;
    i0 = p2;
    i0 = !(i0);
    if (i0) {goto B1;}
    i0 = l6;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B6;}
    i0 = p0;
    i1 = 12714u;
    i0 = mp_print_str(i0, i1);
    i0 = p2;
    i0 = i32_load((&M0), (u64)(i0));
    l7 = i0;
    B6:;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = l7;
    i1 = 7u;
    i0 &= i1;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B8;}
    i0 = l7;
    i1 = 3u;
    i0 &= i1;
    if (i0) {goto B9;}
    i0 = l7;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = i32_load((&M0), (u64)(i0 + 24));
    i1 = 5u;
    i0 = i0 == i1;
    if (i0) {goto B8;}
    B9:;
    i0 = p0;
    i1 = 13247u;
    i0 = mp_print_str(i0, i1);
    i0 = p0;
    i1 = p2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l4;
    mp_obj_print_helper(i0, i1, i2);
    i0 = p0;
    i1 = 13247u;
    i0 = mp_print_str(i0, i1);
    goto B7;
    B8:;
    i0 = p0;
    i1 = l7;
    i2 = l4;
    mp_obj_print_helper(i0, i1, i2);
    B7:;
    i0 = p0;
    i1 = 13699u;
    i0 = mp_print_str(i0, i1);
    i0 = p0;
    i1 = p2;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l4;
    mp_obj_print_helper(i0, i1, i2);
    i0 = 0u;
    l6 = i0;
    i0 = l2;
    i1 = p1;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l3 = i1;
    i0 = i0 < i1;
    if (i0) {goto L3;}
    goto B1;
  B2:;
  i0 = 0u;
  l2 = i0;
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  l5 = i0;
  i0 = 1u;
  l6 = i0;
  L10: vm_checktime();
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p2 = i0;
    L12: vm_checktime();
      i0 = p2;
      i0 = i32_load((&M0), (u64)(i0));
      l7 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B11;}
      i0 = p2;
      i1 = 8u;
      i0 += i1;
      p2 = i0;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l2 = i0;
      i1 = l3;
      i0 = i0 < i1;
      if (i0) {goto L12;}
      goto B1;
    B11:;
    i0 = p2;
    i0 = !(i0);
    if (i0) {goto B1;}
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = l6;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B13;}
    i0 = p0;
    i1 = 12714u;
    i0 = mp_print_str(i0, i1);
    i0 = p2;
    i0 = i32_load((&M0), (u64)(i0));
    l7 = i0;
    B13:;
    i0 = p0;
    i1 = l7;
    i2 = l4;
    mp_obj_print_helper(i0, i1, i2);
    i0 = p0;
    i1 = 13699u;
    i0 = mp_print_str(i0, i1);
    i0 = p0;
    i1 = p2;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l4;
    mp_obj_print_helper(i0, i1, i2);
    i0 = 0u;
    l6 = i0;
    i0 = l2;
    i1 = p1;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l3 = i1;
    i0 = i0 < i1;
    if (i0) {goto L10;}
  B1:;
  i0 = p0;
  i1 = 14110u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 30556u;
  i0 = i0 == i1;
  i1 = l1;
  i2 = 1u;
  i1 ^= i2;
  i0 |= i1;
  if (i0) {goto B14;}
  i0 = p0;
  i1 = 14424u;
  i0 = mp_print_str(i0, i1);
  B14:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 dict_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 14u;
  i1 = 30u;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 8u;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l0 = i0;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 36u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i3 = 4u;
  i2 += i3;
  i3 = p2;
  i4 = 0u;
  i2 = mp_map_lookup(i2, i3, i4);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 30632u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 30632u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  B4:;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 30556u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 ^= i1;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  l3 = i0;
  i0 = 0u;
  p2 = i0;
  L5: vm_checktime();
    i0 = 30u;
    l0 = i0;
    i0 = p2;
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    p1 = i1;
    i0 = i0 >= i1;
    if (i0) {goto B0;}
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p2;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p0 = i0;
    L7: vm_checktime();
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      l4 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B6;}
      i0 = p0;
      i1 = 8u;
      i0 += i1;
      p0 = i0;
      i0 = p2;
      i1 = 1u;
      i0 += i1;
      p2 = i0;
      i1 = p1;
      i0 = i0 < i1;
      if (i0) {goto L7;}
      goto B0;
    B6:;
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l1;
    i1 = l4;
    i2 = 0u;
    i0 = mp_map_lookup(i0, i1, i2);
    p1 = i0;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = p2;
    i1 = 1u;
    i0 += i1;
    p2 = i0;
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1 + 4));
    i0 = mp_obj_equal(i0, i1);
    if (i0) {goto L5;}
    goto B2;
  B3:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = 1u;
  l3 = i0;
  L10: vm_checktime();
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 != i1;
    if (i0) {goto B8;}
    i0 = l4;
    i1 = 8u;
    i0 += i1;
    l4 = i0;
    i0 = l3;
    i1 = l0;
    i0 = i0 < i1;
    p0 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = p0;
    if (i0) {goto L10;}
  B9:;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l4 = i0;
  B8:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = p2;
  i1 = 12u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = 1u;
  l2 = i0;
  L14: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 != i1;
    if (i0) {goto B13;}
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    p0 = i0;
    i0 = l2;
    i1 = l1;
    i0 = i0 < i1;
    l0 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = l0;
    if (i0) {goto L14;}
    goto B12;
  B13:;
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  l5 = i0;
  L15: vm_checktime();
    i0 = 14u;
    l0 = i0;
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = mp_obj_equal(i0, i1);
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1 + 4));
    i0 = mp_obj_equal(i0, i1);
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l3;
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    p1 = i1;
    i0 = i0 >= i1;
    if (i0) {goto B18;}
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l3;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l4 = i0;
    i0 = l3;
    p0 = i0;
    L19: vm_checktime();
      i0 = l4;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B17;}
      i0 = l4;
      i1 = 8u;
      i0 += i1;
      l4 = i0;
      i0 = p0;
      i1 = 1u;
      i0 += i1;
      p0 = i0;
      i1 = p1;
      i0 = i0 < i1;
      if (i0) {goto L19;}
    B18:;
    i0 = 0u;
    l4 = i0;
    i0 = l2;
    i1 = p2;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    p1 = i1;
    i0 = i0 < i1;
    if (i0) {goto B16;}
    goto B12;
    B17:;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l2;
    i1 = p2;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    p1 = i1;
    i0 = i0 >= i1;
    if (i0) {goto B12;}
    B16:;
    i0 = p2;
    i1 = 12u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p0 = i0;
    L21: vm_checktime();
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B20;}
      i0 = p0;
      i1 = 8u;
      i0 += i1;
      p0 = i0;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l2 = i0;
      i1 = p1;
      i0 = i0 < i1;
      if (i0) {goto L21;}
      goto B12;
    B20:;
    i0 = l4;
    i0 = !(i0);
    if (i0) {goto B11;}
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = p0;
    if (i0) {goto L15;}
    goto B11;
  B12:;
  i0 = 0u;
  p0 = i0;
  B11:;
  i0 = 14u;
  i1 = 30u;
  i2 = l4;
  i3 = p0;
  i2 |= i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B2:;
  i0 = 14u;
  l0 = i0;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_subscr(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p2;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = p2;
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p2 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = p1;
  i2 = 2u;
  i0 = mp_map_lookup(i0, i1, i2);
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 6u;
  goto Bfunc;
  B5:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  goto Bfunc;
  B4:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i0 = mp_map_lookup(i0, i1, i2);
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = 6u;
  goto Bfunc;
  B3:;
  i0 = 32112u;
  i1 = p1;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  B2:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B1:;
  i0 = 32112u;
  i1 = p1;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  B0:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_getiter(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 30692u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_dict_init(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 30556u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  mp_map_init(i0, i1);
  FUNC_EPILOGUE;
}

static u32 mp_obj_dict_len(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 3u;
  i0 >>= (i1 & 31);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_dict_store(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i2 = 1u;
  i0 = mp_map_lookup(i0, i1, i2);
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_dict_delete(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i2 = 2u;
  i0 = mp_map_lookup(i0, i1, i2);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = 32112u;
  i1 = p1;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  B0:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_view_it_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l3 = i1;
  i2 = 8u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l4 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  i0 = l3;
  i1 = 12u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l3 = i0;
  L4: vm_checktime();
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 != i1;
    if (i0) {goto B3;}
    i0 = l3;
    i1 = 8u;
    i0 += i1;
    l3 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l4;
    i0 = i0 < i1;
    if (i0) {goto L4;}
    goto B2;
  B3:;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = l2;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l2;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l3;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l5;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = l5;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l3;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  l3 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_clear(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  mp_map_clear(i0);
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_fromkeys(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  l0 = i0;
  i0 = 6u;
  l1 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  B0:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_len_maybe(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 16u;
  i0 = m_malloc(i0);
  l2 = i0;
  i1 = 30556u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  mp_map_init(i0, i1);
  i0 = l0;
  i0 = mp_iternext(i0);
  p1 = i0;
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = 16u;
  i0 = m_malloc(i0);
  l2 = i0;
  i1 = 30556u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  mp_map_init(i0, i1);
  i0 = l0;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  L4: vm_checktime();
    i0 = p0;
    i1 = p1;
    i2 = 1u;
    i0 = mp_map_lookup(i0, i1, i2);
    i1 = l1;
    i32_store((&M0), (u64)(i0 + 4), i1);
    i0 = l0;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L4;}
  B1:;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_get(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  if (i0) {goto B0;}
  B1:;
  i0 = 6u;
  l0 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_items(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 12u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 30960u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void dict_view_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = 2u;
  i1 <<= (i2 & 31);
  i2 = 31020u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = mp_print_str(i0, i1);
  i0 = p0;
  i1 = 15304u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = 0u;
  l3 = i0;
  i0 = l1;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  i0 = 1u;
  l5 = i0;
  L3: vm_checktime();
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l3;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p1 = i0;
    L5: vm_checktime();
      i0 = p1;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B4;}
      i0 = p1;
      i1 = 8u;
      i0 += i1;
      p1 = i0;
      i0 = l3;
      i1 = 1u;
      i0 += i1;
      l3 = i0;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto L5;}
      goto B0;
    B4:;
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l5;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B6;}
    i0 = p0;
    i1 = 12714u;
    i0 = mp_print_str(i0, i1);
    B6:;
    i0 = p0;
    i1 = l6;
    i2 = 1u;
    mp_obj_print_helper(i0, i1, i2);
    i0 = 0u;
    l5 = i0;
    i0 = l3;
    i1 = l1;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = i0 < i1;
    if (i0) {goto L3;}
    goto B0;
  B2:;
  i0 = 0u;
  l3 = i0;
  i0 = l1;
  i1 = 12u;
  i0 += i1;
  l6 = i0;
  i0 = 1u;
  l4 = i0;
  L7: vm_checktime();
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l3;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p1 = i0;
    L9: vm_checktime();
      i0 = p1;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B8;}
      i0 = p1;
      i1 = 8u;
      i0 += i1;
      p1 = i0;
      i0 = l3;
      i1 = 1u;
      i0 += i1;
      l3 = i0;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto L9;}
      goto B0;
    B8:;
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l4;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B10;}
    i0 = p0;
    i1 = 12714u;
    i0 = mp_print_str(i0, i1);
    B10:;
    i0 = p0;
    i1 = l2;
    i2 = 1u;
    mp_obj_print_helper(i0, i1, i2);
    i0 = 0u;
    l4 = i0;
    i0 = l3;
    i1 = l1;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = i0 < i1;
    if (i0) {goto L7;}
    goto B0;
  B1:;
  i0 = 0u;
  l3 = i0;
  i0 = l1;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  i0 = 1u;
  l5 = i0;
  L11: vm_checktime();
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l3;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p1 = i0;
    L13: vm_checktime();
      i0 = p1;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B12;}
      i0 = p1;
      i1 = 8u;
      i0 += i1;
      p1 = i0;
      i0 = l3;
      i1 = 1u;
      i0 += i1;
      l3 = i0;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto L13;}
      goto B0;
    B12:;
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l0;
    i1 = l6;
    i32_store((&M0), (u64)(i0 + 8), i1);
    i0 = l0;
    i1 = 8u;
    i0 += i1;
    i1 = 4u;
    i0 += i1;
    i1 = p1;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = 2u;
    i1 = l0;
    i2 = 8u;
    i1 += i2;
    i0 = mp_obj_new_tuple(i0, i1);
    l2 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l5;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B14;}
    i0 = p0;
    i1 = 12714u;
    i0 = mp_print_str(i0, i1);
    B14:;
    i0 = p0;
    i1 = l2;
    i2 = 1u;
    mp_obj_print_helper(i0, i1, i2);
    i0 = 0u;
    l5 = i0;
    i0 = l3;
    i1 = l1;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
  B0:;
  i0 = p0;
  i1 = 15549u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 dict_view_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 36u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 36u;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = p2;
  i0 = dict_binary_op(i0, i1, i2);
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_view_getiter(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 30692u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_keys(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 12u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 30960u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_pop(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i0 = mp_map_lookup(i0, i1, i2);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  goto Bfunc;
  B2:;
  i0 = p0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  goto Bfunc;
  B1:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B0:;
  i0 = 32112u;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_popitem(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 7u;
  i0 = i0 <= i1;
  if (i0) {goto B0;}
  i0 = l1;
  i1 = 29u;
  i0 <<= (i1 & 31);
  i1 = 31u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = l1;
  i2 = 3u;
  i1 >>= (i2 & 31);
  i2 = 4294967295u;
  i1 += i2;
  i0 &= i1;
  l2 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l3 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l4 = i0;
  L4: vm_checktime();
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 != i1;
    if (i0) {goto B2;}
    i0 = l4;
    i1 = 8u;
    i0 += i1;
    l4 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l3;
    i0 = i0 < i1;
    if (i0) {goto L4;}
  B3:;
  i0 = 0u;
  l4 = i0;
  B2:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i2 = 4294967288u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l4;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l4;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l4;
  j1 = 4ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  l4 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B1:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B0:;
  i0 = 32112u;
  i1 = 16353u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_setdefault(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 1u;
  i0 = mp_map_lookup(i0, i1, i2);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = 6u;
  l1 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  B2:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 dict_values(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 12u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 30960u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 2u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 enumerate_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = p3;
  i3 = 2u;
  i4 = 31136u;
  i5 = l0;
  i6 = 8u;
  i5 += i6;
  mp_arg_parse_all_kw_array(i0, i1, i2, i3, i4, i5);
  i0 = 12u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = 0u;
  i1 = mp_getiter(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 enumerate_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = mp_iternext(i0);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = l2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_exception_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p2;
  i1 = 4294967167u;
  i0 &= i1;
  l0 = i0;
  i0 = p2;
  i1 = 128u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 4294967295u;
  i0 += i1;
  i1 = 1u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i1 = qstr_str(i1);
  i0 = mp_print_str(i0, i1);
  B0:;
  i0 = l0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 10159u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  if (i0) {goto B5;}
  goto B4;
  B6:;
  i0 = l0;
  i1 = 2u;
  i0 |= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  B5:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  if (i0) {goto B2;}
  B4:;
  i0 = p0;
  i1 = 11310u;
  i0 = mp_print_str(i0, i1);
  goto Bfunc;
  B3:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  B2:;
  i0 = p0;
  i1 = l0;
  i2 = p2;
  mp_obj_tuple_print(i0, i1, i2);
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = 0u;
  mp_obj_print_helper(i0, i1, i2);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_exception_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 131070u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc_maybe(i0);
  p2 = i0;
  i1 = 5152u;
  i2 = p2;
  i0 = i2 ? i0 : i1;
  p2 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 36748u;
  p0 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  l0 = i0;
  i1 = 8u;
  i0 += i1;
  i0 = m_malloc_maybe(i0);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = 36756u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 8u;
  i0 += i1;
  i1 = p3;
  i2 = l0;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  p0 = i0;
  B0:;
  i0 = p2;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_exception_get_value(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  goto Bfunc;
  B0:;
  i0 = 6u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_exception_attr(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 200u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p0;
  i1 = i32_load16_u((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = 61u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = 162u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 31152u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  goto B3;
  B4:;
  i0 = 6u;
  p1 = i0;
  B3:;
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_new_exception(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  i1 = 0u;
  i2 = 131070u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc_maybe(i0);
  l0 = i0;
  i1 = 5152u;
  i2 = l0;
  i0 = i2 ? i0 : i1;
  l0 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 36748u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_exception_arg1(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 1u;
  i1 = 0u;
  i2 = 131070u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc_maybe(i0);
  p1 = i0;
  i1 = 5152u;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 12u;
  i0 = m_malloc_maybe(i0);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 36756u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  goto B0;
  B1:;
  i0 = 36748u;
  p0 = i0;
  B0:;
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_exception_msg(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 16u;
  i0 = m_malloc_maybe(i0);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 36168u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = strlen_0(i0);
  l2 = i0;
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = p1;
  i2 = l2;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 1u;
  i1 = 0u;
  i2 = 131070u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc_maybe(i0);
  l1 = i0;
  i1 = 5152u;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 12u;
  i0 = m_malloc_maybe(i0);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = 36756u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  goto B0;
  B2:;
  i0 = 0u;
  i1 = 0u;
  i2 = 131070u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc_maybe(i0);
  l1 = i0;
  i1 = 5152u;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 36748u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = 36748u;
  l1 = i0;
  B0:;
  i0 = p1;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_exception_msg_varg(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i0 = mp_obj_new_exception_msg_vlist(i0, i1, i2);
  p2 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_exception_msg_vlist(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 16u;
  i0 = m_malloc_maybe(i0);
  l1 = i0;
  i0 = p1;
  i0 = strlen_0(i0);
  l2 = i0;
  i1 = 1u;
  i0 += i1;
  l3 = i0;
  i0 = m_malloc_maybe(i0);
  l4 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = 1u;
  i32_store8((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = l4;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = 65u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  i2 = p2;
  i0 = mp_vprintf(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 24));
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 24));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  goto B0;
  B2:;
  i0 = 0u;
  i1 = 0u;
  i2 = 131070u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc_maybe(i0);
  l1 = i0;
  i1 = 5152u;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 36748u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  B0:;
  i0 = l1;
  i1 = 36168u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = p1;
  i2 = l2;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 1u;
  i1 = 0u;
  i2 = 131070u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc_maybe(i0);
  l1 = i0;
  i1 = 5152u;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 12u;
  i0 = m_malloc_maybe(i0);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = 36756u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  goto B3;
  B4:;
  i0 = 36748u;
  l1 = i0;
  B3:;
  i0 = p1;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void exc_add_strn(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i1 = p2;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l1 = i1;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p2;
  i2 = l1;
  i1 += i2;
  i2 = 16u;
  i1 += i2;
  l0 = i1;
  i2 = 1u;
  i0 = m_realloc_maybe(i0, i1, i2);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  goto B0;
  B2:;
  i0 = l1;
  i1 = l0;
  i2 = 4294967295u;
  i1 ^= i2;
  i0 += i1;
  p2 = i0;
  goto B0;
  B1:;
  i0 = p0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4294967295u;
  i0 += i1;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l0 = i1;
  i0 -= i1;
  p2 = i0;
  B0:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l0;
  i0 += i1;
  i1 = p1;
  i2 = p2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p2;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static u32 mp_obj_is_exception_type(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36936u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 66u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = 31212u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  goto Bfunc;
  B0:;
  i0 = 1u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_is_exception_instance(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  p0 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36936u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 66u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = 31212u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  goto Bfunc;
  B0:;
  i0 = 1u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_exception_match(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l0 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36936u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 66u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = l0;
  i1 = 31212u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  p0 = i0;
  B0:;
  i0 = p0;
  i1 = p1;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_exception_add_traceback(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 66u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p0 = i0;
  B0:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i1 = 16u;
  i0 >>= (i1 & 31);
  i1 = 3u;
  i0 += i1;
  i1 = l2;
  i2 = 65535u;
  i1 &= i2;
  l3 = i1;
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = l3;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i2 = 12u;
  i1 += i2;
  i2 = 1u;
  i0 = m_realloc_maybe(i0, i1, i2);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  p0 = i1;
  i2 = 3u;
  i1 += i2;
  i2 = 65535u;
  i1 &= i2;
  i2 = p0;
  i3 = 4294901760u;
  i2 &= i3;
  i1 |= i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  goto B2;
  B3:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = 12u;
  i1 = m_malloc_maybe(i1);
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 3u;
  l2 = i0;
  i0 = p0;
  i1 = 3u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  B2:;
  i0 = l1;
  i1 = l2;
  i2 = 196608u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l2;
  i2 = 14u;
  i1 >>= (i2 & 31);
  i2 = 262140u;
  i1 &= i2;
  i0 += i1;
  p0 = i0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p3;
  i32_store((&M0), (u64)(i0 + 8), i1);
  B1:;
  FUNC_EPILOGUE;
}

static void mp_obj_exception_get_traceback(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 66u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p0 = i0;
  B0:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 6u;
  i0 += i1;
  i0 = i32_load16_u((&M0), (u64)(i0));
  p0 = i0;
  i0 = p2;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 filter_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 262148u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 12u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 0u;
  i1 = mp_getiter(i1, i2);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 filter_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i0 = 0u;
  l3 = i0;
  L1: vm_checktime();
    i0 = l0;
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    i1 = mp_iternext(i1);
    p0 = i1;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    i1 = 6u;
    i0 = i0 == i1;
    if (i0) {goto B2;}
    i0 = l4;
    i1 = 1u;
    i2 = 0u;
    i3 = l0;
    i4 = 12u;
    i3 += i4;
    i0 = mp_call_function_n_kw(i0, i1, i2, i3);
    p0 = i0;
    B2:;
    i0 = p0;
    i0 = mp_obj_is_true(i0);
    i0 = !(i0);
    if (i0) {goto L1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  FUNC_EPILOGUE;
  return i0;
}

static u32 __strchrnul(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = 255u;
  i0 &= i1;
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  L3: vm_checktime();
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l1 = i0;
    i0 = !(i0);
    if (i0) {goto B1;}
    i0 = l1;
    i1 = p1;
    i2 = 255u;
    i1 &= i2;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = 3u;
    i0 &= i1;
    if (i0) {goto L3;}
  B2:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 4294967295u;
  i0 ^= i1;
  i1 = l1;
  i2 = 4278124287u;
  i1 += i2;
  i0 &= i1;
  i1 = 2155905152u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = 16843009u;
  i0 *= i1;
  l0 = i0;
  L5: vm_checktime();
    i0 = l1;
    i1 = l0;
    i0 ^= i1;
    l1 = i0;
    i1 = 4294967295u;
    i0 ^= i1;
    i1 = l1;
    i2 = 4278124287u;
    i1 += i2;
    i0 &= i1;
    i1 = 2155905152u;
    i0 &= i1;
    if (i0) {goto B4;}
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    l1 = i0;
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = l1;
    i1 = 4294967295u;
    i0 ^= i1;
    i1 = l1;
    i2 = 4278124287u;
    i1 += i2;
    i0 &= i1;
    i1 = 2155905152u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto L5;}
  B4:;
  i0 = p0;
  i1 = 4294967295u;
  i0 += i1;
  p0 = i0;
  L6: vm_checktime();
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l1 = i0;
    i0 = !(i0);
    if (i0) {goto B1;}
    i0 = l1;
    i1 = p1;
    i2 = 255u;
    i1 &= i2;
    i0 = i0 != i1;
    if (i0) {goto L6;}
  B1:;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = p0;
  i1 = strlen_0(i1);
  i0 += i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 strchr_0(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i1 = p1;
  i0 = __strchrnul(i0, i1);
  p0 = i0;
  i1 = 0u;
  i2 = p0;
  i2 = i32_load8_u((&M0), (u64)(i2));
  i3 = p1;
  i4 = 255u;
  i3 &= i4;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static f64 fmod_0(f64 p0, f64 p1) {
  u32 l3 = 0, l5 = 0, l6 = 0;
  u64 l0 = 0, l1 = 0, l2 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f64 d0, d1;
  d0 = p1;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 1ull;
  j0 <<= (j1 & 63);
  l1 = j0;
  i0 = !(j0);
  if (i0) {goto B5;}
  j0 = l0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B5;}
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l2 = j0;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2047u;
  i0 &= i1;
  l3 = i0;
  i1 = 2047u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  j0 = l2;
  j1 = 1ull;
  j0 <<= (j1 & 63);
  l4 = j0;
  j1 = l1;
  i0 = j0 <= j1;
  if (i0) {goto B4;}
  j0 = l0;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2047u;
  i0 &= i1;
  l5 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B3;}
  j0 = l2;
  j1 = 4503599627370495ull;
  j0 &= j1;
  j1 = 4503599627370496ull;
  j0 |= j1;
  l1 = j0;
  i0 = l5;
  i0 = !(i0);
  if (i0) {goto B2;}
  goto B1;
  B5:;
  d0 = p0;
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p1 = d0;
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B4:;
  d0 = p0;
  d1 = 0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  j2 = l4;
  j3 = l1;
  i2 = j2 == j3;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B3:;
  i0 = 0u;
  l3 = i0;
  j0 = l2;
  j1 = 12ull;
  j0 <<= (j1 & 63);
  l1 = j0;
  j1 = 0ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B6;}
  L7: vm_checktime();
    i0 = l3;
    i1 = 4294967295u;
    i0 += i1;
    l3 = i0;
    j0 = l1;
    j1 = 1ull;
    j0 <<= (j1 & 63);
    l1 = j0;
    j1 = 18446744073709551615ull;
    i0 = (u64)((s64)j0 > (s64)j1);
    if (i0) {goto L7;}
  B6:;
  j0 = l2;
  i1 = 1u;
  i2 = l3;
  i1 -= i2;
  j1 = (u64)(i1);
  j0 <<= (j1 & 63);
  l1 = j0;
  i0 = l5;
  if (i0) {goto B1;}
  B2:;
  i0 = 0u;
  l5 = i0;
  j0 = l0;
  j1 = 12ull;
  j0 <<= (j1 & 63);
  l4 = j0;
  j1 = 0ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B8;}
  L9: vm_checktime();
    i0 = l5;
    i1 = 4294967295u;
    i0 += i1;
    l5 = i0;
    j0 = l4;
    j1 = 1ull;
    j0 <<= (j1 & 63);
    l4 = j0;
    j1 = 18446744073709551615ull;
    i0 = (u64)((s64)j0 > (s64)j1);
    if (i0) {goto L9;}
  B8:;
  j0 = l0;
  i1 = 1u;
  i2 = l5;
  i1 -= i2;
  j1 = (u64)(i1);
  j0 <<= (j1 & 63);
  l0 = j0;
  goto B0;
  B1:;
  j0 = l0;
  j1 = 4503599627370495ull;
  j0 &= j1;
  j1 = 4503599627370496ull;
  j0 |= j1;
  l0 = j0;
  B0:;
  j0 = l1;
  j1 = l0;
  j0 -= j1;
  l4 = j0;
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  l6 = i0;
  i0 = l3;
  i1 = l5;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B12;}
  L13: vm_checktime();
    i0 = l6;
    i1 = 1u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B14;}
    j0 = l4;
    l1 = j0;
    j0 = l4;
    j1 = 0ull;
    i0 = j0 == j1;
    if (i0) {goto B11;}
    B14:;
    j0 = l1;
    j1 = 1ull;
    j0 <<= (j1 & 63);
    l1 = j0;
    j1 = l0;
    j0 -= j1;
    l4 = j0;
    j1 = 18446744073709551615ull;
    i0 = (u64)((s64)j0 > (s64)j1);
    l6 = i0;
    i0 = l3;
    i1 = 4294967295u;
    i0 += i1;
    l3 = i0;
    i1 = l5;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L13;}
  B12:;
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B15;}
  j0 = l4;
  l1 = j0;
  j0 = l4;
  j1 = 0ull;
  i0 = j0 == j1;
  if (i0) {goto B10;}
  B15:;
  j0 = l1;
  j1 = 4503599627370495ull;
  i0 = j0 > j1;
  if (i0) {goto B16;}
  L17: vm_checktime();
    i0 = l3;
    i1 = 4294967295u;
    i0 += i1;
    l3 = i0;
    j0 = l1;
    j1 = 1ull;
    j0 <<= (j1 & 63);
    l1 = j0;
    j1 = 4503599627370496ull;
    i0 = j0 < j1;
    if (i0) {goto L17;}
  B16:;
  j0 = l2;
  j1 = 9223372036854775808ull;
  j0 &= j1;
  l4 = j0;
  i0 = l3;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B18;}
  j0 = l1;
  j1 = 18442240474082181120ull;
  j0 += j1;
  i1 = l3;
  j1 = (u64)(i1);
  j2 = 52ull;
  j1 <<= (j2 & 63);
  j0 |= j1;
  j1 = l4;
  j0 |= j1;
  d0 = f64_reinterpret_i64(j0);
  goto Bfunc;
  B18:;
  j0 = l1;
  i1 = 1u;
  i2 = l3;
  i1 -= i2;
  j1 = (u64)(i1);
  j0 >>= (j1 & 63);
  j1 = l4;
  j0 |= j1;
  d0 = f64_reinterpret_i64(j0);
  goto Bfunc;
  B11:;
  d0 = p0;
  d1 = 0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B10:;
  d0 = p0;
  d1 = 0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 copysign_0(f64 p0, f64 p1) {
  FUNC_PROLOGUE;
  u64 j0, j1, j2;
  f64 d0, d1;
  d0 = p1;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775808ull;
  j0 &= j1;
  d1 = p0;
  j1 = i64_reinterpret_f64(d1);
  j2 = 9223372036854775807ull;
  j1 &= j2;
  j0 |= j1;
  d0 = f64_reinterpret_i64(j0);
  FUNC_EPILOGUE;
  return d0;
}

static void float_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  f64 d0;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i2 = 32u;
  i3 = 103u;
  i4 = 16u;
  i5 = 0u;
  i0 = mp_format_float(d0, i1, i2, i3, i4, i5);
  i0 = p0;
  i1 = l0;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 46u;
  i0 = strchr_0(i0, i1);
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 101u;
  i0 = strchr_0(i0, i1);
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 110u;
  i0 = strchr_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 11311u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 float_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  f64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1;
  f64 d0, d1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 1u;
  i0 = mp_get_buffer(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 0u;
  i3 = 0u;
  i4 = 0u;
  i0 = mp_parse_num_decimal(i0, i1, i2, i3, i4);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  i1 = 32832u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32832u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B3:;
  i0 = p1;
  d0 = mp_obj_get_float(i0);
  l1 = d0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  d1 = l1;
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = p1;
  i1 = 32832u;
  i32_store((&M0), (u64)(i0), i1);
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 float_unary_op(u32 p0, u32 p1) {
  f64 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  f64 d0, d1, d2, d3;
  i0 = p0;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B6;}
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l0 = d0;
  i0 = p0;
  switch (i0) {
    case 0: goto B2;
    case 1: goto B7;
    case 2: goto B6;
    case 3: goto B6;
    case 4: goto B5;
    case 5: goto B6;
    case 6: goto B4;
    case 7: goto B3;
    default: goto B2;
  }
  B7:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p0 = i0;
  d1 = l0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = p0;
  i1 = 32832u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  goto Bfunc;
  B6:;
  i0 = 0u;
  goto Bfunc;
  B5:;
  i0 = 14u;
  i1 = 30u;
  d2 = l0;
  d3 = 0;
  i2 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d2, d3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B4:;
  d0 = l0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B1;}
  i0 = 2147483648u;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B3:;
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B0;}
  B2:;
  i0 = p1;
  goto Bfunc;
  B1:;
  d0 = l0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p0 = i0;
  d1 = l0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = p0;
  i1 = 32832u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 float_binary_op(u32 p0, u32 p1, u32 p2) {
  f64 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  f64 d0, d1, d2;
  i0 = p1;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l0 = d0;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 30496u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  d1 = l0;
  i2 = p2;
  i0 = mp_obj_float_binary_op(i0, d1, i2);
  goto Bfunc;
  B0:;
  i0 = p0;
  d1 = l0;
  d2 = 0;
  i3 = p2;
  i0 = mp_obj_complex_binary_op(i0, d1, d2, i3);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_float_binary_op(u32 p0, f64 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  u64 l5 = 0;
  f64 l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  f64 d0, d1, d2, d3, d4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B27;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 40828u;
  i0 = i0 == i1;
  if (i0) {goto B26;}
  B27:;
  i0 = 0u;
  l1 = i0;
  i0 = p2;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i0 = mp_obj_get_float_maybe(i0, i1);
  i0 = !(i0);
  if (i0) {goto B25;}
  i0 = p0;
  i1 = 35u;
  i0 = i0 > i1;
  if (i0) {goto B25;}
  i0 = p0;
  switch (i0) {
    case 0: goto B16;
    case 1: goto B15;
    case 2: goto B18;
    case 3: goto B14;
    case 4: goto B13;
    case 5: goto B25;
    case 6: goto B25;
    case 7: goto B25;
    case 8: goto B25;
    case 9: goto B25;
    case 10: goto B25;
    case 11: goto B25;
    case 12: goto B25;
    case 13: goto B25;
    case 14: goto B28;
    case 15: goto B22;
    case 16: goto B21;
    case 17: goto B25;
    case 18: goto B23;
    case 19: goto B19;
    case 20: goto B24;
    case 21: goto B20;
    case 22: goto B25;
    case 23: goto B25;
    case 24: goto B25;
    case 25: goto B25;
    case 26: goto B25;
    case 27: goto B28;
    case 28: goto B22;
    case 29: goto B21;
    case 30: goto B25;
    case 31: goto B23;
    case 32: goto B19;
    case 33: goto B24;
    case 34: goto B20;
    case 35: goto B17;
    default: goto B16;
  }
  B28:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p1 = d0;
  goto B0;
  B26:;
  i0 = l0;
  d1 = p1;
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = p0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  j2 = i64_load((&M0), (u64)(i2));
  i3 = p2;
  i0 = mp_obj_float128_binary_op(i0, j1, j2, i3);
  l1 = i0;
  B25:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B24:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B4;}
  d0 = p1;
  d1 = l2;
  d0 = fmod_0(d0, d1);
  p1 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B12;}
  d0 = 0;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 24));
  d0 = copysign_0(d0, d1);
  p1 = d0;
  goto B0;
  B23:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B4;}
  d0 = p1;
  d1 = p1;
  d2 = l2;
  d1 = fmod_0(d1, d2);
  l2 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 24));
  l3 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l4 = d0;
  d0 = l2;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B11;}
  d0 = 0;
  d1 = l3;
  d0 = copysign_0(d0, d1);
  l2 = d0;
  d0 = 0;
  l3 = d0;
  d0 = l4;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B10;}
  goto B1;
  B22:;
  d0 = p1;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 24));
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p1 = d0;
  goto B0;
  B21:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  d1 = p1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p1 = d0;
  goto B0;
  B20:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  d0 = p1;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B29;}
  d0 = l2;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B29;}
  d0 = l2;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B4;}
  B29:;
  d0 = p1;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B6;}
  d0 = l2;
  d1 = l2;
  d1 = floor_0(d1);
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B7;}
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 24));
  l5 = j0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 <= j1;
  if (i0) {goto B5;}
  j0 = l5;
  d0 = f64_reinterpret_i64(j0);
  l2 = d0;
  goto B6;
  B19:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B4;}
  d0 = p1;
  d1 = l2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p1 = d0;
  goto B0;
  B18:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  d2 = l2;
  d3 = p1;
  i2 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d2, d3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B17:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B4;}
  d0 = p1;
  d1 = p1;
  d2 = l2;
  d1 = fmod_0(d1, d2);
  l2 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 24));
  l3 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l4 = d0;
  d0 = l2;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B9;}
  d0 = 0;
  d1 = l3;
  d0 = copysign_0(d0, d1);
  l2 = d0;
  d0 = 0;
  l3 = d0;
  d0 = l4;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B8;}
  goto B3;
  B16:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  d2 = l2;
  d3 = p1;
  i2 = (*Z_eosio_injectionZ__eosio_f64_gtZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B15:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  d2 = l2;
  d3 = p1;
  i2 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B14:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  d2 = l2;
  d3 = p1;
  i2 = (*Z_eosio_injectionZ__eosio_f64_geZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B13:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  d2 = l2;
  d3 = p1;
  i2 = (*Z_eosio_injectionZ__eosio_f64_leZ_idd)(d2, d3);
  i3 = 1u;
  i2 ^= i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B12:;
  d0 = p1;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 24));
  l2 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p1;
  d2 = p1;
  d3 = 0;
  i2 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d2, d3);
  d3 = l2;
  d4 = 0;
  i3 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d3, d4);
  i2 ^= i3;
  d0 = i2 ? d0 : d1;
  p1 = d0;
  goto B0;
  B11:;
  d0 = l2;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  d1 = l3;
  d2 = 0;
  i1 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d1, d2);
  i0 = i0 == i1;
  if (i0) {goto B30;}
  d0 = l4;
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l4 = d0;
  d0 = l2;
  d1 = l3;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l2 = d0;
  B30:;
  d0 = 0;
  l3 = d0;
  d0 = l4;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B1;}
  B10:;
  d0 = l3;
  d1 = p1;
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2 + 24));
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = copysign_0(d0, d1);
  p1 = d0;
  i0 = l0;
  d1 = l2;
  f64_store((&M0), (u64)(i0 + 24), d1);
  goto B0;
  B9:;
  d0 = l2;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  d1 = l3;
  d2 = 0;
  i1 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d1, d2);
  i0 = i0 == i1;
  if (i0) {goto B31;}
  d0 = l4;
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l4 = d0;
  d0 = l2;
  d1 = l3;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l2 = d0;
  B31:;
  d0 = 0;
  l3 = d0;
  d0 = l4;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B3;}
  B8:;
  d0 = l3;
  d1 = p1;
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2 + 24));
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = copysign_0(d0, d1);
  p1 = d0;
  goto B2;
  B7:;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 24));
  l2 = d0;
  B6:;
  d0 = p1;
  d1 = l2;
  d0 = pow_0(d0, d1);
  p1 = d0;
  goto B0;
  B5:;
  i0 = 34u;
  d1 = p1;
  d2 = 0;
  i3 = p2;
  i0 = mp_obj_complex_binary_op(i0, d1, d2, i3);
  p2 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B4:;
  i0 = 31692u;
  i1 = 10162u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B3:;
  d0 = l4;
  d1 = l4;
  d1 = floor_0(d1);
  p1 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0.5;
  i0 = (*Z_eosio_injectionZ__eosio_f64_gtZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B2;}
  d0 = p1;
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p1 = d0;
  B2:;
  i0 = l0;
  d1 = l2;
  f64_store((&M0), (u64)(i0 + 24), d1);
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = 32832u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  d1 = p1;
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 24));
  l5 = j0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = 32832u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  j1 = l5;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p2 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B1:;
  d0 = l4;
  d1 = l4;
  d1 = floor_0(d1);
  p1 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0.5;
  i0 = (*Z_eosio_injectionZ__eosio_f64_gtZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B32;}
  d0 = p1;
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p1 = d0;
  B32:;
  i0 = l0;
  d1 = l2;
  f64_store((&M0), (u64)(i0 + 24), d1);
  B0:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  d1 = p1;
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = p2;
  i1 = 32832u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_float(f64 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  f64 d1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  d1 = p0;
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 32832u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static f64 mp_obj_float_get(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  f64 d0;
  i0 = p0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  FUNC_EPILOGUE;
  return d0;
}

static u32 fun_builtin_0_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 0u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = CALL_INDIRECT(T0, u32 (*)(void), 6, i0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 fun_builtin_1_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 131074u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i1, i0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 fun_builtin_2_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 262148u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32), 3, i2, i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static u32 fun_builtin_3_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = p2;
  i2 = 393222u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = p3;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 4, i3, i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 fun_builtin_var_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = p3;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32), 3, i2, i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p2;
  i2 = p3;
  i3 = p1;
  i4 = 2u;
  i3 <<= (i4 & 31);
  i2 += i3;
  mp_map_init_fixed_table(i0, i1, i2);
  i0 = p1;
  i1 = p3;
  i2 = l0;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 8));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 4, i3, i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_fun_get_name(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  L0: vm_checktime();
    i0 = p0;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l0 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    p0 = i0;
    i0 = l0;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L0;}
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  p0 = i0;
  L1: vm_checktime();
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    l0 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    p0 = i0;
    i0 = l0;
    i0 = i32_load8_s((&M0), (u64)(i0));
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L1;}
  i0 = l1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 8u;
  i0 <<= (i1 & 31);
  i1 = l1;
  i2 = 4294967295u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i0 |= i1;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_fun_bc_attr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = 23u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  L1: vm_checktime();
    i0 = p1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    p0 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    p1 = i0;
    i0 = p0;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L1;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  p1 = i0;
  L2: vm_checktime();
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    p1 = i0;
    i0 = p0;
    i0 = i32_load8_s((&M0), (u64)(i0));
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L2;}
  i0 = p2;
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i2 = 8u;
  i1 <<= (i2 & 31);
  i2 = l0;
  i3 = 4294967295u;
  i2 += i3;
  i2 = i32_load8_u((&M0), (u64)(i2));
  i1 |= i2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  FUNC_EPILOGUE;
}

static void fun_bc_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  L0: vm_checktime();
    i0 = l1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    l1 = i0;
    i0 = l2;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L0;}
  i0 = l3;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  L1: vm_checktime();
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    l1 = i0;
    i0 = l2;
    i0 = i32_load8_s((&M0), (u64)(i0));
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L1;}
  i0 = l3;
  i1 = 4294967295u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l1 = i0;
  i0 = l3;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l2 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l1;
  i2 = l2;
  i3 = 8u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 10177u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 fun_bc_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = i32_load8_s((&M0), (u64)(i0));
  l1 = i0;
  i1 = 255u;
  i0 &= i1;
  l2 = i0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = 1u;
  i0 &= i1;
  l3 = i0;
  i0 = l2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = 15u;
  i0 &= i1;
  l4 = i0;
  i0 = l1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  l5 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = 0u;
  l1 = i0;
  L1: vm_checktime();
    i0 = l5;
    i1 = l1;
    i0 += i1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l0 = i0;
    i1 = 2u;
    i0 &= i1;
    i1 = l1;
    i0 <<= (i1 & 31);
    i1 = l3;
    i0 |= i1;
    l3 = i0;
    i0 = l0;
    i1 = 48u;
    i0 &= i1;
    i1 = l2;
    i0 <<= (i1 & 31);
    i1 = l4;
    i0 |= i1;
    l4 = i0;
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L1;}
  B0:;
  i0 = l3;
  i1 = 12u;
  i0 *= i1;
  i1 = l4;
  i2 = 1u;
  i1 += i2;
  l2 = i1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 20u;
  i0 += i1;
  i0 = mp_pystack_alloc(i0);
  l1 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = l2;
  i32_store16((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  mp_setup_code_state(i0, i1, i2, i3);
  i0 = l1;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5140));
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 0u;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0 + 5140), i1);
  i0 = l1;
  i1 = 0u;
  i0 = mp_execute_bytecode(i0, i1);
  l2 = i0;
  i0 = 0u;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i32_store((&M0), (u64)(i0 + 5140), i1);
  i0 = l2;
  if (i0) {goto B2;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = 0u;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 5132), i1);
  i0 = l2;
  goto Bfunc;
  B2:;
  i0 = 0u;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 5132), i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_fun_bc(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  B0:;
  i0 = l0;
  i1 = p1;
  i2 = 0u;
  i1 = i1 != i2;
  i0 += i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 16u;
  i0 += i1;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = 33228u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5140));
  l2 = i0;
  i0 = l1;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = p3;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 16u;
  i0 += i1;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B1:;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l1;
  i1 = l0;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 16u;
  i0 += i1;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  B2:;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 gen_wrap_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = i32_load8_s((&M0), (u64)(i0));
  l1 = i0;
  i1 = 255u;
  i0 &= i1;
  l2 = i0;
  i1 = 2u;
  i0 >>= (i1 & 31);
  i1 = 1u;
  i0 &= i1;
  l3 = i0;
  i0 = l2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = 15u;
  i0 &= i1;
  l4 = i0;
  i0 = l1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  l5 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = 0u;
  l1 = i0;
  L1: vm_checktime();
    i0 = l5;
    i1 = l1;
    i0 += i1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l0 = i0;
    i1 = 2u;
    i0 &= i1;
    i1 = l1;
    i0 <<= (i1 & 31);
    i1 = l3;
    i0 |= i1;
    l3 = i0;
    i0 = l0;
    i1 = 48u;
    i0 &= i1;
    i1 = l2;
    i0 <<= (i1 & 31);
    i1 = l4;
    i0 |= i1;
    l4 = i0;
    i0 = l2;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L1;}
  B0:;
  i0 = l3;
  i1 = 12u;
  i0 *= i1;
  i1 = l4;
  i2 = 1u;
  i1 += i2;
  l2 = i1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 28u;
  i0 += i1;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = 6u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = 33364u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = l2;
  i32_store16((&M0), (u64)(i0 + 20), i1);
  i0 = l1;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  mp_setup_code_state(i0, i1, i2, i3);
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_gen_resume(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  p2 = i0;
  B5:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l0 = i0;
  i1 = p0;
  i2 = 24u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  goto B2;
  B4:;
  i0 = p3;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  goto Bfunc;
  B3:;
  i0 = p1;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B2:;
  i0 = p0;
  i1 = 24u;
  i0 += i1;
  p1 = i0;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5140));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0 + 5140), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = p2;
  i0 = mp_execute_bytecode(i0, i1);
  p2 = i0;
  i0 = l0;
  i1 = 6u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 5140), i1);
  i0 = p2;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = p2;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  i1 = p0;
  i2 = 28u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  p0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i1 = 31152u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = p3;
  i1 = 32352u;
  i2 = 12066u;
  i1 = mp_obj_new_exception_msg(i1, i2);
  i32_store((&M0), (u64)(i0), i1);
  B8:;
  i0 = 2u;
  goto Bfunc;
  B7:;
  i0 = p3;
  i1 = p0;
  i2 = 16u;
  i1 += i2;
  p0 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 6u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 1u;
  goto Bfunc;
  B6:;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  i1 = p0;
  i2 = 16u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  goto Bfunc;
  B1:;
  i0 = 10199u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = 11314u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void gen_instance_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_fun_get_name(i0);
  l1 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 12717u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 gen_instance_iternext(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 6u;
  i2 = 0u;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i0 = mp_obj_gen_resume(i0, i1, i2, i3);
  p0 = i0;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B3:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B2:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  nlr_jump(i0);
  UNREACHABLE;
  B0:;
  i0 = 31152u;
  i1 = p0;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 gen_instance_close(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 6u;
  i2 = 33288u;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i0 = mp_obj_gen_resume(i0, i1, i2, i3);
  p0 = i0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = 32352u;
  i1 = 14112u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B2:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = mp_obj_get_type(i0);
  i1 = 31392u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = p0;
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 gen_instance_send(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = p1;
  i2 = 0u;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i0 = mp_obj_gen_resume(i0, i1, i2, i3);
  p0 = i0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B2:;
  i0 = p0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  nlr_jump(i0);
  UNREACHABLE;
  B3:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = 31152u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B0:;
  i0 = 31152u;
  i1 = l0;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 gen_instance_throw(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  p0 = i1;
  i2 = p0;
  i3 = 6u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 6u;
  i2 = l1;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i0 = mp_obj_gen_resume(i0, i1, i2, i3);
  p1 = i0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B3:;
  i0 = p1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  nlr_jump(i0);
  UNREACHABLE;
  B4:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  B2:;
  i0 = 31152u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B1:;
  i0 = 31152u;
  i1 = l0;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 gen_instance_pend_throw(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 10199u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_getitem_iter(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 33508u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = 1u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 it_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 176u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i0 = nlr_push_tail(i0);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = setjmp_ex(i0);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = 31152u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 32052u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B2:;
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B1:;
  i0 = 1u;
  i1 = 0u;
  i2 = p0;
  i3 = 4u;
  i2 += i3;
  i0 = mp_call_method_n_kw(i0, i1, i2);
  l1 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = 2u;
  i1 += i2;
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  nlr_pop();
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = l1;
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_int_from_float(f64 p0) {
  u32 l1 = 0;
  u64 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  f64 d0, d1;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 9218868437227405312ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 == j1;
  if (i0) {goto B0;}
  j0 = l0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 4293918720u;
  i0 &= i1;
  i1 = 1103101952u;
  i0 = i0 <= i1;
  if (i0) {goto B3;}
  goto B2;
  B4:;
  j0 = l0;
  i0 = (u32)(j0);
  i1 = 0u;
  i0 = i0 != i1;
  i1 = l1;
  i0 |= i1;
  l1 = i0;
  i1 = 2147483647u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 2146435072u;
  i0 += i1;
  i1 = 1103101952u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  B3:;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B1;}
  i0 = 2147483648u;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B2:;
  i0 = mp_obj_int_new_mpz();
  l1 = i0;
  i1 = 4u;
  i0 += i1;
  d1 = p0;
  mpz_set_from_float(i0, d1);
  i0 = l1;
  goto Bfunc;
  B1:;
  d0 = p0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  j0 = l0;
  j1 = 4503599627370495ull;
  j0 &= j1;
  j1 = 0ull;
  i0 = j0 != j1;
  if (i0) {goto B5;}
  i0 = 31632u;
  i1 = 10227u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B5:;
  i0 = 11368u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_int_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6, i7, 
      i8;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 16u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i3 = l0;
  i4 = 4u;
  i3 += i4;
  i4 = p1;
  i5 = 10u;
  i6 = 0u;
  i7 = 0u;
  i8 = 0u;
  i1 = mp_obj_int_formatted(i1, i2, i3, i4, i5, i6, i7, i8);
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  m_free(i0);
  B0:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 mp_obj_int_formatted(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5, u32 p6, u32 p7) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6, i7;
  i0 = p3;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i4 = p4;
  i5 = p5;
  i6 = p6;
  i7 = p7;
  i0 = mp_obj_int_formatted_impl(i0, i1, i2, i3, i4, i5, i6, i7);
  goto Bfunc;
  B0:;
  i0 = 0u;
  l0 = i0;
  i0 = p3;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  l1 = i0;
  i0 = 0u;
  i1 = p3;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  l2 = i1;
  i0 -= i1;
  l3 = i0;
  i0 = 32u;
  i1 = p4;
  i2 = 33567u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i0 = DIV_U(i0, i1);
  l4 = i0;
  i1 = 1u;
  i0 += i1;
  i1 = 3u;
  i0 = DIV_U(i0, i1);
  i1 = 0u;
  i2 = p7;
  i0 = i2 ? i0 : i1;
  l5 = i0;
  i0 = p5;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p5;
  i0 = strlen_0(i0);
  l0 = i0;
  B1:;
  i0 = l3;
  i1 = l2;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = l0;
  i1 = l4;
  i2 = l5;
  i1 += i2;
  i2 = 3u;
  i1 += i2;
  i2 = 255u;
  i1 &= i2;
  i0 += i1;
  l6 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B3;}
  i0 = l6;
  i0 = m_malloc(i0);
  l0 = i0;
  i0 = p1;
  i1 = l6;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  goto B2;
  B3:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B2:;
  i0 = l0;
  i1 = l6;
  i0 += i1;
  i1 = 4294967295u;
  i0 += i1;
  p1 = i0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = p6;
  i1 = 255u;
  i0 &= i1;
  i1 = 246u;
  i0 += i1;
  l4 = i0;
  i0 = p7;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = p1;
  p6 = i0;
  i0 = p1;
  l5 = i0;
  L9: vm_checktime();
    i0 = p6;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    i1 = l4;
    i2 = 48u;
    i3 = l1;
    i4 = l1;
    i5 = p4;
    i4 = DIV_U(i4, i5);
    l3 = i4;
    i5 = p4;
    i4 *= i5;
    i3 -= i4;
    l2 = i3;
    i4 = 9u;
    i3 = (u32)((s32)i3 > (s32)i4);
    i1 = i3 ? i1 : i2;
    i2 = l2;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = p4;
    i0 = i0 < i1;
    l1 = i0;
    if (i0) {goto B10;}
    i0 = p1;
    i1 = l0;
    i0 = i0 <= i1;
    if (i0) {goto B10;}
    i0 = l5;
    i1 = p1;
    i0 -= i1;
    i1 = 3u;
    i0 = i0 != i1;
    if (i0) {goto B10;}
    i0 = p6;
    i1 = 4294967294u;
    i0 += i1;
    p1 = i0;
    i1 = p7;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p1;
    l5 = i0;
    B10:;
    i0 = l1;
    if (i0) {goto B6;}
    i0 = l3;
    l1 = i0;
    i0 = p1;
    p6 = i0;
    i0 = p1;
    i1 = l0;
    i0 = i0 > i1;
    if (i0) {goto L9;}
    goto B6;
  B8:;
  i0 = p1;
  i1 = 4294967295u;
  i0 += i1;
  p1 = i0;
  i1 = 48u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p5;
  if (i0) {goto B5;}
  goto B4;
  B7:;
  L11: vm_checktime();
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    i1 = l4;
    i2 = 48u;
    i3 = l1;
    i4 = l1;
    i5 = p4;
    i4 = DIV_U(i4, i5);
    l2 = i4;
    i5 = p4;
    i4 *= i5;
    i3 -= i4;
    p6 = i3;
    i4 = 9u;
    i3 = (u32)((s32)i3 > (s32)i4);
    i1 = i3 ? i1 : i2;
    i2 = p6;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = p4;
    i0 = i0 < i1;
    if (i0) {goto B6;}
    i0 = l2;
    l1 = i0;
    i0 = p1;
    i1 = l0;
    i0 = i0 > i1;
    if (i0) {goto L11;}
  B6:;
  i0 = p5;
  i0 = !(i0);
  if (i0) {goto B4;}
  B5:;
  i0 = p1;
  i1 = p5;
  i1 = strlen_0(i1);
  i0 -= i1;
  p6 = i0;
  i1 = l0;
  i0 = i0 <= i1;
  if (i0) {goto B4;}
  i0 = p5;
  i0 = i32_load8_u((&M0), (u64)(i0));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = p5;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i0 = p6;
  p4 = i0;
  L13: vm_checktime();
    i0 = p4;
    i1 = p1;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p4;
    i1 = 1u;
    i0 += i1;
    p4 = i0;
    i0 = l1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p1 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = p1;
    if (i0) {goto L13;}
  B12:;
  i0 = p6;
  p1 = i0;
  B4:;
  i0 = p3;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B14;}
  i0 = p1;
  i1 = l0;
  i0 = i0 <= i1;
  if (i0) {goto B14;}
  i0 = p1;
  i1 = 4294967295u;
  i0 += i1;
  p1 = i0;
  i1 = p3;
  i2 = 31u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = 45u;
  i1 &= i2;
  i32_store8((&M0), (u64)(i0), i1);
  B14:;
  i0 = p2;
  i1 = p1;
  i2 = 4294967295u;
  i1 ^= i2;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = l6;
  i2 += i3;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_int_format_size(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = p1;
  i2 = 33567u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i0 = DIV_U(i0, i1);
  p0 = i0;
  i1 = 1u;
  i0 += i1;
  i1 = 3u;
  i0 = DIV_U(i0, i1);
  i1 = 0u;
  i2 = p3;
  i0 = i2 ? i0 : i1;
  p3 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i0 = strlen_0(i0);
  l0 = i0;
  B0:;
  i0 = p0;
  i1 = p3;
  i0 += i1;
  i1 = l0;
  i0 += i1;
  i1 = 3u;
  i0 += i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_binary_op_extra_cases(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p2;
  i1 = 30u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p2;
  i1 = 14u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i0 = mp_binary_op(i0, i1, i2);
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = p1;
  i2 = 3u;
  i0 = mp_binary_op(i0, i1, i2);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 29u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p2;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 36756u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 33760u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B3:;
  i0 = 0u;
  goto Bfunc;
  B2:;
  i0 = 29u;
  i1 = p2;
  i2 = p1;
  i0 = mp_binary_op(i0, i1, i2);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  u64 l2 = 0;
  f64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  f64 d0, d1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 4u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  p2 = i0;
  if (i0) {goto B5;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B5:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  goto B1;
  B4:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 1u;
  goto Bfunc;
  B3:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p3;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i2 = mp_obj_get_int(i2);
  i3 = 0u;
  i0 = mp_parse_num_integer(i0, i1, i2, i3);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B2:;
  i0 = p2;
  if (i0) {goto B6;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p2;
  i1 = 32832u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = p2;
  i1 = 42644u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = l0;
  i1 = p1;
  j1 = mp_obj_name_to_ull(i1);
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = 0u;
  i1 = 8u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i0 = mp_obj_int_from_bytes_impl(i0, i1, i2);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B7:;
  i0 = p1;
  d0 = mp_obj_float_get(i0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  l2 = j0;
  j1 = 9218868437227405312ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 == j1;
  if (i0) {goto B8;}
  j0 = l2;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  p1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B13;}
  i0 = p1;
  i1 = 4293918720u;
  i0 &= i1;
  i1 = 1103101952u;
  i0 = i0 <= i1;
  if (i0) {goto B12;}
  goto B11;
  B13:;
  j0 = l2;
  i0 = (u32)(j0);
  i1 = 0u;
  i0 = i0 != i1;
  i1 = p1;
  i0 |= i1;
  p1 = i0;
  i1 = 2147483647u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = p1;
  i1 = 2146435072u;
  i0 += i1;
  i1 = 1103101952u;
  i0 = i0 > i1;
  if (i0) {goto B11;}
  B12:;
  d0 = l1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B10;}
  i0 = 2147483648u;
  p1 = i0;
  goto B9;
  B11:;
  i0 = mp_obj_int_new_mpz();
  p1 = i0;
  i1 = 4u;
  i0 += i1;
  d1 = l1;
  mpz_set_from_float(i0, d1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B10:;
  d0 = l1;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  p1 = i0;
  B9:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B8:;
  j0 = l2;
  j1 = 4503599627370495ull;
  j0 &= j1;
  j1 = 0ull;
  i0 = j0 != j1;
  if (i0) {goto B14;}
  i0 = 31632u;
  i1 = 10227u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B14:;
  i0 = 11368u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B6:;
  i0 = 8u;
  i1 = p1;
  i0 = mp_unary_op(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = 0u;
  i3 = 0u;
  i0 = mp_parse_num_integer(i0, i1, i2, i3);
  p1 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 int_from_bytes(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = 4294967295u;
  i1 = 1u;
  i2 = l2;
  i3 = 874u;
  i2 = i2 == i3;
  p1 = i2;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i0 = l1;
  i1 = l3;
  i0 += i1;
  i1 = 4294967295u;
  i0 += i1;
  i1 = l1;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  l5 = i0;
  i0 = 0u;
  p1 = i0;
  i0 = l3;
  l6 = i0;
  L5: vm_checktime();
    i0 = p1;
    i1 = 4194304u;
    i0 = i0 >= i1;
    if (i0) {goto B2;}
    i0 = p1;
    i1 = 8u;
    i0 <<= (i1 & 31);
    i1 = l5;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i0 |= i1;
    p1 = i0;
    i0 = l5;
    i1 = l4;
    i0 += i1;
    l5 = i0;
    i0 = l6;
    i1 = 4294967295u;
    i0 += i1;
    l6 = i0;
    if (i0) {goto L5;}
    goto B3;
  B4:;
  i0 = 0u;
  p1 = i0;
  B3:;
  i0 = p1;
  i0 = mp_obj_new_int_from_uint(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B2:;
  i0 = l2;
  i1 = 874u;
  i0 = i0 != i1;
  i1 = l3;
  i2 = l1;
  i0 = mp_obj_int_from_bytes_impl(i0, i1, i2);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = l2;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 12747u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 int_to_bytes(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = l0;
  i1 = l1;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i1 = 0u;
  i2 = l1;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = l2;
  i2 = 874u;
  i1 = i1 != i2;
  i2 = l1;
  i3 = l3;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  goto B1;
  B2:;
  i0 = l1;
  i1 = 4u;
  i2 = l1;
  i3 = 4u;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i1 = l2;
  i2 = 874u;
  i1 = i1 != i2;
  l2 = i1;
  i2 = l3;
  i3 = l1;
  i4 = l4;
  i3 -= i4;
  i4 = 0u;
  i5 = l2;
  i3 = i5 ? i3 : i4;
  i2 += i3;
  i3 = p1;
  i4 = 1u;
  i3 = (u32)((s32)i3 >> (i4 & 31));
  mp_binary_set_int(i0, i1, i2, i3);
  B1:;
  i0 = 35852u;
  i1 = l0;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  l1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_new_mpz(void) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 33584u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  mpz_init_zero(i0);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_formatted_impl(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5, u32 p6, u32 p7) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = p3;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i0 = p3;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4u;
  i0 <<= (i1 & 31);
  i1 = p4;
  i2 = p5;
  i3 = p7;
  i0 = mp_int_format_size(i0, i1, i2, i3);
  p3 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 <= i1;
  if (i0) {goto B0;}
  i0 = p3;
  i0 = m_malloc(i0);
  l1 = i0;
  i0 = p1;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l0;
  i2 = p4;
  i3 = p5;
  i4 = p6;
  i5 = p7;
  i6 = l1;
  i1 = mpz_as_str_inpl(i1, i2, i3, i4, i5, i6);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = p2;
  i1 = l0;
  i2 = p4;
  i3 = p5;
  i4 = p6;
  i5 = p7;
  i6 = p0;
  i6 = i32_load((&M0), (u64)(i6));
  p3 = i6;
  i1 = mpz_as_str_inpl(i1, i2, i3, i4, i5, i6);
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_from_bytes_impl(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 33584u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  mpz_init_zero(i0);
  i0 = l1;
  i1 = p0;
  i2 = p1;
  i3 = p2;
  mpz_set_from_bytes(i0, i1, i2, i3);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_to_bytes_impl(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p3;
  i1 = 0u;
  i2 = p2;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i0 = mpz_as_bytes(i0, i1, i2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_sign(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 4294967295u;
  i1 = 1u;
  i2 = p0;
  i2 = i32_load8_u((&M0), (u64)(i2 + 4));
  i3 = 1u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  i0 = 4294967295u;
  i1 = p0;
  i2 = 1u;
  i1 = (u32)((s32)i1 > (s32)i2);
  i2 = p0;
  i3 = 0u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = p0;
  switch (i0) {
    case 0: goto B2;
    case 1: goto B6;
    case 2: goto B5;
    case 3: goto B3;
    case 4: goto B1;
    case 5: goto B3;
    case 6: goto B0;
    case 7: goto B4;
    default: goto B2;
  }
  B6:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = 33584u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  mpz_init_zero(i0);
  i0 = l0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  mpz_neg_inpl(i0, i1);
  i0 = p0;
  goto Bfunc;
  B5:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = 33584u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  mpz_init_zero(i0);
  i0 = l0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  mpz_not_inpl(i0, i1);
  i0 = p0;
  goto Bfunc;
  B4:;
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 16u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = 33584u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  mpz_init_zero(i0);
  i0 = l0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  mpz_abs_inpl(i0, i1);
  i0 = p0;
  goto Bfunc;
  B3:;
  i0 = 0u;
  p1 = i0;
  B2:;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i3 = 8u;
  i2 += i3;
  i2 = i32_load((&M0), (u64)(i2));
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = mpz_hash(i0);
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B8;}
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = 1u;
  l2 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  goto B6;
  B8:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i2 = 2u;
  i3 = p1;
  i4 = 1u;
  i3 = (u32)((s32)i3 >> (i4 & 31));
  mpz_init_fixed_from_int(i0, i1, i2, i3);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  l1 = i0;
  i0 = 1u;
  l2 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  l3 = i0;
  if (i0) {goto B6;}
  B7:;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B9;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B11;}
  i0 = l2;
  i1 = 32832u;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  i0 = l2;
  i1 = 30496u;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  i0 = p0;
  i1 = l1;
  d1 = mpz_as_float(i1);
  d2 = 0;
  i3 = p2;
  i0 = mp_obj_complex_binary_op(i0, d1, d2, i3);
  p2 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B11:;
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  p1 = i0;
  i0 = p0;
  i1 = 32u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  goto B4;
  B10:;
  i0 = p0;
  i1 = l1;
  d1 = mpz_as_float(i1);
  i2 = p2;
  i0 = mp_obj_float_binary_op(i0, d1, i2);
  p2 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B9:;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i0 = mp_obj_int_binary_op_extra_cases(i0, i1, i2);
  p2 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B6:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i2 = 2u;
  i3 = p2;
  i4 = l2;
  i3 = (u32)((s32)i3 >> (i4 & 31));
  mpz_init_fixed_from_int(i0, i1, i2, i3);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  p1 = i0;
  i0 = p0;
  i1 = 32u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  B5:;
  i0 = p0;
  i1 = 19u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  B4:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l1;
  d0 = mpz_as_float(i0);
  i1 = p1;
  d1 = mpz_as_float(i1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  i0 = mp_obj_new_float(d0);
  p2 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B3:;
  i0 = p0;
  i1 = 4294967287u;
  i0 += i1;
  l2 = i0;
  i1 = 26u;
  i0 = i0 > i1;
  if (i0) {goto B26;}
  i0 = 16u;
  i0 = m_malloc(i0);
  l4 = i0;
  i1 = 33584u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = 4u;
  i0 += i1;
  l5 = i0;
  mpz_init_zero(i0);
  i0 = l2;
  i1 = 25u;
  i0 = i0 > i1;
  if (i0) {goto B13;}
  i0 = l2;
  switch (i0) {
    case 0: goto B21;
    case 1: goto B18;
    case 2: goto B19;
    case 3: goto B27;
    case 4: goto B27;
    case 5: goto B25;
    case 6: goto B20;
    case 7: goto B17;
    case 8: goto B13;
    case 9: goto B16;
    case 10: goto B13;
    case 11: goto B24;
    case 12: goto B15;
    case 13: goto B21;
    case 14: goto B18;
    case 15: goto B19;
    case 16: goto B27;
    case 17: goto B27;
    case 18: goto B25;
    case 19: goto B20;
    case 20: goto B17;
    case 21: goto B13;
    case 22: goto B16;
    case 23: goto B13;
    case 24: goto B24;
    case 25: goto B15;
    default: goto B21;
  }
  B27:;
  i0 = l3;
  if (i0) {goto B23;}
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i0 = mpz_as_int_checked(i0, i1);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B22;}
  goto B0;
  B26:;
  i0 = l1;
  i1 = p1;
  i0 = mpz_cmp(i0, i1);
  p2 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B28;}
  i0 = p0;
  switch (i0) {
    case 0: goto B33;
    case 1: goto B29;
    case 2: goto B31;
    case 3: goto B30;
    case 4: goto B32;
    default: goto B33;
  }
  B33:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = p2;
  i3 = 4294967295u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B32:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = p2;
  i3 = 0u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B31:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = p2;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B30:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = p2;
  i3 = 0u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B29:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = p2;
  i3 = 1u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B28:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B25:;
  i0 = l5;
  i1 = l1;
  i2 = p1;
  mpz_add_inpl(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B24:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  mpz_init_zero(i0);
  i0 = l0;
  i1 = l5;
  i2 = l1;
  i3 = p1;
  mpz_divmod_inpl(i0, i1, i2, i3);
  i0 = l0;
  mpz_deinit(i0);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B23:;
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  p2 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B0;}
  B22:;
  i0 = p0;
  i1 = 25u;
  i0 = i0 == i1;
  if (i0) {goto B34;}
  i0 = p0;
  i1 = 12u;
  i0 = i0 != i1;
  if (i0) {goto B14;}
  B34:;
  i0 = l5;
  i1 = l1;
  i2 = p2;
  mpz_shl_inpl(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B21:;
  i0 = l5;
  i1 = l1;
  i2 = p1;
  mpz_or_inpl(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B20:;
  i0 = l5;
  i1 = l1;
  i2 = p1;
  mpz_sub_inpl(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B19:;
  i0 = l5;
  i1 = l1;
  i2 = p1;
  mpz_and_inpl(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B18:;
  i0 = l5;
  i1 = l1;
  i2 = p1;
  mpz_xor_inpl(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B17:;
  i0 = l5;
  i1 = l1;
  i2 = p1;
  mpz_mul_inpl(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B16:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  mpz_init_zero(i0);
  i0 = l5;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = l1;
  i3 = p1;
  mpz_divmod_inpl(i0, i1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  mpz_deinit(i0);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B15:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B35;}
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B12;}
  B35:;
  i0 = l5;
  i1 = l1;
  i2 = p1;
  mpz_pow_inpl(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B14:;
  i0 = l5;
  i1 = l1;
  i2 = p2;
  mpz_shr_inpl(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B13:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = 33584u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  mpz_init_zero(i0);
  i0 = p0;
  i1 = l5;
  i2 = l1;
  i3 = p1;
  mpz_divmod_inpl(i0, i1, i2, i3);
  i0 = l0;
  i1 = l4;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 2u;
  i1 = l0;
  i0 = mp_obj_new_tuple(i0, i1);
  p2 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B12:;
  i0 = p0;
  i1 = l1;
  d1 = mpz_as_float(i1);
  i2 = p2;
  i0 = mp_obj_float_binary_op(i0, d1, i2);
  p2 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B2:;
  i0 = 31692u;
  i1 = 10252u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B1:;
  i0 = 31632u;
  i1 = 12771u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B0:;
  i0 = 11393u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_get_checked(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mpz_as_int_checked(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  goto Bfunc;
  B0:;
  i0 = 31632u;
  i1 = 12771u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_pow3(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  l1 = i0;
  if (i0) {goto B5;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  B5:;
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  l2 = i0;
  if (i0) {goto B6;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  B6:;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  l3 = i0;
  if (i0) {goto B7;}
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  B7:;
  i0 = 16u;
  i0 = m_malloc(i0);
  l4 = i0;
  i1 = 33584u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = 4u;
  i0 += i1;
  l5 = i0;
  mpz_init_zero(i0);
  i0 = l5;
  j1 = 0ull;
  i2 = 0u;
  mpz_set_from_ll(i0, j1, i2);
  i0 = l1;
  if (i0) {goto B9;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B8;}
  goto B3;
  B9:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = p0;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  mpz_init_from_int(i0, i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  p0 = i0;
  i0 = l2;
  if (i0) {goto B3;}
  B8:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  p1 = i0;
  i0 = l3;
  if (i0) {goto B2;}
  goto B1;
  B4:;
  i0 = 12097u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B3:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p1;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  mpz_init_from_int(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  p1 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  i0 = l0;
  i1 = p2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  mpz_init_from_int(i0, i1);
  i0 = l0;
  p2 = i0;
  goto B0;
  B1:;
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  p2 = i0;
  B0:;
  i0 = l5;
  i1 = p0;
  i2 = p1;
  i3 = p2;
  mpz_pow3_inpl(i0, i1, i2, i3);
  i0 = p0;
  i1 = l0;
  i2 = 32u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B14;}
  i0 = p1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B13;}
  goto B12;
  B14:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  mpz_deinit(i0);
  i0 = p1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = i0 != i1;
  if (i0) {goto B12;}
  B13:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  mpz_deinit(i0);
  i0 = p2;
  i1 = l0;
  i0 = i0 != i1;
  if (i0) {goto B11;}
  goto B10;
  B12:;
  i0 = p2;
  i1 = l0;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  B11:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B10:;
  i0 = l0;
  mpz_deinit(i0);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_int_from_ull(u64 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 33584u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  mpz_init_zero(i0);
  i0 = l1;
  j1 = p0;
  i2 = 0u;
  mpz_set_from_ll(i0, j1, i2);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_int(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l0 = i0;
  i1 = p0;
  i0 ^= i1;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 33584u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  mpz_init_zero(i0);
  i0 = l1;
  i1 = p0;
  j1 = (u64)(s64)(s32)(i1);
  i2 = 1u;
  mpz_set_from_ll(i0, j1, i2);
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_int_from_ll(u64 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 33584u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  mpz_init_zero(i0);
  i0 = l1;
  j1 = p0;
  i2 = 1u;
  mpz_set_from_ll(i0, j1, i2);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_int_from_uint(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = p0;
  i1 = 1073741823u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 33584u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  mpz_init_zero(i0);
  i0 = l1;
  i1 = p0;
  j1 = (u64)(i1);
  i2 = 0u;
  mpz_set_from_ll(i0, j1, i2);
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_int_from_str_len(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 33584u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  mpz_init_zero(i0);
  i0 = p0;
  i1 = l1;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = p1;
  i4 = p2;
  i5 = p3;
  i1 = mpz_set_from_str(i1, i2, i3, i4, i5);
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2));
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_get_truncated(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = mpz_hash(i0);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_int_get_uint_checked(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mpz_as_uint_checked(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  goto Bfunc;
  B0:;
  i0 = 31632u;
  i1 = 12771u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static f64 mp_obj_int_as_float_impl(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  f64 d0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  d0 = mpz_as_float(i0);
  FUNC_EPILOGUE;
  return d0;
}

static u32 mp_obj_list_append(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l1 = i1;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l1;
  i3 = 3u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 <<= (i2 & 31);
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  l2 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  l3 = i1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = l1;
  i3 = l3;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B0:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_list_sort(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 4294967295u;
  i0 += i1;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i2 = p2;
  i3 = 2u;
  i4 = 33744u;
  i5 = l0;
  i6 = 8u;
  i5 += i6;
  mp_arg_parse_all(i0, i1, i2, i3, i4, i5);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p2 = i0;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i1 = p1;
  i2 = p2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i2 = 4294967292u;
  i1 += i2;
  i2 = 0u;
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 8));
  p1 = i3;
  i4 = p1;
  i5 = 6u;
  i4 = i4 == i5;
  i2 = i4 ? i2 : i3;
  i3 = 14u;
  i4 = 30u;
  i5 = l0;
  i5 = i32_load8_u((&M0), (u64)(i5 + 12));
  i3 = i5 ? i3 : i4;
  mp_quicksort(i0, i1, i2, i3);
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_quicksort(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  L1: vm_checktime();
    i0 = p0;
    i1 = 4294967292u;
    i0 += i1;
    l0 = i0;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i0 = p2;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = p2;
    i1 = l1;
    i0 = mp_call_function_1(i0, i1);
    l1 = i0;
    i0 = p1;
    l2 = i0;
    L4: vm_checktime();
      i0 = l0;
      i1 = 4u;
      i0 += i1;
      l3 = i0;
      L6: vm_checktime();
        i0 = l3;
        l0 = i0;
        i1 = l2;
        i0 = i0 >= i1;
        if (i0) {goto B5;}
        i0 = l0;
        i1 = 4u;
        i0 += i1;
        l3 = i0;
        i0 = 0u;
        i1 = p2;
        i2 = l0;
        i2 = i32_load((&M0), (u64)(i2));
        i1 = mp_call_function_1(i1, i2);
        i2 = l1;
        i0 = mp_binary_op(i0, i1, i2);
        i1 = p3;
        i0 = i0 == i1;
        if (i0) {goto L6;}
      B5:;
      i0 = l2;
      i1 = 4294967292u;
      i0 += i1;
      l3 = i0;
      L7: vm_checktime();
        i0 = l0;
        i1 = l3;
        i0 = i0 >= i1;
        if (i0) {goto B2;}
        i0 = l3;
        i0 = i32_load((&M0), (u64)(i0));
        l2 = i0;
        i0 = l3;
        i1 = 4294967292u;
        i0 += i1;
        l4 = i0;
        l3 = i0;
        i0 = 0u;
        i1 = l1;
        i2 = p2;
        i3 = l2;
        i2 = mp_call_function_1(i2, i3);
        i0 = mp_binary_op(i0, i1, i2);
        i1 = p3;
        i0 = i0 == i1;
        if (i0) {goto L7;}
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0));
      l3 = i0;
      i0 = l0;
      i1 = l4;
      i2 = 4u;
      i1 += i2;
      l2 = i1;
      i1 = i32_load((&M0), (u64)(i1));
      i32_store((&M0), (u64)(i0), i1);
      i0 = l2;
      i1 = l3;
      i32_store((&M0), (u64)(i0), i1);
      goto L4;
    B3:;
    i0 = p1;
    l2 = i0;
    L8: vm_checktime();
      i0 = l0;
      i1 = 4u;
      i0 += i1;
      l3 = i0;
      L10: vm_checktime();
        i0 = l3;
        l0 = i0;
        i1 = l2;
        i0 = i0 >= i1;
        if (i0) {goto B9;}
        i0 = l0;
        i1 = 4u;
        i0 += i1;
        l3 = i0;
        i0 = 0u;
        i1 = l0;
        i1 = i32_load((&M0), (u64)(i1));
        i2 = l1;
        i0 = mp_binary_op(i0, i1, i2);
        i1 = p3;
        i0 = i0 == i1;
        if (i0) {goto L10;}
      B9:;
      i0 = l2;
      i1 = 4294967292u;
      i0 += i1;
      l3 = i0;
      L11: vm_checktime();
        i0 = l0;
        i1 = l3;
        i0 = i0 >= i1;
        if (i0) {goto B2;}
        i0 = l3;
        i0 = i32_load((&M0), (u64)(i0));
        l2 = i0;
        i0 = l3;
        i1 = 4294967292u;
        i0 += i1;
        l3 = i0;
        i0 = 0u;
        i1 = l1;
        i2 = l2;
        i0 = mp_binary_op(i0, i1, i2);
        i1 = p3;
        i0 = i0 == i1;
        if (i0) {goto L11;}
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0));
      l4 = i0;
      i0 = l0;
      i1 = l3;
      i2 = 4u;
      i1 += i2;
      l2 = i1;
      i1 = i32_load((&M0), (u64)(i1));
      i32_store((&M0), (u64)(i0), i1);
      i0 = l2;
      i1 = l4;
      i32_store((&M0), (u64)(i0), i1);
      goto L8;
    B2:;
    i0 = l0;
    i1 = 4294967292u;
    i0 += i1;
    l2 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i0 = l0;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = l1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = p0;
    i0 -= i1;
    i1 = 2u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    i1 = p1;
    i2 = l0;
    i1 -= i2;
    i2 = 2u;
    i1 = (u32)((s32)i1 >> (i2 & 31));
    i2 = 4294967295u;
    i1 += i2;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto B12;}
    i0 = p0;
    i1 = l3;
    i2 = p2;
    i3 = p3;
    mp_quicksort(i0, i1, i2, i3);
    i0 = l2;
    i1 = 8u;
    i0 += i1;
    p0 = i0;
    i1 = p1;
    i0 = i0 < i1;
    if (i0) {goto L1;}
    goto B0;
    B12:;
    i0 = l2;
    i1 = 8u;
    i0 += i1;
    i1 = p1;
    i2 = p2;
    i3 = p3;
    mp_quicksort(i0, i1, i2, i3);
    i0 = p0;
    i1 = l3;
    p1 = i1;
    i0 = i0 < i1;
    if (i0) {goto L1;}
  B0:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_list_remove(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = 2u;
  i4 = l0;
  i5 = 8u;
  i4 += i5;
  i1 = mp_seq_index_obj(i1, i2, i3, i4);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = list_pop(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_pop(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = 4294967295u;
  l3 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l3 = i0;
  B1:;
  i0 = l2;
  i1 = l1;
  i2 = l3;
  i3 = 0u;
  i0 = mp_get_index(i0, i1, i2, i3);
  p1 = i0;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967295u;
  i1 += i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p0 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = p0;
  i1 = p0;
  i2 = 4u;
  i1 += i2;
  i2 = l1;
  i3 = p1;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i1 = 5u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = l3;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  l3 = i0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i3 = 1u;
  i2 <<= (i3 & 31);
  i3 = 4294967292u;
  i2 &= i3;
  i1 = m_realloc(i1, i2);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 >>= (i2 & 31);
  i32_store((&M0), (u64)(i0), i1);
  B2:;
  i0 = l2;
  goto Bfunc;
  B0:;
  i0 = 32052u;
  i1 = 10267u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_index(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p0;
  i3 = p1;
  i0 = mp_seq_index_obj(i0, i1, i2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static void list_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 11414u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 3u;
  i1 = 1u;
  i2 = p2;
  i3 = 3u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l0 = i0;
  i0 = 0u;
  p2 = i0;
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  l1 = i0;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i0 = 0u;
  p1 = i0;
  L1: vm_checktime();
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = p0;
    i1 = 12138u;
    i0 = mp_print_str(i0, i1);
    B2:;
    i0 = p0;
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = p2;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l0;
    mp_obj_print_helper(i0, i1, i2);
    i0 = p2;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = i0 < i1;
    if (i0) {goto L1;}
  B0:;
  i0 = p0;
  i1 = 12816u;
  i0 = mp_print_str(i0, i1);
  FUNC_EPILOGUE;
}

static u32 list_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = 33760u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  j1 = 4ull;
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = p2;
  i1 = 16u;
  i1 = m_malloc(i1);
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 0u;
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = list_extend_from_iter(i0, i1);
  p2 = i0;
  B0:;
  i0 = p2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_extend_from_iter(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  l0 = i0;
  i0 = mp_iternext(i0);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  L1: vm_checktime();
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    l5 = i1;
    i0 = i0 < i1;
    if (i0) {goto B2;}
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l5;
    i3 = 3u;
    i2 <<= (i3 & 31);
    i1 = m_realloc(i1, i2);
    p1 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 <<= (i2 & 31);
    l5 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    l6 = i1;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = 0u;
    i2 = l5;
    i3 = l6;
    i2 -= i3;
    i3 = 2u;
    i2 <<= (i3 & 31);
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    B2:;
    i0 = l3;
    i1 = p1;
    i2 = 1u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p1;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = l1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i0 = mp_iternext(i0);
    l1 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l0 = i0;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 29u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  switch (i0) {
    case 0: goto B5;
    case 1: goto B5;
    case 2: goto B5;
    case 3: goto B5;
    case 4: goto B5;
    case 5: goto B0;
    case 6: goto B0;
    case 7: goto B0;
    case 8: goto B0;
    case 9: goto B0;
    case 10: goto B0;
    case 11: goto B0;
    case 12: goto B0;
    case 13: goto B0;
    case 14: goto B4;
    case 15: goto B0;
    case 16: goto B0;
    case 17: goto B0;
    case 18: goto B0;
    case 19: goto B0;
    case 20: goto B0;
    case 21: goto B0;
    case 22: goto B0;
    case 23: goto B0;
    case 24: goto B0;
    case 25: goto B0;
    case 26: goto B0;
    case 27: goto B3;
    case 28: goto B0;
    case 29: goto B2;
    default: goto B5;
  }
  B5:;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B6;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33760u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B6:;
  i0 = 14u;
  i1 = 0u;
  i2 = p0;
  i3 = 2u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  goto B0;
  B4:;
  i0 = p1;
  i1 = p2;
  i0 = list_extend(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B3:;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33760u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = 33760u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = l1;
  i2 = l2;
  i1 += i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = l1;
  i2 = 4u;
  i3 = l1;
  i4 = 4u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i1 = m_malloc(i1);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l2;
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = l1;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p2;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B2:;
  i0 = 0u;
  l1 = i0;
  i0 = p2;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_get_int_maybe(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B7;}
  i0 = 0u;
  p2 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  B7:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = 33760u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p2;
  i2 = l1;
  i1 *= i2;
  p2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p2;
  i2 = 4u;
  i3 = p2;
  i4 = 4u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i1 = m_malloc(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p2;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 4u;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  i4 = p0;
  i4 = i32_load((&M0), (u64)(i4 + 12));
  mp_seq_multiply(i0, i1, i2, i3, i4);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = p2;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  i4 = p2;
  i4 = i32_load((&M0), (u64)(i4 + 8));
  i0 = mp_seq_cmp_objs(i0, i1, i2, i3, i4);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = p0;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_extend(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33760u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = p1;
  i0 = list_extend_from_iter(i0, i1);
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l1 = i1;
  i0 += i1;
  l2 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i3 = 16u;
  i2 += i3;
  i1 = m_realloc(i1, i2);
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  l1 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p0;
  i3 = 8u;
  i2 += i3;
  l2 = i2;
  i2 = i32_load((&M0), (u64)(i2));
  i1 += i2;
  l3 = i1;
  i2 = 4u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l3;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = 16u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  B2:;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = l0;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i3 = 8u;
  i2 += i3;
  i2 = i32_load((&M0), (u64)(i2));
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 6u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_subscr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  i0 = p2;
  if (i0) {goto B9;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B11;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35484u;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  B11:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = list_pop(i0, i1);
  goto B2;
  B10:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B12;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35484u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  B12:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p1;
  i3 = 0u;
  i0 = mp_get_index(i0, i1, i2, i3);
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B9:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p1;
  i3 = 0u;
  i0 = mp_get_index(i0, i1, i2, i3);
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  goto B2;
  B13:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35484u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p1;
  i3 = 0u;
  i0 = mp_get_index(i0, i1, i2, i3);
  p1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  goto B2;
  B8:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_seq_get_fast_slice_indexes(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  p2 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  l1 = i1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p1;
  i2 = 0u;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 20));
  l2 = i2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i2 = p0;
  i3 = 8u;
  i2 += i3;
  p1 = i2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = l2;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l1;
  i3 = p2;
  i2 -= i3;
  p0 = i2;
  i1 += i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = 0u;
  i3 = p0;
  i4 = 2u;
  i3 <<= (i4 & 31);
  i2 -= i3;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p0;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  goto B2;
  B7:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_seq_get_fast_slice_indexes(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l1 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = 33760u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = l1;
  i2 = p2;
  i1 -= i2;
  p2 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = p2;
  i2 = 4u;
  i3 = p2;
  i4 = 4u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i1 = m_malloc(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p2;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 16));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B6:;
  i0 = p2;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_obj_get_array(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_seq_get_fast_slice_indexes(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  l3 = i1;
  i0 -= i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  l2 = i1;
  i0 += i1;
  p1 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l4 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l5 = i0;
  i1 = p1;
  i0 += i1;
  l6 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = i0 <= i1;
  if (i0) {goto B14;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = p2;
  i2 = l6;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  p2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l4;
  i1 = i32_load((&M0), (u64)(i1));
  l5 = i1;
  i2 = p1;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  B14:;
  i0 = p2;
  i1 = l2;
  i2 = l1;
  i1 += i2;
  l1 = i1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p2;
  i2 = l3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i2 = p1;
  i3 = l1;
  i2 -= i3;
  i3 = l5;
  i2 += i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  goto B3;
  B5:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_seq_extract_slice(i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B4:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 16));
  i1 += i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 20));
  l1 = i2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i2 = p0;
  i3 = 8u;
  i2 += i3;
  p2 = i2;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = l1;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i1 += i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = 0u;
  i3 = p1;
  i4 = 2u;
  i3 <<= (i4 & 31);
  i2 -= i3;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  B3:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  B2:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B1:;
  i0 = 0u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  B0:;
  i0 = 0u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_getiter(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 98u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 34424u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_it_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = l1;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_list_init(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i1 = 33760u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = p1;
  i2 = 4u;
  i3 = p1;
  i4 = 4u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i1 = m_malloc(i1);
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p1;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  FUNC_EPILOGUE;
}

static u32 mp_obj_new_list(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 33760u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p0;
  i2 = 4u;
  i3 = p0;
  i4 = 4u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i1 = m_malloc(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p0;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p0;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  l2 = i0;
  L1: vm_checktime();
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l1;
    i0 += i1;
    i1 = p1;
    i2 = l1;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_list_get(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mp_obj_list_set_len(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  FUNC_EPILOGUE;
}

static u32 list_clear(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 16u;
  i0 = m_realloc(i0, i1);
  l0 = i0;
  i0 = p0;
  i1 = 4u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 0u;
  i2 = 16u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_copy(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  l2 = i0;
  i1 = 33760u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l2;
  i1 = l1;
  i2 = 4u;
  i3 = l1;
  i4 = 4u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = p0;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i1 = m_malloc(i1);
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = l2;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = l1;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  p0 = i0;
  i0 = l2;
  i1 = 12u;
  i0 += i1;
  l3 = i0;
  L1: vm_checktime();
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p0;
    i0 += i1;
    i1 = l0;
    i2 = p0;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_count(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p1;
  i0 = mp_seq_count_obj(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_insert(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i1 = p1;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = l0;
  i3 = p1;
  i4 = 31u;
  i3 = (u32)((s32)i3 >> (i4 & 31));
  i2 &= i3;
  i1 += i2;
  p1 = i1;
  i2 = 0u;
  i3 = p1;
  i4 = 0u;
  i3 = (u32)((s32)i3 > (s32)i4);
  i1 = i3 ? i1 : i2;
  p1 = i1;
  i2 = p1;
  i3 = l0;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  p1 = i1;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i3 = 3u;
  i2 <<= (i3 & 31);
  i1 = m_realloc(i1, i2);
  p1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 <<= (i2 & 31);
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  l2 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  l3 = i1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 0u;
  i2 = l0;
  i3 = l3;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B0:;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 2u;
  i1 <<= (i2 & 31);
  p1 = i1;
  i0 += i1;
  i1 = 6u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = l1;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B1;}
  L2: vm_checktime();
    i0 = p0;
    i1 = p1;
    i0 += i1;
    p0 = i0;
    i1 = p0;
    i2 = 4294967292u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 4294967292u;
    i0 += i1;
    p1 = i0;
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    i0 = l0;
    i1 = 4294967295u;
    i0 += i1;
    l0 = i0;
    i1 = l1;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto L2;}
  B1:;
  i0 = p0;
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 list_reverse(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i1 = 2u;
  i0 = I32_DIV_S(i0, i1);
  l1 = i0;
  i0 = l0;
  i1 = 2u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 4294967292u;
  i0 += i1;
  l0 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  p0 = i0;
  L1: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i1 = l2;
    i0 += i1;
    l4 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i0 = l4;
    i1 = l3;
    i2 = l0;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i0 += i1;
    i1 = l5;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 4294967292u;
    i0 += i1;
    l0 = i0;
    i0 = l2;
    i1 = 4u;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 map_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 393214u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i1 = 4294967295u;
  i0 += i1;
  p2 = i0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 12u;
  i0 += i1;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p3;
  i1 = 4u;
  i0 += i1;
  p1 = i0;
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  p3 = i0;
  L1: vm_checktime();
    i0 = p3;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 0u;
    i1 = mp_getiter(i1, i2);
    i32_store((&M0), (u64)(i0), i1);
    i0 = p3;
    i1 = 4u;
    i0 += i1;
    p3 = i0;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p2;
    i1 = 4294967295u;
    i0 += i1;
    p2 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 map_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 2u;
  i0 <<= (i1 & 31);
  i0 = m_malloc(i0);
  l0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l2 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l4 = i0;
  L2: vm_checktime();
    i0 = l2;
    i1 = l3;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = mp_iternext(i0);
    l1 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l0;
    i1 = l3;
    i0 += i1;
    i1 = l1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l3 = i0;
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l1 = i1;
    i0 = i0 < i1;
    if (i0) {goto L2;}
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l1;
  i2 = 0u;
  i3 = l0;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  goto Bfunc;
  B0:;
  i0 = l0;
  m_free(i0);
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 strcmp_0(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l0 = i0;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l1;
  i1 = l0;
  i2 = 255u;
  i1 &= i2;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  p0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 += i1;
  p1 = i0;
  L1: vm_checktime();
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l0 = i0;
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l1 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i0 = l1;
    i1 = l0;
    i2 = 255u;
    i1 &= i2;
    i0 = i0 == i1;
    if (i0) {goto L1;}
  B0:;
  i0 = l1;
  i1 = l0;
  i2 = 255u;
  i1 &= i2;
  i0 -= i1;
  FUNC_EPILOGUE;
  return i0;
}

static void module_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 4u;
  i0 += i1;
  i1 = 186u;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = mp_obj_str_get_str(i0);
  l1 = i0;
  goto B0;
  B1:;
  i0 = 10287u;
  l1 = i0;
  B0:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4u;
  i0 += i1;
  i1 = 1410u;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i1 = mp_obj_str_get_str(i1);
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = p0;
  i1 = 11416u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 12141u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void module_attr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B3;}
  goto B1;
  B4:;
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  l1 = i1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p2;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B3:;
  i0 = l0;
  i1 = 38472u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5260));
  l0 = i0;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 1u;
  i1 = mp_obj_new_dict(i1);
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 5260), i1);
  goto B1;
  B2:;
  i0 = p1;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4u;
  i0 += i1;
  i1 = 114u;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = l1;
  i1 = mp_call_function_1(i1, i2);
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  p0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l0;
  i1 = p0;
  i2 = p1;
  i0 = mp_obj_dict_store(i0, i1, i2);
  goto B5;
  B6:;
  i0 = l0;
  i1 = p0;
  i0 = mp_obj_dict_delete(i0, i1);
  B5:;
  i0 = p2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_new_module(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 5188u;
  i1 = p0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  l0 = i1;
  i2 = 1u;
  i0 = mp_map_lookup(i0, i1, i2);
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 8u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = 34088u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 1u;
  i1 = mp_obj_new_dict(i1);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = 186u;
  i2 = l0;
  i0 = mp_obj_dict_store(i0, i1, i2);
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_module_get(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = 5188u;
  i1 = p0;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  l1 = i1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  p0 = i0;
  if (i0) {goto B1;}
  i0 = 34288u;
  i1 = l1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_module_search_umodule(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 21u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B16;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B15;}
  B16:;
  i0 = 63u;
  i0 = qstr_str(i0);
  l1 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B17;}
  i0 = 1u;
  l0 = i0;
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B1;}
  B17:;
  i0 = 115u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B18;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B14;}
  B18:;
  i0 = 452u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B19;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B13;}
  B19:;
  i0 = 450u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B20;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B12;}
  B20:;
  i0 = 458u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B21;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B11;}
  B21:;
  i0 = 363u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B22;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B10;}
  B22:;
  i0 = 252u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B23;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B9;}
  B23:;
  i0 = 459u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B24;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B8;}
  B24:;
  i0 = 453u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B25;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B7;}
  B25:;
  i0 = 451u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B26;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B6;}
  B26:;
  i0 = 449u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B27;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B5;}
  B27:;
  i0 = 460u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B28;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B4;}
  B28:;
  i0 = 448u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B29;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B3;}
  B29:;
  i0 = 336u;
  i0 = qstr_str(i0);
  l0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B30;}
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  i0 = !(i0);
  if (i0) {goto B2;}
  B30:;
  i0 = 0u;
  l0 = i0;
  i0 = 250u;
  i0 = qstr_str(i0);
  l1 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 117u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i0 = strcmp_0(i0, i1);
  if (i0) {goto B0;}
  i0 = 15u;
  l0 = i0;
  goto B1;
  B15:;
  i0 = 0u;
  l0 = i0;
  goto B1;
  B14:;
  i0 = 2u;
  l0 = i0;
  goto B1;
  B13:;
  i0 = 3u;
  l0 = i0;
  goto B1;
  B12:;
  i0 = 4u;
  l0 = i0;
  goto B1;
  B11:;
  i0 = 5u;
  l0 = i0;
  goto B1;
  B10:;
  i0 = 6u;
  l0 = i0;
  goto B1;
  B9:;
  i0 = 7u;
  l0 = i0;
  goto B1;
  B8:;
  i0 = 8u;
  l0 = i0;
  goto B1;
  B7:;
  i0 = 9u;
  l0 = i0;
  goto B1;
  B6:;
  i0 = 10u;
  l0 = i0;
  goto B1;
  B5:;
  i0 = 11u;
  l0 = i0;
  goto B1;
  B4:;
  i0 = 12u;
  l0 = i0;
  goto B1;
  B3:;
  i0 = 13u;
  l0 = i0;
  goto B1;
  B2:;
  i0 = 14u;
  l0 = i0;
  B1:;
  i0 = l0;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 34164u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 object_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 0u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 4u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 object___init__(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 object___new__(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36936u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 8u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_new_instance(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 10288u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 polymorph_it_iternext(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32), 1, i1, i0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 property_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = p3;
  i3 = 4u;
  i4 = 34544u;
  i5 = l0;
  mp_arg_parse_all_kw_array(i0, i1, i2, i3, i4, i5);
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_property_get(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 property_getter(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 property_setter(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 property_deleter(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void none_print(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p2;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 10310u;
  i0 = mp_print_str(i0, i1);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 11440u;
  i0 = mp_print_str(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 new_namedtuple_type(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = mp_obj_str_get_qstr(i0);
  l1 = i0;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36168u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 1u;
  i2 = l0;
  i3 = 12u;
  i2 += i3;
  i1 = mp_obj_str_split(i1, i2);
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  B0:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = 4u;
  i2 += i3;
  mp_obj_get_array(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 64u;
  i0 += i1;
  i0 = m_malloc(i0);
  l3 = i0;
  i1 = 0u;
  i2 = 60u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l3;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 60), i1);
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l3;
  i1 = 64u;
  i0 += i1;
  p0 = i0;
  L3: vm_checktime();
    i0 = p0;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i1 = mp_obj_str_get_qstr(i1);
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = l2;
    i1 = 4294967295u;
    i0 += i1;
    l2 = i0;
    if (i0) {goto L3;}
  B2:;
  i0 = l3;
  i1 = 8u;
  i32_store16((&M0), (u64)(i0 + 4), i1);
  i0 = l3;
  i1 = 36936u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = l1;
  i32_store16((&M0), (u64)(i0 + 6), i1);
  i0 = l3;
  i1 = 129u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l3;
  i1 = 130u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l3;
  i1 = 25u;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l3;
  i1 = 26u;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l3;
  i1 = 131u;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l3;
  i1 = 28u;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l3;
  i1 = 29u;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l3;
  i1 = 36756u;
  i32_store((&M0), (u64)(i0 + 52), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  FUNC_EPILOGUE;
  return i0;
}

static void namedtuple_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 10315u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 64u;
  i1 += i2;
  i2 = p1;
  mp_obj_attrtuple_print_helper(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 namedtuple_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = p1;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 60));
  l2 = i1;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l2;
  i1 = 0u;
  i0 = mp_obj_new_tuple(i0, i1);
  l3 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = 8u;
  i0 += i1;
  l4 = i0;
  i1 = p3;
  i2 = p1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  l2 = i2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l4;
  i1 = l2;
  i0 += i1;
  i1 = 0u;
  i2 = p2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = p1;
  i0 += i1;
  l5 = i0;
  i1 = p1;
  i0 = i0 <= i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 64u;
  i0 += i1;
  l6 = i0;
  i0 = p0;
  i1 = 60u;
  i0 += i1;
  l7 = i0;
  L4: vm_checktime();
    i0 = p3;
    i1 = p1;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l8 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = mp_obj_str_get_qstr(i0);
    l1 = i0;
    i0 = l7;
    i0 = i32_load((&M0), (u64)(i0));
    l9 = i0;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = 0u;
    l2 = i0;
    i0 = l6;
    p0 = i0;
    i0 = l4;
    p2 = i0;
    L6: vm_checktime();
      i0 = p0;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l1;
      i0 = i0 == i1;
      if (i0) {goto B5;}
      i0 = p0;
      i1 = 4u;
      i0 += i1;
      p0 = i0;
      i0 = p2;
      i1 = 4u;
      i0 += i1;
      p2 = i0;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l2 = i0;
      i1 = l9;
      i0 = i0 < i1;
      if (i0) {goto L6;}
      goto B2;
    B5:;
    i0 = p2;
    i0 = i32_load((&M0), (u64)(i0));
    if (i0) {goto B1;}
    i0 = p2;
    i1 = l8;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i1 = l5;
    i0 = i0 < i1;
    if (i0) {goto L4;}
  B3:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 12155u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B1:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 32592u;
  i1 = 12818u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l0;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = 32592u;
  i1 = 11445u;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void namedtuple_attr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 60));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  l0 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  p0 = i0;
  i0 = 0u;
  l2 = i0;
  L3: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p1;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    i0 = l0;
    i1 = 4u;
    i0 += i1;
    l0 = i0;
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L3;}
  B2:;
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 31812u;
  i1 = 13249u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void range_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 4));
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p0;
  i1 = 10318u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_printf(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 11502u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 12188u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 range_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 131078u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  goto Bfunc;
  B0:;
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i1 = mp_obj_get_int(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = 12u;
  i0 += i1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i1 = mp_obj_get_int(i1);
  p1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  i0 = p2;
  goto Bfunc;
  B1:;
  i0 = 12865u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 range_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = 0u;
  l0 = i0;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 -= i1;
  i1 = p1;
  i2 = 12u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i0 += i1;
  i1 = 4294967295u;
  i2 = 1u;
  i3 = p1;
  i4 = 0u;
  i3 = (u32)((s32)i3 > (s32)i4);
  i1 = i3 ? i1 : i2;
  i0 += i1;
  i1 = p1;
  i0 = I32_DIV_S(i0, i1);
  p1 = i0;
  i0 = p0;
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i3 = 0u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  i1 = 1u;
  i2 = p1;
  i3 = 0u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  l0 = i0;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void range_attr(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 150u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 149u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 146u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B2:;
  i0 = p2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 range_subscr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 -= i1;
  i1 = p0;
  i2 = 12u;
  i1 += i2;
  p2 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i0 += i1;
  i1 = 4294967295u;
  i2 = 1u;
  i3 = l1;
  i4 = 0u;
  i3 = (u32)((s32)i3 > (s32)i4);
  i1 = i3 ? i1 : i2;
  i0 += i1;
  i1 = l1;
  i0 = I32_DIV_S(i0, i1);
  l1 = i0;
  i1 = 0u;
  i2 = l1;
  i3 = 0u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35484u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l1;
  i2 = p1;
  i3 = 0u;
  i0 = mp_get_index(i0, i1, i2, i3);
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 *= i1;
  i1 = p0;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 += i1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l1 = i0;
  goto B0;
  B1:;
  i0 = l1;
  i1 = p1;
  i2 = l0;
  i0 = mp_seq_get_fast_slice_indexes(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = p0;
  i2 = 12u;
  i1 += i2;
  l2 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  p2 = i1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2));
  i1 *= i2;
  i2 = p0;
  i3 = 4u;
  i2 += i3;
  p0 = i2;
  i2 = i32_load((&M0), (u64)(i2));
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = 34708u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = p2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  p1 = i2;
  i1 *= i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i1 *= i2;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2));
  i1 += i2;
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = l1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i2 = l2;
  i2 = i32_load((&M0), (u64)(i2));
  i1 -= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 range_getiter(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = p1;
  i1 = 34768u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 4));
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 range_it_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  goto B1;
  B2:;
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  B1:;
  i0 = p0;
  i1 = l2;
  i2 = l0;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l1 = i0;
  B0:;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 reversed_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 131074u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 197u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 0u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i0 = mp_call_method_n_kw(i0, i1, i2);
  p3 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p3;
  goto Bfunc;
  B0:;
  i0 = 12u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i1 = mp_obj_len(i1);
  i1 = mp_obj_get_int(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 reversed_iternext(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 4294967295u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l0;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 1u;
  i1 |= i2;
  i2 = 4u;
  i0 = mp_obj_subscr(i0, i1, i2);
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void set_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = !(i0);
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 34948u;
  i0 = i0 == i1;
  l0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 10331u;
  i0 = mp_print_str(i0, i1);
  B3:;
  i0 = p0;
  i1 = 11504u;
  i0 = mp_print_str(i0, i1);
  goto Bfunc;
  B0:;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 12194u;
  i0 = mp_print_str(i0, i1);
  B4:;
  i0 = p0;
  i1 = 12875u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = 0u;
  l3 = i0;
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  i0 = 0u;
  p1 = i0;
  i0 = 1u;
  l5 = i0;
  L6: vm_checktime();
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l3;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l6 = i0;
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 != i1;
    if (i0) {goto B7;}
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l3 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L6;}
    goto B5;
    B7:;
    i0 = l5;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B8;}
    i0 = p0;
    i1 = 13269u;
    i0 = mp_print_str(i0, i1);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l3;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l6 = i0;
    B8:;
    i0 = p0;
    i1 = l6;
    i2 = 1u;
    mp_obj_print_helper(i0, i1, i2);
    i0 = 0u;
    l5 = i0;
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l3 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = i0 < i1;
    if (i0) {goto L6;}
  B5:;
  i0 = p0;
  i1 = 13702u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p0;
  i1 = 14144u;
  i0 = mp_print_str(i0, i1);
  B9:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 set_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 34888u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  p2 = i0;
  i1 = 0u;
  mp_set_init(i0, i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  p3 = i0;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  L1: vm_checktime();
    i0 = p2;
    i1 = p1;
    i2 = 1u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = p3;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B3:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = 34948u;
  l0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 34948u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B2:;
  i0 = 0u;
  goto Bfunc;
  B1:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = 34948u;
  l0 = i0;
  i0 = 0u;
  p0 = i0;
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  l2 = i0;
  L5: vm_checktime();
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p0;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 != i1;
    if (i0) {goto B6;}
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    if (i0) {goto L5;}
    goto B4;
    B6:;
    i0 = 6u;
    i1 = p1;
    i0 = mp_unary_op(i0, i1);
    i1 = 1u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    i1 = l0;
    i0 += i1;
    l0 = i0;
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    if (i0) {goto L5;}
  B4:;
  i0 = l0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = 0u;
  l0 = i0;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 36u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 34888u;
  i0 = i0 == i1;
  l0 = i0;
  i0 = p0;
  i1 = 36u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  l1 = i0;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 34888u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 34948u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  B4:;
  i0 = p0;
  i1 = 28u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = p0;
  switch (i0) {
    case 0: goto B25;
    case 1: goto B24;
    case 2: goto B23;
    case 3: goto B22;
    case 4: goto B21;
    case 5: goto B3;
    case 6: goto B3;
    case 7: goto B3;
    case 8: goto B3;
    case 9: goto B20;
    case 10: goto B19;
    case 11: goto B18;
    case 12: goto B3;
    case 13: goto B3;
    case 14: goto B3;
    case 15: goto B17;
    case 16: goto B3;
    case 17: goto B3;
    case 18: goto B3;
    case 19: goto B3;
    case 20: goto B3;
    case 21: goto B3;
    case 22: goto B16;
    case 23: goto B15;
    case 24: goto B14;
    case 25: goto B3;
    case 26: goto B3;
    case 27: goto B3;
    case 28: goto B13;
    default: goto B25;
  }
  B25:;
  i0 = p1;
  i1 = p2;
  i2 = 1u;
  i0 = set_issubset_internal(i0, i1, i2);
  goto Bfunc;
  B24:;
  i0 = p2;
  i1 = p1;
  i2 = 1u;
  i0 = set_issubset_internal(i0, i1, i2);
  goto Bfunc;
  B23:;
  i0 = 14u;
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p1;
  i1 = p2;
  i2 = 0u;
  i0 = set_issubset_internal(i0, i1, i2);
  goto Bfunc;
  B22:;
  i0 = p1;
  i1 = p2;
  i2 = 0u;
  i0 = set_issubset_internal(i0, i1, i2);
  goto Bfunc;
  B21:;
  i0 = p2;
  i1 = p1;
  i2 = 0u;
  i0 = set_issubset_internal(i0, i1, i2);
  goto Bfunc;
  B20:;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = p2;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  p0 = i0;
  i0 = mp_iternext(i0);
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  L26: vm_checktime();
    i0 = l0;
    i1 = p2;
    i2 = 1u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = p0;
    i0 = mp_iternext(i0);
    p2 = i0;
    if (i0) {goto L26;}
  i0 = p1;
  goto Bfunc;
  B19:;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = p2;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  p0 = i0;
  i0 = mp_iternext(i0);
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  L27: vm_checktime();
    i0 = l0;
    i1 = p2;
    i2 = 3u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = p0;
    i0 = mp_iternext(i0);
    p2 = i0;
    if (i0) {goto L27;}
  i0 = p1;
  goto Bfunc;
  B18:;
  i0 = p1;
  i1 = p1;
  i2 = p2;
  i3 = l0;
  i1 = set_intersect_int(i1, i2, i3);
  i2 = l0;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B17:;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = p1;
  l1 = i0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i0 = l1;
  i1 = p2;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  goto B5;
  B16:;
  i0 = p1;
  i1 = p2;
  i0 = set_union(i0, i1);
  goto Bfunc;
  B15:;
  i0 = p1;
  i1 = p2;
  i0 = set_symmetric_difference(i0, i1);
  goto Bfunc;
  B14:;
  i0 = p1;
  i1 = p2;
  i2 = 0u;
  i0 = set_intersect_int(i0, i1, i2);
  goto Bfunc;
  B13:;
  i0 = 16u;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  mp_set_init(i0, i1);
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p2;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  i0 = p2;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  p2 = i0;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  L28: vm_checktime();
    i0 = p0;
    i1 = p1;
    i2 = 2u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = p2;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L28;}
    goto B3;
  B12:;
  i0 = p1;
  i1 = p2;
  i0 = set_union(i0, i1);
  goto Bfunc;
  B11:;
  i0 = p1;
  i1 = p2;
  i0 = set_symmetric_difference(i0, i1);
  goto Bfunc;
  B10:;
  i0 = 16u;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  mp_set_init(i0, i1);
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i0 = l1;
  i1 = p2;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  B9:;
  i0 = p2;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  p2 = i0;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  L29: vm_checktime();
    i0 = p0;
    i1 = p1;
    i2 = 2u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = p2;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L29;}
    goto B3;
  B8:;
  i0 = p0;
  mp_set_clear(i0);
  i0 = l1;
  goto Bfunc;
  B7:;
  i0 = p1;
  goto Bfunc;
  B6:;
  i0 = p1;
  goto Bfunc;
  B5:;
  i0 = p0;
  mp_set_clear(i0);
  i0 = l1;
  goto Bfunc;
  B3:;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i3 = 4u;
  i2 += i3;
  i3 = p2;
  i4 = 0u;
  i2 = mp_set_lookup(i2, i3, i4);
  i0 = i2 ? i0 : i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_issubset_internal(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 34888u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l2;
  i1 = 34948u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = 1u;
  l1 = i0;
  i0 = 34888u;
  i1 = 1u;
  i2 = 0u;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i0 = set_make_new(i0, i1, i2, i3);
  p0 = i0;
  B0:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = 0u;
  l3 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 34888u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = l2;
  i1 = 34948u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B3:;
  i0 = 1u;
  l3 = i0;
  i0 = 34888u;
  i1 = 1u;
  i2 = 0u;
  i3 = l0;
  i4 = 8u;
  i3 += i4;
  i0 = set_make_new(i0, i1, i2, i3);
  p1 = i0;
  B2:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = 14u;
  l4 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 = i0 == i1;
  if (i0) {goto B4;}
  B5:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  l5 = i0;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l6 = i0;
  i0 = 0u;
  l2 = i0;
  L6: vm_checktime();
    i0 = 30u;
    l4 = i0;
    i0 = l2;
    i1 = p0;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l7 = i1;
    i0 = i0 >= i1;
    if (i0) {goto B4;}
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    p2 = i0;
    L8: vm_checktime();
      i0 = p2;
      i0 = i32_load((&M0), (u64)(i0));
      l8 = i0;
      i1 = 4u;
      i0 |= i1;
      i1 = 4u;
      i0 = i0 != i1;
      if (i0) {goto B7;}
      i0 = p2;
      i1 = 4u;
      i0 += i1;
      p2 = i0;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l2 = i0;
      i1 = l7;
      i0 = i0 < i1;
      if (i0) {goto L8;}
      goto B4;
    B7:;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = l5;
    i1 = l8;
    i2 = 0u;
    i0 = mp_set_lookup(i0, i1, i2);
    if (i0) {goto L6;}
  i0 = 14u;
  l4 = i0;
  B4:;
  i0 = l1;
  if (i0) {goto B11;}
  i0 = l3;
  if (i0) {goto B10;}
  goto B9;
  B11:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  mp_set_clear(i0);
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B9;}
  B10:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  mp_set_clear(i0);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B9:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_intersect_int(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = p0;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 34888u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i1 = 0u;
  mp_set_init(i0, i1);
  i0 = p1;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  l2 = i0;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  L2: vm_checktime();
    i0 = l3;
    i1 = p1;
    i2 = 0u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = l1;
    i1 = p1;
    i2 = 1u;
    i0 = mp_set_lookup(i0, i1, i2);
    B3:;
    i0 = l2;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L2;}
  B1:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  m_free(i0);
  i0 = p0;
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = p0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0 + 12), i1);
  B4:;
  i0 = 6u;
  i1 = l0;
  i2 = p2;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B0:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = 6u;
  goto Bfunc;
  B5:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  mp_set_init(i0, i1);
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_union(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  mp_set_init(i0, i1);
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  p1 = i0;
  i0 = mp_iternext(i0);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  L1: vm_checktime();
    i0 = l1;
    i1 = p0;
    i2 = 1u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = p1;
    i0 = mp_iternext(i0);
    p0 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_symmetric_difference(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  mp_set_init(i0, i1);
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  p1 = i0;
  i0 = mp_iternext(i0);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  L1: vm_checktime();
    i0 = l1;
    i1 = p0;
    i2 = 3u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = p1;
    i0 = mp_iternext(i0);
    p0 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_getiter(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 142u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 34424u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_it_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l1 = i1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l2 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 12u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l1 = i0;
  L2: vm_checktime();
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L2;}
  i0 = 0u;
  goto Bfunc;
  B1:;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = l0;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_set(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = 34888u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  mp_set_init(i0, i1);
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  L1: vm_checktime();
    i0 = l1;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_set_store(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 1u;
  i0 = mp_set_lookup(i0, i1, i2);
  FUNC_EPILOGUE;
}

static u32 set_intersect(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i2 = 0u;
  i0 = set_intersect_int(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_diff(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i2 = 0u;
  i0 = set_diff_int(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_diff_int(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = p2;
  if (i0) {goto B0;}
  i0 = l0;
  i0 = set_copy(i0);
  l0 = i0;
  B0:;
  i0 = p0;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = 1u;
  l2 = i0;
  L2: vm_checktime();
    i0 = l0;
    i1 = p1;
    i2 = l2;
    i3 = 2u;
    i2 <<= (i3 & 31);
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    p2 = i1;
    i0 = i0 == i1;
    if (i0) {goto B3;}
    i0 = p2;
    i1 = 0u;
    i0 = mp_getiter(i0, i1);
    l3 = i0;
    i0 = mp_iternext(i0);
    p2 = i0;
    i0 = !(i0);
    if (i0) {goto B4;}
    L5: vm_checktime();
      i0 = l1;
      i1 = p2;
      i2 = 2u;
      i0 = mp_set_lookup(i0, i1, i2);
      i0 = l3;
      i0 = mp_iternext(i0);
      p2 = i0;
      if (i0) {goto L5;}
    B4:;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = p0;
    i0 = i0 != i1;
    if (i0) {goto L2;}
    goto B1;
    B3:;
    i0 = l1;
    mp_set_clear(i0);
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = p0;
    i0 = i0 != i1;
    if (i0) {goto L2;}
  B1:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_update(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = 1u;
  l0 = i0;
  L1: vm_checktime();
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i0 = p1;
    i1 = l0;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 0u;
    i0 = mp_getiter(i0, i1);
    l2 = i0;
    i0 = mp_iternext(i0);
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    L3: vm_checktime();
      i0 = l1;
      i1 = l3;
      i2 = 1u;
      i0 = mp_set_lookup(i0, i1, i2);
      i0 = l2;
      i0 = mp_iternext(i0);
      l3 = i0;
      if (i0) {goto L3;}
    B2:;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i1 = p0;
    i0 = i0 != i1;
    if (i0) {goto L1;}
  B0:;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_symmetric_difference_update(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  l0 = i0;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  L1: vm_checktime();
    i0 = p0;
    i1 = p1;
    i2 = 3u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = l0;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_copy(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  mp_set_init(i0, i1);
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_issubset(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i2 = 0u;
  i0 = set_issubset_internal(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_issuperset(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p0;
  i2 = 0u;
  i0 = set_issubset_internal(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_add(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 1u;
  i0 = mp_set_lookup(i0, i1, i2);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_clear(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  mp_set_clear(i0);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_discard(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 2u;
  i0 = mp_set_lookup(i0, i1, i2);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_diff_update(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = 1u;
  l2 = i0;
  L1: vm_checktime();
    i0 = l0;
    i1 = p1;
    i2 = l2;
    i3 = 2u;
    i2 <<= (i3 & 31);
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l3 = i1;
    i0 = i0 == i1;
    if (i0) {goto B2;}
    i0 = l3;
    i1 = 0u;
    i0 = mp_getiter(i0, i1);
    l4 = i0;
    i0 = mp_iternext(i0);
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B3;}
    L4: vm_checktime();
      i0 = l1;
      i1 = l3;
      i2 = 2u;
      i0 = mp_set_lookup(i0, i1, i2);
      i0 = l4;
      i0 = mp_iternext(i0);
      l3 = i0;
      if (i0) {goto L4;}
    B3:;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = p0;
    i0 = i0 != i1;
    if (i0) {goto L1;}
    goto B0;
    B2:;
    i0 = l1;
    mp_set_clear(i0);
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = p0;
    i0 = i0 != i1;
    if (i0) {goto L1;}
  B0:;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_intersect_update(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i0 = set_intersect_int(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_isdisjoint(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = p1;
  i1 = l0;
  i0 = mp_getiter(i0, i1);
  p0 = i0;
  L1: vm_checktime();
    i0 = p0;
    i0 = mp_iternext(i0);
    p1 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l1;
    i1 = p1;
    i2 = 0u;
    i0 = mp_set_lookup(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto L1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_pop(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = mp_set_remove_first(i0);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 32112u;
  i1 = 16269u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 set_remove(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = p1;
  i2 = 2u;
  i0 = mp_set_lookup(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 32112u;
  i1 = p1;
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void singleton_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 10338u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void slice_print(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 11510u;
  i0 = mp_print_str(i0, i1);
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 1u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = p0;
  i1 = 12205u;
  i0 = mp_print_str(i0, i1);
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = 1u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = p0;
  i1 = 12205u;
  i0 = mp_print_str(i0, i1);
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = 1u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = p0;
  i1 = 12877u;
  i0 = mp_print_str(i0, i1);
  FUNC_EPILOGUE;
}

static void slice_attr(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 150u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 149u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 146u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B2:;
  i0 = p2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_new_slice(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 35484u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_slice_indices(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l0 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = l0;
  i0 = mp_obj_get_int(i0);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = l0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B5;}
  i0 = l1;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  goto B2;
  B7:;
  i0 = 1u;
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  B6:;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  goto B0;
  B5:;
  i0 = l1;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = l1;
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i1 = 31u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = p1;
  i0 &= i1;
  i1 = l1;
  i0 += i1;
  l1 = i0;
  i1 = 4294967295u;
  i2 = l1;
  i3 = 4294967295u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i1 = p1;
  i2 = 4294967295u;
  i1 += i2;
  i2 = l1;
  i3 = p1;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  goto B3;
  B9:;
  i0 = p1;
  i1 = 4294967295u;
  i0 += i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  B8:;
  i0 = p2;
  i1 = 4294967295u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  goto Bfunc;
  B4:;
  i0 = 10341u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B3:;
  i0 = p2;
  i1 = p0;
  i1 = mp_obj_get_int(i1);
  p0 = i1;
  i2 = 31u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = p1;
  i1 &= i2;
  i2 = p0;
  i1 += i2;
  p0 = i1;
  i2 = 4294967295u;
  i3 = p0;
  i4 = 4294967295u;
  i3 = (u32)((s32)i3 > (s32)i4);
  i1 = i3 ? i1 : i2;
  p0 = i1;
  i2 = p1;
  i3 = 4294967295u;
  i2 += i3;
  i3 = p0;
  i4 = p1;
  i3 = (u32)((s32)i3 < (s32)i4);
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = l1;
  i1 = mp_obj_get_int(i1);
  l1 = i1;
  i2 = 31u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = p1;
  i1 &= i2;
  i2 = l1;
  i1 += i2;
  l1 = i1;
  i2 = 0u;
  i3 = l1;
  i4 = 0u;
  i3 = (u32)((s32)i3 > (s32)i4);
  i1 = i3 ? i1 : i2;
  l1 = i1;
  i2 = l1;
  i3 = p1;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p2;
  i1 = p1;
  i2 = p0;
  i2 = mp_obj_get_int(i2);
  p0 = i2;
  i3 = 31u;
  i2 = (u32)((s32)i2 >> (i3 & 31));
  i3 = p1;
  i2 &= i3;
  i3 = p0;
  i2 += i3;
  p0 = i2;
  i3 = 0u;
  i4 = p0;
  i5 = 0u;
  i4 = (u32)((s32)i4 > (s32)i5);
  i2 = i4 ? i2 : i3;
  p0 = i2;
  i3 = p0;
  i4 = p1;
  i3 = (u32)((s32)i3 > (s32)i4);
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  goto Bfunc;
  B0:;
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_str_print_quoted(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 144u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = p2;
  i0 += i1;
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p1;
  l3 = i0;
  L5: vm_checktime();
    i0 = 1u;
    l4 = i0;
    i0 = l3;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    i1 = 39u;
    i0 = i0 == i1;
    if (i0) {goto B6;}
    i0 = l5;
    i1 = 34u;
    i0 = i0 == i1;
    if (i0) {goto B3;}
    i0 = l2;
    l4 = i0;
    B6:;
    i0 = l4;
    l2 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L5;}
  i0 = 39u;
  l3 = i0;
  i0 = 34u;
  l5 = i0;
  i0 = l4;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  goto B1;
  B4:;
  i0 = 39u;
  l3 = i0;
  i0 = l0;
  i1 = 39u;
  i32_store((&M0), (u64)(i0 + 128), i1);
  i0 = p0;
  i1 = 10366u;
  i2 = l0;
  i3 = 128u;
  i2 += i3;
  i0 = mp_printf(i0, i1, i2);
  goto B0;
  B3:;
  i0 = 39u;
  l5 = i0;
  i0 = 39u;
  l3 = i0;
  i0 = l2;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  i0 = l5;
  l3 = i0;
  B1:;
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = p0;
  i1 = 10366u;
  i2 = l0;
  i3 = 112u;
  i2 += i3;
  i0 = mp_printf(i0, i1, i2);
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B7;}
  L8: vm_checktime();
    i0 = l3;
    i1 = p1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    l4 = i1;
    i0 = i0 != i1;
    if (i0) {goto B9;}
    i0 = l0;
    i1 = l3;
    i32_store((&M0), (u64)(i0 + 16), i1);
    i0 = p0;
    i1 = 11517u;
    i2 = l0;
    i3 = 16u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L8;}
    goto B0;
    B9:;
    i0 = l4;
    i1 = 92u;
    i0 = i0 != i1;
    if (i0) {goto B10;}
    i0 = p0;
    i1 = 12208u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L8;}
    goto B0;
    B10:;
    i0 = l4;
    i1 = 32u;
    i0 = i0 < i1;
    if (i0) {goto B11;}
    i0 = l4;
    i1 = 127u;
    i0 = i0 == i1;
    if (i0) {goto B11;}
    i0 = l4;
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 24u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B11;}
    i0 = l0;
    i1 = l4;
    i32_store((&M0), (u64)(i0 + 32), i1);
    i0 = p0;
    i1 = 10366u;
    i2 = l0;
    i3 = 32u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L8;}
    goto B0;
    B11:;
    i0 = l4;
    i1 = 9u;
    i0 = i0 == i1;
    if (i0) {goto B14;}
    i0 = l4;
    i1 = 13u;
    i0 = i0 == i1;
    if (i0) {goto B13;}
    i0 = l4;
    i1 = 10u;
    i0 = i0 != i1;
    if (i0) {goto B12;}
    i0 = p0;
    i1 = 12879u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L8;}
    goto B0;
    B14:;
    i0 = p0;
    i1 = 13704u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L8;}
    goto B0;
    B13:;
    i0 = p0;
    i1 = 13272u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L8;}
    goto B0;
    B12:;
    i0 = l0;
    i1 = l4;
    i32_store((&M0), (u64)(i0 + 48), i1);
    i0 = p0;
    i1 = 14146u;
    i2 = l0;
    i3 = 48u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L8;}
    goto B0;
  B7:;
  L15: vm_checktime();
    i0 = l3;
    i1 = p1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    l4 = i1;
    i0 = i0 != i1;
    if (i0) {goto B16;}
    i0 = l0;
    i1 = l3;
    i32_store((&M0), (u64)(i0 + 64), i1);
    i0 = p0;
    i1 = 11517u;
    i2 = l0;
    i3 = 64u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L15;}
    goto B0;
    B16:;
    i0 = l4;
    i1 = 92u;
    i0 = i0 != i1;
    if (i0) {goto B17;}
    i0 = p0;
    i1 = 12208u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L15;}
    goto B0;
    B17:;
    i0 = l4;
    i1 = 32u;
    i0 = i0 < i1;
    if (i0) {goto B18;}
    i0 = l4;
    i1 = 127u;
    i0 = i0 == i1;
    if (i0) {goto B18;}
    i0 = l0;
    i1 = l4;
    i32_store((&M0), (u64)(i0 + 96), i1);
    i0 = p0;
    i1 = 10366u;
    i2 = l0;
    i3 = 96u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L15;}
    goto B0;
    B18:;
    i0 = l4;
    i1 = 13u;
    i0 = i0 == i1;
    if (i0) {goto B21;}
    i0 = l4;
    i1 = 10u;
    i0 = i0 == i1;
    if (i0) {goto B20;}
    i0 = l4;
    i1 = 9u;
    i0 = i0 != i1;
    if (i0) {goto B19;}
    i0 = p0;
    i1 = 13704u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L15;}
    goto B0;
    B21:;
    i0 = p0;
    i1 = 13272u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L15;}
    goto B0;
    B20:;
    i0 = p0;
    i1 = 12879u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L15;}
    goto B0;
    B19:;
    i0 = l0;
    i1 = l4;
    i32_store((&M0), (u64)(i0 + 80), i1);
    i0 = p0;
    i1 = 14146u;
    i2 = l0;
    i3 = 80u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L15;}
  B0:;
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 10366u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 144u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void mp_str_print_json(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 14426u;
  i0 = mp_print_str(i0, i1);
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = p2;
  i0 += i1;
  l1 = i0;
  L1: vm_checktime();
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p2 = i0;
    i1 = 92u;
    i0 = i0 == i1;
    if (i0) {goto B3;}
    i0 = p2;
    i1 = 34u;
    i0 = i0 != i1;
    if (i0) {goto B2;}
    B3:;
    i0 = l0;
    i1 = p2;
    i32_store((&M0), (u64)(i0 + 32), i1);
    i0 = p0;
    i1 = 11517u;
    i2 = l0;
    i3 = 32u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L1;}
    goto B0;
    B2:;
    i0 = p2;
    i1 = 32u;
    i0 = i0 < i1;
    if (i0) {goto B4;}
    i0 = l0;
    i1 = p2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 10366u;
    i2 = l0;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L1;}
    goto B0;
    B4:;
    i0 = p2;
    i1 = 9u;
    i0 = i0 == i1;
    if (i0) {goto B7;}
    i0 = p2;
    i1 = 13u;
    i0 = i0 == i1;
    if (i0) {goto B6;}
    i0 = p2;
    i1 = 10u;
    i0 = i0 != i1;
    if (i0) {goto B5;}
    i0 = p0;
    i1 = 12879u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L1;}
    goto B0;
    B7:;
    i0 = p0;
    i1 = 13704u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L1;}
    goto B0;
    B6:;
    i0 = p0;
    i1 = 13272u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L1;}
    goto B0;
    B5:;
    i0 = l0;
    i1 = p2;
    i32_store((&M0), (u64)(i0 + 16), i1);
    i0 = p0;
    i1 = 14699u;
    i2 = l0;
    i3 = 16u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L1;}
  B0:;
  i0 = p0;
  i1 = 14426u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 mp_obj_str_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 0u;
  i2 = 6u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 16u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  vstr_init_print(i0, i1, i2);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 0u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = p0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 10u;
  goto Bfunc;
  B3:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = 35852u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = p2;
  i1 = 42644u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = mp_obj_name_to_str_obj(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B5:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p2 = i0;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  goto B6;
  B7:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  B6:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B10;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i0 = qstr_hash(i0);
  p3 = i0;
  if (i0) {goto B8;}
  goto B9;
  B10:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p3 = i0;
  if (i0) {goto B8;}
  B9:;
  i0 = p2;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i0 = qstr_compute_hash(i0, i1);
  p3 = i0;
  B8:;
  i0 = p2;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i0 = utf8_check(i0, i1);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p2;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i0 = qstr_find_strn(i0, i1);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  goto Bfunc;
  B11:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = p3;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B2:;
  mp_arg_error_unimpl_kw();
  UNREACHABLE;
  B1:;
  i0 = 32712u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B0:;
  i0 = p1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  i0 = utf8_check(i0, i1);
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p2 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  p1 = i1;
  i0 = qstr_find_strn(i0, i1);
  p3 = i0;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p3;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  goto Bfunc;
  B13:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p3 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p3;
  i1 = 36168u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = p3;
  i1 = p2;
  i2 = p1;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p3;
  i1 = p1;
  i2 = 1u;
  i1 += i2;
  i1 = m_malloc(i1);
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = p2;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p1;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  B14:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p3;
  goto Bfunc;
  B12:;
  i0 = 32712u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_str_from_vstr(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 36168u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = qstr_find_strn(i0, i1);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  vstr_clear(i0);
  i0 = p1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  l1 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  l2 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p0;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = l1;
  i0 = m_realloc(i0, i1);
  p0 = i0;
  B1:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_str(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i0 = qstr_find_strn(i0, i1);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 36168u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i1 = p0;
  i2 = p1;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p1;
  i2 = 1u;
  i1 += i2;
  i1 = m_malloc(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p0;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p1;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  B1:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 find_subbytes(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = 0u;
  l0 = i0;
  i0 = p1;
  i1 = p3;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 0u;
  i2 = p1;
  i3 = p3;
  i2 -= i3;
  l1 = i2;
  i3 = p4;
  i4 = 0u;
  i3 = (u32)((s32)i3 > (s32)i4);
  l2 = i3;
  i1 = i3 ? i1 : i2;
  p1 = i1;
  i0 += i1;
  l0 = i0;
  i1 = p2;
  i2 = p3;
  i0 = memcmp_0(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 0u;
  i2 = l2;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  i0 = p0;
  i1 = p4;
  i0 += i1;
  l2 = i0;
  L2: vm_checktime();
    i0 = l1;
    i1 = p1;
    i0 = i0 == i1;
    if (i0) {goto B0;}
    i0 = l2;
    i1 = p1;
    i0 += i1;
    l0 = i0;
    i0 = p1;
    i1 = p4;
    i0 += i1;
    l3 = i0;
    p1 = i0;
    i0 = l0;
    i1 = p2;
    i2 = p3;
    i0 = memcmp_0(i0, i1, i2);
    if (i0) {goto L2;}
  i0 = p0;
  i1 = l3;
  i0 += i1;
  l0 = i0;
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_str_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0, l15 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6, i7;
  f64 d0, d1;
  i0 = g0;
  i1 = 80u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = p0;
  i1 = 33u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = l0;
  i1 = l0;
  i2 = 20u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 1u;
  l1 = i0;
  i0 = l0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 0u;
  l2 = i0;
  i0 = l0;
  i1 = 20u;
  i0 += i1;
  l3 = i0;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = 36756u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = p2;
  i1 = 0u;
  i2 = p0;
  i3 = 30556u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l2 = i0;
  goto B3;
  B5:;
  i0 = p1;
  i0 = mp_obj_get_type(i0);
  l4 = i0;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 32u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l5 = i0;
  i0 = p0;
  i1 = 29u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  goto B1;
  B7:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l5 = i0;
  i0 = p0;
  i1 = 29u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  B6:;
  i0 = 0u;
  p2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i0 = mp_obj_get_int_maybe(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 48));
  p1 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 56u;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 32));
  i2 = p1;
  i1 *= i2;
  vstr_init_len(i0, i1);
  i0 = l5;
  i1 = 1u;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 32));
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 48));
  i4 = l0;
  i4 = i32_load((&M0), (u64)(i4 + 64));
  mp_seq_multiply(i0, i1, i2, i3, i4);
  i0 = l4;
  i1 = l0;
  i2 = 56u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = p2;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_obj_tuple_get(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  B3:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 76u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l8 = i0;
  goto B8;
  B9:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 76), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l8 = i0;
  B8:;
  i0 = 0u;
  l9 = i0;
  i0 = 0u;
  l10 = i0;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B10;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35852u;
  i0 = i0 == i1;
  l10 = i0;
  B10:;
  i0 = l0;
  i1 = 56u;
  i0 += i1;
  i1 = 16u;
  i2 = l0;
  i3 = 48u;
  i2 += i3;
  vstr_init_print(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 76));
  p1 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B11;}
  i0 = l8;
  i1 = p1;
  i0 += i1;
  p0 = i0;
  i0 = l10;
  i1 = 1u;
  i0 ^= i1;
  l11 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 36192));
  i1 = 5u;
  i0 = i0 == i1;
  l12 = i0;
  i0 = l8;
  l4 = i0;
  i0 = 0u;
  l9 = i0;
  L12: vm_checktime();
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p1 = i0;
    i1 = 37u;
    i0 = i0 != i1;
    if (i0) {goto B30;}
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p0;
    i0 = i0 >= i1;
    if (i0) {goto B21;}
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p2 = i0;
    i1 = 40u;
    i0 = i0 == i1;
    if (i0) {goto B29;}
    i0 = 0u;
    l13 = i0;
    i0 = p2;
    i1 = 37u;
    i0 = i0 != i1;
    if (i0) {goto B28;}
    i0 = l0;
    i1 = 56u;
    i0 += i1;
    i1 = 37u;
    vstr_add_byte(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L12;}
    goto B11;
    B30:;
    i0 = l0;
    i1 = 56u;
    i0 += i1;
    i1 = p1;
    vstr_add_byte(i0, i1);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L12;}
    goto B11;
    B29:;
    i0 = l2;
    i0 = !(i0);
    if (i0) {goto B26;}
    i0 = l4;
    i1 = 2u;
    i0 += i1;
    l6 = i0;
    l5 = i0;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0 + 2));
    i1 = 41u;
    i0 = i0 == i1;
    if (i0) {goto B31;}
    i0 = l6;
    p1 = i0;
    L32: vm_checktime();
      i0 = p1;
      i1 = p0;
      i0 = i0 >= i1;
      if (i0) {goto B27;}
      i0 = p1;
      i0 = i32_load8_u((&M0), (u64)(i0 + 1));
      p2 = i0;
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      l5 = i0;
      p1 = i0;
      i0 = p2;
      i1 = 41u;
      i0 = i0 != i1;
      if (i0) {goto L32;}
    B31:;
    i0 = 1u;
    l9 = i0;
    i0 = l5;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i0 = l2;
    i1 = l6;
    i2 = l5;
    i3 = l6;
    i2 -= i3;
    i1 = qstr_from_strn(i1, i2);
    i2 = 3u;
    i1 <<= (i2 & 31);
    i2 = 2u;
    i1 |= i2;
    i0 = mp_obj_dict_get(i0, i1);
    l13 = i0;
    B28:;
    i0 = p1;
    i1 = p0;
    i0 = i0 >= i1;
    if (i0) {goto B35;}
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i0 = 32u;
    l14 = i0;
    i0 = 0u;
    p2 = i0;
    i0 = 0u;
    l7 = i0;
    L36: vm_checktime();
      i0 = p2;
      l6 = i0;
      i0 = 16u;
      p2 = i0;
      i0 = p1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l15 = i0;
      i1 = 4294967264u;
      i0 += i1;
      l5 = i0;
      i1 = 16u;
      i0 = i0 > i1;
      if (i0) {goto B34;}
      i0 = l5;
      switch (i0) {
        case 0: goto B42;
        case 1: goto B34;
        case 2: goto B34;
        case 3: goto B37;
        case 4: goto B34;
        case 5: goto B34;
        case 6: goto B34;
        case 7: goto B34;
        case 8: goto B34;
        case 9: goto B34;
        case 10: goto B33;
        case 11: goto B39;
        case 12: goto B34;
        case 13: goto B40;
        case 14: goto B34;
        case 15: goto B34;
        case 16: goto B41;
        default: goto B42;
      }
      B42:;
      i0 = l7;
      i1 = 4u;
      i0 |= i1;
      l7 = i0;
      goto B38;
      B41:;
      i0 = l7;
      i1 = 64u;
      i0 |= i1;
      l7 = i0;
      i0 = 48u;
      l14 = i0;
      goto B38;
      B40:;
      i0 = l7;
      i1 = 1u;
      i0 |= i1;
      l7 = i0;
      goto B38;
      B39:;
      i0 = l7;
      i1 = 2u;
      i0 |= i1;
      l7 = i0;
      B38:;
      i0 = l6;
      p2 = i0;
      B37:;
      i0 = l4;
      i1 = 1u;
      i0 += i1;
      l4 = i0;
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i1 = p0;
      i0 = i0 < i1;
      if (i0) {goto L36;}
    i0 = 0u;
    l5 = i0;
    i0 = 4294967295u;
    l6 = i0;
    i0 = p1;
    i1 = p0;
    i0 = i0 >= i1;
    if (i0) {goto B24;}
    goto B25;
    B35:;
    i0 = 32u;
    l14 = i0;
    i0 = 0u;
    l7 = i0;
    i0 = 0u;
    p2 = i0;
    i0 = 0u;
    l5 = i0;
    i0 = 4294967295u;
    l6 = i0;
    i0 = p1;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto B25;}
    goto B24;
    B34:;
    i0 = 0u;
    l5 = i0;
    i0 = l15;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 9u;
    i0 = i0 > i1;
    if (i0) {goto B43;}
    i0 = 0u;
    l5 = i0;
    L44: vm_checktime();
      i0 = l15;
      i1 = 24u;
      i0 <<= (i1 & 31);
      i1 = 24u;
      i0 = (u32)((s32)i0 >> (i1 & 31));
      i1 = l5;
      i2 = 10u;
      i1 *= i2;
      i0 += i1;
      i1 = 4294967248u;
      i0 += i1;
      l5 = i0;
      i0 = l4;
      p1 = i0;
      i1 = p0;
      i0 = i0 >= i1;
      if (i0) {goto B43;}
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      l4 = i0;
      i0 = p1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l15 = i0;
      i1 = 4294967248u;
      i0 += i1;
      i1 = 255u;
      i0 &= i1;
      i1 = 10u;
      i0 = i0 < i1;
      if (i0) {goto L44;}
    B43:;
    i0 = l6;
    p2 = i0;
    i0 = 4294967295u;
    l6 = i0;
    i0 = p1;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto B25;}
    goto B24;
    B33:;
    i0 = l9;
    i1 = l1;
    i0 = i0 >= i1;
    if (i0) {goto B19;}
    i0 = l3;
    i1 = l9;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = mp_obj_get_int(i0);
    l5 = i0;
    i0 = l6;
    p2 = i0;
    i0 = l9;
    i1 = 1u;
    i0 += i1;
    l9 = i0;
    i0 = 4294967295u;
    l6 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto B25;}
    goto B24;
    B27:;
    i0 = 17748u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B26:;
    i0 = 17657u;
    mp_raise_TypeError(i0);
    UNREACHABLE;
    B25:;
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 46u;
    i0 = i0 != i1;
    if (i0) {goto B24;}
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 >= i1;
    if (i0) {goto B22;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l15 = i0;
    i1 = 42u;
    i0 = i0 != i1;
    if (i0) {goto B23;}
    i0 = l9;
    i1 = l1;
    i0 = i0 >= i1;
    if (i0) {goto B19;}
    i0 = l9;
    i1 = 1u;
    i0 += i1;
    l15 = i0;
    i0 = l3;
    i1 = l9;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = mp_obj_get_int(i0);
    l6 = i0;
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto B20;}
    goto B21;
    B24:;
    i0 = l9;
    l15 = i0;
    i0 = p1;
    l4 = i0;
    i1 = p0;
    i0 = i0 >= i1;
    if (i0) {goto B21;}
    goto B20;
    B23:;
    i0 = 0u;
    l6 = i0;
    i0 = l15;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 9u;
    i0 = i0 > i1;
    if (i0) {goto B22;}
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = 0u;
    l6 = i0;
    L45: vm_checktime();
      i0 = l15;
      i1 = 24u;
      i0 <<= (i1 & 31);
      i1 = 24u;
      i0 = (u32)((s32)i0 >> (i1 & 31));
      i1 = l6;
      i2 = 10u;
      i1 *= i2;
      i0 += i1;
      i1 = 4294967248u;
      i0 += i1;
      l6 = i0;
      i0 = p1;
      l4 = i0;
      i1 = p0;
      i0 = i0 >= i1;
      if (i0) {goto B22;}
      i0 = l4;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l15 = i0;
      i1 = 4294967248u;
      i0 += i1;
      i1 = 255u;
      i0 &= i1;
      i1 = 10u;
      i0 = i0 < i1;
      if (i0) {goto L45;}
    B22:;
    i0 = l9;
    l15 = i0;
    i0 = l4;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto B20;}
    B21:;
    i0 = 17849u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B20:;
    i0 = l13;
    i0 = !(i0);
    if (i0) {goto B46;}
    i0 = l15;
    l9 = i0;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l15 = i0;
    i1 = 4294967227u;
    i0 += i1;
    p1 = i0;
    i1 = 51u;
    i0 = i0 > i1;
    if (i0) {goto B17;}
    goto B18;
    B46:;
    i0 = l15;
    i1 = l1;
    i0 = i0 >= i1;
    if (i0) {goto B19;}
    i0 = l15;
    i1 = 1u;
    i0 += i1;
    l9 = i0;
    i0 = l3;
    i1 = l15;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l13 = i0;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l15 = i0;
    i1 = 4294967227u;
    i0 += i1;
    p1 = i0;
    i1 = 51u;
    i0 = i0 <= i1;
    if (i0) {goto B18;}
    goto B17;
    B19:;
    i0 = 17957u;
    mp_raise_TypeError(i0);
    UNREACHABLE;
    B18:;
    i0 = p1;
    switch (i0) {
      case 0: goto B54;
      case 1: goto B54;
      case 2: goto B54;
      case 3: goto B17;
      case 4: goto B17;
      case 5: goto B17;
      case 6: goto B17;
      case 7: goto B17;
      case 8: goto B17;
      case 9: goto B17;
      case 10: goto B17;
      case 11: goto B17;
      case 12: goto B17;
      case 13: goto B17;
      case 14: goto B17;
      case 15: goto B17;
      case 16: goto B17;
      case 17: goto B17;
      case 18: goto B17;
      case 19: goto B52;
      case 20: goto B17;
      case 21: goto B17;
      case 22: goto B17;
      case 23: goto B17;
      case 24: goto B17;
      case 25: goto B17;
      case 26: goto B17;
      case 27: goto B17;
      case 28: goto B17;
      case 29: goto B17;
      case 30: goto B50;
      case 31: goto B53;
      case 32: goto B54;
      case 33: goto B54;
      case 34: goto B54;
      case 35: goto B17;
      case 36: goto B53;
      case 37: goto B17;
      case 38: goto B17;
      case 39: goto B17;
      case 40: goto B17;
      case 41: goto B17;
      case 42: goto B49;
      case 43: goto B17;
      case 44: goto B17;
      case 45: goto B51;
      case 46: goto B51;
      case 47: goto B17;
      case 48: goto B53;
      case 49: goto B17;
      case 50: goto B17;
      case 51: goto B52;
      default: goto B54;
    }
    B54:;
    i0 = l0;
    i1 = 48u;
    i0 += i1;
    i1 = l13;
    d1 = mp_obj_get_float(i1);
    i2 = l4;
    i2 = i32_load8_s((&M0), (u64)(i2));
    i3 = l7;
    i4 = l14;
    i5 = 24u;
    i4 <<= (i5 & 31);
    i5 = 24u;
    i4 = (u32)((s32)i4 >> (i5 & 31));
    i5 = l5;
    i6 = l6;
    i0 = mp_print_float(i0, d1, i2, i3, i4, i5, i6);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L12;}
    goto B11;
    B53:;
    i0 = l13;
    i1 = 3u;
    i0 &= i1;
    if (i0) {goto B55;}
    i0 = l13;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 32832u;
    i0 = i0 != i1;
    if (i0) {goto B55;}
    i0 = l13;
    d0 = mp_obj_float_get(i0);
    i0 = mp_obj_new_int_from_float(d0);
    l13 = i0;
    B55:;
    i0 = l0;
    i1 = 48u;
    i0 += i1;
    i1 = l13;
    i2 = 10u;
    i3 = 97u;
    i4 = l7;
    i5 = l14;
    i6 = 24u;
    i5 <<= (i6 & 31);
    i6 = 24u;
    i5 = (u32)((s32)i5 >> (i6 & 31));
    i6 = l5;
    i7 = l6;
    i0 = mp_print_mp_int(i0, i1, i2, i3, i4, i5, i6, i7);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L12;}
    goto B11;
    B52:;
    i0 = l0;
    i1 = 48u;
    i0 += i1;
    i1 = l13;
    i2 = 16u;
    i3 = l15;
    i4 = 4294967273u;
    i3 += i4;
    i4 = p2;
    i5 = l7;
    i4 |= i5;
    i5 = l14;
    i6 = 24u;
    i5 <<= (i6 & 31);
    i6 = 24u;
    i5 = (u32)((s32)i5 >> (i6 & 31));
    i6 = l5;
    i7 = l6;
    i0 = mp_print_mp_int(i0, i1, i2, i3, i4, i5, i6, i7);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L12;}
    goto B11;
    B51:;
    i0 = l0;
    i1 = 32u;
    i0 += i1;
    i1 = 16u;
    i2 = l0;
    i3 = 24u;
    i2 += i3;
    vstr_init_print(i0, i1, i2);
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 114u;
    i0 = i0 == i1;
    p1 = i0;
    i1 = l11;
    i0 |= i1;
    if (i0) {goto B56;}
    i0 = l13;
    i1 = 3u;
    i0 &= i1;
    if (i0) {goto B56;}
    i0 = 4u;
    i1 = p1;
    i2 = l13;
    i2 = i32_load((&M0), (u64)(i2));
    i3 = 35852u;
    i2 = i2 == i3;
    i0 = i2 ? i0 : i1;
    p1 = i0;
    B56:;
    i0 = l0;
    i1 = 24u;
    i0 += i1;
    i1 = l13;
    i2 = p1;
    mp_obj_print_helper(i0, i1, i2);
    i0 = l0;
    i1 = 48u;
    i0 += i1;
    i1 = l0;
    i2 = 32u;
    i1 += i2;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l0;
    i2 = i32_load((&M0), (u64)(i2 + 36));
    p1 = i2;
    i3 = l6;
    i4 = l6;
    i5 = 0u;
    i4 = (u32)((s32)i4 < (s32)i5);
    i2 = i4 ? i2 : i3;
    p2 = i2;
    i3 = p1;
    i4 = p1;
    i5 = p2;
    i4 = i4 > i5;
    i2 = i4 ? i2 : i3;
    i3 = l7;
    i4 = 32u;
    i5 = l5;
    i0 = mp_print_strn(i0, i1, i2, i3, i4, i5);
    i0 = l0;
    i1 = 32u;
    i0 += i1;
    vstr_clear(i0);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L12;}
    goto B11;
    B50:;
    i0 = l13;
    i1 = 7u;
    i0 &= i1;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B48;}
    i0 = l13;
    i1 = 3u;
    i0 >>= (i1 & 31);
    i1 = l0;
    i2 = 32u;
    i1 += i2;
    i0 = qstr_data(i0, i1);
    p1 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B47;}
    goto B13;
    B49:;
    i0 = l0;
    i1 = 48u;
    i0 += i1;
    i1 = l13;
    i2 = 8u;
    i3 = 97u;
    i4 = l7;
    i5 = 528u;
    i4 |= i5;
    i5 = l7;
    i6 = p2;
    i4 = i6 ? i4 : i5;
    i5 = l14;
    i6 = 24u;
    i5 <<= (i6 & 31);
    i6 = 24u;
    i5 = (u32)((s32)i5 >> (i6 & 31));
    i6 = l5;
    i7 = l6;
    i0 = mp_print_mp_int(i0, i1, i2, i3, i4, i5, i6, i7);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L12;}
    goto B11;
    B48:;
    i0 = l13;
    i1 = 3u;
    i0 &= i1;
    p1 = i0;
    if (i0) {goto B58;}
    i0 = l13;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 36168u;
    i0 = i0 == i1;
    if (i0) {goto B57;}
    B58:;
    i0 = l13;
    i1 = 16u;
    i0 |= i1;
    i1 = 30u;
    i0 = i0 == i1;
    if (i0) {goto B14;}
    i0 = l13;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B14;}
    i0 = p1;
    if (i0) {goto B16;}
    i0 = l13;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 33584u;
    i0 = i0 == i1;
    if (i0) {goto B14;}
    goto B16;
    B57:;
    i0 = l12;
    i0 = !(i0);
    if (i0) {goto B15;}
    i0 = l0;
    i1 = l13;
    i1 = i32_load((&M0), (u64)(i1 + 8));
    p2 = i1;
    i32_store((&M0), (u64)(i0 + 32), i1);
    i0 = l13;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    p1 = i0;
    i0 = p2;
    i1 = 1u;
    i0 = i0 == i1;
    if (i0) {goto B13;}
    B47:;
    i0 = 18056u;
    mp_raise_TypeError(i0);
    UNREACHABLE;
    B17:;
    i0 = l0;
    i1 = l15;
    i32_store((&M0), (u64)(i0 + 4), i1);
    i0 = l0;
    i1 = l15;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = l4;
    i2 = l8;
    i1 -= i2;
    i32_store((&M0), (u64)(i0 + 8), i1);
    i0 = 32652u;
    i1 = 18190u;
    i2 = l0;
    mp_raise_msg_varg(i0, i1, i2);
    UNREACHABLE;
    B16:;
    i0 = 18116u;
    mp_raise_TypeError(i0);
    UNREACHABLE;
    B15:;
    i0 = l13;
    bad_implicit_conversion(i0);
    UNREACHABLE;
    B14:;
    i0 = l0;
    i1 = l13;
    i1 = mp_obj_get_int(i1);
    i32_store8((&M0), (u64)(i0 + 32), i1);
    i0 = l0;
    i1 = 48u;
    i0 += i1;
    i1 = l0;
    i2 = 32u;
    i1 += i2;
    i2 = 1u;
    i3 = l7;
    i4 = 32u;
    i5 = l5;
    i0 = mp_print_strn(i0, i1, i2, i3, i4, i5);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L12;}
    goto B11;
    B13:;
    i0 = l0;
    i1 = 48u;
    i0 += i1;
    i1 = p1;
    i2 = 1u;
    i3 = l7;
    i4 = 32u;
    i5 = l5;
    i0 = mp_print_strn(i0, i1, i2, i3, i4, i5);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L12;}
  B11:;
  i0 = l9;
  i1 = l1;
  i0 = i0 != i1;
  if (i0) {goto B59;}
  i0 = 35852u;
  i1 = 36168u;
  i2 = l10;
  i0 = i2 ? i0 : i1;
  i1 = l0;
  i2 = 56u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p2 = i0;
  goto B0;
  B59:;
  i0 = 18329u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B2:;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = 10u;
  i1 = 35544u;
  i2 = l4;
  i3 = 36168u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  i0 = l4;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  i1 = mp_obj_get_type(i1);
  i0 = i0 == i1;
  if (i0) {goto B62;}
  i0 = l4;
  i1 = 35852u;
  i0 = i0 != i1;
  if (i0) {goto B61;}
  i0 = 0u;
  p2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  i1 = l0;
  i2 = 56u;
  i1 += i2;
  i2 = 1u;
  i0 = mp_get_buffer(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 60));
  l6 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 56));
  l7 = i0;
  i0 = 0u;
  p2 = i0;
  i0 = p0;
  i1 = 36u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  goto B60;
  B62:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  p2 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B63;}
  i0 = p2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 56u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l7 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 56));
  l6 = i0;
  i0 = 0u;
  p2 = i0;
  i0 = p0;
  i1 = 36u;
  i0 = i0 <= i1;
  if (i0) {goto B60;}
  goto B0;
  B63:;
  i0 = l0;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l6 = i1;
  i32_store((&M0), (u64)(i0 + 56), i1);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l7 = i0;
  i0 = 0u;
  p2 = i0;
  i0 = p0;
  i1 = 36u;
  i0 = i0 <= i1;
  if (i0) {goto B60;}
  goto B0;
  B61:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B60:;
  i0 = p0;
  switch (i0) {
    case 0: goto B67;
    case 1: goto B67;
    case 2: goto B67;
    case 3: goto B67;
    case 4: goto B67;
    case 5: goto B0;
    case 6: goto B0;
    case 7: goto B0;
    case 8: goto B0;
    case 9: goto B0;
    case 10: goto B0;
    case 11: goto B0;
    case 12: goto B0;
    case 13: goto B0;
    case 14: goto B66;
    case 15: goto B0;
    case 16: goto B0;
    case 17: goto B0;
    case 18: goto B0;
    case 19: goto B0;
    case 20: goto B0;
    case 21: goto B0;
    case 22: goto B0;
    case 23: goto B0;
    case 24: goto B0;
    case 25: goto B0;
    case 26: goto B0;
    case 27: goto B66;
    case 28: goto B0;
    case 29: goto B0;
    case 30: goto B0;
    case 31: goto B0;
    case 32: goto B0;
    case 33: goto B0;
    case 34: goto B0;
    case 35: goto B0;
    case 36: goto B65;
    default: goto B67;
  }
  B67:;
  i0 = p0;
  i1 = l5;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 32));
  i3 = l7;
  i4 = l6;
  i0 = mp_seq_cmp_bytes(i0, i1, i2, i3, i4);
  p1 = i0;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B66:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  if (i0) {goto B68;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  i0 = mp_obj_get_type(i0);
  i1 = l4;
  i0 = i0 == i1;
  if (i0) {goto B64;}
  B68:;
  i0 = p1;
  p2 = i0;
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 56u;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 32));
  i2 = l6;
  i1 += i2;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 64));
  i1 = l5;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 32));
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 64));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 32));
  i0 += i1;
  i1 = l7;
  i2 = l6;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l4;
  i1 = l0;
  i2 = 56u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B65:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  p1 = i0;
  i1 = l6;
  i0 = i0 < i1;
  if (i0) {goto B70;}
  i0 = l5;
  i1 = l7;
  i2 = l6;
  i0 = memcmp_0(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B69;}
  L71: vm_checktime();
    i0 = l6;
    i1 = p1;
    i0 = i0 == i1;
    if (i0) {goto B70;}
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    i0 = l5;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    i1 = l7;
    i2 = l6;
    i0 = memcmp_0(i0, i1, i2);
    if (i0) {goto L71;}
    goto B69;
  B70:;
  i0 = 0u;
  l5 = i0;
  B69:;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = l5;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B64:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  p1 = i0;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void bad_implicit_conversion(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type(i1);
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  p0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 66u;
  i2 = 151u;
  i3 = p0;
  i4 = 151u;
  i3 = i3 == i4;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = 32592u;
  i1 = 18875u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static u32 str_join(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 40u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 44));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  goto B2;
  B3:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33760u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36756u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 33760u;
  i2 = 1u;
  i3 = 0u;
  i4 = l0;
  i5 = 44u;
  i4 += i5;
  i5 = 0u;
  i5 = i32_load((&M0), (u64)(i5 + 33772));
  i1 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i5, i1, i2, i3, i4);
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 44), i1);
  B0:;
  i0 = p1;
  i1 = l0;
  i2 = 36u;
  i1 += i2;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  mp_obj_get_array(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 36));
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = 0u;
  p1 = i0;
  i0 = 0u;
  p0 = i0;
  i0 = 0u;
  l3 = i0;
  L7: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = p1;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = mp_obj_get_type(i0);
    i1 = l1;
    i0 = i0 != i1;
    if (i0) {goto B4;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 40));
    i1 = 0u;
    i2 = p0;
    i0 = i2 ? i0 : i1;
    i1 = l3;
    i0 += i1;
    l3 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = p1;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    i1 = 7u;
    i0 &= i1;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B9;}
    i0 = l4;
    i1 = 3u;
    i0 >>= (i1 & 31);
    i0 = qstr_len(i0);
    l4 = i0;
    goto B8;
    B9:;
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0 + 8));
    l4 = i0;
    B8:;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = l3;
    i1 = l4;
    i0 += i1;
    l3 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 36));
    i0 = i0 < i1;
    if (i0) {goto L7;}
    goto B5;
  B6:;
  i0 = 0u;
  l3 = i0;
  B5:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = l3;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 36));
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = 0u;
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p1 = i0;
  i0 = 0u;
  l3 = i0;
  L11: vm_checktime();
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B12;}
    i0 = p1;
    i1 = l2;
    i2 = l0;
    i2 = i32_load((&M0), (u64)(i2 + 40));
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = p1;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 40));
    i0 += i1;
    p1 = i0;
    B12:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = p0;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    i1 = 7u;
    i0 &= i1;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B14;}
    i0 = l4;
    i1 = 3u;
    i0 >>= (i1 & 31);
    i1 = l0;
    i2 = 12u;
    i1 += i2;
    i0 = qstr_data(i0, i1);
    l4 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    l5 = i0;
    goto B13;
    B14:;
    i0 = l0;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1 + 8));
    l5 = i1;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    l4 = i0;
    B13:;
    i0 = p1;
    i1 = l4;
    i2 = l5;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = p1;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    i0 += i1;
    p1 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 36));
    i0 = i0 < i1;
    if (i0) {goto L11;}
  B10:;
  i0 = l1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = 15307u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_str_split(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = 4294967295u;
  l2 = i0;
  i0 = 6u;
  l3 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l3 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_get_int(i0);
  l2 = i0;
  B0:;
  i0 = 0u;
  i1 = 0u;
  i0 = mp_obj_new_list(i0, i1);
  l4 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l5 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l6 = i1;
  i0 += i1;
  p0 = i0;
  i0 = l3;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  goto B2;
  B4:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l6 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l6;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  l5 = i1;
  i0 += i1;
  p0 = i0;
  i0 = l3;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  B3:;
  i0 = l6;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B5;}
  L6: vm_checktime();
    i0 = l5;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_isspace(i0);
    i0 = !(i0);
    if (i0) {goto B5;}
    i0 = l5;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L6;}
  B5:;
  i0 = l5;
  i1 = p0;
  i0 = i0 >= i1;
  if (i0) {goto B7;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B7;}
  L10: vm_checktime();
    i0 = l5;
    i1 = p0;
    i0 = i0 >= i1;
    if (i0) {goto B9;}
    i0 = l5;
    l3 = i0;
    L12: vm_checktime();
      i0 = l3;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i0 = unichar_isspace(i0);
      if (i0) {goto B11;}
      i0 = l3;
      i1 = 1u;
      i0 += i1;
      l3 = i0;
      i1 = p0;
      i0 = i0 < i1;
      if (i0) {goto L12;}
      goto B8;
    B11:;
    i0 = l4;
    i1 = l1;
    i2 = l5;
    i3 = l3;
    i4 = l5;
    i3 -= i4;
    i1 = mp_obj_new_str_of_type(i1, i2, i3);
    i0 = mp_obj_list_append(i0, i1);
    i0 = l3;
    i1 = p0;
    i0 = i0 >= i1;
    if (i0) {goto B14;}
    i0 = l3;
    l5 = i0;
    L15: vm_checktime();
      i0 = l5;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i0 = unichar_isspace(i0);
      i0 = !(i0);
      if (i0) {goto B13;}
      i0 = l5;
      i1 = 1u;
      i0 += i1;
      l5 = i0;
      i1 = p0;
      i0 = i0 < i1;
      if (i0) {goto L15;}
      goto B13;
    B14:;
    i0 = l3;
    l5 = i0;
    B13:;
    i0 = l5;
    i1 = p0;
    i0 = i0 >= i1;
    if (i0) {goto B7;}
    i0 = l2;
    i1 = l2;
    i2 = 0u;
    i1 = (u32)((s32)i1 > (s32)i2);
    i0 -= i1;
    l2 = i0;
    if (i0) {goto L10;}
    goto B7;
  B9:;
  i0 = l5;
  l3 = i0;
  B8:;
  i0 = l4;
  i1 = l1;
  i2 = l5;
  i3 = l3;
  i4 = l5;
  i3 -= i4;
  i1 = mp_obj_new_str_of_type(i1, i2, i3);
  i0 = mp_obj_list_append(i0, i1);
  i0 = l3;
  l5 = i0;
  B7:;
  i0 = l5;
  i1 = p0;
  i0 = i0 >= i1;
  if (i0) {goto B16;}
  i0 = l4;
  i1 = l1;
  i2 = l5;
  i3 = p0;
  i4 = l5;
  i3 -= i4;
  i1 = mp_obj_new_str_of_type(i1, i2, i3);
  i0 = mp_obj_list_append(i0, i1);
  i0 = 2u;
  l7 = i0;
  goto B1;
  B16:;
  i0 = 2u;
  l7 = i0;
  goto B1;
  B2:;
  i0 = l3;
  i0 = mp_obj_get_type(i0);
  i1 = l1;
  i0 = i0 != i1;
  if (i0) {goto B20;}
  i0 = l3;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B22;}
  i0 = l3;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l6 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  if (i0) {goto B21;}
  goto B19;
  B22:;
  i0 = l3;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B20;}
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B20;}
  i0 = l0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l6 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B19;}
  B21:;
  i0 = p0;
  l3 = i0;
  i0 = l2;
  if (i0) {goto B17;}
  goto B18;
  B20:;
  i0 = l3;
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B19:;
  i0 = 14863u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B18:;
  i0 = 1u;
  l7 = i0;
  goto B1;
  B17:;
  i0 = 4u;
  l7 = i0;
  B1:;
  L23: vm_checktime();
    i0 = l7;
    switch (i0) {
      case 0: goto B32;
      case 1: goto B31;
      case 2: goto B30;
      case 3: goto B37;
      case 4: goto B36;
      case 5: goto B35;
      case 6: goto B34;
      case 7: goto B33;
      default: goto B33;
    }
    B37:;
    i0 = l3;
    i1 = p1;
    i0 += i1;
    l5 = i0;
    i0 = p0;
    l3 = i0;
    i0 = l2;
    i1 = l2;
    i2 = 0u;
    i1 = (u32)((s32)i1 > (s32)i2);
    i0 -= i1;
    l2 = i0;
    i0 = !(i0);
    if (i0) {goto B26;}
    i0 = 4u;
    l7 = i0;
    goto L23;
    B36:;
    i0 = p0;
    l3 = i0;
    i0 = l5;
    i1 = p1;
    i0 += i1;
    i1 = p0;
    i0 = i0 > i1;
    if (i0) {goto B29;}
    i0 = 5u;
    l7 = i0;
    goto L23;
    B35:;
    i0 = l5;
    l3 = i0;
    i0 = 6u;
    l7 = i0;
    goto L23;
    B34:;
    i0 = l3;
    i1 = l6;
    i2 = p1;
    i0 = memcmp_0(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto B28;}
    i0 = 7u;
    l7 = i0;
    goto L23;
    B33:;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i1 = p1;
    i0 += i1;
    i1 = p0;
    i0 = i0 <= i1;
    if (i0) {goto B27;}
    i0 = 0u;
    l7 = i0;
    goto L23;
    B32:;
    i0 = p0;
    l3 = i0;
    i0 = 1u;
    l7 = i0;
    goto L23;
    B31:;
    i0 = l4;
    i1 = l1;
    i2 = l5;
    i3 = l3;
    i4 = l5;
    i3 -= i4;
    i1 = mp_obj_new_str_of_type(i1, i2, i3);
    i0 = mp_obj_list_append(i0, i1);
    i0 = l3;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto B25;}
    goto B24;
    B30:;
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    g0 = i0;
    i0 = l4;
    goto Bfunc;
    B29:;
    i0 = 1u;
    l7 = i0;
    goto L23;
    B28:;
    i0 = 1u;
    l7 = i0;
    goto L23;
    B27:;
    i0 = 6u;
    l7 = i0;
    goto L23;
    B26:;
    i0 = 1u;
    l7 = i0;
    goto L23;
    B25:;
    i0 = 3u;
    l7 = i0;
    goto L23;
    B24:;
    i0 = 2u;
    l7 = i0;
    goto L23;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_str_of_type(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 36168u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = 16u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = 35852u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p2;
  i2 = 1u;
  i1 += i2;
  i1 = m_malloc(i1);
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p1;
  i2 = p2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = p2;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  goto B0;
  B1:;
  i0 = p1;
  i1 = p2;
  i0 = qstr_find_strn(i0, i1);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  goto Bfunc;
  B2:;
  i0 = 16u;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = 36168u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = p2;
  i2 = 1u;
  i1 += i2;
  i1 = m_malloc(i1);
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p1;
  i2 = p2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = p2;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_str_get_data(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  goto B1;
  B2:;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  B1:;
  i0 = p1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = p0;
  bad_implicit_conversion(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_splitlines(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 4294967295u;
  i0 += i1;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i2 = p2;
  i3 = 1u;
  i4 = 35912u;
  i5 = l0;
  i6 = 8u;
  i5 += i6;
  mp_arg_parse_all(i0, i1, i2, i3, i4, i5);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = 0u;
  i1 = 0u;
  i0 = mp_obj_new_list(i0, i1);
  l2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l3 = i0;
  i0 = 1u;
  l4 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p2 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  p2 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  i0 = 1u;
  l4 = i0;
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  B1:;
  i0 = l3;
  i1 = p2;
  i0 += i1;
  l5 = i0;
  L3: vm_checktime();
    i0 = l3;
    p2 = i0;
    L7: vm_checktime();
      i0 = p2;
      p1 = i0;
      i1 = l5;
      i0 = i0 >= i1;
      if (i0) {goto B6;}
      i0 = p1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      p0 = i0;
      i1 = 10u;
      i0 = i0 == i1;
      if (i0) {goto B5;}
      i0 = p1;
      i1 = l4;
      i0 += i1;
      p2 = i0;
      i0 = p0;
      i1 = 13u;
      i0 = i0 != i1;
      if (i0) {goto L7;}
    i0 = 2u;
    i1 = l4;
    i2 = p2;
    i2 = i32_load8_u((&M0), (u64)(i2));
    i3 = 10u;
    i2 = i2 == i3;
    i0 = i2 ? i0 : i1;
    p2 = i0;
    goto B4;
    B6:;
    i0 = 0u;
    p2 = i0;
    goto B4;
    B5:;
    i0 = 1u;
    p2 = i0;
    B4:;
    i0 = l2;
    i1 = l1;
    i2 = l3;
    i3 = p1;
    i4 = l3;
    i3 -= i4;
    i4 = p2;
    i5 = 0u;
    i6 = l0;
    i6 = i32_load8_u((&M0), (u64)(i6 + 8));
    i4 = i6 ? i4 : i5;
    i3 += i4;
    i1 = mp_obj_new_str_of_type(i1, i2, i3);
    i0 = mp_obj_list_append(i0, i1);
    i0 = p1;
    i1 = p2;
    i0 += i1;
    l3 = i0;
    i1 = l5;
    i0 = i0 < i1;
    if (i0) {goto L3;}
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_rsplit(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 <= i1;
  if (i0) {goto B5;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = l3;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l3 = i0;
  goto B6;
  B7:;
  i0 = l0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  B6:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_get_int(i0);
  l4 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B5;}
  i0 = l4;
  i1 = 1u;
  i0 += i1;
  l5 = i0;
  i1 = 0u;
  i0 = mp_obj_new_list(i0, i1);
  l6 = i0;
  i0 = l2;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = l2;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  if (i0) {goto B3;}
  goto B0;
  B5:;
  i0 = p0;
  i1 = p1;
  i0 = mp_obj_str_split(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = l2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B3:;
  i0 = l3;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 += i1;
  l7 = i0;
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l7;
  i1 = 0u;
  i2 = p0;
  i1 -= i2;
  l8 = i1;
  i0 += i1;
  l9 = i0;
  i1 = l3;
  i0 = i0 < i1;
  if (i0) {goto B9;}
  i0 = l6;
  i1 = 12u;
  i0 += i1;
  l10 = i0;
  L10: vm_checktime();
    i0 = l9;
    p1 = i0;
    L12: vm_checktime();
      i0 = p1;
      i1 = l2;
      i2 = p0;
      i0 = memcmp_0(i0, i1, i2);
      i0 = !(i0);
      if (i0) {goto B11;}
      i0 = p1;
      i1 = 4294967295u;
      i0 += i1;
      p1 = i0;
      i1 = l3;
      i0 = i0 >= i1;
      if (i0) {goto L12;}
      goto B9;
    B11:;
    i0 = l1;
    i1 = p1;
    i2 = p0;
    i1 += i2;
    i2 = l7;
    i3 = p0;
    i2 -= i3;
    i3 = p1;
    i2 -= i3;
    i0 = mp_obj_new_str_of_type(i0, i1, i2);
    l7 = i0;
    i0 = l10;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l4;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = l7;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l4;
    i1 = 4294967295u;
    i0 += i1;
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B8;}
    i0 = p1;
    l7 = i0;
    i0 = p1;
    i1 = l8;
    i0 += i1;
    l9 = i0;
    i1 = l3;
    i0 = i0 >= i1;
    if (i0) {goto L10;}
    goto B8;
  B9:;
  i0 = l7;
  p1 = i0;
  B8:;
  i0 = l1;
  i1 = l3;
  i2 = p1;
  i3 = l3;
  i2 -= i3;
  i0 = mp_obj_new_str_of_type(i0, i1, i2);
  l3 = i0;
  i0 = l6;
  i1 = 12u;
  i0 += i1;
  p1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l4;
  i2 = 2u;
  i1 <<= (i2 & 31);
  p0 = i1;
  i0 += i1;
  i1 = l3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i1 = l3;
  i2 = p0;
  i1 += i2;
  i2 = l5;
  i3 = l4;
  i2 -= i3;
  l3 = i2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  p0 = i2;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p0;
  i0 += i1;
  i1 = 0u;
  i2 = l6;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = l3;
  i2 -= i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l6;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 8), i1);
  B13:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l6;
  goto Bfunc;
  B2:;
  i0 = 15552u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  B1:;
  i0 = l2;
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B0:;
  i0 = 14863u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_find(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i3 = 0u;
  i0 = str_finder(i0, i1, i2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_finder(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i1 = mp_obj_get_type(i1);
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = l2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l3 = i0;
  goto B5;
  B6:;
  i0 = l0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  B5:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  i0 = l2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l4 = i0;
  goto B7;
  B8:;
  i0 = l0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l4 = i0;
  B7:;
  i0 = l3;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  l5 = i1;
  i0 += i1;
  l2 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B9;}
  i0 = l3;
  l6 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l7 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  i0 = l1;
  i1 = l3;
  i2 = l5;
  i3 = l7;
  i4 = 1u;
  i0 = str_index_to_ptr(i0, i1, i2, i3, i4);
  l6 = i0;
  B10:;
  i0 = p0;
  i1 = 4u;
  i0 = i0 < i1;
  if (i0) {goto B11;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B11;}
  i0 = l1;
  i1 = l3;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i3 = p1;
  i4 = 1u;
  i0 = str_index_to_ptr(i0, i1, i2, i3, i4);
  l2 = i0;
  B11:;
  i0 = l2;
  i1 = l6;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  goto B3;
  B9:;
  i0 = l2;
  i1 = l3;
  l6 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  goto B2;
  B4:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B3:;
  i0 = l2;
  i1 = l6;
  i0 -= i1;
  p1 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  p0 = i1;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = l6;
  i1 = 0u;
  i2 = p1;
  i3 = p0;
  i2 -= i3;
  p1 = i2;
  i3 = p2;
  i4 = 0u;
  i3 = (u32)((s32)i3 > (s32)i4);
  l5 = i3;
  i1 = i3 ? i1 : i2;
  l7 = i1;
  i0 += i1;
  l2 = i0;
  i1 = l4;
  i2 = p0;
  i0 = memcmp_0(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = l7;
  i1 = p1;
  i2 = 0u;
  i3 = l5;
  i1 = i3 ? i1 : i2;
  i0 -= i1;
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  L13: vm_checktime();
    i0 = p1;
    i1 = p2;
    i0 += i1;
    p1 = i0;
    i0 = l2;
    i1 = p2;
    i0 += i1;
    l2 = i0;
    i1 = l4;
    i2 = p0;
    i0 = memcmp_0(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto B12;}
    i0 = p1;
    if (i0) {goto L13;}
    goto B2;
  B12:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 36168u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  i1 = l3;
  i0 -= i1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B2:;
  i0 = p3;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 4294967295u;
  goto Bfunc;
  B1:;
  i0 = l3;
  i1 = l2;
  i0 = utf8_ptr_to_index(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = 15752u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_rfind(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i2 = 4294967295u;
  i3 = 0u;
  i0 = str_finder(i0, i1, i2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_index(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i3 = 1u;
  i0 = str_finder(i0, i1, i2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_rindex(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i2 = 4294967295u;
  i3 = 1u;
  i0 = str_finder(i0, i1, i2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_startswith(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l2 = i0;
  goto B0;
  B1:;
  i0 = l0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l3 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = l3;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l4 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l5 = i0;
  i0 = l2;
  l3 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  goto B3;
  B4:;
  i0 = l3;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = l0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l5 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l4 = i0;
  i0 = l2;
  l3 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  goto B2;
  B5:;
  i0 = l3;
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B3:;
  i0 = l1;
  i1 = l2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = p1;
  i3 = i32_load((&M0), (u64)(i3 + 8));
  i4 = 1u;
  i0 = str_index_to_ptr(i0, i1, i2, i3, i4);
  l3 = i0;
  B2:;
  i0 = 14u;
  p1 = i0;
  i0 = l5;
  i1 = l2;
  i0 -= i1;
  i1 = l3;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 = i0 > i1;
  if (i0) {goto B6;}
  i0 = 14u;
  i1 = 30u;
  i2 = l3;
  i3 = l4;
  i4 = l5;
  i2 = memcmp_0(i2, i3, i4);
  i0 = i2 ? i0 : i1;
  p1 = i0;
  B6:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_endswith(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l2 = i0;
  goto B0;
  B1:;
  i0 = l0;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B4;}
  goto B2;
  B5:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  B4:;
  i0 = 14u;
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i1 = l1;
  i0 = i0 < i1;
  if (i0) {goto B6;}
  i0 = 14u;
  i1 = 30u;
  i2 = l2;
  i3 = p0;
  i4 = l1;
  i3 -= i4;
  i2 += i3;
  i3 = l3;
  i4 = l1;
  i2 = memcmp_0(i2, i3, i4);
  i0 = i2 ? i0 : i1;
  p1 = i0;
  B6:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B3:;
  i0 = p1;
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B2:;
  i0 = 15953u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_strip(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 2u;
  i1 = p0;
  i2 = p1;
  i0 = str_uni_strip(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_uni_strip(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = 6u;
  l2 = i0;
  i0 = 35920u;
  l3 = i0;
  goto B3;
  B4:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = mp_obj_get_type(i0);
  i1 = l1;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  goto B3;
  B5:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  B3:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l4 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l5 = i0;
  if (i0) {goto B7;}
  goto B6;
  B8:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l5 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l4 = i0;
  i0 = l5;
  i0 = !(i0);
  if (i0) {goto B6;}
  B7:;
  i0 = l5;
  i1 = 4294967295u;
  i0 += i1;
  l6 = i0;
  i1 = 0u;
  i2 = p0;
  i3 = 1u;
  i2 = i2 == i3;
  p1 = i2;
  i0 = i2 ? i0 : i1;
  l7 = i0;
  i0 = 4294967295u;
  i1 = 1u;
  i2 = p1;
  i0 = i2 ? i0 : i1;
  l8 = i0;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l2;
  i1 = 4294967295u;
  i0 += i1;
  l9 = i0;
  i0 = 0u;
  l6 = i0;
  i0 = 0u;
  l10 = i0;
  i0 = 0u;
  l11 = i0;
  L10: vm_checktime();
    i0 = l9;
    p1 = i0;
    i0 = l3;
    l2 = i0;
    i0 = l3;
    i1 = l4;
    i2 = l7;
    i1 += i2;
    l12 = i1;
    i2 = 1u;
    i0 = memcmp_0(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto B14;}
    L15: vm_checktime();
      i0 = p1;
      i0 = !(i0);
      if (i0) {goto B13;}
      i0 = p1;
      i1 = 4294967295u;
      i0 += i1;
      p1 = i0;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l2 = i0;
      i1 = l12;
      i2 = 1u;
      i0 = memcmp_0(i0, i1, i2);
      if (i0) {goto L15;}
    B14:;
    i0 = l10;
    i1 = l2;
    i2 = 0u;
    i1 = i1 != i2;
    i0 |= i1;
    i1 = 1u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B12;}
    goto B11;
    B13:;
    i0 = 0u;
    l2 = i0;
    i0 = l10;
    i1 = 0u;
    i2 = 0u;
    i1 = i1 != i2;
    i0 |= i1;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B11;}
    B12:;
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B17;}
    i0 = 1u;
    l10 = i0;
    i0 = l7;
    l11 = i0;
    i0 = l7;
    l6 = i0;
    i0 = p0;
    i1 = 1u;
    i0 = i0 == i1;
    if (i0) {goto B16;}
    i0 = l7;
    i1 = l8;
    i0 += i1;
    l7 = i0;
    i0 = l5;
    i1 = 4294967295u;
    i0 += i1;
    l5 = i0;
    if (i0) {goto L10;}
    goto B9;
    B17:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 8));
    i1 = 4294967295u;
    i0 += i1;
    l6 = i0;
    i0 = l7;
    l11 = i0;
    goto B0;
    B16:;
    i0 = 0u;
    l11 = i0;
    i0 = l7;
    l6 = i0;
    goto B0;
    B11:;
    i0 = l6;
    i1 = l7;
    i2 = l2;
    i0 = i2 ? i0 : i1;
    l6 = i0;
    i0 = l7;
    i1 = l8;
    i0 += i1;
    l7 = i0;
    i0 = l5;
    i1 = 4294967295u;
    i0 += i1;
    l5 = i0;
    if (i0) {goto L10;}
  B9:;
  i0 = l10;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  B6:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 10u;
  i1 = 35544u;
  i2 = l1;
  i3 = 36168u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B2:;
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B1:;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B19;}
  i0 = p0;
  i1 = 1u;
  i0 = i0 != i1;
  l2 = i0;
  i0 = 0u;
  p1 = i0;
  i0 = 0u;
  l11 = i0;
  L20: vm_checktime();
    i0 = l7;
    l6 = i0;
    i0 = p1;
    i1 = l2;
    i0 |= i1;
    i1 = 1u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B18;}
    i0 = l11;
    i1 = l6;
    i2 = p1;
    i3 = 1u;
    i2 &= i3;
    i0 = i2 ? i0 : i1;
    l11 = i0;
    i0 = l6;
    i1 = l8;
    i0 += i1;
    l7 = i0;
    i0 = 1u;
    p1 = i0;
    i0 = l5;
    i1 = 4294967295u;
    i0 += i1;
    l5 = i0;
    if (i0) {goto L20;}
    goto B0;
  B19:;
  i0 = l7;
  l11 = i0;
  goto B0;
  B18:;
  i0 = 0u;
  l11 = i0;
  B0:;
  i0 = l6;
  i1 = l11;
  i0 -= i1;
  i1 = 1u;
  i0 += i1;
  p1 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 = i0 != i1;
  if (i0) {goto B21;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B21:;
  i0 = l1;
  i1 = l4;
  i2 = l11;
  i1 += i2;
  i2 = p1;
  i0 = mp_obj_new_str_of_type(i0, i1, i2);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_lstrip(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  i1 = p0;
  i2 = p1;
  i0 = str_uni_strip(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_rstrip(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 1u;
  i1 = p0;
  i2 = p1;
  i0 = str_uni_strip(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_center(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = p1;
  i0 = mp_obj_get_int(i0);
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  i1 = p1;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = p1;
  i0 = mp_obj_get_int(i0);
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = 32u;
  i2 = p1;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = p1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 28));
  l2 = i2;
  i1 -= i2;
  i2 = 1u;
  i1 >>= (i2 & 31);
  i0 += i1;
  i1 = l1;
  i2 = l2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  B0:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_str_format(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  l2 = i0;
  goto B0;
  B1:;
  i0 = l0;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  B0:;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i2 = l1;
  i3 = l2;
  i2 += i3;
  i3 = l0;
  i4 = 24u;
  i3 += i4;
  i4 = p0;
  i5 = p1;
  i6 = p2;
  mp_obj_str_format_helper(i0, i1, i2, i3, i4, i5, i6);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_str_format_helper(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5, u32 p6) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6, i7;
  f64 d1, d2;
  i0 = g0;
  i1 = 80u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 16u;
  i2 = l0;
  i3 = 72u;
  i2 += i3;
  vstr_init_print(i0, i1, i2);
  i0 = p1;
  i1 = p2;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = p4;
  i1 = 4294967295u;
  i0 += i1;
  l1 = i0;
  L2: vm_checktime();
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l2 = i0;
    i1 = 123u;
    i0 = i0 == i1;
    if (i0) {goto B17;}
    i0 = l2;
    i1 = 125u;
    i0 = i0 != i1;
    if (i0) {goto B16;}
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p2;
    i0 = i0 >= i1;
    if (i0) {goto B12;}
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 125u;
    i0 = i0 != i1;
    if (i0) {goto B12;}
    i0 = p0;
    i1 = 125u;
    vstr_add_byte(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L2;}
    goto B0;
    B17:;
    i0 = 0u;
    l3 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p2;
    i0 = i0 >= i1;
    if (i0) {goto B11;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    i1 = 122u;
    i0 = (u32)((s32)i0 > (s32)i1);
    if (i0) {goto B15;}
    i0 = l5;
    i1 = 33u;
    i0 = i0 == i1;
    if (i0) {goto B11;}
    i0 = l5;
    i1 = 58u;
    i0 = i0 != i1;
    if (i0) {goto B14;}
    goto B11;
    B16:;
    i0 = p0;
    i1 = l2;
    vstr_add_byte(i0, i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L2;}
    goto B0;
    B15:;
    i0 = l5;
    i1 = 123u;
    i0 = i0 == i1;
    if (i0) {goto B13;}
    i0 = l5;
    i1 = 125u;
    i0 = i0 == i1;
    if (i0) {goto B11;}
    B14:;
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    l2 = i0;
    i0 = l5;
    i1 = 255u;
    i0 &= i1;
    p1 = i0;
    i1 = 33u;
    i0 = i0 == i1;
    if (i0) {goto B19;}
    L20: vm_checktime();
      i0 = p1;
      i1 = 58u;
      i0 = i0 == i1;
      if (i0) {goto B19;}
      i0 = p1;
      i1 = 125u;
      i0 = i0 == i1;
      if (i0) {goto B19;}
      i0 = l2;
      i1 = p2;
      i0 = i0 >= i1;
      if (i0) {goto B18;}
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      p1 = i0;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l2 = i0;
      i0 = p1;
      i1 = 255u;
      i0 &= i1;
      p1 = i0;
      i1 = 33u;
      i0 = i0 != i1;
      if (i0) {goto L20;}
    B19:;
    i0 = l4;
    l6 = i0;
    i0 = l2;
    i1 = 4294967295u;
    i0 += i1;
    l2 = i0;
    l4 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto B10;}
    goto B9;
    B18:;
    i0 = l4;
    l6 = i0;
    i0 = l2;
    l4 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto B10;}
    goto B9;
    B13:;
    i0 = p0;
    i1 = 123u;
    vstr_add_byte(i0, i1);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L2;}
    goto B0;
    B12:;
    i0 = 16075u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B11:;
    i0 = 0u;
    l2 = i0;
    i0 = 0u;
    l6 = i0;
    i0 = l4;
    i1 = p2;
    i0 = i0 >= i1;
    if (i0) {goto B9;}
    B10:;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 33u;
    i0 = i0 != i1;
    if (i0) {goto B9;}
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p2;
    i0 = i0 >= i1;
    if (i0) {goto B8;}
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l3 = i0;
    i1 = 254u;
    i0 &= i1;
    i1 = 114u;
    i0 = i0 != i1;
    if (i0) {goto B8;}
    i0 = l4;
    i1 = 2u;
    i0 += i1;
    l4 = i0;
    B9:;
    i0 = 0u;
    l7 = i0;
    i0 = l4;
    i1 = p2;
    i0 = i0 >= i1;
    if (i0) {goto B22;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 58u;
    i0 = i0 != i1;
    if (i0) {goto B22;}
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l8 = i0;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0 + 1));
    l9 = i0;
    i1 = 125u;
    i0 = i0 != i1;
    if (i0) {goto B21;}
    i0 = l8;
    p1 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto B4;}
    goto B1;
    B22:;
    i0 = l4;
    p1 = i0;
    i1 = p2;
    i0 = i0 >= i1;
    if (i0) {goto B1;}
    i0 = 3u;
    l10 = i0;
    goto B3;
    B21:;
    i0 = l8;
    i1 = p2;
    i0 = i0 >= i1;
    if (i0) {goto B23;}
    i0 = l4;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = 1u;
    l5 = i0;
    i0 = l9;
    i1 = 255u;
    i0 &= i1;
    l4 = i0;
    i1 = 125u;
    i0 = i0 != i1;
    if (i0) {goto B6;}
    goto B7;
    B23:;
    i0 = l8;
    l7 = i0;
    i0 = l8;
    p1 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto B5;}
    goto B1;
    B8:;
    i0 = 16192u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B7:;
    i0 = 115u;
    l10 = i0;
    goto B3;
    B6:;
    i0 = 0u;
    l10 = i0;
    goto B3;
    B5:;
    i0 = 3u;
    l10 = i0;
    goto B3;
    B4:;
    i0 = 3u;
    l10 = i0;
    B3:;
    L24: vm_checktime();
      i0 = l10;
      switch (i0) {
        case 0: goto B211;
        case 1: goto B208;
        case 2: goto B207;
        case 3: goto B250;
        case 4: goto B249;
        case 5: goto B248;
        case 6: goto B138;
        case 7: goto B134;
        case 8: goto B133;
        case 9: goto B232;
        case 10: goto B238;
        case 11: goto B237;
        case 12: goto B236;
        case 13: goto B224;
        case 14: goto B223;
        case 15: goto B177;
        case 16: goto B180;
        case 17: goto B179;
        case 18: goto B176;
        case 19: goto B175;
        case 20: goto B174;
        case 21: goto B172;
        case 22: goto B167;
        case 23: goto B171;
        case 24: goto B170;
        case 25: goto B145;
        case 26: goto B146;
        case 27: goto B144;
        case 28: goto B149;
        case 29: goto B164;
        case 30: goto B158;
        case 31: goto B163;
        case 32: goto B162;
        case 33: goto B148;
        case 34: goto B147;
        case 35: goto B161;
        case 36: goto B157;
        case 37: goto B154;
        case 38: goto B153;
        case 39: goto B152;
        case 40: goto B151;
        case 41: goto B143;
        case 42: goto B142;
        case 43: goto B141;
        case 44: goto B140;
        case 45: goto B150;
        case 46: goto B156;
        case 47: goto B155;
        case 48: goto B169;
        case 49: goto B166;
        case 50: goto B165;
        case 51: goto B173;
        case 52: goto B168;
        case 53: goto B160;
        case 54: goto B222;
        case 55: goto B181;
        case 56: goto B221;
        case 57: goto B220;
        case 58: goto B230;
        case 59: goto B229;
        case 60: goto B228;
        case 61: goto B227;
        case 62: goto B226;
        case 63: goto B204;
        case 64: goto B203;
        case 65: goto B201;
        case 66: goto B195;
        case 67: goto B194;
        case 68: goto B185;
        case 69: goto B184;
        case 70: goto B187;
        case 71: goto B186;
        case 72: goto B182;
        case 73: goto B178;
        case 74: goto B183;
        case 75: goto B193;
        case 76: goto B159;
        case 77: goto B192;
        case 78: goto B191;
        case 79: goto B190;
        case 80: goto B189;
        case 81: goto B188;
        case 82: goto B200;
        case 83: goto B199;
        case 84: goto B198;
        case 85: goto B196;
        case 86: goto B197;
        case 87: goto B202;
        case 88: goto B225;
        case 89: goto B216;
        case 90: goto B215;
        case 91: goto B214;
        case 92: goto B213;
        case 93: goto B205;
        case 94: goto B206;
        case 95: goto B218;
        case 96: goto B219;
        case 97: goto B231;
        case 98: goto B137;
        case 99: goto B136;
        case 100: goto B135;
        case 101: goto B247;
        case 102: goto B246;
        case 103: goto B235;
        case 104: goto B234;
        case 105: goto B233;
        case 106: goto B245;
        case 107: goto B217;
        case 108: goto B244;
        case 109: goto B243;
        case 110: goto B242;
        case 111: goto B241;
        case 112: goto B240;
        case 113: goto B239;
        case 114: goto B212;
        case 115: goto B209;
        case 116: goto B139;
        case 117: goto B210;
        default: goto B210;
      }
      B250:;
      i0 = p1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i1 = 125u;
      i0 = i0 != i1;
      if (i0) {goto B130;}
      i0 = 4u;
      l10 = i0;
      goto L24;
      B249:;
      i0 = l6;
      i0 = !(i0);
      if (i0) {goto B109;}
      i0 = 5u;
      l10 = i0;
      goto L24;
      B248:;
      i0 = l6;
      i0 = i32_load8_s((&M0), (u64)(i0));
      i0 = unichar_isdigit(i0);
      i0 = !(i0);
      if (i0) {goto B108;}
      i0 = 101u;
      l10 = i0;
      goto L24;
      B247:;
      i0 = p3;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = 1u;
      i0 = (u32)((s32)i0 >= (s32)i1);
      if (i0) {goto B129;}
      i0 = 102u;
      l10 = i0;
      goto L24;
      B246:;
      i0 = 0u;
      l5 = i0;
      i0 = l6;
      i1 = l2;
      i0 = i0 >= i1;
      if (i0) {goto B30;}
      i0 = 106u;
      l10 = i0;
      goto L24;
      B245:;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l8 = i0;
      i1 = 4294967248u;
      i0 += i1;
      i1 = 255u;
      i0 &= i1;
      i1 = 9u;
      i0 = i0 > i1;
      if (i0) {goto B25;}
      i0 = 108u;
      l10 = i0;
      goto L24;
      B244:;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      i0 = 0u;
      l5 = i0;
      i0 = 109u;
      l10 = i0;
      goto L24;
      B243:;
      i0 = l8;
      i1 = 24u;
      i0 <<= (i1 & 31);
      i1 = 24u;
      i0 = (u32)((s32)i0 >> (i1 & 31));
      i1 = l5;
      i2 = 10u;
      i1 *= i2;
      i0 += i1;
      i1 = 4294967248u;
      i0 += i1;
      l5 = i0;
      i0 = l6;
      l4 = i0;
      i1 = l2;
      i0 = i0 >= i1;
      if (i0) {goto B27;}
      i0 = 110u;
      l10 = i0;
      goto L24;
      B242:;
      i0 = l4;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l8 = i0;
      i1 = 4294967248u;
      i0 += i1;
      i1 = 255u;
      i0 &= i1;
      i1 = 10u;
      i0 = i0 < i1;
      if (i0) {goto B29;}
      goto B28;
      B241:;
      i0 = p3;
      i0 = i32_load((&M0), (u64)(i0));
      l2 = i0;
      i1 = 4294967295u;
      i0 = (u32)((s32)i0 <= (s32)i1);
      if (i0) {goto B123;}
      i0 = 112u;
      l10 = i0;
      goto L24;
      B240:;
      i0 = l2;
      i1 = l1;
      i0 = i0 >= i1;
      if (i0) {goto B124;}
      i0 = 113u;
      l10 = i0;
      goto L24;
      B239:;
      i0 = p3;
      i1 = l2;
      i2 = 1u;
      i1 += i2;
      l2 = i1;
      i32_store((&M0), (u64)(i0), i1);
      i0 = p5;
      i1 = l2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      l9 = i0;
      i0 = l3;
      i1 = l3;
      i2 = 115u;
      i3 = l7;
      i1 = i3 ? i1 : i2;
      i2 = l3;
      i0 = i2 ? i0 : i1;
      l2 = i0;
      i0 = !(i0);
      if (i0) {goto B101;}
      i0 = 10u;
      l10 = i0;
      goto L24;
      B238:;
      i0 = 0u;
      l4 = i0;
      i0 = l2;
      i1 = 115u;
      i0 = i0 == i1;
      if (i0) {goto B100;}
      i0 = 11u;
      l10 = i0;
      goto L24;
      B237:;
      i0 = 1u;
      l4 = i0;
      i0 = 12u;
      l10 = i0;
      goto L24;
      B236:;
      i0 = l0;
      i1 = 56u;
      i0 += i1;
      i1 = 16u;
      i2 = l0;
      i3 = 48u;
      i2 += i3;
      vstr_init_print(i0, i1, i2);
      i0 = l0;
      i1 = 48u;
      i0 += i1;
      i1 = l9;
      i2 = l4;
      mp_obj_print_helper(i0, i1, i2);
      i0 = 36168u;
      i1 = l0;
      i2 = 56u;
      i1 += i2;
      i0 = mp_obj_new_str_from_vstr(i0, i1);
      l9 = i0;
      i0 = l7;
      if (i0) {goto B98;}
      goto B97;
      B235:;
      i0 = l6;
      l4 = i0;
      i0 = 104u;
      l10 = i0;
      goto L24;
      B234:;
      i0 = l5;
      i1 = l1;
      i0 = i0 >= i1;
      if (i0) {goto B128;}
      i0 = 105u;
      l10 = i0;
      goto L24;
      B233:;
      i0 = p3;
      i1 = 4294967295u;
      i32_store((&M0), (u64)(i0), i1);
      i0 = p5;
      i1 = l5;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      i1 = 4u;
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      l9 = i0;
      i0 = l4;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto B132;}
      i0 = 9u;
      l10 = i0;
      goto L24;
      B232:;
      i0 = l3;
      i1 = l3;
      i2 = 115u;
      i3 = l7;
      i1 = i3 ? i1 : i2;
      i2 = l3;
      i0 = i2 ? i0 : i1;
      l2 = i0;
      if (i0) {goto B102;}
      i0 = 97u;
      l10 = i0;
      goto L24;
      B231:;
      i0 = l7;
      i0 = !(i0);
      if (i0) {goto B99;}
      i0 = 58u;
      l10 = i0;
      goto L24;
      B230:;
      i0 = l0;
      i1 = 56u;
      i0 += i1;
      i1 = l7;
      i2 = p1;
      i3 = p3;
      i4 = p4;
      i5 = p5;
      i6 = p6;
      mp_obj_str_format_helper(i0, i1, i2, i3, i4, i5, i6);
      i0 = l0;
      i1 = 56u;
      i0 += i1;
      i0 = vstr_null_terminated_str(i0);
      l2 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 60));
      l8 = i0;
      i0 = 0u;
      l11 = i0;
      i0 = l2;
      i0 = i32_load8_s((&M0), (u64)(i0));
      l4 = i0;
      i0 = !(i0);
      if (i0) {goto B60;}
      i0 = 59u;
      l10 = i0;
      goto L24;
      B229:;
      i0 = 17512u;
      i1 = l4;
      i0 = strchr_0(i0, i1);
      i0 = !(i0);
      if (i0) {goto B59;}
      i0 = 60u;
      l10 = i0;
      goto L24;
      B228:;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l7 = i0;
      i0 = 0u;
      l12 = i0;
      i0 = 61u;
      l10 = i0;
      goto L24;
      B227:;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i1 = 4294967264u;
      i0 += i1;
      l5 = i0;
      i1 = 13u;
      i0 = i0 > i1;
      if (i0) {goto B57;}
      i0 = 62u;
      l10 = i0;
      goto L24;
      B226:;
      i0 = 1u;
      i1 = l5;
      i0 <<= (i1 & 31);
      i1 = 10241u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B53;}
      i0 = 88u;
      l10 = i0;
      goto L24;
      B225:;
      i0 = 2u;
      i1 = l4;
      i2 = 32u;
      i1 = i1 == i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i2 = l4;
      i3 = 43u;
      i2 = i2 == i3;
      i0 = i2 ? i0 : i1;
      l11 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      l5 = i0;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 1));
      l4 = i0;
      goto B52;
      B224:;
      i0 = 4294967295u;
      l3 = i0;
      i0 = 0u;
      l2 = i0;
      i0 = 0u;
      l8 = i0;
      i0 = 0u;
      l12 = i0;
      i0 = 4294967295u;
      l5 = i0;
      i0 = l9;
      i1 = 16u;
      i0 |= i1;
      i1 = 30u;
      i0 = i0 == i1;
      if (i0) {goto B95;}
      i0 = 14u;
      l10 = i0;
      goto L24;
      B223:;
      i0 = l9;
      i1 = 1u;
      i0 &= i1;
      if (i0) {goto B94;}
      i0 = 54u;
      l10 = i0;
      goto L24;
      B222:;
      i0 = 60u;
      l7 = i0;
      i0 = l9;
      i1 = 3u;
      i0 &= i1;
      if (i0) {goto B61;}
      i0 = 56u;
      l10 = i0;
      goto L24;
      B221:;
      i0 = l9;
      i0 = i32_load((&M0), (u64)(i0));
      l4 = i0;
      i1 = 33584u;
      i0 = i0 == i1;
      if (i0) {goto B93;}
      i0 = 57u;
      l10 = i0;
      goto L24;
      B220:;
      i0 = l4;
      i1 = 32832u;
      i0 = i0 != i1;
      if (i0) {goto B91;}
      goto B92;
      B219:;
      i0 = 0u;
      l4 = i0;
      i0 = 0u;
      l7 = i0;
      i0 = 0u;
      l12 = i0;
      i0 = 95u;
      l10 = i0;
      goto L24;
      B218:;
      i0 = l2;
      l5 = i0;
      goto B51;
      B217:;
      i0 = l6;
      l4 = i0;
      i0 = 0u;
      i1 = l1;
      i0 = i0 < i1;
      if (i0) {goto B26;}
      goto B128;
      B216:;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i0 = !(i0);
      if (i0) {goto B33;}
      i0 = 90u;
      l10 = i0;
      goto L24;
      B215:;
      i0 = 0u;
      l12 = i0;
      i0 = l2;
      i0 = i32_load8_s((&M0), (u64)(i0 + 1));
      l4 = i0;
      i0 = !(i0);
      if (i0) {goto B32;}
      i0 = 91u;
      l10 = i0;
      goto L24;
      B214:;
      i0 = 0u;
      l7 = i0;
      i0 = l2;
      l6 = i0;
      i0 = 17512u;
      i1 = l4;
      i0 = strchr_0(i0, i1);
      i0 = !(i0);
      if (i0) {goto B58;}
      i0 = 92u;
      l10 = i0;
      goto L24;
      B213:;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l7 = i0;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l12 = i0;
      i0 = l2;
      i1 = 2u;
      i0 += i1;
      l6 = i0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i1 = 4294967264u;
      i0 += i1;
      l5 = i0;
      i1 = 13u;
      i0 = i0 <= i1;
      if (i0) {goto B55;}
      goto B56;
      B212:;
      i0 = p1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i0 = l4;
      i1 = 255u;
      i0 &= i1;
      l4 = i0;
      i1 = 125u;
      i0 = i0 == i1;
      if (i0) {goto B117;}
      i0 = 0u;
      l10 = i0;
      goto L24;
      B211:;
      i0 = l4;
      i1 = 123u;
      i0 = i0 != i1;
      if (i0) {goto B114;}
      i0 = 117u;
      l10 = i0;
      goto L24;
      B210:;
      i0 = l5;
      i1 = 1u;
      i0 += i1;
      l5 = i0;
      i0 = p1;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto B116;}
      goto B115;
      B209:;
      i0 = l5;
      i1 = 4294967295u;
      i0 += i1;
      l5 = i0;
      i0 = !(i0);
      if (i0) {goto B113;}
      i0 = 1u;
      l10 = i0;
      goto L24;
      B208:;
      i0 = p1;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto B112;}
      i0 = 2u;
      l10 = i0;
      goto L24;
      B207:;
      i0 = l8;
      l7 = i0;
      i0 = p1;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto B111;}
      goto B1;
      B206:;
      i0 = 0u;
      l4 = i0;
      i0 = 0u;
      l7 = i0;
      i0 = 0u;
      l12 = i0;
      i0 = 0u;
      l11 = i0;
      goto B31;
      B205:;
      i0 = 0u;
      l7 = i0;
      i0 = l2;
      l6 = i0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i1 = 4294967264u;
      i0 += i1;
      l5 = i0;
      i1 = 13u;
      i0 = i0 <= i1;
      if (i0) {goto B54;}
      i0 = 63u;
      l10 = i0;
      goto L24;
      B204:;
      i0 = l6;
      l5 = i0;
      i0 = 64u;
      l10 = i0;
      goto L24;
      B203:;
      i0 = l2;
      i1 = l8;
      i0 += i1;
      l6 = i0;
      i0 = l5;
      i1 = 1u;
      i0 += i1;
      i1 = l5;
      i2 = l4;
      i3 = 255u;
      i2 &= i3;
      i3 = 35u;
      i2 = i2 == i3;
      l13 = i2;
      i0 = i2 ? i0 : i1;
      l2 = i0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i1 = 48u;
      i0 = i0 != i1;
      if (i0) {goto B50;}
      i0 = 87u;
      l10 = i0;
      goto L24;
      B202:;
      i0 = l12;
      i1 = 48u;
      i2 = l12;
      i3 = 255u;
      i2 &= i3;
      i0 = i2 ? i0 : i1;
      l12 = i0;
      i0 = l7;
      i1 = 61u;
      i2 = l7;
      i3 = 255u;
      i2 &= i3;
      i0 = i2 ? i0 : i1;
      l7 = i0;
      i0 = 65u;
      l10 = i0;
      goto L24;
      B201:;
      i0 = 4294967295u;
      l3 = i0;
      i0 = l2;
      i1 = l6;
      i0 = i0 >= i1;
      if (i0) {goto B49;}
      i0 = 82u;
      l10 = i0;
      goto L24;
      B200:;
      i0 = l4;
      i1 = 4294967248u;
      i0 += i1;
      i1 = 255u;
      i0 &= i1;
      i1 = 9u;
      i0 = i0 > i1;
      if (i0) {goto B48;}
      i0 = 83u;
      l10 = i0;
      goto L24;
      B199:;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l2 = i0;
      i0 = 0u;
      l5 = i0;
      i0 = 84u;
      l10 = i0;
      goto L24;
      B198:;
      i0 = l4;
      i1 = 24u;
      i0 <<= (i1 & 31);
      i1 = 24u;
      i0 = (u32)((s32)i0 >> (i1 & 31));
      i1 = l5;
      i2 = 10u;
      i1 *= i2;
      i0 += i1;
      i1 = 4294967248u;
      i0 += i1;
      l5 = i0;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l8 = i0;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i0 = l2;
      i1 = l6;
      i0 = i0 >= i1;
      if (i0) {goto B34;}
      i0 = 86u;
      l10 = i0;
      goto L24;
      B197:;
      i0 = l8;
      l2 = i0;
      i0 = l4;
      i1 = 4294967248u;
      i0 += i1;
      i1 = 255u;
      i0 &= i1;
      i1 = 10u;
      i0 = i0 < i1;
      if (i0) {goto B35;}
      i0 = 85u;
      l10 = i0;
      goto L24;
      B196:;
      i0 = l8;
      i1 = 4294967295u;
      i0 += i1;
      l2 = i0;
      goto B47;
      B195:;
      i0 = 4294967295u;
      l5 = i0;
      i0 = 67u;
      l10 = i0;
      goto L24;
      B194:;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      i1 = l2;
      i2 = l4;
      i3 = 255u;
      i2 &= i3;
      i3 = 44u;
      i2 = i2 == i3;
      l14 = i2;
      i0 = i2 ? i0 : i1;
      l8 = i0;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i1 = 46u;
      i0 = i0 != i1;
      if (i0) {goto B46;}
      i0 = 75u;
      l10 = i0;
      goto L24;
      B193:;
      i0 = 4294967295u;
      l3 = i0;
      i0 = l8;
      i1 = 1u;
      i0 += i1;
      l2 = i0;
      i1 = l6;
      i0 = i0 >= i1;
      if (i0) {goto B38;}
      i0 = 77u;
      l10 = i0;
      goto L24;
      B192:;
      i0 = 4294967295u;
      l3 = i0;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i1 = 4294967248u;
      i0 += i1;
      i1 = 255u;
      i0 &= i1;
      i1 = 9u;
      i0 = i0 > i1;
      if (i0) {goto B45;}
      i0 = 78u;
      l10 = i0;
      goto L24;
      B191:;
      i0 = l8;
      i1 = 2u;
      i0 += i1;
      l2 = i0;
      i0 = 0u;
      l3 = i0;
      i0 = 79u;
      l10 = i0;
      goto L24;
      B190:;
      i0 = l4;
      i1 = 24u;
      i0 <<= (i1 & 31);
      i1 = 24u;
      i0 = (u32)((s32)i0 >> (i1 & 31));
      i1 = l3;
      i2 = 10u;
      i1 *= i2;
      i0 += i1;
      i1 = 4294967248u;
      i0 += i1;
      l3 = i0;
      i0 = l2;
      i1 = l6;
      i0 = i0 >= i1;
      if (i0) {goto B37;}
      i0 = 80u;
      l10 = i0;
      goto L24;
      B189:;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      l8 = i0;
      l2 = i0;
      i0 = l4;
      i1 = 4294967248u;
      i0 += i1;
      i1 = 255u;
      i0 &= i1;
      i1 = 10u;
      i0 = i0 < i1;
      if (i0) {goto B36;}
      i0 = 81u;
      l10 = i0;
      goto L24;
      B188:;
      i0 = l8;
      i1 = 4294967295u;
      i0 += i1;
      l2 = i0;
      i0 = 0u;
      l8 = i0;
      i0 = l4;
      i1 = 255u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B41;}
      i0 = 70u;
      l10 = i0;
      goto L24;
      B187:;
      i0 = 17602u;
      i1 = l4;
      i2 = 24u;
      i1 <<= (i2 & 31);
      i2 = 24u;
      i1 = (u32)((s32)i1 >> (i2 & 31));
      i0 = strchr_0(i0, i1);
      i0 = !(i0);
      if (i0) {goto B40;}
      i0 = 71u;
      l10 = i0;
      goto L24;
      B186:;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l8 = i0;
      i0 = l2;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i0 = !(i0);
      if (i0) {goto B39;}
      goto B127;
      B185:;
      i0 = l8;
      l2 = i0;
      i0 = 69u;
      l10 = i0;
      goto L24;
      B184:;
      i0 = 0u;
      l8 = i0;
      i0 = l4;
      i1 = 255u;
      i0 &= i1;
      if (i0) {goto B44;}
      i0 = 74u;
      l10 = i0;
      goto L24;
      B183:;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      if (i0) {goto B127;}
      i0 = 72u;
      l10 = i0;
      goto L24;
      B182:;
      i0 = l11;
      i1 = 16u;
      i0 |= i1;
      i1 = l11;
      i2 = l13;
      i0 = i2 ? i0 : i1;
      l2 = i0;
      i1 = 32u;
      i0 |= i1;
      i1 = l2;
      i2 = l14;
      i0 = i2 ? i0 : i1;
      l2 = i0;
      i0 = l0;
      i1 = 56u;
      i0 += i1;
      vstr_clear(i0);
      i0 = l7;
      i1 = 255u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B62;}
      i0 = 55u;
      l10 = i0;
      goto L24;
      B181:;
      i0 = l2;
      i1 = 6u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B90;}
      i0 = 16u;
      l10 = i0;
      goto L24;
      B180:;
      i0 = l8;
      i1 = 255u;
      i0 &= i1;
      l4 = i0;
      i1 = 99u;
      i0 = i0 == i1;
      if (i0) {goto B126;}
      i0 = 17u;
      l10 = i0;
      goto L24;
      B179:;
      i0 = l4;
      i1 = 115u;
      i0 = i0 != i1;
      if (i0) {goto B88;}
      goto B125;
      B178:;
      i0 = l9;
      i1 = 16u;
      i0 |= i1;
      i1 = 30u;
      i0 = i0 != i1;
      if (i0) {goto B96;}
      i0 = 15u;
      l10 = i0;
      goto L24;
      B177:;
      i0 = 62u;
      l7 = i0;
      i0 = l2;
      i1 = 6u;
      i0 &= i1;
      if (i0) {goto B89;}
      i0 = 18u;
      l10 = i0;
      goto L24;
      B176:;
      i0 = l12;
      i1 = 255u;
      i0 &= i1;
      l4 = i0;
      i0 = l7;
      i1 = 255u;
      i0 &= i1;
      l11 = i0;
      i1 = 94u;
      i0 = i0 == i1;
      if (i0) {goto B87;}
      i0 = 19u;
      l10 = i0;
      goto L24;
      B175:;
      i0 = l7;
      i1 = 24u;
      i0 <<= (i1 & 31);
      i1 = 24u;
      i0 = (u32)((s32)i0 >> (i1 & 31));
      l6 = i0;
      i1 = 61u;
      i0 = i0 == i1;
      if (i0) {goto B86;}
      i0 = 20u;
      l10 = i0;
      goto L24;
      B174:;
      i0 = l6;
      i1 = 60u;
      i0 = i0 != i1;
      if (i0) {goto B85;}
      i0 = 51u;
      l10 = i0;
      goto L24;
      B173:;
      i0 = l2;
      i1 = 1u;
      i0 |= i1;
      l2 = i0;
      i0 = 21u;
      l10 = i0;
      goto L24;
      B172:;
      i0 = l12;
      i1 = 32u;
      i2 = l4;
      i0 = i2 ? i0 : i1;
      l4 = i0;
      i0 = l9;
      i1 = 16u;
      i0 |= i1;
      i1 = 30u;
      i0 = i0 == i1;
      l7 = i0;
      i0 = !(i0);
      if (i0) {goto B84;}
      i0 = 23u;
      l10 = i0;
      goto L24;
      B171:;
      i0 = l8;
      i1 = 24u;
      i0 <<= (i1 & 31);
      i1 = 24u;
      i0 = (u32)((s32)i0 >> (i1 & 31));
      l6 = i0;
      i1 = 120u;
      i0 = i0 > i1;
      if (i0) {goto B131;}
      i0 = 24u;
      l10 = i0;
      goto L24;
      B170:;
      i0 = l6;
      switch (i0) {
        case 0: goto B251;
        case 1: goto B131;
        case 2: goto B131;
        case 3: goto B131;
        case 4: goto B131;
        case 5: goto B131;
        case 6: goto B131;
        case 7: goto B131;
        case 8: goto B131;
        case 9: goto B131;
        case 10: goto B131;
        case 11: goto B131;
        case 12: goto B131;
        case 13: goto B131;
        case 14: goto B131;
        case 15: goto B131;
        case 16: goto B131;
        case 17: goto B131;
        case 18: goto B131;
        case 19: goto B131;
        case 20: goto B131;
        case 21: goto B131;
        case 22: goto B131;
        case 23: goto B131;
        case 24: goto B131;
        case 25: goto B131;
        case 26: goto B131;
        case 27: goto B131;
        case 28: goto B131;
        case 29: goto B131;
        case 30: goto B131;
        case 31: goto B131;
        case 32: goto B131;
        case 33: goto B131;
        case 34: goto B131;
        case 35: goto B131;
        case 36: goto B131;
        case 37: goto B78;
        case 38: goto B131;
        case 39: goto B131;
        case 40: goto B131;
        case 41: goto B131;
        case 42: goto B131;
        case 43: goto B131;
        case 44: goto B131;
        case 45: goto B131;
        case 46: goto B131;
        case 47: goto B131;
        case 48: goto B131;
        case 49: goto B131;
        case 50: goto B131;
        case 51: goto B131;
        case 52: goto B131;
        case 53: goto B131;
        case 54: goto B131;
        case 55: goto B131;
        case 56: goto B131;
        case 57: goto B131;
        case 58: goto B131;
        case 59: goto B131;
        case 60: goto B131;
        case 61: goto B131;
        case 62: goto B131;
        case 63: goto B131;
        case 64: goto B131;
        case 65: goto B131;
        case 66: goto B131;
        case 67: goto B131;
        case 68: goto B131;
        case 69: goto B78;
        case 70: goto B78;
        case 71: goto B78;
        case 72: goto B131;
        case 73: goto B131;
        case 74: goto B131;
        case 75: goto B131;
        case 76: goto B131;
        case 77: goto B131;
        case 78: goto B131;
        case 79: goto B131;
        case 80: goto B131;
        case 81: goto B131;
        case 82: goto B131;
        case 83: goto B131;
        case 84: goto B131;
        case 85: goto B131;
        case 86: goto B131;
        case 87: goto B131;
        case 88: goto B77;
        case 89: goto B131;
        case 90: goto B131;
        case 91: goto B131;
        case 92: goto B131;
        case 93: goto B131;
        case 94: goto B131;
        case 95: goto B131;
        case 96: goto B131;
        case 97: goto B131;
        case 98: goto B76;
        case 99: goto B75;
        case 100: goto B251;
        case 101: goto B78;
        case 102: goto B78;
        case 103: goto B78;
        case 104: goto B131;
        case 105: goto B131;
        case 106: goto B131;
        case 107: goto B131;
        case 108: goto B131;
        case 109: goto B131;
        case 110: goto B251;
        case 111: goto B74;
        case 112: goto B131;
        case 113: goto B131;
        case 114: goto B131;
        case 115: goto B131;
        case 116: goto B131;
        case 117: goto B131;
        case 118: goto B131;
        case 119: goto B131;
        case 120: goto B77;
        default: goto B251;
      }
      B251:;
      i0 = 48u;
      l10 = i0;
      goto L24;
      B169:;
      i0 = l0;
      i1 = 72u;
      i0 += i1;
      i1 = l9;
      i2 = 10u;
      i3 = 97u;
      i4 = l2;
      i5 = l4;
      i6 = 24u;
      i5 <<= (i6 & 31);
      i6 = 24u;
      i5 = (u32)((s32)i5 >> (i6 & 31));
      i6 = l5;
      i7 = 0u;
      i0 = mp_print_mp_int(i0, i1, i2, i3, i4, i5, i6, i7);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto L2;}
      goto B0;
      B168:;
      i0 = l2;
      i1 = 64u;
      i0 |= i1;
      l2 = i0;
      i0 = l12;
      i1 = 32u;
      i2 = l4;
      i0 = i2 ? i0 : i1;
      l4 = i0;
      i0 = l9;
      i1 = 16u;
      i0 |= i1;
      i1 = 30u;
      i0 = i0 == i1;
      l7 = i0;
      if (i0) {goto B81;}
      i0 = 22u;
      l10 = i0;
      goto L24;
      B167:;
      i0 = l9;
      i1 = 1u;
      i0 &= i1;
      if (i0) {goto B80;}
      i0 = 49u;
      l10 = i0;
      goto L24;
      B166:;
      i0 = l9;
      i1 = 3u;
      i0 &= i1;
      if (i0) {goto B73;}
      i0 = 50u;
      l10 = i0;
      goto L24;
      B165:;
      i0 = l9;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = 33584u;
      i0 = i0 == i1;
      if (i0) {goto B79;}
      i0 = 29u;
      l10 = i0;
      goto L24;
      B164:;
      i0 = l7;
      i0 = !(i0);
      if (i0) {goto B72;}
      i0 = 31u;
      l10 = i0;
      goto L24;
      B163:;
      i0 = 103u;
      i1 = l8;
      i2 = 103u;
      i3 = l8;
      i4 = 255u;
      i3 &= i4;
      i1 = i3 ? i1 : i2;
      l8 = i1;
      i2 = l8;
      i3 = 255u;
      i2 &= i3;
      i3 = 110u;
      i2 = i2 == i3;
      i0 = i2 ? i0 : i1;
      i1 = 24u;
      i0 <<= (i1 & 31);
      i1 = 24u;
      i0 = (u32)((s32)i0 >> (i1 & 31));
      l8 = i0;
      i1 = 4294967227u;
      i0 += i1;
      i1 = 3u;
      i0 = i0 < i1;
      if (i0) {goto B68;}
      i0 = 32u;
      l10 = i0;
      goto L24;
      B162:;
      i0 = l8;
      i1 = 4294967195u;
      i0 += i1;
      i1 = 3u;
      i0 = i0 >= i1;
      if (i0) {goto B67;}
      i0 = 35u;
      l10 = i0;
      goto L24;
      B161:;
      i0 = l0;
      i1 = 72u;
      i0 += i1;
      i1 = l9;
      d1 = mp_obj_get_float(i1);
      i2 = l8;
      i3 = l2;
      i4 = l4;
      i5 = 24u;
      i4 <<= (i5 & 31);
      i5 = 24u;
      i4 = (u32)((s32)i4 >> (i5 & 31));
      i5 = l5;
      i6 = l3;
      i0 = mp_print_float(i0, d1, i2, i3, i4, i5, i6);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto L2;}
      goto B0;
      B160:;
      i0 = l2;
      i1 = 128u;
      i0 |= i1;
      l2 = i0;
      i0 = l12;
      i1 = 32u;
      i2 = l4;
      i0 = i2 ? i0 : i1;
      l4 = i0;
      i0 = l9;
      i1 = 16u;
      i0 |= i1;
      i1 = 30u;
      i0 = i0 == i1;
      l7 = i0;
      if (i0) {goto B83;}
      goto B82;
      B159:;
      i0 = 0u;
      l8 = i0;
      i0 = l2;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l4 = i0;
      i1 = 255u;
      i0 &= i1;
      if (i0) {goto B42;}
      goto B43;
      B158:;
      i0 = l9;
      i1 = 1u;
      i0 &= i1;
      if (i0) {goto B71;}
      i0 = 36u;
      l10 = i0;
      goto L24;
      B157:;
      i0 = l9;
      i1 = 3u;
      i0 &= i1;
      l6 = i0;
      if (i0) {goto B66;}
      i0 = 46u;
      l10 = i0;
      goto L24;
      B156:;
      i0 = l9;
      i0 = i32_load((&M0), (u64)(i0));
      l7 = i0;
      i1 = 33584u;
      i0 = i0 == i1;
      if (i0) {goto B70;}
      i0 = 47u;
      l10 = i0;
      goto L24;
      B155:;
      i0 = l7;
      i1 = 32832u;
      i0 = i0 == i1;
      if (i0) {goto B69;}
      i0 = 37u;
      l10 = i0;
      goto L24;
      B154:;
      i0 = l11;
      i1 = 61u;
      i0 = i0 == i1;
      if (i0) {goto B121;}
      i0 = 38u;
      l10 = i0;
      goto L24;
      B153:;
      i0 = l8;
      i1 = 255u;
      i0 &= i1;
      i1 = 115u;
      i0 = i0 == i1;
      if (i0) {goto B65;}
      i0 = 39u;
      l10 = i0;
      goto L24;
      B152:;
      i0 = l8;
      i1 = 24u;
      i0 <<= (i1 & 31);
      i1 = 24u;
      i0 = (u32)((s32)i0 >> (i1 & 31));
      l8 = i0;
      if (i0) {goto B120;}
      i0 = 40u;
      l10 = i0;
      goto L24;
      B151:;
      i0 = l9;
      i1 = 7u;
      i0 &= i1;
      i1 = 2u;
      i0 = i0 != i1;
      if (i0) {goto B64;}
      i0 = 45u;
      l10 = i0;
      goto L24;
      B150:;
      i0 = l9;
      i1 = 3u;
      i0 >>= (i1 & 31);
      i1 = l0;
      i2 = 56u;
      i1 += i2;
      i0 = qstr_data(i0, i1);
      l6 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 56));
      l8 = i0;
      goto B63;
      B149:;
      i0 = l0;
      i1 = 72u;
      i0 += i1;
      i1 = l9;
      i2 = 16u;
      i3 = l6;
      i4 = 4294967273u;
      i3 += i4;
      i4 = l2;
      i5 = l4;
      i6 = 24u;
      i5 <<= (i6 & 31);
      i6 = 24u;
      i5 = (u32)((s32)i5 >> (i6 & 31));
      i6 = l5;
      i7 = 0u;
      i0 = mp_print_mp_int(i0, i1, i2, i3, i4, i5, i6, i7);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto L2;}
      goto B0;
      B148:;
      i0 = l8;
      i1 = 37u;
      i0 = i0 != i1;
      if (i0) {goto B122;}
      i0 = 34u;
      l10 = i0;
      goto L24;
      B147:;
      i0 = l0;
      i1 = 72u;
      i0 += i1;
      i1 = l9;
      d1 = mp_obj_get_float(i1);
      d2 = 100;
      d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
      i2 = 102u;
      i3 = l2;
      i4 = 256u;
      i3 |= i4;
      i4 = l4;
      i5 = 24u;
      i4 <<= (i5 & 31);
      i5 = 24u;
      i4 = (u32)((s32)i4 >> (i5 & 31));
      i5 = l5;
      i6 = l3;
      i0 = mp_print_float(i0, d1, i2, i3, i4, i5, i6);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto L2;}
      goto B0;
      B146:;
      i0 = l0;
      i1 = l9;
      i1 = mp_obj_get_int(i1);
      i32_store8((&M0), (u64)(i0 + 56), i1);
      i0 = l0;
      i1 = 72u;
      i0 += i1;
      i1 = l0;
      i2 = 56u;
      i1 += i2;
      i2 = 1u;
      i3 = l2;
      i4 = l4;
      i5 = 24u;
      i4 <<= (i5 & 31);
      i5 = 24u;
      i4 = (u32)((s32)i4 >> (i5 & 31));
      i5 = l5;
      i0 = mp_print_strn(i0, i1, i2, i3, i4, i5);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto L2;}
      goto B0;
      B145:;
      i0 = l0;
      i1 = 72u;
      i0 += i1;
      i1 = l9;
      i2 = 8u;
      i3 = 97u;
      i4 = l2;
      i5 = 5u;
      i4 <<= (i5 & 31);
      i5 = 512u;
      i4 &= i5;
      i5 = l2;
      i4 |= i5;
      i5 = l4;
      i6 = 24u;
      i5 <<= (i6 & 31);
      i6 = 24u;
      i5 = (u32)((s32)i5 >> (i6 & 31));
      i6 = l5;
      i7 = 0u;
      i0 = mp_print_mp_int(i0, i1, i2, i3, i4, i5, i6, i7);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto L2;}
      goto B0;
      B144:;
      i0 = l0;
      i1 = 72u;
      i0 += i1;
      i1 = l9;
      i2 = 2u;
      i3 = 97u;
      i4 = l2;
      i5 = l4;
      i6 = 24u;
      i5 <<= (i6 & 31);
      i6 = 24u;
      i5 = (u32)((s32)i5 >> (i6 & 31));
      i6 = l5;
      i7 = 0u;
      i0 = mp_print_mp_int(i0, i1, i2, i3, i4, i5, i6, i7);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto L2;}
      goto B0;
      B143:;
      i0 = l6;
      if (i0) {goto B119;}
      i0 = 42u;
      l10 = i0;
      goto L24;
      B142:;
      i0 = l9;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = i32_load((&M0), (u64)(i0 + 24));
      i1 = 5u;
      i0 = i0 != i1;
      if (i0) {goto B119;}
      i0 = 43u;
      l10 = i0;
      goto L24;
      B141:;
      i0 = l0;
      i1 = l9;
      i1 = i32_load((&M0), (u64)(i1 + 8));
      l8 = i1;
      i32_store((&M0), (u64)(i0 + 56), i1);
      i0 = l9;
      i0 = i32_load((&M0), (u64)(i0 + 12));
      l6 = i0;
      i0 = 44u;
      l10 = i0;
      goto L24;
      B140:;
      i0 = l0;
      i1 = 72u;
      i0 += i1;
      i1 = l6;
      i2 = l8;
      i3 = l3;
      i4 = l3;
      i5 = 0u;
      i4 = (u32)((s32)i4 < (s32)i5);
      i2 = i4 ? i2 : i3;
      l9 = i2;
      i3 = l8;
      i4 = l8;
      i5 = l9;
      i4 = i4 > i5;
      i2 = i4 ? i2 : i3;
      i3 = l2;
      i4 = l4;
      i5 = 24u;
      i4 <<= (i5 & 31);
      i5 = 24u;
      i4 = (u32)((s32)i4 >> (i5 & 31));
      i5 = l5;
      i0 = mp_print_strn(i0, i1, i2, i3, i4, i5);
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto L2;}
      goto B0;
      B139:;
      i0 = l8;
      l7 = i0;
      i0 = p1;
      i1 = 4294967295u;
      i0 += i1;
      p1 = i0;
      i1 = p2;
      i0 = i0 < i1;
      if (i0) {goto B110;}
      goto B1;
      B138:;
      i0 = l6;
      l4 = i0;
      i0 = l6;
      i1 = l2;
      i0 = i0 >= i1;
      if (i0) {goto B107;}
      i0 = 98u;
      l10 = i0;
      goto L24;
      B137:;
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l5 = i0;
      i1 = 46u;
      i0 = i0 == i1;
      if (i0) {goto B104;}
      i0 = 99u;
      l10 = i0;
      goto L24;
      B136:;
      i0 = l5;
      i1 = 91u;
      i0 = i0 == i1;
      if (i0) {goto B105;}
      i0 = 100u;
      l10 = i0;
      goto L24;
      B135:;
      i0 = l4;
      i1 = 1u;
      i0 += i1;
      l4 = i0;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto B106;}
      i0 = 7u;
      l10 = i0;
      goto L24;
      B134:;
      i0 = p6;
      i1 = l6;
      i2 = l4;
      i3 = l6;
      i2 -= i3;
      i1 = qstr_from_strn(i1, i2);
      i2 = 3u;
      i1 <<= (i2 & 31);
      i2 = 2u;
      i1 |= i2;
      l8 = i1;
      i2 = 0u;
      i0 = mp_map_lookup(i0, i1, i2);
      l5 = i0;
      i0 = !(i0);
      if (i0) {goto B118;}
      i0 = 8u;
      l10 = i0;
      goto L24;
      B133:;
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0 + 4));
      l9 = i0;
      i0 = l4;
      i1 = l2;
      i0 = i0 >= i1;
      if (i0) {goto B103;}
      B132:;
      i0 = 16749u;
      mp_raise_NotImplementedError(i0);
      UNREACHABLE;
      B131:;
      i0 = l0;
      i1 = l9;
      i1 = mp_obj_get_type_str(i1);
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l0;
      i1 = l6;
      i32_store((&M0), (u64)(i0), i1);
      i0 = 32652u;
      i1 = 17327u;
      i2 = l0;
      mp_raise_msg_varg(i0, i1, i2);
      UNREACHABLE;
      B130:;
      i0 = 16384u;
      mp_raise_ValueError(i0);
      UNREACHABLE;
      B129:;
      i0 = 16469u;
      mp_raise_ValueError(i0);
      UNREACHABLE;
      B128:;
      i0 = 32052u;
      i1 = 16621u;
      mp_raise_msg(i0, i1);
      UNREACHABLE;
      B127:;
      i0 = 16994u;
      mp_raise_ValueError(i0);
      UNREACHABLE;
      B126:;
      i0 = 17199u;
      mp_raise_ValueError(i0);
      UNREACHABLE;
      B125:;
      i0 = 17095u;
      mp_raise_ValueError(i0);
      UNREACHABLE;
      B124:;
      i0 = 32052u;
      i1 = 16621u;
      mp_raise_msg(i0, i1);
      UNREACHABLE;
      B123:;
      i0 = 16852u;
      mp_raise_ValueError(i0);
      UNREACHABLE;
      B122:;
      i0 = l0;
      i1 = l9;
      i1 = mp_obj_get_type_str(i1);
      i32_store((&M0), (u64)(i0 + 20), i1);
      i0 = l0;
      i1 = l8;
      i32_store((&M0), (u64)(i0 + 16), i1);
      i0 = 32652u;
      i1 = 17327u;
      i2 = l0;
      i3 = 16u;
      i2 += i3;
      mp_raise_msg_varg(i0, i1, i2);
      UNREACHABLE;
      B121:;
      i0 = 17428u;
      mp_raise_ValueError(i0);
      UNREACHABLE;
      B120:;
      i0 = l0;
      i1 = l9;
      i1 = mp_obj_get_type_str(i1);
      i32_store((&M0), (u64)(i0 + 36), i1);
      i0 = l0;
      i1 = l8;
      i32_store((&M0), (u64)(i0 + 32), i1);
      i0 = 32652u;
      i1 = 17327u;
      i2 = l0;
      i3 = 32u;
      i2 += i3;
      mp_raise_msg_varg(i0, i1, i2);
      UNREACHABLE;
      B119:;
      i0 = l9;
      bad_implicit_conversion(i0);
      UNREACHABLE;
      B118:;
      i0 = 32112u;
      i1 = l8;
      i0 = mp_obj_new_exception_arg1(i0, i1);
      nlr_jump(i0);
      UNREACHABLE;
      B117:;
      i0 = 115u;
      l10 = i0;
      goto L24;
      B116:;
      i0 = 114u;
      l10 = i0;
      goto L24;
      B115:;
      i0 = 2u;
      l10 = i0;
      goto L24;
      B114:;
      i0 = 1u;
      l10 = i0;
      goto L24;
      B113:;
      i0 = 116u;
      l10 = i0;
      goto L24;
      B112:;
      i0 = 114u;
      l10 = i0;
      goto L24;
      B111:;
      i0 = 3u;
      l10 = i0;
      goto L24;
      B110:;
      i0 = 3u;
      l10 = i0;
      goto L24;
      B109:;
      i0 = 111u;
      l10 = i0;
      goto L24;
      B108:;
      i0 = 6u;
      l10 = i0;
      goto L24;
      B107:;
      i0 = 7u;
      l10 = i0;
      goto L24;
      B106:;
      i0 = 98u;
      l10 = i0;
      goto L24;
      B105:;
      i0 = 7u;
      l10 = i0;
      goto L24;
      B104:;
      i0 = 7u;
      l10 = i0;
      goto L24;
      B103:;
      i0 = 9u;
      l10 = i0;
      goto L24;
      B102:;
      i0 = 10u;
      l10 = i0;
      goto L24;
      B101:;
      i0 = 97u;
      l10 = i0;
      goto L24;
      B100:;
      i0 = 12u;
      l10 = i0;
      goto L24;
      B99:;
      i0 = 13u;
      l10 = i0;
      goto L24;
      B98:;
      i0 = 58u;
      l10 = i0;
      goto L24;
      B97:;
      i0 = 13u;
      l10 = i0;
      goto L24;
      B96:;
      i0 = 14u;
      l10 = i0;
      goto L24;
      B95:;
      i0 = 15u;
      l10 = i0;
      goto L24;
      B94:;
      i0 = 15u;
      l10 = i0;
      goto L24;
      B93:;
      i0 = 15u;
      l10 = i0;
      goto L24;
      B92:;
      i0 = 15u;
      l10 = i0;
      goto L24;
      B91:;
      i0 = 55u;
      l10 = i0;
      goto L24;
      B90:;
      i0 = 18u;
      l10 = i0;
      goto L24;
      B89:;
      i0 = 16u;
      l10 = i0;
      goto L24;
      B88:;
      i0 = 18u;
      l10 = i0;
      goto L24;
      B87:;
      i0 = 53u;
      l10 = i0;
      goto L24;
      B86:;
      i0 = 52u;
      l10 = i0;
      goto L24;
      B85:;
      i0 = 21u;
      l10 = i0;
      goto L24;
      B84:;
      i0 = 22u;
      l10 = i0;
      goto L24;
      B83:;
      i0 = 23u;
      l10 = i0;
      goto L24;
      B82:;
      i0 = 22u;
      l10 = i0;
      goto L24;
      B81:;
      i0 = 23u;
      l10 = i0;
      goto L24;
      B80:;
      i0 = 23u;
      l10 = i0;
      goto L24;
      B79:;
      i0 = 23u;
      l10 = i0;
      goto L24;
      B78:;
      i0 = 29u;
      l10 = i0;
      goto L24;
      B77:;
      i0 = 28u;
      l10 = i0;
      goto L24;
      B76:;
      i0 = 27u;
      l10 = i0;
      goto L24;
      B75:;
      i0 = 26u;
      l10 = i0;
      goto L24;
      B74:;
      i0 = 25u;
      l10 = i0;
      goto L24;
      B73:;
      i0 = 29u;
      l10 = i0;
      goto L24;
      B72:;
      i0 = 30u;
      l10 = i0;
      goto L24;
      B71:;
      i0 = 31u;
      l10 = i0;
      goto L24;
      B70:;
      i0 = 31u;
      l10 = i0;
      goto L24;
      B69:;
      i0 = 31u;
      l10 = i0;
      goto L24;
      B68:;
      i0 = 35u;
      l10 = i0;
      goto L24;
      B67:;
      i0 = 33u;
      l10 = i0;
      goto L24;
      B66:;
      i0 = 37u;
      l10 = i0;
      goto L24;
      B65:;
      i0 = 40u;
      l10 = i0;
      goto L24;
      B64:;
      i0 = 41u;
      l10 = i0;
      goto L24;
      B63:;
      i0 = 44u;
      l10 = i0;
      goto L24;
      B62:;
      i0 = 73u;
      l10 = i0;
      goto L24;
      B61:;
      i0 = 55u;
      l10 = i0;
      goto L24;
      B60:;
      i0 = 96u;
      l10 = i0;
      goto L24;
      B59:;
      i0 = 89u;
      l10 = i0;
      goto L24;
      B58:;
      i0 = 61u;
      l10 = i0;
      goto L24;
      B57:;
      i0 = 63u;
      l10 = i0;
      goto L24;
      B56:;
      i0 = 63u;
      l10 = i0;
      goto L24;
      B55:;
      i0 = 62u;
      l10 = i0;
      goto L24;
      B54:;
      i0 = 62u;
      l10 = i0;
      goto L24;
      B53:;
      i0 = 63u;
      l10 = i0;
      goto L24;
      B52:;
      i0 = 64u;
      l10 = i0;
      goto L24;
      B51:;
      i0 = 64u;
      l10 = i0;
      goto L24;
      B50:;
      i0 = 65u;
      l10 = i0;
      goto L24;
      B49:;
      i0 = 66u;
      l10 = i0;
      goto L24;
      B48:;
      i0 = 66u;
      l10 = i0;
      goto L24;
      B47:;
      i0 = 67u;
      l10 = i0;
      goto L24;
      B46:;
      i0 = 68u;
      l10 = i0;
      goto L24;
      B45:;
      i0 = 69u;
      l10 = i0;
      goto L24;
      B44:;
      i0 = 70u;
      l10 = i0;
      goto L24;
      B43:;
      i0 = 74u;
      l10 = i0;
      goto L24;
      B42:;
      i0 = 70u;
      l10 = i0;
      goto L24;
      B41:;
      i0 = 74u;
      l10 = i0;
      goto L24;
      B40:;
      i0 = 74u;
      l10 = i0;
      goto L24;
      B39:;
      i0 = 72u;
      l10 = i0;
      goto L24;
      B38:;
      i0 = 76u;
      l10 = i0;
      goto L24;
      B37:;
      i0 = 76u;
      l10 = i0;
      goto L24;
      B36:;
      i0 = 79u;
      l10 = i0;
      goto L24;
      B35:;
      i0 = 84u;
      l10 = i0;
      goto L24;
      B34:;
      i0 = 85u;
      l10 = i0;
      goto L24;
      B33:;
      i0 = 94u;
      l10 = i0;
      goto L24;
      B32:;
      i0 = 93u;
      l10 = i0;
      goto L24;
      B31:;
      i0 = 95u;
      l10 = i0;
      goto L24;
      B30:;
      i0 = 103u;
      l10 = i0;
      goto L24;
      B29:;
      i0 = 109u;
      l10 = i0;
      goto L24;
      B28:;
      i0 = 104u;
      l10 = i0;
      goto L24;
      B27:;
      i0 = 104u;
      l10 = i0;
      goto L24;
      B26:;
      i0 = 105u;
      l10 = i0;
      goto L24;
      B25:;
      i0 = 107u;
      l10 = i0;
      goto L24;
  B1:;
  i0 = 16291u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 str_replace(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0, l15 = 0, 
      l16 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 4294967295u;
  l1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 4294967295u;
  i2 = p0;
  i3 = 4294967295u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  l1 = i0;
  B4:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l2 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i1 = mp_obj_get_type(i1);
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_get_type(i0);
  i1 = l2;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l3 = i0;
  goto B5;
  B6:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  B5:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l4 = i0;
  goto B7;
  B8:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l4 = i0;
  B7:;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B10;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 20u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l5 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 28));
  l6 = i1;
  i0 = i0 > i1;
  if (i0) {goto B9;}
  goto B0;
  B10:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l5 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 28));
  l6 = i1;
  i0 = i0 <= i1;
  if (i0) {goto B0;}
  B9:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B3:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B1:;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B0:;
  i0 = 0u;
  l7 = i0;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  l8 = i0;
  i0 = 0u;
  l9 = i0;
  i0 = 0u;
  l10 = i0;
  i0 = p0;
  if (i0) {goto B12;}
  i0 = 30u;
  l11 = i0;
  goto B11;
  B12:;
  i0 = 4u;
  l11 = i0;
  B11:;
  L13: vm_checktime();
    i0 = l11;
    switch (i0) {
      case 0: goto B44;
      case 1: goto B42;
      case 2: goto B47;
      case 3: goto B46;
      case 4: goto B45;
      case 5: goto B71;
      case 6: goto B70;
      case 7: goto B69;
      case 8: goto B68;
      case 9: goto B67;
      case 10: goto B66;
      case 11: goto B65;
      case 12: goto B64;
      case 13: goto B63;
      case 14: goto B62;
      case 15: goto B61;
      case 16: goto B48;
      case 17: goto B60;
      case 18: goto B59;
      case 19: goto B58;
      case 20: goto B57;
      case 21: goto B56;
      case 22: goto B55;
      case 23: goto B54;
      case 24: goto B53;
      case 25: goto B52;
      case 26: goto B51;
      case 27: goto B50;
      case 28: goto B43;
      case 29: goto B49;
      case 30: goto B74;
      case 31: goto B73;
      case 32: goto B72;
      case 33: goto B41;
      default: goto B41;
    }
    B74:;
    i0 = l7;
    i0 = !(i0);
    if (i0) {goto B14;}
    i0 = 31u;
    l11 = i0;
    goto L13;
    B73:;
    i0 = l7;
    i1 = l5;
    i2 = l0;
    i2 = i32_load((&M0), (u64)(i2 + 20));
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = 32u;
    l11 = i0;
    goto L13;
    B72:;
    i0 = 1u;
    l10 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 20));
    l9 = i0;
    i0 = 1u;
    i1 = l1;
    i0 = i0 == i1;
    if (i0) {goto B35;}
    i0 = 5u;
    l11 = i0;
    goto L13;
    B71:;
    i0 = l6;
    i0 = !(i0);
    if (i0) {goto B36;}
    i0 = 6u;
    l11 = i0;
    goto L13;
    B70:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 24));
    l12 = i0;
    i0 = l7;
    i0 = !(i0);
    if (i0) {goto B31;}
    i0 = 7u;
    l11 = i0;
    goto L13;
    B69:;
    i0 = l3;
    l13 = i0;
    i0 = 8u;
    l11 = i0;
    goto L13;
    B68:;
    i0 = l6;
    i1 = l12;
    i0 = i0 < i1;
    if (i0) {goto B28;}
    i0 = 9u;
    l11 = i0;
    goto L13;
    B67:;
    i0 = l13;
    p0 = i0;
    i0 = l13;
    i1 = l4;
    i2 = l12;
    i0 = memcmp_0(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto B27;}
    i0 = 10u;
    l11 = i0;
    goto L13;
    B66:;
    i0 = l6;
    i1 = l12;
    i0 -= i1;
    l14 = i0;
    i0 = 0u;
    p0 = i0;
    i0 = 11u;
    l11 = i0;
    goto L13;
    B65:;
    i0 = l14;
    i1 = p0;
    i0 = i0 == i1;
    if (i0) {goto B25;}
    i0 = 12u;
    l11 = i0;
    goto L13;
    B64:;
    i0 = l13;
    i1 = p0;
    i0 += i1;
    l15 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    l16 = i0;
    p0 = i0;
    i0 = l15;
    i1 = 1u;
    i0 += i1;
    i1 = l4;
    i2 = l12;
    i0 = memcmp_0(i0, i1, i2);
    if (i0) {goto B26;}
    i0 = 13u;
    l11 = i0;
    goto L13;
    B63:;
    i0 = l13;
    i1 = l16;
    i0 += i1;
    p0 = i0;
    i0 = 14u;
    l11 = i0;
    goto L13;
    B62:;
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B24;}
    i0 = 15u;
    l11 = i0;
    goto L13;
    B61:;
    i0 = l7;
    i1 = l9;
    i0 += i1;
    i1 = l13;
    i2 = p0;
    i3 = p0;
    i4 = 1u;
    i3 += i4;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 24));
    i2 = i4 ? i2 : i3;
    p0 = i2;
    i3 = l13;
    i2 -= i3;
    l12 = i2;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l7;
    i1 = l12;
    i2 = l9;
    i1 += i2;
    l15 = i1;
    i0 += i1;
    i1 = l5;
    i2 = l0;
    i2 = i32_load((&M0), (u64)(i2 + 20));
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l3;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 28));
    i0 += i1;
    i1 = p0;
    i2 = l0;
    i2 = i32_load((&M0), (u64)(i2 + 24));
    l12 = i2;
    i1 += i2;
    l13 = i1;
    i0 -= i1;
    l6 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 20));
    i1 = l15;
    i0 += i1;
    l9 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    l10 = i0;
    i1 = l1;
    i0 = i0 == i1;
    if (i0) {goto B20;}
    i0 = 17u;
    l11 = i0;
    goto L13;
    B60:;
    i0 = l6;
    if (i0) {goto B30;}
    goto B29;
    B59:;
    i0 = l3;
    l14 = i0;
    i0 = 19u;
    l11 = i0;
    goto L13;
    B58:;
    i0 = l6;
    i1 = l12;
    i0 = i0 < i1;
    if (i0) {goto B19;}
    i0 = 20u;
    l11 = i0;
    goto L13;
    B57:;
    i0 = l14;
    p0 = i0;
    i0 = l14;
    i1 = l4;
    i2 = l12;
    i0 = memcmp_0(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto B18;}
    i0 = 21u;
    l11 = i0;
    goto L13;
    B56:;
    i0 = l6;
    i1 = l12;
    i0 -= i1;
    l13 = i0;
    i0 = 0u;
    p0 = i0;
    i0 = 22u;
    l11 = i0;
    goto L13;
    B55:;
    i0 = l13;
    i1 = p0;
    i0 = i0 == i1;
    if (i0) {goto B16;}
    i0 = 23u;
    l11 = i0;
    goto L13;
    B54:;
    i0 = l14;
    i1 = p0;
    i0 += i1;
    l15 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    l16 = i0;
    p0 = i0;
    i0 = l15;
    i1 = 1u;
    i0 += i1;
    i1 = l4;
    i2 = l12;
    i0 = memcmp_0(i0, i1, i2);
    if (i0) {goto B17;}
    i0 = 24u;
    l11 = i0;
    goto L13;
    B53:;
    i0 = l14;
    i1 = l16;
    i0 += i1;
    p0 = i0;
    i0 = 25u;
    l11 = i0;
    goto L13;
    B52:;
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B15;}
    i0 = 26u;
    l11 = i0;
    goto L13;
    B51:;
    i0 = l3;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 28));
    i0 += i1;
    i1 = p0;
    i2 = p0;
    i3 = 1u;
    i2 += i3;
    i3 = l0;
    i3 = i32_load((&M0), (u64)(i3 + 24));
    l12 = i3;
    i1 = i3 ? i1 : i2;
    p0 = i1;
    i2 = l12;
    i1 += i2;
    l13 = i1;
    i0 -= i1;
    l6 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 20));
    i1 = l9;
    i2 = l14;
    i1 -= i2;
    i2 = p0;
    i1 += i2;
    i0 += i1;
    l9 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    l10 = i0;
    i1 = l1;
    i0 = i0 == i1;
    if (i0) {goto B21;}
    i0 = 27u;
    l11 = i0;
    goto L13;
    B50:;
    i0 = l13;
    l14 = i0;
    i0 = l6;
    if (i0) {goto B23;}
    goto B22;
    B49:;
    i0 = l14;
    l13 = i0;
    i0 = 16u;
    l11 = i0;
    goto L13;
    B48:;
    i0 = l7;
    if (i0) {goto B34;}
    i0 = 2u;
    l11 = i0;
    goto L13;
    B47:;
    i0 = l10;
    i0 = !(i0);
    if (i0) {goto B32;}
    i0 = 3u;
    l11 = i0;
    goto L13;
    B46:;
    i0 = l0;
    i1 = l6;
    i2 = l9;
    i1 += i2;
    vstr_init_len(i0, i1);
    i0 = l8;
    i0 = i32_load((&M0), (u64)(i0));
    l7 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 28));
    l6 = i0;
    i0 = 0u;
    l9 = i0;
    i0 = 0u;
    l10 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 24));
    i0 = !(i0);
    if (i0) {goto B40;}
    i0 = 4u;
    l11 = i0;
    goto L13;
    B45:;
    i0 = l10;
    i1 = l1;
    i0 = i0 != i1;
    if (i0) {goto B39;}
    i0 = 0u;
    l11 = i0;
    goto L13;
    B44:;
    i0 = l3;
    l13 = i0;
    i0 = l7;
    i0 = !(i0);
    if (i0) {goto B38;}
    goto B37;
    B43:;
    i0 = l14;
    l13 = i0;
    i0 = l7;
    i0 = !(i0);
    if (i0) {goto B33;}
    i0 = 1u;
    l11 = i0;
    goto L13;
    B42:;
    i0 = l7;
    i1 = l9;
    i0 += i1;
    i1 = l13;
    i2 = l6;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l2;
    i1 = l0;
    i0 = mp_obj_new_str_from_vstr(i0, i1);
    p0 = i0;
    i0 = l0;
    i1 = 32u;
    i0 += i1;
    g0 = i0;
    i0 = p0;
    goto Bfunc;
    B41:;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    i0 = l0;
    i1 = 32u;
    i0 += i1;
    g0 = i0;
    i0 = p0;
    goto Bfunc;
    B40:;
    i0 = 30u;
    l11 = i0;
    goto L13;
    B39:;
    i0 = 5u;
    l11 = i0;
    goto L13;
    B38:;
    i0 = 2u;
    l11 = i0;
    goto L13;
    B37:;
    i0 = 1u;
    l11 = i0;
    goto L13;
    B36:;
    i0 = 0u;
    l11 = i0;
    goto L13;
    B35:;
    i0 = 0u;
    l11 = i0;
    goto L13;
    B34:;
    i0 = 1u;
    l11 = i0;
    goto L13;
    B33:;
    i0 = 2u;
    l11 = i0;
    goto L13;
    B32:;
    i0 = 33u;
    l11 = i0;
    goto L13;
    B31:;
    i0 = 18u;
    l11 = i0;
    goto L13;
    B30:;
    i0 = 8u;
    l11 = i0;
    goto L13;
    B29:;
    i0 = 16u;
    l11 = i0;
    goto L13;
    B28:;
    i0 = 16u;
    l11 = i0;
    goto L13;
    B27:;
    i0 = 14u;
    l11 = i0;
    goto L13;
    B26:;
    i0 = 11u;
    l11 = i0;
    goto L13;
    B25:;
    i0 = 16u;
    l11 = i0;
    goto L13;
    B24:;
    i0 = 16u;
    l11 = i0;
    goto L13;
    B23:;
    i0 = 19u;
    l11 = i0;
    goto L13;
    B22:;
    i0 = 16u;
    l11 = i0;
    goto L13;
    B21:;
    i0 = 16u;
    l11 = i0;
    goto L13;
    B20:;
    i0 = 16u;
    l11 = i0;
    goto L13;
    B19:;
    i0 = 28u;
    l11 = i0;
    goto L13;
    B18:;
    i0 = 25u;
    l11 = i0;
    goto L13;
    B17:;
    i0 = 22u;
    l11 = i0;
    goto L13;
    B16:;
    i0 = 29u;
    l11 = i0;
    goto L13;
    B15:;
    i0 = 28u;
    l11 = i0;
    goto L13;
    B14:;
    i0 = 32u;
    l11 = i0;
    goto L13;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_count(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i1 = mp_obj_get_type(i1);
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l3 = i0;
  goto B3;
  B4:;
  i0 = l0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  B3:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = l2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l4 = i0;
  goto B5;
  B6:;
  i0 = l0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l4 = i0;
  B5:;
  i0 = l3;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  l5 = i1;
  i0 += i1;
  l6 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B8;}
  i0 = l3;
  l2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l7 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = l1;
  i1 = l3;
  i2 = l5;
  i3 = l7;
  i4 = 1u;
  i0 = str_index_to_ptr(i0, i1, i2, i3, i4);
  l2 = i0;
  B9:;
  i0 = p0;
  i1 = 4u;
  i0 = i0 < i1;
  if (i0) {goto B10;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  i0 = l1;
  i1 = l3;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i3 = p1;
  i4 = 1u;
  i0 = str_index_to_ptr(i0, i1, i2, i3, i4);
  l6 = i0;
  B10:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  goto B1;
  B8:;
  i0 = l3;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  if (i0) {goto B1;}
  B7:;
  i0 = l2;
  i1 = l6;
  i2 = l2;
  i1 -= i2;
  i0 = utf8_charlen(i0, i1);
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 += i1;
  l2 = i0;
  goto B0;
  B2:;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B1:;
  i0 = 0u;
  l3 = i0;
  i0 = l2;
  i1 = p1;
  i0 += i1;
  i1 = l6;
  i0 = i0 > i1;
  if (i0) {goto B11;}
  i0 = 0u;
  l3 = i0;
  L12: vm_checktime();
    i0 = l2;
    i1 = l4;
    i2 = p1;
    i0 = memcmp_0(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto B13;}
    i0 = l2;
    i0 = utf8_next_char(i0);
    l2 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 8));
    p1 = i1;
    i0 += i1;
    i1 = l6;
    i0 = i0 <= i1;
    if (i0) {goto L12;}
    goto B11;
    B13:;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l2;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 8));
    p1 = i1;
    i0 += i1;
    l2 = i0;
    i1 = p1;
    i0 += i1;
    i1 = l6;
    i0 = i0 <= i1;
    if (i0) {goto L12;}
  B11:;
  i0 = l3;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l2 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  i1 = 1u;
  i0 |= i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_partition(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i0 = str_partitioner(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_partitioner(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i1 = p1;
  i1 = mp_obj_get_type(i1);
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l2 = i0;
  goto B2;
  B3:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  B2:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l4 = i0;
  if (i0) {goto B4;}
  goto B0;
  B5:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l4 = i1;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B0;}
  B4:;
  i0 = l0;
  i1 = 10u;
  i2 = 35544u;
  i3 = l1;
  i4 = 36168u;
  i3 = i3 == i4;
  i1 = i3 ? i1 : i2;
  l5 = i1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l5;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = l5;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i2 = 8u;
  i3 = p2;
  i4 = 0u;
  i3 = (u32)((s32)i3 > (s32)i4);
  l6 = i3;
  i1 = i3 ? i1 : i2;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  p0 = i0;
  i1 = l4;
  i0 = i0 < i1;
  if (i0) {goto B6;}
  i0 = l2;
  i1 = 0u;
  i2 = p0;
  i3 = l4;
  i2 -= i3;
  p0 = i2;
  i3 = l6;
  i1 = i3 ? i1 : i2;
  l7 = i1;
  i0 += i1;
  l5 = i0;
  i1 = l3;
  i2 = l4;
  i0 = memcmp_0(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l7;
  i1 = p0;
  i2 = 0u;
  i3 = l6;
  i1 = i3 ? i1 : i2;
  i0 -= i1;
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  L8: vm_checktime();
    i0 = p0;
    i1 = p2;
    i0 += i1;
    p0 = i0;
    i0 = l5;
    i1 = p2;
    i0 += i1;
    l5 = i0;
    i1 = l3;
    i2 = l4;
    i0 = memcmp_0(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto B7;}
    i0 = p0;
    if (i0) {goto L8;}
    goto B6;
  B7:;
  i0 = l5;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l1;
  i1 = l2;
  i2 = l5;
  i3 = l2;
  i2 -= i3;
  p0 = i2;
  i0 = mp_obj_new_str_of_type(i0, i1, i2);
  p2 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 20u;
  i0 += i1;
  i1 = l1;
  i2 = l5;
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 24));
  p2 = i3;
  i2 += i3;
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 28));
  i4 = p2;
  i5 = p0;
  i4 += i5;
  i3 -= i4;
  i1 = mp_obj_new_str_of_type(i1, i2, i3);
  i32_store((&M0), (u64)(i0), i1);
  B6:;
  i0 = 3u;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = p1;
  bad_implicit_conversion(i0);
  UNREACHABLE;
  B0:;
  i0 = 14863u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_rpartition(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i2 = 4294967295u;
  i0 = str_partitioner(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_lower(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  l2 = i0;
  goto B0;
  B1:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  B0:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 0u;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l3 = i0;
  L3: vm_checktime();
    i0 = l3;
    i1 = l2;
    i0 += i1;
    i1 = l1;
    i2 = l2;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i1 = unichar_tolower(i1);
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 28));
    i0 = i0 < i1;
    if (i0) {goto L3;}
  B2:;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  l2 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_upper(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  l2 = i0;
  goto B0;
  B1:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  B0:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 0u;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l3 = i0;
  L3: vm_checktime();
    i0 = l3;
    i1 = l2;
    i0 += i1;
    i1 = l1;
    i2 = l2;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i1 = unichar_toupper(i1);
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 28));
    i0 = i0 < i1;
    if (i0) {goto L3;}
  B2:;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  l2 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_isspace(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = 14u;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l3 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = 14u;
  l2 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  p0 = i0;
  L3: vm_checktime();
    i0 = l1;
    i1 = p0;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_isspace(i0);
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    i0 = i0 < i1;
    if (i0) {goto L3;}
  i0 = 30u;
  l2 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_isalpha(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = 14u;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l3 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = 14u;
  l2 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  p0 = i0;
  L3: vm_checktime();
    i0 = l1;
    i1 = p0;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_isalpha(i0);
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    i0 = i0 < i1;
    if (i0) {goto L3;}
  i0 = 30u;
  l2 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_isdigit(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = 14u;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l3 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = 14u;
  l2 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  p0 = i0;
  L3: vm_checktime();
    i0 = l1;
    i1 = p0;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_isdigit(i0);
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    i0 = i0 < i1;
    if (i0) {goto L3;}
  i0 = 30u;
  l2 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_isupper(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = 14u;
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = 14u;
  p0 = i0;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  p0 = i0;
  i0 = 0u;
  l3 = i0;
  L4: vm_checktime();
    i0 = l1;
    i1 = p0;
    i0 += i1;
    l2 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_isalpha(i0);
    i0 = !(i0);
    if (i0) {goto B5;}
    i0 = 1u;
    l3 = i0;
    i0 = l2;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_isupper(i0);
    i0 = !(i0);
    if (i0) {goto B3;}
    B5:;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    i0 = i0 < i1;
    if (i0) {goto L4;}
  i0 = 30u;
  p0 = i0;
  i0 = l3;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  B3:;
  i0 = 14u;
  p0 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_islower(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = 14u;
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = 14u;
  p0 = i0;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  p0 = i0;
  i0 = 0u;
  l3 = i0;
  L4: vm_checktime();
    i0 = l1;
    i1 = p0;
    i0 += i1;
    l2 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_isalpha(i0);
    i0 = !(i0);
    if (i0) {goto B5;}
    i0 = 1u;
    l3 = i0;
    i0 = l2;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i0 = unichar_islower(i0);
    i0 = !(i0);
    if (i0) {goto B3;}
    B5:;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    i0 = i0 < i1;
    if (i0) {goto L4;}
  i0 = 30u;
  p0 = i0;
  i0 = l3;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  B3:;
  i0 = 14u;
  p0 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 bytes_decode(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 1290u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 2u;
  p0 = i0;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  p1 = i0;
  B0:;
  i0 = 36168u;
  i1 = p0;
  i2 = 0u;
  i3 = p1;
  i0 = mp_obj_str_make_new(i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_encode(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 1290u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 2u;
  p0 = i0;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  p1 = i0;
  B0:;
  i0 = 0u;
  i1 = p0;
  i2 = 0u;
  i3 = p1;
  i0 = bytes_make_new(i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 bytes_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  f64 d1;
  i0 = g0;
  i1 = 80u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  if (i0) {goto B7;}
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = 3u;
  i0 &= i1;
  l1 = i0;
  if (i0) {goto B10;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35852u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  B10:;
  i0 = p2;
  i1 = 7u;
  i0 &= i1;
  l2 = i0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  goto B1;
  B9:;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = 35544u;
  goto Bfunc;
  B8:;
  i0 = l1;
  if (i0) {goto B11;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36168u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B11:;
  i0 = p1;
  i1 = 1u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = l1;
  if (i0) {goto B6;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 40828u;
  i0 = i0 == i1;
  if (i0) {goto B13;}
  i0 = p1;
  i1 = 32832u;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  i0 = p1;
  i1 = 42644u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = l0;
  i1 = p2;
  j1 = mp_obj_name_to_ull(i1);
  i64_store((&M0), (u64)(i0 + 64), j1);
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = 8u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = 35852u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l0;
  i2 = 64u;
  i1 += i2;
  i2 = 8u;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 9u;
  i1 = m_malloc(i1);
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = l0;
  i2 = 64u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B13:;
  i0 = l0;
  i1 = p2;
  mp_obj_float128_get(i0, i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 72), j1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 64), j1);
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = 16u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = 35852u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l0;
  i2 = 64u;
  i1 += i2;
  i2 = 16u;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 17u;
  i1 = m_malloc(i1);
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = l0;
  i2 = 64u;
  i1 += i2;
  i2 = 16u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B12:;
  i0 = l0;
  i1 = p2;
  d1 = mp_obj_float_get(i1);
  f64_store((&M0), (u64)(i0 + 64), d1);
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = 8u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = 35852u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l0;
  i2 = 64u;
  i1 += i2;
  i2 = 8u;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 9u;
  i1 = m_malloc(i1);
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = l0;
  i2 = 64u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B7:;
  mp_arg_error_unimpl_kw();
  UNREACHABLE;
  B6:;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p2;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i2 = 1u;
  i0 = mp_get_buffer(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 48));
  p3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 52));
  p1 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = 35852u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p2;
  i1 = p3;
  i2 = p1;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = p1;
  i2 = 1u;
  i1 += i2;
  i1 = m_malloc(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p3;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p1;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  B5:;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B4:;
  i0 = p2;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  i1 = p2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  p2 = i1;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 72));
  i1 = 0u;
  i2 = p2;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = 35852u;
  i1 = l0;
  i2 = 64u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p2 = i0;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B3:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_len_maybe(i0);
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B15;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = p2;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  vstr_init(i0, i1);
  goto B14;
  B15:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = 16u;
  vstr_init(i0, i1);
  B14:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_getiter(i0, i1);
  p1 = i0;
  i0 = mp_iternext(i0);
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B17;}
  L18: vm_checktime();
    i0 = p2;
    i0 = mp_obj_get_int(i0);
    p2 = i0;
    i1 = 256u;
    i0 = i0 >= i1;
    if (i0) {goto B16;}
    i0 = l0;
    i1 = 32u;
    i0 += i1;
    i1 = p2;
    i2 = 255u;
    i1 &= i2;
    vstr_add_byte(i0, i1);
    i0 = p1;
    i0 = mp_iternext(i0);
    p2 = i0;
    if (i0) {goto L18;}
  B17:;
  i0 = 35852u;
  i1 = l0;
  i2 = 32u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p2 = i0;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B16:;
  i0 = 18518u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B2:;
  i0 = 0u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B1:;
  i0 = p1;
  i1 = 4294967294u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l2;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B20;}
  i0 = p2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 64u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p1 = i0;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  goto B19;
  B20:;
  i0 = l0;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 64), i1);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  B19:;
  i0 = p2;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B23;}
  i0 = p2;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i0 = qstr_hash(i0);
  p3 = i0;
  if (i0) {goto B21;}
  goto B22;
  B23:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p3 = i0;
  if (i0) {goto B21;}
  B22:;
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 64));
  i0 = qstr_compute_hash(i0, i1);
  p3 = i0;
  B21:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 64));
  l1 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = 35852u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p2;
  i1 = p3;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B0:;
  i0 = 18589u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_str_get_buffer(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 1u;
  l1 = i0;
  i0 = p2;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  goto B1;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  p2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  B1:;
  i0 = p1;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 66u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 0u;
  l1 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static void str_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p1 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 18426u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = p2;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  mp_str_print_json(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B3:;
  i0 = p0;
  i1 = 18485u;
  i0 = mp_print_str(i0, i1);
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i3 = 1u;
  mp_str_print_quoted(i0, i1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 bytes_subscr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l2 = i0;
  i0 = 0u;
  p0 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = 0u;
  p0 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35484u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  B4:;
  i0 = l2;
  i1 = l1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i3 = p1;
  i4 = 0u;
  i1 = mp_get_index(i1, i2, i3, i4);
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B3:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p1;
  i2 = l0;
  i0 = mp_seq_get_fast_slice_indexes(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = l1;
  i1 = l2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2));
  p0 = i2;
  i1 += i2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p0;
  i2 -= i3;
  i0 = mp_obj_new_str_of_type(i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B5:;
  i0 = 18675u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_bytes_iterator(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 168u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 34424u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 bytes_it_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l2 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i0 = i0 < i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l4 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  i1 = l4;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l2;
  i1 = l3;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l1 = i0;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = l3;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l1 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_bytes(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 35852u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p0;
  i2 = p1;
  i1 = qstr_compute_hash(i1, i2);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p1;
  i2 = 1u;
  i1 += i2;
  i1 = m_malloc(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p0;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p1;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_str_via_qstr(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  i0 = qstr_from_strn(i0, i1);
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_str_intern_checked(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  goto B1;
  B2:;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  B1:;
  i0 = p0;
  i1 = l1;
  i0 = qstr_from_strn(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = p0;
  bad_implicit_conversion(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_str_equal(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  l1 = i0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  l2 = i0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = p1;
  i0 = i0 == i1;
  goto Bfunc;
  B6:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l3 = i0;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  l2 = i0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  goto B3;
  B5:;
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i0 = qstr_hash(i0);
  l3 = i0;
  i0 = l2;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  B4:;
  i0 = l3;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l4 = i1;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = l3;
  i1 = p1;
  i2 = 3u;
  i1 >>= (i2 & 31);
  i1 = qstr_hash(i1);
  l4 = i1;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 0u;
  l3 = i0;
  i0 = l4;
  if (i0) {goto B0;}
  B1:;
  i0 = l1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B10;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l1 = i0;
  i0 = l2;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  goto B8;
  B10:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = l2;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  B9:;
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p1 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  p0 = i1;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  goto B7;
  B8:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = p0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B7:;
  i0 = l1;
  i1 = p1;
  i2 = p0;
  i0 = memcmp_0(i0, i1, i2);
  i0 = !(i0);
  l3 = i0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_str_get_qstr(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36168u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i0 = qstr_from_strn(i0, i1);
  goto Bfunc;
  B1:;
  i0 = p0;
  bad_implicit_conversion(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_str_get_str(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = p0;
  bad_implicit_conversion(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_index_to_ptr(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 35852u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = p3;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p3;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_get_int_maybe(i0, i1);
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 4294967295u;
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p3 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B4;}
  goto B2;
  B6:;
  i0 = 35852u;
  i1 = p2;
  i2 = p3;
  i3 = p4;
  i0 = mp_get_index(i0, i1, i2, i3);
  p3 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = p3;
  i0 += i1;
  goto Bfunc;
  B5:;
  i0 = l0;
  i1 = p3;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  p3 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 4294967295u;
  p0 = i0;
  i0 = p3;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B2;}
  B4:;
  i0 = p1;
  i1 = p2;
  i0 += i1;
  l1 = i0;
  i0 = p2;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B8;}
  L9: vm_checktime();
    i0 = l0;
    i1 = p3;
    i2 = 4294967295u;
    i1 += i2;
    p0 = i1;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = p3;
    i0 = !(i0);
    if (i0) {goto B7;}
    i0 = p1;
    p3 = i0;
    L10: vm_checktime();
      i0 = p3;
      i0 = i32_load8_u((&M0), (u64)(i0 + 1));
      p2 = i0;
      i0 = p3;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      p3 = i0;
      i0 = p2;
      i1 = 192u;
      i0 &= i1;
      i1 = 128u;
      i0 = i0 == i1;
      if (i0) {goto L10;}
    i0 = p0;
    p3 = i0;
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L9;}
  B8:;
  i0 = p4;
  if (i0) {goto B1;}
  i0 = 32052u;
  i1 = 11521u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B7:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B3:;
  i0 = l0;
  i1 = p3;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 10369u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B2:;
  i0 = p1;
  i1 = p2;
  i0 += i1;
  i1 = p0;
  i0 += i1;
  p2 = i0;
  L12: vm_checktime();
    i0 = p2;
    i1 = p1;
    i0 = i0 < i1;
    if (i0) {goto B11;}
    i0 = p2;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 192u;
    i0 &= i1;
    i1 = 128u;
    i0 = i0 == i1;
    if (i0) {goto B13;}
    i0 = l0;
    i1 = p3;
    i2 = 1u;
    i1 += i2;
    p3 = i1;
    i32_store((&M0), (u64)(i0 + 12), i1);
    B13:;
    i0 = p2;
    i1 = p0;
    i0 += i1;
    p2 = i0;
    i0 = p3;
    if (i0) {goto L12;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  i1 = 1u;
  i0 += i1;
  goto Bfunc;
  B11:;
  i0 = p1;
  l1 = i0;
  i0 = p4;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 32052u;
  i1 = 11521u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void uni_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 144u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 140u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p1 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 140), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = p2;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 132), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 140));
  i32_store((&M0), (u64)(i0 + 128), i1);
  i0 = p0;
  i1 = 12211u;
  i2 = l0;
  i3 = 128u;
  i2 += i3;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 144u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = p2;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 140));
  mp_str_print_json(i0, i1, i2);
  i0 = l0;
  i1 = 144u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B3:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 140));
  p2 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B8;}
  i0 = p1;
  i1 = p2;
  i0 += i1;
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p1;
  p2 = i0;
  L9: vm_checktime();
    i0 = 1u;
    l3 = i0;
    i0 = p2;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    i1 = 39u;
    i0 = i0 == i1;
    if (i0) {goto B10;}
    i0 = l4;
    i1 = 34u;
    i0 = i0 == i1;
    if (i0) {goto B7;}
    i0 = l2;
    l3 = i0;
    B10:;
    i0 = l3;
    l2 = i0;
    i0 = p2;
    i1 = 1u;
    i0 += i1;
    p2 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L9;}
  i0 = 39u;
  l4 = i0;
  i0 = 34u;
  p2 = i0;
  i0 = l3;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B6;}
  goto B5;
  B8:;
  i0 = 39u;
  l4 = i0;
  i0 = l0;
  i1 = 39u;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = p0;
  i1 = 12882u;
  i2 = l0;
  i3 = 112u;
  i2 += i3;
  i0 = mp_printf(i0, i1, i2);
  goto B4;
  B7:;
  i0 = 39u;
  p2 = i0;
  i0 = 39u;
  l4 = i0;
  i0 = l2;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B5;}
  B6:;
  i0 = p2;
  l4 = i0;
  B5:;
  i0 = l0;
  i1 = l4;
  i32_store((&M0), (u64)(i0 + 96), i1);
  i0 = p0;
  i1 = 12882u;
  i2 = l0;
  i3 = 96u;
  i2 += i3;
  i0 = mp_printf(i0, i1, i2);
  L11: vm_checktime();
    i0 = p1;
    i0 = utf8_get_char(i0);
    p2 = i0;
    i0 = p1;
    i0 = utf8_next_char(i0);
    p1 = i0;
    i0 = p2;
    i1 = l4;
    i0 = i0 != i1;
    if (i0) {goto B12;}
    i0 = l0;
    i1 = l4;
    i32_store((&M0), (u64)(i0 + 16), i1);
    i0 = p0;
    i1 = 13275u;
    i2 = l0;
    i3 = 16u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
    goto B4;
    B12:;
    i0 = p2;
    i1 = 92u;
    i0 = i0 != i1;
    if (i0) {goto B13;}
    i0 = p0;
    i1 = 13707u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
    goto B4;
    B13:;
    i0 = p2;
    i1 = 4294967264u;
    i0 += i1;
    i1 = 94u;
    i0 = i0 > i1;
    if (i0) {goto B14;}
    i0 = l0;
    i1 = p2;
    i32_store((&M0), (u64)(i0 + 32), i1);
    i0 = p0;
    i1 = 12882u;
    i2 = l0;
    i3 = 32u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
    goto B4;
    B14:;
    i0 = p2;
    i1 = 9u;
    i0 = i0 == i1;
    if (i0) {goto B17;}
    i0 = p2;
    i1 = 13u;
    i0 = i0 == i1;
    if (i0) {goto B16;}
    i0 = p2;
    i1 = 10u;
    i0 = i0 != i1;
    if (i0) {goto B15;}
    i0 = p0;
    i1 = 14153u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
    goto B4;
    B17:;
    i0 = p0;
    i1 = 14706u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
    goto B4;
    B16:;
    i0 = p0;
    i1 = 14428u;
    i0 = mp_print_str(i0, i1);
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
    goto B4;
    B15:;
    i0 = p2;
    i1 = 255u;
    i0 = i0 > i1;
    if (i0) {goto B18;}
    i0 = l0;
    i1 = p2;
    i32_store((&M0), (u64)(i0 + 48), i1);
    i0 = p0;
    i1 = 14879u;
    i2 = l0;
    i3 = 48u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
    goto B4;
    B18:;
    i0 = p2;
    i1 = 65535u;
    i0 = i0 > i1;
    if (i0) {goto B19;}
    i0 = l0;
    i1 = p2;
    i32_store((&M0), (u64)(i0 + 64), i1);
    i0 = p0;
    i1 = 15023u;
    i2 = l0;
    i3 = 64u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
    goto B4;
    B19:;
    i0 = l0;
    i1 = p2;
    i32_store((&M0), (u64)(i0 + 80), i1);
    i0 = p0;
    i1 = 15160u;
    i2 = l0;
    i3 = 80u;
    i2 += i3;
    i0 = mp_printf(i0, i1, i2);
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L11;}
  B4:;
  i0 = l0;
  i1 = l4;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 12882u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 144u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 uni_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  p1 = i0;
  i0 = p0;
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = p0;
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i0 = utf8_charlen(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  p1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = 30u;
  i1 = 14u;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i0 = i2 ? i0 : i1;
  p1 = i0;
  B3:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_subscr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l2 = i0;
  i0 = 0u;
  p0 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  goto B1;
  B2:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = 0u;
  p0 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35484u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  B4:;
  i0 = 1u;
  p0 = i0;
  i0 = l1;
  i1 = l2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i3 = p1;
  i4 = 0u;
  i0 = str_index_to_ptr(i0, i1, i2, i3, i4);
  l2 = i0;
  i0 = i32_load8_s((&M0), (u64)(i0));
  p1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B5;}
  i0 = 64u;
  p2 = i0;
  i0 = p1;
  i1 = 255u;
  i0 &= i1;
  p1 = i0;
  i1 = 64u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = 1u;
  p0 = i0;
  L6: vm_checktime();
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i0 = p2;
    i1 = 1u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    p2 = i0;
    i1 = p1;
    i0 &= i1;
    if (i0) {goto L6;}
  B5:;
  i0 = l2;
  i1 = p0;
  i0 = mp_obj_new_str_via_qstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B3:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  i1 = 3u;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  i0 = p2;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  B8:;
  i0 = l2;
  p2 = i0;
  i0 = p0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = l1;
  i1 = l2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i3 = p0;
  i4 = 1u;
  i0 = str_index_to_ptr(i0, i1, i2, i3, i4);
  p2 = i0;
  B9:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = l3;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B11;}
  i0 = 10u;
  p0 = i0;
  i0 = l1;
  i1 = l2;
  i2 = p1;
  i3 = l3;
  i4 = 1u;
  i0 = str_index_to_ptr(i0, i1, i2, i3, i4);
  p1 = i0;
  i1 = p2;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  goto B10;
  B11:;
  i0 = 10u;
  p0 = i0;
  i0 = l2;
  i1 = p1;
  i0 += i1;
  p1 = i0;
  i1 = p2;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  B10:;
  i0 = l1;
  i1 = p2;
  i2 = p1;
  i3 = p2;
  i2 -= i3;
  i0 = mp_obj_new_str_of_type(i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B7:;
  i0 = 15376u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_str_iterator(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 202u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 34424u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 str_it_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 3u;
  i0 >>= (i1 & 31);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = qstr_data(i0, i1);
  l2 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i0 = i0 < i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = l0;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l4 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  i1 = l4;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l2;
  i1 = l3;
  i0 += i1;
  l1 = i0;
  i1 = l1;
  i1 = utf8_next_char(i1);
  i2 = l1;
  i1 -= i2;
  l2 = i1;
  i0 = mp_obj_new_str_via_qstr(i0, i1);
  l1 = i0;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l2;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static void stringio_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 10409u;
  i2 = 11547u;
  i3 = l1;
  i4 = 36488u;
  i3 = i3 == i4;
  i1 = i3 ? i1 : i2;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 stringio_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 16u;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B4:;
  i0 = p1;
  i1 = l0;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  goto B0;
  B3:;
  i0 = l1;
  i1 = 16u;
  i1 = vstr_new(i1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B2:;
  i0 = l1;
  i1 = p1;
  i1 = mp_obj_get_int(i1);
  i1 = vstr_new(i1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B5:;
  i0 = l1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i1 = vstr_new(i1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = 0u;
  i0 = stringio_write(i0, i1, i2, i3);
  i0 = l1;
  i1 = 8u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = l1;
  i1 = 16u;
  i1 = m_malloc(i1);
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2));
  vstr_init_fixed_buf(i0, i1, i2);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  i1 = 12u;
  i0 += i1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stringio_write(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = m_malloc(i0);
  l2 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 12));
  i2 = 254u;
  i1 &= i2;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i1 = p2;
  i0 += i1;
  l1 = i0;
  i1 = l0;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  i0 = p3;
  i1 = 27u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 4294967295u;
  goto Bfunc;
  B2:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = l1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i0 = i0 <= i1;
  if (i0) {goto B3;}
  i0 = p3;
  i1 = 4u;
  i0 += i1;
  i1 = l3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  i1 = l1;
  i2 = l3;
  i1 -= i2;
  i0 = vstr_add_len(i0, i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B3:;
  i0 = l0;
  i1 = l2;
  i0 = i0 <= i1;
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i0 += i1;
  i1 = 0u;
  i2 = l0;
  i3 = l2;
  i2 -= i3;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B4:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 += i1;
  i1 = p1;
  i2 = p2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  p0 = i1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = i0 <= i1;
  if (i0) {goto B5;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  B5:;
  i0 = p2;
  goto Bfunc;
  B0:;
  i0 = 12216u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stringio_read(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l3 = i1;
  i0 = i0 <= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l3;
  i1 += i2;
  i2 = l2;
  i3 = l3;
  i2 -= i3;
  l1 = i2;
  i3 = p2;
  i4 = l1;
  i5 = p2;
  i4 = i4 < i5;
  i2 = i4 ? i2 : i3;
  l1 = i2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l1;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  B1:;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 12216u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stringio_ioctl(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = p1;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  p1 = i0;
  goto B1;
  B5:;
  i0 = 0u;
  goto Bfunc;
  B4:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  vstr_free(i0);
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = 0u;
  goto Bfunc;
  B3:;
  i0 = p3;
  i1 = 22u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 4294967295u;
  goto Bfunc;
  B2:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 4u;
  i0 += i1;
  p1 = i0;
  B1:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  B0:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = l1;
  i0 += i1;
  p1 = i0;
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l2;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B7;}
  i0 = 0u;
  i1 = p1;
  i2 = p1;
  i3 = l1;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  goto B6;
  B7:;
  i0 = p1;
  i1 = l1;
  i0 = i0 >= i1;
  if (i0) {goto B6;}
  i0 = p3;
  i1 = 22u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 4294967295u;
  goto Bfunc;
  B6:;
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stringio_getvalue(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 36168u;
  i1 = 35852u;
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 36488u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i0 = mp_obj_new_str_of_type(i0, i1, i2);
  goto Bfunc;
  B0:;
  i0 = 12216u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stringio___exit__(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_stream_close(i0);
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_tuple_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 3u;
  l0 = i0;
  i0 = p2;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 10428u;
  i0 = mp_print_str(i0, i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B3;}
  goto B2;
  B4:;
  i0 = p0;
  i1 = 11565u;
  i0 = mp_print_str(i0, i1);
  i0 = 1u;
  l0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  if (i0) {goto B2;}
  B3:;
  i0 = 0u;
  l2 = i0;
  i0 = l0;
  i1 = 3u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  p2 = i0;
  i0 = 0u;
  l1 = i0;
  L5: vm_checktime();
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B6;}
    i0 = p0;
    i1 = 12245u;
    i0 = mp_print_str(i0, i1);
    B6:;
    i0 = p0;
    i1 = p2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l0;
    mp_obj_print_helper(i0, i1, i2);
    i0 = p2;
    i1 = 4u;
    i0 += i1;
    p2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i1 = p1;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i0 = i0 < i1;
    if (i0) {goto L5;}
  i0 = l0;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = 12885u;
  i0 = mp_print_str(i0, i1);
  goto Bfunc;
  B0:;
  i0 = l2;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = p0;
  i1 = 13279u;
  i0 = mp_print_str(i0, i1);
  B7:;
  i0 = p0;
  i1 = 13710u;
  i0 = mp_print_str(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_tuple_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  p0 = i0;
  i0 = 36748u;
  l0 = i0;
  i0 = 0u;
  l1 = i0;
  L4: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = 6u;
    i1 = l2;
    i0 = mp_unary_op(i0, i1);
    i1 = 1u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    i1 = l0;
    i0 += i1;
    l0 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i1 = p1;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = i0 < i1;
    if (i0) {goto L4;}
  i0 = l0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B3:;
  i0 = 30u;
  i1 = 14u;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B2:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  l0 = i0;
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 36748u;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_tuple_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 29u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = 1u;
  i1 = p0;
  i0 <<= (i1 & 31);
  l2 = i0;
  i1 = 31u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p2;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 36));
  i1 = 29u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = p2;
  i1 = 36756u;
  i0 = mp_obj_cast_to_native_base(i0, i1);
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  B6:;
  i0 = p0;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p2;
  i4 = 8u;
  i3 += i4;
  i4 = p2;
  i4 = i32_load((&M0), (u64)(i4 + 4));
  i0 = mp_seq_cmp_objs(i0, i1, i2, i3, i4);
  p2 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = p2;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B5:;
  i0 = l2;
  i1 = 134234112u;
  i0 &= i1;
  if (i0) {goto B8;}
  i0 = 1u;
  i1 = p0;
  i0 <<= (i1 & 31);
  i1 = 536936448u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = 0u;
  l1 = i0;
  i0 = p2;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_get_int_maybe(i0, i1);
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B7;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = p2;
  i0 *= i1;
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l2;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 8u;
  i0 += i1;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 36756u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  goto B0;
  B8:;
  i0 = p2;
  i0 = mp_obj_get_type(i0);
  i1 = 36756u;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l1 = i1;
  i0 += i1;
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l2;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 8u;
  i0 += i1;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 36756u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B2;
  B7:;
  i0 = 36748u;
  l1 = i0;
  B4:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B3:;
  i0 = 36748u;
  p0 = i0;
  B2:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  i2 = l1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p2;
  i2 = 8u;
  i1 += i2;
  i2 = p2;
  i3 = 4u;
  i2 += i3;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = 36748u;
  p0 = i0;
  B0:;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = 4u;
  i2 = l1;
  i3 = p2;
  i4 = p0;
  i5 = 8u;
  i4 += i5;
  mp_seq_multiply(i0, i1, i2, i3, i4);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_tuple_getiter(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 216u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = 34424u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_tuple(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 8u;
  i0 += i1;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 36756u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 0u;
  l1 = i0;
  L2: vm_checktime();
    i0 = l0;
    i1 = l1;
    i0 += i1;
    i1 = 8u;
    i0 += i1;
    i1 = p1;
    i2 = l1;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L2;}
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 36748u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_tuple_subscr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35484u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p1;
  i4 = 0u;
  i1 = mp_get_index(i1, i2, i3, i4);
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = l0;
  i0 = mp_seq_get_fast_slice_indexes(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i0 -= i1;
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = l1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  l2 = i0;
  i1 = 8u;
  i0 += i1;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 36756u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  goto B4;
  B5:;
  i0 = 36748u;
  p2 = i0;
  i0 = 0u;
  l2 = i0;
  B4:;
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i2 = p1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i2 = 8u;
  i1 += i2;
  i2 = l2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  goto Bfunc;
  B3:;
  i0 = 14156u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_tuple_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36756u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = 16u;
  i0 = m_malloc(i0);
  l1 = i0;
  i0 = 0u;
  p1 = i0;
  i0 = 36748u;
  l0 = i0;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  l2 = i0;
  i0 = mp_iternext(i0);
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 8u;
  p3 = i0;
  i0 = 4u;
  p2 = i0;
  L4: vm_checktime();
    i0 = p1;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto B5;}
    i0 = l1;
    i1 = p2;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 = m_realloc(i0, i1);
    l1 = i0;
    i0 = p2;
    i1 = 1u;
    i0 <<= (i1 & 31);
    p2 = i0;
    B5:;
    i0 = l1;
    i1 = p3;
    i0 += i1;
    i1 = 4294967288u;
    i0 += i1;
    i1 = l3;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p3;
    i1 = 4u;
    i0 += i1;
    p3 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i0 = l2;
    i0 = mp_iternext(i0);
    l3 = i0;
    if (i0) {goto L4;}
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p3;
  i0 = m_malloc(i0);
  l0 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 36756u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p1;
  i1 = 4294967295u;
  i0 += i1;
  p2 = i0;
  i0 = 4294967295u;
  p3 = i0;
  i0 = 0u;
  p1 = i0;
  L6: vm_checktime();
    i0 = l0;
    i1 = p1;
    i0 += i1;
    i1 = 8u;
    i0 += i1;
    i1 = l1;
    i2 = p1;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p2;
    i1 = p3;
    i2 = 1u;
    i1 += i2;
    p3 = i1;
    i0 = i0 != i1;
    if (i0) {goto L6;}
  B3:;
  i0 = l1;
  m_free(i0);
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 36748u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 tuple_it_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l2 = i1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i1 = l1;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_tuple_get(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p2;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0), i1);
  FUNC_EPILOGUE;
}

static void mp_obj_tuple_del(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  m_free(i0);
  FUNC_EPILOGUE;
}

static u32 tuple_count(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = p1;
  i0 = mp_seq_count_obj(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 tuple_index(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = p0;
  i3 = p1;
  i0 = mp_seq_index_obj(i0, i1, i2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_instance(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  i0 = instance_count_native_bases(i0, i1);
  l0 = i0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 16u;
  i0 += i1;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  mp_map_init(i0, i1);
  i0 = l0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 36868u;
  i32_store((&M0), (u64)(i0 + 16), i1);
  B0:;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 instance_count_native_bases(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 34300u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  L3: vm_checktime();
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    i1 = 8u;
    i0 = i0 != i1;
    if (i0) {goto B2;}
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0 + 52));
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 36756u;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    i0 = p0;
    i1 = 34300u;
    i0 = i0 != i1;
    if (i0) {goto L3;}
    goto B0;
  B2:;
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 1u;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p0 = i0;
  i1 = l1;
  i0 = i0 <= i1;
  if (i0) {goto B0;}
  i0 = 0u;
  l0 = i0;
  L4: vm_checktime();
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p1;
    i0 = instance_count_native_bases(i0, i1);
    i1 = l0;
    i0 += i1;
    l0 = i0;
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i1 = p0;
    i0 = i0 < i1;
    if (i0) {goto L4;}
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_instance_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 40), j1);
  i0 = l0;
  i1 = 12u;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  j1 = 103079215104ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 32), i1);
  i0 = l0;
  i1 = l0;
  i2 = 40u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p0;
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  l1 = i0;
  i1 = 4u;
  i0 |= i1;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = instance_count_native_bases(i0, i1);
  l2 = i0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 16u;
  i0 += i1;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  i1 = 0u;
  mp_map_init(i0, i1);
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 36868u;
  i32_store((&M0), (u64)(i0 + 16), i1);
  goto B2;
  B3:;
  i0 = p2;
  i1 = p1;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l1 = i0;
  i1 = p1;
  i2 = 1u;
  i1 += i2;
  l3 = i1;
  i0 += i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i0 = m_malloc(i0);
  l2 = i0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i1 = p3;
  i2 = l1;
  i3 = p1;
  i2 += i3;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i1 = l3;
  i2 = p2;
  i3 = l2;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  l1 = i0;
  i0 = l2;
  m_free(i0);
  i0 = l1;
  i0 = mp_obj_get_type(i0);
  i1 = p0;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  goto B2;
  B4:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = 1u;
  i2 = 0u;
  i3 = l0;
  i4 = 8u;
  i3 += i4;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  l1 = i0;
  i0 = mp_obj_get_type(i0);
  i1 = p0;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  B2:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 40), j1);
  i0 = l0;
  j1 = 17ull;
  i64_store((&M0), (u64)(i0 + 20), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p0;
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p2;
  i1 = p1;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = p2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = p1;
  i0 += i1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  l2 = i0;
  i1 = 8u;
  i0 += i1;
  i0 = m_malloc(i0);
  p0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 40));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 44));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = p3;
  i2 = l2;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = p2;
  i2 = p0;
  i0 = mp_call_method_n_kw(i0, i1, i2);
  l2 = i0;
  i0 = p0;
  m_free(i0);
  i0 = l2;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  goto B5;
  B7:;
  i0 = 0u;
  i1 = 0u;
  i2 = l0;
  i3 = 40u;
  i2 += i3;
  i0 = mp_call_method_n_kw(i0, i1, i2);
  l2 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  B6:;
  i0 = l0;
  i1 = l2;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 10430u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B5:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = 36868u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = l1;
  i1 = 16u;
  i0 += i1;
  i1 = p0;
  i2 = p1;
  i3 = p2;
  i4 = p3;
  i5 = p0;
  i5 = i32_load((&M0), (u64)(i5 + 12));
  i1 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i5, i1, i2, i3, i4);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_class_lookup(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l0 = i0;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  l1 = i0;
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  l2 = i0;
  L3: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B4;}
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    i1 = 8u;
    i0 = i0 == i1;
    if (i0) {goto B4;}
    i0 = p1;
    i1 = l3;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    if (i0) {goto B1;}
    B4:;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0 + 56));
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B5;}
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    i1 = p0;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 3u;
    i1 <<= (i2 & 31);
    i2 = 2u;
    i1 |= i2;
    i2 = 0u;
    i0 = mp_map_lookup(i0, i1, i2);
    l3 = i0;
    if (i0) {goto B2;}
    B5:;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B7;}
    i0 = l2;
    i0 = i32_load8_u((&M0), (u64)(i0));
    if (i0) {goto B7;}
    i0 = p1;
    i1 = 34300u;
    i0 = i0 == i1;
    if (i0) {goto B7;}
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    i1 = 8u;
    i0 = i0 == i1;
    if (i0) {goto B7;}
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0 + 16));
    i1 = p0;
    i2 = 4u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l1;
    i2 = i32_load((&M0), (u64)(i2));
    mp_load_method_maybe(i0, i1, i2);
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = i32_load((&M0), (u64)(i0));
    if (i0) {goto B6;}
    B7:;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0 + 52));
    p1 = i0;
    i0 = !(i0);
    if (i0) {goto B6;}
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 36756u;
    i0 = i0 == i1;
    if (i0) {goto B8;}
    i0 = p1;
    i1 = 34300u;
    i0 = i0 != i1;
    if (i0) {goto L3;}
    goto B6;
    B8:;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    l4 = i0;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    l5 = i0;
    i0 = p1;
    i1 = 8u;
    i0 += i1;
    l3 = i0;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0 + 8));
    p1 = i0;
    i0 = l4;
    i1 = l5;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l5 = i0;
    i1 = l3;
    i0 = i0 <= i1;
    if (i0) {goto B9;}
    L10: vm_checktime();
      i0 = p1;
      i1 = 34300u;
      i0 = i0 == i1;
      if (i0) {goto B11;}
      i0 = p0;
      i1 = p1;
      mp_obj_class_lookup(i0, i1);
      i0 = l1;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = i32_load((&M0), (u64)(i0));
      if (i0) {goto B6;}
      B11:;
      i0 = l3;
      i0 = i32_load((&M0), (u64)(i0 + 4));
      p1 = i0;
      i0 = l3;
      i1 = 4u;
      i0 += i1;
      l4 = i0;
      l3 = i0;
      i0 = l4;
      i1 = l5;
      i0 = i0 < i1;
      if (i0) {goto L10;}
    B9:;
    i0 = p1;
    i1 = 34300u;
    i0 = i0 != i1;
    if (i0) {goto L3;}
    B6:;
  goto Bfunc;
  B2:;
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l3;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p0;
  i4 = 12u;
  i3 += i4;
  i3 = i32_load((&M0), (u64)(i3));
  mp_convert_member_lookup(i0, i1, i2, i3);
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = 12u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = p1;
  i1 = 34300u;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 8u;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  i0 = l4;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l4 = i0;
  B12:;
  i0 = l4;
  i1 = p1;
  i2 = l3;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i3 = p0;
  i4 = 12u;
  i3 += i4;
  i3 = i32_load((&M0), (u64)(i3));
  mp_convert_member_lookup(i0, i1, i2, i3);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_instance_is_callable(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  j1 = 68719476745ull;
  i64_store((&M0), (u64)(i0 + 12), j1);
  i0 = l0;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 0u;
  i0 = i0 != i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_instance_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  j1 = 68719476745ull;
  i64_store((&M0), (u64)(i0 + 28), j1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  i2 = p1;
  i3 = p2;
  i4 = p3;
  i0 = mp_call_method_self_n_kw(i0, i1, i2, i3, i4);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_get_type_str(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 11567u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_instance_getiter(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 154618822675ull;
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l2;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = p1;
  if (i0) {goto B2;}
  i0 = 16u;
  i0 = m_malloc(i0);
  p1 = i0;
  B2:;
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i2 = l1;
  i2 = i32_load((&M0), (u64)(i2 + 36));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32), 3, i2, i0, i1);
  l1 = i0;
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  i1 = 0u;
  i2 = l0;
  i3 = 24u;
  i2 += i3;
  i0 = mp_call_method_n_kw(i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void type_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 13281u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 type_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 131078u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i1 = 3u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  goto Bfunc;
  B1:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_str_get_qstr(i0);
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = p3;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i0 = mp_obj_new_type(i0, i1, i2);
  goto Bfunc;
  B0:;
  i0 = 13712u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_type(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36756u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 42u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_obj_tuple_get(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = 0u;
  l2 = i0;
  i0 = 28u;
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l4 = i0;
  L8: vm_checktime();
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i1 = 3u;
    i0 &= i1;
    if (i0) {goto B5;}
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 36936u;
    i0 = i0 != i1;
    if (i0) {goto B5;}
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    l6 = i0;
    i0 = !(i0);
    if (i0) {goto B4;}
    i0 = l6;
    i1 = 8u;
    i0 = i0 != i1;
    if (i0) {goto B9;}
    i0 = l5;
    i1 = l5;
    i1 = i32_load16_u((&M0), (u64)(i1 + 4));
    l6 = i1;
    i2 = 1u;
    i1 |= i2;
    i32_store16((&M0), (u64)(i0 + 4), i1);
    i0 = l6;
    i1 = 2u;
    i0 &= i1;
    i1 = l3;
    i0 |= i1;
    l3 = i0;
    B9:;
    i0 = l4;
    i1 = 4u;
    i0 += i1;
    l4 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto L8;}
    goto B6;
  B7:;
  i0 = 28u;
  l3 = i0;
  B6:;
  i0 = 60u;
  i0 = m_malloc0(i0);
  l2 = i0;
  i1 = l3;
  i32_store16((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i1 = 36936u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = p0;
  i32_store16((&M0), (u64)(i0 + 6), i1);
  i0 = l2;
  i1 = 221u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l2;
  i1 = 8u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l2;
  i1 = 10u;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l2;
  i1 = 222u;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l2;
  i1 = 223u;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l2;
  i1 = 224u;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l2;
  i1 = 225u;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l2;
  i1 = 7u;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l2;
  i1 = 226u;
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l5 = i0;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l2;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  l4 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i1 = i32_load((&M0), (u64)(i1 + 48));
  i32_store((&M0), (u64)(i0 + 48), i1);
  i0 = l5;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B10;}
  i0 = l2;
  i1 = l4;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 52), i1);
  B11:;
  i0 = l2;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 56), i1);
  i0 = 2u;
  p1 = i0;
  i0 = l3;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B0;}
  goto B1;
  B10:;
  i0 = l2;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 52), i1);
  i0 = l2;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 56), i1);
  i0 = 2u;
  p1 = i0;
  i0 = l3;
  i1 = 2u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  goto B0;
  B5:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B4:;
  i0 = l0;
  i1 = l5;
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 12248u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B3:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B2:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B1:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 12u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l5 = i0;
  i0 = 0u;
  l4 = i0;
  L13: vm_checktime();
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 == i1;
    if (i0) {goto B14;}
    i0 = l5;
    i1 = 4u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i1 = 3u;
    i0 &= i1;
    if (i0) {goto B14;}
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 34484u;
    i0 = i0 == i1;
    if (i0) {goto B12;}
    B14:;
    i0 = l5;
    i1 = 8u;
    i0 += i1;
    l5 = i0;
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = l6;
    i0 = i0 < i1;
    if (i0) {goto L13;}
    goto B0;
  B12:;
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i1 = l3;
  i2 = 2u;
  i1 |= i2;
  i32_store16((&M0), (u64)(i0), i1);
  B0:;
  i0 = l2;
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = instance_count_native_bases(i0, i1);
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B15;}
  i0 = l2;
  i1 = 56u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 4u;
  i0 += i1;
  i1 = 194u;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l5 = i0;
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = l5;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l4 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B16;}
  i0 = l4;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load16_u((&M0), (u64)(i0 + 6));
  i1 = 323u;
  i0 = i0 != i1;
  if (i0) {goto B16;}
  i0 = 1u;
  i1 = 0u;
  i2 = 131074u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 8u;
  i0 = m_malloc(i0);
  l4 = i0;
  i1 = l5;
  i2 = 4u;
  i1 += i2;
  l5 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l4;
  i1 = 36996u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l5;
  i1 = l4;
  i32_store((&M0), (u64)(i0), i1);
  B16:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  goto Bfunc;
  B15:;
  i0 = 12887u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 type_call(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i4 = l1;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 14205u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void type_attr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 56));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l1;
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load16_u((&M0), (u64)(i0 + 4));
  l3 = i0;
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B6;}
  i0 = l2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B6;}
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 34484u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = l3;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l3;
  i2 = 2u;
  i1 |= i2;
  i32_store16((&M0), (u64)(i0), i1);
  B6:;
  i0 = l1;
  i1 = p1;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i2 = 1u;
  i0 = mp_map_lookup(i0, i1, i2);
  i1 = p2;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B5:;
  i0 = p1;
  i1 = 173u;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  i0 = p1;
  i1 = 169u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = p1;
  i1 = 23u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = p2;
  i1 = p0;
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B9:;
  i0 = p0;
  i1 = 34300u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 52));
  p0 = i1;
  i2 = 34300u;
  i3 = p0;
  i1 = i3 ? i1 : i2;
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B11;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36756u;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  B11:;
  i0 = 1u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  B10:;
  i0 = p2;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B8:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 56));
  p0 = i0;
  i1 = 30616u;
  i2 = p0;
  i0 = i2 ? i0 : i1;
  p0 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i1 = 2u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = p0;
  i1 = mp_obj_dict_copy(i1);
  p0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B7:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = 1u;
  i32_store8((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B4:;
  i0 = l1;
  i1 = p1;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  i2 = 2u;
  i0 = mp_map_lookup(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  B3:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = p2;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = 36748u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = 31812u;
  i1 = 14431u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void instance_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 40), j1);
  i0 = l0;
  i1 = 27u;
  i2 = 29u;
  i3 = p2;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = 8u;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 32), i1);
  i0 = l0;
  i1 = l0;
  i2 = 40u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  l1 = i0;
  i0 = p2;
  if (i0) {goto B0;}
  i0 = l1;
  if (i0) {goto B0;}
  i0 = l0;
  j1 = 27ull;
  i64_store((&M0), (u64)(i0 + 20), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  l1 = i0;
  B0:;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 66u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = p1;
  i2 = 16u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p2;
  mp_obj_print_helper(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B3:;
  i0 = p1;
  i0 = mp_obj_get_type_str(i0);
  l1 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 14709u;
  i2 = l0;
  i0 = mp_printf(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = p0;
  i1 = l1;
  i2 = p1;
  i1 = mp_call_function_1(i1, i2);
  i2 = 0u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i1 = i32_load16_u((&M0), (u64)(i1 + 6));
  i1 = qstr_str(i1);
  i0 = mp_print_str(i0, i1);
  B4:;
  i0 = p0;
  i1 = p1;
  i2 = 16u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p2;
  i3 = 128u;
  i2 |= i3;
  mp_obj_print_helper(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 instance_unary_op(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  i1 = p0;
  i2 = 36880u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 20u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l2;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i0 = mp_unary_op(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B3:;
  i0 = p0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 175u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B2:;
  i0 = l2;
  i1 = p1;
  i0 = mp_call_function_1(i0, i1);
  l1 = i0;
  i0 = p0;
  i1 = 8u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l1;
  i0 = mp_obj_get_int_truncated(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B4:;
  i0 = l1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 instance_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  l1 = i0;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 12u;
  i0 += i1;
  l2 = i0;
  L1: vm_checktime();
    i0 = l0;
    i1 = 32u;
    i0 += i1;
    i1 = 8u;
    i0 += i1;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 8u;
    i0 += i1;
    i1 = 8u;
    i0 += i1;
    i1 = 24u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l0;
    j1 = 0ull;
    i64_store((&M0), (u64)(i0 + 32), j1);
    i0 = l2;
    i1 = l0;
    i2 = 32u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = p0;
    i2 = 36896u;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = l0;
    i1 = p1;
    i32_store((&M0), (u64)(i0 + 8), i1);
    i0 = l0;
    i1 = 8u;
    i0 += i1;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    mp_obj_class_lookup(i0, i1);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    l3 = i0;
    if (i0) {goto B0;}
    i0 = p0;
    i1 = 4294967287u;
    i0 += i1;
    i1 = 12u;
    i0 = i0 > i1;
    if (i0) {goto B2;}
    i0 = p0;
    i1 = 13u;
    i0 += i1;
    p0 = i0;
    goto L1;
    B2:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = l3;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i2 = p2;
  i0 = mp_binary_op(i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B3:;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = 1u;
  i1 = 0u;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  i0 = mp_call_method_n_kw(i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_instance_attr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i1 = 2u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i1 = l2;
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B9;}
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 34484u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  B9:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  i0 = p1;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  p1 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = p0;
  i1 = p1;
  i2 = 1u;
  i0 = mp_map_lookup(i0, i1, i2);
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  goto B1;
  B8:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i1 = p1;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i2 = 2u;
  i1 |= i2;
  l3 = i1;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p2;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B7:;
  i0 = p0;
  i1 = p1;
  i2 = 2u;
  i0 = mp_map_lookup(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B1;
  B6:;
  i0 = p1;
  i1 = 173u;
  i0 = i0 != i1;
  if (i0) {goto B10;}
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  i1 = l2;
  i2 = 8u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 30556u;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = l2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 28), j1);
  i0 = p2;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i1 = mp_obj_dict_copy(i1);
  p0 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B10:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load8_u((&M0), (u64)(i0 + 4));
  i1 = 2u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 34484u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = mp_obj_property_get(i0);
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = p0;
  i2 = 1u;
  i3 = 0u;
  i4 = l0;
  i5 = 16u;
  i4 += i5;
  i1 = mp_call_function_n_kw(i1, i2, i3, i4);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B5:;
  i0 = l2;
  i0 = mp_obj_property_get(i0);
  p1 = i0;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 2u;
  i2 = 0u;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  goto B1;
  B4:;
  i0 = p1;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 14u;
  i2 = l0;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p2;
  i1 = 1u;
  i2 = 0u;
  i3 = l0;
  i1 = mp_call_method_n_kw(i1, i2, i3);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B3:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 1u;
  i2 = 0u;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  goto B1;
  B2:;
  i0 = 31812u;
  i1 = 14886u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B1:;
  i0 = p2;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 instance_subscr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = l0;
  j1 = 137438953472ull;
  i64_store((&M0), (u64)(i0 + 12), j1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = 15u;
  i2 = 28u;
  i3 = p2;
  i4 = 4u;
  i3 = i3 == i4;
  i1 = i3 ? i1 : i2;
  i2 = 11u;
  i3 = p2;
  i1 = i3 ? i1 : i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = l0;
  i2 = 32u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l2;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = p1;
  i2 = p2;
  i0 = mp_obj_subscr(i0, i1, i2);
  l1 = i0;
  B1:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 1u;
  i1 = 2u;
  i2 = p2;
  i3 = 4u;
  i2 = i2 == i3;
  p0 = i2;
  i0 = i2 ? i0 : i1;
  i1 = 1u;
  i2 = p2;
  i0 = i2 ? i0 : i1;
  i1 = 0u;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  i0 = mp_call_method_n_kw(i0, i1, i2);
  p2 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  i1 = 6u;
  i2 = p0;
  i0 = i2 ? i0 : i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 instance_get_buffer(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 188978561025ull;
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 1u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = p1;
  i2 = p2;
  i3 = l1;
  i3 = i32_load((&M0), (u64)(i3 + 44));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 4, i3, i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 static_class_method_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 131074u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 8u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static void super_print(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 15030u;
  i0 = mp_print_str(i0, i1);
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 0u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = p0;
  i1 = 15167u;
  i0 = mp_print_str(i0, i1);
  i0 = p0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = 0u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = p0;
  i1 = 15425u;
  i0 = mp_print_str(i0, i1);
  FUNC_EPILOGUE;
}

static u32 super_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = p1;
  i1 = p2;
  i2 = 262148u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36936u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 12u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = p3;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void super_attr(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = 17u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 12u;
  i32_store((&M0), (u64)(i0), i1);
  B1:;
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0 + 52));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36756u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = p1;
  i1 = 34300u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  mp_obj_class_lookup(i0, i1);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  if (i0) {goto B3;}
  goto B2;
  B5:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  p1 = i0;
  i0 = 0u;
  l2 = i0;
  L6: vm_checktime();
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    i1 = 34300u;
    i0 = i0 == i1;
    if (i0) {goto B7;}
    i0 = l0;
    i1 = 8u;
    i0 += i1;
    i1 = l4;
    mp_obj_class_lookup(i0, i1);
    i0 = p2;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto B4;}
    B7:;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = l3;
    i0 = i0 < i1;
    if (i0) {goto L6;}
  B4:;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B2;}
  B3:;
  i0 = l1;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 36868u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = p0;
  i2 = 8u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 34300u;
  mp_obj_class_lookup(i0, i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_load_super_method(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 37056u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 4));
  i64_store((&M0), (u64)(i0 + 4), j1);
  i0 = l0;
  i1 = p0;
  i2 = p1;
  mp_load_method(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 mp_obj_is_subclass_fast(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  L2: vm_checktime();
    i0 = 0u;
    l0 = i0;
    i0 = p0;
    i1 = 3u;
    i0 &= i1;
    if (i0) {goto B0;}
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 36936u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0 + 52));
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 36756u;
    i0 = i0 != i1;
    if (i0) {goto B3;}
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    l2 = i0;
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    l0 = i0;
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0 + 8));
    p0 = i0;
    i0 = l1;
    i1 = l2;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    l1 = i0;
    i1 = l0;
    i0 = i0 <= i1;
    if (i0) {goto B3;}
    L4: vm_checktime();
      i0 = p0;
      i1 = p1;
      i0 = mp_obj_is_subclass_fast(i0, i1);
      if (i0) {goto B1;}
      i0 = l0;
      i1 = 4u;
      i0 += i1;
      l0 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      p0 = i0;
      i0 = l0;
      i1 = l1;
      i0 = i0 < i1;
      if (i0) {goto L4;}
    B3:;
    i0 = p0;
    i1 = p1;
    i0 = i0 != i1;
    if (i0) {goto L2;}
  B1:;
  i0 = 1u;
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_issubclass(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36936u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = 36936u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 36756u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = 4u;
  i2 += i3;
  mp_obj_tuple_get(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  goto B3;
  B4:;
  i0 = 1u;
  l2 = i0;
  i0 = l0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  p1 = i0;
  B3:;
  i0 = 0u;
  l3 = i0;
  L6: vm_checktime();
    i0 = 30u;
    l4 = i0;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i1 = 34300u;
    i0 = i0 == i1;
    if (i0) {goto B5;}
    i0 = p0;
    i1 = l1;
    i0 = mp_obj_is_subclass_fast(i0, i1);
    if (i0) {goto B5;}
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L6;}
  i0 = 14u;
  l4 = i0;
  B5:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  goto Bfunc;
  B1:;
  i0 = 15567u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B0:;
  i0 = 15772u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_isinstance(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l1 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = 36936u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 36756u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = 4u;
  i2 += i3;
  mp_obj_tuple_get(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  goto B2;
  B3:;
  i0 = 1u;
  l2 = i0;
  i0 = l0;
  i1 = 1u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  p1 = i0;
  B2:;
  i0 = 0u;
  l3 = i0;
  L5: vm_checktime();
    i0 = 30u;
    l4 = i0;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    i1 = 34300u;
    i0 = i0 == i1;
    if (i0) {goto B4;}
    i0 = l1;
    i1 = p0;
    i0 = mp_obj_is_subclass_fast(i0, i1);
    if (i0) {goto B4;}
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L5;}
  i0 = 14u;
  l4 = i0;
  B4:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  goto Bfunc;
  B0:;
  i0 = 15772u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_cast_to_native_base(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  l0 = i0;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = p1;
  i0 = mp_obj_is_subclass_fast(i0, i1);
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  B1:;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 native_base_init_wrapper(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = instance_count_native_bases(i0, i1);
  i0 = l1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  l2 = i1;
  i2 = p0;
  i3 = 4294967295u;
  i2 += i3;
  i3 = 0u;
  i4 = p1;
  i5 = 4u;
  i4 += i5;
  i5 = l2;
  i5 = i32_load((&M0), (u64)(i5 + 12));
  i1 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i5, i1, i2, i3, i4);
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 zip_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p2;
  i2 = 131070u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 8u;
  i0 += i1;
  i0 = m_malloc(i0);
  p2 = i0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  p0 = i0;
  L1: vm_checktime();
    i0 = p0;
    i1 = p3;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 0u;
    i1 = mp_getiter(i1, i2);
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = p3;
    i1 = 4u;
    i0 += i1;
    p3 = i0;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = p2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 zip_iternext(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i0 = mp_obj_new_tuple(i0, i1);
  l2 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 8u;
  l0 = i0;
  L3: vm_checktime();
    i0 = p0;
    i1 = l0;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = mp_iternext(i0);
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B1;}
    i0 = l2;
    i1 = l0;
    i0 += i1;
    i1 = l4;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 4u;
    i0 += i1;
    l0 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = i0 < i1;
    if (i0) {goto L3;}
  B2:;
  i0 = l2;
  goto Bfunc;
  B1:;
  i0 = l2;
  mp_obj_tuple_del(i0);
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 op_getitem(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i2 = 4u;
  i3 = p0;
  i3 = mp_obj_get_type(i3);
  i3 = i32_load((&M0), (u64)(i3 + 32));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 4, i3, i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 op_setitem(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = p0;
  i3 = mp_obj_get_type(i3);
  i3 = i32_load((&M0), (u64)(i3 + 32));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 4, i3, i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 op_delitem(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i2 = 0u;
  i3 = p0;
  i3 = mp_obj_get_type(i3);
  i3 = i32_load((&M0), (u64)(i3 + 32));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 4, i3, i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 op_contains(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 36u;
  i1 = p0;
  i2 = p1;
  i3 = p0;
  i3 = mp_obj_get_type(i3);
  i3 = i32_load((&M0), (u64)(i3 + 24));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32), 4, i3, i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static void mp_seq_multiply(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = p1;
  i0 *= i1;
  p1 = i0;
  L1: vm_checktime();
    i0 = p4;
    i1 = p0;
    i2 = p1;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = p4;
    i1 = p1;
    i0 += i1;
    p4 = i0;
    i0 = p3;
    i1 = 4294967295u;
    i0 += i1;
    p3 = i0;
    if (i0) {goto L1;}
  B0:;
  FUNC_EPILOGUE;
}

static u32 mp_seq_get_fast_slice_indexes(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i1 = p0;
  i2 = p2;
  mp_obj_slice_indices(i0, i1, i2);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 1u;
  i0 = i0 == i1;
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  p0 = i1;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = p0;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = p1;
  i1 = 1u;
  i0 = i0 == i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_seq_extract_slice(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i0 = 0u;
  i1 = 0u;
  i0 = mp_obj_new_list(i0, i1);
  l2 = i0;
  i0 = l0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  i0 = p2;
  i1 = l1;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  l3 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  L2: vm_checktime();
    i0 = l2;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = mp_obj_list_append(i0, i1);
    i0 = p1;
    i1 = l3;
    i0 += i1;
    p1 = i0;
    i0 = p2;
    i1 = l0;
    i0 += i1;
    p2 = i0;
    i1 = l1;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L2;}
    goto B0;
  B1:;
  i0 = p2;
  i1 = l1;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 2u;
  i0 <<= (i1 & 31);
  l3 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p1 = i0;
  L3: vm_checktime();
    i0 = l2;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = mp_obj_list_append(i0, i1);
    i0 = p1;
    i1 = l3;
    i0 += i1;
    p1 = i0;
    i0 = p2;
    i1 = l0;
    i0 += i1;
    p2 = i0;
    i1 = l1;
    i0 = (u32)((s32)i0 >= (s32)i1);
    if (i0) {goto L3;}
  B0:;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_seq_cmp_bytes(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = p0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = 0u;
  l0 = i0;
  i0 = p2;
  i1 = p4;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = 3u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = p0;
  if (i0) {goto B3;}
  i0 = 1u;
  p0 = i0;
  goto B4;
  B5:;
  i0 = 4u;
  p0 = i0;
  B4:;
  i0 = p1;
  l0 = i0;
  i0 = p2;
  l1 = i0;
  goto B2;
  B3:;
  i0 = p3;
  l0 = i0;
  i0 = p4;
  l1 = i0;
  i0 = p2;
  p4 = i0;
  i0 = p1;
  p3 = i0;
  B2:;
  i0 = p3;
  i1 = l0;
  i2 = p4;
  i3 = l1;
  i4 = p4;
  i5 = l1;
  i4 = i4 < i5;
  p1 = i4;
  i2 = i4 ? i2 : i3;
  i0 = memcmp_0(i0, i1, i2);
  p2 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p2;
  i0 = !(i0);
  goto Bfunc;
  B6:;
  i0 = 0u;
  l0 = i0;
  i0 = p2;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = p2;
  if (i0) {goto B7;}
  i0 = p4;
  i1 = l1;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  i0 = p0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  goto B0;
  B8:;
  i0 = p1;
  if (i0) {goto B0;}
  B7:;
  i0 = 1u;
  l0 = i0;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_seq_cmp_objs(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = p4;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i1 = 3u;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  i0 = p0;
  if (i0) {goto B6;}
  i0 = 1u;
  p0 = i0;
  goto B7;
  B8:;
  i0 = 4u;
  p0 = i0;
  B7:;
  i0 = p1;
  l1 = i0;
  i0 = p4;
  l2 = i0;
  i1 = p2;
  i2 = l2;
  i3 = p2;
  i2 = i2 < i3;
  l3 = i2;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  if (i0) {goto B5;}
  goto B4;
  B6:;
  i0 = p3;
  l1 = i0;
  i0 = p1;
  p3 = i0;
  i0 = p2;
  l2 = i0;
  i1 = p4;
  p2 = i1;
  i2 = l2;
  i3 = p2;
  i2 = i2 < i3;
  l3 = i2;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  B5:;
  i0 = 0u;
  p4 = i0;
  L9: vm_checktime();
    i0 = p3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = mp_obj_equal(i0, i1);
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = p3;
    i1 = 4u;
    i0 += i1;
    p3 = i0;
    i0 = p4;
    i1 = 1u;
    i0 += i1;
    p4 = i0;
    i1 = p1;
    i0 = i0 < i1;
    if (i0) {goto L9;}
  B4:;
  i0 = l2;
  i1 = p2;
  i0 = i0 != i1;
  if (i0) {goto B11;}
  i0 = p0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B10;}
  goto B1;
  B11:;
  i0 = l3;
  if (i0) {goto B1;}
  B10:;
  i0 = 1u;
  goto Bfunc;
  B3:;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l1;
  i2 = i32_load((&M0), (u64)(i2));
  i0 = mp_binary_op(i0, i1, i2);
  i1 = 30u;
  i0 = i0 == i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_seq_index_obj(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l0 = i0;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p2;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i2 = p3;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = 1u;
  i0 = mp_get_index(i0, i1, i2, i3);
  l2 = i0;
  i0 = p2;
  i1 = 3u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i2 = p3;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i3 = 1u;
  i0 = mp_get_index(i0, i1, i2, i3);
  p1 = i0;
  B0:;
  i0 = l2;
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = l2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  p3 = i0;
  i0 = l2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  p2 = i0;
  L3: vm_checktime();
    i0 = p3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l1;
    i0 = mp_obj_equal(i0, i1);
    if (i0) {goto B1;}
    i0 = p3;
    i1 = 4u;
    i0 += i1;
    p3 = i0;
    i0 = p2;
    i1 = 2u;
    i0 += i1;
    p2 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i1 = p1;
    i0 = i0 < i1;
    if (i0) {goto L3;}
  B2:;
  i0 = 10470u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B1:;
  i0 = p2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_seq_count_obj(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  l0 = i0;
  L1: vm_checktime();
    i0 = l0;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = p2;
    i1 = mp_obj_equal(i1, i2);
    i0 += i1;
    l0 = i0;
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    if (i0) {goto L1;}
  i0 = l0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = 1u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_get_stream_raise(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = mp_obj_get_type(i0);
  i0 = i32_load((&M0), (u64)(i0 + 48));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p1;
  i1 = 2u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = !(i0);
  if (i0) {goto B0;}
  B2:;
  i0 = p1;
  i1 = 4u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = !(i0);
  if (i0) {goto B0;}
  B3:;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 32292u;
  i1 = 10493u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stream_read(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i2 = 0u;
  i0 = stream_read_generic(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 stream_read_generic(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i1 = 4294967295u;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 48));
  l2 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 12));
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B7;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = l1;
  vstr_init_len(i0, i1);
  i0 = 0u;
  l3 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 48));
  i1 = p2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 4u;
  i1 &= i2;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l5 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l6 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = 0u;
  l3 = i0;
  L9: vm_checktime();
    i0 = l4;
    i1 = l6;
    i2 = l1;
    i3 = l0;
    i4 = 12u;
    i3 += i4;
    i4 = l5;
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    p0 = i0;
    i1 = 4294967295u;
    i0 = i0 == i1;
    if (i0) {goto B5;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = p0;
    i1 = l3;
    i0 += i1;
    l3 = i0;
    i0 = l6;
    i1 = p0;
    i0 += i1;
    l6 = i0;
    i0 = l1;
    i1 = p0;
    i0 -= i1;
    l1 = i0;
    if (i0) {goto L9;}
    goto B3;
  B8:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 48));
  l4 = i0;
  i0 = 256u;
  l6 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 256u;
  vstr_init(i0, i1);
  i0 = 0u;
  p2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l3 = i0;
  L13: vm_checktime();
    i0 = l1;
    i1 = l3;
    i2 = l6;
    i3 = l0;
    i4 = 12u;
    i3 += i4;
    i4 = l4;
    i4 = i32_load((&M0), (u64)(i4));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    p0 = i0;
    i1 = 4294967295u;
    i0 = i0 == i1;
    if (i0) {goto B15;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B11;}
    i0 = p0;
    i1 = p2;
    i0 += i1;
    p2 = i0;
    i0 = l6;
    i1 = p0;
    i0 = i0 <= i1;
    if (i0) {goto B14;}
    i0 = l3;
    i1 = p0;
    i0 += i1;
    l3 = i0;
    i0 = l6;
    i1 = p0;
    i0 -= i1;
    l6 = i0;
    i0 = 0u;
    i1 = 3u;
    i0 &= i1;
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto L13;}
    goto B12;
    B15:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    p0 = i0;
    i1 = 11u;
    i0 = i0 != i1;
    if (i0) {goto B6;}
    i0 = 3u;
    i1 = 1u;
    i2 = p2;
    i0 = i2 ? i0 : i1;
    i1 = 3u;
    i0 &= i1;
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto L13;}
    goto B12;
    B14:;
    i0 = 256u;
    l6 = i0;
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    i1 = 256u;
    i0 = vstr_extend(i0, i1);
    l3 = i0;
    i0 = 0u;
    i1 = 3u;
    i0 &= i1;
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto L13;}
  B12:;
  i0 = p0;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B10;}
  B11:;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = 36168u;
  i1 = 35852u;
  i2 = l4;
  i2 = i32_load8_u((&M0), (u64)(i2 + 12));
  i3 = 1u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B10:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B7:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = l1;
  vstr_init(i0, i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  l7 = i0;
  i0 = l1;
  l5 = i0;
  i0 = 0u;
  p2 = i0;
  L17: vm_checktime();
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    i1 = l5;
    i0 = vstr_add_len(i0, i1);
    l6 = i0;
    i0 = l0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = i32_load((&M0), (u64)(i0 + 48));
    i0 = i32_load((&M0), (u64)(i0));
    l8 = i0;
    i0 = 0u;
    l4 = i0;
    i0 = l5;
    l3 = i0;
    L24: vm_checktime();
      i0 = l2;
      i1 = l6;
      i2 = l3;
      i3 = l0;
      i4 = 12u;
      i3 += i4;
      i4 = l8;
      i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
      p0 = i0;
      i1 = 4294967295u;
      i0 = i0 == i1;
      if (i0) {goto B23;}
      i0 = p0;
      i0 = !(i0);
      if (i0) {goto B25;}
      i0 = p0;
      i1 = l4;
      i0 += i1;
      l4 = i0;
      i0 = l6;
      i1 = p0;
      i0 += i1;
      l6 = i0;
      i0 = l3;
      i1 = p0;
      i0 -= i1;
      l3 = i0;
      if (i0) {goto L24;}
      B25:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    p0 = i0;
    goto B22;
    B23:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    p0 = i0;
    i0 = l4;
    i0 = !(i0);
    if (i0) {goto B22;}
    i0 = p0;
    i1 = 11u;
    i0 = i0 != i1;
    if (i0) {goto B22;}
    i0 = l0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = l5;
    i1 = l4;
    i0 = i0 > i1;
    if (i0) {goto B21;}
    goto B20;
    B22:;
    i0 = p0;
    if (i0) {goto B19;}
    i0 = l5;
    i1 = l4;
    i0 = i0 <= i1;
    if (i0) {goto B20;}
    B21:;
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    i1 = l5;
    i2 = l4;
    i1 -= i2;
    vstr_cut_tail_bytes(i0, i1);
    i0 = l4;
    i0 = !(i0);
    if (i0) {goto B16;}
    B20:;
    i0 = l7;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 20));
    l3 = i0;
    i0 = p2;
    p0 = i0;
    L26: vm_checktime();
      i0 = 1u;
      l6 = i0;
      i0 = l4;
      i1 = p0;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      p2 = i0;
      i1 = 128u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B27;}
      i0 = 2u;
      l6 = i0;
      i0 = p2;
      i1 = 224u;
      i0 &= i1;
      i1 = 192u;
      i0 = i0 == i1;
      if (i0) {goto B27;}
      i0 = 3u;
      l6 = i0;
      i0 = p2;
      i1 = 240u;
      i0 &= i1;
      i1 = 224u;
      i0 = i0 == i1;
      if (i0) {goto B27;}
      i0 = 4u;
      i1 = 5u;
      i2 = p2;
      i3 = 248u;
      i2 &= i3;
      i3 = 240u;
      i2 = i2 == i3;
      i0 = i2 ? i0 : i1;
      l6 = i0;
      B27:;
      i0 = l6;
      i1 = p0;
      i0 += i1;
      p2 = i0;
      i1 = l3;
      i0 = i0 > i1;
      if (i0) {goto B18;}
      i0 = p2;
      p0 = i0;
      i0 = l1;
      i1 = 4294967295u;
      i0 += i1;
      l1 = i0;
      l5 = i0;
      i0 = p2;
      i1 = l3;
      i0 = i0 < i1;
      if (i0) {goto L26;}
    i0 = l5;
    if (i0) {goto L17;}
    goto B16;
    B19:;
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    i1 = l5;
    vstr_cut_tail_bytes(i0, i1);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    p0 = i0;
    i1 = 11u;
    i0 = i0 != i1;
    if (i0) {goto B28;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 20));
    if (i0) {goto B16;}
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    vstr_clear(i0);
    i0 = l0;
    i1 = 32u;
    i0 += i1;
    g0 = i0;
    i0 = 6u;
    goto Bfunc;
    B28:;
    i0 = p0;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B18:;
    i0 = p0;
    p2 = i0;
    i0 = l6;
    i1 = p0;
    i0 += i1;
    i1 = l3;
    i0 -= i1;
    i1 = l1;
    i0 += i1;
    i1 = 4294967295u;
    i0 += i1;
    l5 = i0;
    if (i0) {goto L17;}
  B16:;
  i0 = 36168u;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B6:;
  i0 = p0;
  mp_raise_OSError(i0);
  UNREACHABLE;
  B5:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 11u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  goto B1;
  B4:;
  i0 = 0u;
  l3 = i0;
  i0 = l4;
  i1 = l6;
  i2 = l1;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i4 = l5;
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  p0 = i0;
  i1 = 1u;
  i0 += i1;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  i0 = p0;
  l3 = i0;
  B3:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  B2:;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  vstr_clear(i0);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i1 = 11u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = 36168u;
  i1 = 35852u;
  i2 = l2;
  i3 = 12u;
  i2 += i3;
  i2 = i32_load8_u((&M0), (u64)(i2));
  i3 = 1u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = p0;
  mp_raise_OSError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_stream_write_adaptor(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 48));
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  L4: vm_checktime();
    i0 = p0;
    i1 = p1;
    i2 = p2;
    i3 = l0;
    i4 = 12u;
    i3 += i4;
    i4 = l2;
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    l3 = i0;
    i1 = 4294967295u;
    i0 = i0 == i1;
    if (i0) {goto B3;}
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B5;}
    i0 = l3;
    i1 = l1;
    i0 += i1;
    l1 = i0;
    i0 = p1;
    i1 = l3;
    i0 += i1;
    p1 = i0;
    i0 = p2;
    i1 = l3;
    i0 -= i1;
    p2 = i0;
    if (i0) {goto L4;}
    B5:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  goto B2;
  B3:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l3 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l3;
  i1 = 11u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l3;
  i1 = 11u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l3;
  mp_raise_OSError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 stream_write_method(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l0;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = p0;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = 0u;
  l1 = i0;
  i0 = 4294967295u;
  l2 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_get_int_truncated(i0);
  l2 = i0;
  goto B0;
  B1:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_get_int_truncated(i0);
  p0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i0 = mp_obj_get_int_truncated(i0);
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l3 = i0;
  i1 = p0;
  i2 = p0;
  i3 = l3;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  B0:;
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = l1;
  i1 -= i2;
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = l2;
  i2 = p0;
  i3 = l2;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l4;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 48));
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l5 = i0;
  i0 = p1;
  i1 = l1;
  i0 += i1;
  p0 = i0;
  i0 = 0u;
  l3 = i0;
  L6: vm_checktime();
    i0 = l4;
    i1 = p0;
    i2 = l2;
    i3 = l0;
    i4 = 12u;
    i3 += i4;
    i4 = l5;
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    p1 = i0;
    i1 = 4294967295u;
    i0 = i0 == i1;
    if (i0) {goto B5;}
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B7;}
    i0 = p1;
    i1 = l3;
    i0 += i1;
    l3 = i0;
    i0 = p0;
    i1 = p1;
    i0 += i1;
    p0 = i0;
    i0 = l2;
    i1 = p1;
    i0 -= i1;
    l2 = i0;
    if (i0) {goto L6;}
    B7:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  goto B4;
  B5:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 11u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  goto B3;
  B4:;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p1;
  i1 = 11u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B3:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B2:;
  i0 = p1;
  mp_raise_OSError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stream_readinto(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 2u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = p0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = p0;
  i2 = p0;
  i3 = l1;
  i2 = i2 > i3;
  i0 = i2 ? i0 : i1;
  p0 = i0;
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  p0 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 48));
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  L6: vm_checktime();
    i0 = l3;
    i1 = l1;
    i2 = p0;
    i3 = l0;
    i4 = 12u;
    i3 += i4;
    i4 = l4;
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    p1 = i0;
    i1 = 4294967295u;
    i0 = i0 == i1;
    if (i0) {goto B5;}
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B7;}
    i0 = p1;
    i1 = l2;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = p1;
    i0 += i1;
    l1 = i0;
    i0 = p0;
    i1 = p1;
    i0 -= i1;
    p0 = i0;
    if (i0) {goto L6;}
    B7:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  goto B4;
  B5:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 11u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  goto B1;
  B4:;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 11u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B0:;
  i0 = p1;
  mp_raise_OSError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stream_unbuffered_readline(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 48));
  l1 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = i0 <= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  p0 = i0;
  i1 = 4294967295u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p0;
  vstr_init(i0, i1);
  goto B0;
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 16u;
  vstr_init(i0, i1);
  i0 = 4294967295u;
  p0 = i0;
  B0:;
  L5: vm_checktime();
    i0 = 4294967295u;
    l2 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 = i0 == i1;
    if (i0) {goto B6;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    l2 = i0;
    B6:;
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    i1 = 1u;
    i0 = vstr_add_len(i0, i1);
    l3 = i0;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l3;
    i2 = 1u;
    i3 = l0;
    i4 = 12u;
    i3 += i4;
    i4 = l1;
    i4 = i32_load((&M0), (u64)(i4));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto B4;}
    i0 = p0;
    i1 = 4294967295u;
    i0 = i0 == i1;
    if (i0) {goto B7;}
    i0 = l2;
    p0 = i0;
    i0 = l3;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 10u;
    i0 = i0 != i1;
    if (i0) {goto L5;}
    goto B3;
    B7:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i1 = 11u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  vstr_clear(i0);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B4:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 1u;
  vstr_cut_tail_bytes(i0, i1);
  B3:;
  i0 = 36168u;
  i1 = 35852u;
  i2 = l1;
  i2 = i32_load8_u((&M0), (u64)(i2 + 12));
  i3 = 1u;
  i2 &= i3;
  i0 = i2 ? i0 : i1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B2:;
  i0 = p0;
  mp_raise_OSError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_stream_unbuffered_iter(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 1u;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = stream_unbuffered_readline(i0, i1);
  p0 = i0;
  i0 = mp_obj_is_true(i0);
  l1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 0u;
  i2 = l1;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_stream_close(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 4u;
  i2 = 0u;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i4 = p0;
  i4 = i32_load((&M0), (u64)(i4));
  i4 = i32_load((&M0), (u64)(i4 + 48));
  i4 = i32_load((&M0), (u64)(i4 + 8));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  i1 = 4294967295u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  mp_raise_OSError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stream_seek(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 1u;
  l2 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i1 = mp_obj_get_int(i1);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l2;
  i0 = !(i0);
  l2 = i0;
  B0:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B2;}
  B3:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 2u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i3 = l0;
  i4 = 4u;
  i3 += i4;
  i4 = p1;
  i4 = i32_load((&M0), (u64)(i4));
  i4 = i32_load((&M0), (u64)(i4 + 48));
  i4 = i32_load((&M0), (u64)(i4 + 8));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  i1 = 4294967295u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_new_int_from_uint(i0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B2:;
  i0 = 22u;
  mp_raise_OSError(i0);
  UNREACHABLE;
  B1:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  mp_raise_OSError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stream_tell(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 1u;
  i1 = mp_obj_get_int(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 3u;
  i1 = mp_obj_get_int(i1);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B2;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  i0 = p0;
  i1 = 2u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i3 = l0;
  i4 = 4u;
  i3 += i4;
  i4 = p0;
  i4 = i32_load((&M0), (u64)(i4));
  i4 = i32_load((&M0), (u64)(i4 + 48));
  i4 = i32_load((&M0), (u64)(i4 + 8));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  i1 = 4294967295u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_new_int_from_uint(i0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = 22u;
  mp_raise_OSError(i0);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  mp_raise_OSError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 stream_flush(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i2 = 0u;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i4 = p0;
  i4 = i32_load((&M0), (u64)(i4));
  i4 = i32_load((&M0), (u64)(i4 + 48));
  i4 = i32_load((&M0), (u64)(i4 + 8));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  i1 = 4294967295u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  mp_raise_OSError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_binary_get_size(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 60u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = p0;
  i1 = 64u;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  i0 = p0;
  i1 = 62u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  B9:;
  i0 = p1;
  i1 = 4294967230u;
  i0 += i1;
  l0 = i0;
  i1 = 47u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = 1u;
  p1 = i0;
  i0 = 1u;
  p0 = i0;
  i0 = l0;
  switch (i0) {
    case 0: goto B7;
    case 1: goto B2;
    case 2: goto B2;
    case 3: goto B2;
    case 4: goto B2;
    case 5: goto B2;
    case 6: goto B5;
    case 7: goto B10;
    case 8: goto B2;
    case 9: goto B2;
    case 10: goto B10;
    case 11: goto B2;
    case 12: goto B2;
    case 13: goto B10;
    case 14: goto B10;
    case 15: goto B6;
    case 16: goto B2;
    case 17: goto B10;
    case 18: goto B2;
    case 19: goto B2;
    case 20: goto B2;
    case 21: goto B2;
    case 22: goto B2;
    case 23: goto B2;
    case 24: goto B2;
    case 25: goto B2;
    case 26: goto B2;
    case 27: goto B2;
    case 28: goto B2;
    case 29: goto B2;
    case 30: goto B2;
    case 31: goto B2;
    case 32: goto B7;
    case 33: goto B2;
    case 34: goto B6;
    case 35: goto B2;
    case 36: goto B10;
    case 37: goto B2;
    case 38: goto B5;
    case 39: goto B10;
    case 40: goto B2;
    case 41: goto B2;
    case 42: goto B10;
    case 43: goto B2;
    case 44: goto B2;
    case 45: goto B2;
    case 46: goto B2;
    case 47: goto B6;
    default: goto B7;
  }
  B10:;
  i0 = 4u;
  p0 = i0;
  i0 = p2;
  if (i0) {goto B1;}
  goto B0;
  B8:;
  i0 = p1;
  i1 = 4294967295u;
  i0 += i1;
  l0 = i0;
  i1 = 112u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = 1u;
  p0 = i0;
  i0 = 1u;
  p1 = i0;
  i0 = l0;
  switch (i0) {
    case 0: goto B7;
    case 1: goto B2;
    case 2: goto B2;
    case 3: goto B2;
    case 4: goto B2;
    case 5: goto B2;
    case 6: goto B2;
    case 7: goto B2;
    case 8: goto B2;
    case 9: goto B2;
    case 10: goto B2;
    case 11: goto B2;
    case 12: goto B2;
    case 13: goto B2;
    case 14: goto B2;
    case 15: goto B2;
    case 16: goto B2;
    case 17: goto B2;
    case 18: goto B2;
    case 19: goto B2;
    case 20: goto B2;
    case 21: goto B2;
    case 22: goto B2;
    case 23: goto B2;
    case 24: goto B2;
    case 25: goto B2;
    case 26: goto B2;
    case 27: goto B2;
    case 28: goto B2;
    case 29: goto B2;
    case 30: goto B2;
    case 31: goto B2;
    case 32: goto B2;
    case 33: goto B2;
    case 34: goto B2;
    case 35: goto B2;
    case 36: goto B2;
    case 37: goto B2;
    case 38: goto B2;
    case 39: goto B2;
    case 40: goto B2;
    case 41: goto B2;
    case 42: goto B2;
    case 43: goto B2;
    case 44: goto B2;
    case 45: goto B2;
    case 46: goto B2;
    case 47: goto B2;
    case 48: goto B2;
    case 49: goto B2;
    case 50: goto B2;
    case 51: goto B2;
    case 52: goto B2;
    case 53: goto B2;
    case 54: goto B2;
    case 55: goto B2;
    case 56: goto B2;
    case 57: goto B2;
    case 58: goto B2;
    case 59: goto B2;
    case 60: goto B2;
    case 61: goto B2;
    case 62: goto B2;
    case 63: goto B2;
    case 64: goto B2;
    case 65: goto B7;
    case 66: goto B2;
    case 67: goto B2;
    case 68: goto B2;
    case 69: goto B2;
    case 70: goto B2;
    case 71: goto B3;
    case 72: goto B11;
    case 73: goto B2;
    case 74: goto B2;
    case 75: goto B11;
    case 76: goto B2;
    case 77: goto B2;
    case 78: goto B11;
    case 79: goto B11;
    case 80: goto B4;
    case 81: goto B2;
    case 82: goto B11;
    case 83: goto B2;
    case 84: goto B2;
    case 85: goto B2;
    case 86: goto B2;
    case 87: goto B2;
    case 88: goto B2;
    case 89: goto B2;
    case 90: goto B2;
    case 91: goto B2;
    case 92: goto B2;
    case 93: goto B2;
    case 94: goto B2;
    case 95: goto B2;
    case 96: goto B2;
    case 97: goto B7;
    case 98: goto B2;
    case 99: goto B4;
    case 100: goto B2;
    case 101: goto B11;
    case 102: goto B2;
    case 103: goto B3;
    case 104: goto B11;
    case 105: goto B2;
    case 106: goto B2;
    case 107: goto B11;
    case 108: goto B2;
    case 109: goto B2;
    case 110: goto B2;
    case 111: goto B2;
    case 112: goto B4;
    default: goto B7;
  }
  B11:;
  i0 = 4u;
  p0 = i0;
  i0 = 4u;
  p1 = i0;
  B7:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B1;
  B6:;
  i0 = 8u;
  p0 = i0;
  i0 = p2;
  if (i0) {goto B1;}
  goto B0;
  B5:;
  i0 = 2u;
  p0 = i0;
  i0 = p2;
  if (i0) {goto B1;}
  goto B0;
  B4:;
  i0 = 8u;
  p0 = i0;
  i0 = 8u;
  p1 = i0;
  i0 = p2;
  if (i0) {goto B1;}
  goto B0;
  B3:;
  i0 = 2u;
  p0 = i0;
  i0 = 2u;
  p1 = i0;
  i0 = p2;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = 10524u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B1:;
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_binary_get_val_array(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0;
  f32 f0;
  f64 d0;
  i0 = 0u;
  l0 = i0;
  i0 = p0;
  i1 = 4294967295u;
  i0 += i1;
  p0 = i0;
  i1 = 112u;
  i0 = i0 > i1;
  if (i0) {goto B13;}
  i0 = p0;
  switch (i0) {
    case 0: goto B14;
    case 1: goto B13;
    case 2: goto B13;
    case 3: goto B13;
    case 4: goto B13;
    case 5: goto B13;
    case 6: goto B13;
    case 7: goto B13;
    case 8: goto B13;
    case 9: goto B13;
    case 10: goto B13;
    case 11: goto B13;
    case 12: goto B13;
    case 13: goto B13;
    case 14: goto B13;
    case 15: goto B13;
    case 16: goto B13;
    case 17: goto B13;
    case 18: goto B13;
    case 19: goto B13;
    case 20: goto B13;
    case 21: goto B13;
    case 22: goto B13;
    case 23: goto B13;
    case 24: goto B13;
    case 25: goto B13;
    case 26: goto B13;
    case 27: goto B13;
    case 28: goto B13;
    case 29: goto B13;
    case 30: goto B13;
    case 31: goto B13;
    case 32: goto B13;
    case 33: goto B13;
    case 34: goto B13;
    case 35: goto B13;
    case 36: goto B13;
    case 37: goto B13;
    case 38: goto B13;
    case 39: goto B13;
    case 40: goto B13;
    case 41: goto B13;
    case 42: goto B13;
    case 43: goto B13;
    case 44: goto B13;
    case 45: goto B13;
    case 46: goto B13;
    case 47: goto B13;
    case 48: goto B13;
    case 49: goto B13;
    case 50: goto B13;
    case 51: goto B13;
    case 52: goto B13;
    case 53: goto B13;
    case 54: goto B13;
    case 55: goto B13;
    case 56: goto B13;
    case 57: goto B13;
    case 58: goto B13;
    case 59: goto B13;
    case 60: goto B13;
    case 61: goto B13;
    case 62: goto B13;
    case 63: goto B13;
    case 64: goto B13;
    case 65: goto B14;
    case 66: goto B13;
    case 67: goto B13;
    case 68: goto B13;
    case 69: goto B13;
    case 70: goto B13;
    case 71: goto B12;
    case 72: goto B11;
    case 73: goto B13;
    case 74: goto B13;
    case 75: goto B10;
    case 76: goto B13;
    case 77: goto B13;
    case 78: goto B9;
    case 79: goto B8;
    case 80: goto B7;
    case 81: goto B13;
    case 82: goto B13;
    case 83: goto B13;
    case 84: goto B13;
    case 85: goto B13;
    case 86: goto B13;
    case 87: goto B13;
    case 88: goto B13;
    case 89: goto B13;
    case 90: goto B13;
    case 91: goto B13;
    case 92: goto B13;
    case 93: goto B13;
    case 94: goto B13;
    case 95: goto B13;
    case 96: goto B13;
    case 97: goto B0;
    case 98: goto B13;
    case 99: goto B6;
    case 100: goto B13;
    case 101: goto B5;
    case 102: goto B13;
    case 103: goto B4;
    case 104: goto B3;
    case 105: goto B13;
    case 106: goto B13;
    case 107: goto B2;
    case 108: goto B13;
    case 109: goto B13;
    case 110: goto B13;
    case 111: goto B13;
    case 112: goto B1;
    default: goto B14;
  }
  B14:;
  i0 = p1;
  i1 = p2;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l0 = i0;
  B13:;
  i0 = l0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B12:;
  i0 = p1;
  i1 = p2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load16_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B11:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_new_int_from_uint(i0);
  goto Bfunc;
  B10:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_new_int_from_uint(i0);
  goto Bfunc;
  B9:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  goto Bfunc;
  B8:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_new_int(i0);
  goto Bfunc;
  B7:;
  i0 = p1;
  i1 = p2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  i0 = mp_obj_new_int_from_ull(j0);
  goto Bfunc;
  B6:;
  i0 = p1;
  i1 = p2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  d0 = f64_load((&M0), (u64)(i0));
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B5:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  f0 = f32_load((&M0), (u64)(i0));
  d0 = (*Z_eosio_injectionZ__eosio_f32_promoteZ_df)(f0);
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B4:;
  i0 = p1;
  i1 = p2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load16_s((&M0), (u64)(i0));
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B3:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_new_int(i0);
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_new_int(i0);
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = p2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  i0 = mp_obj_new_int_from_ll(j0);
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = p2;
  i0 += i1;
  i0 = i32_load8_s((&M0), (u64)(i0));
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_binary_get_val(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  u64 l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  f32 f0;
  f64 d0;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i3 = 12u;
  i2 += i3;
  i0 = mp_binary_get_size(i0, i1, i2);
  l2 = i0;
  i0 = p0;
  i1 = 64u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p2;
  i1 = p2;
  i2 = 4294967295u;
  i1 ^= i2;
  i2 = l1;
  i1 += i2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  p0 = i2;
  i1 += i2;
  i2 = 0u;
  i3 = p0;
  i2 -= i3;
  i1 &= i2;
  i0 += i1;
  l1 = i0;
  i0 = 60u;
  p0 = i0;
  B0:;
  i0 = p3;
  i1 = l1;
  i2 = l2;
  i1 += i2;
  p2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = p2;
  i2 = 4294967295u;
  i1 += i2;
  i2 = p0;
  i3 = 62u;
  i2 = i2 == i3;
  p3 = i2;
  i0 = i2 ? i0 : i1;
  p0 = i0;
  j0 = 0ull;
  l3 = j0;
  i0 = p1;
  i1 = 91u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load8_s((&M0), (u64)(i0));
  j0 = (u64)(i0);
  j1 = 49ull;
  j0 <<= (j1 & 63);
  j1 = 56ull;
  j0 = (u64)((s64)j0 >> (j1 & 63));
  l3 = j0;
  B1:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 1u;
  i1 = 4294967295u;
  i2 = p3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  L3: vm_checktime();
    j0 = l3;
    j1 = 8ull;
    j0 <<= (j1 & 63);
    i1 = p0;
    j1 = i64_load8_u((&M0), (u64)(i1));
    j0 |= j1;
    l3 = j0;
    i0 = p0;
    i1 = l1;
    i0 += i1;
    p0 = i0;
    i0 = l2;
    i1 = 4294967295u;
    i0 += i1;
    l2 = i0;
    if (i0) {goto L3;}
  B2:;
  i0 = p1;
  i1 = 4294967217u;
  i0 += i1;
  p0 = i0;
  i1 = 23u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = p0;
  switch (i0) {
    case 0: goto B8;
    case 1: goto B4;
    case 2: goto B4;
    case 3: goto B4;
    case 4: goto B7;
    case 5: goto B4;
    case 6: goto B4;
    case 7: goto B4;
    case 8: goto B4;
    case 9: goto B4;
    case 10: goto B4;
    case 11: goto B4;
    case 12: goto B4;
    case 13: goto B4;
    case 14: goto B4;
    case 15: goto B4;
    case 16: goto B4;
    case 17: goto B4;
    case 18: goto B4;
    case 19: goto B4;
    case 20: goto B4;
    case 21: goto B6;
    case 22: goto B4;
    case 23: goto B5;
    default: goto B8;
  }
  B8:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  j0 = l3;
  i0 = (u32)(j0);
  goto Bfunc;
  B7:;
  j0 = l3;
  i0 = (u32)(j0);
  p0 = i0;
  i1 = p0;
  i1 = strlen_0(i1);
  i0 = mp_obj_new_str(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B6:;
  j0 = l3;
  d0 = f64_reinterpret_i64(j0);
  i0 = mp_obj_new_float(d0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B5:;
  j0 = l3;
  i0 = (u32)(j0);
  f0 = f32_reinterpret_i32(i0);
  d0 = (*Z_eosio_injectionZ__eosio_f32_promoteZ_df)(f0);
  i0 = mp_obj_new_float(d0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B4:;
  i0 = p1;
  i1 = 91u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B11;}
  j0 = l3;
  j1 = 1073741824ull;
  j0 += j1;
  j1 = 2147483647ull;
  i0 = j0 > j1;
  if (i0) {goto B10;}
  j0 = l3;
  i0 = (u32)(j0);
  i0 = mp_obj_new_int(i0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B11:;
  j0 = l3;
  j1 = 1073741823ull;
  i0 = j0 > j1;
  if (i0) {goto B9;}
  j0 = l3;
  i0 = (u32)(j0);
  i0 = mp_obj_new_int_from_uint(i0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B10:;
  j0 = l3;
  i0 = mp_obj_new_int_from_ll(j0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B9:;
  j0 = l3;
  i0 = mp_obj_new_int_from_ull(j0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_binary_set_int(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p3;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  L2: vm_checktime();
    i0 = p2;
    i1 = l0;
    i2 = 12u;
    i1 += i2;
    i2 = p0;
    i1 += i2;
    i2 = 4294967295u;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = 1u;
    i0 += i1;
    p2 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L2;}
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = p2;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = p0;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_binary_set_val(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  f32 f0;
  f64 d0, d1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p4;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i0 = mp_binary_get_size(i0, i1, i2);
  l2 = i0;
  i0 = p0;
  i1 = 64u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p3;
  i1 = p3;
  i2 = 4294967295u;
  i1 ^= i2;
  i2 = l1;
  i1 += i2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  l1 = i2;
  i1 += i2;
  i2 = 0u;
  i3 = l1;
  i2 -= i3;
  i1 &= i2;
  i0 += i1;
  l1 = i0;
  i0 = 60u;
  p0 = i0;
  B0:;
  i0 = p4;
  i1 = l1;
  i2 = l2;
  i1 += i2;
  p3 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 102u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 100u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p1;
  i1 = 79u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B5:;
  i0 = p2;
  i0 = mp_obj_get_int(i0);
  p2 = i0;
  i0 = l2;
  i1 = 5u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = l1;
  i1 = p2;
  i2 = 31u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i2 = 255u;
  i1 &= i2;
  i2 = 0u;
  i3 = p1;
  i4 = 90u;
  i3 = (u32)((s32)i3 > (s32)i4);
  i1 = i3 ? i1 : i2;
  i2 = l2;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p3;
  i1 = 4294967292u;
  i0 += i1;
  i1 = l1;
  i2 = p0;
  i3 = 62u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  l1 = i0;
  goto B2;
  B4:;
  i0 = p2;
  d0 = mp_obj_get_float(i0);
  f0 = (*Z_eosio_injectionZ__eosio_f64_demoteZ_fd)(d0);
  i0 = i32_reinterpret_f32(f0);
  p2 = i0;
  goto B2;
  B3:;
  i0 = l0;
  i1 = p2;
  d1 = mp_obj_get_float(i1);
  f64_store((&M0), (u64)(i0), d1);
  i0 = l0;
  i1 = l0;
  i2 = p0;
  i3 = 62u;
  i2 = i2 == i3;
  p1 = i2;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 |= i2;
  i1 = i32_load((&M0), (u64)(i1));
  p2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l1;
  i1 = p2;
  i2 = 24u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 14));
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = l1;
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 12));
  i32_store8((&M0), (u64)(i0 + 3), i1);
  i0 = l1;
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 13));
  i32_store8((&M0), (u64)(i0 + 2), i1);
  goto B6;
  B7:;
  i0 = l1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B6:;
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = l0;
  i1 = p1;
  i2 = 1u;
  i1 ^= i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 |= i1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  B2:;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 4u;
  i2 = l2;
  i3 = 4u;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i0 = p0;
  i1 = 62u;
  i0 = i0 != i1;
  if (i0) {goto B8;}
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p1;
  i1 = 1u;
  i0 += i1;
  p0 = i0;
  L10: vm_checktime();
    i0 = l1;
    i1 = l0;
    i2 = p0;
    i1 += i2;
    i2 = 4294967294u;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto L10;}
  B9:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B8:;
  i0 = l1;
  i1 = l0;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = p2;
  i1 = p0;
  i2 = 62u;
  i1 = i1 == i2;
  i2 = l2;
  i3 = l1;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_binary_set_val_array(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  f32 f1;
  f64 d1;
  i0 = p0;
  i1 = 79u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 100u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 102u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  d1 = mp_obj_get_float(i1);
  f1 = (*Z_eosio_injectionZ__eosio_f64_demoteZ_fd)(d1);
  f32_store((&M0), (u64)(i0), f1);
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = p2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  d1 = mp_obj_get_float(i1);
  f64_store((&M0), (u64)(i0), d1);
  goto Bfunc;
  B0:;
  i0 = p3;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  B4:;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = p3;
  i3 = mp_obj_get_int(i3);
  mp_binary_set_val_array_from_int(i0, i1, i2, i3);
  goto Bfunc;
  B3:;
  i0 = p3;
  i1 = 0u;
  i2 = 64u;
  i3 = p0;
  i4 = 0u;
  i2 = mp_binary_get_size(i2, i3, i4);
  p0 = i2;
  i3 = p1;
  i4 = p0;
  i5 = p2;
  i4 *= i5;
  i3 += i4;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void mp_binary_set_val_array_from_int(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  f32 f1;
  f64 d1;
  i0 = p0;
  i1 = 4294967295u;
  i0 += i1;
  p0 = i0;
  i1 = 112u;
  i0 = i0 > i1;
  if (i0) {goto B8;}
  i0 = p0;
  switch (i0) {
    case 0: goto B13;
    case 1: goto B8;
    case 2: goto B8;
    case 3: goto B8;
    case 4: goto B8;
    case 5: goto B8;
    case 6: goto B8;
    case 7: goto B8;
    case 8: goto B8;
    case 9: goto B8;
    case 10: goto B8;
    case 11: goto B8;
    case 12: goto B8;
    case 13: goto B8;
    case 14: goto B8;
    case 15: goto B8;
    case 16: goto B8;
    case 17: goto B8;
    case 18: goto B8;
    case 19: goto B8;
    case 20: goto B8;
    case 21: goto B8;
    case 22: goto B8;
    case 23: goto B8;
    case 24: goto B8;
    case 25: goto B8;
    case 26: goto B8;
    case 27: goto B8;
    case 28: goto B8;
    case 29: goto B8;
    case 30: goto B8;
    case 31: goto B8;
    case 32: goto B8;
    case 33: goto B8;
    case 34: goto B8;
    case 35: goto B8;
    case 36: goto B8;
    case 37: goto B8;
    case 38: goto B8;
    case 39: goto B8;
    case 40: goto B8;
    case 41: goto B8;
    case 42: goto B8;
    case 43: goto B8;
    case 44: goto B8;
    case 45: goto B8;
    case 46: goto B8;
    case 47: goto B8;
    case 48: goto B8;
    case 49: goto B8;
    case 50: goto B8;
    case 51: goto B8;
    case 52: goto B8;
    case 53: goto B8;
    case 54: goto B8;
    case 55: goto B8;
    case 56: goto B8;
    case 57: goto B8;
    case 58: goto B8;
    case 59: goto B8;
    case 60: goto B8;
    case 61: goto B8;
    case 62: goto B8;
    case 63: goto B8;
    case 64: goto B8;
    case 65: goto B13;
    case 66: goto B8;
    case 67: goto B8;
    case 68: goto B8;
    case 69: goto B8;
    case 70: goto B8;
    case 71: goto B12;
    case 72: goto B11;
    case 73: goto B8;
    case 74: goto B8;
    case 75: goto B10;
    case 76: goto B8;
    case 77: goto B8;
    case 78: goto B8;
    case 79: goto B9;
    case 80: goto B7;
    case 81: goto B8;
    case 82: goto B8;
    case 83: goto B8;
    case 84: goto B8;
    case 85: goto B8;
    case 86: goto B8;
    case 87: goto B8;
    case 88: goto B8;
    case 89: goto B8;
    case 90: goto B8;
    case 91: goto B8;
    case 92: goto B8;
    case 93: goto B8;
    case 94: goto B8;
    case 95: goto B8;
    case 96: goto B8;
    case 97: goto B6;
    case 98: goto B8;
    case 99: goto B5;
    case 100: goto B8;
    case 101: goto B4;
    case 102: goto B8;
    case 103: goto B3;
    case 104: goto B2;
    case 105: goto B8;
    case 106: goto B8;
    case 107: goto B1;
    case 108: goto B8;
    case 109: goto B8;
    case 110: goto B8;
    case 111: goto B8;
    case 112: goto B0;
    default: goto B13;
  }
  B13:;
  i0 = p1;
  i1 = p2;
  i0 += i1;
  i1 = p3;
  i32_store8((&M0), (u64)(i0), i1);
  goto Bfunc;
  B12:;
  i0 = p1;
  i1 = p2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i32_store16((&M0), (u64)(i0), i1);
  goto Bfunc;
  B11:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B10:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B9:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  B8:;
  goto Bfunc;
  B7:;
  i0 = p1;
  i1 = p2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  j1 = (u64)(s64)(s32)(i1);
  i64_store((&M0), (u64)(i0), j1);
  goto Bfunc;
  B6:;
  i0 = p1;
  i1 = p2;
  i0 += i1;
  i1 = p3;
  i32_store8((&M0), (u64)(i0), i1);
  goto Bfunc;
  B5:;
  i0 = p1;
  i1 = p2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  d1 = (f64)(s32)(i1);
  f64_store((&M0), (u64)(i0), d1);
  goto Bfunc;
  B4:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  f1 = (f32)(s32)(i1);
  f32_store((&M0), (u64)(i0), f1);
  goto Bfunc;
  B3:;
  i0 = p1;
  i1 = p2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i32_store16((&M0), (u64)(i0), i1);
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = p2;
  i2 = 3u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = p3;
  j1 = (u64)(s64)(s32)(i1);
  i64_store((&M0), (u64)(i0), j1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mp_obj_is_package(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 193u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_load_method_maybe(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 0u;
  i0 = i0 != i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin___import__(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 304u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = 6u;
  l2 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l2 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  l3 = i0;
  B2:;
  i0 = l1;
  i1 = l0;
  i2 = 288u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p0 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5140));
  i1 = 186u;
  i0 = mp_obj_dict_get(i0, i1);
  l1 = i0;
  i1 = 4294967288u;
  i0 &= i1;
  i1 = 168u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5140));
  i1 = 170u;
  i0 = mp_obj_dict_get(i0, i1);
  l1 = i0;
  B6:;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5140));
  i1 = 4u;
  i0 += i1;
  i1 = 1546u;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l4 = i0;
  i0 = l1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p1 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i0 += i1;
  l1 = i0;
  i0 = l4;
  if (i0) {goto B7;}
  L8: vm_checktime();
    i0 = l1;
    i1 = p1;
    i0 = i0 <= i1;
    if (i0) {goto B7;}
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 46u;
    i0 = i0 != i1;
    if (i0) {goto L8;}
  B7:;
  i0 = l3;
  i1 = 4294967295u;
  i0 += i1;
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B9;}
  L10: vm_checktime();
    i0 = l1;
    i1 = p1;
    i0 = i0 <= i1;
    if (i0) {goto B11;}
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 46u;
    i0 = i0 != i1;
    if (i0) {goto L10;}
    B11:;
    i0 = l3;
    i1 = 4294967295u;
    i0 += i1;
    l3 = i0;
    if (i0) {goto L10;}
  B9:;
  i0 = l1;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = p1;
  i0 -= i1;
  l1 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 288));
  l3 = i1;
  i0 += i1;
  i1 = 1u;
  i0 += i1;
  i1 = l1;
  i2 = l3;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = mp_pystack_alloc(i0);
  l4 = i0;
  i1 = p1;
  i2 = l1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 288));
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = l4;
  i1 = l1;
  i0 += i1;
  l1 = i0;
  i1 = 46u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 288));
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B12:;
  i0 = l4;
  i1 = l3;
  i0 = qstr_from_strn(i0, i1);
  l1 = i0;
  i0 = 0u;
  i1 = l4;
  i32_store((&M0), (u64)(i0 + 5132), i1);
  i0 = l1;
  i0 = qstr_str(i0);
  p0 = i0;
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 288), i1);
  i0 = l1;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 2u;
  i0 |= i1;
  l1 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B4;}
  goto B0;
  B5:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 288));
  if (i0) {goto B0;}
  B4:;
  i0 = 0u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B3:;
  i0 = 10537u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B1:;
  i0 = 0u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = l1;
  i0 = mp_obj_str_get_qstr(i0);
  i0 = mp_module_get(i0);
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = p0;
  i1 = 46u;
  i0 = strchr_0(i0, i1);
  p1 = i0;
  i0 = l2;
  i1 = 6u;
  i0 = i0 != i1;
  if (i0) {goto B14;}
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = p0;
  i1 = p1;
  i2 = p0;
  i1 -= i2;
  i0 = qstr_from_strn(i0, i1);
  i0 = mp_module_get(i0);
  l1 = i0;
  B14:;
  i0 = l0;
  i1 = 304u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B13:;
  i0 = l0;
  i1 = 272u;
  i0 += i1;
  i1 = 256u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  vstr_init_fixed_buf(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 288));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = l2;
  i1 = 14u;
  i0 = i0 != i1;
  l5 = i0;
  i0 = l0;
  i1 = 280u;
  i0 += i1;
  l6 = i0;
  i0 = 1u;
  l1 = i0;
  i0 = 0u;
  l7 = i0;
  i0 = 0u;
  l8 = i0;
  i0 = 0u;
  l9 = i0;
  i0 = 0u;
  l3 = i0;
  L18: vm_checktime();
    i0 = l1;
    i1 = p1;
    i0 = i0 == i1;
    if (i0) {goto B32;}
    i0 = p0;
    i1 = l1;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 46u;
    i0 = i0 != i1;
    if (i0) {goto B31;}
    B32:;
    i0 = p0;
    i1 = l1;
    i0 = qstr_from_strn(i0, i1);
    l10 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 276));
    i0 = !(i0);
    if (i0) {goto B33;}
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = 47u;
    vstr_add_char(i0, i1);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = p0;
    i2 = l9;
    i1 += i2;
    i2 = l1;
    i3 = l9;
    i2 -= i3;
    vstr_add_strn(i0, i1, i2);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    l4 = i0;
    i0 = mp_frozen_stat(i0);
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B30;}
    i0 = 1u;
    p1 = i0;
    i0 = l3;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B29;}
    goto B23;
    B33:;
    i0 = 5228u;
    i1 = l0;
    i2 = 300u;
    i1 += i2;
    i2 = l0;
    i3 = 296u;
    i2 += i3;
    mp_obj_list_get(i0, i1, i2);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 300));
    i0 = !(i0);
    if (i0) {goto B28;}
    i0 = 0u;
    l3 = i0;
    i0 = 0u;
    l11 = i0;
    L34: vm_checktime();
      i0 = l0;
      i1 = 0u;
      i32_store((&M0), (u64)(i0 + 276), i1);
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 296));
      i1 = l3;
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l0;
      i2 = 292u;
      i1 += i2;
      i0 = mp_obj_str_get_data(i0, i1);
      p1 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 292));
      l4 = i0;
      i0 = !(i0);
      if (i0) {goto B35;}
      i0 = l0;
      i1 = 272u;
      i0 += i1;
      i1 = p1;
      i2 = l4;
      vstr_add_strn(i0, i1, i2);
      i0 = l0;
      i1 = 272u;
      i0 += i1;
      i1 = 47u;
      vstr_add_char(i0, i1);
      B35:;
      i0 = l0;
      i1 = 272u;
      i0 += i1;
      i1 = p0;
      i2 = l1;
      vstr_add_strn(i0, i1, i2);
      i0 = l0;
      i1 = 272u;
      i0 += i1;
      i0 = vstr_null_terminated_str(i0);
      p1 = i0;
      i0 = mp_frozen_stat(i0);
      l4 = i0;
      if (i0) {goto B36;}
      i0 = p1;
      i0 = mp_import_stat(i0);
      l4 = i0;
      B36:;
      i0 = 1u;
      p1 = i0;
      i0 = l4;
      i1 = 1u;
      i0 = i0 == i1;
      if (i0) {goto B23;}
      i0 = l0;
      i1 = 272u;
      i0 += i1;
      i1 = 14233u;
      vstr_add_str(i0, i1);
      i0 = l0;
      i1 = 272u;
      i0 += i1;
      i0 = vstr_null_terminated_str(i0);
      p1 = i0;
      i0 = mp_frozen_stat(i0);
      l4 = i0;
      if (i0) {goto B37;}
      i0 = p1;
      i0 = mp_import_stat(i0);
      l4 = i0;
      B37:;
      i0 = 2u;
      p1 = i0;
      i0 = l4;
      i1 = 2u;
      i0 = i0 == i1;
      if (i0) {goto B23;}
      i0 = l0;
      i1 = 272u;
      i0 += i1;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 276));
      i2 = 4294967294u;
      i1 += i2;
      i2 = 109u;
      vstr_ins_byte(i0, i1, i2);
      i0 = l0;
      i1 = 272u;
      i0 += i1;
      i0 = vstr_null_terminated_str(i0);
      p1 = i0;
      i0 = mp_frozen_stat(i0);
      l4 = i0;
      if (i0) {goto B38;}
      i0 = p1;
      i0 = mp_import_stat(i0);
      l4 = i0;
      B38:;
      i0 = 2u;
      p1 = i0;
      i0 = l4;
      i1 = 2u;
      i0 = i0 == i1;
      if (i0) {goto B23;}
      i0 = l3;
      i1 = 4u;
      i0 += i1;
      l3 = i0;
      i0 = l11;
      i1 = 1u;
      i0 += i1;
      l11 = i0;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 300));
      i0 = i0 < i1;
      if (i0) {goto L34;}
      goto B22;
    B31:;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i1 = p1;
    i0 = i0 <= i1;
    if (i0) {goto L18;}
    goto B15;
    B30:;
    i0 = 1u;
    p1 = i0;
    i0 = l4;
    i0 = mp_import_stat(i0);
    i1 = 1u;
    i0 = i0 == i1;
    if (i0) {goto B23;}
    B29:;
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = 14233u;
    vstr_add_str(i0, i1);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    l4 = i0;
    i0 = mp_frozen_stat(i0);
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B27;}
    i0 = 2u;
    p1 = i0;
    i0 = l3;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B26;}
    goto B23;
    B28:;
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = p0;
    i2 = l1;
    vstr_add_strn(i0, i1, i2);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    l4 = i0;
    i0 = mp_frozen_stat(i0);
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B25;}
    i0 = 1u;
    p1 = i0;
    i0 = l3;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B24;}
    goto B23;
    B27:;
    i0 = 2u;
    p1 = i0;
    i0 = l4;
    i0 = mp_import_stat(i0);
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B23;}
    B26:;
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 276));
    i2 = 4294967294u;
    i1 += i2;
    i2 = 109u;
    vstr_ins_byte(i0, i1, i2);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    l4 = i0;
    i0 = mp_frozen_stat(i0);
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B39;}
    i0 = 2u;
    p1 = i0;
    i0 = l3;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B23;}
    goto B22;
    B39:;
    i0 = 2u;
    p1 = i0;
    i0 = l4;
    i0 = mp_import_stat(i0);
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B22;}
    goto B23;
    B25:;
    i0 = 1u;
    p1 = i0;
    i0 = l4;
    i0 = mp_import_stat(i0);
    i1 = 1u;
    i0 = i0 == i1;
    if (i0) {goto B23;}
    B24:;
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = 14233u;
    vstr_add_str(i0, i1);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    l4 = i0;
    i0 = mp_frozen_stat(i0);
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B41;}
    i0 = 2u;
    p1 = i0;
    i0 = l3;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B40;}
    goto B23;
    B41:;
    i0 = 2u;
    p1 = i0;
    i0 = l4;
    i0 = mp_import_stat(i0);
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B23;}
    B40:;
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 276));
    i2 = 4294967294u;
    i1 += i2;
    i2 = 109u;
    vstr_ins_byte(i0, i1, i2);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    p1 = i0;
    i0 = mp_frozen_stat(i0);
    l3 = i0;
    if (i0) {goto B42;}
    i0 = p1;
    i0 = mp_import_stat(i0);
    l3 = i0;
    B42:;
    i0 = 2u;
    p1 = i0;
    i0 = l3;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B22;}
    B23:;
    i0 = l10;
    i0 = mp_module_get(i0);
    l3 = i0;
    if (i0) {goto B21;}
    i0 = l10;
    i0 = mp_obj_new_module(i0);
    l3 = i0;
    i0 = p1;
    i1 = 1u;
    i0 = i0 == i1;
    if (i0) {goto B50;}
    i0 = l5;
    if (i0) {goto B50;}
    i0 = l1;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 288));
    i0 = i0 != i1;
    if (i0) {goto B50;}
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    i1 = 186u;
    i2 = 170u;
    i0 = mp_obj_dict_store(i0, i1, i2);
    i0 = 5184u;
    i1 = 170u;
    i2 = l3;
    i0 = mp_obj_dict_store(i0, i1, i2);
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    i1 = 170u;
    i2 = l10;
    i3 = 3u;
    i2 <<= (i3 & 31);
    i3 = 2u;
    i2 |= i3;
    i0 = mp_obj_dict_store(i0, i1, i2);
    goto B49;
    B50:;
    i0 = p1;
    i1 = 1u;
    i0 = i0 != i1;
    if (i0) {goto B49;}
    i0 = l3;
    i1 = 193u;
    i2 = l6;
    i2 = i32_load((&M0), (u64)(i2));
    i3 = l0;
    i3 = i32_load((&M0), (u64)(i3 + 276));
    i2 = mp_obj_new_str(i2, i3);
    mp_store_attr(i0, i1, i2);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 276));
    p1 = i0;
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = 47u;
    vstr_add_char(i0, i1);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = 12288u;
    vstr_add_str(i0, i1);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    l11 = i0;
    i0 = mp_frozen_stat(i0);
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B48;}
    i0 = l4;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B47;}
    goto B46;
    B49:;
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    p1 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 276));
    i2 = l0;
    i3 = 300u;
    i2 += i3;
    i0 = mp_find_frozen_module(i0, i1, i2);
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B45;}
    i0 = l3;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 300));
    i2 = p1;
    do_execute_raw_code(i0, i1, i2);
    i0 = l7;
    if (i0) {goto B20;}
    goto B19;
    B48:;
    i0 = l11;
    i0 = mp_import_stat(i0);
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B46;}
    B47:;
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 276));
    i2 = 4294967294u;
    i1 += i2;
    i2 = 109u;
    vstr_ins_byte(i0, i1, i2);
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    l11 = i0;
    i0 = mp_frozen_stat(i0);
    l4 = i0;
    i0 = !(i0);
    if (i0) {goto B51;}
    i0 = l4;
    i1 = 2u;
    i0 = i0 == i1;
    if (i0) {goto B46;}
    goto B43;
    B51:;
    i0 = l11;
    i0 = mp_import_stat(i0);
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B43;}
    B46:;
    i0 = l0;
    i1 = 272u;
    i0 += i1;
    i0 = vstr_null_terminated_str(i0);
    l4 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 276));
    i2 = l0;
    i3 = 300u;
    i2 += i3;
    i0 = mp_find_frozen_module(i0, i1, i2);
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B44;}
    i0 = l3;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 300));
    i2 = l4;
    do_execute_raw_code(i0, i1, i2);
    i0 = l0;
    i1 = p1;
    i32_store((&M0), (u64)(i0 + 276), i1);
    i0 = l7;
    if (i0) {goto B20;}
    goto B19;
    B45:;
    i0 = 31932u;
    i1 = 14484u;
    mp_raise_msg(i0, i1);
    UNREACHABLE;
    B44:;
    i0 = 31932u;
    i1 = 14484u;
    mp_raise_msg(i0, i1);
    UNREACHABLE;
    B43:;
    i0 = l0;
    i1 = p1;
    i32_store((&M0), (u64)(i0 + 276), i1);
    i0 = l7;
    if (i0) {goto B20;}
    goto B19;
    B22:;
    i0 = l1;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 288));
    i0 = i0 != i1;
    if (i0) {goto B17;}
    i0 = p0;
    i0 = mp_module_search_umodule(i0);
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B17;}
    B21:;
    i0 = l7;
    i0 = !(i0);
    if (i0) {goto B19;}
    B20:;
    i0 = l7;
    i1 = p0;
    i2 = l9;
    i1 += i2;
    i2 = l1;
    i3 = l9;
    i2 -= i3;
    i1 = qstr_from_strn(i1, i2);
    i2 = l3;
    mp_store_attr(i0, i1, i2);
    B19:;
    i0 = l8;
    i1 = l3;
    i2 = l8;
    i0 = i2 ? i0 : i1;
    l8 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    l9 = i0;
    i0 = l3;
    l7 = i0;
    i0 = l1;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 288));
    p1 = i1;
    i0 = i0 <= i1;
    if (i0) {goto L18;}
    goto B15;
  B17:;
  i0 = l0;
  i1 = l10;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 31932u;
  i1 = 11594u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B16:;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l8 = i0;
  B15:;
  i0 = l0;
  i1 = 304u;
  i0 += i1;
  g0 = i0;
  i0 = l8;
  i1 = l3;
  i2 = l2;
  i3 = 6u;
  i2 = i2 == i3;
  i0 = i2 ? i0 : i1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void do_execute_raw_code(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 192u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 176u;
  i2 = p2;
  i2 = qstr_from_str(i2);
  i3 = 3u;
  i2 <<= (i3 & 31);
  i3 = 2u;
  i2 |= i3;
  mp_store_attr(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p0 = i0;
  i0 = l0;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5140));
  i32_store((&M0), (u64)(i0 + 188), i1);
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5140), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5136));
  p2 = i0;
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 5136), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 184), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = nlr_push_tail(i0);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i0 = setjmp_ex(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 0u;
  i2 = 0u;
  i0 = mp_make_function_from_raw_code(i0, i1, i2);
  i0 = mp_call_function_0(i0);
  nlr_pop();
  i0 = 0u;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 188));
  i32_store((&M0), (u64)(i0 + 5140), i1);
  i0 = 0u;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 184));
  i32_store((&M0), (u64)(i0 + 5136), i1);
  i0 = l0;
  i1 = 192u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = 0u;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 188));
  i32_store((&M0), (u64)(i0 + 5140), i1);
  i0 = 0u;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 184));
  i32_store((&M0), (u64)(i0 + 5136), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  nlr_jump(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 micropython_new_module(void) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 12933u;
  i1 = qstr_from_str(i1);
  i1 = mp_obj_new_module(i1);
  i32_store((&M0), (u64)(i0 + 5608), i1);
  i0 = 1u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 micropython_init_module_from_mpy(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 176u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i0 = nlr_push_tail(i0);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = setjmp_ex(i0);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 26492u;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  mp_obj_print_exception(i0, i1);
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = p1;
  i0 = mp_raw_code_load_mem(i0, i1);
  p0 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5608));
  i1 = p0;
  i2 = 0u;
  do_execute_raw_code(i0, i1, i2);
  i0 = 0u;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5608));
  i2 = 13294u;
  i2 = qstr_from_str(i2);
  i1 = mp_load_attr(i1, i2);
  i32_store((&M0), (u64)(i0 + 5612), i1);
  nlr_pop();
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = 1u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 micropython_init_module_from_mpy_with_name(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 176u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i0 = nlr_push_tail(i0);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = setjmp_ex(i0);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 26492u;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  mp_obj_print_exception(i0, i1);
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 13740u;
  i2 = p0;
  i0 = i2 ? i0 : i1;
  i0 = qstr_from_str(i0);
  i0 = mp_obj_new_module(i0);
  p0 = i0;
  i1 = p1;
  i2 = p2;
  i1 = mp_raw_code_load_mem(i1, i2);
  i2 = 0u;
  do_execute_raw_code(i0, i1, i2);
  nlr_pop();
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 micropython_init_module(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = p2;
  i0 = micropython_init_module_from_mpy(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 micropython_apply(u64 p0, u64 p1, u64 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1;
  i0 = g0;
  i1 = 192u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i0 = nlr_push_tail(i0);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i0 = setjmp_ex(i0);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 26492u;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  mp_obj_print_exception(i0, i1);
  i0 = l0;
  i1 = 192u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = l0;
  j1 = p0;
  i1 = mp_obj_new_name_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  j1 = p1;
  i1 = mp_obj_new_name_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  j1 = p2;
  i1 = mp_obj_new_name_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5612));
  i1 = 3u;
  i2 = 0u;
  i3 = l0;
  i4 = 4u;
  i3 += i4;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  nlr_pop();
  i0 = l0;
  i1 = 192u;
  i0 += i1;
  g0 = i0;
  i0 = 1u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void micropython_init_frozen_modules(void) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 13740u;
  i2 = 13740u;
  i2 = strlen_0(i2);
  i1 = mp_obj_new_str(i1, i2);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 1u;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_builtin___import__(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static f64 rint_0(f64 p0) {
  u32 l1 = 0;
  u64 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i2;
  u64 j0, j1, j2, j3;
  f64 d0, d1, d2;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 9218868437227405312ull;
  j0 &= j1;
  j1 = 4836865999795912704ull;
  i0 = j0 > j1;
  if (i0) {goto B0;}
  d0 = p0;
  d1 = -4503599627370496;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 4503599627370496;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p0;
  d2 = 4503599627370496;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = -4503599627370496;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  j2 = l0;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  l1 = i2;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B0;}
  d0 = -0.0;
  d1 = 0;
  i2 = l1;
  d0 = i2 ? d0 : d1;
  p0 = d0;
  B0:;
  d0 = p0;
  FUNC_EPILOGUE;
  return d0;
}

static f64 nearbyint_0(f64 p0) {
  FUNC_PROLOGUE;
  f64 d0;
  d0 = p0;
  d0 = rint_0(d0);
  FUNC_EPILOGUE;
  return d0;
}

static u32 mp_builtin___build_class__(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5136));
  l1 = i0;
  i0 = 0u;
  i1 = 0u;
  i1 = mp_obj_new_dict(i1);
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 5136), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_call_function_0(i0);
  l3 = i0;
  i0 = 0u;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 5136), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  l1 = i0;
  i0 = 36936u;
  l4 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_type(i0);
  l4 = i0;
  B0:;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 4294967294u;
  i0 += i1;
  i1 = l1;
  i0 = mp_obj_new_tuple(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l4;
  i1 = 3u;
  i2 = 0u;
  i3 = l0;
  i4 = 4u;
  i3 += i4;
  i0 = mp_call_function_n_kw(i0, i1, i2, i3);
  p1 = i0;
  i0 = l3;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l3;
  i1 = p1;
  mp_obj_cell_set(i0, i1);
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_abs(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 7u;
  i1 = p0;
  i0 = mp_unary_op(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_all(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i0 = mp_getiter(i0, i1);
  l1 = i0;
  L1: vm_checktime();
    i0 = l1;
    i0 = mp_iternext(i0);
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p0;
    i0 = mp_obj_is_true(i0);
    if (i0) {goto L1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_any(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i0 = mp_getiter(i0, i1);
  l1 = i0;
  L1: vm_checktime();
    i0 = l1;
    i0 = mp_iternext(i0);
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = p0;
    i0 = mp_obj_is_true(i0);
    i0 = !(i0);
    if (i0) {goto L1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_bin(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 1642u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 0u;
  i0 = mp_obj_str_format(i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_callable(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 30u;
  i1 = 14u;
  i2 = p0;
  i2 = mp_obj_is_callable(i2);
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_chr(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i1 = 127u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = p0;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  i0 = 1u;
  p0 = i0;
  goto B1;
  B2:;
  i0 = p0;
  i1 = 2047u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = p0;
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 13), i1);
  i0 = l0;
  i1 = p0;
  i2 = 6u;
  i1 >>= (i2 & 31);
  i2 = 192u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  i0 = 2u;
  p0 = i0;
  goto B1;
  B3:;
  i0 = p0;
  i1 = 65535u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = p0;
  i2 = 12u;
  i1 >>= (i2 & 31);
  i2 = 224u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p0;
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 14), i1);
  i0 = l0;
  i1 = p0;
  i2 = 6u;
  i1 >>= (i2 & 31);
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 13), i1);
  i0 = 3u;
  p0 = i0;
  goto B1;
  B4:;
  i0 = p0;
  i1 = 1114111u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p0;
  i2 = 18u;
  i1 >>= (i2 & 31);
  i2 = 240u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p0;
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 15), i1);
  i0 = l0;
  i1 = p0;
  i2 = 12u;
  i1 >>= (i2 & 31);
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 13), i1);
  i0 = l0;
  i1 = p0;
  i2 = 6u;
  i1 >>= (i2 & 31);
  i2 = 63u;
  i1 &= i2;
  i2 = 128u;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0 + 14), i1);
  i0 = 4u;
  p0 = i0;
  B1:;
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  i1 = p0;
  i0 = mp_obj_new_str_via_qstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 10567u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_dir(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  i1 = 0u;
  i0 = mp_obj_new_list(i0, i1);
  l1 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5148));
  p0 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 += i1;
  l2 = i0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = 18u;
  l3 = i0;
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  i0 = 2u;
  p0 = i0;
  L3: vm_checktime();
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p0;
    i2 = l0;
    i3 = 8u;
    i2 += i3;
    i3 = 0u;
    mp_load_method_protected(i0, i1, i2, i3);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 8));
    i0 = !(i0);
    if (i0) {goto B4;}
    i0 = p0;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B5;}
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    if (i0) {goto B0;}
    B5:;
    i0 = l1;
    i1 = l3;
    i0 = mp_obj_list_append(i0, i1);
    B4:;
    i0 = l3;
    i1 = 8u;
    i0 += i1;
    l3 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L3;}
    goto B1;
  B2:;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5136));
  l3 = i0;
  i1 = 8u;
  i0 += i1;
  l5 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 0u;
  p0 = i0;
  i0 = l3;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  i0 = 0u;
  l3 = i0;
  L6: vm_checktime();
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p0;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    i1 = 4u;
    i0 |= i1;
    i1 = 4u;
    i0 = i0 == i1;
    if (i0) {goto B7;}
    i0 = l1;
    i1 = l2;
    i0 = mp_obj_list_append(i0, i1);
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    B7:;
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    p0 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i1 = p1;
    i0 = i0 < i1;
    if (i0) {goto L6;}
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  i1 = 0u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i0 = mp_call_method_n_kw(i0, i1, i2);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_divmod(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 35u;
  i1 = p0;
  i2 = p1;
  i0 = mp_binary_op(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_hash(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 6u;
  i1 = p0;
  i0 = mp_unary_op(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_hex(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 33u;
  i1 = 1634u;
  i2 = p0;
  i0 = mp_binary_op(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_iter(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 0u;
  i0 = mp_getiter(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_max(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = 1u;
  i0 = mp_builtin_min_max(i0, i1, i2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_min_max(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = p2;
  i1 = 842u;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  B0:;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B6;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i0 = mp_getiter(i0, i1);
  l3 = i0;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 0u;
  p2 = i0;
  i0 = 0u;
  l1 = i0;
  L7: vm_checktime();
    i0 = l2;
    i1 = p1;
    i0 = mp_call_function_1(i0, i1);
    p0 = i0;
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B8;}
    i0 = p3;
    i1 = p0;
    i2 = p2;
    i0 = mp_binary_op(i0, i1, i2);
    i1 = 30u;
    i0 = i0 == i1;
    if (i0) {goto B8;}
    i0 = l3;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L7;}
    goto B2;
    B8:;
    i0 = p1;
    l1 = i0;
    i0 = p0;
    p2 = i0;
    i0 = l3;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L7;}
    goto B2;
  B6:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = 0u;
  l1 = i0;
  i0 = 0u;
  p2 = i0;
  L9: vm_checktime();
    i0 = l2;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i0 = mp_call_function_1(i0, i1);
    l3 = i0;
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B10;}
    i0 = p3;
    i1 = l3;
    i2 = p2;
    i0 = mp_binary_op(i0, i1, i2);
    i1 = 30u;
    i0 = i0 == i1;
    if (i0) {goto B10;}
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L9;}
    goto B2;
    B10:;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i0 = l3;
    p2 = i0;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L9;}
    goto B2;
  B5:;
  i0 = p2;
  i1 = 2330u;
  i2 = 0u;
  i0 = mp_map_lookup(i0, i1, i2);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = 0u;
  l1 = i0;
  i0 = 0u;
  l2 = i0;
  L11: vm_checktime();
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B13;}
    i0 = p3;
    i1 = l3;
    i2 = l2;
    i0 = mp_binary_op(i0, i1, i2);
    i1 = 30u;
    i0 = i0 == i1;
    if (i0) {goto B12;}
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L11;}
    goto B2;
    B13:;
    i0 = l3;
    l2 = i0;
    i0 = l3;
    l1 = i0;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L11;}
    goto B2;
    B12:;
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i0 = l3;
    l2 = i0;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L11;}
    goto B2;
  B3:;
  i0 = 0u;
  l1 = i0;
  L14: vm_checktime();
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B15;}
    i0 = p3;
    i1 = p1;
    i2 = l1;
    i0 = mp_binary_op(i0, i1, i2);
    i1 = 30u;
    i0 = i0 == i1;
    if (i0) {goto B15;}
    i0 = l3;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L14;}
    goto B2;
    B15:;
    i0 = p1;
    l1 = i0;
    i0 = l3;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L14;}
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = 11615u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_min(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = 0u;
  i0 = mp_builtin_min_max(i0, i1, i2, i3);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_next(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = mp_iternext_allow_raise(i0);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 31152u;
  i1 = 0u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_oct(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 33u;
  i1 = 1626u;
  i2 = p0;
  i0 = mp_binary_op(i0, i1, i2);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_ord(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  l1 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 36168u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B2:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = l1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i1 = utf8_charlen(i1, i2);
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l1;
  i0 = utf8_get_char(i0);
  i0 = mp_obj_new_int(i0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 12300u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_pow(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 34u;
  i1 = l1;
  i2 = l0;
  i0 = mp_binary_op(i0, i1, i2);
  goto Bfunc;
  B0:;
  i0 = l1;
  i1 = l0;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i0 = mp_obj_int_pow3(i0, i1, i2);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  i1 = 0u;
  i2 = p2;
  i3 = 2u;
  i4 = 38496u;
  i5 = l0;
  i6 = 8u;
  i5 += i6;
  mp_arg_parse_all(i0, i1, i2, i3, i4, i5);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  l1 = i0;
  i0 = p2;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 4u;
  i1 |= i2;
  i0 = mp_obj_str_get_data(i0, i1);
  l2 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  p2 = i0;
  L1: vm_checktime();
    i0 = p2;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = 26492u;
    i1 = l1;
    i2 = l0;
    i2 = i32_load((&M0), (u64)(i2 + 8));
    i3 = 0u;
    i4 = 0u;
    i5 = 0u;
    i0 = mp_print_strn(i0, i1, i2, i3, i4, i5);
    B2:;
    i0 = 26492u;
    i1 = p1;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 0u;
    mp_obj_print_helper(i0, i1, i2);
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i1 = p2;
    i2 = 1u;
    i1 += i2;
    p2 = i1;
    i0 = i0 != i1;
    if (i0) {goto L1;}
  B0:;
  i0 = 26492u;
  i1 = l2;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  i3 = 0u;
  i4 = 0u;
  i5 = 0u;
  i0 = mp_print_strn(i0, i1, i2, i3, i4, i5);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin___repl_print__(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 26492u;
  i1 = p0;
  i2 = 1u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = 26492u;
  i1 = 12942u;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 4u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 38488u;
  i1 = 8u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i3 = 0u;
  i3 = i32_load((&M0), (u64)(i3 + 34116));
  CALL_INDIRECT(T0, void (*)(u32, u32, u32), 0, i3, i0, i1, i2);
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_repr(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 16u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  vstr_init_print(i0, i1, i2);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i2 = 1u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = 36168u;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_round(u32 p0, u32 p1) {
  u32 l0 = 0;
  f64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0, d1, d2;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B3;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B3:;
  i0 = l0;
  d0 = mp_obj_get_float(i0);
  l1 = d0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  d0 = l1;
  d1 = 10;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i2 = mp_obj_get_int(i2);
  d2 = (f64)(s32)(i2);
  d1 = pow_0(d1, d2);
  l2 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d0 = nearbyint_0(d0);
  d1 = l2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B2:;
  i0 = p0;
  i1 = 2u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = l0;
  goto Bfunc;
  B1:;
  d0 = l1;
  d0 = nearbyint_0(d0);
  i0 = mp_obj_new_int_from_float(d0);
  goto Bfunc;
  B0:;
  i0 = 0u;
  mp_raise_NotImplementedError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_sum(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 1u;
  l1 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i0 = mp_getiter(i0, i1);
  p0 = i0;
  i0 = mp_iternext(i0);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  L2: vm_checktime();
    i0 = 27u;
    i1 = l1;
    i2 = p1;
    i0 = mp_binary_op(i0, i1, i2);
    l1 = i0;
    i0 = p0;
    i0 = mp_iternext(i0);
    p1 = i0;
    if (i0) {goto L2;}
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_sorted(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 33760u;
  i2 = 1u;
  i3 = 0u;
  i4 = p1;
  i5 = 0u;
  i5 = i32_load((&M0), (u64)(i5 + 33772));
  i1 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i5, i1, i2, i3, i4);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 1u;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = p2;
  i0 = mp_obj_list_sort(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 13300u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_getattr(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = mp_obj_str_get_qstr(i0);
  p1 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i3 = 0u;
  mp_load_method_protected(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_load_method(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  if (i0) {goto B1;}
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = l1;
  i0 = mp_obj_new_bound_meth(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_setattr(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i1 = mp_obj_str_get_qstr(i1);
  i2 = p2;
  mp_store_attr(i0, i1, i2);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_delattr(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = p1;
  i1 = mp_obj_str_get_qstr(i1);
  i2 = 0u;
  mp_store_attr(i0, i1, i2);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_hasattr(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = p1;
  i1 = mp_obj_str_get_qstr(i1);
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i3 = 0u;
  mp_load_method_protected(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = p0;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_globals(void) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5140));
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_locals(void) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5136));
  FUNC_EPILOGUE;
  return i0;
}

static f64 expm1_0(f64 p0) {
  u32 l0 = 0, l2 = 0, l3 = 0;
  u64 l1 = 0;
  f64 l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  f32 f1;
  f64 d0, d1, d2, d3, d4, d5, d6;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 63ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l2 = i0;
  j0 = l1;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l3 = i0;
  i1 = 1078159482u;
  i0 = i0 < i1;
  if (i0) {goto B8;}
  j0 = l1;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 <= j1;
  if (i0) {goto B7;}
  d0 = p0;
  goto Bfunc;
  B8:;
  i0 = l3;
  i1 = 1071001155u;
  i0 = i0 < i1;
  if (i0) {goto B6;}
  i0 = l3;
  i1 = 1072734897u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B2;}
  d0 = p0;
  d1 = 0.69314718036912382;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l4 = d0;
  i0 = 4294967295u;
  l3 = i0;
  d0 = -1.9082149292705877e-10;
  l5 = d0;
  goto B1;
  B7:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B5;}
  d0 = -1;
  goto Bfunc;
  B6:;
  i0 = l3;
  i1 = 1016070143u;
  i0 = i0 > i1;
  if (i0) {goto B9;}
  i0 = l3;
  i1 = 1048575u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = l0;
  d1 = p0;
  f1 = (*Z_eosio_injectionZ__eosio_f64_demoteZ_fd)(d1);
  f32_store((&M0), (u64)(i0 + 12), f1);
  d0 = p0;
  goto Bfunc;
  B9:;
  i0 = 0u;
  l3 = i0;
  goto B0;
  B5:;
  d0 = p0;
  d1 = 709.78271289338397;
  i0 = (*Z_eosio_injectionZ__eosio_f64_gtZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B4;}
  d0 = p0;
  d1 = 8.9884656743115795e+307;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B4:;
  d0 = p0;
  d1 = 1.4426950408889634;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = -0.5;
  d2 = 0.5;
  i3 = l2;
  d1 = i3 ? d1 : d2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l4 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_truncZ_dd)(d0);
  l5 = d0;
  d1 = -0.69314718036912382;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  d0 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B11;}
  i0 = 2147483648u;
  l3 = i0;
  goto B10;
  B11:;
  d0 = l4;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  l3 = i0;
  B10:;
  d0 = l5;
  d1 = 1.9082149292705877e-10;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l5 = d0;
  d0 = p0;
  d1 = l6;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l4 = d0;
  goto B1;
  B3:;
  d0 = p0;
  goto Bfunc;
  B2:;
  d0 = p0;
  d1 = -0.69314718036912382;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l4 = d0;
  i0 = 1u;
  l3 = i0;
  d0 = 1.9082149292705877e-10;
  l5 = d0;
  B1:;
  d0 = l4;
  d1 = l4;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  p0 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = l5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l5 = d0;
  B0:;
  d0 = p0;
  d1 = p0;
  d2 = 0.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l6 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l4 = d0;
  d1 = l4;
  d2 = l4;
  d3 = l4;
  d4 = l4;
  d5 = l4;
  d6 = -2.0109921818362437e-07;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 4.0082178273293624e-06;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -7.9365075786748794e-05;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.0015873015872548146;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.033333333333333132;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l7 = d1;
  d2 = 3;
  d3 = l6;
  d4 = l7;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  l6 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = 6;
  d3 = p0;
  d4 = l6;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B16;}
  d0 = p0;
  d1 = l6;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l4 = d0;
  i0 = l3;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B15;}
  i0 = l3;
  i1 = 4294967295u;
  i0 = i0 != i1;
  if (i0) {goto B14;}
  d0 = p0;
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = -0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B16:;
  d0 = p0;
  d1 = p0;
  d2 = l6;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = l4;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B15:;
  d0 = p0;
  d1 = -0.25;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B13;}
  d0 = l4;
  d1 = p0;
  d2 = 0.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = -2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B14:;
  i0 = l3;
  i1 = 1023u;
  i0 += i1;
  j0 = (u64)(i0);
  j1 = 52ull;
  j0 <<= (j1 & 63);
  d0 = f64_reinterpret_i64(j0);
  l5 = d0;
  i0 = l3;
  i1 = 57u;
  i0 = i0 < i1;
  if (i0) {goto B12;}
  d0 = p0;
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 8.9884656743115795e+307;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i2 = l3;
  i3 = 1024u;
  i2 = i2 == i3;
  d0 = i2 ? d0 : d1;
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B13:;
  d0 = p0;
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B12:;
  i0 = 1023u;
  i1 = l3;
  i0 -= i1;
  j0 = (u64)(i0);
  j1 = 52ull;
  j0 <<= (j1 & 63);
  l1 = j0;
  i0 = l3;
  i1 = 19u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B17;}
  d0 = 1;
  j1 = l1;
  d1 = f64_reinterpret_i64(j1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = p0;
  d2 = l4;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B17:;
  d0 = p0;
  d1 = l4;
  j2 = l1;
  d2 = f64_reinterpret_i64(j2);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 log2_0(f64 p0) {
  u32 l1 = 0, l2 = 0;
  u64 l0 = 0, l3 = 0;
  f64 l4 = 0, l5 = 0, l6 = 0, l7 = 0, l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9, d10;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 0ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B3;}
  j0 = l0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i1 = 1048575u;
  i0 = i0 <= i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 2146435071u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = 4294966273u;
  l2 = i0;
  j0 = l0;
  j1 = 4294967295ull;
  j0 &= j1;
  l0 = j0;
  j1 = 0ull;
  i0 = j0 != j1;
  if (i0) {goto B2;}
  d0 = 0;
  p0 = d0;
  i0 = l1;
  i1 = 1072693248u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  B4:;
  d0 = p0;
  goto Bfunc;
  B3:;
  j0 = l0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 0ull;
  i0 = j0 == j1;
  if (i0) {goto B1;}
  j0 = l0;
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B0;}
  d0 = p0;
  d1 = 18014398509481984;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  j0 = i64_reinterpret_f64(d0);
  l3 = j0;
  j1 = 4294967295ull;
  j0 &= j1;
  l0 = j0;
  j0 = l3;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i0 = 4294966219u;
  l2 = i0;
  B2:;
  i0 = l1;
  i1 = 614242u;
  i0 += i1;
  l1 = i0;
  i1 = 1048575u;
  i0 &= i1;
  i1 = 1072079006u;
  i0 += i1;
  j0 = (u64)(i0);
  j1 = 32ull;
  j0 <<= (j1 & 63);
  j1 = l0;
  j0 |= j1;
  d0 = f64_reinterpret_i64(j0);
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d2 = p0;
  d3 = 0.5;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l4 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  j0 = i64_reinterpret_f64(d0);
  j1 = 18446744069414584320ull;
  j0 &= j1;
  d0 = f64_reinterpret_i64(j0);
  l5 = d0;
  d1 = 1.4426950407214463;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  i1 = l2;
  i2 = l1;
  i3 = 20u;
  i2 >>= (i3 & 31);
  i1 += i2;
  d1 = (f64)(s32)(i1);
  l7 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l8 = d0;
  d1 = l6;
  d2 = l7;
  d3 = l8;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = p0;
  d3 = l5;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d3 = l4;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d3 = p0;
  d4 = p0;
  d5 = 2;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d3, d4);
  p0 = d3;
  d4 = l4;
  d5 = p0;
  d6 = p0;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  l6 = d5;
  d6 = l6;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  p0 = d5;
  d6 = p0;
  d7 = p0;
  d8 = 0.15313837699209373;
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.22222198432149784;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.39999999999409419;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = l6;
  d7 = p0;
  d8 = p0;
  d9 = p0;
  d10 = 0.14798198605116586;
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = 0.1818357216161805;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 0.28571428743662391;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.66666666666667351;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  p0 = d2;
  d3 = 1.4426950407214463;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = p0;
  d4 = l5;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d4 = 1.6751713164886512e-10;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  d0 = -1;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 log10_0(f64 p0) {
  u32 l1 = 0, l2 = 0;
  u64 l0 = 0, l3 = 0;
  f64 l4 = 0, l5 = 0, l6 = 0, l7 = 0, l8 = 0, l9 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9, d10;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 0ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B3;}
  j0 = l0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i1 = 1048575u;
  i0 = i0 <= i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 2146435071u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = 4294966273u;
  l2 = i0;
  j0 = l0;
  j1 = 4294967295ull;
  j0 &= j1;
  l0 = j0;
  j1 = 0ull;
  i0 = j0 != j1;
  if (i0) {goto B2;}
  d0 = 0;
  p0 = d0;
  i0 = l1;
  i1 = 1072693248u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  B4:;
  d0 = p0;
  goto Bfunc;
  B3:;
  j0 = l0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 0ull;
  i0 = j0 == j1;
  if (i0) {goto B1;}
  j0 = l0;
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B0;}
  d0 = p0;
  d1 = 18014398509481984;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  j0 = i64_reinterpret_f64(d0);
  l3 = j0;
  j1 = 4294967295ull;
  j0 &= j1;
  l0 = j0;
  j0 = l3;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i0 = 4294966219u;
  l2 = i0;
  B2:;
  i0 = l2;
  i1 = l1;
  i2 = 614242u;
  i1 += i2;
  l1 = i1;
  i2 = 20u;
  i1 >>= (i2 & 31);
  i0 += i1;
  d0 = (f64)(s32)(i0);
  l4 = d0;
  d1 = 0.30102999566361177;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l5 = d0;
  i1 = l1;
  i2 = 1048575u;
  i1 &= i2;
  i2 = 1072079006u;
  i1 += i2;
  j1 = (u64)(i1);
  j2 = 32ull;
  j1 <<= (j2 & 63);
  j2 = l0;
  j1 |= j2;
  d1 = f64_reinterpret_i64(j1);
  d2 = -1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = p0;
  d3 = p0;
  d4 = 0.5;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  l6 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  j1 = i64_reinterpret_f64(d1);
  j2 = 18446744069414584320ull;
  j1 &= j2;
  d1 = f64_reinterpret_i64(j1);
  l7 = d1;
  d2 = 0.43429448187816888;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l8 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l9 = d0;
  d1 = l8;
  d2 = l5;
  d3 = l9;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = p0;
  d3 = l7;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d3 = l6;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d3 = p0;
  d4 = p0;
  d5 = 2;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d3, d4);
  p0 = d3;
  d4 = l6;
  d5 = p0;
  d6 = p0;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  l5 = d5;
  d6 = l5;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  p0 = d5;
  d6 = p0;
  d7 = p0;
  d8 = 0.15313837699209373;
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.22222198432149784;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.39999999999409419;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = l5;
  d7 = p0;
  d8 = p0;
  d9 = p0;
  d10 = 0.14798198605116586;
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = 0.1818357216161805;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 0.28571428743662391;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.66666666666667351;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  p0 = d2;
  d3 = 0.43429448187816888;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l4;
  d4 = 3.6942390771589308e-13;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = p0;
  d5 = l7;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d5 = 2.5082946711645275e-11;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  d0 = -1;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 __expo2(f64 p0) {
  FUNC_PROLOGUE;
  f64 d0, d1;
  d0 = p0;
  d1 = -1416.0996898839683;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = exp_0(d0);
  d1 = 2.2471164185778949e+307;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 2.2471164185778949e+307;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  FUNC_EPILOGUE;
  return d0;
}

static f64 cosh_0(f64 p0) {
  u32 l0 = 0, l2 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l1 = j0;
  d0 = f64_reinterpret_i64(j0);
  p0 = d0;
  j0 = l1;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l2 = i0;
  i1 = 1072049729u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l2;
  i1 = 1045430271u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l0;
  d1 = p0;
  d2 = 1.3292279957849159e+36;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = 1;
  goto Bfunc;
  B2:;
  i0 = l2;
  i1 = 1082535489u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  d0 = p0;
  d0 = exp_0(d0);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = 1;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  d0 = p0;
  d0 = expm1_0(d0);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  d0 = p0;
  d0 = __expo2(d0);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 sinh_0(f64 p0) {
  u32 l3 = 0;
  u64 l0 = 0;
  f64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f64 d0, d1, d2, d3, d4;
  d0 = -0.5;
  d1 = 0.5;
  d2 = p0;
  j2 = i64_reinterpret_f64(d2);
  l0 = j2;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  d0 = i2 ? d0 : d1;
  l1 = d0;
  j0 = l0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l0 = j0;
  d0 = f64_reinterpret_i64(j0);
  l2 = d0;
  j0 = l0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l3 = i0;
  i1 = 1082535489u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  d0 = l2;
  d0 = expm1_0(d0);
  l2 = d0;
  i0 = l3;
  i1 = 1072693247u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = l3;
  i1 = 1045430272u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  d0 = l1;
  d1 = l2;
  d2 = l2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = l2;
  d3 = l2;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = l2;
  d4 = 1;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B2:;
  d0 = l1;
  d1 = l1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l2;
  d1 = __expo2(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  B1:;
  d0 = p0;
  goto Bfunc;
  B0:;
  d0 = l1;
  d1 = l2;
  d2 = l2;
  d3 = l2;
  d4 = 1;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 tanh_0(f64 p0) {
  u32 l0 = 0, l3 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f32 f1;
  f64 d0, d1, d2, d3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  d0 = f64_reinterpret_i64(j0);
  p0 = d0;
  j0 = l2;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l3 = i0;
  i1 = 1071748075u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  i0 = l3;
  i1 = 1077149697u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  d0 = -0.0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  goto B0;
  B3:;
  i0 = l3;
  i1 = 1070618799u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = expm1_0(d0);
  p0 = d0;
  d1 = p0;
  d2 = 2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p0 = d0;
  goto B0;
  B2:;
  d0 = 1;
  d1 = 2;
  d2 = p0;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d2 = expm1_0(d2);
  d3 = 2;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p0 = d0;
  goto B0;
  B1:;
  i0 = l3;
  i1 = 1048576u;
  i0 = i0 < i1;
  if (i0) {goto B4;}
  d0 = p0;
  d1 = -2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d0 = expm1_0(d0);
  p0 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = p0;
  d2 = 2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p0 = d0;
  goto B0;
  B4:;
  i0 = l0;
  d1 = p0;
  f1 = (*Z_eosio_injectionZ__eosio_f64_demoteZ_fd)(d1);
  f32_store((&M0), (u64)(i0 + 12), f1);
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = p0;
  j2 = l1;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  d0 = i2 ? d0 : d1;
  FUNC_EPILOGUE;
  return d0;
}

static f64 log1p_0(f64 p0) {
  u32 l0 = 0, l2 = 0;
  u64 l1 = 0;
  f64 l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  f32 f1;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9, d10;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l2 = i0;
  j0 = l1;
  j1 = 0ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 1071284857u;
  i0 = i0 <= i1;
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 2146435071u;
  i0 = i0 <= i1;
  if (i0) {goto B3;}
  d0 = p0;
  goto Bfunc;
  B4:;
  i0 = l2;
  i1 = 3220176896u;
  i0 = i0 < i1;
  if (i0) {goto B5;}
  d0 = p0;
  d1 = -1;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B1;}
  d0 = -INFINITY;
  goto Bfunc;
  B5:;
  i0 = l2;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 2034237439u;
  i0 = i0 > i1;
  if (i0) {goto B6;}
  i0 = l2;
  i1 = 2146435072u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  d0 = p0;
  goto Bfunc;
  B6:;
  d0 = 0;
  l3 = d0;
  i0 = l2;
  i1 = 3218259653u;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  d0 = 0;
  l4 = d0;
  goto B2;
  B3:;
  d0 = p0;
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l4 = d0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 614242u;
  i0 += i1;
  l2 = i0;
  i1 = 20u;
  i0 >>= (i1 & 31);
  i1 = 4294966273u;
  i0 += i1;
  l0 = i0;
  d0 = 0;
  l3 = d0;
  i0 = l2;
  i1 = 1129316351u;
  i0 = i0 > i1;
  if (i0) {goto B7;}
  d0 = p0;
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p0;
  d2 = l4;
  d3 = -1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  i2 = l2;
  i3 = 1074790399u;
  i2 = i2 > i3;
  d0 = i2 ? d0 : d1;
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l3 = d0;
  B7:;
  i0 = l2;
  i1 = 1048575u;
  i0 &= i1;
  i1 = 1072079006u;
  i0 += i1;
  j0 = (u64)(i0);
  j1 = 32ull;
  j0 <<= (j1 & 63);
  j1 = l1;
  j2 = 4294967295ull;
  j1 &= j2;
  j0 |= j1;
  d0 = f64_reinterpret_i64(j0);
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  i0 = l0;
  d0 = (f64)(s32)(i0);
  l4 = d0;
  B2:;
  d0 = l4;
  d1 = 0.69314718036912382;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d2 = l3;
  d3 = l4;
  d4 = 1.9082149292705877e-10;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d3 = p0;
  d4 = p0;
  d5 = 2;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d3, d4);
  l4 = d3;
  d4 = p0;
  d5 = p0;
  d6 = 0.5;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  l5 = d4;
  d5 = l4;
  d6 = l4;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  l3 = d5;
  d6 = l3;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  l4 = d5;
  d6 = l4;
  d7 = l4;
  d8 = 0.15313837699209373;
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.22222198432149784;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.39999999999409419;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = l3;
  d7 = l4;
  d8 = l4;
  d9 = l4;
  d10 = 0.14798198605116586;
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = 0.1818357216161805;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 0.28571428743662391;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.66666666666667351;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d3 = l5;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  i0 = l0;
  d1 = p0;
  f1 = (*Z_eosio_injectionZ__eosio_f64_demoteZ_fd)(d1);
  f32_store((&M0), (u64)(i0 + 12), f1);
  d0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 acosh_0(f64 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  f64 d0, d1, d2, d3;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2047u;
  i0 &= i1;
  l0 = i0;
  i1 = 1023u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  d0 = p0;
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d1 = sqrt_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = log1p_0(d0);
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 1048u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = -1;
  d2 = p0;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d2 = sqrt_0(d2);
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = log_0(d0);
  goto Bfunc;
  B1:;
  d0 = p0;
  d0 = log_0(d0);
  d1 = 0.69314718055994529;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 asinh_0(f64 p0) {
  u32 l0 = 0, l2 = 0;
  u64 l1 = 0;
  f64 l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f64 d0, d1, d2, d3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  d0 = f64_reinterpret_i64(j0);
  p0 = d0;
  j0 = l1;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2047u;
  i0 &= i1;
  l2 = i0;
  i1 = 1049u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  d0 = p0;
  d0 = log_0(d0);
  d1 = 0.69314718055994529;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  goto B0;
  B1:;
  i0 = l2;
  i1 = 1024u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 1;
  d2 = p0;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d2 = sqrt_0(d2);
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = log_0(d0);
  p0 = d0;
  goto B0;
  B2:;
  i0 = l2;
  i1 = 997u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l3 = d0;
  d1 = l3;
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d1 = sqrt_0(d1);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = log1p_0(d0);
  p0 = d0;
  goto B0;
  B3:;
  i0 = l0;
  d1 = p0;
  d2 = 1.3292279957849159e+36;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = p0;
  j2 = l1;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  d0 = i2 ? d0 : d1;
  FUNC_EPILOGUE;
  return d0;
}

static f64 atanh_0(f64 p0) {
  u32 l0 = 0, l2 = 0;
  u64 l1 = 0;
  f64 l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f32 f1;
  f64 d0, d1, d2, d3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 9223372036854775807ull;
  j0 &= j1;
  d0 = f64_reinterpret_i64(j0);
  p0 = d0;
  j0 = l1;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2047u;
  i0 &= i1;
  l2 = i0;
  i1 = 1021u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l2;
  i1 = 990u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l2;
  if (i0) {goto B0;}
  i0 = l0;
  d1 = p0;
  f1 = (*Z_eosio_injectionZ__eosio_f64_demoteZ_fd)(d1);
  f32_store((&M0), (u64)(i0 + 12), f1);
  goto B0;
  B2:;
  d0 = p0;
  d1 = 1;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = log1p_0(d0);
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  goto B0;
  B1:;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l3 = d0;
  d1 = l3;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = log1p_0(d0);
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = p0;
  j2 = l1;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  d0 = i2 ? d0 : d1;
  FUNC_EPILOGUE;
  return d0;
}

static f64 __tan(f64 p0, f64 p1, u32 p2) {
  u32 l1 = 0, l2 = 0;
  u64 l0 = 0;
  f64 l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2, j3, j4;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9, d10, d11, d12, d13;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 9223372002495037440ull;
  j0 &= j1;
  j1 = 4604249089280835585ull;
  i0 = j0 < j1;
  l1 = i0;
  if (i0) {goto B1;}
  d0 = 0.78539816339744828;
  d1 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  d2 = p0;
  j3 = l0;
  j4 = 63ull;
  j3 >>= (j4 & 63);
  i3 = (u32)(j3);
  l2 = i3;
  d1 = i3 ? d1 : d2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 3.061616997868383e-17;
  d2 = p1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d2);
  d3 = p1;
  i4 = l2;
  d2 = i4 ? d2 : d3;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d0 = 0;
  p1 = d0;
  goto B0;
  B1:;
  B0:;
  d0 = p0;
  d1 = p0;
  d2 = p0;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  l3 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l4 = d1;
  d2 = 0.33333333333333409;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p1;
  d3 = l3;
  d4 = p1;
  d5 = l4;
  d6 = l3;
  d7 = l3;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  l5 = d6;
  d7 = l5;
  d8 = l5;
  d9 = l5;
  d10 = l5;
  d11 = -1.8558637485527546e-05;
  d10 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d10, d11);
  d11 = 7.8179444293955709e-05;
  d10 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d10, d11);
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = 0.0005880412408202641;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 0.0035920791075913124;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.021869488294859542;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.13333333333320124;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d7 = l3;
  d8 = l5;
  d9 = l5;
  d10 = l5;
  d11 = l5;
  d12 = l5;
  d13 = 2.5907305186363371e-05;
  d12 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d12, d13);
  d13 = 7.1407249138260819e-05;
  d12 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d12, d13);
  d11 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d11, d12);
  d12 = 0.00024646313481846991;
  d11 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d11, d12);
  d10 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d10, d11);
  d11 = 0.0014562094543252903;
  d10 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d10, d11);
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = 0.0088632398235993001;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 0.053968253976226052;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l3 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l5 = d0;
  i0 = l1;
  if (i0) {goto B2;}
  i0 = 1u;
  i1 = p2;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i0 -= i1;
  d0 = (f64)(s32)(i0);
  p1 = d0;
  d1 = p0;
  d2 = l3;
  d3 = l5;
  d4 = l5;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = l5;
  d5 = p1;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  l5 = d1;
  d2 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l5 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = l5;
  i2 = l2;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B2:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B3;}
  d0 = -1;
  d1 = l5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p1 = d0;
  d1 = l5;
  j1 = i64_reinterpret_f64(d1);
  j2 = 18446744069414584320ull;
  j1 &= j2;
  d1 = f64_reinterpret_i64(j1);
  l4 = d1;
  d2 = p1;
  j2 = i64_reinterpret_f64(d2);
  j3 = 18446744069414584320ull;
  j2 &= j3;
  d2 = f64_reinterpret_i64(j2);
  l5 = d2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = l3;
  d3 = l4;
  d4 = p0;
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d3 = l5;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l5 = d0;
  B3:;
  d0 = l5;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 tan_0(f64 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  f64 d0, d1, d2, d3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l1 = i0;
  i1 = 1072243195u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 1044381695u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l0;
  d1 = p0;
  d2 = 7.5231638452626401e-37;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = 1.3292279957849159e+36;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  i3 = l1;
  i4 = 1048576u;
  i3 = i3 < i4;
  d1 = i3 ? d1 : d2;
  f64_store((&M0), (u64)(i0), d1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B2:;
  i0 = l1;
  i1 = 2146435072u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  d0 = p0;
  d1 = 0;
  i2 = 0u;
  d0 = __tan(d0, d1, i2);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  goto Bfunc;
  B0:;
  d0 = p0;
  i1 = l0;
  i0 = __rem_pio2(d0, i1);
  l1 = i0;
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  i2 = l1;
  i3 = 1u;
  i2 &= i3;
  d0 = __tan(d0, d1, i2);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 acos_0(f64 p0) {
  u32 l1 = 0;
  u64 l0 = 0;
  f64 l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l1 = i0;
  i1 = 1072693248u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 3222274048u;
  i0 += i1;
  j1 = l0;
  i1 = (u32)(j1);
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  d0 = 0;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B2:;
  i0 = l1;
  i1 = 1071644671u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  d0 = 1.5707963267948966;
  l2 = d0;
  i0 = l1;
  i1 = 1012924417u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  d0 = 6.123233995736766e-17;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l2 = d1;
  d2 = l2;
  d3 = l2;
  d4 = l2;
  d5 = l2;
  d6 = l2;
  d7 = 3.4793310759602117e-05;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.00079153499428981453;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -0.040055534500679411;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.20121253213486293;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = -0.32556581862240092;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 0.16666666666666666;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = l2;
  d3 = l2;
  d4 = l2;
  d5 = l2;
  d6 = 0.077038150555901935;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -0.68828397160545329;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 2.0209457602335057;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = -2.4033949117344142;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 1.5707963267948966;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B4:;
  j0 = l0;
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B0;}
  d0 = 1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d2 = p0;
  d3 = p0;
  d4 = p0;
  d5 = p0;
  d6 = 3.4793310759602117e-05;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.00079153499428981453;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -0.040055534500679411;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.20121253213486293;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.32556581862240092;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 0.16666666666666666;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d2 = p0;
  d3 = p0;
  d4 = p0;
  d5 = 0.077038150555901935;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -0.68828397160545329;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 2.0209457602335057;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -2.4033949117344142;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = p0;
  d1 = sqrt_0(d1);
  l3 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d2 = l3;
  j2 = i64_reinterpret_f64(d2);
  j3 = 18446744069414584320ull;
  j2 &= j3;
  d2 = f64_reinterpret_i64(j2);
  l2 = d2;
  d3 = l2;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = l3;
  d3 = l2;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l2 = d0;
  B3:;
  d0 = l2;
  goto Bfunc;
  B1:;
  d0 = 3.1415926535897931;
  d1 = 0;
  j2 = l0;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B0:;
  d0 = 1.5707963267948966;
  d1 = p0;
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = 0.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  p0 = d1;
  d1 = sqrt_0(d1);
  l2 = d1;
  d2 = l2;
  d3 = p0;
  d4 = p0;
  d5 = p0;
  d6 = p0;
  d7 = p0;
  d8 = p0;
  d9 = 3.4793310759602117e-05;
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 0.00079153499428981453;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = -0.040055534500679411;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.20121253213486293;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -0.32556581862240092;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.16666666666666666;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = p0;
  d5 = p0;
  d6 = p0;
  d7 = p0;
  d8 = 0.077038150555901935;
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = -0.68828397160545329;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 2.0209457602335057;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -2.4033949117344142;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 1;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -6.123233995736766e-17;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 asin_0(f64 p0) {
  u32 l1 = 0;
  u64 l0 = 0;
  f64 l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f64 d0, d1, d2, d3, d4, d5, d6;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l1 = i0;
  i1 = 1072693248u;
  i0 = i0 < i1;
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 3222274048u;
  i0 += i1;
  j1 = l0;
  i1 = (u32)(j1);
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B3;}
  d0 = 0;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B4:;
  i0 = l1;
  i1 = 1071644671u;
  i0 = i0 > i1;
  if (i0) {goto B5;}
  i0 = l1;
  i1 = 4293918720u;
  i0 += i1;
  i1 = 1044381696u;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  d0 = p0;
  goto Bfunc;
  B5:;
  d0 = 1;
  d1 = p0;
  d1 = fabs_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d2 = p0;
  d3 = p0;
  d4 = p0;
  d5 = p0;
  d6 = 3.4793310759602117e-05;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.00079153499428981453;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -0.040055534500679411;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.20121253213486293;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.32556581862240092;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 0.16666666666666666;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d2 = p0;
  d3 = p0;
  d4 = p0;
  d5 = 0.077038150555901935;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -0.68828397160545329;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 2.0209457602335057;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -2.4033949117344142;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l2 = d0;
  d0 = p0;
  d0 = sqrt_0(d0);
  l3 = d0;
  i0 = l1;
  i1 = 1072640819u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  d0 = 1.5707963267948966;
  d1 = l3;
  d2 = l3;
  d3 = l2;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p0 = d1;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = -6.123233995736766e-17;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p0 = d0;
  goto B0;
  B3:;
  d0 = p0;
  d1 = 1.5707963267948966;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 7.5231638452626401e-37;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B2:;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l3 = d0;
  d1 = l3;
  d2 = l3;
  d3 = l3;
  d4 = l3;
  d5 = l3;
  d6 = 3.4793310759602117e-05;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.00079153499428981453;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -0.040055534500679411;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.20121253213486293;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.32556581862240092;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 0.16666666666666666;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l3;
  d2 = l3;
  d3 = l3;
  d4 = l3;
  d5 = 0.077038150555901935;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -0.68828397160545329;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 2.0209457602335057;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -2.4033949117344142;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  d0 = 0.78539816339744828;
  d1 = l3;
  j1 = i64_reinterpret_f64(d1);
  j2 = 18446744069414584320ull;
  j1 &= j2;
  d1 = f64_reinterpret_i64(j1);
  l4 = d1;
  d2 = l4;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = l3;
  d2 = l3;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = l2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 6.123233995736766e-17;
  d3 = p0;
  d4 = l4;
  d5 = l4;
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d3, d4);
  d4 = l3;
  d5 = l4;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d3, d4);
  p0 = d3;
  d4 = p0;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 0.78539816339744828;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  B0:;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = p0;
  j2 = l0;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  d0 = i2 ? d0 : d1;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 ceil_0(f64 p0) {
  u32 l0 = 0, l2 = 0, l3 = 0;
  u64 l1 = 0;
  f64 l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  d0 = p0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B0;}
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2047u;
  i0 &= i1;
  l2 = i0;
  i1 = 1074u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  d0 = p0;
  d1 = -4503599627370496;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 4503599627370496;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p0;
  d2 = 4503599627370496;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = -4503599627370496;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  j2 = l1;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  l3 = i2;
  d0 = i2 ? d0 : d1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l4 = d0;
  i0 = l2;
  i1 = 1022u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l0;
  d1 = l4;
  f64_store((&M0), (u64)(i0 + 8), d1);
  d0 = -0.0;
  d1 = 1;
  i2 = l3;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B1:;
  d0 = l4;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d0 = l4;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B0;}
  d0 = p0;
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  B0:;
  d0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 frexp_0(f64 p0, u32 p1) {
  u32 l1 = 0, l2 = 0;
  u64 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  f64 d0, d1;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i1 = 2047u;
  i0 &= i1;
  l2 = i0;
  i1 = 2047u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l2;
  if (i0) {goto B2;}
  d0 = p0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B0;}
  d0 = p0;
  d1 = 1.8446744073709552e+19;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = p1;
  d0 = frexp_0(d0, i1);
  p0 = d0;
  i0 = p1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 4294967232u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  d0 = p0;
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = l1;
  i2 = 2047u;
  i1 &= i2;
  i2 = 4294966274u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  j0 = l0;
  j1 = 9227875636482146303ull;
  j0 &= j1;
  j1 = 4602678819172646912ull;
  j0 |= j1;
  d0 = f64_reinterpret_i64(j0);
  p0 = d0;
  B1:;
  d0 = p0;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  d0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 ldexp_0(f64 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i1;
  f64 d0;
  d0 = p0;
  i1 = p1;
  d0 = scalbn_0(d0, i1);
  FUNC_EPILOGUE;
  return d0;
}

static f64 modf_0(f64 p0, u32 p1) {
  u32 l1 = 0, l2 = 0;
  u64 l0 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1, j2;
  f64 d0, d1;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2047u;
  i0 &= i1;
  l1 = i0;
  i1 = 4294966273u;
  i0 += i1;
  l2 = i0;
  i0 = l1;
  i1 = 1075u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = p1;
  d1 = p0;
  f64_store((&M0), (u64)(i0), d1);
  j0 = l0;
  j1 = 4503599627370495ull;
  j0 &= j1;
  i0 = !(j0);
  if (i0) {goto B1;}
  i0 = l2;
  i1 = 1024u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  d0 = p0;
  goto Bfunc;
  B2:;
  i0 = l1;
  i1 = 1022u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p1;
  j1 = l0;
  j2 = 9223372036854775808ull;
  j1 &= j2;
  i64_store((&M0), (u64)(i0), j1);
  d0 = p0;
  goto Bfunc;
  B1:;
  j0 = l0;
  j1 = 9223372036854775808ull;
  j0 &= j1;
  d0 = f64_reinterpret_i64(j0);
  goto Bfunc;
  B0:;
  j0 = 4503599627370495ull;
  i1 = l2;
  j1 = (u64)(i1);
  l3 = j1;
  j0 >>= (j1 & 63);
  j1 = l0;
  j0 &= j1;
  j1 = 0ull;
  i0 = j0 == j1;
  if (i0) {goto B3;}
  i0 = p1;
  j1 = 18442240474082181120ull;
  j2 = l3;
  j1 = (u64)((s64)j1 >> (j2 & 63));
  j2 = l0;
  j1 &= j2;
  l0 = j1;
  i64_store((&M0), (u64)(i0), j1);
  d0 = p0;
  j1 = l0;
  d1 = f64_reinterpret_i64(j1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B3:;
  i0 = p1;
  d1 = p0;
  f64_store((&M0), (u64)(i0), d1);
  j0 = l0;
  j1 = 9223372036854775808ull;
  j0 &= j1;
  d0 = f64_reinterpret_i64(j0);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 trunc_0(f64 p0) {
  u32 l0 = 0, l2 = 0;
  u64 l1 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 52ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2047u;
  i0 &= i1;
  l2 = i0;
  i1 = 1074u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  j0 = 18446744073709551615ull;
  i1 = 1u;
  i2 = l2;
  i3 = 4294966285u;
  i2 += i3;
  i3 = l2;
  i4 = 1023u;
  i3 = i3 < i4;
  i1 = i3 ? i1 : i2;
  j1 = (u64)(i1);
  j0 >>= (j1 & 63);
  l3 = j0;
  j1 = l1;
  j0 &= j1;
  i0 = !(j0);
  if (i0) {goto B0;}
  i0 = l0;
  d1 = p0;
  d2 = 1.3292279957849159e+36;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  f64_store((&M0), (u64)(i0 + 8), d1);
  j0 = l3;
  j1 = 18446744073709551615ull;
  j0 ^= j1;
  j1 = l1;
  j0 &= j1;
  d0 = f64_reinterpret_i64(j0);
  p0 = d0;
  B0:;
  d0 = p0;
  FUNC_EPILOGUE;
  return d0;
}

static f64 erf_0(f64 p0) {
  u32 l2 = 0;
  u64 l0 = 0, l1 = 0;
  f64 l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  f64 d0, d1, d2, d3, d4, d5, d6;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 63ull;
  j0 >>= (j1 & 63);
  l1 = j0;
  j0 = l0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l2 = i0;
  i1 = 2146435072u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  d0 = 1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  i1 = 1u;
  j2 = l1;
  i2 = (u32)(j2);
  i3 = 1u;
  i2 <<= (i3 & 31);
  i1 -= i2;
  d1 = (f64)(s32)(i1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  i0 = l2;
  i1 = 1072365567u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l2;
  i1 = 1043333119u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  d0 = p0;
  d1 = 8;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d2 = 1.0270333367641007;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 0.125;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B2:;
  d0 = 1;
  l3 = d0;
  i0 = l2;
  i1 = 1075314687u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  d0 = 1;
  i1 = l2;
  d2 = p0;
  d1 = erfc2(i1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l3 = d0;
  B3:;
  d0 = l3;
  d1 = l3;
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  j2 = l1;
  i2 = !(j2);
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B1:;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l3 = d0;
  d1 = l3;
  d2 = l3;
  d3 = l3;
  d4 = -2.3763016656650163e-05;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = -0.0057702702964894416;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.02848174957559851;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -0.3250421072470015;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 0.12837916709551256;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l3;
  d2 = l3;
  d3 = l3;
  d4 = l3;
  d5 = l3;
  d6 = -3.9602282787753681e-06;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.00013249473800432164;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.0050813062818757656;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.065022249988767294;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 0.39791722395915535;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 erfc2(u32 p0, f64 p1) {
  f64 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1, j2;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9;
  d0 = p1;
  d0 = fabs_0(d0);
  l0 = d0;
  i0 = p0;
  i1 = 1072955391u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  d0 = 0.15493708848953247;
  d1 = l0;
  d2 = -1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  p1 = d1;
  d2 = p1;
  d3 = p1;
  d4 = p1;
  d5 = p1;
  d6 = p1;
  d7 = -0.0021663755948687908;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.035478304325618236;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -0.11089469428239668;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.31834661990116175;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = -0.37220787603570132;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 0.41485611868374833;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -0.0023621185607526594;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = p1;
  d3 = p1;
  d4 = p1;
  d5 = p1;
  d6 = p1;
  d7 = p1;
  d8 = 0.011984499846799107;
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.013637083912029051;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.12617121980876164;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.071828654414196266;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.54039791770217105;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.10642088040084423;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  d0 = 1;
  d1 = l0;
  d2 = l0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  p1 = d0;
  i0 = p0;
  i1 = 1074191212u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  d0 = p1;
  d1 = p1;
  d2 = -0.060424415214858099;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 6.5702497703192817;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 108.63500554177944;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l1 = d0;
  d0 = p1;
  d1 = p1;
  d2 = p1;
  d3 = p1;
  d4 = p1;
  d5 = p1;
  d6 = p1;
  d7 = -9.8143293441691455;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = -81.287435506306593;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -184.60509290671104;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -162.39666946257347;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = -62.375332450326006;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -10.558626225323291;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -0.69385857270718176;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = -0.0098649440348471482;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l2 = d0;
  d0 = 19.651271667439257;
  l3 = d0;
  d0 = 137.65775414351904;
  l4 = d0;
  d0 = 434.56587747522923;
  l5 = d0;
  d0 = 645.38727173326788;
  l6 = d0;
  d0 = 429.00814002756783;
  l7 = d0;
  goto B1;
  B2:;
  d0 = p1;
  d1 = -22.440952446585818;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 474.52854120695537;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l1 = d0;
  d0 = p1;
  d1 = p1;
  d2 = p1;
  d3 = p1;
  d4 = p1;
  d5 = p1;
  d6 = -483.5191916086514;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -1025.0951316110772;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -637.56644336838963;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = -160.63638485582192;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -17.757954917754752;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -0.79928323768052301;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = -0.0098649429247000993;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l2 = d0;
  d0 = 30.338060743482458;
  l3 = d0;
  d0 = 325.79251299657392;
  l4 = d0;
  d0 = 1536.729586084437;
  l5 = d0;
  d0 = 3199.8582195085955;
  l6 = d0;
  d0 = 2553.0504064331644;
  l7 = d0;
  B1:;
  d0 = -0.5625;
  d1 = l0;
  j1 = i64_reinterpret_f64(d1);
  j2 = 18446744069414584320ull;
  j1 &= j2;
  d1 = f64_reinterpret_i64(j1);
  l8 = d1;
  d2 = l8;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d0 = exp_0(d0);
  d1 = l8;
  d2 = l0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = l0;
  d3 = l8;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = l2;
  d3 = p1;
  d4 = p1;
  d5 = p1;
  d6 = p1;
  d7 = p1;
  d8 = p1;
  d9 = l1;
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = l7;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = l6;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = l5;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = l4;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = l3;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 1;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d1 = exp_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 erfc_0(f64 p0) {
  u32 l1 = 0, l2 = 0;
  u64 l0 = 0;
  f64 l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  f64 d0, d1, d2, d3, d4, d5, d6;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 63ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  j0 = l0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l2 = i0;
  i1 = 2146435072u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  d0 = 1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  i1 = l1;
  i2 = 1u;
  i1 <<= (i2 & 31);
  d1 = (f64)(s32)(i1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  i0 = l2;
  i1 = 1072365567u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = l2;
  i1 = 1013972991u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  d0 = 1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B4:;
  i0 = l2;
  i1 = 1077673983u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  d0 = 2;
  i1 = l2;
  d2 = p0;
  d1 = erfc2(i1, d2);
  p0 = d1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = p0;
  i2 = l1;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B3:;
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l3 = d0;
  d1 = l3;
  d2 = l3;
  d3 = l3;
  d4 = -2.3763016656650163e-05;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = -0.0057702702964894416;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.02848174957559851;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -0.3250421072470015;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 0.12837916709551256;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l3;
  d2 = l3;
  d3 = l3;
  d4 = l3;
  d5 = l3;
  d6 = -3.9602282787753681e-06;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.00013249473800432164;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.0050813062818757656;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.065022249988767294;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 0.39791722395915535;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l3 = d0;
  i0 = l1;
  if (i0) {goto B1;}
  i0 = l2;
  i1 = 1070596095u;
  i0 = i0 <= i1;
  if (i0) {goto B1;}
  d0 = 0.5;
  d1 = p0;
  d2 = -0.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = l3;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  goto Bfunc;
  B2:;
  d0 = 2;
  d1 = 0;
  i2 = l1;
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B1:;
  d0 = 1;
  d1 = l3;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 tgamma_0(f64 p0) {
  u32 l0 = 0, l2 = 0, l3 = 0;
  u64 l1 = 0;
  f64 l4 = 0, l5 = 0, l6 = 0, l7 = 0, l8 = 0, l9 = 0, l10 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  f32 f1;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9, d10, d11, d12, d13;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l1 = j0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 2147483647u;
  i0 &= i1;
  l2 = i0;
  i1 = 2146435072u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = INFINITY;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  i0 = l2;
  i1 = 1016070143u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = 1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B1:;
  j0 = l1;
  j1 = 63ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l3 = i0;
  d0 = p0;
  d0 = floor_0(d0);
  d1 = p0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B13;}
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = f64_reinterpret_i64(0x7ff8000000000000) /* nan:0x8000000000000 */;
  goto Bfunc;
  B14:;
  d0 = p0;
  d1 = 23;
  i0 = (*Z_eosio_injectionZ__eosio_f64_leZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  i0 = !(i0);
  if (i0) {goto B12;}
  B13:;
  i0 = l2;
  i1 = 1080492032u;
  i0 = i0 < i1;
  if (i0) {goto B15;}
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l0;
  d1 = 1.1754943508222875e-38;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  f1 = (*Z_eosio_injectionZ__eosio_f64_demoteZ_fd)(d1);
  f32_store((&M0), (u64)(i0 + 12), f1);
  d0 = p0;
  d0 = floor_0(d0);
  l4 = d0;
  d0 = p0;
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d0 = floor_0(d0);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = 0;
  d1 = -0.0;
  d2 = p0;
  d3 = l4;
  d4 = 0.5;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  i2 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d2, d3);
  d0 = i2 ? d0 : d1;
  goto Bfunc;
  B15:;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = p0;
  i2 = l3;
  d0 = i2 ? d0 : d1;
  l4 = d0;
  d1 = 5.5246800407767296;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l5 = d0;
  d1 = -5.5246800407767296;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l6 = d0;
  d0 = l5;
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = -5.5246800407767296;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l7 = d0;
  d0 = l4;
  d1 = 5.5246800407767296;
  i0 = (*Z_eosio_injectionZ__eosio_f64_gtZ_idd)(d0, d1);
  l2 = i0;
  d0 = l4;
  d1 = 8;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i0 = !(i0);
  if (i0) {goto B17;}
  d0 = l4;
  d1 = l4;
  d2 = l4;
  d3 = l4;
  d4 = l4;
  d5 = l4;
  d6 = l4;
  d7 = l4;
  d8 = l4;
  d9 = l4;
  d10 = l4;
  d11 = l4;
  d12 = l4;
  d13 = 0;
  d12 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d12, d13);
  l8 = d12;
  d13 = 1;
  d12 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d12, d13);
  d11 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d11, d12);
  d12 = 66;
  d11 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d11, d12);
  d10 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d10, d11);
  d11 = 1925;
  d10 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d10, d11);
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = 32670;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 357423;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 2637558;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 13339535;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 45995730;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 105258076;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 150917976;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 120543840;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 39916800;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l9 = d0;
  d0 = l4;
  d1 = l4;
  d2 = l4;
  d3 = l4;
  d4 = l4;
  d5 = l4;
  d6 = l4;
  d7 = l4;
  d8 = l4;
  d9 = l4;
  d10 = l4;
  d11 = l4;
  d12 = l8;
  d13 = 2.5066282746310002;
  d12 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d12, d13);
  d11 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d11, d12);
  d12 = 210.82427775157936;
  d11 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d11, d12);
  d10 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d10, d11);
  d11 = 8071.6720023658163;
  d10 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d10, d11);
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = 186056.26539522348;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 2876370.6289353725;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 31426415.585400194;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 248874557.86205417;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 1439720407.3117216;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 6039542586.3520279;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 17921034426.037209;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 35711959237.355667;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 42919803642.649101;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 23531376880.410759;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l10 = d0;
  goto B16;
  B17:;
  d0 = 0;
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l8 = d0;
  d1 = 0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 39916800;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 120543840;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 150917976;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 105258076;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 45995730;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 13339535;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 2637558;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 357423;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 32670;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 1925;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 66;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l9 = d0;
  d0 = l8;
  d1 = 23531376880.410759;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 42919803642.649101;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 35711959237.355667;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 17921034426.037209;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 6039542586.3520279;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 1439720407.3117216;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 248874557.86205417;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 31426415.585400194;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 2876370.6289353725;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 186056.26539522348;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 8071.6720023658163;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 210.82427775157936;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = 2.5066282746310002;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l10 = d0;
  B16:;
  d0 = l7;
  d1 = l6;
  i2 = l2;
  d0 = i2 ? d0 : d1;
  l7 = d0;
  d0 = l4;
  d1 = -0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l8 = d0;
  d0 = l10;
  d1 = l9;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d1 = l5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  d1 = exp_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  d0 = p0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B2;}
  d0 = l4;
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d1 = floor_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  p0 = d0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d1 = 4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l9 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B10;}
  i0 = 2147483648u;
  l2 = i0;
  goto B9;
  B12:;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B8;}
  i0 = 2147483648u;
  l2 = i0;
  goto B7;
  B11:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = 8.9884656743115795e+307;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B10:;
  d0 = l9;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  l2 = i0;
  B9:;
  d0 = p0;
  i1 = l2;
  i2 = 1u;
  i1 += i2;
  i2 = 2u;
  i1 = I32_DIV_S(i1, i2);
  l2 = i1;
  d1 = (f64)(s32)(i1);
  d2 = 0.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = 3.1415926535897931;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  i0 = l2;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = l2;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l2;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  d0 = p0;
  d1 = 0;
  d0 = __cos(d0, d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  p0 = d0;
  goto B3;
  B8:;
  d0 = p0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  l2 = i0;
  B7:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  i1 = 3u;
  i0 <<= (i1 & 31);
  i1 = 38616u;
  i0 += i1;
  d0 = f64_load((&M0), (u64)(i0));
  goto Bfunc;
  B6:;
  d0 = p0;
  d1 = 0;
  d0 = __cos(d0, d1);
  p0 = d0;
  goto B3;
  B5:;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = 0;
  i2 = 0u;
  d0 = __sin(d0, d1, i2);
  p0 = d0;
  goto B3;
  B4:;
  d0 = p0;
  d1 = 0;
  i2 = 0u;
  d0 = __sin(d0, d1, i2);
  p0 = d0;
  B3:;
  d0 = -3.1415926535897931;
  d1 = l6;
  d2 = l4;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l6 = d0;
  d0 = l8;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  l8 = d0;
  d0 = l7;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  l7 = d0;
  B2:;
  d0 = l5;
  d1 = l8;
  d2 = 0.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = pow_0(d0, d1);
  p0 = d0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  d0 = p0;
  d1 = p0;
  d2 = l6;
  d3 = l7;
  d4 = 6.0246800407767296;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = l6;
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = l5;
  d3 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 __lgamma_r(f64 p0, u32 p1) {
  u32 l1 = 0, l2 = 0, l5 = 0;
  u64 l0 = 0;
  f64 l3 = 0, l4 = 0, l6 = 0, l7 = 0, l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  f32 f1, f2;
  f64 d0, d1, d2, d3, d4, d5, d6, d7, 
      d8, d9, d10;
  i0 = p1;
  i1 = 1u;
  i32_store((&M0), (u64)(i0), i1);
  d0 = p0;
  j0 = i64_reinterpret_f64(d0);
  l0 = j0;
  j1 = 32ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  l1 = i0;
  i1 = 2147483647u;
  i0 &= i1;
  l2 = i0;
  i1 = 2146435072u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  d0 = p0;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  goto Bfunc;
  B0:;
  i0 = l2;
  i1 = 999292927u;
  i0 = i0 > i1;
  if (i0) {goto B19;}
  j0 = l0;
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B18;}
  d0 = p0;
  d0 = log_0(d0);
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  goto Bfunc;
  B19:;
  j0 = l0;
  j1 = 18446744073709551615ull;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B17;}
  i0 = l1;
  i1 = 1072693247u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B16;}
  goto B15;
  B18:;
  i0 = p1;
  i1 = 4294967295u;
  i32_store((&M0), (u64)(i0), i1);
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d0 = log_0(d0);
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  goto Bfunc;
  B17:;
  d0 = p0;
  d1 = -0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l3 = d0;
  d1 = l3;
  d1 = floor_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l3 = d0;
  d1 = l3;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l3 = d0;
  d1 = 4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l4 = d0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B21;}
  i0 = 2147483648u;
  l5 = i0;
  goto B20;
  B21:;
  d0 = l4;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  l5 = i0;
  B20:;
  d0 = l3;
  i1 = l5;
  i2 = 1u;
  i1 += i2;
  i2 = 2u;
  i1 = I32_DIV_S(i1, i2);
  l5 = i1;
  f1 = (f32)(s32)(i1);
  f2 = -0.5;
  f1 = (*Z_eosio_injectionZ__eosio_f32_mulZ_fff)(f1, f2);
  d1 = (*Z_eosio_injectionZ__eosio_f32_promoteZ_df)(f1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 3.1415926535897931;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l3 = d0;
  i0 = l5;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B26;}
  i0 = l5;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B25;}
  i0 = l5;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B24;}
  d0 = 0;
  l4 = d0;
  d0 = l3;
  d1 = 0;
  d0 = __cos(d0, d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  l3 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B23;}
  goto B22;
  B26:;
  d0 = 0;
  l4 = d0;
  d0 = l3;
  d1 = 0;
  d0 = __cos(d0, d1);
  l3 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B23;}
  goto B22;
  B25:;
  d0 = 0;
  l4 = d0;
  d0 = l3;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  d1 = 0;
  i2 = 0u;
  d0 = __sin(d0, d1, i2);
  l3 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B22;}
  goto B23;
  B24:;
  d0 = 0;
  l4 = d0;
  d0 = l3;
  d1 = 0;
  i2 = 0u;
  d0 = __sin(d0, d1, i2);
  l3 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B22;}
  B23:;
  d0 = 1;
  d1 = p0;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  goto Bfunc;
  B22:;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  p0 = d0;
  d0 = l3;
  d1 = l4;
  i0 = (*Z_eosio_injectionZ__eosio_f64_gtZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  if (i0) {goto B28;}
  i0 = p1;
  i1 = 4294967295u;
  i32_store((&M0), (u64)(i0), i1);
  goto B27;
  B28:;
  d0 = l3;
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  l3 = d0;
  B27:;
  d0 = 3.1415926535897931;
  d1 = l3;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  d0 = log_0(d0);
  l4 = d0;
  i0 = l1;
  i1 = 1072693247u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B15;}
  B16:;
  i0 = l1;
  i1 = 1073741824u;
  i0 = i0 == i1;
  if (i0) {goto B14;}
  i0 = l1;
  i1 = 1072693248u;
  i0 = i0 != i1;
  if (i0) {goto B13;}
  goto B14;
  B15:;
  i0 = l1;
  i1 = 3220176896u;
  i0 = i0 == i1;
  if (i0) {goto B14;}
  i0 = l1;
  i1 = 3221225472u;
  i0 = i0 != i1;
  if (i0) {goto B13;}
  B14:;
  j0 = l0;
  i0 = (u32)(j0);
  i0 = !(i0);
  if (i0) {goto B12;}
  B13:;
  i0 = l2;
  i1 = 1073741823u;
  i0 = i0 > i1;
  if (i0) {goto B29;}
  i0 = l2;
  i1 = 1072483532u;
  i0 = i0 > i1;
  if (i0) {goto B11;}
  d0 = p0;
  d0 = log_0(d0);
  d0 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d0);
  l6 = d0;
  d0 = 1;
  l3 = d0;
  i0 = l2;
  i1 = 1072130371u;
  i0 = i0 > i1;
  if (i0) {goto B10;}
  i0 = l2;
  i1 = 1070442080u;
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  d0 = p0;
  d1 = -0.46163214496836225;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l3 = d0;
  goto B5;
  B29:;
  i0 = l2;
  i1 = 1075838975u;
  i0 = i0 > i1;
  if (i0) {goto B9;}
  d0 = 1;
  l6 = d0;
  d0 = p0;
  d1 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_truncZ_dd)(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  l3 = d0;
  d1 = l3;
  d2 = l3;
  d3 = l3;
  d4 = l3;
  d5 = l3;
  d6 = l3;
  d7 = 3.1947532658410087e-05;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.0018402845140733772;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.026642270303363861;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.14635047265246445;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.32577879640893098;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 0.21498241596060885;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -0.077215664901532866;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l3;
  d2 = l3;
  d3 = l3;
  d4 = l3;
  d5 = l3;
  d6 = l3;
  d7 = 7.3266843074462564e-06;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.0007779424963818936;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.01864591917156529;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.17193386563280308;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.72193554756713807;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 1.3920053346762105;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l7 = d0;
  d0 = l3;
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l8 = d0;
  d0 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_absZ_dd)(d0);
  d1 = 2147483648;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B8;}
  i0 = 2147483648u;
  p1 = i0;
  goto B7;
  B12:;
  d0 = 0;
  p0 = d0;
  goto B1;
  B11:;
  i0 = l2;
  i1 = 1073460418u;
  i0 = i0 <= i1;
  if (i0) {goto B6;}
  d0 = 2;
  l3 = d0;
  d0 = 0;
  l6 = d0;
  B10:;
  d0 = l6;
  d1 = l3;
  d2 = p0;
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  l3 = d1;
  d2 = l3;
  d3 = l3;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  p0 = d2;
  d3 = p0;
  d4 = p0;
  d5 = p0;
  d6 = p0;
  d7 = 2.5214456545125733e-05;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.00022086279071390839;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.0011927076318336207;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.0073855508608140288;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.067352301053129268;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 0.077215664901532866;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = p0;
  d4 = p0;
  d5 = p0;
  d6 = p0;
  d7 = p0;
  d8 = 4.4864094961891516e-05;
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.00010801156724758394;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.00051006979215351134;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.0028905138367341563;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.020580808432516733;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.32246703342411359;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = l3;
  d3 = -0.5;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  goto B1;
  B9:;
  d0 = p0;
  d0 = log_0(d0);
  l6 = d0;
  i0 = l2;
  i1 = 1133510655u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  d0 = 1;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l3 = d0;
  d1 = l3;
  d2 = l3;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l3 = d1;
  d2 = l3;
  d3 = l3;
  d4 = l3;
  d5 = l3;
  d6 = -0.0016309293409657527;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.00083633991899628214;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -0.00059518755745033996;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.00079365055864301956;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.0027777777772877554;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = 0.083333333333332968;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = 0.41893853320467273;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = p0;
  d2 = -0.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = l6;
  d3 = -1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  goto B1;
  B8:;
  d0 = p0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_trunc_i32sZ_id)(d0);
  p1 = i0;
  B7:;
  d0 = l8;
  d1 = l7;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  i0 = p1;
  i1 = 4294967293u;
  i0 += i1;
  p1 = i0;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = p1;
  switch (i0) {
    case 0: goto B30;
    case 1: goto B31;
    case 2: goto B32;
    case 3: goto B33;
    case 4: goto B34;
    default: goto B30;
  }
  B34:;
  d0 = l3;
  d1 = 6;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l6 = d0;
  B33:;
  d0 = l3;
  d1 = 5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l6;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  B32:;
  d0 = l3;
  d1 = 4;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l6;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  B31:;
  d0 = l3;
  d1 = 3;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = l6;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  l6 = d0;
  B30:;
  d0 = p0;
  d1 = l3;
  d2 = 2;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d2 = l6;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d1 = log_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  goto B1;
  B6:;
  i0 = l2;
  i1 = 1072936132u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  d0 = p0;
  d1 = -1.4616321449683622;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  l3 = d0;
  d0 = 0;
  l6 = d0;
  B5:;
  d0 = l6;
  d1 = l3;
  d2 = l3;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  p0 = d1;
  d2 = l3;
  d3 = p0;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  p0 = d2;
  d3 = p0;
  d4 = p0;
  d5 = p0;
  d6 = 0.00031563207090362595;
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = -0.0014034646998923284;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 0.0061005387024629133;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = -0.032788541075985965;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 0.48383612272381005;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = -3.6386769970395054e-18;
  d3 = p0;
  d4 = p0;
  d5 = p0;
  d6 = p0;
  d7 = p0;
  d8 = -0.00031275416837512086;
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = 0.00088108188243765401;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = -0.0036845201678113826;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.017970675081182039;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = -0.14758772299459391;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d5 = l3;
  d6 = p0;
  d7 = p0;
  d8 = p0;
  d9 = p0;
  d10 = 0.00033552919263551907;
  d9 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d9, d10);
  d10 = -0.00053859530535674055;
  d9 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d9, d10);
  d8 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d8, d9);
  d9 = 0.0022596478090061247;
  d8 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d8, d9);
  d7 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d7, d8);
  d8 = -0.010314224129834144;
  d7 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d7, d8);
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.064624940239133385;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d1, d2);
  d2 = -0.12148629053584961;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  goto B1;
  B4:;
  d0 = p0;
  d1 = l6;
  d2 = -1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  p0 = d0;
  goto B1;
  B3:;
  d0 = p0;
  d1 = -1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  d0 = 0;
  l6 = d0;
  B2:;
  d0 = l6;
  d1 = p0;
  d2 = p0;
  d3 = p0;
  d4 = p0;
  d5 = p0;
  d6 = p0;
  d7 = 0.013381091853678766;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.22896372806469245;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.97771752796337275;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 1.4549225013723477;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 0.63282706402509337;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = -0.077215664901532866;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d2 = p0;
  d3 = p0;
  d4 = p0;
  d5 = p0;
  d6 = p0;
  d7 = 0.0032170924228242391;
  d6 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d6, d7);
  d7 = 0.10422264559336913;
  d6 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d6, d7);
  d5 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d5, d6);
  d6 = 0.76928515045667278;
  d5 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d5, d6);
  d4 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d4, d5);
  d5 = 2.128489763798934;
  d4 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d4, d5);
  d3 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d3, d4);
  d4 = 2.4559779371304113;
  d3 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d3, d4);
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d3 = 1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d1, d2);
  d2 = p0;
  d3 = -0.5;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  p0 = d0;
  B1:;
  d0 = l4;
  d1 = p0;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d1 = p0;
  j2 = l0;
  j3 = 0ull;
  i2 = (u64)((s64)j2 < (s64)j3);
  d0 = i2 ? d0 : d1;
  Bfunc:;
  FUNC_EPILOGUE;
  return d0;
}

static f64 lgamma_0(f64 p0) {
  FUNC_PROLOGUE;
  u32 i1;
  f64 d0;
  d0 = p0;
  i1 = 5616u;
  d0 = __lgamma_r(d0, i1);
  FUNC_EPILOGUE;
  return d0;
}

static u32 mp_math_isclose(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  f64 l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i3 = 4u;
  i4 = 38832u;
  i5 = l0;
  mp_arg_parse_all(i0, i1, i2, i3, i4, i5);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  d0 = mp_obj_get_float(i0);
  l1 = d0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  d0 = mp_obj_get_float(i0);
  l2 = d0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l3 = d0;
  goto B0;
  B1:;
  d0 = 1.0000000000000001e-09;
  l3 = d0;
  B0:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  d0 = mp_obj_get_float(i0);
  l4 = d0;
  d0 = l3;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  if (i0) {goto B3;}
  d0 = l4;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  i0 = !(i0);
  if (i0) {goto B3;}
  d0 = l1;
  d1 = l2;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B4;}
  d0 = l1;
  d1 = l2;
  d0 = (*Z_eosio_injectionZ__eosio_f64_subZ_ddd)(d0, d1);
  d0 = fabs_0(d0);
  l5 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 == j1;
  if (i0) {goto B2;}
  d0 = l5;
  d1 = l4;
  i0 = (*Z_eosio_injectionZ__eosio_f64_leZ_idd)(d0, d1);
  if (i0) {goto B4;}
  d0 = l5;
  d1 = l1;
  d2 = l3;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d1 = fabs_0(d1);
  i0 = (*Z_eosio_injectionZ__eosio_f64_leZ_idd)(d0, d1);
  if (i0) {goto B4;}
  d0 = l5;
  d1 = l2;
  d2 = l3;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d1 = fabs_0(d1);
  i0 = (*Z_eosio_injectionZ__eosio_f64_leZ_idd)(d0, d1);
  i0 = !(i0);
  if (i0) {goto B2;}
  B4:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  goto Bfunc;
  B3:;
  math_error();
  UNREACHABLE;
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void math_error(void) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 10600u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static u32 mp_math_sqrt(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = sqrt_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_pow(u32 p0, u32 p1) {
  u64 l3 = 0;
  f64 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  f64 d0, d1;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  i1 = p1;
  d1 = mp_obj_get_float(i1);
  l1 = d1;
  d0 = pow_0(d0, d1);
  l2 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l3 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  d0 = l1;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l3;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l2;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_exp(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = exp_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_expm1(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = expm1_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_log(u32 p0, u32 p1) {
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  f64 d0, d1;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_leZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  d0 = l0;
  d0 = log_0(d0);
  l0 = d0;
  i0 = p0;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  d0 = mp_obj_get_float(i0);
  l1 = d0;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_leZ_idd)(d0, d1);
  i1 = 1u;
  i0 ^= i1;
  i0 = !(i0);
  if (i0) {goto B1;}
  d0 = l1;
  d1 = 1;
  i0 = (*Z_eosio_injectionZ__eosio_f64_eqZ_idd)(d0, d1);
  if (i0) {goto B0;}
  d0 = l0;
  d1 = l1;
  d1 = log_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_divZ_ddd)(d0, d1);
  l0 = d0;
  B2:;
  d0 = l0;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B1:;
  math_error();
  UNREACHABLE;
  B0:;
  i0 = 31692u;
  i1 = 14237u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_log2(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = log2_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_log10(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = log10_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_cosh(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = cosh_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_sinh(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = sinh_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_tanh(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = tanh_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_acosh(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = acosh_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_asinh(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = asinh_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_atanh(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = atanh_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_cos(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = cos_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_sin(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = sin_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_tan(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = tan_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_acos(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = acos_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_asin(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = asin_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_atan(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = atan_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_atan2(u32 p0, u32 p1) {
  u64 l3 = 0;
  f64 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  f64 d0, d1;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  i1 = p1;
  d1 = mp_obj_get_float(i1);
  l1 = d1;
  d0 = atan2_0(d0, d1);
  l2 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l3 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  d0 = l1;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l3;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l2;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_ceil(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  d0 = ceil_0(d0);
  i0 = mp_obj_new_int_from_float(d0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_copysign(u32 p0, u32 p1) {
  u64 l3 = 0;
  f64 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  f64 d0, d1;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  i1 = p1;
  d1 = mp_obj_get_float(i1);
  l1 = d1;
  d0 = copysign_0(d0, d1);
  l2 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l3 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  d0 = l1;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l3;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l2;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_fabs(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = fabs_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_floor(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  d0 = floor_0(d0);
  i0 = mp_obj_new_int_from_float(d0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_fmod(u32 p0, u32 p1) {
  u64 l3 = 0;
  f64 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  f64 d0, d1;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  i1 = p1;
  d1 = mp_obj_get_float(i1);
  l1 = d1;
  d0 = fmod_0(d0, d1);
  l2 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l3 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  d0 = l1;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l3;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l2;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_frexp(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  f64 d1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p0;
  d1 = mp_obj_get_float(i1);
  i2 = l0;
  i3 = 12u;
  i2 += i3;
  d1 = frexp_0(d1, i2);
  i1 = mp_obj_new_float(d1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_ldexp(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  i1 = p1;
  i1 = mp_obj_get_int(i1);
  d0 = ldexp_0(d0, i1);
  i0 = mp_obj_new_float(d0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_modf(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  f64 d1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = p0;
  d1 = mp_obj_get_float(i1);
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  d1 = modf_0(d1, i2);
  i1 = mp_obj_new_float(d1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  i1 = mp_obj_new_float(d1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = 2u;
  i1 = l0;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_isfinite(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j2, j3;
  f64 d2;
  i0 = 14u;
  i1 = 30u;
  i2 = p0;
  d2 = mp_obj_get_float(i2);
  j2 = i64_reinterpret_f64(d2);
  j3 = 9218868437227405312ull;
  j2 &= j3;
  j3 = 9218868437227405312ull;
  i2 = j2 == j3;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_isinf(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j2, j3;
  f64 d2;
  i0 = 30u;
  i1 = 14u;
  i2 = p0;
  d2 = mp_obj_get_float(i2);
  j2 = i64_reinterpret_f64(d2);
  j3 = 9223372036854775807ull;
  j2 &= j3;
  j3 = 9218868437227405312ull;
  i2 = j2 == j3;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_isnan(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j2, j3;
  f64 d2;
  i0 = 14u;
  i1 = 30u;
  i2 = p0;
  d2 = mp_obj_get_float(i2);
  j2 = i64_reinterpret_f64(d2);
  j3 = 9223372036854775807ull;
  j2 &= j3;
  j3 = 9218868437227405313ull;
  i2 = j2 < j3;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_trunc(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  d0 = trunc_0(d0);
  i0 = mp_obj_new_int_from_float(d0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_radians(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  f64 d0, d1;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  d1 = 0.017453292519943295;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i0 = mp_obj_new_float(d0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_degrees(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  f64 d0, d1;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  d1 = 57.295779513082323;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i0 = mp_obj_new_float(d0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_erf(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = erf_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_erfc(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = erfc_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_gamma(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = tgamma_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_math_lgamma(u32 p0) {
  u64 l2 = 0;
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  f64 d0;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  d0 = lgamma_0(d0);
  l1 = d0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  l2 = j0;
  j1 = 9218868437227405313ull;
  i0 = j0 < j1;
  if (i0) {goto B2;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 > j1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  j0 = l2;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  d0 = l0;
  j0 = i64_reinterpret_f64(d0);
  j1 = 9223372036854775807ull;
  j0 &= j1;
  j1 = 9218868437227405312ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  B1:;
  d0 = l1;
  i0 = mp_obj_new_float(d0);
  goto Bfunc;
  B0:;
  math_error();
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_cmath_phase(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0, d1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  mp_obj_get_complex(i0, i1, i2);
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0));
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  d0 = atan2_0(d0, d1);
  i0 = mp_obj_new_float(d0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_cmath_polar(u32 p0) {
  u32 l0 = 0;
  f64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  f64 d1, d2, d3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_obj_get_complex(i0, i1, i2);
  i0 = l0;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 24));
  l1 = d1;
  d2 = l1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2 + 16));
  l1 = d2;
  d3 = l1;
  d2 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d2, d3);
  d1 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d1, d2);
  d1 = sqrt_0(d1);
  i1 = mp_obj_new_float(d1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 16));
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2 + 24));
  d1 = atan2_0(d1, d2);
  i1 = mp_obj_new_float(d1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_cmath_rect(u32 p0, u32 p1) {
  f64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  f64 d0, d1, d2;
  i0 = p0;
  d0 = mp_obj_get_float(i0);
  l0 = d0;
  i1 = p1;
  d1 = mp_obj_get_float(i1);
  l1 = d1;
  d1 = cos_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l0;
  d2 = l1;
  d2 = sin_0(d2);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i0 = mp_obj_new_complex(d0, d1);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_cmath_exp(u32 p0) {
  u32 l0 = 0;
  f64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  mp_obj_get_complex(i0, i1, i2);
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  d0 = exp_0(d0);
  l1 = d0;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  d1 = cos_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l1;
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2));
  d2 = sin_0(d2);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i0 = mp_obj_new_complex(d0, d1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_cmath_log(u32 p0) {
  u32 l0 = 0;
  f64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  mp_obj_get_complex(i0, i1, i2);
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l1 = d0;
  d1 = l1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  l1 = d1;
  d2 = l1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = log_0(d0);
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2 + 8));
  d1 = atan2_0(d1, d2);
  i0 = mp_obj_new_complex(d0, d1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_cmath_log10(u32 p0) {
  u32 l0 = 0;
  f64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  mp_obj_get_complex(i0, i1, i2);
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l1 = d0;
  d1 = l1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  l1 = d1;
  d2 = l1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d0 = log10_0(d0);
  d1 = 0.5;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2 + 8));
  d1 = atan2_0(d1, d2);
  d2 = 0.43429448190325182;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i0 = mp_obj_new_complex(d0, d1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_cmath_sqrt(u32 p0) {
  u32 l0 = 0;
  f64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  mp_obj_get_complex(i0, i1, i2);
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  l1 = d0;
  d1 = l1;
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  l1 = d1;
  d2 = l1;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d0 = (*Z_eosio_injectionZ__eosio_f64_addZ_ddd)(d0, d1);
  d1 = 0.25;
  d0 = pow_0(d0, d1);
  l1 = d0;
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2 + 8));
  d1 = atan2_0(d1, d2);
  d2 = 0.5;
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  l2 = d1;
  d1 = cos_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  d1 = l1;
  d2 = l2;
  d2 = sin_0(d2);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i0 = mp_obj_new_complex(d0, d1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_cmath_cos(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  mp_obj_get_complex(i0, i1, i2);
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  d0 = cos_0(d0);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  d1 = cosh_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  d1 = sin_0(d1);
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2));
  d2 = sinh_0(d2);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  d1 = (*Z_eosio_injectionZ__eosio_f64_negZ_dd)(d1);
  i0 = mp_obj_new_complex(d0, d1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_cmath_sin(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  mp_obj_get_complex(i0, i1, i2);
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 8));
  d0 = sin_0(d0);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1));
  d1 = cosh_0(d1);
  d0 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d0, d1);
  i1 = l0;
  d1 = f64_load((&M0), (u64)(i1 + 8));
  d1 = cos_0(d1);
  i2 = l0;
  d2 = f64_load((&M0), (u64)(i2));
  d2 = sinh_0(d2);
  d1 = (*Z_eosio_injectionZ__eosio_f64_mulZ_ddd)(d1, d2);
  i0 = mp_obj_new_complex(d0, d1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_micropython_pystack_use(void) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5132));
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5124));
  i0 -= i1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_micropython_kbd_intr(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  mp_hal_set_interrupt_char(i0);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_micropython_schedule(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  i0 = mp_sched_schedule(i0, i1);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 32352u;
  i1 = 10618u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 struct_calcsize(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_str_get_str(i0);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = calc_size_items(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 calc_size_items(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load8_s((&M0), (u64)(i0));
  l1 = i0;
  i1 = 4294967236u;
  i0 += i1;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 64u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l1;
  i1 = 33u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = 62u;
  l1 = i0;
  B4:;
  i0 = l0;
  i1 = p0;
  i2 = 1u;
  i1 += i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 1));
  l3 = i0;
  i1 = 255u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = l1;
  l3 = i0;
  i0 = p0;
  l2 = i0;
  i0 = 64u;
  l1 = i0;
  i0 = l3;
  i1 = 255u;
  i0 &= i1;
  if (i0) {goto B1;}
  B2:;
  i0 = 0u;
  p0 = i0;
  i0 = 0u;
  l4 = i0;
  goto B0;
  B1:;
  i0 = 0u;
  l4 = i0;
  i0 = 0u;
  p0 = i0;
  L5: vm_checktime();
    i0 = 1u;
    l5 = i0;
    i0 = l3;
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 24u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    i0 = unichar_isdigit(i0);
    i0 = !(i0);
    if (i0) {goto B6;}
    i0 = l0;
    i1 = 12u;
    i0 += i1;
    i0 = get_fmt_num(i0);
    l5 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    l2 = i0;
    B6:;
    i0 = l2;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l3 = i0;
    i1 = 115u;
    i0 = i0 != i1;
    if (i0) {goto B8;}
    i0 = l5;
    i1 = p0;
    i0 += i1;
    p0 = i0;
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    goto B7;
    B8:;
    i0 = l1;
    i1 = l3;
    i2 = 24u;
    i1 <<= (i2 & 31);
    i2 = 24u;
    i1 = (u32)((s32)i1 >> (i2 & 31));
    i2 = l0;
    i3 = 8u;
    i2 += i3;
    i0 = mp_binary_get_size(i0, i1, i2);
    l6 = i0;
    i0 = l5;
    i0 = !(i0);
    if (i0) {goto B9;}
    i0 = 0u;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 8));
    l7 = i1;
    i0 -= i1;
    l8 = i0;
    i0 = l5;
    l3 = i0;
    L10: vm_checktime();
      i0 = p0;
      i1 = l7;
      i0 += i1;
      i1 = 4294967295u;
      i0 += i1;
      i1 = l8;
      i0 &= i1;
      i1 = l6;
      i0 += i1;
      p0 = i0;
      i0 = l3;
      i1 = 4294967295u;
      i0 += i1;
      l3 = i0;
      if (i0) {goto L10;}
    B9:;
    i0 = l5;
    i1 = l4;
    i0 += i1;
    l4 = i0;
    B7:;
    i0 = l0;
    i1 = l2;
    i2 = 1u;
    i1 += i2;
    l6 = i1;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = l2;
    i0 = i32_load8_u((&M0), (u64)(i0 + 1));
    l3 = i0;
    i0 = l6;
    l2 = i0;
    i0 = l3;
    if (i0) {goto L5;}
  B0:;
  i0 = p1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  FUNC_EPILOGUE;
  return i0;
}

static u32 struct_unpack_from(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_str_get_str(i0);
  l1 = i0;
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i0 = calc_size_items(i0, i1);
  l2 = i0;
  i0 = l1;
  i0 = i32_load8_s((&M0), (u64)(i0));
  l3 = i0;
  i1 = 4294967236u;
  i0 += i1;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = l3;
  i1 = 64u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = l3;
  i1 = 33u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = 62u;
  l3 = i0;
  B2:;
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  goto B0;
  B1:;
  i0 = 64u;
  l3 = i0;
  B0:;
  i0 = l2;
  i1 = 0u;
  i0 = mp_obj_new_tuple(i0, i1);
  l4 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  l5 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l6 = i0;
  i0 = l5;
  l7 = i0;
  i0 = p0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B5;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_get_int(i0);
  p1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B6;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  i1 = p1;
  i0 += i1;
  p1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B4;}
  B6:;
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = p1;
  i1 += i2;
  l7 = i1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  B5:;
  i0 = l7;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 28));
  i0 += i1;
  i1 = l5;
  i2 = l6;
  i1 += i2;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l4;
  i1 = 12u;
  i0 += i1;
  l8 = i0;
  i0 = l4;
  i1 = 8u;
  i0 += i1;
  l9 = i0;
  i0 = 0u;
  l10 = i0;
  L8: vm_checktime();
    i0 = l1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    i0 = unichar_isdigit(i0);
    i0 = !(i0);
    if (i0) {goto B11;}
    i0 = 0u;
    p1 = i0;
    L12: vm_checktime();
      i0 = l1;
      i1 = p1;
      i0 += i1;
      l5 = i0;
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      p0 = i0;
      p1 = i0;
      i0 = l5;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_s((&M0), (u64)(i0));
      i0 = unichar_isdigit(i0);
      if (i0) {goto L12;}
    i0 = l1;
    i1 = p0;
    i2 = 10u;
    i3 = 0u;
    i0 = mp_parse_num_integer(i0, i1, i2, i3);
    i1 = 1u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    l6 = i0;
    i0 = l1;
    i1 = p0;
    i0 += i1;
    l1 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p1 = i0;
    i1 = 115u;
    i0 = i0 == i1;
    if (i0) {goto B10;}
    goto B9;
    B11:;
    i0 = 1u;
    l6 = i0;
    i0 = l1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p1 = i0;
    i1 = 115u;
    i0 = i0 != i1;
    if (i0) {goto B9;}
    B10:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    i1 = l6;
    i0 = mp_obj_new_bytes(i0, i1);
    p1 = i0;
    i0 = l0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    i2 = l6;
    i1 += i2;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = l9;
    i1 = l10;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = p1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    l10 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L8;}
    goto B7;
    B9:;
    i0 = l6;
    i0 = !(i0);
    if (i0) {goto B13;}
    i0 = l9;
    i1 = l10;
    i2 = 2u;
    i1 <<= (i2 & 31);
    p0 = i1;
    i0 += i1;
    i1 = l3;
    i2 = p1;
    i3 = 24u;
    i2 <<= (i3 & 31);
    i3 = 24u;
    i2 = (u32)((s32)i2 >> (i3 & 31));
    i3 = l7;
    i4 = l0;
    i5 = 12u;
    i4 += i5;
    i1 = mp_binary_get_val(i1, i2, i3, i4);
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    i1 = 1u;
    i0 = i0 == i1;
    if (i0) {goto B14;}
    i0 = 1u;
    i1 = l6;
    i0 -= i1;
    l5 = i0;
    i0 = l8;
    i1 = p0;
    i0 += i1;
    p1 = i0;
    L15: vm_checktime();
      i0 = p1;
      i1 = l3;
      i2 = l1;
      i2 = i32_load8_s((&M0), (u64)(i2));
      i3 = l7;
      i4 = l0;
      i5 = 12u;
      i4 += i5;
      i1 = mp_binary_get_val(i1, i2, i3, i4);
      i32_store((&M0), (u64)(i0), i1);
      i0 = p1;
      i1 = 4u;
      i0 += i1;
      p1 = i0;
      i0 = l5;
      i1 = 1u;
      i0 += i1;
      l5 = i0;
      if (i0) {goto L15;}
    B14:;
    i0 = l6;
    i1 = l10;
    i0 += i1;
    l10 = i0;
    B13:;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l10;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L8;}
  B7:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l4;
  goto Bfunc;
  B4:;
  i0 = 10638u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B3:;
  i0 = 10638u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 struct_pack(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_str_get_str(i0);
  i1 = l0;
  i0 = calc_size_items(i0, i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  l1 = i1;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l2 = i0;
  i1 = 0u;
  i2 = l1;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l2;
  i2 = p0;
  i3 = 4294967295u;
  i2 += i3;
  i3 = p1;
  i4 = 4u;
  i3 += i4;
  struct_pack_into_internal(i0, i1, i2, i3);
  i0 = 35852u;
  i1 = l0;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static void struct_pack_into_internal(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i0 = mp_obj_str_get_str(i0);
  l1 = i0;
  i0 = i32_load8_s((&M0), (u64)(i0));
  l2 = i0;
  i1 = 4294967236u;
  i0 += i1;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  i0 = l2;
  i1 = 64u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = l2;
  i1 = 33u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = 62u;
  l2 = i0;
  B3:;
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B1;
  B2:;
  i0 = 64u;
  l2 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p3;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i0 = 0u;
  l4 = i0;
  L4: vm_checktime();
    i0 = l1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l5 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = 1u;
    p0 = i0;
    i0 = l5;
    i0 = unichar_isdigit(i0);
    i0 = !(i0);
    if (i0) {goto B5;}
    i0 = 0u;
    p0 = i0;
    L6: vm_checktime();
      i0 = l1;
      i1 = p0;
      i0 += i1;
      l5 = i0;
      i0 = p0;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      p0 = i0;
      i0 = l5;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_s((&M0), (u64)(i0));
      i0 = unichar_isdigit(i0);
      if (i0) {goto L6;}
    i0 = l1;
    i1 = l6;
    i2 = 10u;
    i3 = 0u;
    i0 = mp_parse_num_integer(i0, i1, i2, i3);
    i1 = 1u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    p0 = i0;
    i0 = l1;
    i1 = l6;
    i0 += i1;
    l1 = i0;
    B5:;
    i0 = l1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    i1 = 115u;
    i0 = i0 != i1;
    if (i0) {goto B7;}
    i0 = p3;
    i1 = l4;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i2 = 1u;
    mp_get_buffer_raise(i0, i1, i2);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l0;
    i2 = i32_load((&M0), (u64)(i2 + 4));
    l5 = i2;
    i3 = p0;
    i4 = l5;
    i5 = p0;
    i4 = i4 < i5;
    i2 = i4 ? i2 : i3;
    l5 = i2;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    i1 = l5;
    i0 += i1;
    i1 = 0u;
    i2 = p0;
    i3 = l5;
    i2 -= i3;
    i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
    i0 = l0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    i2 = p0;
    i1 += i2;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L4;}
    goto B0;
    B7:;
    i0 = l4;
    i1 = p2;
    i0 = i0 >= i1;
    if (i0) {goto B8;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B8;}
    i0 = l2;
    i1 = l5;
    i2 = 24u;
    i1 <<= (i2 & 31);
    i2 = 24u;
    i1 = (u32)((s32)i1 >> (i2 & 31));
    i2 = p3;
    i3 = l4;
    i4 = 2u;
    i3 <<= (i4 & 31);
    l5 = i3;
    i2 += i3;
    i2 = i32_load((&M0), (u64)(i2));
    i3 = p1;
    i4 = l0;
    i5 = 12u;
    i4 += i5;
    mp_binary_set_val(i0, i1, i2, i3, i4);
    i0 = l4;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i1 = p2;
    i0 = i0 >= i1;
    if (i0) {goto B8;}
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    i0 = !(i0);
    if (i0) {goto B8;}
    i0 = 2u;
    i1 = p0;
    i0 -= i1;
    l6 = i0;
    i0 = l3;
    i1 = l5;
    i0 += i1;
    p0 = i0;
    L9: vm_checktime();
      i0 = l6;
      l5 = i0;
      i0 = l2;
      i1 = l1;
      i1 = i32_load8_s((&M0), (u64)(i1));
      i2 = p0;
      i2 = i32_load((&M0), (u64)(i2));
      i3 = p1;
      i4 = l0;
      i5 = 12u;
      i4 += i5;
      mp_binary_set_val(i0, i1, i2, i3, i4);
      i0 = l4;
      i1 = 1u;
      i0 += i1;
      l4 = i0;
      i1 = p2;
      i0 = i0 >= i1;
      if (i0) {goto B8;}
      i0 = l5;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      i0 = p0;
      i1 = 4u;
      i0 += i1;
      p0 = i0;
      i0 = l5;
      if (i0) {goto L9;}
    B8:;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l4;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L4;}
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 struct_pack_into(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l0;
  i2 = 2u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = l1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B1;}
  i0 = l2;
  i1 = l1;
  i0 += i1;
  l1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_str_get_str(i0);
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = calc_size_items(i0, i1);
  i0 = l3;
  i1 = l1;
  i0 += i1;
  l1 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = 1u;
  i1 <<= (i2 & 31);
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i0 += i1;
  i1 = l3;
  i2 = l2;
  i1 += i2;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l1;
  i2 = p0;
  i3 = 4294967293u;
  i2 += i3;
  i3 = p1;
  i4 = 12u;
  i3 += i4;
  struct_pack_into_internal(i0, i1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B2:;
  i0 = 10638u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = 10638u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 get_fmt_num(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = 0u;
  l1 = i0;
  L0: vm_checktime();
    i0 = l0;
    i1 = l1;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    l1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    i0 = unichar_isdigit(i0);
    if (i0) {goto L0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l3;
  i2 = 10u;
  i3 = 0u;
  i0 = mp_parse_num_integer(i0, i1, i2, i3);
  l1 = i0;
  i0 = p0;
  i1 = l0;
  i2 = l3;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_sys_exit(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  if (i0) {goto B0;}
  i0 = 31272u;
  i0 = mp_obj_new_exception(i0);
  nlr_jump(i0);
  UNREACHABLE;
  B0:;
  i0 = 31272u;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = mp_obj_new_exception_arg1(i0, i1);
  nlr_jump(i0);
  UNREACHABLE;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_sys_print_exception(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 26492u;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  mp_obj_print_exception(i0, i1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static void add_trace(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  L0: vm_checktime();
    i0 = l0;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l1 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    l0 = i0;
    i0 = l1;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L0;}
  i0 = 0u;
  l1 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l4 = i0;
  i0 = 0u;
  l0 = i0;
  L1: vm_checktime();
    i0 = l2;
    i1 = l0;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    i1 = 1u;
    i0 &= i1;
    i1 = l0;
    i0 <<= (i1 & 31);
    i1 = l4;
    i0 |= i1;
    l4 = i0;
    i0 = l5;
    i1 = 1u;
    i0 >>= (i1 & 31);
    i1 = 63u;
    i0 &= i1;
    i1 = l1;
    i0 <<= (i1 & 31);
    i1 = l3;
    i0 |= i1;
    l3 = i0;
    i0 = l1;
    i1 = 6u;
    i0 += i1;
    l1 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l6 = i0;
    l0 = i0;
    i0 = l5;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L1;}
  i0 = l2;
  i1 = l6;
  i0 += i1;
  l0 = i0;
  i1 = 3u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 8u;
  i0 <<= (i1 & 31);
  i1 = l0;
  i2 = 2u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i0 |= i1;
  l7 = i0;
  i0 = 1u;
  l8 = i0;
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 8u;
  i0 <<= (i1 & 31);
  i1 = l0;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i0 |= i1;
  l9 = i0;
  i0 = l0;
  i1 = 4u;
  i0 += i1;
  l10 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = l2;
  i2 = l3;
  i3 = l4;
  i2 += i3;
  i3 = l6;
  i2 += i3;
  i1 += i2;
  i0 -= i1;
  l0 = i0;
  L3: vm_checktime();
    i0 = l10;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l1 = i0;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l1;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto B5;}
    i0 = l1;
    i1 = 5u;
    i0 >>= (i1 & 31);
    l2 = i0;
    i0 = l1;
    i1 = 31u;
    i0 &= i1;
    l5 = i0;
    i0 = 1u;
    l1 = i0;
    goto B4;
    B5:;
    i0 = l1;
    i1 = 15u;
    i0 &= i1;
    l5 = i0;
    i0 = l1;
    i1 = 4u;
    i0 <<= (i1 & 31);
    i1 = 1792u;
    i0 &= i1;
    i1 = l10;
    i1 = i32_load8_u((&M0), (u64)(i1 + 1));
    i0 |= i1;
    l2 = i0;
    i0 = 2u;
    l1 = i0;
    B4:;
    i0 = l10;
    i1 = l1;
    i0 += i1;
    l10 = i0;
    i0 = 0u;
    i1 = l2;
    i2 = l0;
    i3 = l5;
    i2 = i2 < i3;
    l1 = i2;
    i0 = i2 ? i0 : i1;
    i1 = l8;
    i0 += i1;
    l8 = i0;
    i0 = l0;
    i1 = l5;
    i0 = i0 >= i1;
    l2 = i0;
    i0 = l0;
    i1 = 0u;
    i2 = l5;
    i3 = l1;
    i1 = i3 ? i1 : i2;
    i0 -= i1;
    l0 = i0;
    i0 = l2;
    if (i0) {goto L3;}
  B2:;
  i0 = p1;
  i1 = l7;
  i2 = l8;
  i3 = l9;
  mp_obj_exception_add_traceback(i0, i1, i2, i3);
  FUNC_EPILOGUE;
}

static void mp_print_exception(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5144));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  L1: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 168));
    l1 = i0;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l1;
    i1 = p0;
    add_trace(i0, i1);
    B2:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0));
    l0 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = 26492u;
  i1 = p0;
  mp_obj_print_exception(i0, i1);
  FUNC_EPILOGUE;
}

static u32 mp_execute_bytecode(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0, l15 = 0, 
      l16 = 0, l17 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j1;
  i0 = g0;
  i1 = 192u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 188), i1);
  i0 = l0;
  i1 = p0;
  i2 = p0;
  i2 = i32_load16_u((&M0), (u64)(i2 + 12));
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 += i2;
  p1 = i1;
  i2 = 20u;
  i1 += i2;
  l1 = i1;
  i2 = p0;
  i2 = i32_load16_u((&M0), (u64)(i2 + 14));
  i3 = 12u;
  i2 *= i3;
  i1 += i2;
  i2 = 4294967284u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 184), i1);
  i0 = p1;
  i1 = 16u;
  i0 += i1;
  l2 = i0;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  l4 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l5 = i0;
  L1: vm_checktime();
    i0 = l0;
    i1 = 8u;
    i0 += i1;
    i0 = nlr_push_tail(i0);
    i0 = l3;
    i0 = setjmp_ex(i0);
    i0 = !(i0);
    if (i0) {goto B4;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 31152u;
    i0 = mp_obj_is_subclass_fast(i0, i1);
    i0 = !(i0);
    if (i0) {goto B2;}
    goto B3;
    B4:;
    i0 = l4;
    i1 = p0;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l8 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l6 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 188));
    i0 = !(i0);
    if (i0) {goto B6;}
    i0 = l6;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 104u;
    i0 = i0 == i1;
    if (i0) {goto B6;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 188));
    p1 = i0;
    i0 = l0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0 + 188), i1);
    i0 = p1;
    i0 = mp_make_raise_obj(i0);
    p1 = i0;
    goto B5;
    B6:;
    L7: vm_checktime();
      i0 = l8;
      l7 = i0;
      i0 = l5;
      i1 = l6;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      p1 = i0;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l9 = i0;
      i1 = 4294967280u;
      i0 += i1;
      l8 = i0;
      i1 = 89u;
      i0 = i0 > i1;
      if (i0) {goto B101;}
      i0 = l8;
      switch (i0) {
        case 0: goto B114;
        case 1: goto B113;
        case 2: goto B112;
        case 3: goto B111;
        case 4: goto B110;
        case 5: goto B109;
        case 6: goto B108;
        case 7: goto B107;
        case 8: goto B106;
        case 9: goto B105;
        case 10: goto B104;
        case 11: goto B103;
        case 12: goto B102;
        case 13: goto B101;
        case 14: goto B101;
        case 15: goto B101;
        case 16: goto B100;
        case 17: goto B99;
        case 18: goto B98;
        case 19: goto B97;
        case 20: goto B96;
        case 21: goto B95;
        case 22: goto B94;
        case 23: goto B93;
        case 24: goto B92;
        case 25: goto B91;
        case 26: goto B90;
        case 27: goto B89;
        case 28: goto B88;
        case 29: goto B87;
        case 30: goto B86;
        case 31: goto B85;
        case 32: goto B84;
        case 33: goto B83;
        case 34: goto B82;
        case 35: goto B81;
        case 36: goto B80;
        case 37: goto B79;
        case 38: goto B78;
        case 39: goto B77;
        case 40: goto B101;
        case 41: goto B101;
        case 42: goto B101;
        case 43: goto B101;
        case 44: goto B101;
        case 45: goto B101;
        case 46: goto B101;
        case 47: goto B101;
        case 48: goto B76;
        case 49: goto B101;
        case 50: goto B75;
        case 51: goto B74;
        case 52: goto B73;
        case 53: goto B72;
        case 54: goto B71;
        case 55: goto B70;
        case 56: goto B115;
        case 57: goto B115;
        case 58: goto B69;
        case 59: goto B68;
        case 60: goto B101;
        case 61: goto B101;
        case 62: goto B101;
        case 63: goto B101;
        case 64: goto B67;
        case 65: goto B66;
        case 66: goto B65;
        case 67: goto B64;
        case 68: goto B63;
        case 69: goto B62;
        case 70: goto B61;
        case 71: goto B60;
        case 72: goto B59;
        case 73: goto B58;
        case 74: goto B57;
        case 75: goto B56;
        case 76: goto B55;
        case 77: goto B54;
        case 78: goto B52;
        case 79: goto B51;
        case 80: goto B101;
        case 81: goto B101;
        case 82: goto B50;
        case 83: goto B53;
        case 84: goto B22;
        case 85: goto B21;
        case 86: goto B20;
        case 87: goto B13;
        case 88: goto B49;
        case 89: goto B48;
        default: goto B114;
      }
      B115:;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      p1 = i0;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      l8 = i0;
      i0 = l0;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 184));
      i2 = 12u;
      i1 += i2;
      i32_store((&M0), (u64)(i0 + 184), i1);
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i1 = l6;
      i2 = 3u;
      i1 += i2;
      l9 = i1;
      i2 = p1;
      i3 = l8;
      i4 = 8u;
      i3 <<= (i4 & 31);
      i2 |= i3;
      i1 += i2;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0));
      p1 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      l6 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i1 = 0u;
      i32_store((&M0), (u64)(i0 + 8), i1);
      i0 = l6;
      i1 = p1;
      i2 = 73u;
      i1 = i1 == i2;
      i2 = 1u;
      i1 <<= (i2 & 31);
      i2 = l7;
      i1 |= i2;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      l8 = i0;
      i0 = l9;
      l6 = i0;
      goto L7;
      B114:;
      i0 = l7;
      i1 = l6;
      i1 = i32_load8_u((&M0), (u64)(i1 + 2));
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l6;
      i3 = 1u;
      i2 += i3;
      i2 = i32_load8_u((&M0), (u64)(i2));
      i1 |= i2;
      i2 = 3u;
      i1 <<= (i2 & 31);
      i2 = 2u;
      i1 |= i2;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L7;
      B113:;
      i0 = l7;
      i1 = l6;
      i1 = i32_load8_u((&M0), (u64)(i1 + 2));
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l6;
      i3 = 1u;
      i2 += i3;
      i2 = i32_load8_u((&M0), (u64)(i2));
      i1 |= i2;
      i1 = mp_load_name(i1);
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L7;
      B112:;
      i0 = l7;
      i1 = l6;
      i1 = i32_load8_u((&M0), (u64)(i1 + 2));
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l6;
      i3 = 1u;
      i2 += i3;
      i2 = i32_load8_u((&M0), (u64)(i2));
      i1 |= i2;
      i1 = mp_load_global(i1);
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L7;
      B111:;
      i0 = l7;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l6;
      i2 = i32_load8_u((&M0), (u64)(i2 + 2));
      i3 = 8u;
      i2 <<= (i3 & 31);
      i3 = l6;
      i4 = 1u;
      i3 += i4;
      i3 = i32_load8_u((&M0), (u64)(i3));
      i2 |= i3;
      i1 = mp_load_attr(i1, i2);
      i32_store((&M0), (u64)(i0), i1);
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      i0 = l7;
      l8 = i0;
      goto L7;
      B110:;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l6;
      i1 = i32_load8_u((&M0), (u64)(i1 + 2));
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l6;
      i3 = 1u;
      i2 += i3;
      i2 = i32_load8_u((&M0), (u64)(i2));
      i1 |= i2;
      i2 = l7;
      mp_load_method(i0, i1, i2);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L7;
      B109:;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      i1 = 8u;
      i0 <<= (i1 & 31);
      i1 = l6;
      i2 = 1u;
      i1 += i2;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i0 |= i1;
      i1 = l7;
      i2 = 4294967288u;
      i1 += i2;
      mp_load_super_method(i0, i1);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L7;
      B108:;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      i1 = 8u;
      i0 <<= (i1 & 31);
      i1 = l6;
      i2 = 1u;
      i1 += i2;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i0 |= i1;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      mp_store_name(i0, i1);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L7;
      B107:;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      i1 = 8u;
      i0 <<= (i1 & 31);
      i1 = l6;
      i2 = 1u;
      i1 += i2;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i0 |= i1;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      mp_store_global(i0, i1);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L7;
      B106:;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l6;
      i1 = i32_load8_u((&M0), (u64)(i1 + 2));
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l6;
      i3 = 1u;
      i2 += i3;
      i2 = i32_load8_u((&M0), (u64)(i2));
      i1 |= i2;
      i2 = l7;
      i3 = 4294967292u;
      i2 += i3;
      i2 = i32_load((&M0), (u64)(i2));
      mp_store_attr(i0, i1, i2);
      i0 = l7;
      i1 = 4294967288u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L7;
      B105:;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      i1 = 8u;
      i0 <<= (i1 & 31);
      i1 = l6;
      i2 = 1u;
      i1 += i2;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i0 |= i1;
      mp_delete_name(i0);
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      i0 = l7;
      l8 = i0;
      goto L7;
      B104:;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      i1 = 8u;
      i0 <<= (i1 & 31);
      i1 = l6;
      i2 = 1u;
      i1 += i2;
      i1 = i32_load8_u((&M0), (u64)(i1));
      i0 |= i1;
      mp_delete_global(i0);
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      i0 = l7;
      l8 = i0;
      goto L7;
      B103:;
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i1 = l6;
      i1 = i32_load8_u((&M0), (u64)(i1 + 2));
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l6;
      i3 = 1u;
      i2 += i3;
      i2 = i32_load8_u((&M0), (u64)(i2));
      i1 |= i2;
      i2 = l7;
      i2 = i32_load((&M0), (u64)(i2));
      i3 = l8;
      i3 = i32_load((&M0), (u64)(i3));
      i1 = mp_import_name(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L7;
      B102:;
      i0 = l7;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l6;
      i2 = i32_load8_u((&M0), (u64)(i2 + 2));
      i3 = 8u;
      i2 <<= (i3 & 31);
      i3 = l6;
      i4 = 1u;
      i3 += i4;
      i3 = i32_load8_u((&M0), (u64)(i3));
      i2 |= i3;
      i1 = mp_import_from(i1, i2);
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto L7;
      B101:;
      i0 = l9;
      i1 = 175u;
      i0 = i0 > i1;
      if (i0) {goto B47;}
      i0 = l7;
      i1 = l9;
      i2 = 1u;
      i1 <<= (i2 & 31);
      i2 = 4294967040u;
      i1 += i2;
      i2 = 1u;
      i1 |= i2;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B100:;
      i0 = l6;
      i1 = 2u;
      i0 += i1;
      l6 = i0;
      i0 = 0u;
      p1 = i0;
      L116: vm_checktime();
        i0 = l6;
        i1 = 4294967295u;
        i0 += i1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = p1;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        p1 = i0;
        i0 = l6;
        i1 = 1u;
        i0 += i1;
        l6 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L116;}
      i0 = l7;
      i1 = 1u;
      i2 = l6;
      i3 = 4294967295u;
      i2 += i3;
      i2 = i32_load8_u((&M0), (u64)(i2));
      l9 = i2;
      i1 -= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l8 = i0;
      i1 = p0;
      i1 = i32_load((&M0), (u64)(i1));
      i1 = i32_load((&M0), (u64)(i1 + 12));
      i2 = p1;
      i3 = 2u;
      i2 <<= (i3 & 31);
      i1 += i2;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l9;
      i3 = l8;
      i1 = mp_make_closure_from_raw_code(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      goto L7;
      B99:;
      i0 = l6;
      i1 = 2u;
      i0 += i1;
      l6 = i0;
      i0 = 0u;
      p1 = i0;
      L117: vm_checktime();
        i0 = l6;
        i1 = 4294967295u;
        i0 += i1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = p1;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        p1 = i0;
        i0 = l6;
        i1 = 1u;
        i0 += i1;
        l6 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L117;}
      i0 = l7;
      i1 = l6;
      i2 = 4294967295u;
      i1 += i2;
      i1 = i32_load8_u((&M0), (u64)(i1));
      l9 = i1;
      i2 = 4294967295u;
      i1 ^= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l8 = i0;
      i1 = p0;
      i1 = i32_load((&M0), (u64)(i1));
      i1 = i32_load((&M0), (u64)(i1 + 12));
      i2 = p1;
      i3 = 2u;
      i2 <<= (i3 & 31);
      i1 += i2;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l9;
      i3 = 256u;
      i2 |= i3;
      i3 = l8;
      i1 = mp_make_closure_from_raw_code(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      goto L7;
      B98:;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l8 = i0;
      i1 = 127u;
      i0 &= i1;
      i1 = l8;
      i2 = 25u;
      i1 <<= (i2 & 31);
      i2 = 24u;
      i1 = (u32)((s32)i1 >> (i2 & 31));
      i2 = 4294967168u;
      i1 &= i2;
      i0 |= i1;
      p1 = i0;
      i0 = l6;
      i1 = 2u;
      i0 += i1;
      l6 = i0;
      i0 = l8;
      i1 = 128u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B118;}
      L119: vm_checktime();
        i0 = l6;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = p1;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        p1 = i0;
        i0 = l6;
        i1 = 1u;
        i0 += i1;
        l6 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L119;}
      B118:;
      i0 = l7;
      i1 = p1;
      i2 = 1u;
      i1 <<= (i2 & 31);
      i2 = 1u;
      i1 |= i2;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto L7;
      B97:;
      i0 = 0u;
      l6 = i0;
      L120: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L120;}
      i0 = l7;
      i1 = p0;
      i1 = i32_load((&M0), (u64)(i1));
      i1 = i32_load((&M0), (u64)(i1 + 12));
      i2 = l6;
      i3 = 2u;
      i2 <<= (i3 & 31);
      i1 += i2;
      i1 = i32_load((&M0), (u64)(i1));
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B96:;
      i0 = 0u;
      l6 = i0;
      L121: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L121;}
      i0 = l2;
      i1 = l6;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 -= i1;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      if (i0) {goto B9;}
      goto B19;
      B95:;
      i0 = 0u;
      l6 = i0;
      L122: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L122;}
      i0 = l2;
      i1 = l6;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 -= i1;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = mp_obj_cell_get(i0);
      l6 = i0;
      i0 = !(i0);
      if (i0) {goto B19;}
      goto B9;
      B94:;
      i0 = 0u;
      l6 = i0;
      L123: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L123;}
      i0 = l2;
      i1 = l6;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 -= i1;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      i32_store((&M0), (u64)(i0), i1);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B93:;
      i0 = 0u;
      l6 = i0;
      L124: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L124;}
      i0 = l2;
      i1 = l6;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 -= i1;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      mp_obj_cell_set(i0, i1);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B92:;
      i0 = 0u;
      l6 = i0;
      L125: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L125;}
      i0 = l2;
      i1 = l6;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 -= i1;
      l6 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = !(i0);
      if (i0) {goto B19;}
      i0 = l6;
      i1 = 0u;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l7;
      l8 = i0;
      goto B8;
      B91:;
      i0 = 0u;
      l6 = i0;
      L126: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L126;}
      i0 = l2;
      i1 = l6;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 -= i1;
      l6 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = mp_obj_cell_get(i0);
      i0 = !(i0);
      if (i0) {goto B19;}
      i0 = l6;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = 0u;
      mp_obj_cell_set(i0, i1);
      i0 = l7;
      l8 = i0;
      goto B8;
      B90:;
      i0 = 0u;
      l6 = i0;
      L127: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L127;}
      i0 = l7;
      i1 = 1u;
      i2 = l6;
      i1 -= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l8 = i0;
      i1 = l6;
      i2 = l8;
      i1 = mp_obj_new_tuple(i1, i2);
      i32_store((&M0), (u64)(i0), i1);
      goto B8;
      B89:;
      i0 = 0u;
      l6 = i0;
      L128: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L128;}
      i0 = l7;
      i1 = 1u;
      i2 = l6;
      i1 -= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l8 = i0;
      i1 = l6;
      i2 = l8;
      i1 = mp_obj_new_list(i1, i2);
      i32_store((&M0), (u64)(i0), i1);
      goto B8;
      B88:;
      i0 = 0u;
      l6 = i0;
      L129: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L129;}
      i0 = l7;
      i1 = l6;
      i1 = mp_obj_new_dict(i1);
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B87:;
      i0 = 0u;
      l6 = i0;
      L130: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L130;}
      i0 = l7;
      i1 = 1u;
      i2 = l6;
      i1 -= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l8 = i0;
      i1 = l6;
      i2 = l8;
      i1 = mp_obj_new_set(i1, i2);
      i32_store((&M0), (u64)(i0), i1);
      goto B8;
      B86:;
      i0 = 6u;
      l9 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      i1 = 3u;
      i0 = i0 != i1;
      if (i0) {goto B46;}
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      p1 = i0;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      l9 = i0;
      goto B45;
      B85:;
      i0 = 0u;
      l6 = i0;
      L131: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L131;}
      i0 = l7;
      i1 = l6;
      i2 = 4294967292u;
      i1 &= i2;
      i0 -= i1;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      i0 = l8;
      i1 = 3u;
      i0 &= i1;
      l8 = i0;
      i0 = !(i0);
      if (i0) {goto B38;}
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      l9 = i0;
      i0 = l8;
      i1 = 1u;
      i0 = i0 != i1;
      if (i0) {goto B31;}
      i0 = l6;
      i1 = l9;
      i2 = l7;
      i3 = 4294967292u;
      i2 += i3;
      i2 = i32_load((&M0), (u64)(i2));
      i0 = mp_obj_dict_store(i0, i1, i2);
      i0 = l7;
      i1 = 4294967288u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B84:;
      i0 = 0u;
      l6 = i0;
      L132: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L132;}
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l6;
      i2 = l7;
      mp_unpack_sequence(i0, i1, i2);
      i0 = l7;
      i1 = l6;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B83:;
      i0 = 0u;
      l6 = i0;
      L133: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        l9 = i1;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L133;}
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l6;
      i2 = l7;
      mp_unpack_ex(i0, i1, i2);
      i0 = l7;
      i1 = l6;
      i2 = 255u;
      i1 &= i2;
      i2 = l9;
      i3 = 1u;
      i2 >>= (i3 & 31);
      i3 = 255u;
      i2 &= i3;
      i1 += i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l8 = i0;
      goto B8;
      B82:;
      i0 = 0u;
      l6 = i0;
      L134: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L134;}
      i0 = l7;
      i1 = p0;
      i1 = i32_load((&M0), (u64)(i1));
      i1 = i32_load((&M0), (u64)(i1 + 12));
      i2 = l6;
      i3 = 2u;
      i2 <<= (i3 & 31);
      i1 += i2;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = 0u;
      i3 = 0u;
      i1 = mp_make_function_from_raw_code(i1, i2, i3);
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B81:;
      i0 = 0u;
      l6 = i0;
      L135: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L135;}
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i1 = p0;
      i1 = i32_load((&M0), (u64)(i1));
      i1 = i32_load((&M0), (u64)(i1 + 12));
      i2 = l6;
      i3 = 2u;
      i2 <<= (i3 & 31);
      i1 += i2;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l8;
      i2 = i32_load((&M0), (u64)(i2));
      i3 = l7;
      i3 = i32_load((&M0), (u64)(i3));
      i1 = mp_make_function_from_raw_code(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      goto B8;
      B80:;
      i0 = 0u;
      l6 = i0;
      L136: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        l9 = i1;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L136;}
      i0 = l7;
      i1 = l9;
      i2 = 510u;
      i1 &= i2;
      i2 = l6;
      i3 = 255u;
      i2 &= i3;
      l6 = i2;
      i1 += i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 -= i1;
      l8 = i0;
      i1 = l8;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l6;
      i3 = l9;
      i4 = 1u;
      i3 >>= (i4 & 31);
      i4 = 255u;
      i3 &= i4;
      i4 = l8;
      i5 = 4u;
      i4 += i5;
      i1 = mp_call_function_n_kw(i1, i2, i3, i4);
      i32_store((&M0), (u64)(i0), i1);
      goto B8;
      B79:;
      i0 = 0u;
      l6 = i0;
      L137: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        l9 = i1;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L137;}
      i0 = l7;
      i1 = 4294967294u;
      i2 = l9;
      i3 = 510u;
      i2 &= i3;
      i1 -= i2;
      i2 = l6;
      i3 = 255u;
      i2 &= i3;
      i1 -= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l8 = i0;
      i1 = 0u;
      i2 = l6;
      i3 = l8;
      i1 = mp_call_method_n_kw_var(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      goto B8;
      B78:;
      i0 = 0u;
      l6 = i0;
      L138: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        l9 = i1;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L138;}
      i0 = l7;
      i1 = l6;
      i2 = 255u;
      i1 &= i2;
      l6 = i1;
      i2 = l9;
      i3 = 510u;
      i2 &= i3;
      i1 += i2;
      i2 = 4294967295u;
      i1 ^= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l8 = i0;
      i1 = l6;
      i2 = l9;
      i3 = 1u;
      i2 >>= (i3 & 31);
      i3 = 255u;
      i2 &= i3;
      i3 = l8;
      i1 = mp_call_method_n_kw(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      goto B8;
      B77:;
      i0 = 0u;
      l6 = i0;
      L139: vm_checktime();
        i0 = p1;
        i0 = i32_load8_u((&M0), (u64)(i0));
        l8 = i0;
        i1 = 127u;
        i0 &= i1;
        i1 = l6;
        l9 = i1;
        i2 = 7u;
        i1 <<= (i2 & 31);
        i0 |= i1;
        l6 = i0;
        i0 = p1;
        i1 = 1u;
        i0 += i1;
        p1 = i0;
        i0 = l8;
        i1 = 128u;
        i0 &= i1;
        if (i0) {goto L139;}
      i0 = l7;
      i1 = 4294967293u;
      i2 = l9;
      i3 = 510u;
      i2 &= i3;
      i1 -= i2;
      i2 = l6;
      i3 = 255u;
      i2 &= i3;
      i1 -= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      l8 = i0;
      i1 = 1u;
      i2 = l6;
      i3 = l8;
      i1 = mp_call_method_n_kw_var(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      goto B8;
      B76:;
      i0 = l7;
      i1 = l6;
      i2 = 3u;
      i1 += i2;
      p1 = i1;
      i2 = l6;
      i2 = i32_load8_u((&M0), (u64)(i2 + 2));
      i3 = 8u;
      i2 <<= (i3 & 31);
      i3 = l6;
      i4 = 1u;
      i3 += i4;
      i3 = i32_load8_u((&M0), (u64)(i3));
      i2 |= i3;
      i1 += i2;
      i2 = 4294934528u;
      i1 += i2;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = l6;
      i1 = i32_load8_u((&M0), (u64)(i1 + 3));
      l6 = i1;
      i32_store((&M0), (u64)(i0 + 8), i1);
      i0 = l7;
      i1 = 8u;
      i0 += i1;
      l7 = i0;
      goto B28;
      B75:;
      i0 = l6;
      i1 = l6;
      i1 = i32_load8_u((&M0), (u64)(i1 + 2));
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l6;
      i3 = 1u;
      i2 += i3;
      i2 = i32_load8_u((&M0), (u64)(i2));
      i1 |= i2;
      i0 += i1;
      i1 = 4294934531u;
      i0 += i1;
      l6 = i0;
      goto B40;
      B74:;
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      p1 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l9 = i0;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      l6 = i0;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = mp_obj_is_true(i0);
      i0 = !(i0);
      if (i0) {goto B44;}
      i0 = p1;
      i1 = l6;
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l9;
      i1 |= i2;
      i0 += i1;
      i1 = 4294934528u;
      i0 += i1;
      l6 = i0;
      goto B27;
      B73:;
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      p1 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l9 = i0;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      l6 = i0;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = mp_obj_is_true(i0);
      i0 = !(i0);
      if (i0) {goto B43;}
      i0 = p1;
      l6 = i0;
      goto B27;
      B72:;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      p1 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l8 = i0;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      l6 = i0;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = mp_obj_is_true(i0);
      i0 = !(i0);
      if (i0) {goto B42;}
      i0 = p1;
      i1 = l6;
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l8;
      i1 |= i2;
      i0 += i1;
      i1 = 4294934528u;
      i0 += i1;
      l6 = i0;
      goto B40;
      B71:;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      p1 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l8 = i0;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      l6 = i0;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = mp_obj_is_true(i0);
      i0 = !(i0);
      if (i0) {goto B41;}
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i0 = p1;
      l6 = i0;
      goto B27;
      B70:;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      p1 = i0;
      i1 = 13u;
      i2 = l7;
      mp_load_method(i0, i1, i2);
      i0 = p1;
      i1 = 12u;
      i2 = l7;
      i3 = 8u;
      i2 += i3;
      l8 = i2;
      mp_load_method(i0, i1, i2);
      i0 = 0u;
      i1 = 0u;
      i2 = l8;
      i0 = mp_call_method_n_kw(i0, i1, i2);
      p1 = i0;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l9 = i0;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      l10 = i0;
      i0 = l0;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 184));
      i2 = 12u;
      i1 += i2;
      i32_store((&M0), (u64)(i0 + 184), i1);
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i1 = l6;
      i2 = 3u;
      i1 += i2;
      l6 = i1;
      i2 = l9;
      i3 = l10;
      i4 = 8u;
      i3 <<= (i4 & 31);
      i2 |= i3;
      i1 += i2;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i1 = l7;
      i2 = 4u;
      i1 += i2;
      i2 = 2u;
      i1 |= i2;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i1 = 0u;
      i32_store((&M0), (u64)(i0 + 8), i1);
      i0 = l7;
      i1 = p1;
      i32_store((&M0), (u64)(i0 + 8), i1);
      goto L7;
      B69:;
      i0 = l0;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 184));
      i2 = 4294967284u;
      i1 += i2;
      i32_store((&M0), (u64)(i0 + 184), i1);
      i0 = l6;
      i1 = l6;
      i1 = i32_load8_u((&M0), (u64)(i1 + 2));
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l6;
      i3 = 1u;
      i2 += i3;
      i2 = i32_load8_u((&M0), (u64)(i2));
      i1 |= i2;
      i0 += i1;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      goto B40;
      B68:;
      i0 = l6;
      i1 = 1u;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l8 = i0;
      i0 = l6;
      i0 = i32_load8_u((&M0), (u64)(i0 + 2));
      l9 = i0;
      i0 = p0;
      i1 = 8u;
      i0 += i1;
      i1 = l7;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l7;
      i1 = 4294967284u;
      i0 += i1;
      p1 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = !(i0);
      if (i0) {goto B37;}
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      i0 = p1;
      i0 = mp_iternext_allow_raise(i0);
      p1 = i0;
      i0 = !(i0);
      if (i0) {goto B36;}
      goto B10;
      B67:;
      i0 = l7;
      i1 = 14u;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B66:;
      i0 = l7;
      i1 = 6u;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B65:;
      i0 = l7;
      i1 = 30u;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B64:;
      i0 = l7;
      i1 = 0u;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B63:;
      i0 = l7;
      i1 = mp_load_build_class();
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B62:;
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i1 = l8;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l7;
      i2 = i32_load((&M0), (u64)(i2));
      i3 = 4u;
      i1 = mp_obj_subscr(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      goto B8;
      B61:;
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l7;
      i3 = 4294967288u;
      i2 += i3;
      i2 = i32_load((&M0), (u64)(i2));
      i0 = mp_obj_subscr(i0, i1, i2);
      i0 = l7;
      i1 = 4294967284u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B60:;
      i0 = l7;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B59:;
      i0 = l7;
      i1 = l7;
      i2 = 4294967292u;
      i1 += i2;
      j1 = i64_load((&M0), (u64)(i1));
      i64_store((&M0), (u64)(i0 + 4), j1);
      i0 = l7;
      i1 = 8u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B58:;
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B57:;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      i0 = l7;
      i1 = l7;
      i2 = 4294967292u;
      i1 += i2;
      l8 = i1;
      i1 = i32_load((&M0), (u64)(i1));
      i32_store((&M0), (u64)(i0), i1);
      i0 = l8;
      i1 = l6;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l7;
      l8 = i0;
      goto B8;
      B56:;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      i0 = l7;
      i1 = l7;
      i2 = 4294967292u;
      i1 += i2;
      l8 = i1;
      i1 = i32_load((&M0), (u64)(i1));
      i32_store((&M0), (u64)(i0), i1);
      i0 = l7;
      i1 = 4294967288u;
      i0 += i1;
      l9 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      i0 = l9;
      i1 = l6;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l8;
      i1 = l10;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l7;
      l8 = i0;
      goto B8;
      B55:;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      i1 = 6u;
      i0 = i0 == i1;
      if (i0) {goto B35;}
      i0 = l6;
      i1 = 1u;
      i0 &= i1;
      if (i0) {goto B30;}
      i0 = l7;
      i1 = l6;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l6;
      i0 = mp_obj_get_type(i0);
      l6 = i0;
      i0 = l7;
      i1 = 6u;
      i32_store((&M0), (u64)(i0 + 8), i1);
      i0 = l7;
      i1 = l6;
      i32_store((&M0), (u64)(i0), i1);
      i0 = 3u;
      i1 = 0u;
      i2 = l7;
      i3 = 4294967288u;
      i2 += i3;
      l8 = i2;
      i0 = mp_call_method_n_kw(i0, i1, i2);
      i0 = mp_obj_is_true(i0);
      i0 = !(i0);
      if (i0) {goto B24;}
      i0 = l8;
      i1 = 6u;
      i32_store((&M0), (u64)(i0), i1);
      goto B8;
      B54:;
      i0 = l0;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 184));
      i2 = 4294967284u;
      i1 += i2;
      i32_store((&M0), (u64)(i0 + 184), i1);
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      i1 = 6u;
      i0 = i0 == i1;
      if (i0) {goto B34;}
      i0 = l6;
      i1 = 1u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B17;}
      i0 = l6;
      i1 = 0u;
      i0 = (u32)((s32)i0 >= (s32)i1);
      if (i0) {goto B29;}
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l7 = i0;
      B53:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i1 = l1;
      i0 = i0 < i1;
      if (i0) {goto B15;}
      L140: vm_checktime();
        i0 = l0;
        i0 = i32_load((&M0), (u64)(i0 + 184));
        i0 = i32_load8_u((&M0), (u64)(i0 + 4));
        i1 = 2u;
        i0 &= i1;
        i0 = !(i0);
        if (i0) {goto B141;}
        i0 = l0;
        i0 = i32_load((&M0), (u64)(i0 + 184));
        i0 = i32_load((&M0), (u64)(i0));
        i1 = p1;
        i0 = i0 > i1;
        if (i0) {goto B39;}
        i0 = l7;
        i1 = 4294967288u;
        i0 += i1;
        i1 = l7;
        i2 = 4294967292u;
        i1 += i2;
        l6 = i1;
        i2 = l6;
        i2 = i32_load((&M0), (u64)(i2));
        i3 = 1u;
        i2 &= i3;
        i0 = i2 ? i0 : i1;
        l6 = i0;
        i1 = l7;
        i1 = i32_load((&M0), (u64)(i1));
        i32_store((&M0), (u64)(i0), i1);
        i0 = l6;
        l7 = i0;
        B141:;
        i0 = l0;
        i1 = l0;
        i1 = i32_load((&M0), (u64)(i1 + 184));
        i2 = 4294967284u;
        i1 += i2;
        i32_store((&M0), (u64)(i0 + 184), i1);
        i0 = l0;
        i0 = i32_load((&M0), (u64)(i0 + 184));
        i1 = l1;
        i0 = i0 >= i1;
        if (i0) {goto L140;}
        goto B15;
      B52:;
      i0 = l7;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = 0u;
      i1 = mp_getiter(i1, i2);
      i32_store((&M0), (u64)(i0), i1);
      i0 = l7;
      l8 = i0;
      goto B8;
      B51:;
      i0 = l7;
      i1 = 12u;
      i0 += i1;
      l8 = i0;
      i0 = p1;
      l6 = i0;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l7;
      i0 = mp_getiter(i0, i1);
      l9 = i0;
      i1 = l7;
      i0 = i0 == i1;
      if (i0) {goto L7;}
      i0 = l7;
      i1 = l9;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 0u;
      i32_store((&M0), (u64)(i0), i1);
      goto B8;
      B50:;
      i0 = l7;
      i1 = 4294967288u;
      i0 += i1;
      l8 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = l7;
      i3 = 4294967292u;
      i2 += i3;
      i2 = i32_load((&M0), (u64)(i2));
      i0 = mp_obj_dict_store(i0, i1, i2);
      goto B8;
      B49:;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      i0 = p0;
      i1 = 8u;
      i0 += i1;
      i1 = l7;
      i2 = 4294967292u;
      i1 += i2;
      l8 = i1;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 188));
      i0 = !(i0);
      if (i0) {goto B33;}
      i0 = l8;
      i0 = i32_load((&M0), (u64)(i0));
      l10 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 188));
      l9 = i0;
      i0 = l0;
      i1 = 0u;
      i32_store((&M0), (u64)(i0 + 188), i1);
      i0 = l10;
      i1 = 0u;
      i2 = l9;
      i3 = l0;
      i4 = 4u;
      i3 += i4;
      i0 = mp_resume(i0, i1, i2, i3);
      l10 = i0;
      i0 = !(i0);
      if (i0) {goto B32;}
      goto B18;
      B48:;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      mp_import_all(i0);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B47:;
      i0 = l9;
      i1 = 191u;
      i0 = i0 > i1;
      if (i0) {goto B25;}
      i0 = l2;
      i1 = 176u;
      i2 = l9;
      i1 -= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      if (i0) {goto B9;}
      goto B19;
      B46:;
      i0 = l7;
      p1 = i0;
      B45:;
      i0 = l6;
      i1 = 2u;
      i0 += i1;
      l6 = i0;
      i0 = p1;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i1 = l8;
      i1 = i32_load((&M0), (u64)(i1));
      i2 = p1;
      i2 = i32_load((&M0), (u64)(i2));
      i3 = l9;
      i1 = mp_obj_new_slice(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      goto L7;
      B44:;
      i0 = p1;
      l6 = i0;
      goto B27;
      B43:;
      i0 = p1;
      i1 = l6;
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l9;
      i1 |= i2;
      i0 += i1;
      i1 = 4294934528u;
      i0 += i1;
      l6 = i0;
      goto B27;
      B42:;
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i0 = p1;
      l6 = i0;
      goto B27;
      B41:;
      i0 = p1;
      i1 = l6;
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l8;
      i1 |= i2;
      i0 += i1;
      i1 = 4294934528u;
      i0 += i1;
      l6 = i0;
      B40:;
      i0 = l7;
      l8 = i0;
      goto B27;
      B39:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      p1 = i0;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      i0 = p1;
      i0 = i32_load((&M0), (u64)(i0 + 4));
      i1 = 4294967292u;
      i0 &= i1;
      p1 = i0;
      i1 = 4294967295u;
      i32_store((&M0), (u64)(i0 + 8), i1);
      i0 = p1;
      i1 = l6;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = p1;
      i1 = 8u;
      i0 += i1;
      l8 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      goto L7;
      B38:;
      i0 = l6;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      i0 = mp_obj_list_append(i0, i1);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B37:;
      i0 = l6;
      i1 = 3u;
      i0 += i1;
      l6 = i0;
      i0 = l7;
      i1 = 4294967288u;
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = mp_iternext_allow_raise(i0);
      p1 = i0;
      if (i0) {goto B10;}
      B36:;
      i0 = l6;
      i1 = l9;
      i2 = 8u;
      i1 <<= (i2 & 31);
      i2 = l8;
      i1 |= i2;
      i0 += i1;
      l6 = i0;
      i0 = l7;
      i1 = 4294967280u;
      i0 += i1;
      l8 = i0;
      goto L7;
      B35:;
      i0 = l7;
      j1 = 25769803782ull;
      i64_store((&M0), (u64)(i0 + 4), j1);
      i0 = 3u;
      i1 = 0u;
      i2 = l7;
      i3 = 4294967288u;
      i2 += i3;
      l8 = i2;
      i0 = mp_call_method_n_kw(i0, i1, i2);
      i0 = l8;
      i1 = 6u;
      i32_store((&M0), (u64)(i0), i1);
      goto B8;
      B34:;
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B33:;
      i0 = 0u;
      l9 = i0;
      i0 = l8;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = l10;
      i2 = 0u;
      i3 = l0;
      i4 = 4u;
      i3 += i4;
      i0 = mp_resume(i0, i1, i2, i3);
      l10 = i0;
      if (i0) {goto B18;}
      B32:;
      i0 = l8;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 4));
      l6 = i1;
      i2 = 6u;
      i3 = l6;
      i1 = i3 ? i1 : i2;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l9;
      i0 = !(i0);
      if (i0) {goto B8;}
      i0 = l9;
      i1 = 31392u;
      i0 = mp_obj_exception_match(i0, i1);
      i0 = !(i0);
      if (i0) {goto B8;}
      goto B16;
      B31:;
      i0 = l6;
      i1 = l9;
      mp_obj_set_store(i0, i1);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B30:;
      i0 = l7;
      j1 = 25769803782ull;
      i64_store((&M0), (u64)(i0), j1);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i0 = i32_load((&M0), (u64)(i0));
      l9 = i0;
      i0 = l8;
      i1 = 6u;
      i32_store((&M0), (u64)(i0), i1);
      i0 = 3u;
      i1 = 0u;
      i2 = l7;
      i3 = 4294967284u;
      i2 += i3;
      l10 = i2;
      i0 = mp_call_method_n_kw(i0, i1, i2);
      i0 = l7;
      i1 = 4294967288u;
      i0 += i1;
      l8 = i0;
      i1 = l6;
      i32_store((&M0), (u64)(i0), i1);
      i0 = l10;
      i1 = l9;
      i32_store((&M0), (u64)(i0), i1);
      goto B8;
      B29:;
      i0 = l7;
      i1 = l6;
      i2 = 1u;
      i1 >>= (i2 & 31);
      l6 = i1;
      i32_store((&M0), (u64)(i0), i1);
      B28:;
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l7 = i0;
      i0 = l6;
      i1 = 127u;
      i0 &= i1;
      i0 = !(i0);
      if (i0) {goto B142;}
      i0 = l6;
      i1 = 1u;
      i0 <<= (i1 & 31);
      i1 = 4294967295u;
      i0 += i1;
      l8 = i0;
      L143: vm_checktime();
        i0 = l0;
        i0 = i32_load((&M0), (u64)(i0 + 184));
        i0 = i32_load8_u((&M0), (u64)(i0 + 4));
        i1 = 2u;
        i0 &= i1;
        i0 = !(i0);
        if (i0) {goto B144;}
        i0 = l0;
        i0 = i32_load((&M0), (u64)(i0 + 184));
        i0 = i32_load((&M0), (u64)(i0));
        i1 = p1;
        i0 = i0 > i1;
        if (i0) {goto B26;}
        i0 = l7;
        i1 = 4294967288u;
        i0 += i1;
        i1 = l7;
        i2 = 4294967292u;
        i1 += i2;
        l9 = i1;
        i2 = l9;
        i2 = i32_load((&M0), (u64)(i2));
        i3 = 1u;
        i2 &= i3;
        i0 = i2 ? i0 : i1;
        l9 = i0;
        i1 = l7;
        i1 = i32_load((&M0), (u64)(i1));
        i32_store((&M0), (u64)(i0), i1);
        i0 = l9;
        l7 = i0;
        B144:;
        i0 = l0;
        i1 = l0;
        i1 = i32_load((&M0), (u64)(i1 + 184));
        i2 = 4294967284u;
        i1 += i2;
        i32_store((&M0), (u64)(i0 + 184), i1);
        i0 = l8;
        i1 = 4294967294u;
        i0 += i1;
        l8 = i0;
        i0 = l6;
        i1 = 4294967295u;
        i0 += i1;
        l6 = i0;
        i1 = 127u;
        i0 &= i1;
        if (i0) {goto L143;}
      B142:;
      i0 = l7;
      i1 = 4294967276u;
      i2 = 4294967292u;
      i3 = l6;
      i1 = i3 ? i1 : i2;
      i0 += i1;
      l8 = i0;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      B27:;
      i0 = 0u;
      i1 = 0u;
      i1 = i32_load((&M0), (u64)(i1 + 40192));
      i2 = 4294967295u;
      i1 += i2;
      p1 = i1;
      i32_store((&M0), (u64)(i0 + 40192), i1);
      i0 = p1;
      i0 = !(i0);
      if (i0) {goto B145;}
      i0 = 0u;
      i0 = i32_load16_u((&M0), (u64)(i0 + 5312));
      if (i0) {goto L7;}
      goto B11;
      B145:;
      i0 = 0u;
      i1 = 10u;
      i32_store((&M0), (u64)(i0 + 40192), i1);
      mp_js_hook();
      i0 = 0u;
      i0 = i32_load16_u((&M0), (u64)(i0 + 5312));
      if (i0) {goto L7;}
      goto B11;
      B26:;
      i0 = l7;
      i1 = l8;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      goto L7;
      B25:;
      i0 = l9;
      i1 = 207u;
      i0 = i0 > i1;
      if (i0) {goto B23;}
      i0 = l2;
      i1 = 192u;
      i2 = l9;
      i1 -= i2;
      i2 = 2u;
      i1 <<= (i2 & 31);
      i0 += i1;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      i32_store((&M0), (u64)(i0), i1);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      goto B8;
      B24:;
      i0 = l8;
      i1 = l7;
      i2 = 4u;
      i1 += i2;
      i1 = i32_load((&M0), (u64)(i1));
      i32_store((&M0), (u64)(i0), i1);
      goto B8;
      B23:;
      i0 = l9;
      i1 = 211u;
      i0 = i0 > i1;
      if (i0) {goto B146;}
      i0 = l7;
      i1 = l9;
      i2 = 4294967088u;
      i1 += i2;
      i2 = l7;
      i2 = i32_load((&M0), (u64)(i2));
      i1 = mp_unary_op(i1, i2);
      i32_store((&M0), (u64)(i0), i1);
      i0 = l7;
      l8 = i0;
      goto B8;
      B146:;
      i0 = l9;
      i1 = 249u;
      i0 = i0 > i1;
      if (i0) {goto B12;}
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      l8 = i0;
      i1 = l9;
      i2 = 4294967081u;
      i1 += i2;
      i2 = l8;
      i2 = i32_load((&M0), (u64)(i2));
      i3 = l7;
      i3 = i32_load((&M0), (u64)(i3));
      i1 = mp_binary_op(i1, i2, i3);
      i32_store((&M0), (u64)(i0), i1);
      goto B8;
      B22:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      l6 = i0;
      i1 = l1;
      i0 = i0 < i1;
      if (i0) {goto B147;}
      L148: vm_checktime();
        i0 = l6;
        i1 = 8u;
        i0 += i1;
        i0 = i32_load((&M0), (u64)(i0));
        p1 = i0;
        if (i0) {goto B5;}
        i0 = l6;
        i1 = 4294967284u;
        i0 += i1;
        l6 = i0;
        i1 = l1;
        i0 = i0 >= i1;
        if (i0) {goto L148;}
      B147:;
      i0 = 32352u;
      i1 = 11640u;
      i0 = mp_obj_new_exception_msg(i0, i1);
      p1 = i0;
      goto B5;
      B21:;
      i0 = l7;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = mp_make_raise_obj(i0);
      p1 = i0;
      goto B5;
      B20:;
      i0 = 0u;
      i1 = 12358u;
      i2 = 0u;
      mp_warning(i0, i1, i2);
      i0 = l7;
      i1 = 4294967292u;
      i0 += i1;
      i0 = i32_load((&M0), (u64)(i0));
      i0 = mp_make_raise_obj(i0);
      p1 = i0;
      goto B5;
      B19:;
      i0 = 32232u;
      i1 = 10661u;
      i0 = mp_obj_new_exception_msg(i0, i1);
      p1 = i0;
      goto B5;
      B18:;
      i0 = l10;
      i1 = 1u;
      i0 = i0 == i1;
      if (i0) {goto B14;}
      nlr_pop();
      i0 = l0;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 4));
      p1 = i1;
      i32_store((&M0), (u64)(i0 + 12), i1);
      i0 = p1;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = 31152u;
      i0 = mp_obj_is_subclass_fast(i0, i1);
      if (i0) {goto B3;}
      goto B2;
      B17:;
      nlr_pop();
      i0 = l0;
      i1 = l7;
      i1 = i32_load((&M0), (u64)(i1));
      p1 = i1;
      i32_store((&M0), (u64)(i0 + 12), i1);
      i0 = p1;
      i0 = i32_load((&M0), (u64)(i0));
      i1 = 31152u;
      i0 = mp_obj_is_subclass_fast(i0, i1);
      if (i0) {goto B3;}
      goto B2;
      B16:;
      i0 = l9;
      i0 = mp_make_raise_obj(i0);
      p1 = i0;
      goto B5;
      B15:;
      nlr_pop();
      i0 = p0;
      i1 = 8u;
      i0 += i1;
      i1 = l7;
      i32_store((&M0), (u64)(i0), i1);
      i0 = 0u;
      i1 = 0u;
      i1 = i32_load((&M0), (u64)(i1 + 40192));
      i2 = 4294967295u;
      i1 += i2;
      p1 = i1;
      i32_store((&M0), (u64)(i0 + 40192), i1);
      i0 = p1;
      i0 = !(i0);
      if (i0) {goto B149;}
      i0 = l0;
      i1 = 192u;
      i0 += i1;
      g0 = i0;
      i0 = 0u;
      goto Bfunc;
      B149:;
      i0 = 0u;
      i1 = 10u;
      i32_store((&M0), (u64)(i0 + 40192), i1);
      mp_js_hook();
      i0 = l0;
      i1 = 192u;
      i0 += i1;
      g0 = i0;
      i0 = 0u;
      goto Bfunc;
      B14:;
      i0 = l7;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 4));
      i32_store((&M0), (u64)(i0), i1);
      i0 = l6;
      p1 = i0;
      B13:;
      nlr_pop();
      i0 = p0;
      i1 = 8u;
      i0 += i1;
      i1 = l7;
      i32_store((&M0), (u64)(i0), i1);
      i0 = p0;
      i1 = 4u;
      i0 += i1;
      i1 = p1;
      i32_store((&M0), (u64)(i0), i1);
      i0 = p0;
      i1 = 14u;
      i0 += i1;
      i1 = l0;
      i1 = i32_load((&M0), (u64)(i1 + 184));
      i2 = 12u;
      i1 += i2;
      i2 = l1;
      i1 -= i2;
      i2 = 12u;
      i1 = I32_DIV_S(i1, i2);
      i32_store16((&M0), (u64)(i0), i1);
      i0 = l0;
      i1 = 192u;
      i0 += i1;
      g0 = i0;
      i0 = 1u;
      goto Bfunc;
      B12:;
      i0 = 32412u;
      i1 = 12944u;
      i0 = mp_obj_new_exception_msg(i0, i1);
      p1 = i0;
      nlr_pop();
      i0 = p0;
      i1 = 20u;
      i0 += i1;
      i1 = p1;
      i32_store((&M0), (u64)(i0), i1);
      goto B0;
      B11:;
      i0 = 0u;
      i0 = i32_load16_u((&M0), (u64)(i0 + 5312));
      if (i0) {goto L7;}
      i0 = 0u;
      i0 = i32_load((&M0), (u64)(i0 + 5200));
      p1 = i0;
      if (i0) {goto B150;}
      i0 = 0u;
      mp_handle_pending_tail(i0);
      goto L7;
      B150:;
      i0 = 0u;
      i1 = 0u;
      i32_store((&M0), (u64)(i0 + 5200), i1);
      i0 = 0u;
      i0 = i32_load8_u((&M0), (u64)(i0 + 5314));
      if (i0) {goto B5;}
      i0 = 0u;
      i1 = 1u;
      i32_store16((&M0), (u64)(i0 + 5312), i1);
      goto B5;
      B10:;
      i0 = l7;
      i1 = p1;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      goto L7;
      B9:;
      i0 = l7;
      i1 = l6;
      i32_store((&M0), (u64)(i0 + 4), i1);
      i0 = l7;
      i1 = 4u;
      i0 += i1;
      l8 = i0;
      B8:;
      i0 = p1;
      l6 = i0;
      goto L7;
    B5:;
    nlr_pop();
    i0 = l0;
    i1 = p1;
    i32_store((&M0), (u64)(i0 + 12), i1);
    i0 = p1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 31152u;
    i0 = mp_obj_is_subclass_fast(i0, i1);
    i0 = !(i0);
    if (i0) {goto B2;}
    B3:;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l6 = i0;
    i1 = 104u;
    i0 = i0 != i1;
    if (i0) {goto B151;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    i0 = mp_obj_exception_get_value(i0);
    p1 = i0;
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    i1 = l5;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    goto L1;
    B151:;
    i0 = l6;
    i1 = 75u;
    i0 = i0 != i1;
    if (i0) {goto B2;}
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0 + 1));
    l6 = i0;
    i0 = p1;
    i0 = i32_load8_u((&M0), (u64)(i0 + 2));
    l7 = i0;
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    l8 = i0;
    i1 = l8;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 4294967280u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    i1 = p1;
    i2 = l6;
    i3 = l7;
    i4 = 8u;
    i3 <<= (i4 & 31);
    i2 |= i3;
    i1 += i2;
    i2 = 3u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    goto L1;
    B2:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    l11 = i0;
    i1 = 33288u;
    i0 = i0 == i1;
    if (i0) {goto B152;}
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l12 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p1 = i0;
    i1 = 93u;
    i0 = i0 == i1;
    if (i0) {goto B152;}
    i0 = p1;
    i1 = 100u;
    i0 = i0 == i1;
    if (i0) {goto B152;}
    i0 = p0;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = i32_load((&M0), (u64)(i0 + 8));
    p1 = i0;
    L153: vm_checktime();
      i0 = p1;
      i0 = i32_load8_s((&M0), (u64)(i0));
      l6 = i0;
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      l8 = i0;
      p1 = i0;
      i0 = l6;
      i1 = 0u;
      i0 = (u32)((s32)i0 < (s32)i1);
      if (i0) {goto L153;}
    i0 = 0u;
    l6 = i0;
    i0 = 0u;
    l9 = i0;
    i0 = 0u;
    l10 = i0;
    i0 = 0u;
    p1 = i0;
    L154: vm_checktime();
      i0 = l8;
      i1 = p1;
      i0 += i1;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l7 = i0;
      i1 = 1u;
      i0 &= i1;
      i1 = p1;
      i0 <<= (i1 & 31);
      i1 = l10;
      i0 |= i1;
      l10 = i0;
      i0 = l7;
      i1 = 1u;
      i0 >>= (i1 & 31);
      i1 = 63u;
      i0 &= i1;
      i1 = l6;
      i0 <<= (i1 & 31);
      i1 = l9;
      i0 |= i1;
      l9 = i0;
      i0 = l6;
      i1 = 6u;
      i0 += i1;
      l6 = i0;
      i0 = p1;
      i1 = 1u;
      i0 += i1;
      l13 = i0;
      p1 = i0;
      i0 = l7;
      i1 = 128u;
      i0 &= i1;
      if (i0) {goto L154;}
    i0 = l8;
    i1 = l13;
    i0 += i1;
    p1 = i0;
    i1 = 3u;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 8u;
    i0 <<= (i1 & 31);
    i1 = p1;
    i2 = 2u;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i0 |= i1;
    l14 = i0;
    i0 = 1u;
    l15 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 8u;
    i0 <<= (i1 & 31);
    i1 = p1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i0 |= i1;
    l16 = i0;
    i0 = p1;
    i1 = 4u;
    i0 += i1;
    l17 = i0;
    i0 = l12;
    i1 = l8;
    i2 = l9;
    i3 = l10;
    i2 += i3;
    i1 += i2;
    i2 = l13;
    i1 += i2;
    i0 -= i1;
    p1 = i0;
    L156: vm_checktime();
      i0 = l17;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l6 = i0;
      i0 = !(i0);
      if (i0) {goto B155;}
      i0 = l6;
      i1 = 128u;
      i0 &= i1;
      if (i0) {goto B158;}
      i0 = l6;
      i1 = 5u;
      i0 >>= (i1 & 31);
      l8 = i0;
      i0 = l6;
      i1 = 31u;
      i0 &= i1;
      l7 = i0;
      i0 = 1u;
      l6 = i0;
      goto B157;
      B158:;
      i0 = l6;
      i1 = 15u;
      i0 &= i1;
      l7 = i0;
      i0 = l6;
      i1 = 4u;
      i0 <<= (i1 & 31);
      i1 = 1792u;
      i0 &= i1;
      i1 = l17;
      i1 = i32_load8_u((&M0), (u64)(i1 + 1));
      i0 |= i1;
      l8 = i0;
      i0 = 2u;
      l6 = i0;
      B157:;
      i0 = l17;
      i1 = l6;
      i0 += i1;
      l17 = i0;
      i0 = 0u;
      i1 = l8;
      i2 = p1;
      i3 = l7;
      i2 = i2 < i3;
      l6 = i2;
      i0 = i2 ? i0 : i1;
      i1 = l15;
      i0 += i1;
      l15 = i0;
      i0 = p1;
      i1 = l7;
      i0 = i0 >= i1;
      l8 = i0;
      i0 = p1;
      i1 = 0u;
      i2 = l7;
      i3 = l6;
      i1 = i3 ? i1 : i2;
      i0 -= i1;
      p1 = i0;
      i0 = l8;
      if (i0) {goto L156;}
    B155:;
    i0 = l11;
    i1 = l14;
    i2 = l15;
    i3 = l16;
    mp_obj_exception_add_traceback(i0, i1, i2, i3);
    B152:;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 184));
    l6 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 184));
    p1 = i0;
    i0 = l6;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto B159;}
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l7 = i0;
    L160: vm_checktime();
      i0 = p1;
      i0 = i32_load((&M0), (u64)(i0));
      l6 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      p1 = i0;
      i0 = l6;
      i1 = l7;
      i0 = i0 > i1;
      if (i0) {goto B159;}
      i0 = l0;
      i1 = p1;
      i2 = 4294967284u;
      i1 += i2;
      i32_store((&M0), (u64)(i0 + 184), i1);
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      l6 = i0;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 184));
      p1 = i0;
      i0 = l6;
      i1 = l1;
      i0 = i0 >= i1;
      if (i0) {goto L160;}
    B159:;
    i0 = p1;
    i1 = l1;
    i0 = i0 < i1;
    if (i0) {goto B161;}
    i0 = l5;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 184));
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 184));
    l6 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 12));
    p1 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 184));
    i1 = p1;
    i32_store((&M0), (u64)(i0 + 8), i1);
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0 + 4));
    i1 = 4294967292u;
    i0 &= i1;
    l6 = i0;
    i1 = p1;
    i32_store((&M0), (u64)(i0 + 4), i1);
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    i1 = l6;
    i2 = 4u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    goto L1;
    B161:;
  i0 = p0;
  i1 = 20u;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = l0;
  i1 = 192u;
  i0 += i1;
  g0 = i0;
  i0 = 2u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_setup_code_state(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0, l15 = 0, 
      l16 = 0, l17 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 64u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i1 += i2;
  l2 = i1;
  i2 = 1u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l2;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l3 = i0;
  i1 = 3u;
  i0 &= i1;
  l4 = i0;
  i0 = p0;
  i0 = i32_load16_u((&M0), (u64)(i0 + 12));
  l5 = i0;
  i0 = l3;
  i1 = 24u;
  i0 <<= (i1 & 31);
  i1 = 24u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B1;}
  i0 = 0u;
  l6 = i0;
  i0 = 0u;
  l7 = i0;
  i0 = 0u;
  l8 = i0;
  goto B0;
  B1:;
  i0 = 0u;
  l8 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l7 = i0;
  i0 = 0u;
  l6 = i0;
  L2: vm_checktime();
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    i1 = l2;
    i2 = l3;
    i1 += i2;
    l9 = i1;
    i2 = 2u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l9;
    i1 = 1u;
    i0 += i1;
    i0 = i32_load8_s((&M0), (u64)(i0));
    l9 = i0;
    i1 = 1u;
    i0 &= i1;
    i1 = l3;
    i0 <<= (i1 & 31);
    i1 = l7;
    i0 |= i1;
    l7 = i0;
    i0 = l9;
    i1 = 4u;
    i0 &= i1;
    i1 = l3;
    i0 <<= (i1 & 31);
    i1 = l4;
    i0 |= i1;
    l4 = i0;
    i0 = l9;
    i1 = 255u;
    i0 &= i1;
    l10 = i0;
    i1 = 3u;
    i0 >>= (i1 & 31);
    i1 = 1u;
    i0 &= i1;
    i1 = l3;
    i0 <<= (i1 & 31);
    i1 = l6;
    i0 |= i1;
    l6 = i0;
    i0 = l10;
    i1 = 6u;
    i0 >>= (i1 & 31);
    i1 = 1u;
    i0 &= i1;
    i1 = l3;
    i0 <<= (i1 & 31);
    i1 = l8;
    i0 |= i1;
    l8 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l9;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L2;}
  B0:;
  i0 = p0;
  i1 = 0u;
  i32_store16((&M0), (u64)(i0 + 14), i1);
  i0 = p0;
  i1 = p0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  i1 = 20u;
  i0 += i1;
  l3 = i0;
  i1 = 0u;
  i2 = l5;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l3;
  i1 = l5;
  i2 = 4294967295u;
  i1 += i2;
  l11 = i1;
  i2 = l4;
  i1 -= i2;
  i2 = l6;
  i1 -= i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l2 = i0;
  i0 = l8;
  i1 = 4u;
  i0 &= i1;
  l3 = i0;
  i0 = l4;
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B10;}
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l2;
  i1 = p1;
  i2 = l4;
  i1 -= i2;
  i2 = p3;
  i3 = l4;
  i4 = 2u;
  i3 <<= (i4 & 31);
  i2 += i3;
  i1 = mp_obj_new_tuple(i1, i2);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 4294967292u;
  i0 += i1;
  l2 = i0;
  i0 = l4;
  l10 = i0;
  if (i0) {goto B9;}
  goto B8;
  B10:;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l2;
  i1 = 36748u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l2;
  i1 = 4294967292u;
  i0 += i1;
  l2 = i0;
  B11:;
  i0 = l8;
  i1 = 8u;
  i0 &= i1;
  i1 = p2;
  i0 |= i1;
  if (i0) {goto B12;}
  i0 = l4;
  i1 = l7;
  i0 -= i1;
  l3 = i0;
  i1 = p1;
  i0 = i0 > i1;
  if (i0) {goto B5;}
  i0 = l4;
  i1 = p1;
  i0 = i0 <= i1;
  if (i0) {goto B12;}
  i0 = p0;
  i1 = l5;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i2 = 16u;
  i1 += i2;
  i2 = p1;
  i3 = 2u;
  i2 <<= (i3 & 31);
  i1 -= i2;
  i0 += i1;
  l3 = i0;
  i0 = l1;
  i1 = l7;
  i2 = p1;
  i1 += i2;
  i2 = l4;
  i1 -= i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 16u;
  i0 += i1;
  l9 = i0;
  i0 = l4;
  l10 = i0;
  L13: vm_checktime();
    i0 = l3;
    i1 = l9;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 4294967292u;
    i0 += i1;
    l3 = i0;
    i0 = l9;
    i1 = 4u;
    i0 += i1;
    l9 = i0;
    i0 = p1;
    i1 = l10;
    i2 = 4294967295u;
    i1 += i2;
    l10 = i1;
    i0 = i0 != i1;
    if (i0) {goto L13;}
  B12:;
  i0 = p1;
  l10 = i0;
  i0 = !(i0);
  if (i0) {goto B8;}
  B9:;
  i0 = p0;
  i1 = l5;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 16u;
  i0 += i1;
  l3 = i0;
  i0 = p3;
  l9 = i0;
  L14: vm_checktime();
    i0 = l3;
    i1 = l9;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 4294967292u;
    i0 += i1;
    l3 = i0;
    i0 = l9;
    i1 = 4u;
    i0 += i1;
    l9 = i0;
    i0 = l10;
    i1 = 4294967295u;
    i0 += i1;
    l10 = i0;
    if (i0) {goto L14;}
  B8:;
  i0 = l8;
  i1 = 8u;
  i0 &= i1;
  l12 = i0;
  i1 = p2;
  i0 |= i1;
  i0 = !(i0);
  if (i0) {goto B20;}
  i0 = 0u;
  l13 = i0;
  i0 = l8;
  i1 = 2u;
  i0 &= i1;
  l14 = i0;
  i0 = !(i0);
  if (i0) {goto B21;}
  i0 = l2;
  i1 = p2;
  i1 = mp_obj_new_dict(i1);
  l13 = i1;
  i32_store((&M0), (u64)(i0), i1);
  B21:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l15 = i0;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B18;}
  i0 = p3;
  i1 = p1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l16 = i0;
  i0 = l4;
  i1 = l6;
  i0 += i1;
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B19;}
  i0 = p0;
  i1 = l5;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 16u;
  i0 += i1;
  l17 = i0;
  i0 = 0u;
  p1 = i0;
  L22: vm_checktime();
    i0 = p1;
    i1 = 1u;
    i0 <<= (i1 & 31);
    p3 = i0;
    i0 = l16;
    i1 = p1;
    i2 = 3u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l8 = i0;
    i0 = l15;
    l3 = i0;
    i0 = l17;
    l9 = i0;
    i0 = 0u;
    l10 = i0;
    L24: vm_checktime();
      i0 = l8;
      i1 = l3;
      i1 = i32_load((&M0), (u64)(i1));
      i0 = i0 == i1;
      if (i0) {goto B23;}
      i0 = l3;
      i1 = 4u;
      i0 += i1;
      l3 = i0;
      i0 = l9;
      i1 = 4294967292u;
      i0 += i1;
      l9 = i0;
      i0 = l10;
      i1 = 1u;
      i0 += i1;
      l10 = i0;
      i1 = l2;
      i0 = i0 < i1;
      if (i0) {goto L24;}
    i0 = l14;
    i0 = !(i0);
    if (i0) {goto B3;}
    i0 = l13;
    i1 = l8;
    i2 = l16;
    i3 = p3;
    i4 = 2u;
    i3 <<= (i4 & 31);
    i4 = 4u;
    i3 |= i4;
    i2 += i3;
    i2 = i32_load((&M0), (u64)(i2));
    i0 = mp_obj_dict_store(i0, i1, i2);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L22;}
    goto B18;
    B23:;
    i0 = l9;
    i0 = i32_load((&M0), (u64)(i0));
    if (i0) {goto B15;}
    i0 = l9;
    i1 = l16;
    i2 = p3;
    i3 = 2u;
    i2 <<= (i3 & 31);
    i3 = 4u;
    i2 |= i3;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L22;}
    goto B18;
  B20:;
  i0 = l6;
  if (i0) {goto B6;}
  i0 = l8;
  i1 = 2u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B17;}
  i0 = l2;
  i1 = 0u;
  i1 = mp_obj_new_dict(i1);
  i32_store((&M0), (u64)(i0), i1);
  goto B17;
  B19:;
  i0 = l14;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p3;
  i1 = p1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  L25: vm_checktime();
    i0 = l13;
    i1 = l3;
    i2 = 4294967292u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = l3;
    i2 = i32_load((&M0), (u64)(i2));
    i0 = mp_obj_dict_store(i0, i1, i2);
    i0 = l3;
    i1 = 8u;
    i0 += i1;
    l3 = i0;
    i0 = p2;
    i1 = 4294967295u;
    i0 += i1;
    p2 = i0;
    if (i0) {goto L25;}
  B18:;
  i0 = p0;
  i1 = l5;
  i2 = l4;
  i1 -= i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 20u;
  i0 += i1;
  l9 = i0;
  i0 = l7;
  i0 = !(i0);
  if (i0) {goto B27;}
  i0 = l1;
  i1 = l7;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 12u;
  i0 += i1;
  l10 = i0;
  i0 = p0;
  i1 = l7;
  i2 = l5;
  i1 += i2;
  i2 = l4;
  i1 -= i2;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 20u;
  i0 += i1;
  l3 = i0;
  i0 = l7;
  l8 = i0;
  L28: vm_checktime();
    i0 = l9;
    i0 = i32_load((&M0), (u64)(i0));
    if (i0) {goto B29;}
    i0 = l9;
    i1 = l10;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    B29:;
    i0 = l10;
    i1 = 4294967292u;
    i0 += i1;
    l10 = i0;
    i0 = l9;
    i1 = 4u;
    i0 += i1;
    l9 = i0;
    i0 = l8;
    i1 = 4294967295u;
    i0 += i1;
    l8 = i0;
    if (i0) {goto L28;}
    goto B26;
  B27:;
  i0 = l9;
  l3 = i0;
  B26:;
  i0 = p0;
  i1 = l5;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 20u;
  i0 += i1;
  l10 = i0;
  L31: vm_checktime();
    i0 = l3;
    i1 = l10;
    i0 = i0 >= i1;
    if (i0) {goto B30;}
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    l9 = i0;
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l8 = i0;
    l3 = i0;
    i0 = l9;
    if (i0) {goto L31;}
  i0 = l0;
  i1 = l10;
  i2 = l8;
  i1 -= i2;
  i2 = 2u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 12391u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B30:;
  i0 = l6;
  i0 = !(i0);
  if (i0) {goto B17;}
  i0 = l12;
  if (i0) {goto B32;}
  i0 = p0;
  i1 = l5;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i2 = 16u;
  i1 += i2;
  i2 = l4;
  i3 = 2u;
  i2 <<= (i3 & 31);
  l3 = i2;
  i1 -= i2;
  i0 += i1;
  l9 = i0;
  i0 = l15;
  i1 = l3;
  i0 += i1;
  l3 = i0;
  i0 = 0u;
  l10 = i0;
  L33: vm_checktime();
    i0 = l9;
    i0 = i32_load((&M0), (u64)(i0));
    i0 = !(i0);
    if (i0) {goto B16;}
    i0 = l9;
    i1 = 4294967292u;
    i0 += i1;
    l9 = i0;
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l3 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    l10 = i0;
    i1 = l6;
    i0 = i0 < i1;
    if (i0) {goto L33;}
    goto B17;
  B32:;
  i0 = l1;
  i1 = l7;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i0 += i1;
  i1 = 16u;
  i0 += i1;
  l2 = i0;
  i0 = p0;
  i1 = l5;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i2 = 16u;
  i1 += i2;
  i2 = l4;
  i3 = 2u;
  i2 <<= (i3 & 31);
  l3 = i2;
  i1 -= i2;
  i0 += i1;
  l9 = i0;
  i0 = l15;
  i1 = l3;
  i0 += i1;
  l3 = i0;
  i0 = 0u;
  l10 = i0;
  L34: vm_checktime();
    i0 = l9;
    i0 = i32_load((&M0), (u64)(i0));
    if (i0) {goto B35;}
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = 4u;
    i0 += i1;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 0u;
    i0 = mp_map_lookup(i0, i1, i2);
    l8 = i0;
    i0 = !(i0);
    if (i0) {goto B16;}
    i0 = l9;
    i1 = l8;
    i1 = i32_load((&M0), (u64)(i1 + 4));
    i32_store((&M0), (u64)(i0), i1);
    B35:;
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l3 = i0;
    i0 = l9;
    i1 = 4294967292u;
    i0 += i1;
    l9 = i0;
    i0 = l10;
    i1 = 1u;
    i0 += i1;
    l10 = i0;
    i1 = l6;
    i0 = i0 < i1;
    if (i0) {goto L34;}
  B17:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l6 = i0;
  i0 = 0u;
  l10 = i0;
  i0 = 0u;
  l2 = i0;
  i0 = 0u;
  l9 = i0;
  i0 = 0u;
  l3 = i0;
  L36: vm_checktime();
    i0 = l6;
    i1 = l3;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l8 = i0;
    i1 = 1u;
    i0 &= i1;
    i1 = l3;
    i0 <<= (i1 & 31);
    i1 = l9;
    i0 |= i1;
    l9 = i0;
    i0 = l8;
    i1 = 1u;
    i0 >>= (i1 & 31);
    i1 = 63u;
    i0 &= i1;
    i1 = l10;
    i0 <<= (i1 & 31);
    i1 = l2;
    i0 |= i1;
    l2 = i0;
    i0 = l10;
    i1 = 6u;
    i0 += i1;
    l10 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    p1 = i0;
    l3 = i0;
    i0 = l8;
    i1 = 128u;
    i0 &= i1;
    if (i0) {goto L36;}
  i0 = l6;
  i1 = l2;
  i2 = p1;
  i1 += i2;
  i0 += i1;
  l3 = i0;
  i0 = l9;
  i0 = !(i0);
  if (i0) {goto B37;}
  i0 = l9;
  i1 = l2;
  i0 += i1;
  l8 = i0;
  L38: vm_checktime();
    i0 = p0;
    i1 = l11;
    i2 = l3;
    i2 = i32_load8_u((&M0), (u64)(i2));
    i1 -= i2;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i1 = 20u;
    i0 += i1;
    l10 = i0;
    i1 = l10;
    i1 = i32_load((&M0), (u64)(i1));
    i1 = mp_obj_new_cell(i1);
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l9;
    i1 = 4294967295u;
    i0 += i1;
    l9 = i0;
    if (i0) {goto L38;}
  i0 = l6;
  i1 = l8;
  i0 += i1;
  i1 = p1;
  i0 += i1;
  l3 = i0;
  B37:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B16:;
  i0 = l0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 3u;
  i1 >>= (i2 & 31);
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 32592u;
  i1 = 12951u;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B15:;
  i0 = l0;
  i1 = l8;
  i2 = 3u;
  i1 >>= (i2 & 31);
  i32_store((&M0), (u64)(i0 + 48), i1);
  i0 = 32592u;
  i1 = 10705u;
  i2 = l0;
  i3 = 48u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  B7:;
  i0 = l4;
  i1 = p1;
  fun_pos_args_mismatch(i0, i1);
  UNREACHABLE;
  B6:;
  i0 = 13343u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B5:;
  i0 = l3;
  i1 = p1;
  fun_pos_args_mismatch(i0, i1);
  UNREACHABLE;
  B4:;
  i0 = l16;
  i0 = i32_load((&M0), (u64)(i0));
  l8 = i0;
  B3:;
  i0 = l0;
  i1 = l8;
  i2 = 3u;
  i1 >>= (i2 & 31);
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = 32592u;
  i1 = 11671u;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void fun_pos_args_mismatch(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 32592u;
  i1 = 13753u;
  i2 = l0;
  mp_raise_msg_varg(i0, i1, i2);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static u32 mp_opcode_format(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 932u;
  i1 = p0;
  i1 = i32_load8_u((&M0), (u64)(i1));
  l0 = i1;
  i2 = 3u;
  i1 >>= (i2 & 31);
  i2 = 30u;
  i1 &= i2;
  i0 >>= (i1 & 31);
  i1 = 3u;
  i0 &= i1;
  l1 = i0;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = p0;
  i2 = 3u;
  i1 += i2;
  i2 = p0;
  i1 -= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 158u;
  i0 &= i1;
  i0 = !(i0);
  l2 = i0;
  i0 = l1;
  i1 = 3u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  l0 = i0;
  i0 = l1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B1;}
  L4: vm_checktime();
    i0 = l0;
    i0 = i32_load8_s((&M0), (u64)(i0));
    p2 = i0;
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    l0 = i0;
    i0 = p2;
    i1 = 0u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L4;}
  i0 = p1;
  i1 = l3;
  i2 = l2;
  i1 += i2;
  i2 = p0;
  i1 -= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  goto Bfunc;
  B3:;
  i0 = p1;
  i1 = p0;
  i2 = 3u;
  i1 += i2;
  i2 = l2;
  i1 += i2;
  i2 = p0;
  i1 -= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  goto Bfunc;
  B2:;
  i0 = p1;
  i1 = l0;
  i2 = l2;
  i1 += i2;
  i2 = p0;
  i1 -= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = l0;
  i2 = l2;
  i1 += i2;
  i2 = p0;
  i1 -= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_small_int_mul_overflow(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B3;}
  i0 = 1u;
  l0 = i0;
  i0 = 1073741823u;
  i1 = p1;
  i0 = DIV_U(i0, i1);
  i1 = p0;
  i0 = (u32)((s32)i0 >= (s32)i1);
  if (i0) {goto B1;}
  goto B0;
  B4:;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = 1u;
  l0 = i0;
  i0 = 3221225472u;
  i1 = p1;
  i0 = I32_DIV_S(i0, i1);
  i1 = p0;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  goto B1;
  B3:;
  i0 = 1u;
  l0 = i0;
  i0 = 3221225472u;
  i1 = p0;
  i0 = I32_DIV_S(i0, i1);
  i1 = p1;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  goto B1;
  B2:;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 1u;
  l0 = i0;
  i0 = 1073741823u;
  i1 = p0;
  i0 = I32_DIV_S(i0, i1);
  i1 = p1;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_small_int_modulo(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  i0 = I32_REM_S(i0, i1);
  p0 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  B2:;
  i0 = p1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = p1;
  i0 += i1;
  p0 = i0;
  B0:;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_small_int_floor_divide(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 4294967295u;
  i0 ^= i1;
  i1 = p0;
  i0 += i1;
  i1 = p1;
  i0 = I32_DIV_S(i0, i1);
  goto Bfunc;
  B1:;
  i0 = p1;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  i1 = p1;
  i0 -= i1;
  p0 = i0;
  B0:;
  i0 = p0;
  i1 = p1;
  i0 = I32_DIV_S(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_frozen_stat(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = strlen_0(i0);
  l0 = i0;
  i0 = 0u;
  i0 = i32_load8_u((&M0), (u64)(i0 + 43520));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 43520u;
  l1 = i0;
  L3: vm_checktime();
    i0 = l1;
    i0 = strlen_0(i0);
    l2 = i0;
    i1 = l0;
    i0 = i0 < i1;
    if (i0) {goto B4;}
    i0 = p0;
    i1 = l1;
    i2 = l0;
    i0 = memcmp_0(i0, i1, i2);
    if (i0) {goto B4;}
    i0 = l1;
    i1 = l0;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l3 = i0;
    i0 = !(i0);
    if (i0) {goto B1;}
    i0 = l3;
    i1 = 47u;
    i0 = i0 == i1;
    if (i0) {goto B0;}
    B4:;
    i0 = l1;
    i1 = l2;
    i0 += i1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    if (i0) {goto L3;}
  B2:;
  i0 = 0u;
  goto Bfunc;
  B1:;
  i0 = 2u;
  goto Bfunc;
  B0:;
  i0 = 1u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_find_frozen_module(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  l0 = i0;
  i0 = 0u;
  i0 = i32_load8_u((&M0), (u64)(i0 + 43520));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 43520u;
  l1 = i0;
  i0 = 43552u;
  l2 = i0;
  L2: vm_checktime();
    i0 = l1;
    i0 = strlen_0(i0);
    l3 = i0;
    i1 = p1;
    i0 = i0 != i1;
    if (i0) {goto B3;}
    i0 = p0;
    i1 = l1;
    i2 = p1;
    i0 = memcmp_0(i0, i1, i2);
    i0 = !(i0);
    if (i0) {goto B1;}
    B3:;
    i0 = l2;
    i1 = 4u;
    i0 += i1;
    l2 = i0;
    i0 = l1;
    i1 = l3;
    i0 += i1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    if (i0) {goto L2;}
    goto B0;
  B1:;
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p2;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 2u;
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_ujson_dump(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 2u;
  i0 = mp_get_stream_raise(i0, i1);
  i0 = l0;
  i1 = 342u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i2 = 3u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_ujson_dumps(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 8u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  vstr_init_print(i0, i1, i2);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i2 = 3u;
  mp_obj_print_helper(i0, i1, i2);
  i0 = 36168u;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_ujson_load(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = mp_get_stream_raise(i0, i1);
  l1 = i0;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0 + 44), i1);
  i0 = l0;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 8u;
  vstr_init(i0, i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  i1 = l0;
  i2 = 44u;
  i1 += i2;
  l2 = i1;
  i2 = 1u;
  i3 = l0;
  i4 = 32u;
  i3 += i4;
  i4 = 8u;
  i3 += i4;
  l3 = i3;
  i4 = l0;
  i4 = i32_load((&M0), (u64)(i4 + 36));
  i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  l1 = i0;
  if (i0) {goto B4;}
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = 12u;
  i0 += i1;
  l4 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  l5 = i0;
  i0 = 0u;
  l6 = i0;
  i0 = 0u;
  l7 = i0;
  i0 = 0u;
  l8 = i0;
  L5: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l9 = i0;
    if (i0) {goto B31;}
    i0 = p0;
    if (i0) {goto B32;}
    i0 = l4;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    B32:;
    i0 = l1;
    i1 = 255u;
    i0 &= i1;
    i1 = 4294967287u;
    i0 += i1;
    p0 = i0;
    i1 = 116u;
    i0 = i0 > i1;
    if (i0) {goto B0;}
    i0 = p0;
    switch (i0) {
      case 0: goto B6;
      case 1: goto B6;
      case 2: goto B0;
      case 3: goto B0;
      case 4: goto B6;
      case 5: goto B0;
      case 6: goto B0;
      case 7: goto B0;
      case 8: goto B0;
      case 9: goto B0;
      case 10: goto B0;
      case 11: goto B0;
      case 12: goto B0;
      case 13: goto B0;
      case 14: goto B0;
      case 15: goto B0;
      case 16: goto B0;
      case 17: goto B0;
      case 18: goto B0;
      case 19: goto B0;
      case 20: goto B0;
      case 21: goto B0;
      case 22: goto B0;
      case 23: goto B6;
      case 24: goto B0;
      case 25: goto B44;
      case 26: goto B0;
      case 27: goto B0;
      case 28: goto B0;
      case 29: goto B0;
      case 30: goto B0;
      case 31: goto B0;
      case 32: goto B0;
      case 33: goto B0;
      case 34: goto B0;
      case 35: goto B6;
      case 36: goto B36;
      case 37: goto B0;
      case 38: goto B0;
      case 39: goto B36;
      case 40: goto B36;
      case 41: goto B36;
      case 42: goto B36;
      case 43: goto B36;
      case 44: goto B36;
      case 45: goto B36;
      case 46: goto B36;
      case 47: goto B36;
      case 48: goto B36;
      case 49: goto B6;
      case 50: goto B0;
      case 51: goto B0;
      case 52: goto B0;
      case 53: goto B0;
      case 54: goto B0;
      case 55: goto B0;
      case 56: goto B0;
      case 57: goto B0;
      case 58: goto B0;
      case 59: goto B0;
      case 60: goto B0;
      case 61: goto B0;
      case 62: goto B0;
      case 63: goto B0;
      case 64: goto B0;
      case 65: goto B0;
      case 66: goto B0;
      case 67: goto B0;
      case 68: goto B0;
      case 69: goto B0;
      case 70: goto B0;
      case 71: goto B0;
      case 72: goto B0;
      case 73: goto B0;
      case 74: goto B0;
      case 75: goto B0;
      case 76: goto B0;
      case 77: goto B0;
      case 78: goto B0;
      case 79: goto B0;
      case 80: goto B0;
      case 81: goto B0;
      case 82: goto B42;
      case 83: goto B0;
      case 84: goto B46;
      case 85: goto B0;
      case 86: goto B0;
      case 87: goto B0;
      case 88: goto B0;
      case 89: goto B0;
      case 90: goto B0;
      case 91: goto B0;
      case 92: goto B0;
      case 93: goto B43;
      case 94: goto B0;
      case 95: goto B0;
      case 96: goto B0;
      case 97: goto B0;
      case 98: goto B0;
      case 99: goto B0;
      case 100: goto B0;
      case 101: goto B41;
      case 102: goto B0;
      case 103: goto B0;
      case 104: goto B0;
      case 105: goto B0;
      case 106: goto B0;
      case 107: goto B40;
      case 108: goto B0;
      case 109: goto B0;
      case 110: goto B0;
      case 111: goto B0;
      case 112: goto B0;
      case 113: goto B0;
      case 114: goto B45;
      case 115: goto B0;
      case 116: goto B46;
      default: goto B6;
    }
    B46:;
    i0 = l8;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l0;
    i1 = 8u;
    i0 += i1;
    p0 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i0 = !(i0);
    if (i0) {goto B1;}
    i0 = p0;
    i1 = l1;
    i2 = 4294967295u;
    i1 += i2;
    l1 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 12u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l1;
    i2 = 2u;
    i1 <<= (i2 & 31);
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l8 = i0;
    i0 = mp_obj_get_type(i0);
    l7 = i0;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto L5;}
    goto B1;
    B45:;
    i0 = 0u;
    i0 = mp_obj_new_dict(i0);
    p0 = i0;
    i0 = 1u;
    l1 = i0;
    i0 = l8;
    if (i0) {goto B34;}
    goto B7;
    B44:;
    i0 = l0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0 + 20), i1);
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p0 = i0;
    i0 = !(i0);
    l1 = i0;
    i1 = p0;
    i2 = 34u;
    i1 = i1 != i2;
    i0 = i0 != i1;
    if (i0) {goto B38;}
    goto B37;
    B43:;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 97u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto B26;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B25;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 108u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto B24;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B23;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 115u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto B22;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B21;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 101u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    l9 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    if (i0) {goto B20;}
    i0 = 0u;
    l1 = i0;
    i0 = 14u;
    p0 = i0;
    i0 = l9;
    if (i0) {goto B35;}
    goto B39;
    B42:;
    i0 = 0u;
    i1 = 0u;
    i0 = mp_obj_new_list(i0, i1);
    p0 = i0;
    i0 = 1u;
    l1 = i0;
    i0 = l8;
    if (i0) {goto B34;}
    goto B7;
    B41:;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 117u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto B19;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B18;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 108u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto B17;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B16;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 108u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    l9 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    if (i0) {goto B15;}
    i0 = 0u;
    l1 = i0;
    i0 = 6u;
    p0 = i0;
    i0 = l9;
    if (i0) {goto B35;}
    goto B39;
    B40:;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 114u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto B14;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B13;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 117u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto B12;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B11;}
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 101u;
    i0 = i0 != i1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    l9 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    if (i0) {goto B10;}
    i0 = 0u;
    l1 = i0;
    i0 = 30u;
    p0 = i0;
    i0 = l9;
    if (i0) {goto B35;}
    B39:;
    i0 = 0u;
    l1 = i0;
    i0 = l4;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l8;
    if (i0) {goto B34;}
    goto B7;
    B38:;
    L47: vm_checktime();
      i0 = p0;
      i1 = 255u;
      i0 &= i1;
      i1 = 92u;
      i0 = i0 != i1;
      if (i0) {goto B49;}
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 32));
      i1 = l2;
      i2 = 1u;
      i3 = l3;
      i4 = l0;
      i4 = i32_load((&M0), (u64)(i4 + 36));
      i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
      p0 = i0;
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0));
      l1 = i0;
      if (i0) {goto B28;}
      i0 = p0;
      i0 = !(i0);
      if (i0) {goto B50;}
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      p0 = i0;
      i1 = 4294967198u;
      i0 += i1;
      l1 = i0;
      i1 = 19u;
      i0 = i0 > i1;
      if (i0) {goto B49;}
      i0 = l1;
      switch (i0) {
        case 0: goto B51;
        case 1: goto B49;
        case 2: goto B49;
        case 3: goto B49;
        case 4: goto B56;
        case 5: goto B49;
        case 6: goto B49;
        case 7: goto B49;
        case 8: goto B49;
        case 9: goto B49;
        case 10: goto B49;
        case 11: goto B49;
        case 12: goto B58;
        case 13: goto B49;
        case 14: goto B49;
        case 15: goto B49;
        case 16: goto B55;
        case 17: goto B49;
        case 18: goto B54;
        case 19: goto B57;
        default: goto B51;
      }
      B58:;
      i0 = 10u;
      p0 = i0;
      goto B49;
      B57:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 32));
      i1 = l2;
      i2 = 1u;
      i3 = l3;
      i4 = l0;
      i4 = i32_load((&M0), (u64)(i4 + 36));
      i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
      l1 = i0;
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0));
      p0 = i0;
      if (i0) {goto B27;}
      i0 = l1;
      i0 = !(i0);
      if (i0) {goto B53;}
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l1 = i0;
      goto B52;
      B56:;
      i0 = 12u;
      p0 = i0;
      goto B49;
      B55:;
      i0 = 13u;
      p0 = i0;
      goto B49;
      B54:;
      i0 = 9u;
      p0 = i0;
      goto B49;
      B53:;
      i0 = 0u;
      l1 = i0;
      i0 = l4;
      i1 = 0u;
      i32_store8((&M0), (u64)(i0), i1);
      B52:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 32));
      i1 = l2;
      i2 = 1u;
      i3 = l3;
      i4 = l0;
      i4 = i32_load((&M0), (u64)(i4 + 36));
      i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
      l9 = i0;
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0));
      p0 = i0;
      if (i0) {goto B27;}
      i0 = l9;
      i0 = !(i0);
      if (i0) {goto B60;}
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l9 = i0;
      goto B59;
      B60:;
      i0 = 0u;
      l9 = i0;
      i0 = l4;
      i1 = 0u;
      i32_store8((&M0), (u64)(i0), i1);
      B59:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 32));
      i1 = l2;
      i2 = 1u;
      i3 = l3;
      i4 = l0;
      i4 = i32_load((&M0), (u64)(i4 + 36));
      i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
      l10 = i0;
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0));
      p0 = i0;
      if (i0) {goto B27;}
      i0 = l10;
      i0 = !(i0);
      if (i0) {goto B62;}
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l10 = i0;
      goto B61;
      B62:;
      i0 = 0u;
      l10 = i0;
      i0 = l4;
      i1 = 0u;
      i32_store8((&M0), (u64)(i0), i1);
      B61:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 32));
      i1 = l2;
      i2 = 1u;
      i3 = l3;
      i4 = l0;
      i4 = i32_load((&M0), (u64)(i4 + 36));
      i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
      l11 = i0;
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0));
      p0 = i0;
      if (i0) {goto B27;}
      i0 = l1;
      i1 = 32u;
      i0 |= i1;
      p0 = i0;
      i1 = 4294967209u;
      i0 += i1;
      i1 = p0;
      i2 = 4294967248u;
      i1 += i2;
      p0 = i1;
      i2 = p0;
      i3 = 255u;
      i2 &= i3;
      i3 = 9u;
      i2 = i2 > i3;
      i0 = i2 ? i0 : i1;
      i1 = 255u;
      i0 &= i1;
      i1 = 4u;
      i0 <<= (i1 & 31);
      i1 = l9;
      i2 = 32u;
      i1 |= i2;
      p0 = i1;
      i2 = 4294967209u;
      i1 += i2;
      i2 = p0;
      i3 = 4294967248u;
      i2 += i3;
      p0 = i2;
      i3 = p0;
      i4 = 255u;
      i3 &= i4;
      i4 = 9u;
      i3 = i3 > i4;
      i1 = i3 ? i1 : i2;
      i2 = 255u;
      i1 &= i2;
      i0 |= i1;
      i1 = 4u;
      i0 <<= (i1 & 31);
      i1 = l10;
      i2 = 32u;
      i1 |= i2;
      p0 = i1;
      i2 = 4294967209u;
      i1 += i2;
      i2 = p0;
      i3 = 4294967248u;
      i2 += i3;
      p0 = i2;
      i3 = p0;
      i4 = 255u;
      i3 &= i4;
      i4 = 9u;
      i3 = i3 > i4;
      i1 = i3 ? i1 : i2;
      i2 = 255u;
      i1 &= i2;
      i0 |= i1;
      p0 = i0;
      i0 = l11;
      i0 = !(i0);
      if (i0) {goto B64;}
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l1 = i0;
      goto B63;
      B64:;
      i0 = 0u;
      l1 = i0;
      i0 = l4;
      i1 = 0u;
      i32_store8((&M0), (u64)(i0), i1);
      B63:;
      i0 = l0;
      i1 = 16u;
      i0 += i1;
      i1 = p0;
      i2 = 4u;
      i1 <<= (i2 & 31);
      i2 = l1;
      i3 = 32u;
      i2 |= i3;
      p0 = i2;
      i3 = 4294967209u;
      i2 += i3;
      i3 = p0;
      i4 = 4294967248u;
      i3 += i4;
      p0 = i3;
      i4 = p0;
      i5 = 255u;
      i4 &= i5;
      i5 = 9u;
      i4 = i4 > i5;
      i2 = i4 ? i2 : i3;
      i3 = 255u;
      i2 &= i3;
      i1 |= i2;
      vstr_add_char(i0, i1);
      goto B48;
      B51:;
      i0 = 8u;
      p0 = i0;
      goto B49;
      B50:;
      i0 = 0u;
      p0 = i0;
      i0 = l4;
      i1 = 0u;
      i32_store8((&M0), (u64)(i0), i1);
      B49:;
      i0 = l0;
      i1 = 16u;
      i0 += i1;
      i1 = p0;
      i2 = 255u;
      i1 &= i2;
      vstr_add_byte(i0, i1);
      B48:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 32));
      i1 = l2;
      i2 = 1u;
      i3 = l3;
      i4 = l0;
      i4 = i32_load((&M0), (u64)(i4 + 36));
      i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
      p0 = i0;
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0));
      l1 = i0;
      if (i0) {goto B30;}
      i0 = p0;
      i0 = !(i0);
      if (i0) {goto B29;}
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      p0 = i0;
      i0 = !(i0);
      l1 = i0;
      i1 = p0;
      i2 = 34u;
      i1 = i1 != i2;
      i0 ^= i1;
      if (i0) {goto L47;}
    B37:;
    i0 = l1;
    if (i0) {goto B0;}
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto B9;}
    i0 = p0;
    if (i0) {goto B65;}
    i0 = l4;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    B65:;
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    i1 = 8u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 20));
    i0 = mp_obj_new_str(i0, i1);
    p0 = i0;
    i0 = 0u;
    l1 = i0;
    i0 = l8;
    if (i0) {goto B34;}
    goto B7;
    B36:;
    i0 = 0u;
    l9 = i0;
    i0 = l0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0 + 20), i1);
    L67: vm_checktime();
      i0 = l0;
      i1 = 16u;
      i0 += i1;
      i1 = l1;
      i2 = 255u;
      i1 &= i2;
      vstr_add_byte(i0, i1);
      i0 = 1u;
      p0 = i0;
      i0 = l4;
      i0 = i32_load8_u((&M0), (u64)(i0));
      l1 = i0;
      i1 = 4294967253u;
      i0 += i1;
      l10 = i0;
      i1 = 26u;
      i0 = i0 > i1;
      if (i0) {goto B71;}
      i0 = l10;
      switch (i0) {
        case 0: goto B69;
        case 1: goto B70;
        case 2: goto B69;
        case 3: goto B68;
        case 4: goto B70;
        case 5: goto B70;
        case 6: goto B70;
        case 7: goto B70;
        case 8: goto B70;
        case 9: goto B70;
        case 10: goto B70;
        case 11: goto B70;
        case 12: goto B70;
        case 13: goto B70;
        case 14: goto B70;
        case 15: goto B70;
        case 16: goto B70;
        case 17: goto B70;
        case 18: goto B70;
        case 19: goto B70;
        case 20: goto B70;
        case 21: goto B70;
        case 22: goto B70;
        case 23: goto B70;
        case 24: goto B70;
        case 25: goto B70;
        case 26: goto B68;
        default: goto B69;
      }
      B71:;
      i0 = l1;
      i1 = 101u;
      i0 = i0 == i1;
      if (i0) {goto B68;}
      B70:;
      i0 = l1;
      i0 = unichar_isdigit(i0);
      i0 = !(i0);
      if (i0) {goto B66;}
      B69:;
      i0 = l9;
      p0 = i0;
      B68:;
      i0 = l0;
      i0 = i32_load((&M0), (u64)(i0 + 32));
      i1 = l2;
      i2 = 1u;
      i3 = l3;
      i4 = l0;
      i4 = i32_load((&M0), (u64)(i4 + 36));
      i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
      l10 = i0;
      i0 = l5;
      i0 = i32_load((&M0), (u64)(i0));
      l9 = i0;
      if (i0) {goto B33;}
      i0 = p0;
      l9 = i0;
      i0 = l10;
      if (i0) {goto L67;}
      i0 = l4;
      i1 = 0u;
      i32_store8((&M0), (u64)(i0), i1);
      i0 = p0;
      l9 = i0;
      goto L67;
    B66:;
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    i1 = 8u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 20));
    l10 = i0;
    i0 = l9;
    i1 = 1u;
    i0 &= i1;
    i0 = !(i0);
    if (i0) {goto B72;}
    i0 = 0u;
    l1 = i0;
    i0 = p0;
    i1 = l10;
    i2 = 0u;
    i3 = 0u;
    i4 = 0u;
    i0 = mp_parse_num_decimal(i0, i1, i2, i3, i4);
    p0 = i0;
    i0 = l8;
    if (i0) {goto B34;}
    goto B7;
    B72:;
    i0 = 0u;
    l1 = i0;
    i0 = p0;
    i1 = l10;
    i2 = 10u;
    i3 = 0u;
    i0 = mp_parse_num_integer(i0, i1, i2, i3);
    p0 = i0;
    B35:;
    i0 = l8;
    i0 = !(i0);
    if (i0) {goto B7;}
    B34:;
    i0 = l7;
    i1 = 33760u;
    i0 = i0 == i1;
    if (i0) {goto B74;}
    i0 = l6;
    if (i0) {goto B73;}
    i0 = p0;
    l6 = i0;
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B6;}
    goto B0;
    B74:;
    i0 = l8;
    i1 = p0;
    i0 = mp_obj_list_append(i0, i1);
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B6;}
    goto B8;
    B73:;
    i0 = l8;
    i1 = l6;
    i2 = p0;
    i0 = mp_obj_dict_store(i0, i1, i2);
    i0 = 0u;
    l6 = i0;
    i0 = l1;
    if (i0) {goto B8;}
    goto B6;
    B33:;
    i0 = l9;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B31:;
    i0 = l9;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B30:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B29:;
    i0 = l0;
    i1 = 44u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    goto B0;
    B28:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B27:;
    i0 = p0;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B26:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B25:;
    i0 = l0;
    i1 = 44u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 10752u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B24:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B23:;
    i0 = l0;
    i1 = 44u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 10752u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B22:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B21:;
    i0 = l0;
    i1 = 44u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 10752u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B20:;
    i0 = p0;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B19:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B18:;
    i0 = l0;
    i1 = 44u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 10752u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B17:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B16:;
    i0 = l0;
    i1 = 44u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 10752u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B15:;
    i0 = p0;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B14:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B13:;
    i0 = l0;
    i1 = 44u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 10752u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B12:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B11:;
    i0 = l0;
    i1 = 44u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 10752u;
    mp_raise_ValueError(i0);
    UNREACHABLE;
    B10:;
    i0 = p0;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B9:;
    i0 = l1;
    mp_raise_OSError(i0);
    UNREACHABLE;
    B8:;
    i0 = l0;
    i1 = 12u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    if (i0) {goto B76;}
    i0 = l0;
    i1 = 1u;
    mp_obj_list_init(i0, i1);
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l8;
    i32_store((&M0), (u64)(i0), i1);
    goto B75;
    B76:;
    i0 = l0;
    i1 = l8;
    i0 = mp_obj_list_append(i0, i1);
    B75:;
    i0 = p0;
    i0 = mp_obj_get_type(i0);
    l7 = i0;
    i0 = p0;
    l8 = i0;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto L5;}
    goto B1;
    B7:;
    i0 = p0;
    i0 = mp_obj_get_type(i0);
    l7 = i0;
    i0 = p0;
    l8 = i0;
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B1;}
    B6:;
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l1 = i0;
    if (i0) {goto L5;}
    goto B1;
  B4:;
  i0 = l1;
  mp_raise_OSError(i0);
  UNREACHABLE;
  B3:;
  i0 = 0u;
  l8 = i0;
  goto B1;
  B2:;
  i0 = 0u;
  l8 = i0;
  i0 = l0;
  i1 = 44u;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  B1:;
  i0 = l0;
  i1 = 44u;
  i0 += i1;
  l1 = i0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i0 = unichar_isspace(i0);
  i0 = !(i0);
  if (i0) {goto B78;}
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  l9 = i0;
  L79: vm_checktime();
    i0 = l0;
    i0 = i32_load((&M0), (u64)(i0 + 32));
    i1 = l2;
    i2 = 1u;
    i3 = l3;
    i4 = l0;
    i4 = i32_load((&M0), (u64)(i4 + 36));
    i0 = CALL_INDIRECT(T0, u32 (*)(u32, u32, u32, u32), 5, i4, i0, i1, i2, i3);
    p0 = i0;
    i0 = l9;
    i0 = i32_load((&M0), (u64)(i0));
    l10 = i0;
    if (i0) {goto B77;}
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B80;}
    i0 = l1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 255u;
    i0 &= i1;
    i0 = unichar_isspace(i0);
    if (i0) {goto L79;}
    goto B78;
    B80:;
    i0 = l1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = 0u;
    i1 = 255u;
    i0 &= i1;
    i0 = unichar_isspace(i0);
    if (i0) {goto L79;}
  B78:;
  i0 = l8;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l1;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 255u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  vstr_clear(i0);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l8;
  goto Bfunc;
  B77:;
  i0 = l10;
  mp_raise_OSError(i0);
  UNREACHABLE;
  B0:;
  i0 = 10752u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_ujson_loads(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 32u;
  i1 += i2;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i1 = 255u;
  i32_store8((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 36));
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 32));
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = 36488u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i0 = mod_ujson_load(i0);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static void sha256_transform(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0, l10 = 0, l11 = 0, l12 = 0, l13 = 0, l14 = 0, l15 = 0, 
      l16 = 0, l17 = 0, l18 = 0, l19 = 0, l20 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 256u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  L0: vm_checktime();
    i0 = l0;
    i1 = l1;
    i0 += i1;
    i1 = p1;
    i2 = l1;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l2 = i1;
    i2 = 24u;
    i1 <<= (i2 & 31);
    i2 = l2;
    i3 = 8u;
    i2 <<= (i3 & 31);
    i3 = 16711680u;
    i2 &= i3;
    i1 |= i2;
    i2 = l2;
    i3 = 8u;
    i2 >>= (i3 & 31);
    i3 = 65280u;
    i2 &= i3;
    i3 = l2;
    i4 = 24u;
    i3 >>= (i4 & 31);
    i2 |= i3;
    i1 |= i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i1 = 64u;
    i0 = i0 != i1;
    if (i0) {goto L0;}
  i0 = 0u;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  L1: vm_checktime();
    i0 = l0;
    i1 = l2;
    i0 += i1;
    l1 = i0;
    i1 = 64u;
    i0 += i1;
    i1 = p1;
    i2 = l1;
    i3 = 36u;
    i2 += i3;
    i2 = i32_load((&M0), (u64)(i2));
    i1 += i2;
    i2 = l1;
    i3 = 56u;
    i2 += i3;
    i2 = i32_load((&M0), (u64)(i2));
    p1 = i2;
    i3 = 13u;
    i2 = I32_ROTL(i2, i3);
    i3 = p1;
    i4 = 10u;
    i3 >>= (i4 & 31);
    i2 ^= i3;
    i3 = p1;
    i4 = 15u;
    i3 = I32_ROTL(i3, i4);
    i2 ^= i3;
    i1 += i2;
    i2 = l1;
    i3 = 4u;
    i2 += i3;
    i2 = i32_load((&M0), (u64)(i2));
    l1 = i2;
    i3 = 14u;
    i2 = I32_ROTL(i2, i3);
    i3 = l1;
    i4 = 3u;
    i3 >>= (i4 & 31);
    i2 ^= i3;
    i3 = l1;
    i4 = 25u;
    i3 = I32_ROTL(i3, i4);
    i2 ^= i3;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    p1 = i0;
    i0 = l2;
    i1 = 4u;
    i0 += i1;
    l2 = i0;
    i1 = 192u;
    i0 = i0 != i1;
    if (i0) {goto L1;}
  i0 = 0u;
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 80));
  l4 = i0;
  l5 = i0;
  i0 = p0;
  i1 = 84u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l6 = i0;
  l2 = i0;
  i0 = p0;
  i1 = 108u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l7 = i0;
  l8 = i0;
  i0 = p0;
  i1 = 104u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l9 = i0;
  l10 = i0;
  i0 = p0;
  i1 = 100u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l11 = i0;
  l12 = i0;
  i0 = p0;
  i1 = 96u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l13 = i0;
  l14 = i0;
  i0 = p0;
  i1 = 92u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l15 = i0;
  l16 = i0;
  i0 = p0;
  i1 = 88u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l17 = i0;
  p1 = i0;
  L2: vm_checktime();
    i0 = p1;
    l18 = i0;
    i0 = l2;
    p1 = i0;
    i0 = l5;
    l2 = i0;
    i1 = 30u;
    i0 = I32_ROTL(i0, i1);
    i1 = l2;
    i2 = 19u;
    i1 = I32_ROTL(i1, i2);
    i0 ^= i1;
    i1 = l2;
    i2 = 10u;
    i1 = I32_ROTL(i1, i2);
    i0 ^= i1;
    i1 = l2;
    i2 = p1;
    i3 = l18;
    i2 ^= i3;
    i1 &= i2;
    i2 = p1;
    i3 = l18;
    i2 &= i3;
    i1 ^= i2;
    i0 += i1;
    i1 = l14;
    l1 = i1;
    i2 = 26u;
    i1 = I32_ROTL(i1, i2);
    i2 = l1;
    i3 = 21u;
    i2 = I32_ROTL(i2, i3);
    i1 ^= i2;
    i2 = l1;
    i3 = 7u;
    i2 = I32_ROTL(i2, i3);
    i1 ^= i2;
    i2 = l8;
    i1 += i2;
    i2 = l10;
    l19 = i2;
    i3 = l1;
    i4 = 4294967295u;
    i3 ^= i4;
    i2 &= i3;
    i3 = l12;
    l20 = i3;
    i4 = l1;
    i3 &= i4;
    i2 |= i3;
    i1 += i2;
    i2 = l3;
    i3 = 40320u;
    i2 += i3;
    i2 = i32_load((&M0), (u64)(i2));
    i1 += i2;
    i2 = l0;
    i3 = l3;
    i2 += i3;
    i2 = i32_load((&M0), (u64)(i2));
    i1 += i2;
    l14 = i1;
    i0 += i1;
    l5 = i0;
    i0 = l14;
    i1 = l16;
    i0 += i1;
    l14 = i0;
    i0 = l19;
    l8 = i0;
    i0 = l20;
    l10 = i0;
    i0 = l1;
    l12 = i0;
    i0 = l18;
    l16 = i0;
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l3 = i0;
    i1 = 256u;
    i0 = i0 != i1;
    if (i0) {goto L2;}
  i0 = p0;
  i1 = 84u;
  i0 += i1;
  i1 = l2;
  i2 = l6;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 80u;
  i0 += i1;
  i1 = l5;
  i2 = l4;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 88u;
  i0 += i1;
  i1 = p1;
  i2 = l17;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 92u;
  i0 += i1;
  i1 = l18;
  i2 = l15;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 96u;
  i0 += i1;
  i1 = l14;
  i2 = l13;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 100u;
  i0 += i1;
  i1 = l1;
  i2 = l11;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 104u;
  i0 += i1;
  i1 = l20;
  i2 = l9;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 108u;
  i0 += i1;
  i1 = l19;
  i2 = l7;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 256u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void sha256_final(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0;
  u64 l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1, j2;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 64));
  l0 = i1;
  i0 += i1;
  i1 = 128u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i0 = l0;
  i1 = 56u;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = l1;
  i1 = 55u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  L2: vm_checktime();
    i0 = p0;
    i1 = l0;
    i0 += i1;
    i1 = 1u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i1 = 55u;
    i0 = i0 != i1;
    if (i0) {goto L2;}
    goto B0;
  B1:;
  i0 = l1;
  i1 = 63u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  L4: vm_checktime();
    i0 = p0;
    i1 = l0;
    i0 += i1;
    i1 = 1u;
    i0 += i1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    i1 = 63u;
    i0 = i0 != i1;
    if (i0) {goto L4;}
  B3:;
  i0 = p0;
  i1 = p0;
  sha256_transform(i0, i1);
  i0 = p0;
  i1 = 0u;
  i2 = 56u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  B0:;
  i0 = p0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 72));
  i2 = p0;
  i3 = 64u;
  i2 += i3;
  i2 = i32_load((&M0), (u64)(i2));
  i3 = 3u;
  i2 <<= (i3 & 31);
  j2 = (u64)(i2);
  j1 += j2;
  l2 = j1;
  i64_store((&M0), (u64)(i0 + 72), j1);
  i0 = p0;
  j1 = l2;
  i64_store8((&M0), (u64)(i0 + 63), j1);
  i0 = p0;
  j1 = l2;
  j2 = 8ull;
  j1 >>= (j2 & 63);
  i64_store8((&M0), (u64)(i0 + 62), j1);
  i0 = p0;
  j1 = l2;
  j2 = 16ull;
  j1 >>= (j2 & 63);
  i64_store8((&M0), (u64)(i0 + 61), j1);
  i0 = p0;
  j1 = l2;
  j2 = 24ull;
  j1 >>= (j2 & 63);
  i64_store8((&M0), (u64)(i0 + 60), j1);
  i0 = p0;
  j1 = l2;
  j2 = 32ull;
  j1 >>= (j2 & 63);
  i64_store8((&M0), (u64)(i0 + 59), j1);
  i0 = p0;
  j1 = l2;
  j2 = 40ull;
  j1 >>= (j2 & 63);
  i64_store8((&M0), (u64)(i0 + 58), j1);
  i0 = p0;
  j1 = l2;
  j2 = 48ull;
  j1 >>= (j2 & 63);
  i64_store8((&M0), (u64)(i0 + 57), j1);
  i0 = p0;
  j1 = l2;
  j2 = 56ull;
  j1 >>= (j2 & 63);
  i64_store8((&M0), (u64)(i0 + 56), j1);
  i0 = p0;
  i1 = p0;
  sha256_transform(i0, i1);
  i0 = p1;
  i1 = p0;
  i2 = 83u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p0;
  i2 = 87u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i1 = p0;
  i2 = 91u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = p0;
  i2 = 95u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = p0;
  i2 = 99u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 16), i1);
  i0 = p1;
  i1 = p0;
  i2 = 103u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 20), i1);
  i0 = p1;
  i1 = p0;
  i2 = 107u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 24), i1);
  i0 = p1;
  i1 = p0;
  i2 = 111u;
  i1 += i2;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 28), i1);
  i0 = p1;
  i1 = p0;
  i2 = 82u;
  i1 += i2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = p1;
  i1 = p0;
  i2 = 86u;
  i1 += i2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 5), i1);
  i0 = p1;
  i1 = p0;
  i2 = 90u;
  i1 += i2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 9), i1);
  i0 = p1;
  i1 = p0;
  i2 = 94u;
  i1 += i2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 13), i1);
  i0 = p1;
  i1 = p0;
  i2 = 98u;
  i1 += i2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 17), i1);
  i0 = p1;
  i1 = p0;
  i2 = 102u;
  i1 += i2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 21), i1);
  i0 = p1;
  i1 = p0;
  i2 = 106u;
  i1 += i2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 25), i1);
  i0 = p1;
  i1 = p0;
  i2 = 110u;
  i1 += i2;
  i1 = i32_load16_u((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 29), i1);
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 80));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 2), i1);
  i0 = p1;
  i1 = p0;
  i2 = 84u;
  i1 += i2;
  l0 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 6), i1);
  i0 = p1;
  i1 = p0;
  i2 = 88u;
  i1 += i2;
  l1 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 10), i1);
  i0 = p1;
  i1 = p0;
  i2 = 92u;
  i1 += i2;
  l3 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 14), i1);
  i0 = p1;
  i1 = p0;
  i2 = 96u;
  i1 += i2;
  l4 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 18), i1);
  i0 = p1;
  i1 = p0;
  i2 = 100u;
  i1 += i2;
  l5 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 22), i1);
  i0 = p1;
  i1 = p0;
  i2 = 104u;
  i1 += i2;
  l6 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 26), i1);
  i0 = p1;
  i1 = p0;
  i2 = 108u;
  i1 += i2;
  l7 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 30), i1);
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 80));
  i32_store8((&M0), (u64)(i0 + 3), i1);
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 7), i1);
  i0 = p1;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 11), i1);
  i0 = p1;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 15), i1);
  i0 = p1;
  i1 = l4;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 19), i1);
  i0 = p1;
  i1 = l5;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 23), i1);
  i0 = p1;
  i1 = l6;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 27), i1);
  i0 = p1;
  i1 = l7;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store8((&M0), (u64)(i0 + 31), i1);
  FUNC_EPILOGUE;
}

static u32 uhashlib_sha256_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = 116u;
  i0 = m_malloc(i0);
  l1 = i0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 68), i1);
  i0 = l1;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 76), j1);
  i0 = l1;
  j1 = 13503953895726638695ull;
  i64_store((&M0), (u64)(i0 + 84), j1);
  i0 = l1;
  j1 = 11912009169889063794ull;
  i64_store((&M0), (u64)(i0 + 92), j1);
  i0 = l1;
  j1 = 11170449402626986623ull;
  i64_store((&M0), (u64)(i0 + 100), j1);
  i0 = l1;
  j1 = 6620516960021240235ull;
  i64_store((&M0), (u64)(i0 + 108), j1);
  i0 = p1;
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p3 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l1;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = l1;
  i1 = 68u;
  i0 += i1;
  p2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i0 = l1;
  i1 = 76u;
  i0 += i1;
  l3 = i0;
  L1: vm_checktime();
    i0 = l2;
    i1 = p1;
    i0 += i1;
    i1 = p0;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p2;
    i1 = p2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    p1 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 64u;
    i0 = i0 != i1;
    if (i0) {goto B2;}
    i0 = l2;
    i1 = l2;
    sha256_transform(i0, i1);
    i0 = 0u;
    p1 = i0;
    i0 = p2;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = l3;
    j1 = i64_load((&M0), (u64)(i1));
    j2 = 512ull;
    j1 += j2;
    i64_store((&M0), (u64)(i0), j1);
    B2:;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i0 = p3;
    i1 = 4294967295u;
    i0 += i1;
    p3 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 uhashlib_sha256_update(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = l0;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 68));
  p1 = i0;
  i0 = p0;
  i1 = 68u;
  i0 += i1;
  l4 = i0;
  i0 = p0;
  i1 = 76u;
  i0 += i1;
  p0 = i0;
  L1: vm_checktime();
    i0 = l2;
    i1 = p1;
    i0 += i1;
    i1 = l3;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    p1 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 64u;
    i0 = i0 != i1;
    if (i0) {goto B2;}
    i0 = l2;
    i1 = l2;
    sha256_transform(i0, i1);
    i0 = 0u;
    p1 = i0;
    i0 = l4;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = p0;
    j1 = i64_load((&M0), (u64)(i1));
    j2 = 512ull;
    j1 += j2;
    i64_store((&M0), (u64)(i0), j1);
    B2:;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 uhashlib_sha256_digest(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 32u;
  vstr_init_len(i0, i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 8));
  sha256_final(i0, i1);
  i0 = 35852u;
  i1 = l0;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_binascii_hexlify(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 1u;
  i0 <<= (i1 & 31);
  l2 = i0;
  i0 = 0u;
  l3 = i0;
  i0 = p0;
  i1 = 2u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = l2;
  i0 += i1;
  i1 = 4294967295u;
  i0 += i1;
  l2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = mp_obj_str_get_str(i0);
  l3 = i0;
  B3:;
  i0 = l0;
  i1 = l2;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p1;
  i1 = l1;
  i1 = i32_load8_u((&M0), (u64)(i1));
  l2 = i1;
  i2 = 4u;
  i1 >>= (i2 & 31);
  l4 = i1;
  i2 = 39u;
  i1 += i2;
  i2 = l4;
  i3 = l2;
  i4 = 159u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  i2 = 48u;
  i1 += i2;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = l1;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i2 = 15u;
  i1 &= i2;
  l2 = i1;
  i2 = 39u;
  i1 += i2;
  i2 = l2;
  i3 = l2;
  i4 = 9u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  i2 = 48u;
  i1 += i2;
  i32_store8((&M0), (u64)(i0 + 1), i1);
  i0 = p0;
  i1 = 4294967295u;
  i0 += i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 1u;
  i1 = p0;
  i0 -= i1;
  p0 = i0;
  i0 = p1;
  i1 = 4u;
  i0 += i1;
  p1 = i0;
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  L4: vm_checktime();
    i0 = p1;
    i1 = 4294967294u;
    i0 += i1;
    i1 = l3;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    i1 = l1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    l2 = i1;
    i2 = 4u;
    i1 >>= (i2 & 31);
    l4 = i1;
    i2 = 39u;
    i1 += i2;
    i2 = l4;
    i3 = l2;
    i4 = 159u;
    i3 = i3 > i4;
    i1 = i3 ? i1 : i2;
    i2 = 48u;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = l1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i2 = 15u;
    i1 &= i2;
    l2 = i1;
    i2 = 39u;
    i1 += i2;
    i2 = l2;
    i3 = l2;
    i4 = 9u;
    i3 = i3 > i4;
    i1 = i3 ? i1 : i2;
    i2 = 48u;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 3u;
    i0 += i1;
    p1 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L4;}
    goto B0;
  B2:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 35544u;
  goto Bfunc;
  B1:;
  L5: vm_checktime();
    i0 = p1;
    i1 = l1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    l2 = i1;
    i2 = 4u;
    i1 >>= (i2 & 31);
    l4 = i1;
    i2 = 39u;
    i1 += i2;
    i2 = l4;
    i3 = l2;
    i4 = 159u;
    i3 = i3 > i4;
    i1 = i3 ? i1 : i2;
    i2 = 48u;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    i1 = l1;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i2 = 15u;
    i1 &= i2;
    l2 = i1;
    i2 = 39u;
    i1 += i2;
    i2 = l2;
    i3 = l2;
    i4 = 9u;
    i3 = i3 > i4;
    i1 = i3 ? i1 : i2;
    i2 = 48u;
    i1 += i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 2u;
    i0 += i1;
    p1 = i0;
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    if (i0) {goto L5;}
  B0:;
  i0 = 35852u;
  i1 = l0;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_binascii_unhexlify(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  p0 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p0;
  i2 = 1u;
  i1 >>= (i2 & 31);
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 4294967295u;
  i0 += i1;
  p0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  L3: vm_checktime();
    i0 = l2;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l4 = i0;
    i0 = unichar_isxdigit(i0);
    i0 = !(i0);
    if (i0) {goto B1;}
    i0 = l4;
    i0 = unichar_xdigit_value(i0);
    i1 = l1;
    i0 += i1;
    l1 = i0;
    i0 = p0;
    i1 = 1u;
    i0 &= i1;
    if (i0) {goto B4;}
    i0 = l3;
    i1 = l1;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i0 = 0u;
    l1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    i1 = 4294967295u;
    i0 = i0 != i1;
    if (i0) {goto L3;}
    goto B2;
    B4:;
    i0 = l1;
    i1 = 4u;
    i0 <<= (i1 & 31);
    i1 = 4080u;
    i0 &= i1;
    l1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    i0 = p0;
    i1 = 4294967295u;
    i0 += i1;
    p0 = i0;
    i1 = 4294967295u;
    i0 = i0 != i1;
    if (i0) {goto L3;}
  B2:;
  i0 = 35852u;
  i1 = l0;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = 12999u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = 10773u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_binascii_a2b_base64(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  l1 = i0;
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  i2 = 2u;
  i1 >>= (i2 & 31);
  i2 = 3u;
  i1 *= i2;
  i2 = 1u;
  i1 += i2;
  vstr_init(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l3 = i0;
  i0 = 0u;
  l4 = i0;
  i0 = 0u;
  p0 = i0;
  i0 = 0u;
  l5 = i0;
  i0 = 0u;
  l6 = i0;
  L3: vm_checktime();
    i0 = l1;
    i1 = p0;
    i0 += i1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l7 = i0;
    i1 = 61u;
    i0 = i0 != i1;
    if (i0) {goto B7;}
    i0 = l6;
    i1 = 4u;
    i0 = i0 == i1;
    if (i0) {goto B6;}
    i0 = 1u;
    l5 = i0;
    i0 = l6;
    i1 = 2u;
    i0 = i0 != i1;
    if (i0) {goto B4;}
    goto B1;
    B7:;
    i0 = l7;
    i1 = 4294967231u;
    i0 += i1;
    l8 = i0;
    i1 = 255u;
    i0 &= i1;
    i1 = 25u;
    i0 = i0 <= i1;
    if (i0) {goto B9;}
    i0 = l7;
    i1 = 4294967199u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 25u;
    i0 = i0 <= i1;
    if (i0) {goto B10;}
    i0 = l7;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 9u;
    i0 = i0 > i1;
    if (i0) {goto B11;}
    i0 = l7;
    i1 = 4u;
    i0 += i1;
    l8 = i0;
    goto B8;
    B11:;
    i0 = 62u;
    l8 = i0;
    i0 = l7;
    i1 = 43u;
    i0 = i0 == i1;
    if (i0) {goto B8;}
    i0 = 63u;
    i1 = 4294967295u;
    i2 = l7;
    i3 = 47u;
    i2 = i2 == i3;
    i0 = i2 ? i0 : i1;
    l8 = i0;
    i1 = 4294967295u;
    i0 = i0 != i1;
    if (i0) {goto B8;}
    goto B4;
    B10:;
    i0 = l7;
    i1 = 4294967225u;
    i0 += i1;
    l8 = i0;
    B9:;
    i0 = l8;
    i1 = 4294967295u;
    i0 = i0 == i1;
    if (i0) {goto B4;}
    B8:;
    i0 = l8;
    i1 = l4;
    i2 = 6u;
    i1 <<= (i2 & 31);
    i0 |= i1;
    l4 = i0;
    i0 = 0u;
    l5 = i0;
    i0 = l6;
    i1 = 2u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto B5;}
    i0 = l0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 4));
    l7 = i1;
    i2 = 1u;
    i1 += i2;
    i32_store((&M0), (u64)(i0 + 4), i1);
    i0 = l3;
    i1 = l7;
    i0 += i1;
    i1 = l4;
    i2 = l6;
    i3 = 4294967294u;
    i2 += i3;
    l6 = i2;
    i1 >>= (i2 & 31);
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 20));
    l2 = i1;
    i0 = i0 < i1;
    if (i0) {goto L3;}
    goto B2;
    B6:;
    i0 = l5;
    i1 = 1u;
    i0 &= i1;
    l7 = i0;
    i0 = 4u;
    l6 = i0;
    i0 = 1u;
    l5 = i0;
    i0 = l7;
    i0 = !(i0);
    if (i0) {goto B4;}
    goto B1;
    B5:;
    i0 = l6;
    i1 = 6u;
    i0 += i1;
    l6 = i0;
    B4:;
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i1 = l2;
    i0 = i0 < i1;
    if (i0) {goto L3;}
  B2:;
  i0 = l6;
  if (i0) {goto B0;}
  B1:;
  i0 = 35852u;
  i1 = l0;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 13810u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_binascii_b2a_base64(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 1u;
  l1 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 1u;
  mp_get_buffer_raise(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 4294967295u;
  i0 += i1;
  i1 = 3u;
  i0 = DIV_U(i0, i1);
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 4u;
  i0 += i1;
  i1 = 1u;
  i0 |= i1;
  l1 = i0;
  B0:;
  i0 = l0;
  i1 = l1;
  vstr_init_len(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p0 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l2 = i0;
  i1 = 3u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  L2: vm_checktime();
    i0 = l1;
    i1 = p0;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i2 = 2u;
    i1 >>= (i2 & 31);
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    i1 = p0;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i2 = 4u;
    i1 <<= (i2 & 31);
    i2 = 48u;
    i1 &= i2;
    i2 = p0;
    i3 = 1u;
    i2 += i3;
    l3 = i2;
    i2 = i32_load8_u((&M0), (u64)(i2));
    i3 = 4u;
    i2 >>= (i3 & 31);
    i1 |= i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 2u;
    i0 += i1;
    i1 = l3;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i2 = 2u;
    i1 <<= (i2 & 31);
    i2 = 60u;
    i1 &= i2;
    i2 = p0;
    i3 = 2u;
    i2 += i3;
    l3 = i2;
    i2 = i32_load8_u((&M0), (u64)(i2));
    i3 = 6u;
    i2 >>= (i3 & 31);
    i1 |= i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 3u;
    i0 += i1;
    i1 = l3;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i2 = 63u;
    i1 &= i2;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = p0;
    i1 = 3u;
    i0 += i1;
    p0 = i0;
    i0 = l2;
    i1 = 4294967293u;
    i0 += i1;
    l2 = i0;
    i1 = 2u;
    i0 = i0 > i1;
    if (i0) {goto L2;}
  B1:;
  i0 = l2;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l1;
  i1 = p0;
  i1 = i32_load8_u((&M0), (u64)(i1));
  i2 = 2u;
  i1 >>= (i2 & 31);
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 4u;
  i0 <<= (i1 & 31);
  i1 = 48u;
  i0 &= i1;
  l3 = i0;
  i0 = l2;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load8_u((&M0), (u64)(i1 + 1));
  i2 = 4u;
  i1 >>= (i2 & 31);
  i2 = l3;
  i1 |= i2;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 1));
  i1 = 2u;
  i0 <<= (i1 & 31);
  i1 = 60u;
  i0 &= i1;
  p0 = i0;
  goto B4;
  B5:;
  i0 = l1;
  i1 = 1u;
  i0 += i1;
  i1 = l3;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = 64u;
  p0 = i0;
  B4:;
  i0 = l1;
  i1 = 64u;
  i32_store8((&M0), (u64)(i0 + 3), i1);
  i0 = l1;
  i1 = p0;
  i32_store8((&M0), (u64)(i0 + 2), i1);
  B3:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i1 = 4294967295u;
  i0 += i1;
  l4 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = 1u;
  i1 = l1;
  i0 -= i1;
  l2 = i0;
  i0 = l3;
  l1 = i0;
  L7: vm_checktime();
    i0 = l1;
    i0 = i32_load8_u((&M0), (u64)(i0));
    p0 = i0;
    i1 = 25u;
    i0 = i0 > i1;
    if (i0) {goto B9;}
    i0 = p0;
    i1 = 65u;
    i0 += i1;
    p0 = i0;
    goto B8;
    B9:;
    i0 = p0;
    i1 = 51u;
    i0 = i0 > i1;
    if (i0) {goto B10;}
    i0 = p0;
    i1 = 71u;
    i0 += i1;
    p0 = i0;
    goto B8;
    B10:;
    i0 = p0;
    i1 = 61u;
    i0 = i0 > i1;
    if (i0) {goto B11;}
    i0 = p0;
    i1 = 4294967292u;
    i0 += i1;
    p0 = i0;
    goto B8;
    B11:;
    i0 = 43u;
    i1 = 47u;
    i2 = 61u;
    i3 = p0;
    i4 = 63u;
    i3 = i3 == i4;
    i1 = i3 ? i1 : i2;
    i2 = p0;
    i3 = 62u;
    i2 = i2 == i3;
    i0 = i2 ? i0 : i1;
    p0 = i0;
    B8:;
    i0 = l1;
    i1 = p0;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    if (i0) {goto L7;}
  i0 = l3;
  i1 = l4;
  i0 += i1;
  l3 = i0;
  B6:;
  i0 = l3;
  i1 = 10u;
  i32_store8((&M0), (u64)(i0), i1);
  i0 = 35852u;
  i1 = l0;
  i0 = mp_obj_new_str_from_vstr(i0, i1);
  l1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_hal_set_interrupt_char(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 40196), i1);
  FUNC_EPILOGUE;
}

static void mp_hal_stdout_tx_strn_cooked(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  L1: vm_checktime();
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    i0 = p0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    i1 = 10u;
    i0 = i0 != i1;
    if (i0) {goto B2;}
    i0 = 10791u;
    i1 = 1u;
    mp_hal_stdout_tx_strn(i0, i1);
    B2:;
    i0 = p0;
    i1 = 1u;
    mp_hal_stdout_tx_strn(i0, i1);
    i0 = p0;
    i1 = 1u;
    i0 += i1;
    p0 = i0;
    i0 = p1;
    if (i0) {goto L1;}
  B0:;
  FUNC_EPILOGUE;
}

static u32 __signbitl(u64 p0, u64 p1) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  j0 = p1;
  j1 = 63ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 ____fpclassifyl(u64 p0, u64 p1) {
  u32 l1 = 0, l2 = 0;
  u64 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  j0 = p1;
  j1 = 281474976710655ull;
  j0 &= j1;
  l0 = j0;
  j0 = p1;
  j1 = 48ull;
  j0 >>= (j1 & 63);
  i0 = (u32)(j0);
  i1 = 32767u;
  i0 &= i1;
  l1 = i0;
  i1 = 32767u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = 4u;
  l2 = i0;
  i0 = l1;
  if (i0) {goto B0;}
  i0 = 2u;
  i1 = 3u;
  j2 = l0;
  j3 = p0;
  j2 |= j3;
  i2 = !(j2);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B1:;
  j0 = l0;
  j1 = p0;
  j0 |= j1;
  i0 = !(j0);
  l2 = i0;
  B0:;
  i0 = l2;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void float128_print(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i1 = 16u;
  i0 += i1;
  (*Z_envZ_printqfZ_vi)(i0);
  FUNC_EPILOGUE;
}

static u32 float128_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  u64 l2 = 0, l3 = 0;
  f64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  f64 d0, d1;
  i0 = g0;
  i1 = 64u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 2u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i2 = 1u;
  i0 = mp_get_buffer(i0, i1, i2);
  p1 = i0;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = 3u;
  i0 &= i1;
  p3 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = p3;
  if (i0) {goto B5;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35852u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B5:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 48));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 52));
  i2 = 0u;
  i3 = 0u;
  i4 = 0u;
  i0 = mp_parse_num_decimal_float128(i0, i1, i2, i3, i4);
  p1 = i0;
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = 32u;
  i0 = m_malloc(i0);
  p1 = i0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p1;
  i1 = 40828u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B3:;
  i0 = p3;
  if (i0) {goto B6;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32832u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B6:;
  i0 = p2;
  d0 = mp_obj_get_float(i0);
  l1 = d0;
  i0 = 32u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = 40828u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  d1 = l1;
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B2:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 52));
  i1 = 16u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 48));
  i2 = 16u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 40));
  l2 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 32));
  l3 = j0;
  i0 = 32u;
  i0 = m_malloc(i0);
  p1 = i0;
  j1 = l3;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p1;
  i1 = 40828u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  j1 = l2;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = p2;
  d0 = mp_obj_get_float(i0);
  l1 = d0;
  i0 = 32u;
  i0 = m_malloc(i0);
  p1 = i0;
  i1 = 40828u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  d1 = l1;
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 11704u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 float128_unary_op(u32 p0, u32 p1) {
  u64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3, j4, j5;
  i0 = p0;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l0 = j0;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  l1 = j0;
  i0 = p0;
  switch (i0) {
    case 0: goto B0;
    case 1: goto B5;
    case 2: goto B4;
    case 3: goto B4;
    case 4: goto B3;
    case 5: goto B4;
    case 6: goto B2;
    case 7: goto B1;
    default: goto B0;
  }
  B5:;
  i0 = 32u;
  i0 = m_malloc(i0);
  p1 = i0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p1;
  i1 = 40828u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  j1 = l0;
  j2 = 9223372036854775808ull;
  j1 ^= j2;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = 0u;
  p1 = i0;
  goto B0;
  B3:;
  i0 = 30u;
  i1 = 14u;
  j2 = l1;
  j3 = l0;
  j4 = 0ull;
  j5 = 0ull;
  i2 = (*Z_envZ___eqtf2Z_ijjjj)(j2, j3, j4, j5);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B2:;
  j0 = l1;
  j1 = l0;
  i0 = (*Z_envZ___fixtfsiZ_ijj)(j0, j1);
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B1:;
  j0 = l1;
  j1 = l0;
  i0 = __signbitl(j0, j1);
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 32u;
  i0 = m_malloc(i0);
  p1 = i0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p1;
  i1 = 40828u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  j1 = l0;
  j2 = 9223372036854775808ull;
  j1 ^= j2;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 float128_binary_op(u32 p0, u32 p1, u32 p2) {
  u64 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i3;
  u64 j0, j1, j2;
  f64 d1, d2;
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l0 = j0;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  l1 = j0;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 30496u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  j1 = l1;
  j2 = l0;
  i3 = p2;
  i0 = mp_obj_float128_binary_op(i0, j1, j2, i3);
  goto Bfunc;
  B0:;
  i0 = p0;
  j1 = l1;
  j2 = l0;
  d1 = (*Z_envZ___trunctfdf2Z_djj)(j1, j2);
  d2 = 0;
  i3 = p2;
  i0 = mp_obj_complex_binary_op(i0, d1, d2, i3);
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_float128_binary_op(u32 p0, u64 p1, u64 p2, u32 p3) {
  u32 l0 = 0, l3 = 0, l4 = 0;
  u64 l1 = 0, l2 = 0;
  f64 l5 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2, j3, j4;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 240u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 232), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 224), j1);
  i0 = p3;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p3;
  i1 = 30u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  j0 = 4611404543450677248ull;
  l1 = j0;
  j0 = 0ull;
  l2 = j0;
  goto B1;
  B3:;
  j0 = 0ull;
  l2 = j0;
  j0 = 0ull;
  l1 = j0;
  goto B1;
  B2:;
  i0 = p3;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B6;}
  i0 = 0u;
  l3 = i0;
  i0 = p3;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l4;
  i1 = 32832u;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l4;
  i1 = 40828u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p3;
  i1 = 24u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l1 = j0;
  i0 = p3;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  l2 = j0;
  goto B1;
  B6:;
  i0 = l0;
  i1 = 184u;
  i0 += i1;
  i1 = p3;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  (*Z_envZ___floatsitfZ_vii)(i0, i1);
  i0 = l0;
  i1 = 192u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l1 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 184));
  l2 = j0;
  goto B1;
  B5:;
  i0 = l0;
  i1 = 152u;
  i0 += i1;
  i1 = p3;
  d1 = mp_obj_int_as_float_impl(i1);
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  i1 = 160u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l1 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 152));
  l2 = j0;
  goto B1;
  B4:;
  i0 = l0;
  i1 = 168u;
  i0 += i1;
  i1 = p3;
  d1 = mp_obj_float_get(i1);
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l1 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 168));
  l2 = j0;
  B1:;
  i0 = l0;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 208), j1);
  i0 = l0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 216), j1);
  i0 = 0u;
  l3 = i0;
  i0 = p0;
  i1 = 35u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  switch (i0) {
    case 0: goto B14;
    case 1: goto B13;
    case 2: goto B15;
    case 3: goto B12;
    case 4: goto B11;
    case 5: goto B0;
    case 6: goto B0;
    case 7: goto B0;
    case 8: goto B0;
    case 9: goto B0;
    case 10: goto B0;
    case 11: goto B0;
    case 12: goto B0;
    case 13: goto B0;
    case 14: goto B24;
    case 15: goto B21;
    case 16: goto B20;
    case 17: goto B0;
    case 18: goto B22;
    case 19: goto B18;
    case 20: goto B23;
    case 21: goto B19;
    case 22: goto B0;
    case 23: goto B0;
    case 24: goto B0;
    case 25: goto B0;
    case 26: goto B0;
    case 27: goto B24;
    case 28: goto B21;
    case 29: goto B20;
    case 30: goto B0;
    case 31: goto B22;
    case 32: goto B18;
    case 33: goto B23;
    case 34: goto B19;
    case 35: goto B16;
    default: goto B14;
  }
  B24:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  j1 = l2;
  j2 = l1;
  j3 = p1;
  j4 = p2;
  (*Z_envZ___addtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  p2 = j1;
  i64_store((&M0), (u64)(i0 + 232), j1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  p1 = j0;
  goto B8;
  B23:;
  j0 = l2;
  j1 = l1;
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___eqtf2Z_ijjjj)(j0, j1, j2, j3);
  i0 = !(i0);
  if (i0) {goto B9;}
  j0 = l2;
  j1 = l1;
  d0 = (*Z_envZ___trunctfdf2Z_djj)(j0, j1);
  l5 = d0;
  i0 = l0;
  i1 = 104u;
  i0 += i1;
  j1 = p1;
  j2 = p2;
  d1 = (*Z_envZ___trunctfdf2Z_djj)(j1, j2);
  d2 = l5;
  d1 = fmod_0(d1, d2);
  l6 = d1;
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  i1 = l0;
  i2 = 104u;
  i1 += i2;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  p2 = j1;
  i64_store((&M0), (u64)(i0 + 232), j1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 104));
  p1 = j1;
  i64_store((&M0), (u64)(i0 + 224), j1);
  d0 = l6;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B10;}
  i0 = l0;
  i1 = 72u;
  i0 += i1;
  d1 = 0;
  d2 = l5;
  d1 = copysign_0(d1, d2);
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  i1 = l0;
  i2 = 72u;
  i1 += i2;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  p2 = j1;
  i64_store((&M0), (u64)(i0 + 232), j1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 72));
  p1 = j0;
  goto B8;
  B22:;
  j0 = l2;
  j1 = l1;
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___netf2Z_ijjjj)(j0, j1, j2, j3);
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l0;
  i1 = 224u;
  i0 += i1;
  i1 = l0;
  i2 = 208u;
  i1 += i2;
  mp_obj_float128_divmod(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 232));
  p2 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 224));
  p1 = j0;
  goto B7;
  B21:;
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  j1 = p1;
  j2 = p2;
  j3 = l2;
  j4 = l1;
  (*Z_envZ___subtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = l0;
  i2 = 32u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  p2 = j1;
  i64_store((&M0), (u64)(i0 + 232), j1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 24));
  p1 = j0;
  goto B8;
  B20:;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  j1 = l2;
  j2 = l1;
  j3 = p1;
  j4 = p2;
  (*Z_envZ___multf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  p2 = j1;
  i64_store((&M0), (u64)(i0 + 232), j1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 40));
  p1 = j0;
  goto B8;
  B19:;
  j0 = p1;
  j1 = p2;
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___netf2Z_ijjjj)(j0, j1, j2, j3);
  if (i0) {goto B25;}
  j0 = l2;
  j1 = l1;
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___lttf2Z_ijjjj)(j0, j1, j2, j3);
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B25;}
  j0 = l2;
  j1 = l1;
  i0 = ____fpclassifyl(j0, j1);
  i1 = 1u;
  i0 = i0 != i1;
  if (i0) {goto B9;}
  B25:;
  j0 = p1;
  j1 = p2;
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___lttf2Z_ijjjj)(j0, j1, j2, j3);
  l3 = i0;
  j0 = l2;
  j1 = l1;
  d0 = (*Z_envZ___trunctfdf2Z_djj)(j0, j1);
  l5 = d0;
  i0 = l3;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B17;}
  i0 = l0;
  i1 = 136u;
  i0 += i1;
  d1 = l5;
  d1 = floor_0(d1);
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  j0 = l2;
  j1 = l1;
  i2 = l0;
  j2 = i64_load((&M0), (u64)(i2 + 136));
  i3 = l0;
  i4 = 144u;
  i3 += i4;
  j3 = i64_load((&M0), (u64)(i3));
  i0 = (*Z_envZ___eqtf2Z_ijjjj)(j0, j1, j2, j3);
  i0 = !(i0);
  if (i0) {goto B17;}
  j0 = l2;
  j1 = l1;
  i0 = ____fpclassifyl(j0, j1);
  i0 = !(i0);
  if (i0) {goto B17;}
  i0 = 34u;
  j1 = p1;
  j2 = p2;
  d1 = (*Z_envZ___trunctfdf2Z_djj)(j1, j2);
  d2 = 0;
  i3 = p3;
  i0 = mp_obj_complex_binary_op(i0, d1, d2, i3);
  l3 = i0;
  i0 = l0;
  i1 = 240u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  goto Bfunc;
  B18:;
  j0 = l2;
  j1 = l1;
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___eqtf2Z_ijjjj)(j0, j1, j2, j3);
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l0;
  i1 = 56u;
  i0 += i1;
  j1 = p1;
  j2 = p2;
  j3 = l2;
  j4 = l1;
  (*Z_envZ___divtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = l0;
  i2 = 64u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  p2 = j1;
  i64_store((&M0), (u64)(i0 + 232), j1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 56));
  p1 = j0;
  goto B8;
  B17:;
  i0 = l0;
  i1 = 120u;
  i0 += i1;
  j1 = p1;
  j2 = p2;
  d1 = (*Z_envZ___trunctfdf2Z_djj)(j1, j2);
  d2 = l5;
  d1 = pow_0(d1, d2);
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  i1 = l0;
  i2 = 128u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  p2 = j1;
  i64_store((&M0), (u64)(i0 + 232), j1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 120));
  p1 = j0;
  goto B8;
  B16:;
  j0 = l2;
  j1 = l1;
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___eqtf2Z_ijjjj)(j0, j1, j2, j3);
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l0;
  i1 = 224u;
  i0 += i1;
  i1 = l0;
  i2 = 208u;
  i1 += i2;
  mp_obj_float128_divmod(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 232));
  l1 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 224));
  l2 = j0;
  i0 = 32u;
  i0 = m_malloc(i0);
  l3 = i0;
  i1 = 40828u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l3;
  i1 = 24u;
  i0 += i1;
  j1 = l1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 200), i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 216));
  l1 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 208));
  l2 = j0;
  i0 = 32u;
  i0 = m_malloc(i0);
  l3 = i0;
  i1 = 40828u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l3;
  i1 = 24u;
  i0 += i1;
  j1 = l1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 204), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 200u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  l3 = i0;
  i0 = l0;
  i1 = 240u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  goto Bfunc;
  B15:;
  j0 = l2;
  j1 = l1;
  j2 = p1;
  j3 = p2;
  i0 = (*Z_envZ___netf2Z_ijjjj)(j0, j1, j2, j3);
  l3 = i0;
  i0 = l0;
  i1 = 240u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = l3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B14:;
  j0 = l2;
  j1 = l1;
  j2 = p1;
  j3 = p2;
  i0 = (*Z_envZ___gttf2Z_ijjjj)(j0, j1, j2, j3);
  l3 = i0;
  i0 = l0;
  i1 = 240u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = l3;
  i3 = 1u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B13:;
  j0 = l2;
  j1 = l1;
  j2 = p1;
  j3 = p2;
  i0 = (*Z_envZ___lttf2Z_ijjjj)(j0, j1, j2, j3);
  l3 = i0;
  i0 = l0;
  i1 = 240u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = l3;
  i3 = 4294967295u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B12:;
  j0 = l2;
  j1 = l1;
  j2 = p1;
  j3 = p2;
  i0 = (*Z_envZ___getf2Z_ijjjj)(j0, j1, j2, j3);
  l3 = i0;
  i0 = l0;
  i1 = 240u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = l3;
  i3 = 0u;
  i2 = (u32)((s32)i2 < (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B11:;
  j0 = l2;
  j1 = l1;
  j2 = p1;
  j3 = p2;
  i0 = (*Z_envZ___letf2Z_ijjjj)(j0, j1, j2, j3);
  l3 = i0;
  i0 = l0;
  i1 = 240u;
  i0 += i1;
  g0 = i0;
  i0 = 14u;
  i1 = 30u;
  i2 = l3;
  i3 = 0u;
  i2 = (u32)((s32)i2 > (s32)i3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B10:;
  d0 = l6;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  j1 = l2;
  j2 = l1;
  j3 = 0ull;
  j4 = 0ull;
  i1 = (*Z_envZ___lttf2Z_ijjjj)(j1, j2, j3, j4);
  i2 = 0u;
  i1 = (u32)((s32)i1 < (s32)i2);
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = l0;
  i1 = 88u;
  i0 += i1;
  j1 = l2;
  j2 = l1;
  j3 = p1;
  j4 = p2;
  (*Z_envZ___addtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = l0;
  i2 = 96u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  p2 = j1;
  i64_store((&M0), (u64)(i0 + 232), j1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 88));
  p1 = j0;
  goto B8;
  B9:;
  i0 = 31692u;
  i1 = 10793u;
  mp_raise_msg(i0, i1);
  UNREACHABLE;
  B8:;
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 224), j1);
  B7:;
  i0 = 32u;
  i0 = m_malloc(i0);
  l3 = i0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l3;
  i1 = 40828u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = 24u;
  i0 += i1;
  j1 = p2;
  i64_store((&M0), (u64)(i0), j1);
  B0:;
  i0 = l0;
  i1 = 240u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_float128(u64 p0, u64 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = 32u;
  i0 = m_malloc(i0);
  l0 = i0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 40828u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  j1 = p1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_float128_get(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = p0;
  i1 = p1;
  i2 = 24u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i64_store((&M0), (u64)(i0), j1);
  FUNC_EPILOGUE;
}

static void mp_obj_float128_divmod(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l3 = 0;
  u64 l4 = 0, l5 = 0, l6 = 0, l7 = 0, l8 = 0, l9 = 0, l10 = 0;
  f64 l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1, j2, j3, j4;
  f64 d0, d1, d2;
  i0 = g0;
  i1 = 176u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  l1 = i1;
  j1 = i64_load((&M0), (u64)(i1));
  d0 = (*Z_envZ___trunctfdf2Z_djj)(j0, j1);
  l2 = d0;
  i0 = l0;
  i1 = 160u;
  i0 += i1;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = p0;
  i3 = 8u;
  i2 += i3;
  l3 = i2;
  j2 = i64_load((&M0), (u64)(i2));
  d1 = (*Z_envZ___trunctfdf2Z_djj)(j1, j2);
  d2 = l2;
  d1 = fmod_0(d1, d2);
  l2 = d1;
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  i1 = 144u;
  i0 += i1;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = l3;
  j2 = i64_load((&M0), (u64)(i2));
  i3 = l0;
  j3 = i64_load((&M0), (u64)(i3 + 160));
  l4 = j3;
  i4 = l0;
  i5 = 160u;
  i4 += i5;
  i5 = 8u;
  i4 += i5;
  j4 = i64_load((&M0), (u64)(i4));
  l5 = j4;
  (*Z_envZ___subtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = 128u;
  i0 += i1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 144));
  i2 = l0;
  i3 = 144u;
  i2 += i3;
  i3 = 8u;
  i2 += i3;
  j2 = i64_load((&M0), (u64)(i2));
  i3 = p1;
  j3 = i64_load((&M0), (u64)(i3));
  l6 = j3;
  i4 = l1;
  j4 = i64_load((&M0), (u64)(i4));
  l7 = j4;
  (*Z_envZ___divtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = 128u;
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l8 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 128));
  l9 = j0;
  d0 = l2;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_neZ_idd)(d0, d1);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  d1 = 0;
  j2 = l6;
  j3 = l7;
  d2 = (*Z_envZ___trunctfdf2Z_djj)(j2, j3);
  d1 = copysign_0(d1, d2);
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l5 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 80));
  l4 = j0;
  j0 = 0ull;
  l10 = j0;
  j0 = l9;
  j1 = l8;
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___netf2Z_ijjjj)(j0, j1, j2, j3);
  i0 = !(i0);
  if (i0) {goto B2;}
  goto B1;
  B3:;
  d0 = l2;
  d1 = 0;
  i0 = (*Z_eosio_injectionZ__eosio_f64_ltZ_idd)(d0, d1);
  j1 = l6;
  j2 = l7;
  j3 = 0ull;
  j4 = 0ull;
  i1 = (*Z_envZ___lttf2Z_ijjjj)(j1, j2, j3, j4);
  i2 = 0u;
  i1 = (u32)((s32)i1 < (s32)i2);
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = 96u;
  i0 += i1;
  j1 = l9;
  j2 = l8;
  j3 = 0ull;
  j4 = 13834776580305453056ull;
  (*Z_envZ___addtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = 112u;
  i0 += i1;
  j1 = l6;
  j2 = l7;
  j3 = l4;
  j4 = l5;
  (*Z_envZ___addtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = 96u;
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l8 = j0;
  i0 = l0;
  i1 = 112u;
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l5 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 96));
  l9 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 112));
  l4 = j0;
  B4:;
  j0 = 0ull;
  l10 = j0;
  j0 = l9;
  j1 = l8;
  j2 = 0ull;
  j3 = 0ull;
  i0 = (*Z_envZ___netf2Z_ijjjj)(j0, j1, j2, j3);
  if (i0) {goto B1;}
  B2:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = p0;
  i3 = 8u;
  i2 += i3;
  j2 = i64_load((&M0), (u64)(i2));
  i3 = p1;
  j3 = i64_load((&M0), (u64)(i3));
  i4 = p1;
  i5 = 8u;
  i4 += i5;
  j4 = i64_load((&M0), (u64)(i4));
  (*Z_envZ___divtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  d1 = 0;
  i2 = l0;
  j2 = i64_load((&M0), (u64)(i2 + 16));
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = 8u;
  i3 += i4;
  j3 = i64_load((&M0), (u64)(i3));
  d2 = (*Z_envZ___trunctfdf2Z_djj)(j2, j3);
  d1 = copysign_0(d1, d2);
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l6 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  l7 = j0;
  goto B0;
  B1:;
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  j1 = l9;
  j2 = l8;
  d1 = (*Z_envZ___trunctfdf2Z_djj)(j1, j2);
  d1 = floor_0(d1);
  (*Z_envZ___extenddftf2Z_vid)(i0, d1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  j1 = l9;
  j2 = l8;
  i3 = l0;
  j3 = i64_load((&M0), (u64)(i3 + 64));
  l7 = j3;
  i4 = l0;
  i5 = 64u;
  i4 += i5;
  i5 = 8u;
  i4 += i5;
  j4 = i64_load((&M0), (u64)(i4));
  l6 = j4;
  (*Z_envZ___subtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 48));
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = l10;
  j3 = 4611123068473966592ull;
  i0 = (*Z_envZ___gttf2Z_ijjjj)(j0, j1, j2, j3);
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  j1 = l7;
  j2 = l6;
  j3 = 0ull;
  j4 = 4611404543450677248ull;
  (*Z_envZ___addtf3Z_vijjjj)(i0, j1, j2, j3, j4);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l6 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 32));
  l7 = j0;
  B0:;
  i0 = p0;
  j1 = l7;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  j1 = l6;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  j1 = l5;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  j1 = l4;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 float128_from_bytes(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35852u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = p1;
  i1 = l0;
  i2 = 28u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  i1 = 16u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i2 = 16u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l1 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  i0 = 32u;
  i0 = m_malloc(i0);
  p1 = i0;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p1;
  i1 = 40828u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  j1 = l1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 13019u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = 13382u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 float128_to_bytes(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 16u;
  i0 += i1;
  i1 = 16u;
  i0 = mp_obj_new_bytes(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static void mp_js_write(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = 0u;
  i0 = i32_load8_u((&M0), (u64)(i0 + 5620));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5624));
  l0 = i0;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 1024u;
  i1 = malloc_0(i1);
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 5624), i1);
  B1:;
  i0 = p1;
  i1 = 1024u;
  i2 = p1;
  i3 = 1024u;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  p1 = i0;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5628));
  l1 = i1;
  i0 += i1;
  i1 = 4294966272u;
  i0 += i1;
  l2 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = l0;
  i2 = l2;
  i3 = 256u;
  i4 = l2;
  i5 = 256u;
  i4 = (u32)((s32)i4 > (s32)i5);
  i2 = i4 ? i2 : i3;
  l1 = i2;
  i1 += i2;
  i2 = 1024u;
  i3 = l1;
  i2 -= i3;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = 0u;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5628));
  i2 = l1;
  i1 -= i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 5628), i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5624));
  l0 = i0;
  B2:;
  i0 = l0;
  i1 = l1;
  i0 += i1;
  i1 = p0;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = 0u;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5628));
  i2 = p1;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 5628), i1);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = p1;
  (*Z_envZ_prints_lZ_vii)(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mod_chain_s2n(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  j0 = s2n(i0, i1);
  i0 = mp_obj_new_int_from_ll(j0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 13445u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_n2s(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 3u;
  i0 += i1;
  i1 = p0;
  j1 = mp_obj_int_get_ull(i1);
  i2 = l0;
  i3 = 3u;
  i2 += i3;
  i3 = 13u;
  i1 = n2s(j1, i2, i3);
  i0 = mp_obj_new_str(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_read_action_data(void) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = (*Z_envZ_action_data_sizeZ_iv)();
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i0 = malloc_0(i0);
  l1 = i0;
  i1 = l0;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i0 = l1;
  i1 = l0;
  i0 = mp_obj_new_bytes(i0, i1);
  l0 = i0;
  i0 = l1;
  free_0(i0);
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 6u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_require_recipient(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  i0 = p0;
  j0 = obj_to_u64(i0);
  (*Z_envZ_require_recipientZ_vj)(j0);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_require_auth(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  i0 = p0;
  j0 = obj_to_u64(i0);
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_require_auth2(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  i0 = p0;
  j0 = obj_to_u64(i0);
  i1 = p1;
  j1 = obj_to_u64(i1);
  (*Z_envZ_require_auth2Z_vjj)(j0, j1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_has_auth(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  i0 = p0;
  j0 = obj_to_u64(i0);
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  i0 = 30u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_is_account(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j2;
  i0 = 30u;
  i1 = 14u;
  i2 = p0;
  j2 = obj_to_u64(i2);
  i2 = (*Z_envZ_is_accountZ_ij)(j2);
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_send_inline(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i4, i5, i6;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  j0 = obj_to_u64(i0);
  l4 = j0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  j0 = l1;
  j1 = l2;
  j2 = l3;
  j3 = l4;
  i4 = p1;
  i4 = i32_load((&M0), (u64)(i4 + 16));
  i5 = l0;
  i6 = 12u;
  i5 += i6;
  i4 = mp_obj_str_get_data(i4, i5);
  i5 = l0;
  i5 = i32_load((&M0), (u64)(i5 + 12));
  vm_send_inline(j0, j1, j2, j3, i4, i5);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_send_inline_raw(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  (*Z_envZ_send_inlineZ_vii)(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_send_context_free_inline(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  j0 = l1;
  j1 = l2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i2 = mp_obj_str_get_data(i2, i3);
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  vm_send_context_free_inline(j0, j1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_send_context_free_inline_raw(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  (*Z_envZ_send_context_free_inlineZ_vii)(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_publication_time(void) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  j0 = (*Z_envZ_publication_timeZ_jv)();
  i0 = mp_obj_new_int_from_ll(j0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_current_receiver(void) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = u64_to_name(j0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_get_active_producers(void) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1;
  i0 = g0;
  i1 = 208u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 25769803944ull;
  i64_store((&M0), (u64)(i0 + 176), j1);
  i0 = l0;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 184), i1);
  i0 = 11u;
  i1 = l0;
  i2 = 176u;
  i1 += i2;
  i2 = 1u;
  i3 = l0;
  i4 = 192u;
  i3 += i4;
  i0 = call_vm_api(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 200));
  i1 = 3u;
  i0 >>= (i1 & 31);
  l1 = i0;
  i1 = 0u;
  i0 = mp_obj_new_tuple(i0, i1);
  l2 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l2;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  i0 = l0;
  l4 = i0;
  L1: vm_checktime();
    i0 = l3;
    i1 = l4;
    j1 = i64_load((&M0), (u64)(i1));
    i1 = u64_to_name(j1);
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 4u;
    i0 += i1;
    l3 = i0;
    i0 = l4;
    i1 = 8u;
    i0 += i1;
    l4 = i0;
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  i1 = 208u;
  i0 += i1;
  g0 = i0;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_action_new(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i4, i5, i6;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  j0 = obj_to_u64(i0);
  l4 = j0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  j0 = l1;
  j1 = l2;
  j2 = l3;
  j3 = l4;
  i4 = p1;
  i4 = i32_load((&M0), (u64)(i4 + 16));
  i5 = l0;
  i6 = 12u;
  i5 += i6;
  i4 = mp_obj_str_get_data(i4, i5);
  i5 = l0;
  i5 = i32_load((&M0), (u64)(i5 + 12));
  i0 = action_new(j0, j1, j2, j3, i4, i5);
  j0 = (u64)(i0);
  i0 = mp_obj_new_int_from_ull(j0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_action_add_permission(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = mp_obj_int_get_ull(i0);
  i0 = (u32)(j0);
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  j1 = obj_to_u64(i1);
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  j2 = obj_to_u64(i2);
  action_add_permission(i0, j1, j2);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_action_send(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  i0 = p0;
  j0 = mp_obj_int_get_ull(i0);
  i0 = (u32)(j0);
  action_send(i0);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_action_free(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  i0 = p0;
  j0 = mp_obj_int_get_ull(i0);
  i0 = (u32)(j0);
  action_free(i0);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_transaction_new(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_int_get_uint_checked(i0);
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i1 = mp_obj_int_get_uint_checked(i1);
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i2 = mp_obj_int_get_uint_checked(i2);
  i3 = p1;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  i3 = mp_obj_int_get_uint_checked(i3);
  i4 = p1;
  i4 = i32_load((&M0), (u64)(i4 + 16));
  i4 = mp_obj_int_get_uint_checked(i4);
  i5 = p1;
  i5 = i32_load((&M0), (u64)(i5 + 20));
  i5 = mp_obj_int_get_uint_checked(i5);
  i0 = transaction_new(i0, i1, i2, i3, i4, i5);
  j0 = (u64)(i0);
  i0 = mp_obj_new_int_from_ull(j0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_transaction_add_action(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  i0 = p0;
  j0 = mp_obj_int_get_ull(i0);
  i0 = (u32)(j0);
  i1 = p1;
  j1 = mp_obj_int_get_ull(i1);
  i1 = (u32)(j1);
  transaction_add_action(i0, i1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_transaction_add_context_free_action(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  i0 = p0;
  j0 = mp_obj_int_get_ull(i0);
  i0 = (u32)(j0);
  i1 = p1;
  j1 = mp_obj_int_get_ull(i1);
  i1 = (u32)(j1);
  transaction_add_context_free_action(i0, i1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_transaction_send(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = mp_obj_int_get_ull(i0);
  l1 = j0;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  obj_int_to_u128(i0, i1);
  j0 = l1;
  i0 = (u32)(j0);
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  j2 = i64_load((&M0), (u64)(i2));
  i3 = p1;
  i3 = i32_load((&M0), (u64)(i3 + 8));
  j3 = obj_to_u64(i3);
  i4 = p1;
  i4 = i32_load((&M0), (u64)(i4 + 12));
  i4 = mp_obj_get_int(i4);
  i5 = 0u;
  i4 = i4 != i5;
  transaction_send(i0, j1, j2, j3, i4);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_transaction_cancel(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p0;
  obj_int_to_u128(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = transaction_cancel(j0, j1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 30u;
  i1 = 14u;
  i2 = p0;
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_transaction_free(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  i0 = p0;
  j0 = mp_obj_int_get_ull(i0);
  i0 = (u32)(j0);
  transaction_free(i0);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_assert_sha256(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  B3:;
  i0 = l0;
  i1 = 20u;
  i0 += i1;
  i1 = 6u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 6u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  obj_pack_data(i0, i1);
  i0 = p1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  obj_pack_data(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = 32u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 12u;
  i1 = l0;
  i2 = 2u;
  i3 = 0u;
  i0 = call_vm_api(i0, i1, i2, i3);
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 16543u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_assert_sha1(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  B3:;
  i0 = l0;
  i1 = 20u;
  i0 += i1;
  i1 = 6u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 6u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  obj_pack_data(i0, i1);
  i0 = p1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  obj_pack_data(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = 20u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 13u;
  i1 = l0;
  i2 = 2u;
  i3 = 0u;
  i0 = call_vm_api(i0, i1, i2, i3);
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 16543u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_assert_sha512(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  B3:;
  i0 = l0;
  i1 = 20u;
  i0 += i1;
  i1 = 6u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 6u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  obj_pack_data(i0, i1);
  i0 = p1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  obj_pack_data(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = 64u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 14u;
  i1 = l0;
  i2 = 2u;
  i3 = 0u;
  i0 = call_vm_api(i0, i1, i2, i3);
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 16543u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_assert_ripemd160(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  B2:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  B3:;
  i0 = l0;
  i1 = 20u;
  i0 += i1;
  i1 = 6u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 6u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  obj_pack_data(i0, i1);
  i0 = p1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  obj_pack_data(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = 20u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 15u;
  i1 = l0;
  i2 = 2u;
  i3 = 0u;
  i0 = call_vm_api(i0, i1, i2, i3);
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 16543u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_assert_recover_key(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p0 = i0;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p1 = i0;
  i0 = p2;
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 32u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = p2;
  i4 = l0;
  i4 = i32_load((&M0), (u64)(i4 + 4));
  (*Z_envZ_assert_recover_keyZ_viiiii)(i0, i1, i2, i3, i4);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 17139u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_sha256(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 6u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  obj_pack_data(i0, i1);
  i0 = l0;
  j1 = 25769803808ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  p0 = i0;
  i1 = 32u;
  i1 = malloc_0(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 17u;
  i1 = l0;
  i2 = 2u;
  i3 = 0u;
  i0 = call_vm_api(i0, i1, i2, i3);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32u;
  i0 = mp_obj_new_bytes(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_sha1(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 6u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  obj_pack_data(i0, i1);
  i0 = l0;
  j1 = 25769803796ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  p0 = i0;
  i1 = 20u;
  i1 = malloc_0(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 18u;
  i1 = l0;
  i2 = 2u;
  i3 = 0u;
  i0 = call_vm_api(i0, i1, i2, i3);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 20u;
  i0 = mp_obj_new_bytes(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_sha512(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 6u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  obj_pack_data(i0, i1);
  i0 = l0;
  j1 = 25769803840ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  p0 = i0;
  i1 = 64u;
  i1 = malloc_0(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 19u;
  i1 = l0;
  i2 = 2u;
  i3 = 0u;
  i0 = call_vm_api(i0, i1, i2, i3);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 64u;
  i0 = mp_obj_new_bytes(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_ripemd160(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 6u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  obj_pack_data(i0, i1);
  i0 = l0;
  j1 = 25769803796ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  p0 = i0;
  i1 = 20u;
  i1 = malloc_0(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = 20u;
  i1 = l0;
  i2 = 2u;
  i3 = 0u;
  i0 = call_vm_api(i0, i1, i2, i3);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 20u;
  i0 = mp_obj_new_bytes(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_recover_key(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  i1 = p0;
  i2 = l0;
  i3 = 44u;
  i2 += i3;
  i1 = mp_obj_str_get_data(i1, i2);
  i2 = p1;
  i3 = l0;
  i4 = 40u;
  i3 += i4;
  i2 = mp_obj_str_get_data(i2, i3);
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 40));
  i4 = l0;
  i5 = 34u;
  i1 = (*Z_envZ_recover_keyZ_iiiiii)(i1, i2, i3, i4, i5);
  i0 = mp_obj_new_bytes(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_store_i64(u32 p0, u32 p1) {
  u32 l0 = 0, l4 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10808u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = l1;
  i0 = j0 == j1;
  i1 = 11734u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  l4 = i0;
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i3 = p1;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  j3 = obj_to_u64(i3);
  i4 = l4;
  i5 = l0;
  i5 = i32_load((&M0), (u64)(i5 + 4));
  i0 = (*Z_envZ_db_store_i64Z_ijjjjii)(j0, j1, j2, j3, i4, i5);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_update_i64(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = p1;
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  j1 = l1;
  i2 = p2;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i2 = mp_obj_str_get_data(i2, i3);
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  (*Z_envZ_db_update_i64Z_vijii)(i0, j1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_remove_i64(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  (*Z_envZ_db_remove_i64Z_vi)(i0);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_get_i64(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i1 = p0;
  i2 = 0u;
  i3 = 0u;
  i1 = (*Z_envZ_db_get_i64Z_iiii)(i1, i2, i3);
  p0 = i1;
  i1 = malloc_0(i1);
  l0 = i1;
  i2 = p0;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = p0;
  i0 = mp_obj_new_bytes(i0, i1);
  p0 = i0;
  i0 = l0;
  free_0(i0);
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_next_i64(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = p0;
  i2 = l0;
  i1 = (*Z_envZ_db_next_i64Z_iii)(i1, i2);
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_previous_i64(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = p0;
  i2 = l0;
  i1 = (*Z_envZ_db_previous_i64Z_iii)(i1, i2);
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_find_i64(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i3;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10808u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11734u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i3 = p1;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  j3 = obj_to_u64(i3);
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_lowerbound_i64(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i3;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10808u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11734u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i3 = p1;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  j3 = obj_to_u64(i3);
  i0 = (*Z_envZ_db_lowerbound_i64Z_ijjjj)(j0, j1, j2, j3);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_upperbound_i64(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i3;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10808u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11734u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i3 = p1;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  j3 = obj_to_u64(i3);
  i0 = (*Z_envZ_db_upperbound_i64Z_ijjjj)(j0, j1, j2, j3);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_end_i64(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10808u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11734u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i0 = (*Z_envZ_db_end_i64Z_ijjj)(j0, j1, j2);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_store_i256(u32 p0, u32 p1) {
  u32 l0 = 0, l4 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10808u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  j1 = l1;
  i0 = j0 == j1;
  i1 = 11734u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i2 = 44u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  l4 = i0;
  i0 = l0;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l0;
  i2 = 32u;
  obj_int_to_u256(i0, i1, i2);
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i3 = l0;
  i4 = 32u;
  i5 = l4;
  i6 = l0;
  i6 = i32_load((&M0), (u64)(i6 + 44));
  i0 = db_store_i256(j0, j1, j2, i3, i4, i5, i6);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_update_i256(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = p1;
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  j1 = l1;
  i2 = p2;
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i2 = mp_obj_str_get_data(i2, i3);
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  db_update_i256(i0, j1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_remove_i256(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  db_remove_i256(i0);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_get_i256(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i1 = p0;
  i2 = 0u;
  i3 = 0u;
  i1 = db_get_i256(i1, i2, i3);
  p0 = i1;
  i1 = malloc_0(i1);
  l0 = i1;
  i2 = p0;
  i0 = db_get_i256(i0, i1, i2);
  i0 = l0;
  i1 = p0;
  i0 = mp_obj_new_bytes(i0, i1);
  p0 = i0;
  i0 = l0;
  free_0(i0);
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_next_i256(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = l0;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = p0;
  i2 = l0;
  i3 = 32u;
  i1 = db_next_i256(i1, i2, i3);
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  i1 = 0u;
  i2 = 32u;
  i3 = l0;
  i1 = mp_obj_int_from_bytes_impl(i1, i2, i3);
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 40u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_previous_i256(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = l0;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = p0;
  i2 = l0;
  i3 = 32u;
  i1 = db_previous_i256(i1, i2, i3);
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  i1 = 0u;
  i2 = 32u;
  i3 = l0;
  i1 = mp_obj_int_from_bytes_impl(i1, i2, i3);
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 40u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_find_i256(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10808u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11734u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = l0;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l0;
  i2 = 32u;
  obj_int_to_u256(i0, i1, i2);
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i3 = l0;
  i4 = 32u;
  i0 = db_find_i256(j0, j1, j2, i3, i4);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_lowerbound_i256(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10808u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11734u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = l0;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l0;
  i2 = 32u;
  obj_int_to_u256(i0, i1, i2);
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i3 = l0;
  i4 = 32u;
  i0 = db_lowerbound_i256(j0, j1, j2, i3, i4);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_upperbound_i256(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10808u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11734u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = l0;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = l0;
  i2 = 32u;
  obj_int_to_u256(i0, i1, i2);
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i3 = l0;
  i4 = 32u;
  i0 = db_upperbound_i256(j0, j1, j2, i3, i4);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_end_i256(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10808u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11734u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i0 = db_end_i256(j0, j1, j2);
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_get_table_row_count(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  j0 = obj_to_u64(i0);
  l2 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10808u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11734u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = l1;
  j1 = l2;
  i2 = p2;
  j2 = obj_to_u64(i2);
  i0 = db_get_table_row_count(j0, j1, j2);
  i0 = mp_obj_new_int(i0);
  p2 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p2;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_call_contract(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  j0 = l1;
  i1 = p1;
  i2 = l0;
  i3 = 12u;
  i2 += i3;
  i1 = mp_obj_str_get_data(i1, i2);
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2 + 12));
  call_contract(j0, i1, i2);
  i0 = 0u;
  i1 = 0u;
  i0 = call_contract_get_results(i0, i1);
  p1 = i0;
  i0 = malloc_0(i0);
  p0 = i0;
  i1 = p1;
  i0 = call_contract_get_results(i0, i1);
  i0 = p0;
  i1 = p1;
  i0 = mp_obj_new_bytes(i0, i1);
  p1 = i0;
  i0 = p0;
  free_0(i0);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_get_code_hash(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p0;
  j0 = obj_to_u64(i0);
  i0 = 0u;
  i1 = 18783u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_idx_store(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i4, i5;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10808u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  j1 = l2;
  i0 = j0 == j1;
  i1 = 11734u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  j0 = obj_to_u64(i0);
  l4 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  j0 = obj_to_u64(i0);
  l5 = j0;
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  i2 = l0;
  parse_secondary_value(i0, i1, i2);
  i0 = l1;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l1;
  switch (i0) {
    case 0: goto B7;
    case 1: goto B3;
    case 2: goto B5;
    case 3: goto B4;
    case 4: goto B6;
    default: goto B7;
  }
  B7:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  j3 = l5;
  i4 = l0;
  i0 = (*Z_envZ_db_idx64_storeZ_ijjjji)(j0, j1, j2, j3, i4);
  p1 = i0;
  goto B2;
  B6:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  j3 = l5;
  i4 = l0;
  i0 = (*Z_envZ_db_idx_long_double_storeZ_ijjjji)(j0, j1, j2, j3, i4);
  p1 = i0;
  goto B2;
  B5:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  j3 = l5;
  i4 = l0;
  i5 = 2u;
  i0 = (*Z_envZ_db_idx256_storeZ_ijjjjii)(j0, j1, j2, j3, i4, i5);
  p1 = i0;
  goto B2;
  B4:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  j3 = l5;
  i4 = l0;
  i0 = (*Z_envZ_db_idx_double_storeZ_ijjjji)(j0, j1, j2, j3, i4);
  p1 = i0;
  goto B2;
  B3:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  j3 = l5;
  i4 = l0;
  i0 = (*Z_envZ_db_idx128_storeZ_ijjjji)(j0, j1, j2, j3, i4);
  p1 = i0;
  B2:;
  i0 = p1;
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 18918u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void parse_secondary_value(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1, j2;
  f64 d1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B7;}
  i0 = p0;
  switch (i0) {
    case 0: goto B14;
    case 1: goto B10;
    case 2: goto B12;
    case 3: goto B11;
    case 4: goto B13;
    default: goto B14;
  }
  B14:;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B6;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 != i1;
  if (i0) {goto B5;}
  i0 = p1;
  i1 = 0u;
  i2 = 8u;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  goto B5;
  B13:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 40828u;
  i0 = i0 != i1;
  if (i0) {goto B2;}
  i0 = l0;
  i1 = p1;
  mp_obj_float128_get(i0, i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p2;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 32u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B12:;
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B9;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p1;
  i1 = 0u;
  i2 = 32u;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  p1 = i0;
  goto B8;
  B11:;
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 32832u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = p1;
  d1 = mp_obj_float_get(i1);
  f64_store((&M0), (u64)(i0 + 16), d1);
  i0 = p2;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 32u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B10:;
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B7;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p1;
  i1 = 0u;
  i2 = 16u;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  p1 = i0;
  goto B3;
  B9:;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  i1 = p1;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  j1 = (u64)(s64)(s32)(i1);
  l1 = j1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = l1;
  j2 = 63ull;
  j1 = (u64)((s64)j1 >> (j2 & 63));
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  p1 = i0;
  B8:;
  i0 = p2;
  i1 = p1;
  i2 = 32u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B7:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B6:;
  i0 = l0;
  i1 = p1;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  j1 = (u64)(s64)(s32)(i1);
  i64_store((&M0), (u64)(i0 + 16), j1);
  B5:;
  i0 = p2;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B4:;
  i0 = l0;
  i1 = p1;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  j1 = (u64)(s64)(s32)(i1);
  l1 = j1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = l1;
  j2 = 63ull;
  j1 = (u64)((s64)j1 >> (j2 & 63));
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  p1 = i0;
  B3:;
  i0 = p2;
  i1 = p1;
  i2 = 16u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = 19189u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B1:;
  i0 = 19146u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B0:;
  i0 = 19100u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 mod_chain_db_idx_update(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  u64 l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = mp_obj_get_int(i0);
  l2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i2 = l0;
  parse_secondary_value(i0, i1, i2);
  i0 = l1;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = l1;
  switch (i0) {
    case 0: goto B6;
    case 1: goto B2;
    case 2: goto B4;
    case 3: goto B3;
    case 4: goto B5;
    default: goto B6;
  }
  B6:;
  i0 = l2;
  j1 = l3;
  i2 = l0;
  (*Z_envZ_db_idx64_updateZ_viji)(i0, j1, i2);
  goto B1;
  B5:;
  i0 = l2;
  j1 = l3;
  i2 = l0;
  (*Z_envZ_db_idx_long_double_updateZ_viji)(i0, j1, i2);
  goto B1;
  B4:;
  i0 = l2;
  j1 = l3;
  i2 = l0;
  i3 = 2u;
  (*Z_envZ_db_idx256_updateZ_vijii)(i0, j1, i2, i3);
  goto B1;
  B3:;
  i0 = l2;
  j1 = l3;
  i2 = l0;
  (*Z_envZ_db_idx_double_updateZ_viji)(i0, j1, i2);
  goto B1;
  B2:;
  i0 = l2;
  j1 = l3;
  i2 = l0;
  (*Z_envZ_db_idx128_updateZ_viji)(i0, j1, i2);
  B1:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 18918u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_idx_remove(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = p1;
  i0 = mp_obj_get_int(i0);
  p1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  switch (i0) {
    case 0: goto B5;
    case 1: goto B1;
    case 2: goto B3;
    case 3: goto B2;
    case 4: goto B4;
    default: goto B5;
  }
  B5:;
  i0 = p1;
  (*Z_envZ_db_idx64_removeZ_vi)(i0);
  i0 = 6u;
  goto Bfunc;
  B4:;
  i0 = p1;
  (*Z_envZ_db_idx_long_double_removeZ_vi)(i0);
  i0 = 6u;
  goto Bfunc;
  B3:;
  i0 = p1;
  (*Z_envZ_db_idx256_removeZ_vi)(i0);
  i0 = 6u;
  goto Bfunc;
  B2:;
  i0 = p1;
  (*Z_envZ_db_idx_double_removeZ_vi)(i0);
  i0 = 6u;
  goto Bfunc;
  B1:;
  i0 = p1;
  (*Z_envZ_db_idx128_removeZ_vi)(i0);
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 18918u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_idx_next(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = p1;
  i0 = mp_obj_get_int(i0);
  p1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  switch (i0) {
    case 0: goto B6;
    case 1: goto B2;
    case 2: goto B4;
    case 3: goto B3;
    case 4: goto B5;
    default: goto B6;
  }
  B6:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx64_nextZ_iii)(i0, i1);
  p0 = i0;
  goto B1;
  B5:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx_long_double_nextZ_iii)(i0, i1);
  p0 = i0;
  goto B1;
  B4:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx256_nextZ_iii)(i0, i1);
  p0 = i0;
  goto B1;
  B3:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx_double_nextZ_iii)(i0, i1);
  p0 = i0;
  goto B1;
  B2:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx128_nextZ_iii)(i0, i1);
  p0 = i0;
  B1:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = 2u;
  i1 = l0;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 18918u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_idx_previous(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i0 = p1;
  i0 = mp_obj_get_int(i0);
  p1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p0;
  switch (i0) {
    case 0: goto B6;
    case 1: goto B2;
    case 2: goto B4;
    case 3: goto B3;
    case 4: goto B5;
    default: goto B6;
  }
  B6:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx64_previousZ_iii)(i0, i1);
  p0 = i0;
  goto B1;
  B5:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx_long_double_previousZ_iii)(i0, i1);
  p0 = i0;
  goto B1;
  B4:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx256_previousZ_iii)(i0, i1);
  p0 = i0;
  goto B1;
  B3:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx_double_previousZ_iii)(i0, i1);
  p0 = i0;
  goto B1;
  B2:;
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = (*Z_envZ_db_idx128_previousZ_iii)(i0, i1);
  p0 = i0;
  B1:;
  i0 = l0;
  i1 = p0;
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = 2u;
  i1 = l0;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  goto Bfunc;
  B0:;
  i0 = 18918u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_idx_find_primary(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2, j4, j5;
  f64 d0;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10808u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  j1 = l3;
  i0 = j0 == j1;
  i1 = 11734u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  j0 = obj_to_u64(i0);
  l4 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  j0 = obj_to_u64(i0);
  l5 = j0;
  i0 = l1;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l1;
  switch (i0) {
    case 0: goto B8;
    case 1: goto B4;
    case 2: goto B6;
    case 3: goto B5;
    case 4: goto B7;
    default: goto B8;
  }
  B8:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  j4 = l5;
  i0 = (*Z_envZ_db_idx64_find_primaryZ_ijjjij)(j0, j1, j2, i3, j4);
  p1 = i0;
  goto B3;
  B7:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  j4 = l5;
  i0 = (*Z_envZ_db_idx_long_double_find_primaryZ_ijjjij)(j0, j1, j2, i3, j4);
  p1 = i0;
  goto B3;
  B6:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = 2u;
  j5 = l5;
  i0 = (*Z_envZ_db_idx256_find_primaryZ_ijjjiij)(j0, j1, j2, i3, i4, j5);
  p1 = i0;
  goto B3;
  B5:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  j4 = l5;
  i0 = (*Z_envZ_db_idx_double_find_primaryZ_ijjjij)(j0, j1, j2, i3, j4);
  p1 = i0;
  goto B3;
  B4:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  j4 = l5;
  i0 = (*Z_envZ_db_idx128_find_primaryZ_ijjjij)(j0, j1, j2, i3, j4);
  p1 = i0;
  B3:;
  i0 = l0;
  i1 = p1;
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = 2u;
  i0 = i0 > i1;
  if (i0) {goto B10;}
  i0 = 0u;
  i1 = l1;
  i2 = 2u;
  i1 <<= (i2 & 31);
  i2 = 42512u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_obj_int_from_bytes_impl(i0, i1, i2);
  p1 = i0;
  goto B9;
  B10:;
  i0 = l1;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B11;}
  i0 = l1;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 16));
  i0 = mp_obj_new_float(d0);
  p1 = i0;
  goto B9;
  B11:;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 24));
  i0 = mp_obj_new_float128(j0, j1);
  p1 = i0;
  B9:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B2:;
  i0 = 18918u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B1:;
  i0 = 19320u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_idx_find_secondary(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 64u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10808u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  j1 = l3;
  i0 = j0 == j1;
  i1 = 11734u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  j0 = obj_to_u64(i0);
  l4 = j0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 56), j1);
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  parse_secondary_value(i0, i1, i2);
  i0 = l1;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l1;
  switch (i0) {
    case 0: goto B7;
    case 1: goto B3;
    case 2: goto B5;
    case 3: goto B4;
    case 4: goto B6;
    default: goto B7;
  }
  B7:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx64_find_secondaryZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  goto B2;
  B6:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx_long_double_find_secondaryZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  goto B2;
  B5:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = 2u;
  i5 = l0;
  i6 = 56u;
  i5 += i6;
  i0 = (*Z_envZ_db_idx256_find_secondaryZ_ijjjiii)(j0, j1, j2, i3, i4, i5);
  p1 = i0;
  goto B2;
  B4:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx_double_find_secondaryZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  goto B2;
  B3:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx128_find_secondaryZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  B2:;
  i0 = l0;
  i1 = p1;
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 56));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 2u;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 18918u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_idx_lowerbound(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  u64 j0, j1, j2;
  f64 d0;
  i0 = g0;
  i1 = 64u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10808u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  j1 = l3;
  i0 = j0 == j1;
  i1 = 11734u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  j0 = obj_to_u64(i0);
  l4 = j0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 56), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  parse_secondary_value(i0, i1, i2);
  i0 = l1;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = l1;
  switch (i0) {
    case 0: goto B10;
    case 1: goto B6;
    case 2: goto B8;
    case 3: goto B7;
    case 4: goto B9;
    default: goto B10;
  }
  B10:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx64_lowerboundZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  goto B5;
  B9:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx_long_double_lowerboundZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  goto B5;
  B8:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = 2u;
  i5 = l0;
  i6 = 56u;
  i5 += i6;
  i0 = (*Z_envZ_db_idx256_lowerboundZ_ijjjiii)(j0, j1, j2, i3, i4, i5);
  p1 = i0;
  goto B5;
  B7:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx_double_lowerboundZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  goto B5;
  B6:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx128_lowerboundZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  B5:;
  i0 = l0;
  i1 = p1;
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 56));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B12;}
  i0 = 2u;
  p1 = i0;
  i0 = l1;
  i1 = 2u;
  i0 = i0 > i1;
  if (i0) {goto B11;}
  goto B2;
  B12:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = 2u;
  p1 = i0;
  i0 = l1;
  i1 = 2u;
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  B11:;
  i0 = l1;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B13;}
  i0 = l1;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 16));
  i0 = mp_obj_new_float(d0);
  l1 = i0;
  goto B1;
  B13:;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 24));
  i0 = mp_obj_new_float128(j0, j1);
  l1 = i0;
  goto B1;
  B4:;
  i0 = 18918u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B3:;
  i0 = 19320u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B2:;
  i0 = 0u;
  i1 = l1;
  i2 = p1;
  i1 <<= (i2 & 31);
  i2 = 42512u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_obj_int_from_bytes_impl(i0, i1, i2);
  l1 = i0;
  B1:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 3u;
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  l1 = i0;
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_idx_upperbound(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  u64 j0, j1, j2;
  f64 d0;
  i0 = g0;
  i1 = 64u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10808u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  j1 = l3;
  i0 = j0 == j1;
  i1 = 11734u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  j0 = obj_to_u64(i0);
  l4 = j0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 56), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  parse_secondary_value(i0, i1, i2);
  i0 = l1;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = l1;
  switch (i0) {
    case 0: goto B10;
    case 1: goto B6;
    case 2: goto B8;
    case 3: goto B7;
    case 4: goto B9;
    default: goto B10;
  }
  B10:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx64_upperboundZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  goto B5;
  B9:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx_long_double_upperboundZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  goto B5;
  B8:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = 2u;
  i5 = l0;
  i6 = 56u;
  i5 += i6;
  i0 = (*Z_envZ_db_idx256_upperboundZ_ijjjiii)(j0, j1, j2, i3, i4, i5);
  p1 = i0;
  goto B5;
  B7:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx_double_upperboundZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  goto B5;
  B6:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 56u;
  i4 += i5;
  i0 = (*Z_envZ_db_idx128_upperboundZ_ijjjii)(j0, j1, j2, i3, i4);
  p1 = i0;
  B5:;
  i0 = l0;
  i1 = p1;
  i1 = mp_obj_new_int(i1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 56));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B12;}
  i0 = 2u;
  p1 = i0;
  i0 = l1;
  i1 = 2u;
  i0 = i0 > i1;
  if (i0) {goto B11;}
  goto B2;
  B12:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = 2u;
  p1 = i0;
  i0 = l1;
  i1 = 2u;
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  B11:;
  i0 = l1;
  i1 = 4u;
  i0 = i0 == i1;
  if (i0) {goto B13;}
  i0 = l1;
  i1 = 3u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  i0 = l0;
  d0 = f64_load((&M0), (u64)(i0 + 16));
  i0 = mp_obj_new_float(d0);
  l1 = i0;
  goto B1;
  B13:;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 24));
  i0 = mp_obj_new_float128(j0, j1);
  l1 = i0;
  goto B1;
  B4:;
  i0 = 18918u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B3:;
  i0 = 19320u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  B2:;
  i0 = 0u;
  i1 = l1;
  i2 = p1;
  i1 <<= (i2 & 31);
  i2 = 42512u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i0 = mp_obj_int_from_bytes_impl(i0, i1, i2);
  l1 = i0;
  B1:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 3u;
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  l1 = i0;
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_db_idx_end(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = mp_obj_get_int(i0);
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i0 = (*Z_envZ_has_authZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 10808u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = l3;
  i0 = j0 == j1;
  i1 = 11734u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  j0 = obj_to_u64(i0);
  l4 = j0;
  i0 = l1;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = l1;
  switch (i0) {
    case 0: goto B7;
    case 1: goto B3;
    case 2: goto B5;
    case 3: goto B4;
    case 4: goto B6;
    default: goto B7;
  }
  B7:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i0 = (*Z_envZ_db_idx64_endZ_ijjj)(j0, j1, j2);
  p1 = i0;
  goto B2;
  B6:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i0 = (*Z_envZ_db_idx_long_double_endZ_ijjj)(j0, j1, j2);
  p1 = i0;
  goto B2;
  B5:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i0 = (*Z_envZ_db_idx256_endZ_ijjj)(j0, j1, j2);
  p1 = i0;
  goto B2;
  B4:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i0 = (*Z_envZ_db_idx_double_endZ_ijjj)(j0, j1, j2);
  p1 = i0;
  goto B2;
  B3:;
  j0 = l2;
  j1 = l3;
  j2 = l4;
  i0 = (*Z_envZ_db_idx128_endZ_ijjj)(j0, j1, j2);
  p1 = i0;
  B2:;
  i0 = p1;
  i0 = mp_obj_new_int(i0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 18918u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_get_resource_limits(u32 p0) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 40), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  j0 = l1;
  i1 = l0;
  i2 = 40u;
  i1 += i2;
  i2 = l0;
  i3 = 32u;
  i2 += i3;
  i3 = l0;
  i4 = 24u;
  i3 += i4;
  (*Z_envZ_get_resource_limitsZ_vjiii)(j0, i1, i2, i3);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 40));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 32));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 24));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = 3u;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_new_tuple(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_set_resource_limits(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2, j3;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  j1 = obj_to_u64(i1);
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  j2 = obj_to_u64(i2);
  i3 = p1;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  j3 = obj_to_u64(i3);
  (*Z_envZ_set_resource_limitsZ_vjjjj)(j0, j1, j2, j3);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_set_proposed_producers(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  mp_obj_get_array(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 3u;
  i0 <<= (i1 & 31);
  i0 = malloc_0(i0);
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 0u;
  p0 = i0;
  i0 = l1;
  l2 = i0;
  i0 = 0u;
  l3 = i0;
  L2: vm_checktime();
    i0 = l2;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 8));
    i2 = p0;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    j1 = obj_to_u64(i1);
    i64_store((&M0), (u64)(i0), j1);
    i0 = l2;
    i1 = 8u;
    i0 += i1;
    l2 = i0;
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    p0 = i0;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    i1 = l0;
    i1 = i32_load((&M0), (u64)(i1 + 12));
    l4 = i1;
    i0 = i0 < i1;
    if (i0) {goto L2;}
  i0 = l4;
  i1 = 3u;
  i0 <<= (i1 & 31);
  p0 = i0;
  goto B0;
  B1:;
  i0 = 0u;
  p0 = i0;
  B0:;
  i0 = l1;
  i1 = p0;
  j0 = (*Z_envZ_set_proposed_producersZ_jii)(i0, i1);
  i0 = mp_obj_new_int_from_ll(j0);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_is_privileged(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j2;
  i0 = 30u;
  i1 = 14u;
  i2 = p0;
  j2 = obj_to_u64(i2);
  i2 = (*Z_envZ_is_privilegedZ_ij)(j2);
  i0 = i2 ? i0 : i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_set_privileged(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0;
  i0 = p0;
  j0 = obj_to_u64(i0);
  i1 = p1;
  i1 = mp_obj_get_int(i1);
  i2 = 0u;
  i1 = i1 != i2;
  (*Z_envZ_set_privilegedZ_vji)(j0, i1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_set_blockchain_parameters(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 96u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = l0;
  i2 = 92u;
  i1 += i2;
  i2 = l0;
  i3 = 88u;
  i2 += i3;
  mp_obj_get_array(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 92));
  i1 = 19u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1));
  j1 = mp_obj_int_get_ull(i1);
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 8));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 20));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 24));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 28));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 32));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 36));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 40));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 44));
  j1 = mp_obj_int_get_ull(i1);
  i64_store((&M0), (u64)(i0 + 48), j1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 48));
  j1 = mp_obj_int_get_ull(i1);
  i64_store((&M0), (u64)(i0 + 56), j1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 52));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 64), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 56));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 68), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 60));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 72), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 64));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store((&M0), (u64)(i0 + 76), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 68));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store16((&M0), (u64)(i0 + 80), i1);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 88));
  i1 = i32_load((&M0), (u64)(i1 + 72));
  i1 = mp_obj_int_get_uint_checked(i1);
  i32_store16((&M0), (u64)(i0 + 82), i1);
  i0 = l0;
  set_blockchain_parameters(i0);
  i0 = l0;
  i1 = 96u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  goto Bfunc;
  B0:;
  i0 = 19460u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_get_blockchain_parameters(void) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = g0;
  i1 = 176u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 88u;
  i0 += i1;
  get_blockchain_parameters(i0);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 88));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 96));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 100));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 104));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 108));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 112));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 116));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 120));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 28), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 124));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 128));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 132));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 136));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 144));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 48), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 152));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 52), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 156));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 56), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 160));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 60), i1);
  i0 = l0;
  i1 = l0;
  j1 = i64_load32_u((&M0), (u64)(i1 + 164));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 64), i1);
  i0 = l0;
  i1 = l0;
  j1 = i32_load16_u((&M0), (u64)(i1 + 168));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 68), i1);
  i0 = l0;
  i1 = l0;
  j1 = i32_load16_u((&M0), (u64)(i1 + 170));
  i1 = mp_obj_new_int_from_ull(j1);
  i32_store((&M0), (u64)(i0 + 72), i1);
  i0 = 19u;
  i1 = l0;
  i0 = mp_obj_new_tuple(i0, i1);
  l1 = i0;
  i0 = l0;
  i1 = 176u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_eosio_assert(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  i1 = p1;
  i2 = l0;
  i3 = 12u;
  i2 += i3;
  i1 = mp_obj_str_get_data(i1, i2);
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_eosio_assert_code(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  i1 = p1;
  j1 = obj_to_u64(i1);
  (*Z_envZ_eosio_assert_codeZ_vij)(i0, j1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_current_time(void) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  j0 = (*Z_envZ_current_timeZ_jv)();
  i0 = mp_obj_new_int_from_ull(j0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_read_transaction(void) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = (*Z_envZ_transaction_sizeZ_iv)();
  l0 = i0;
  i0 = malloc_0(i0);
  l1 = i0;
  i1 = l0;
  i0 = (*Z_envZ_read_transactionZ_iii)(i0, i1);
  i0 = l1;
  i1 = l0;
  i0 = mp_obj_new_bytes(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_tapos_block_num(void) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = (*Z_envZ_tapos_block_numZ_iv)();
  i0 = mp_obj_new_int(i0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_tapos_block_prefix(void) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = (*Z_envZ_tapos_block_prefixZ_iv)();
  i0 = mp_obj_new_int_from_uint(i0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_expiration(void) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  i0 = (*Z_envZ_expirationZ_iv)();
  j0 = (u64)(s64)(s32)(i0);
  i0 = mp_obj_new_int_from_ull(j0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_get_action(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  l0 = i0;
  i1 = p1;
  i1 = mp_obj_get_int(i1);
  l1 = i1;
  i2 = 0u;
  i3 = 0u;
  i0 = (*Z_envZ_get_actionZ_iiiii)(i0, i1, i2, i3);
  p1 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = l1;
  i2 = p1;
  i2 = malloc_0(i2);
  p0 = i2;
  i3 = p1;
  i0 = (*Z_envZ_get_actionZ_iiiii)(i0, i1, i2, i3);
  i0 = p0;
  i1 = p1;
  i0 = mp_obj_new_bytes(i0, i1);
  p1 = i0;
  i0 = p0;
  free_0(i0);
  i0 = p1;
  goto Bfunc;
  B0:;
  i0 = 6u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_get_context_free_data(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = mp_obj_get_int(i0);
  p0 = i0;
  i1 = p0;
  i2 = 0u;
  i3 = 0u;
  i1 = (*Z_envZ_get_context_free_dataZ_iiii)(i1, i2, i3);
  p0 = i1;
  i1 = malloc_0(i1);
  l0 = i1;
  i2 = p0;
  i0 = (*Z_envZ_get_context_free_dataZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = p0;
  i0 = mp_obj_new_bytes(i0, i1);
  p0 = i0;
  i0 = l0;
  free_0(i0);
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_token_create(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2;
  i0 = p0;
  j0 = obj_to_u64(i0);
  i1 = p1;
  j1 = obj_to_u64(i1);
  i2 = p2;
  j2 = obj_to_u64(i2);
  token_create(j0, j1, j2);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_token_issue(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i3, i4, i5;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  j0 = l1;
  j1 = l2;
  j2 = l3;
  i3 = p1;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  i4 = l0;
  i5 = 12u;
  i4 += i5;
  i3 = mp_obj_str_get_data(i3, i4);
  i4 = l0;
  i4 = i32_load((&M0), (u64)(i4 + 12));
  token_issue(j0, j1, j2, i3, i4);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_token_transfer(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i4, i5, i6;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  j0 = obj_to_u64(i0);
  l3 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  j0 = obj_to_u64(i0);
  l4 = j0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  j0 = l1;
  j1 = l2;
  j2 = l3;
  j3 = l4;
  i4 = p1;
  i4 = i32_load((&M0), (u64)(i4 + 16));
  i5 = l0;
  i6 = 12u;
  i5 += i6;
  i4 = mp_obj_str_get_data(i4, i5);
  i5 = l0;
  i5 = i32_load((&M0), (u64)(i5 + 12));
  token_transfer(j0, j1, j2, j3, i4, i5);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_token_open(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  j1 = obj_to_u64(i1);
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  j2 = obj_to_u64(i2);
  token_open(j0, j1, j2);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_token_retire(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  j0 = obj_to_u64(i0);
  l2 = j0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  j0 = l1;
  j1 = l2;
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2 + 8));
  i3 = l0;
  i4 = 12u;
  i3 += i4;
  i2 = mp_obj_str_get_data(i2, i3);
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 12));
  token_retire(j0, j1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_token_close(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j0, j1;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = obj_to_u64(i0);
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  j1 = obj_to_u64(i1);
  token_close(j0, j1);
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_get_log(void) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5624));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 5628));
  i0 = mp_obj_new_bytes(i0, i1);
  goto Bfunc;
  B0:;
  i0 = 6u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mod_chain_enable_log(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = p0;
  i1 = mp_obj_is_true(i1);
  i32_store8((&M0), (u64)(i0 + 5620), i1);
  i0 = 30u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 __errno_location(void) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 5632u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 __memalign(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = 0u;
  l0 = i0;
  i0 = 0u;
  i1 = p0;
  i0 -= i1;
  l1 = i0;
  i1 = p0;
  i0 &= i1;
  i1 = p0;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 16u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = malloc_0(i0);
  goto Bfunc;
  B1:;
  i0 = __errno_location();
  i1 = 22u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 4294967295u;
  i0 += i1;
  l2 = i0;
  i1 = p1;
  i0 += i1;
  i0 = malloc_0(i0);
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i1 = l2;
  i2 = p0;
  i1 += i2;
  i2 = l1;
  i1 &= i2;
  l0 = i1;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = p0;
  i1 = 4294967292u;
  i0 += i1;
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = 7u;
  i0 &= i1;
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = p0;
  i1 = l2;
  i2 = 4294967288u;
  i1 &= i2;
  i0 += i1;
  l2 = i0;
  i1 = 4294967288u;
  i0 += i1;
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = l1;
  i1 = p1;
  i2 = l0;
  i3 = p0;
  i2 -= i3;
  l5 = i2;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4294967292u;
  i0 += i1;
  i1 = l2;
  i2 = l0;
  i1 -= i2;
  l1 = i1;
  i2 = p1;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4294967288u;
  i0 += i1;
  i1 = l4;
  i2 = 7u;
  i1 &= i2;
  p1 = i1;
  i2 = l5;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = p1;
  i2 = l1;
  i1 |= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  free_0(i0);
  B4:;
  i0 = l0;
  goto Bfunc;
  B3:;
  i0 = p0;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = 4294967288u;
  i0 += i1;
  i1 = p0;
  i2 = 4294967288u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l0;
  i3 = p0;
  i2 -= i3;
  p0 = i2;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 4294967292u;
  i0 += i1;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p0;
  i1 -= i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 _posix_memalign(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 22u;
  l0 = i0;
  i0 = p1;
  i1 = 4u;
  i0 = i0 < i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = p2;
  i0 = __memalign(i0, i1);
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = 0u;
  l0 = i0;
  B1:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = __errno_location();
  i0 = i32_load((&M0), (u64)(i0));
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 operator_new_unsigned_int_(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i1 = 1u;
  i2 = p0;
  i0 = i2 ? i0 : i1;
  l0 = i0;
  i0 = malloc_0(i0);
  p0 = i0;
  if (i0) {goto B0;}
  L1: vm_checktime();
    i0 = 0u;
    p0 = i0;
    i0 = 0u;
    i0 = i32_load((&M0), (u64)(i0 + 5640));
    l1 = i0;
    i0 = !(i0);
    if (i0) {goto B0;}
    i0 = l1;
    CALL_INDIRECT(T0, void (*)(void), 7, i0);
    i0 = l0;
    i0 = malloc_0(i0);
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto L1;}
  B0:;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 operator_new___unsigned_int_(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = operator_new_unsigned_int_(i0);
  FUNC_EPILOGUE;
  return i0;
}

static void operator_delete_void__(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  free_0(i0);
  B0:;
  FUNC_EPILOGUE;
}

static void operator_delete___void__(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  operator_delete_void__(i0);
  FUNC_EPILOGUE;
}

static u32 operator_new_unsigned_int__std__align_val_t_(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 12u;
  i0 += i1;
  i1 = p1;
  i2 = 4u;
  i3 = p1;
  i4 = 4u;
  i3 = i3 > i4;
  i1 = i3 ? i1 : i2;
  p1 = i1;
  i2 = p0;
  i3 = 1u;
  i4 = p0;
  i2 = i4 ? i2 : i3;
  l1 = i2;
  i0 = _posix_memalign(i0, i1, i2);
  i0 = !(i0);
  if (i0) {goto B0;}
  L2: vm_checktime();
    i0 = 0u;
    i0 = i32_load((&M0), (u64)(i0 + 5640));
    p0 = i0;
    i0 = !(i0);
    if (i0) {goto B1;}
    i0 = p0;
    CALL_INDIRECT(T0, void (*)(void), 7, i0);
    i0 = l0;
    i1 = 12u;
    i0 += i1;
    i1 = p1;
    i2 = l1;
    i0 = _posix_memalign(i0, i1, i2);
    if (i0) {goto L2;}
    goto B0;
  B1:;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  B0:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 operator_new___unsigned_int__std__align_val_t_(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  i0 = operator_new_unsigned_int__std__align_val_t_(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static void operator_delete_void___std__align_val_t_(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  free_0(i0);
  B0:;
  FUNC_EPILOGUE;
}

static void operator_delete___void___std__align_val_t_(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  operator_delete_void___std__align_val_t_(i0, i1);
  FUNC_EPILOGUE;
}

static void std____1____vector_base_common_true_____throw_length_error___const(u32 p0) {
  FUNC_PROLOGUE;
  (*Z_envZ_abortZ_vv)();
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static void pointer_add(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5648));
  i0 = !(i0);
  if (i0) {goto B31;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5652));
  i0 = !(i0);
  if (i0) {goto B30;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5656));
  i0 = !(i0);
  if (i0) {goto B29;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5660));
  i0 = !(i0);
  if (i0) {goto B28;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5664));
  i0 = !(i0);
  if (i0) {goto B27;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5668));
  i0 = !(i0);
  if (i0) {goto B26;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5672));
  i0 = !(i0);
  if (i0) {goto B25;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5676));
  i0 = !(i0);
  if (i0) {goto B24;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5680));
  i0 = !(i0);
  if (i0) {goto B23;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5684));
  i0 = !(i0);
  if (i0) {goto B22;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5688));
  i0 = !(i0);
  if (i0) {goto B21;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5692));
  i0 = !(i0);
  if (i0) {goto B20;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5696));
  i0 = !(i0);
  if (i0) {goto B19;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5700));
  i0 = !(i0);
  if (i0) {goto B18;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5704));
  i0 = !(i0);
  if (i0) {goto B17;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5708));
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5712));
  i0 = !(i0);
  if (i0) {goto B15;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5716));
  i0 = !(i0);
  if (i0) {goto B14;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5720));
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5724));
  i0 = !(i0);
  if (i0) {goto B12;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5728));
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5732));
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5736));
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5740));
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5744));
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5748));
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5752));
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5756));
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5760));
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5764));
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5768));
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5772));
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 10825u;
  micropython_raise_exception(i0);
  goto Bfunc;
  B31:;
  i0 = 5648u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B30:;
  i0 = 5652u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B29:;
  i0 = 5656u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B28:;
  i0 = 5660u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B27:;
  i0 = 5664u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B26:;
  i0 = 5668u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B25:;
  i0 = 5672u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B24:;
  i0 = 5676u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B23:;
  i0 = 5680u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B22:;
  i0 = 5684u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B21:;
  i0 = 5688u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B20:;
  i0 = 5692u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B19:;
  i0 = 5696u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B18:;
  i0 = 5700u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B17:;
  i0 = 5704u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B16:;
  i0 = 5708u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B15:;
  i0 = 5712u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B14:;
  i0 = 5716u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B13:;
  i0 = 5720u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B12:;
  i0 = 5724u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B11:;
  i0 = 5728u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B10:;
  i0 = 5732u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B9:;
  i0 = 5736u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B8:;
  i0 = 5740u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B7:;
  i0 = 5744u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B6:;
  i0 = 5748u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B5:;
  i0 = 5752u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B4:;
  i0 = 5756u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B3:;
  i0 = 5760u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B2:;
  i0 = 5764u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = 5768u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 5772u;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 pointer_check(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 1u;
  l0 = i0;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5648));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5652));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5656));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5660));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5664));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5668));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5672));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5676));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5680));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5684));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5688));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5692));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5696));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5700));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5704));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5708));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5712));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5716));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5720));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5724));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5728));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5732));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5736));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5740));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5744));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5748));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5752));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5756));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5760));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5764));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5768));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5772));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 11766u;
  micropython_raise_exception(i0);
  i0 = 0u;
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void pointer_free(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5648));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B31;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5652));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B30;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5656));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B29;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5660));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B28;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5664));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B27;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5668));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B26;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5672));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B25;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5676));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B24;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5680));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B23;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5684));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B22;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5688));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B21;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5692));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B20;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5696));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B19;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5700));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B18;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5704));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B17;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5708));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B16;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5712));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B15;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5716));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B14;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5720));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B13;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5724));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5728));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B11;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5732));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5736));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5740));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5744));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5748));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5752));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5756));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5760));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5764));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5768));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 5772));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 11766u;
  micropython_raise_exception(i0);
  goto Bfunc;
  B31:;
  i0 = 5648u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B30:;
  i0 = 5652u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B29:;
  i0 = 5656u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B28:;
  i0 = 5660u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B27:;
  i0 = 5664u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B26:;
  i0 = 5668u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B25:;
  i0 = 5672u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B24:;
  i0 = 5676u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B23:;
  i0 = 5680u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B22:;
  i0 = 5684u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B21:;
  i0 = 5688u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B20:;
  i0 = 5692u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B19:;
  i0 = 5696u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B18:;
  i0 = 5700u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B17:;
  i0 = 5704u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B16:;
  i0 = 5708u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B15:;
  i0 = 5712u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B14:;
  i0 = 5716u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B13:;
  i0 = 5720u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B12:;
  i0 = 5724u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B11:;
  i0 = 5728u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B10:;
  i0 = 5732u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B9:;
  i0 = 5736u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B8:;
  i0 = 5740u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B7:;
  i0 = 5744u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B6:;
  i0 = 5748u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B5:;
  i0 = 5752u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B4:;
  i0 = 5756u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B3:;
  i0 = 5760u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B2:;
  i0 = 5764u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B1:;
  i0 = 5768u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = 5772u;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 action_new(u64 p0, u64 p1, u64 p2, u64 p3, u32 p4, u32 p5) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 40u;
  i0 = malloc_0(i0);
  l1 = i0;
  j1 = p0;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l1;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = p3;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = p2;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l2 = i0;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 24));
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l2;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l2;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l1;
  i1 = 20u;
  i0 += i1;
  l2 = i0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  goto B0;
  B1:;
  i0 = l1;
  i1 = 16u;
  i0 += i1;
  i1 = l0;
  void_std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level_______push_back_slow_path_eosio__permission_level_const___eosio__permission_level_const____(i0, i1);
  B0:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1 + 28));
  l2 = i1;
  i0 -= i1;
  l3 = i0;
  i1 = p5;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 28u;
  i0 += i1;
  l2 = i0;
  i1 = p5;
  i2 = l3;
  i1 -= i2;
  std____1__vector_char__std____1__allocator_char_______append_unsigned_int_(i0, i1);
  i0 = l2;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  goto B2;
  B3:;
  i0 = l3;
  i1 = p5;
  i0 = i0 <= i1;
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 32u;
  i0 += i1;
  i1 = l2;
  i2 = p5;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  B2:;
  i0 = l2;
  i1 = p4;
  i2 = p5;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  pointer_add(i0);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static void void_std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level_______push_back_slow_path_eosio__permission_level_const___eosio__permission_level_const____(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i0 -= i1;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  l2 = i0;
  i1 = 1u;
  i0 += i1;
  l3 = i0;
  i1 = 268435456u;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  i0 = 268435455u;
  l4 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l1;
  i0 -= i1;
  l5 = i0;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = 134217726u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = l3;
  i1 = l5;
  i2 = 3u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  l4 = i1;
  i2 = l4;
  i3 = l3;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l4;
  i1 = 268435456u;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  B4:;
  i0 = l4;
  i1 = 4u;
  i0 <<= (i1 & 31);
  i0 = operator_new_unsigned_int_(i0);
  l3 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B0;
  B3:;
  i0 = 0u;
  l4 = i0;
  i0 = 0u;
  l3 = i0;
  goto B0;
  B2:;
  i0 = p0;
  std____1____vector_base_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  B1:;
  (*Z_envZ_abortZ_vv)();
  UNREACHABLE;
  B0:;
  i0 = l3;
  i1 = l2;
  i2 = 4u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l2 = i0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l2;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l2;
  i1 = l0;
  i2 = l1;
  i1 -= i2;
  p1 = i1;
  i0 -= i1;
  l0 = i0;
  i0 = l3;
  i1 = l4;
  i2 = 4u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l4 = i0;
  i0 = l2;
  i1 = 16u;
  i0 += i1;
  l2 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B5;}
  i0 = l0;
  i1 = l1;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  B5:;
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l4;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l1;
  operator_delete_void__(i0);
  B6:;
  FUNC_EPILOGUE;
}

static void std____1__vector_char__std____1__allocator_char_______append_unsigned_int_(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l1 = i1;
  i0 -= i1;
  i1 = p1;
  i0 = i0 >= i1;
  if (i0) {goto B4;}
  i0 = l1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l2 = i1;
  i0 -= i1;
  l3 = i0;
  i1 = p1;
  i0 += i1;
  l4 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B2;}
  i0 = 2147483647u;
  l5 = i0;
  i0 = l0;
  i1 = l2;
  i0 -= i1;
  l0 = i0;
  i1 = 1073741822u;
  i0 = i0 > i1;
  if (i0) {goto B5;}
  i0 = l4;
  i1 = l0;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l0 = i1;
  i2 = l0;
  i3 = l4;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  l5 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  B5:;
  i0 = l5;
  i0 = operator_new_unsigned_int_(i0);
  l0 = i0;
  goto B1;
  B4:;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  p0 = i0;
  L6: vm_checktime();
    i0 = l1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = p0;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    l1 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    if (i0) {goto L6;}
    goto B0;
  B3:;
  i0 = 0u;
  l5 = i0;
  i0 = 0u;
  l0 = i0;
  goto B1;
  B2:;
  i0 = p0;
  std____1____vector_base_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  B1:;
  i0 = l0;
  i1 = l5;
  i0 += i1;
  l5 = i0;
  i0 = l1;
  i1 = p1;
  i0 += i1;
  i1 = l2;
  i0 -= i1;
  l2 = i0;
  i0 = l0;
  i1 = l3;
  i0 += i1;
  l3 = i0;
  l1 = i0;
  L7: vm_checktime();
    i0 = l1;
    i1 = 0u;
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = p1;
    i1 = 4294967295u;
    i0 += i1;
    p1 = i0;
    if (i0) {goto L7;}
  i0 = l0;
  i1 = l2;
  i0 += i1;
  l2 = i0;
  i0 = l3;
  i1 = p0;
  i2 = 4u;
  i1 += i2;
  l4 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p0;
  i2 = i32_load((&M0), (u64)(i2));
  p1 = i2;
  i1 -= i2;
  l1 = i1;
  i0 -= i1;
  l0 = i0;
  i0 = l1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B8;}
  i0 = l0;
  i1 = p1;
  i2 = l1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  B8:;
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l5;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  operator_delete_void__(i0);
  goto Bfunc;
  B0:;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void action_add_permission(u32 p0, u64 p1, u64 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = pointer_check(i0);
  i0 = l0;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  l1 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 24));
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l1;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i1 = 20u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  i1 = l0;
  void_std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level_______push_back_slow_path_eosio__permission_level_const___eosio__permission_level_const____(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void action_send(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = pointer_check(i0);
  i0 = l0;
  i1 = p0;
  std____1__vector_char__std____1__allocator_char____eosio__pack_eosio__action__eosio__action_const__(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = p0;
  i1 -= i2;
  (*Z_envZ_send_inlineZ_vii)(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  operator_delete_void__(i0);
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void std____1__vector_char__std____1__allocator_char____eosio__pack_eosio__action__eosio__action_const__(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  u64 l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = 16u;
  l1 = i0;
  i0 = p1;
  i1 = 16u;
  i0 += i1;
  l2 = i0;
  i0 = p1;
  i1 = 20u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  l4 = i1;
  i0 -= i1;
  l5 = i0;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(i0);
  l6 = j0;
  L0: vm_checktime();
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    j0 = l6;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    l6 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L0;}
  i0 = l4;
  i1 = l3;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l5;
  i1 = 4294967280u;
  i0 &= i1;
  i1 = l1;
  i0 += i1;
  l1 = i0;
  B1:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  l3 = i0;
  i1 = l1;
  i0 -= i1;
  i1 = p1;
  i2 = 32u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l4 = i1;
  i0 -= i1;
  l1 = i0;
  i0 = p1;
  i1 = 28u;
  i0 += i1;
  l5 = i0;
  i0 = l4;
  i1 = l3;
  i0 -= i1;
  j0 = (u64)(i0);
  l6 = j0;
  L2: vm_checktime();
    i0 = l1;
    i1 = 4294967295u;
    i0 += i1;
    l1 = i0;
    j0 = l6;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    l6 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L2;}
  i0 = 0u;
  l3 = i0;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = p0;
  i1 = 0u;
  i2 = l1;
  i1 -= i2;
  std____1__vector_char__std____1__allocator_char_______append_unsigned_int_(i0, i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B3;
  B4:;
  i0 = 0u;
  l1 = i0;
  B3:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l3;
  i1 = l1;
  i0 -= i1;
  p0 = i0;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 12441u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l1;
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 4294967288u;
  i0 += i1;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 12441u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l1;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = l1;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l2;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__permission_level__eosio__datastream_char_____std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level____const__(i0, i1);
  i1 = l5;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____std____1__vector_char__std____1__allocator_char____const__(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__permission_level__eosio__datastream_char_____std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level____const__(u32 p0, u32 p1) {
  u32 l0 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i0 -= i1;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(i0);
  l1 = j0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  L0: vm_checktime();
    j0 = l1;
    i0 = (u32)(j0);
    l4 = i0;
    i0 = l0;
    j1 = l1;
    j2 = 7ull;
    j1 >>= (j2 & 63);
    l1 = j1;
    j2 = 0ull;
    i1 = j1 != j2;
    l5 = i1;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i2 = l4;
    i3 = 127u;
    i2 &= i3;
    i1 |= i2;
    i32_store8((&M0), (u64)(i0 + 15), i1);
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    i1 = 12441u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    l4 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i2 = 15u;
    i1 += i2;
    i2 = 1u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    l2 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    if (i0) {goto L0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l5 = i0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  p1 = i1;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  L2: vm_checktime();
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    l3 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 7u;
    i0 = (u32)((s32)i0 > (s32)i1);
    i1 = 12441u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i2 = 8u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 8u;
    i1 += i2;
    l2 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 7u;
    i0 = (u32)((s32)i0 > (s32)i1);
    i1 = 12441u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i2 = 8u;
    i1 += i2;
    i2 = 8u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 8u;
    i1 += i2;
    l2 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    i1 = 16u;
    i0 += i1;
    l5 = i0;
    i1 = p1;
    i0 = i0 != i1;
    if (i0) {goto L2;}
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____std____1__vector_char__std____1__allocator_char____const__(u32 p0, u32 p1) {
  u32 l0 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i0 -= i1;
  j0 = (u64)(i0);
  l1 = j0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  L0: vm_checktime();
    j0 = l1;
    i0 = (u32)(j0);
    l5 = i0;
    i0 = l0;
    j1 = l1;
    j2 = 7ull;
    j1 >>= (j2 & 63);
    l1 = j1;
    j2 = 0ull;
    i1 = j1 != j2;
    l6 = i1;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i2 = l5;
    i3 = 127u;
    i2 &= i3;
    i1 |= i2;
    i32_store8((&M0), (u64)(i0 + 15), i1);
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    i1 = 12441u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i2 = 15u;
    i1 += i2;
    i2 = 1u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    l2 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    if (i0) {goto L0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l2;
  i0 -= i1;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i2 = i32_load((&M0), (u64)(i2));
  l5 = i2;
  i1 -= i2;
  l4 = i1;
  i0 = (u32)((s32)i0 >= (s32)i1);
  i1 = 12441u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l5;
  i2 = l4;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l4;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static void action_free(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = pointer_check(i0);
  i0 = p0;
  pointer_free(i0);
  i0 = p0;
  free_0(i0);
  FUNC_EPILOGUE;
}

static u32 transaction_new(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4, u32 p5) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 60u;
  i0 = malloc_0(i0);
  l0 = i0;
  i1 = p1;
  i32_store16((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p3;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  i1 = p4;
  i32_store8((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = p5;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  pointer_add(i0);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static void transaction_add_action(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = pointer_check(i0);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 44));
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i0 = eosio__action__action_eosio__action_const__(i0, i1);
  i0 = p0;
  i1 = 40u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 40u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 36u;
  i0 += i1;
  i1 = p1;
  void_std____1__vector_eosio__action__std____1__allocator_eosio__action_______push_back_slow_path_eosio__action_const___eosio__action_const____(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 eosio__action__action_eosio__action_const__(u32 p0, u32 p1) {
  u32 l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  u64 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  i0 = p0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  l0 = j0;
  i0 = p0;
  i1 = 20u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  j1 = l0;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = p1;
  i1 = 20u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i0 -= i1;
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l1;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  l2 = i0;
  i1 = 268435456u;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  i1 = l1;
  i1 = operator_new_unsigned_int_(i1);
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 24u;
  i0 += i1;
  i1 = l1;
  i2 = l2;
  i3 = 4u;
  i2 <<= (i3 & 31);
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 20u;
  i0 += i1;
  l2 = i0;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 20u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i2 = 16u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i0 -= i1;
  l4 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = l1;
  i1 = l3;
  i2 = l4;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = l4;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  B2:;
  i0 = p0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 28), j1);
  i0 = p0;
  i1 = 36u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 28));
  i0 -= i1;
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l1;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 28u;
  i0 += i1;
  i1 = l1;
  i1 = operator_new_unsigned_int_(i1);
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 36u;
  i0 += i1;
  i1 = l2;
  i2 = l1;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 32u;
  i0 += i1;
  l1 = i0;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i2 = 28u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l4 = i1;
  i0 -= i1;
  p1 = i0;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B3;}
  i0 = l2;
  i1 = l4;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = p1;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  B3:;
  i0 = p0;
  goto Bfunc;
  B1:;
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  std____1____vector_base_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  B0:;
  i0 = p0;
  i1 = 28u;
  i0 += i1;
  std____1____vector_base_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void void_std____1__vector_eosio__action__std____1__allocator_eosio__action_______push_back_slow_path_eosio__action_const___eosio__action_const____(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0, l7 = 0, 
      l8 = 0, l9 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l0 = i1;
  i0 -= i1;
  i1 = 40u;
  i0 = I32_DIV_S(i0, i1);
  l1 = i0;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  i1 = 107374183u;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = 107374182u;
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 40u;
  i0 = I32_DIV_S(i0, i1);
  l0 = i0;
  i1 = 53687090u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = l2;
  i1 = l0;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l3 = i1;
  i2 = l3;
  i3 = l2;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  B3:;
  i0 = l3;
  i1 = 40u;
  i0 *= i1;
  i0 = operator_new_unsigned_int_(i0);
  l0 = i0;
  goto B0;
  B2:;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l0 = i0;
  goto B0;
  B1:;
  i0 = p0;
  std____1____vector_base_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = l3;
  i2 = 40u;
  i1 *= i2;
  i0 += i1;
  l4 = i0;
  i0 = l0;
  i1 = l1;
  i2 = 40u;
  i1 *= i2;
  i0 += i1;
  l5 = i0;
  i1 = p1;
  i0 = eosio__action__action_eosio__action_const__(i0, i1);
  l0 = i0;
  i1 = 40u;
  i0 += i1;
  l6 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l7 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l3;
  i1 = l7;
  i0 -= i1;
  l8 = i0;
  i0 = 0u;
  p1 = i0;
  L6: vm_checktime();
    i0 = l5;
    i1 = p1;
    i0 += i1;
    l3 = i0;
    i1 = 4294967264u;
    i0 += i1;
    i1 = l7;
    i2 = p1;
    i1 += i2;
    l0 = i1;
    i2 = 4294967264u;
    i1 += i2;
    j1 = i64_load((&M0), (u64)(i1));
    i64_store((&M0), (u64)(i0), j1);
    i0 = l3;
    i1 = 4294967256u;
    i0 += i1;
    i1 = l0;
    i2 = 4294967256u;
    i1 += i2;
    j1 = i64_load((&M0), (u64)(i1));
    i64_store((&M0), (u64)(i0), j1);
    i0 = l3;
    i1 = 4294967272u;
    i0 += i1;
    l1 = i0;
    j1 = 0ull;
    i64_store((&M0), (u64)(i0), j1);
    i0 = l3;
    i1 = 4294967280u;
    i0 += i1;
    l2 = i0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = l0;
    i2 = 4294967272u;
    i1 += i2;
    l9 = i1;
    j1 = i64_load((&M0), (u64)(i1));
    i64_store((&M0), (u64)(i0), j1);
    i0 = l2;
    i1 = l0;
    i2 = 4294967280u;
    i1 += i2;
    l1 = i1;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i1 = 4294967284u;
    i0 += i1;
    l1 = i0;
    j1 = 0ull;
    i64_store((&M0), (u64)(i0), j1);
    i0 = l3;
    i1 = 4294967292u;
    i0 += i1;
    l3 = i0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = l0;
    i2 = 4294967284u;
    i1 += i2;
    l2 = i1;
    j1 = i64_load((&M0), (u64)(i1));
    i64_store((&M0), (u64)(i0), j1);
    i0 = l9;
    j1 = 0ull;
    i64_store((&M0), (u64)(i0), j1);
    i0 = l3;
    i1 = l0;
    i2 = 4294967292u;
    i1 += i2;
    l0 = i1;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l2;
    j1 = 0ull;
    i64_store((&M0), (u64)(i0), j1);
    i0 = l8;
    i1 = p1;
    i2 = 4294967256u;
    i1 += i2;
    p1 = i1;
    i0 = i0 != i1;
    if (i0) {goto L6;}
  i0 = l5;
  i1 = p1;
  i0 += i1;
  l0 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B4;
  B5:;
  i0 = l3;
  l1 = i0;
  B4:;
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l6;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l4;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = l1;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  L8: vm_checktime();
    i0 = l3;
    i1 = 4294967284u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l0 = i0;
    i0 = !(i0);
    if (i0) {goto B9;}
    i0 = l3;
    i1 = 4294967288u;
    i0 += i1;
    i1 = l0;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l0;
    operator_delete_void__(i0);
    B9:;
    i0 = l3;
    i1 = 4294967256u;
    i0 += i1;
    l0 = i0;
    i0 = l3;
    i1 = 4294967272u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i0 = !(i0);
    if (i0) {goto B10;}
    i0 = l3;
    i1 = 4294967276u;
    i0 += i1;
    i1 = p1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    operator_delete_void__(i0);
    B10:;
    i0 = l0;
    l3 = i0;
    i0 = l1;
    i1 = l0;
    i0 = i0 != i1;
    if (i0) {goto L8;}
  B7:;
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = l1;
  operator_delete_void__(i0);
  B11:;
  FUNC_EPILOGUE;
}

static void transaction_add_context_free_action(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = pointer_check(i0);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 28));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 32));
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i0 = eosio__action__action_eosio__action_const__(i0, i1);
  i0 = p0;
  i1 = 28u;
  i0 += i1;
  p0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 40u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  goto Bfunc;
  B0:;
  i0 = p0;
  i1 = 24u;
  i0 += i1;
  i1 = p1;
  void_std____1__vector_eosio__action__std____1__allocator_eosio__action_______push_back_slow_path_eosio__action_const___eosio__action_const____(i0, i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void transaction_send(u32 p0, u64 p1, u64 p2, u64 p3, u32 p4) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = p0;
  i0 = pointer_check(i0);
  i0 = l0;
  i1 = p0;
  std____1__vector_char__std____1__allocator_char____eosio__pack_eosio__transaction__eosio__transaction_const__(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  j1 = p3;
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2));
  p0 = i2;
  i3 = l0;
  i3 = i32_load((&M0), (u64)(i3 + 4));
  i4 = p0;
  i3 -= i4;
  i4 = p4;
  (*Z_envZ_send_deferredZ_vijiii)(i0, j1, i2, i3, i4);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  operator_delete_void__(i0);
  B0:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void std____1__vector_char__std____1__allocator_char____eosio__pack_eosio__transaction__eosio__transaction_const__(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p1;
  i0 = eosio__datastream_unsigned_int___eosio__operator___eosio__datastream_unsigned_int____eosio__datastream_unsigned_int____eosio__transaction_const__(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = p0;
  i1 = l2;
  std____1__vector_char__std____1__allocator_char_______append_unsigned_int_(i0, i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  goto B0;
  B1:;
  i0 = 0u;
  p0 = i0;
  B0:;
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = p1;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__transaction_header_const__(i0, i1);
  i0 = l0;
  i1 = p1;
  i2 = 24u;
  i1 += i2;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__action__eosio__datastream_char_____std____1__vector_eosio__action__std____1__allocator_eosio__action____const__(i0, i1);
  i1 = p1;
  i2 = 36u;
  i1 += i2;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__action__eosio__datastream_char_____std____1__vector_eosio__action__std____1__allocator_eosio__action____const__(i0, i1);
  i1 = p1;
  i2 = 48u;
  i1 += i2;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char____std____1__tuple_unsigned_short__std____1__vector_char__std____1__allocator_char________eosio__datastream_char_____std____1__vector_std____1__tuple_unsigned_short__std____1__vector_char__std____1__allocator_char_______std____1__allocator_std____1__tuple_unsigned_short__std____1__vector_char__std____1__allocator_char__________const__(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 eosio__datastream_unsigned_int___eosio__operator___eosio__datastream_unsigned_int____eosio__datastream_unsigned_int____eosio__transaction_const__(u32 p0, u32 p1) {
  u32 l0 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l0 = i1;
  i2 = 10u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 11u;
  i0 += i1;
  l0 = i0;
  i0 = p1;
  j0 = i64_load32_u((&M0), (u64)(i0 + 12));
  l1 = j0;
  L0: vm_checktime();
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    j0 = l1;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    l1 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L0;}
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  j0 = i64_load32_u((&M0), (u64)(i0 + 20));
  l1 = j0;
  L1: vm_checktime();
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    j0 = l1;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    l1 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L1;}
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 28u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 24));
  l3 = i1;
  i0 -= i1;
  i1 = 40u;
  i0 = I32_DIV_S(i0, i1);
  j0 = (u64)(i0);
  l1 = j0;
  L2: vm_checktime();
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    j0 = l1;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    l1 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L2;}
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = l2;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  L4: vm_checktime();
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    l0 = i0;
    i0 = l3;
    i1 = 20u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1 + 16));
    l5 = i1;
    i0 -= i1;
    l6 = i0;
    i1 = 4u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    j0 = (u64)(i0);
    l1 = j0;
    L5: vm_checktime();
      i0 = l0;
      i1 = 1u;
      i0 += i1;
      l0 = i0;
      j0 = l1;
      j1 = 7ull;
      j0 >>= (j1 & 63);
      l1 = j0;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto L5;}
    i0 = l5;
    i1 = l4;
    i0 = i0 == i1;
    if (i0) {goto B6;}
    i0 = l6;
    i1 = 4294967280u;
    i0 &= i1;
    i1 = l0;
    i0 += i1;
    l0 = i0;
    B6:;
    i0 = l0;
    i1 = l3;
    i2 = 32u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l4 = i1;
    i0 += i1;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1 + 28));
    l5 = i1;
    i0 -= i1;
    l0 = i0;
    i0 = l4;
    i1 = l5;
    i0 -= i1;
    j0 = (u64)(i0);
    l1 = j0;
    L7: vm_checktime();
      i0 = l0;
      i1 = 1u;
      i0 += i1;
      l0 = i0;
      j0 = l1;
      j1 = 7ull;
      j0 >>= (j1 & 63);
      l1 = j0;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto L7;}
    i0 = l3;
    i1 = 40u;
    i0 += i1;
    l3 = i0;
    i1 = l2;
    i0 = i0 != i1;
    if (i0) {goto L4;}
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  B3:;
  i0 = p1;
  i1 = 40u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 36));
  l3 = i1;
  i0 -= i1;
  i1 = 40u;
  i0 = I32_DIV_S(i0, i1);
  j0 = (u64)(i0);
  l1 = j0;
  L8: vm_checktime();
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    j0 = l1;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    l1 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L8;}
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = l2;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  L10: vm_checktime();
    i0 = l0;
    i1 = 16u;
    i0 += i1;
    l0 = i0;
    i0 = l3;
    i1 = 20u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    l4 = i0;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1 + 16));
    l5 = i1;
    i0 -= i1;
    l6 = i0;
    i1 = 4u;
    i0 = (u32)((s32)i0 >> (i1 & 31));
    j0 = (u64)(i0);
    l1 = j0;
    L11: vm_checktime();
      i0 = l0;
      i1 = 1u;
      i0 += i1;
      l0 = i0;
      j0 = l1;
      j1 = 7ull;
      j0 >>= (j1 & 63);
      l1 = j0;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto L11;}
    i0 = l5;
    i1 = l4;
    i0 = i0 == i1;
    if (i0) {goto B12;}
    i0 = l6;
    i1 = 4294967280u;
    i0 &= i1;
    i1 = l0;
    i0 += i1;
    l0 = i0;
    B12:;
    i0 = l0;
    i1 = l3;
    i2 = 32u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l4 = i1;
    i0 += i1;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1 + 28));
    l5 = i1;
    i0 -= i1;
    l0 = i0;
    i0 = l4;
    i1 = l5;
    i0 -= i1;
    j0 = (u64)(i0);
    l1 = j0;
    L13: vm_checktime();
      i0 = l0;
      i1 = 1u;
      i0 += i1;
      l0 = i0;
      j0 = l1;
      j1 = 7ull;
      j0 >>= (j1 & 63);
      l1 = j0;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto L13;}
    i0 = l3;
    i1 = 40u;
    i0 += i1;
    l3 = i0;
    i1 = l2;
    i0 = i0 != i1;
    if (i0) {goto L10;}
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  B9:;
  i0 = p1;
  i1 = 52u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l6 = i0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1 + 48));
  l3 = i1;
  i0 -= i1;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(i0);
  l1 = j0;
  L14: vm_checktime();
    i0 = l0;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    j0 = l1;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    l1 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L14;}
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = l6;
  i0 = i0 == i1;
  if (i0) {goto B15;}
  L16: vm_checktime();
    i0 = l0;
    i1 = l3;
    i2 = 8u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    l4 = i1;
    i0 += i1;
    i1 = 2u;
    i0 += i1;
    i1 = l3;
    i1 = i32_load((&M0), (u64)(i1 + 4));
    l5 = i1;
    i0 -= i1;
    l0 = i0;
    i0 = l4;
    i1 = l5;
    i0 -= i1;
    j0 = (u64)(i0);
    l1 = j0;
    L17: vm_checktime();
      i0 = l0;
      i1 = 1u;
      i0 += i1;
      l0 = i0;
      j0 = l1;
      j1 = 7ull;
      j0 >>= (j1 & 63);
      l1 = j0;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto L17;}
    i0 = l3;
    i1 = 16u;
    i0 += i1;
    l3 = i0;
    i1 = l6;
    i0 = i0 != i1;
    if (i0) {goto L16;}
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  B15:;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__transaction_header_const__(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l4 = 0, l5 = 0;
  u64 l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 12441u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l1;
  i0 -= i1;
  i1 = 1u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 12441u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i2 = 2u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i1 += i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l1;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 12441u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p1;
  j0 = i64_load32_u((&M0), (u64)(i0 + 12));
  l3 = j0;
  L0: vm_checktime();
    j0 = l3;
    i0 = (u32)(j0);
    l1 = i0;
    i0 = l0;
    j1 = l3;
    j2 = 7ull;
    j1 >>= (j2 & 63);
    l3 = j1;
    j2 = 0ull;
    i1 = j1 != j2;
    l4 = i1;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i2 = l1;
    i3 = 127u;
    i2 &= i3;
    i1 |= i2;
    i32_store8((&M0), (u64)(i0 + 14), i1);
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    i1 = 12441u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i2 = 14u;
    i1 += i2;
    i2 = 1u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l1;
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    l2 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l4;
    if (i0) {goto L0;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l5 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l2;
  i0 -= i1;
  i1 = 0u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 12441u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = p1;
  i2 = 16u;
  i1 += i2;
  i2 = 1u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 1u;
  i1 += i2;
  l2 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  j0 = i64_load32_u((&M0), (u64)(i0 + 20));
  l3 = j0;
  L1: vm_checktime();
    j0 = l3;
    i0 = (u32)(j0);
    l4 = i0;
    i0 = l0;
    j1 = l3;
    j2 = 7ull;
    j1 >>= (j2 & 63);
    l3 = j1;
    j2 = 0ull;
    i1 = j1 != j2;
    p1 = i1;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i2 = l4;
    i3 = 127u;
    i2 &= i3;
    i1 |= i2;
    i32_store8((&M0), (u64)(i0 + 15), i1);
    i0 = l5;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    i1 = 12441u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = l1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i2 = 15u;
    i1 += i2;
    i2 = 1u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l1;
    i1 = l1;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    l2 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    if (i0) {goto L1;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__action__eosio__datastream_char_____std____1__vector_eosio__action__std____1__allocator_eosio__action____const__(u32 p0, u32 p1) {
  u32 l0 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i0 -= i1;
  i1 = 40u;
  i0 = I32_DIV_S(i0, i1);
  j0 = (u64)(i0);
  l1 = j0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  L0: vm_checktime();
    j0 = l1;
    i0 = (u32)(j0);
    l5 = i0;
    i0 = l0;
    j1 = l1;
    j2 = 7ull;
    j1 >>= (j2 & 63);
    l1 = j1;
    j2 = 0ull;
    i1 = j1 != j2;
    l6 = i1;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i2 = l5;
    i3 = 127u;
    i2 &= i3;
    i1 |= i2;
    i32_store8((&M0), (u64)(i0 + 15), i1);
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    i1 = 12441u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i2 = 15u;
    i1 += i2;
    i2 = 1u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    l2 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    if (i0) {goto L0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l5 = i0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l4 = i0;
  L2: vm_checktime();
    i0 = p0;
    i1 = 8u;
    i0 += i1;
    l6 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 7u;
    i0 = (u32)((s32)i0 > (s32)i1);
    i1 = 12441u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i2 = 8u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 8u;
    i1 += i2;
    l2 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 7u;
    i0 = (u32)((s32)i0 > (s32)i1);
    i1 = 12441u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l5;
    i2 = 8u;
    i1 += i2;
    i2 = 8u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 8u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = l5;
    i2 = 16u;
    i1 += i2;
    i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__permission_level__eosio__datastream_char_____std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level____const__(i0, i1);
    i1 = l5;
    i2 = 28u;
    i1 += i2;
    i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____std____1__vector_char__std____1__allocator_char____const__(i0, i1);
    i0 = l5;
    i1 = 40u;
    i0 += i1;
    l5 = i0;
    i1 = l3;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    i0 = l4;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    goto L2;
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char____std____1__tuple_unsigned_short__std____1__vector_char__std____1__allocator_char________eosio__datastream_char_____std____1__vector_std____1__tuple_unsigned_short__std____1__vector_char__std____1__allocator_char_______std____1__allocator_std____1__tuple_unsigned_short__std____1__vector_char__std____1__allocator_char__________const__(u32 p0, u32 p1) {
  u32 l0 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  i0 -= i1;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(i0);
  l1 = j0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  L0: vm_checktime();
    j0 = l1;
    i0 = (u32)(j0);
    l4 = i0;
    i0 = l0;
    j1 = l1;
    j2 = 7ull;
    j1 >>= (j2 & 63);
    l1 = j1;
    j2 = 0ull;
    i1 = j1 != j2;
    l5 = i1;
    i2 = 7u;
    i1 <<= (i2 & 31);
    i2 = l4;
    i3 = 127u;
    i2 &= i3;
    i1 |= i2;
    i32_store8((&M0), (u64)(i0 + 15), i1);
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 0u;
    i0 = (u32)((s32)i0 > (s32)i1);
    i1 = 12441u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    l4 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l0;
    i2 = 15u;
    i1 += i2;
    i2 = 1u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l4;
    i1 = l4;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 1u;
    i1 += i2;
    l2 = i1;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    if (i0) {goto L0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i1 = p1;
  i2 = 4u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l5 = i1;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  l3 = i0;
  L2: vm_checktime();
    i0 = l3;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l2;
    i0 -= i1;
    i1 = 1u;
    i0 = (u32)((s32)i0 > (s32)i1);
    i1 = 12441u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = p0;
    i1 = 4u;
    i0 += i1;
    l2 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = l4;
    i2 = 2u;
    i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
    i0 = l2;
    i1 = l2;
    i1 = i32_load((&M0), (u64)(i1));
    i2 = 2u;
    i1 += i2;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i1 = l4;
    i2 = 4u;
    i1 += i2;
    i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____std____1__vector_char__std____1__allocator_char____const__(i0, i1);
    i0 = l4;
    i1 = 16u;
    i0 += i1;
    l4 = i0;
    i1 = l5;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    i0 = l2;
    i0 = i32_load((&M0), (u64)(i0));
    l2 = i0;
    goto L2;
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 transaction_cancel(u64 p0, u64 p1) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i0 = (*Z_envZ_cancel_deferredZ_ii)(i0);
  l1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  FUNC_EPILOGUE;
  return i0;
}

static void transaction_free(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  i0 = pointer_check(i0);
  i0 = p0;
  pointer_free(i0);
  i0 = p0;
  free_0(i0);
  FUNC_EPILOGUE;
}

static void set_blockchain_parameters(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 112u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = l0;
  i2 = 104u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p0;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__blockchain_parameters_const__(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = l0;
  i2 = i32_load((&M0), (u64)(i2));
  i1 -= i2;
  (*Z_envZ_set_blockchain_parameters_packedZ_vii)(i0, i1);
  i0 = l0;
  i1 = 112u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__blockchain_parameters_const__(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 -= i1;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11785u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 8u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11785u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11785u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 12u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11785u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 16u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11785u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 20u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11785u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 24u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11785u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 28u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11785u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 32u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11785u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 36u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11785u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 40u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11785u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 44u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11785u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 64u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11785u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 68u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11785u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 72u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11785u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 76u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 1u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11785u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 80u;
  i1 += i2;
  i2 = 2u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 1u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 11785u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p1;
  i2 = 82u;
  i1 += i2;
  i2 = 2u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static void get_blockchain_parameters(u32 p0) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 112u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = 88u;
  i0 = (*Z_envZ_get_blockchain_parameters_packedZ_iii)(i0, i1);
  l1 = i0;
  i1 = 89u;
  i0 = i0 < i1;
  i1 = 10847u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  i1 = l1;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = p0;
  i0 = eosio__datastream_char_const____eosio__operator___eosio__datastream_char_const_____eosio__datastream_char_const_____eosio__blockchain_parameters__(i0, i1);
  i0 = l0;
  i1 = 112u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 eosio__datastream_char_const____eosio__operator___eosio__datastream_char_const_____eosio__datastream_char_const_____eosio__blockchain_parameters__(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i0 -= i1;
  i1 = 7u;
  i0 = i0 > i1;
  i1 = 12447u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 8u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 12447u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 12447u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 12u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 12447u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 16u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 12447u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 20u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 12447u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 12447u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 28u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 12447u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 32u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 12447u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 36u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 12447u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 40u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 12447u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 44u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 12447u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 64u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 12447u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 68u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 12447u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 72u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 3u;
  i0 = i0 > i1;
  i1 = 12447u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 76u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 4u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 1u;
  i0 = i0 > i1;
  i1 = 12447u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 80u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i1 += i2;
  l0 = i1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 1u;
  i0 = i0 > i1;
  i1 = 12447u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  i1 = 82u;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = 2u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static u64 mp_obj_int_get_ull(u32 p0) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 0u;
  i2 = 8u;
  i3 = l0;
  i4 = 8u;
  i3 += i4;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l1 = j0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  j0 = l1;
  goto Bfunc;
  B1:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(s64)(s32)(i0);
  goto Bfunc;
  B0:;
  i0 = 10867u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return j0;
}

static u64 obj_to_u64(u32 p0) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  l1 = i0;
  if (i0) {goto B3;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 42644u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B3:;
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = l1;
  if (i0) {goto B5;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  B5:;
  i0 = p0;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = l1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B6:;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = l0;
  i2 = 4u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  j0 = s2n(i0, i1);
  l2 = j0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  j0 = l2;
  goto Bfunc;
  B4:;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(s64)(s32)(i0);
  goto Bfunc;
  B2:;
  i0 = p0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l2 = j0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  j0 = l2;
  goto Bfunc;
  B1:;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p0;
  i1 = 0u;
  i2 = 8u;
  i3 = l0;
  i4 = 8u;
  i3 += i4;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l2 = j0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  j0 = l2;
  goto Bfunc;
  B0:;
  i0 = 12452u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return j0;
}

static void obj_int_to_u128(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p1;
  i1 = 0u;
  i2 = 16u;
  i3 = l0;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l1 = j0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  goto B1;
  B2:;
  i0 = l0;
  i1 = p1;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  j1 = (u64)(s64)(s32)(i1);
  l2 = j1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  j1 = l2;
  j2 = 63ull;
  j1 = (u64)((s64)j1 >> (j2 & 63));
  l1 = j1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  B1:;
  i0 = p0;
  j1 = l2;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = 13042u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void obj_int_to_u256(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p2;
  i1 = 32u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p1;
  i1 = 0u;
  i2 = 32u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B0;}
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 0u;
  i2 = 32u;
  i3 = p1;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B2:;
  i0 = l0;
  i1 = p0;
  i2 = 1u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B1:;
  i0 = 13465u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = 13828u;
  mp_raise_TypeError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static u32 u64_to_name(u64 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  j0 = p0;
  i0 = mp_obj_new_name_from_ull(j0);
  FUNC_EPILOGUE;
  return i0;
}

static void obj_pack_data(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = 6u;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = p0;
  i2 = l0;
  i3 = 12u;
  i2 += i3;
  i1 = mp_obj_str_get_data(i1, i2);
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = p1;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void micropython_raise_exception(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = p0;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static u64 mp_obj_name_to_ull(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  i0 = p0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  FUNC_EPILOGUE;
  return j0;
}

static u32 mp_obj_name_to_str_obj(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 2u;
  i0 += i1;
  i1 = 0u;
  i2 = 14u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 2u;
  i0 += i1;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i2 = l0;
  i3 = 2u;
  i2 += i3;
  i3 = 14u;
  i1 = n2s(j1, i2, i3);
  i0 = mp_obj_new_str(i0, i1);
  p0 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p0;
  FUNC_EPILOGUE;
  return i0;
}

static void mp_obj_name_print(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  j0 = obj_to_u64(i0);
  l1 = j0;
  i0 = l0;
  i1 = 2u;
  i0 += i1;
  i1 = 0u;
  i2 = 14u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  j0 = l1;
  i1 = l0;
  i2 = 2u;
  i1 += i2;
  i2 = 14u;
  i0 = n2s(j0, i1, i2);
  i0 = p0;
  i1 = l0;
  i2 = 2u;
  i1 += i2;
  i0 = mp_print_str(i0, i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 mp_obj_name_binary_op_extra_cases(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p2;
  i1 = 14u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = 0u;
  l0 = i0;
  i0 = p2;
  i1 = 30u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = 3u;
  p2 = i0;
  goto B1;
  B2:;
  i0 = 1u;
  p2 = i0;
  B1:;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i0 = mp_binary_op(i0, i1, i2);
  l0 = i0;
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_name_make_new(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i1 = p2;
  i2 = 4u;
  mp_arg_check_num_sig(i0, i1, i2);
  i0 = p1;
  i1 = 1u;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = p1;
  if (i0) {goto B6;}
  j0 = 0ull;
  i0 = mp_obj_new_name_from_ull(j0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B7:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B5;}
  i0 = p1;
  i1 = 3u;
  i0 &= i1;
  p2 = i0;
  if (i0) {goto B8;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 33584u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  B8:;
  i0 = p1;
  i1 = 7u;
  i0 &= i1;
  i1 = 2u;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  i0 = p2;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  p2 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35852u;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  goto B0;
  B6:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i2 = p3;
  i2 = i32_load((&M0), (u64)(i2 + 4));
  i2 = mp_obj_get_int(i2);
  i3 = 0u;
  i0 = mp_parse_num_integer(i0, i1, i2, i3);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B5:;
  i0 = p1;
  i1 = 0u;
  i2 = 16u;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i0 = mp_obj_int_to_bytes_impl(i0, i1, i2, i3);
  i1 = 8u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  i0 = mp_obj_new_name_from_ull(j0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B4:;
  i0 = p2;
  if (i0) {goto B10;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  i1 = 5u;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  B10:;
  i0 = 8u;
  i1 = p1;
  i0 = mp_unary_op(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B9:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  p2 = i0;
  i0 = p3;
  i1 = 35852u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  B3:;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 8u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = p2;
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 16));
  i0 = u64_to_name(j0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B2:;
  i0 = 10912u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B1:;
  i0 = 11791u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = l0;
  i1 = p1;
  j1 = obj_to_u64(i1);
  l1 = j1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  j0 = l1;
  i0 = u64_to_name(j0);
  p1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 name_from_bytes(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  p1 = i0;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B1;}
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 35852u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p1;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i0 = mp_obj_str_get_data(i0, i1);
  p1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  i1 = 8u;
  i0 = i0 != i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  i0 = mp_obj_new_name_from_ull(j0);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  goto Bfunc;
  B1:;
  i0 = 13078u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  B0:;
  i0 = 13492u;
  mp_raise_ValueError(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 name_to_bytes(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 8u;
  i0 += i1;
  i1 = 8u;
  i0 = mp_obj_new_bytes(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static u32 name_to_int(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i1 = i32_load((&M0), (u64)(i1));
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = 0u;
  i1 = 8u;
  i2 = l0;
  i3 = 8u;
  i2 += i3;
  i0 = mp_obj_int_from_bytes_impl(i0, i1, i2);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_name_to_str(u32 p0, u32 p1) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l1 = j0;
  i0 = l0;
  i1 = 2u;
  i0 += i1;
  i1 = 0u;
  i2 = 14u;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 2u;
  i0 += i1;
  j1 = l1;
  i2 = l0;
  i3 = 2u;
  i2 += i3;
  i3 = 14u;
  i1 = n2s(j1, i2, i3);
  i0 = mp_obj_new_str(i0, i1);
  p1 = i0;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = p1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_new_name_from_ull(u64 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1;
  u64 j1;
  i0 = 16u;
  i0 = m_malloc(i0);
  l0 = i0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = 42644u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_name_unary_op(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j2;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p0;
  i1 = 6u;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 4u;
  i0 = i0 != i1;
  if (i0) {goto B1;}
  i0 = 14u;
  i1 = 30u;
  i2 = p1;
  j2 = i64_load((&M0), (u64)(i2 + 8));
  i2 = !(j2);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B2:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = 1u;
  i0 <<= (i1 & 31);
  i1 = 1u;
  i0 |= i1;
  goto Bfunc;
  B1:;
  i0 = 0u;
  p1 = i0;
  B0:;
  i0 = p1;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_obj_name_binary_op(u32 p0, u32 p1, u32 p2) {
  u32 l1 = 0;
  u64 l0 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j2, j3;
  i0 = p1;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B4;}
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l0 = j0;
  i0 = 1u;
  l1 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B3;}
  goto B2;
  B4:;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(s64)(s32)(i0);
  l0 = j0;
  i0 = 1u;
  l1 = i0;
  i0 = p2;
  i1 = 1u;
  i0 &= i1;
  if (i0) {goto B2;}
  B3:;
  i0 = p2;
  i1 = 3u;
  i0 &= i1;
  if (i0) {goto B6;}
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = 42644u;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  B6:;
  i0 = p0;
  i1 = p1;
  i2 = p2;
  i0 = mp_obj_name_binary_op_extra_cases(i0, i1, i2);
  goto Bfunc;
  B5:;
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l2 = j0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 <= i1;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = p2;
  i1 = l1;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(s64)(s32)(i0);
  l2 = j0;
  i0 = p0;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  B1:;
  i0 = p0;
  switch (i0) {
    case 0: goto B11;
    case 1: goto B10;
    case 2: goto B9;
    case 3: goto B8;
    case 4: goto B7;
    default: goto B11;
  }
  B11:;
  i0 = 30u;
  i1 = 14u;
  j2 = l0;
  j3 = l2;
  i2 = (u64)((s64)j2 < (s64)j3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B10:;
  i0 = 30u;
  i1 = 14u;
  j2 = l0;
  j3 = l2;
  i2 = (u64)((s64)j2 > (s64)j3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B9:;
  i0 = 30u;
  i1 = 14u;
  j2 = l0;
  j3 = l2;
  i2 = j2 == j3;
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B8:;
  i0 = 14u;
  i1 = 30u;
  j2 = l0;
  j3 = l2;
  i2 = (u64)((s64)j2 > (s64)j3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B7:;
  i0 = 14u;
  i1 = 30u;
  j2 = l0;
  j3 = l2;
  i2 = (u64)((s64)j2 < (s64)j3);
  i0 = i2 ? i0 : i1;
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 vm_load_code(u64 p0, u32 p1, u32 p2) {
  u32 l2 = 0, l5 = 0;
  u64 l0 = 0, l1 = 0, l3 = 0, l4 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1, j2, j3;
  j0 = 0ull;
  l0 = j0;
  j0 = 59ull;
  l1 = j0;
  i0 = 10952u;
  l2 = i0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l3 = j0;
  j0 = 0ull;
  l4 = j0;
  L0: vm_checktime();
    j0 = l0;
    j1 = 8ull;
    i0 = j0 > j1;
    if (i0) {goto B5;}
    i0 = l2;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    i1 = 4294967199u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 25u;
    i0 = i0 > i1;
    if (i0) {goto B4;}
    i0 = l5;
    i1 = 4294967205u;
    i0 += i1;
    l5 = i0;
    goto B3;
    B5:;
    j0 = 0ull;
    l6 = j0;
    j0 = l0;
    j1 = 11ull;
    i0 = j0 <= j1;
    if (i0) {goto B2;}
    goto B1;
    B4:;
    i0 = l5;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 0u;
    i2 = l5;
    i3 = 4294967247u;
    i2 += i3;
    i3 = 255u;
    i2 &= i3;
    i3 = 5u;
    i2 = i2 < i3;
    i0 = i2 ? i0 : i1;
    l5 = i0;
    B3:;
    i0 = l5;
    j0 = (u64)(i0);
    j1 = 56ull;
    j0 <<= (j1 & 63);
    j1 = 56ull;
    j0 = (u64)((s64)j0 >> (j1 & 63));
    l6 = j0;
    B2:;
    j0 = l6;
    j1 = 31ull;
    j0 &= j1;
    j1 = l1;
    j2 = 4294967295ull;
    j1 &= j2;
    j0 <<= (j1 & 63);
    l6 = j0;
    B1:;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    j0 = l0;
    j1 = 1ull;
    j0 += j1;
    l0 = j0;
    j0 = l6;
    j1 = l4;
    j0 |= j1;
    l4 = j0;
    j0 = l1;
    j1 = 4294967291ull;
    j0 += j1;
    l1 = j0;
    j1 = 55834574842ull;
    i0 = j0 != j1;
    if (i0) {goto L0;}
  i0 = 0u;
  l2 = i0;
  j0 = l3;
  j1 = p0;
  j2 = l4;
  j3 = p0;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l5 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B6;}
  i0 = l5;
  i1 = 0u;
  i2 = 0u;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  l2 = i0;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l5;
  i1 = p1;
  i2 = p2;
  i3 = l2;
  i4 = l2;
  i5 = p2;
  i4 = i4 > i5;
  i2 = i4 ? i2 : i3;
  l2 = i2;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  B6:;
  i0 = l2;
  FUNC_EPILOGUE;
  return i0;
}

static void vm_store_code(u64 p0, u64 p1, u32 p2, u32 p3) {
  u32 l2 = 0, l5 = 0;
  u64 l0 = 0, l1 = 0, l3 = 0, l4 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1, j2, j3;
  j0 = 0ull;
  l0 = j0;
  j0 = 59ull;
  l1 = j0;
  i0 = 10952u;
  l2 = i0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l3 = j0;
  j0 = 0ull;
  l4 = j0;
  L0: vm_checktime();
    j0 = l0;
    j1 = 8ull;
    i0 = j0 > j1;
    if (i0) {goto B5;}
    i0 = l2;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    i1 = 4294967199u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 25u;
    i0 = i0 > i1;
    if (i0) {goto B4;}
    i0 = l5;
    i1 = 4294967205u;
    i0 += i1;
    l5 = i0;
    goto B3;
    B5:;
    j0 = 0ull;
    l6 = j0;
    j0 = l0;
    j1 = 11ull;
    i0 = j0 <= j1;
    if (i0) {goto B2;}
    goto B1;
    B4:;
    i0 = l5;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 0u;
    i2 = l5;
    i3 = 4294967247u;
    i2 += i3;
    i3 = 255u;
    i2 &= i3;
    i3 = 5u;
    i2 = i2 < i3;
    i0 = i2 ? i0 : i1;
    l5 = i0;
    B3:;
    i0 = l5;
    j0 = (u64)(i0);
    j1 = 56ull;
    j0 <<= (j1 & 63);
    j1 = 56ull;
    j0 = (u64)((s64)j0 >> (j1 & 63));
    l6 = j0;
    B2:;
    j0 = l6;
    j1 = 31ull;
    j0 &= j1;
    j1 = l1;
    j2 = 4294967295ull;
    j1 &= j2;
    j0 <<= (j1 & 63);
    l6 = j0;
    B1:;
    i0 = l2;
    i1 = 1u;
    i0 += i1;
    l2 = i0;
    j0 = l0;
    j1 = 1ull;
    j0 += j1;
    l0 = j0;
    j0 = l6;
    j1 = l4;
    j0 |= j1;
    l4 = j0;
    j0 = l1;
    j1 = 4294967291ull;
    j0 += j1;
    l1 = j0;
    j1 = 55834574842ull;
    i0 = j0 != j1;
    if (i0) {goto L0;}
  j0 = l3;
  j1 = p0;
  j2 = l4;
  j3 = p0;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l2 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B6;}
  i0 = l2;
  j1 = p1;
  i2 = p2;
  i3 = p3;
  (*Z_envZ_db_update_i64Z_vijii)(i0, j1, i2, i3);
  goto Bfunc;
  B6:;
  j0 = p0;
  j1 = l4;
  j2 = p1;
  j3 = p0;
  i4 = p2;
  i5 = p3;
  i0 = (*Z_envZ_db_store_i64Z_ijjjjii)(j0, j1, j2, j3, i4, i5);
  Bfunc:;
  FUNC_EPILOGUE;
}

static void vm_take_snapshot(u64 p0) {
  u32 l0 = 0, l3 = 0, l6 = 0, l8 = 0;
  u64 l1 = 0, l2 = 0, l4 = 0, l5 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  j0 = 0ull;
  l1 = j0;
  j0 = 59ull;
  l2 = j0;
  i0 = 11847u;
  l3 = i0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l4 = j0;
  j0 = 0ull;
  l5 = j0;
  L0: vm_checktime();
    j0 = l1;
    j1 = 8ull;
    i0 = j0 > j1;
    if (i0) {goto B5;}
    i0 = l3;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l6 = i0;
    i1 = 4294967199u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 25u;
    i0 = i0 > i1;
    if (i0) {goto B4;}
    i0 = l6;
    i1 = 4294967205u;
    i0 += i1;
    l6 = i0;
    goto B3;
    B5:;
    j0 = 0ull;
    l7 = j0;
    j0 = l1;
    j1 = 11ull;
    i0 = j0 <= j1;
    if (i0) {goto B2;}
    goto B1;
    B4:;
    i0 = l6;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 0u;
    i2 = l6;
    i3 = 4294967247u;
    i2 += i3;
    i3 = 255u;
    i2 &= i3;
    i3 = 5u;
    i2 = i2 < i3;
    i0 = i2 ? i0 : i1;
    l6 = i0;
    B3:;
    i0 = l6;
    j0 = (u64)(i0);
    j1 = 56ull;
    j0 <<= (j1 & 63);
    j1 = 56ull;
    j0 = (u64)((s64)j0 >> (j1 & 63));
    l7 = j0;
    B2:;
    j0 = l7;
    j1 = 31ull;
    j0 &= j1;
    j1 = l2;
    j2 = 4294967295ull;
    j1 &= j2;
    j0 <<= (j1 & 63);
    l7 = j0;
    B1:;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    j0 = l1;
    j1 = 1ull;
    j0 += j1;
    l1 = j0;
    j0 = l7;
    j1 = l5;
    j0 |= j1;
    l5 = j0;
    j0 = l2;
    j1 = 4294967291ull;
    j0 += j1;
    l2 = j0;
    j1 = 55834574842ull;
    i0 = j0 != j1;
    if (i0) {goto L0;}
  j0 = l4;
  j1 = p0;
  j2 = l5;
  j3 = p0;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l6 = i0;
  i0 = 12u;
  i0 = malloc_0(i0);
  l3 = i0;
  i1 = 5120u;
  i2 = 12u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = l3;
  i2 = 4294962188u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l0;
  j1 = get_code_version();
  i64_store((&M0), (u64)(i0), j1);
  i0 = 5120u;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = 5124u;
  i1 = l0;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 12));
  l8 = i0;
  i0 = l6;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B7;}
  i0 = l6;
  j1 = p0;
  i2 = 5120u;
  i3 = l8;
  (*Z_envZ_db_update_i64Z_vijii)(i0, j1, i2, i3);
  goto B6;
  B7:;
  j0 = p0;
  j1 = l5;
  j2 = p0;
  j3 = p0;
  i4 = 5120u;
  i5 = l8;
  i0 = (*Z_envZ_db_store_i64Z_ijjjjii)(j0, j1, j2, j3, i4, i5);
  B6:;
  i0 = 5120u;
  i1 = l3;
  i2 = 12u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 vm_restore_from_snapshot(u64 p0) {
  u32 l0 = 0, l3 = 0, l6 = 0, l8 = 0, l9 = 0, l10 = 0;
  u64 l1 = 0, l2 = 0, l4 = 0, l5 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  j0 = 0ull;
  l1 = j0;
  j0 = 59ull;
  l2 = j0;
  i0 = 11847u;
  l3 = i0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l4 = j0;
  j0 = 0ull;
  l5 = j0;
  L0: vm_checktime();
    j0 = l1;
    j1 = 8ull;
    i0 = j0 > j1;
    if (i0) {goto B5;}
    i0 = l3;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l6 = i0;
    i1 = 4294967199u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 25u;
    i0 = i0 > i1;
    if (i0) {goto B4;}
    i0 = l6;
    i1 = 4294967205u;
    i0 += i1;
    l6 = i0;
    goto B3;
    B5:;
    j0 = 0ull;
    l7 = j0;
    j0 = l1;
    j1 = 11ull;
    i0 = j0 <= j1;
    if (i0) {goto B2;}
    goto B1;
    B4:;
    i0 = l6;
    i1 = 4294967248u;
    i0 += i1;
    i1 = 0u;
    i2 = l6;
    i3 = 4294967247u;
    i2 += i3;
    i3 = 255u;
    i2 &= i3;
    i3 = 5u;
    i2 = i2 < i3;
    i0 = i2 ? i0 : i1;
    l6 = i0;
    B3:;
    i0 = l6;
    j0 = (u64)(i0);
    j1 = 56ull;
    j0 <<= (j1 & 63);
    j1 = 56ull;
    j0 = (u64)((s64)j0 >> (j1 & 63));
    l7 = j0;
    B2:;
    j0 = l7;
    j1 = 31ull;
    j0 &= j1;
    j1 = l2;
    j2 = 4294967295ull;
    j1 &= j2;
    j0 <<= (j1 & 63);
    l7 = j0;
    B1:;
    i0 = l3;
    i1 = 1u;
    i0 += i1;
    l3 = i0;
    j0 = l1;
    j1 = 1ull;
    j0 += j1;
    l1 = j0;
    j0 = l7;
    j1 = l5;
    j0 |= j1;
    l5 = j0;
    j0 = l2;
    j1 = 4294967291ull;
    j0 += j1;
    l2 = j0;
    j1 = 55834574842ull;
    i0 = j0 != j1;
    if (i0) {goto L0;}
  i0 = 0u;
  l3 = i0;
  j0 = l4;
  j1 = p0;
  j2 = l5;
  j3 = p0;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l6 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B7;}
  i0 = 0u;
  l3 = i0;
  i0 = l6;
  i1 = 0u;
  i2 = 0u;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  l8 = i0;
  i1 = 5120u;
  i0 += i1;
  l9 = i0;
  i1 = get_current_memory();
  l10 = i1;
  i0 = i0 < i1;
  if (i0) {goto B7;}
  i0 = l9;
  i1 = l10;
  i0 -= i1;
  i0 = malloc_0(i0);
  free_0(i0);
  i0 = l6;
  i1 = l0;
  i2 = 20u;
  i1 += i2;
  i2 = 12u;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = l0;
  i2 = 20u;
  i1 += i2;
  i2 = 4u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = 20u;
  i1 += i2;
  i2 = 4u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = 0u;
  l3 = i0;
  i0 = l8;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i0 = i0 != i1;
  if (i0) {goto B7;}
  j0 = get_code_version();
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i0 = j0 != j1;
  if (i0) {goto B6;}
  i0 = l6;
  i1 = 5120u;
  i2 = l8;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  i0 = 5120u;
  i1 = l8;
  i2 = 5108u;
  i1 += i2;
  i2 = 12u;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  i0 = 1u;
  l3 = i0;
  B7:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  goto Bfunc;
  B6:;
  i0 = 12472u;
  (*Z_envZ_printsZ_vi)(i0);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void vm_send_inline(u64 p0, u64 p1, u64 p2, u64 p3, u32 p4, u32 p5) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  i0 = g0;
  i1 = 96u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = p3;
  i64_store((&M0), (u64)(i0 + 56), j1);
  i0 = l0;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 48), j1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  l1 = i0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  void_std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level_______emplace_back_slow_path_eosio__permission_level___eosio__permission_level____(i0, i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 36));
  l1 = i1;
  i0 -= i1;
  l2 = i0;
  i1 = p5;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  l1 = i0;
  i1 = p5;
  i2 = l2;
  i1 -= i2;
  std____1__vector_char__std____1__allocator_char_______append_unsigned_int_(i0, i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B0;
  B1:;
  i0 = l2;
  i1 = p5;
  i0 = i0 <= i1;
  if (i0) {goto B0;}
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = l1;
  i2 = p5;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  B0:;
  i0 = l1;
  i1 = p4;
  i2 = p5;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 72), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 64), j1);
  i0 = 16u;
  p5 = i0;
  i0 = l0;
  i1 = 28u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 16u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  p4 = i1;
  i0 -= i1;
  l2 = i0;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(i0);
  p1 = j0;
  L2: vm_checktime();
    i0 = p5;
    i1 = 1u;
    i0 += i1;
    p5 = i0;
    j0 = p1;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    p1 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L2;}
  i0 = p4;
  i1 = l1;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = l2;
  i1 = 4294967280u;
  i0 &= i1;
  i1 = p5;
  i0 += i1;
  p5 = i0;
  B3:;
  i0 = p5;
  i1 = l0;
  i2 = 40u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i0 += i1;
  i1 = l0;
  i2 = 36u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  p4 = i1;
  i0 -= i1;
  p5 = i0;
  i0 = l1;
  i1 = p4;
  i0 -= i1;
  j0 = (u64)(i0);
  p1 = j0;
  L4: vm_checktime();
    i0 = p5;
    i1 = 1u;
    i0 += i1;
    p5 = i0;
    j0 = p1;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    p1 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L4;}
  i0 = p5;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  i1 = p5;
  std____1__vector_char__std____1__allocator_char_______append_unsigned_int_(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 68));
  l1 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 64));
  p5 = i0;
  goto B5;
  B6:;
  i0 = 0u;
  l1 = i0;
  i0 = 0u;
  p5 = i0;
  B5:;
  i0 = l0;
  i1 = p5;
  i32_store((&M0), (u64)(i0 + 84), i1);
  i0 = l0;
  i1 = p5;
  i32_store((&M0), (u64)(i0 + 80), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 88), i1);
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__action_const__(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 64));
  p5 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 68));
  i2 = p5;
  i1 -= i2;
  (*Z_envZ_send_inlineZ_vii)(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 64));
  p5 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l0;
  i1 = p5;
  i32_store((&M0), (u64)(i0 + 68), i1);
  i0 = p5;
  operator_delete_void__(i0);
  B7:;
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p5 = i0;
  i0 = !(i0);
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = p5;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p5;
  operator_delete_void__(i0);
  B8:;
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p5 = i0;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = l0;
  i1 = 28u;
  i0 += i1;
  i1 = p5;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p5;
  operator_delete_void__(i0);
  B9:;
  i0 = l0;
  i1 = 96u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void void_std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level_______emplace_back_slow_path_eosio__permission_level___eosio__permission_level____(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l0 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i0 -= i1;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  l2 = i0;
  i1 = 1u;
  i0 += i1;
  l3 = i0;
  i1 = 268435456u;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  i0 = 268435455u;
  l4 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l1;
  i0 -= i1;
  l5 = i0;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  i1 = 134217726u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = l3;
  i1 = l5;
  i2 = 3u;
  i1 = (u32)((s32)i1 >> (i2 & 31));
  l4 = i1;
  i2 = l4;
  i3 = l3;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  l4 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l4;
  i1 = 268435456u;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  B4:;
  i0 = l4;
  i1 = 4u;
  i0 <<= (i1 & 31);
  i0 = operator_new_unsigned_int_(i0);
  l3 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B0;
  B3:;
  i0 = 0u;
  l4 = i0;
  i0 = 0u;
  l3 = i0;
  goto B0;
  B2:;
  i0 = p0;
  std____1____vector_base_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  B1:;
  (*Z_envZ_abortZ_vv)();
  UNREACHABLE;
  B0:;
  i0 = l3;
  i1 = l2;
  i2 = 4u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l2 = i0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l2;
  i1 = 8u;
  i0 += i1;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l2;
  i1 = l0;
  i2 = l1;
  i1 -= i2;
  p1 = i1;
  i0 -= i1;
  l0 = i0;
  i0 = l3;
  i1 = l4;
  i2 = 4u;
  i1 <<= (i2 & 31);
  i0 += i1;
  l4 = i0;
  i0 = l2;
  i1 = 16u;
  i0 += i1;
  l2 = i0;
  i0 = p1;
  i1 = 1u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B5;}
  i0 = l0;
  i1 = l1;
  i2 = p1;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  B5:;
  i0 = p0;
  i1 = l0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l4;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l1;
  operator_delete_void__(i0);
  B6:;
  FUNC_EPILOGUE;
}

static u32 eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__action_const__(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l0 = i1;
  i0 -= i1;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 11857u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  B0:;
  i0 = l0;
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  l0 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  l2 = i0;
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l1;
  i0 -= i1;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 11857u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  B1:;
  i0 = l1;
  i1 = l2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = p1;
  i2 = 16u;
  i1 += i2;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__permission_level__eosio__datastream_char_____std____1__vector_eosio__permission_level__std____1__allocator_eosio__permission_level____const__(i0, i1);
  i1 = p1;
  i2 = 28u;
  i1 += i2;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____std____1__vector_char__std____1__allocator_char____const__(i0, i1);
  FUNC_EPILOGUE;
  return i0;
}

static void vm_send_context_free_inline(u64 p0, u64 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  l1 = i0;
  i0 = p3;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l1;
  i1 = p3;
  std____1__vector_char__std____1__allocator_char_______append_unsigned_int_(i0, i1);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  goto B0;
  B1:;
  i0 = 0u;
  l2 = i0;
  B0:;
  i0 = l2;
  i1 = p2;
  i2 = p3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  eosio__action__send_context_free___const(i0);
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  p3 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  operator_delete_void__(i0);
  B2:;
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p3 = i0;
  i0 = !(i0);
  if (i0) {goto B3;}
  i0 = l0;
  i1 = 28u;
  i0 += i1;
  i1 = p3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  operator_delete_void__(i0);
  B3:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void eosio__action__send_context_free___const(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  u64 l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i1 = 20u;
  i0 += i1;
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  l3 = i0;
  i0 = l2;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 16));
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 12500u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  B0:;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l3;
  i1 = l2;
  i0 -= i1;
  l4 = i0;
  i1 = 4u;
  i0 = (u32)((s32)i0 >> (i1 & 31));
  j0 = (u64)(i0);
  l5 = j0;
  i0 = 16u;
  l1 = i0;
  L1: vm_checktime();
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    j0 = l5;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    l5 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L1;}
  i0 = l2;
  i1 = l3;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  i0 = l4;
  i1 = 4294967280u;
  i0 &= i1;
  i1 = l1;
  i0 += i1;
  l1 = i0;
  B2:;
  i0 = l1;
  i1 = p0;
  i2 = 32u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l2 = i1;
  i0 += i1;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1 + 28));
  l3 = i1;
  i0 -= i1;
  l1 = i0;
  i0 = l2;
  i1 = l3;
  i0 -= i1;
  j0 = (u64)(i0);
  l5 = j0;
  L3: vm_checktime();
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    j0 = l5;
    j1 = 7ull;
    j0 >>= (j1 & 63);
    l5 = j0;
    j1 = 0ull;
    i0 = j0 != j1;
    if (i0) {goto L3;}
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = l0;
  i1 = l1;
  std____1__vector_char__std____1__allocator_char_______append_unsigned_int_(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l2 = i0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B4;
  B5:;
  i0 = 0u;
  l2 = i0;
  i0 = 0u;
  l1 = i0;
  B4:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = p0;
  i0 = eosio__datastream_char____eosio__operator___eosio__datastream_char_____eosio__datastream_char_____eosio__action_const__(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  i2 = l1;
  i1 -= i2;
  (*Z_envZ_send_context_free_inlineZ_vii)(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = l1;
  operator_delete_void__(i0);
  B6:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u64 s2n(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l6 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2;
  i0 = p0;
  i0 = i32_load8_u((&M0), (u64)(i0));
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B5;}
  i0 = p0;
  i1 = 1u;
  i0 += i1;
  l1 = i0;
  i0 = p1;
  j0 = (u64)(i0);
  l2 = j0;
  i0 = 0u;
  p1 = i0;
  j0 = 0ull;
  l3 = j0;
  j0 = 59ull;
  l4 = j0;
  j0 = 0ull;
  l5 = j0;
  L6: vm_checktime();
    j0 = l3;
    j1 = l2;
    i0 = j0 >= j1;
    if (i0) {goto B4;}
    j0 = l3;
    j1 = 11ull;
    i0 = j0 > j1;
    if (i0) {goto B4;}
    i0 = 4294967205u;
    l6 = i0;
    i0 = l0;
    i1 = 4294967199u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 26u;
    i0 = i0 < i1;
    if (i0) {goto B7;}
    i0 = 4294967248u;
    l6 = i0;
    i0 = l0;
    i1 = 4294967247u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 4u;
    i0 = i0 > i1;
    if (i0) {goto B1;}
    B7:;
    i0 = l6;
    i1 = l0;
    i2 = 24u;
    i1 <<= (i2 & 31);
    i2 = 24u;
    i1 = (u32)((s32)i1 >> (i2 & 31));
    i0 += i1;
    l0 = i0;
    i0 = !(i0);
    if (i0) {goto B2;}
    i0 = l0;
    i1 = 31u;
    i0 &= i1;
    j0 = (u64)(i0);
    j1 = l4;
    j2 = 4294967295ull;
    j1 &= j2;
    j0 <<= (j1 & 63);
    j1 = l5;
    j0 |= j1;
    l5 = j0;
    j0 = l4;
    j1 = 4294967291ull;
    j0 += j1;
    l4 = j0;
    j0 = l3;
    j1 = 1ull;
    j0 += j1;
    l3 = j0;
    i0 = l1;
    i1 = p1;
    i0 += i1;
    l0 = i0;
    i0 = p1;
    i1 = 1u;
    i0 += i1;
    l6 = i0;
    p1 = i0;
    i0 = l0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l0 = i0;
    if (i0) {goto L6;}
  i0 = l6;
  i1 = 12u;
  i0 = i0 != i1;
  if (i0) {goto B3;}
  goto B0;
  B5:;
  j0 = 0ull;
  goto Bfunc;
  B4:;
  i0 = p1;
  i1 = 12u;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  B3:;
  j0 = l5;
  goto Bfunc;
  B2:;
  j0 = 0ull;
  goto Bfunc;
  B1:;
  j0 = 0ull;
  goto Bfunc;
  B0:;
  i0 = p0;
  i0 = i32_load8_s((&M0), (u64)(i0 + 12));
  l0 = i0;
  i1 = 4294967199u;
  i0 += i1;
  i1 = 255u;
  i0 &= i1;
  i1 = 25u;
  i0 = i0 > i1;
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 4294967205u;
  i0 += i1;
  j0 = (u64)(s64)(s32)(i0);
  j1 = 15ull;
  j0 &= j1;
  j1 = l5;
  j0 |= j1;
  goto Bfunc;
  B8:;
  j0 = 0ull;
  l3 = j0;
  i0 = l0;
  i1 = 4294967247u;
  i0 += i1;
  i1 = 255u;
  i0 &= i1;
  i1 = 4u;
  i0 = i0 > i1;
  if (i0) {goto B9;}
  i0 = l0;
  i1 = 4294967248u;
  i0 += i1;
  j0 = (u64)(s64)(s32)(i0);
  l3 = j0;
  B9:;
  j0 = l3;
  j1 = 15ull;
  j0 &= j1;
  j1 = l5;
  j0 |= j1;
  Bfunc:;
  FUNC_EPILOGUE;
  return j0;
}

static u32 n2s(u64 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i4, i5;
  u64 j0, j1, j2, j3;
  i0 = 0u;
  l0 = i0;
  j0 = p0;
  i0 = !(j0);
  if (i0) {goto B0;}
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  l1 = i0;
  L1: vm_checktime();
    i0 = p1;
    i1 = l1;
    i0 += i1;
    j1 = p0;
    j2 = 17870283321406128128ull;
    j1 &= j2;
    j2 = 60ull;
    j3 = 59ull;
    i4 = l1;
    i5 = 12u;
    i4 = i4 == i5;
    j2 = i4 ? j2 : j3;
    j1 >>= (j2 & 63);
    i1 = (u32)(j1);
    i2 = 10962u;
    i1 += i2;
    i1 = i32_load8_u((&M0), (u64)(i1));
    i32_store8((&M0), (u64)(i0), i1);
    i0 = l1;
    i1 = 1u;
    i0 += i1;
    l0 = i0;
    j0 = p0;
    j1 = 5ull;
    j0 <<= (j1 & 63);
    p0 = j0;
    i0 = !(j0);
    if (i0) {goto B0;}
    i0 = l1;
    i1 = 11u;
    i0 = i0 > i1;
    if (i0) {goto B0;}
    i0 = l0;
    l1 = i0;
    i0 = l0;
    i1 = p2;
    i0 = i0 < i1;
    if (i0) {goto L1;}
  B0:;
  i0 = l0;
  FUNC_EPILOGUE;
  return i0;
}

static u32 call_vm_api(u32 p0, u32 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 db_store_i256(u64 p0, u64 p1, u64 p2, u32 p3, u32 p4, u32 p5, u32 p6) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static void db_update_i256(u32 p0, u64 p1, u32 p2, u32 p3) {
  FUNC_PROLOGUE;
  FUNC_EPILOGUE;
}

static void db_remove_i256(u32 p0) {
  FUNC_PROLOGUE;
  FUNC_EPILOGUE;
}

static u32 db_get_i256(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 db_find_i256(u64 p0, u64 p1, u64 p2, u32 p3, u32 p4) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 db_previous_i256(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 db_next_i256(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 db_end_i256(u64 p0, u64 p1, u64 p2) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 db_lowerbound_i256(u64 p0, u64 p1, u64 p2, u32 p3, u32 p4) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 db_upperbound_i256(u64 p0, u64 p1, u64 p2, u32 p3, u32 p4) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 db_get_table_row_count(u64 p0, u64 p1, u64 p2) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static void call_contract(u64 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  FUNC_EPILOGUE;
}

static u32 call_contract_get_results(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static void __cxa_finalize(u32 p0) {
  FUNC_PROLOGUE;
  FUNC_EPILOGUE;
}

static void mp_js_init(u32 p0) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 5776), i1);
  i0 = 5792u;
  i1 = 9888u;
  mp_pystack_init(i0, i1);
  mp_init();
  i0 = 5228u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = 5228u;
  i1 = 10u;
  i0 = mp_obj_list_append(i0, i1);
  i0 = 5244u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = micropython_new_module();
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 mp_import_stat(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static u32 mp_builtin_open(u32 p0, u32 p1, u32 p2) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 6u;
  FUNC_EPILOGUE;
  return i0;
}

static void nlr_jump_fail(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 10995u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  L0: vm_checktime();
    goto L0;
  FUNC_EPILOGUE;
}

static void exec_code(u64 p0, u64 p1, u64 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  i1 = 0u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  l1 = i0;
  i1 = 7u;
  i0 = i0 > i1;
  i1 = 11863u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l1;
  i0 = malloc_0(i0);
  l2 = i0;
  i1 = l1;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  i1 = 0u;
  i2 = 0u;
  i0 = vm_load_code(j0, i1, i2);
  l1 = i0;
  i0 = malloc_0(i0);
  l2 = i0;
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i2 = l1;
  i0 = vm_load_code(j0, i1, i2);
  i0 = l1;
  i1 = 0u;
  i0 = i0 != i1;
  i1 = 12548u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  i1 = l2;
  i2 = l1;
  i0 = micropython_init_module(i0, i1, i2);
  j0 = p0;
  j1 = p1;
  j2 = p2;
  i0 = micropython_apply(j0, j1, j2);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void apply(u64 p0, u64 p1, u64 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  __wasm_call_ctors();
  j0 = p2;
  j1 = 6292796416343408639ull;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B5;}
  j0 = p2;
  j1 = 6292796416343408640ull;
  i0 = j0 == j1;
  if (i0) {goto B4;}
  j0 = p2;
  j1 = 6292796966099222528ull;
  i0 = j0 == j1;
  if (i0) {goto B3;}
  j0 = p2;
  j1 = 8421045207927095296ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 5776), i1);
  i0 = 5792u;
  i1 = 9888u;
  mp_pystack_init(i0, i1);
  mp_init();
  i0 = 5228u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = 5228u;
  i1 = 10u;
  i0 = mp_obj_list_append(i0, i1);
  i0 = 5244u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = micropython_new_module();
  micropython_init_frozen_modules();
  goto B0;
  B5:;
  j0 = p2;
  j1 = 14029427681804681216ull;
  i0 = j0 == j1;
  if (i0) {goto B2;}
  j0 = p2;
  j1 = 6292795316831780864ull;
  i0 = j0 != j1;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 8u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i1 = 8u;
  i0 = i0 == i1;
  i1 = 13550u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  i0 = vm_restore_from_snapshot(j0);
  if (i0) {goto B6;}
  i0 = 13864u;
  (*Z_envZ_printsZ_vi)(i0);
  i0 = 0u;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 5776), i1);
  i0 = 5792u;
  i1 = 9888u;
  mp_pystack_init(i0, i1);
  mp_init();
  i0 = 5228u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = 5228u;
  i1 = 10u;
  i0 = mp_obj_list_append(i0, i1);
  i0 = 5244u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = micropython_new_module();
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = 0u;
  i2 = 0u;
  i0 = vm_load_code(j0, i1, i2);
  l1 = i0;
  i1 = 262144u;
  i0 += i1;
  i0 = malloc_0(i0);
  l2 = i0;
  free_0(i0);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = l2;
  i2 = 262144u;
  i1 += i2;
  l2 = i1;
  i2 = l1;
  i0 = vm_load_code(j0, i1, i2);
  i0 = l1;
  i1 = 0u;
  i0 = i0 != i1;
  i1 = 12548u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  i1 = l2;
  i2 = l1;
  i0 = micropython_init_module(i0, i1, i2);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  vm_take_snapshot(j0);
  B6:;
  j0 = p0;
  j1 = p1;
  j2 = 6292795316831780864ull;
  i0 = micropython_apply(j0, j1, j2);
  goto B0;
  B4:;
  j0 = p0;
  j1 = p1;
  j2 = 6292796416343408640ull;
  exec_code(j0, j1, j2);
  goto B0;
  B3:;
  i0 = 0u;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 5776), i1);
  i0 = 5792u;
  i1 = 9888u;
  mp_pystack_init(i0, i1);
  mp_init();
  i0 = 5228u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = 5228u;
  i1 = 10u;
  i0 = mp_obj_list_append(i0, i1);
  i0 = 5244u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = micropython_new_module();
  j0 = p0;
  j1 = p1;
  j2 = 6292796966099222528ull;
  exec_code(j0, j1, j2);
  goto B0;
  B2:;
  i0 = 0u;
  i1 = 0u;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  l1 = i0;
  i1 = 72u;
  i0 = (u32)((s32)i0 > (s32)i1);
  i1 = 13101u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l1;
  i1 = 262144u;
  i0 += i1;
  i0 = malloc_0(i0);
  l2 = i0;
  free_0(i0);
  i0 = l2;
  i1 = 262144u;
  i0 += i1;
  l3 = i0;
  i1 = l1;
  i0 = (*Z_envZ_read_action_dataZ_iii)(i0, i1);
  i0 = l0;
  i1 = l3;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  p2 = j0;
  j1 = p2;
  i2 = l2;
  i3 = 262152u;
  i2 += i3;
  l2 = i2;
  i3 = l1;
  i4 = 4294967288u;
  i3 += i4;
  l1 = i3;
  vm_store_code(j0, j1, i2, i3);
  i0 = 0u;
  i1 = l0;
  i2 = 12u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 5776), i1);
  i0 = 5792u;
  i1 = 9888u;
  mp_pystack_init(i0, i1);
  mp_init();
  i0 = 5228u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = 5228u;
  i1 = 10u;
  i0 = mp_obj_list_append(i0, i1);
  i0 = 5244u;
  i1 = 0u;
  mp_obj_list_init(i0, i1);
  i0 = micropython_new_module();
  i0 = 0u;
  i1 = l2;
  i2 = l1;
  i0 = micropython_init_module(i0, i1, i2);
  i0 = l0;
  j0 = i64_load((&M0), (u64)(i0));
  vm_take_snapshot(j0);
  goto B0;
  B1:;
  j0 = p0;
  i0 = vm_restore_from_snapshot(j0);
  j0 = p0;
  j1 = p1;
  j2 = p2;
  i0 = micropython_apply(j0, j1, j2);
  j0 = p2;
  j1 = 0ull;
  i0 = j0 != j1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 460u;
  i32_store((&M0), (u64)(i0 + 9892), i1);
  i0 = 0u;
  i1 = 461u;
  i32_store((&M0), (u64)(i0 + 9888), i1);
  i0 = 0u;
  i1 = 462u;
  i32_store((&M0), (u64)(i0 + 9896), i1);
  i0 = 0u;
  i1 = 463u;
  i32_store((&M0), (u64)(i0 + 9900), i1);
  i0 = 0u;
  i1 = 464u;
  i32_store((&M0), (u64)(i0 + 9904), i1);
  B0:;
  i0 = 0u;
  __cxa_finalize(i0);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void mp_hal_stdout_tx_strn(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = p0;
  i1 = p1;
  mp_js_write(i0, i1);
  FUNC_EPILOGUE;
}

static u32 time_time(void) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0, j1;
  j0 = (*Z_envZ_current_timeZ_jv)();
  j1 = 1000000ull;
  j0 = DIV_U(j0, j1);
  i0 = mp_obj_new_int_from_ull(j0);
  FUNC_EPILOGUE;
  return i0;
}

static u32 realloc_0(u32 p0, u32 p1) {
  u32 l0 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = p1;
  i0 = malloc_0(i0);
  l0 = i0;
  i0 = !(i0);
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 0u;
  i2 = p1;
  i0 = (*Z_envZ_memsetZ_iiii)(i0, i1, i2);
  B1:;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = p0;
  i2 = p1;
  i0 = (*Z_envZ_memmoveZ_iiii)(i0, i1, i2);
  B2:;
  i0 = l0;
  goto Bfunc;
  B0:;
  i0 = 0u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static u32 get_current_memory(void) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 9908));
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 9912));
  i0 += i1;
  FUNC_EPILOGUE;
  return i0;
}

static u32 malloc_0(u32 p0) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = !(i0);
  if (i0) {goto B0;}
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 9908));
  l1 = i0;
  if (i0) {goto B1;}
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = 0u;
  i1 = l0;
  i1 = i32_load((&M0), (u64)(i1 + 12));
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 7u;
  i1 += i2;
  i2 = 4294967288u;
  i1 &= i2;
  l1 = i1;
  i32_store((&M0), (u64)(i0 + 9908), i1);
  B1:;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 9912));
  l2 = i0;
  i0 = M0.pages;
  l3 = i0;
  i1 = 16u;
  i0 <<= (i1 & 31);
  i1 = l1;
  i2 = l2;
  i1 += i2;
  l1 = i1;
  i2 = p0;
  i3 = 7u;
  i2 += i3;
  i3 = 4294967288u;
  i2 &= i3;
  p0 = i2;
  i1 += i2;
  l4 = i1;
  i0 = i0 >= i1;
  if (i0) {goto B2;}
  i0 = l4;
  i1 = 65535u;
  i0 += i1;
  i1 = 16u;
  i0 >>= (i1 & 31);
  i1 = l3;
  i0 -= i1;
  i0 = wasm_rt_grow_memory((&M0), i0);
  i1 = 4294967295u;
  i0 = i0 != i1;
  i1 = 11009u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 9908));
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 9912));
  l2 = i1;
  i0 += i1;
  l1 = i0;
  B2:;
  i0 = 0u;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 9916), i1);
  i0 = 0u;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 9920), i1);
  i0 = 0u;
  i1 = l2;
  i2 = p0;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 9912), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = l1;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  i0 = 4294967295u;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void free_0(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  i0 = 0u;
  i0 = i32_load((&M0), (u64)(i0 + 9920));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  goto Bfunc;
  B0:;
  i0 = 0u;
  i1 = 0u;
  i1 = i32_load((&M0), (u64)(i1 + 9912));
  i2 = 0u;
  i2 = i32_load((&M0), (u64)(i2 + 9916));
  i1 -= i2;
  i32_store((&M0), (u64)(i0 + 9912), i1);
  Bfunc:;
  FUNC_EPILOGUE;
}

static u64 get_code_version(void) {
  FUNC_PROLOGUE;
  u32 i0;
  u64 j0;
  i0 = 0u;
  j0 = i64_load((&M0), (u64)(i0 + 40200));
  FUNC_EPILOGUE;
  return j0;
}

static void mp_js_hook(void) {
  FUNC_PROLOGUE;
  FUNC_EPILOGUE;
}

static u32 setjmp_ex(u32 p0) {
  FUNC_PROLOGUE;
  u32 i0;
  i0 = 0u;
  FUNC_EPILOGUE;
  return i0;
}

static void longjmp_ex(u32 p0, u32 p1) {
  FUNC_PROLOGUE;
  u32 i0, i1;
  i0 = 0u;
  i1 = 11034u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  FUNC_EPILOGUE;
}

static void std____1____basic_string_common_true_____throw_length_error___const(u32 p0) {
  FUNC_PROLOGUE;
  (*Z_envZ_abortZ_vv)();
  UNREACHABLE;
  FUNC_EPILOGUE;
}

static void eosio__token__create_eosio__name_const___eosio__asset_const__(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l5 = 0, l6 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0, l7 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  u64 j0, j1, j2, j3, j4, j5;
  i0 = g0;
  i1 = 128u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  j0 = i64_load((&M0), (u64)(i0));
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = 0u;
  l1 = i0;
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l2 = j0;
  l3 = j0;
  L2: vm_checktime();
    j0 = l3;
    i0 = (u32)(j0);
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 3221225471u;
    i0 += i1;
    i1 = 452984830u;
    i0 = i0 > i1;
    if (i0) {goto B1;}
    j0 = l3;
    j1 = 8ull;
    j0 >>= (j1 & 63);
    l4 = j0;
    j0 = l3;
    j1 = 65280ull;
    j0 &= j1;
    j1 = 0ull;
    i0 = j0 == j1;
    if (i0) {goto B3;}
    j0 = l4;
    l3 = j0;
    i0 = l1;
    l5 = i0;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l5;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L2;}
    goto B0;
    B3:;
    j0 = l4;
    l3 = j0;
    L4: vm_checktime();
      j0 = l3;
      j1 = 65280ull;
      j0 &= j1;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto B1;}
      j0 = l3;
      j1 = 8ull;
      j0 >>= (j1 & 63);
      l3 = j0;
      i0 = l1;
      i1 = 6u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l5 = i0;
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      l1 = i0;
      i0 = l5;
      if (i0) {goto L4;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l6;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L2;}
    goto B0;
  B1:;
  i0 = 0u;
  i1 = 11051u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0));
  l7 = j0;
  j1 = 4611686018427387903ull;
  j0 += j1;
  j1 = 9223372036854775806ull;
  i0 = j0 > j1;
  if (i0) {goto B6;}
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l3 = j0;
  i0 = 0u;
  l1 = i0;
  L7: vm_checktime();
    j0 = l3;
    i0 = (u32)(j0);
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 3221225471u;
    i0 += i1;
    i1 = 452984830u;
    i0 = i0 > i1;
    if (i0) {goto B6;}
    j0 = l3;
    j1 = 8ull;
    j0 >>= (j1 & 63);
    l4 = j0;
    j0 = l3;
    j1 = 65280ull;
    j0 &= j1;
    j1 = 0ull;
    i0 = j0 == j1;
    if (i0) {goto B8;}
    j0 = l4;
    l3 = j0;
    i0 = l1;
    l5 = i0;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l5;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L7;}
    goto B5;
    B8:;
    j0 = l4;
    l3 = j0;
    L9: vm_checktime();
      j0 = l3;
      j1 = 65280ull;
      j0 &= j1;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto B6;}
      j0 = l3;
      j1 = 8ull;
      j0 >>= (j1 & 63);
      l3 = j0;
      i0 = l1;
      i1 = 6u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l5 = i0;
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      l1 = i0;
      i0 = l5;
      if (i0) {goto L9;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l6;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L7;}
    goto B5;
  B6:;
  i0 = 0u;
  i1 = 11892u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0));
  l7 = j0;
  B5:;
  j0 = l7;
  j1 = 0ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B10;}
  i0 = 0u;
  i1 = 12570u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B10:;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  l3 = j1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 16), j1);
  j0 = l3;
  j1 = l2;
  j2 = 14289235522390851584ull;
  j3 = l2;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l1 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B11;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i0 = eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___load_object_by_primary_iterator_int__const(i0, i1);
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  i0 = 0u;
  i1 = 17264u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B12:;
  i0 = 0u;
  i1 = 13134u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B11:;
  i0 = p0;
  j0 = i64_load((&M0), (u64)(i0));
  l4 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i0 = j0 == j1;
  if (i0) {goto B13;}
  i0 = 0u;
  i1 = 17532u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B13:;
  i0 = 56u;
  i0 = operator_new_unsigned_int_(i0);
  l1 = i0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l1;
  i1 = p2;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  l3 = j1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l1;
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l1;
  j1 = l3;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l1;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i2 = 40u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 96), i1);
  i0 = l0;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 92), i1);
  i0 = l0;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 88), i1);
  i0 = l0;
  i1 = l0;
  i2 = 88u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 104), i1);
  i0 = l0;
  i1 = l1;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 116), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = l0;
  i1 = l1;
  i2 = 32u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 120), i1);
  i0 = l0;
  i1 = 112u;
  i0 += i1;
  i1 = l0;
  i2 = 104u;
  i1 += i2;
  void_boost__pfr__detail__for_each_field_impl_boost__pfr__detail__sequence_tuple__tuple_eosio__asset_const___eosio__asset_const___eosio__name_const____eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__token__currency_stats___void__0__eosio__datastream_char_____eosio__token__currency_stats_const_____lambda__eosio__datastream_char___const____0u__1u__2u__eosio__datastream_char_____eosio__token__currency_stats____std____1__integer_sequence_unsigned_int__0u__1u__2u___std____1__integral_constant_bool__false__(i0, i1);
  i0 = l1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 14289235522390851584ull;
  j3 = l4;
  i4 = l1;
  j4 = i64_load((&M0), (u64)(i4 + 8));
  j5 = 8ull;
  j4 >>= (j5 & 63);
  l3 = j4;
  i5 = l0;
  i6 = 48u;
  i5 += i6;
  i6 = 40u;
  i1 = (*Z_envZ_db_store_i64Z_ijjjjii)(j1, j2, j3, j4, i5, i6);
  l6 = i1;
  i32_store((&M0), (u64)(i0 + 44), i1);
  j0 = l3;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 16u;
  i1 += i2;
  l5 = i1;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 < j1;
  if (i0) {goto B14;}
  i0 = l5;
  j1 = l3;
  j2 = 1ull;
  j1 += j2;
  i64_store((&M0), (u64)(i0), j1);
  B14:;
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = l0;
  i1 = l1;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 8ull;
  j1 >>= (j2 & 63);
  l3 = j1;
  i64_store((&M0), (u64)(i0 + 48), j1);
  i0 = l0;
  i1 = l6;
  i32_store((&M0), (u64)(i0 + 88), i1);
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l5 = i0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 32u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 >= i1;
  if (i0) {goto B17;}
  i0 = l5;
  j1 = l3;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l5;
  i1 = l6;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = l5;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l5;
  i2 = 24u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 112));
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = l1;
  if (i0) {goto B16;}
  goto B15;
  B17:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = l0;
  i2 = 112u;
  i1 += i2;
  i2 = l0;
  i3 = 48u;
  i2 += i3;
  i3 = l0;
  i4 = 88u;
  i3 += i4;
  void_std____1__vector_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_______unsigned_long_long_____int____(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 112));
  l1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = l1;
  i0 = !(i0);
  if (i0) {goto B15;}
  B16:;
  i0 = l1;
  operator_delete_void__(i0);
  B15:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B18;}
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = l6;
  i0 = i0 == i1;
  if (i0) {goto B20;}
  L21: vm_checktime();
    i0 = l1;
    i1 = 4294967272u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i0 = l1;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    i0 = !(i0);
    if (i0) {goto B22;}
    i0 = l5;
    operator_delete_void__(i0);
    B22:;
    i0 = l6;
    i1 = l1;
    i0 = i0 != i1;
    if (i0) {goto L21;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B19;
  B20:;
  i0 = l6;
  l1 = i0;
  B19:;
  i0 = p2;
  i1 = l6;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  operator_delete_void__(i0);
  B18:;
  i0 = l0;
  i1 = 128u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___load_object_by_primary_iterator_int__const(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l6 = 0;
  u64 l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1, j2;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  l1 = i0;
  i0 = l0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l2 = i0;
  i1 = p0;
  i2 = 28u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  L2: vm_checktime();
    i0 = l3;
    i1 = 4294967288u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p1;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    i0 = l2;
    i1 = l3;
    i2 = 4294967272u;
    i1 += i2;
    l3 = i1;
    i0 = i0 != i1;
    if (i0) {goto L2;}
    goto B0;
  B1:;
  i0 = l2;
  i1 = l3;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l3;
  i1 = 4294967272u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = l1;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = 0u;
  i2 = 0u;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  l3 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B5;}
  i0 = l3;
  i1 = 513u;
  i0 = i0 >= i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = l3;
  i2 = 15u;
  i1 += i2;
  i2 = 4294967280u;
  i1 &= i2;
  i0 -= i1;
  l2 = i0;
  g0 = i0;
  i0 = 0u;
  l4 = i0;
  goto B3;
  B5:;
  i0 = 0u;
  i1 = 17390u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B4:;
  i0 = l3;
  i0 = malloc_0(i0);
  l2 = i0;
  i0 = 1u;
  l4 = i0;
  B3:;
  i0 = p1;
  i1 = l2;
  i2 = l3;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = l2;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = l2;
  i2 = l3;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = 56u;
  i0 = operator_new_unsigned_int_(i0);
  l3 = i0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l3;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l3;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l3;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l3;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l3;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l1;
  i1 = l1;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l1;
  i1 = l3;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l1;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l1;
  i1 = l3;
  i2 = 32u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l1;
  i1 = 32u;
  i0 += i1;
  i1 = l1;
  i2 = 24u;
  i1 += i2;
  void_boost__pfr__detail__for_each_field_impl_boost__pfr__detail__sequence_tuple__tuple_eosio__asset___eosio__asset___eosio__name____eosio__datastream_char_const____eosio__operator___eosio__datastream_char_const____eosio__token__currency_stats___void__0__eosio__datastream_char_const_____eosio__token__currency_stats_____lambda__eosio__datastream_char_const______0u__1u__2u__eosio__datastream_char_const_____eosio__token__currency_stats____std____1__integer_sequence_unsigned_int__0u__1u__2u___std____1__integral_constant_bool__false__(i0, i1);
  i0 = l3;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = l1;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l1;
  i1 = l3;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  j2 = 8ull;
  j1 >>= (j2 & 63);
  l5 = j1;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 4), i1);
  i0 = p0;
  i1 = 28u;
  i0 += i1;
  l6 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l0 = i0;
  i1 = p0;
  i2 = 32u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 >= i1;
  if (i0) {goto B8;}
  i0 = l0;
  j1 = l5;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l6;
  i1 = l0;
  i2 = 24u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  if (i0) {goto B7;}
  goto B6;
  B8:;
  i0 = p0;
  i1 = 24u;
  i0 += i1;
  i1 = l1;
  i2 = 24u;
  i1 += i2;
  i2 = l1;
  i3 = 32u;
  i2 += i3;
  i3 = l1;
  i4 = 4u;
  i3 += i4;
  void_std____1__vector_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_______unsigned_long_long_____int____(i0, i1, i2, i3);
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B6;}
  B7:;
  i0 = l2;
  free_0(i0);
  B6:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p1 = i0;
  i0 = l1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p1;
  operator_delete_void__(i0);
  B9:;
  i0 = l1;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void void_boost__pfr__detail__for_each_field_impl_boost__pfr__detail__sequence_tuple__tuple_eosio__asset_const___eosio__asset_const___eosio__name_const____eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__token__currency_stats___void__0__eosio__datastream_char_____eosio__token__currency_stats_const_____lambda__eosio__datastream_char___const____0u__1u__2u__eosio__datastream_char_____eosio__token__currency_stats____std____1__integer_sequence_unsigned_int__0u__1u__2u___std____1__integral_constant_bool__false__(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l3 = i1;
  i0 -= i1;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 17633u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  B0:;
  i0 = l3;
  i1 = l1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  l4 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l2;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l4;
  i0 -= i1;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 17633u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  B1:;
  i0 = l4;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l3;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l3 = i1;
  i0 -= i1;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B2;}
  i0 = 0u;
  i1 = 17633u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  B2:;
  i0 = l3;
  i1 = l1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  l4 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l2;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l4;
  i0 -= i1;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 17633u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  B3:;
  i0 = l4;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l3;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l3 = i1;
  i0 -= i1;
  i1 = 7u;
  i0 = (u32)((s32)i0 > (s32)i1);
  if (i0) {goto B4;}
  i0 = 0u;
  i1 = 17633u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  B4:;
  i0 = l3;
  i1 = p0;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void void_std____1__vector_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___item_______unsigned_long_long_____int____(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l0 = i1;
  i0 -= i1;
  i1 = 24u;
  i0 = I32_DIV_S(i0, i1);
  l1 = i0;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  i1 = 178956971u;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = 178956970u;
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 24u;
  i0 = I32_DIV_S(i0, i1);
  l0 = i0;
  i1 = 89478484u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = l2;
  i1 = l0;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l3 = i1;
  i2 = l3;
  i3 = l2;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  B3:;
  i0 = l3;
  i1 = 24u;
  i0 *= i1;
  i0 = operator_new_unsigned_int_(i0);
  l0 = i0;
  goto B0;
  B2:;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l0 = i0;
  goto B0;
  B1:;
  i0 = p0;
  std____1____vector_base_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = p1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l1;
  i2 = 24u;
  i1 *= i2;
  l4 = i1;
  i0 += i1;
  p1 = i0;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l3;
  i2 = 24u;
  i1 *= i2;
  i0 += i1;
  l1 = i0;
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  l2 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l0;
  i1 = l4;
  i0 += i1;
  i1 = 4294967272u;
  i0 += i1;
  p1 = i0;
  L6: vm_checktime();
    i0 = p2;
    i1 = 4294967272u;
    i0 += i1;
    l0 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    p3 = i0;
    i0 = l0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = p3;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 16u;
    i0 += i1;
    i1 = p2;
    i2 = 4294967288u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 8u;
    i0 += i1;
    i1 = p2;
    i2 = 4294967280u;
    i1 += i2;
    j1 = i64_load((&M0), (u64)(i1));
    i64_store((&M0), (u64)(i0), j1);
    i0 = p1;
    i1 = 4294967272u;
    i0 += i1;
    p1 = i0;
    i0 = l0;
    p2 = i0;
    i0 = l3;
    i1 = l0;
    i0 = i0 != i1;
    if (i0) {goto L6;}
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  p1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  goto B4;
  B5:;
  i0 = l3;
  p2 = i0;
  B4:;
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = p2;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  L8: vm_checktime();
    i0 = l3;
    i1 = 4294967272u;
    i0 += i1;
    l3 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i0 = l3;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B9;}
    i0 = p1;
    operator_delete_void__(i0);
    B9:;
    i0 = p2;
    i1 = l3;
    i0 = i0 != i1;
    if (i0) {goto L8;}
  B7:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = p2;
  operator_delete_void__(i0);
  B10:;
  FUNC_EPILOGUE;
}

static void eosio__token__issue_eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const__(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l5 = 0, l6 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l2 = j0;
  l3 = j0;
  L3: vm_checktime();
    j0 = l3;
    i0 = (u32)(j0);
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 3221225471u;
    i0 += i1;
    i1 = 452984830u;
    i0 = i0 > i1;
    if (i0) {goto B2;}
    j0 = l3;
    j1 = 8ull;
    j0 >>= (j1 & 63);
    l4 = j0;
    j0 = l3;
    j1 = 65280ull;
    j0 &= j1;
    j1 = 0ull;
    i0 = j0 == j1;
    if (i0) {goto B5;}
    j0 = l4;
    l3 = j0;
    i0 = l1;
    l5 = i0;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l5;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L3;}
    goto B4;
    B5:;
    j0 = l4;
    l3 = j0;
    L6: vm_checktime();
      j0 = l3;
      j1 = 65280ull;
      j0 &= j1;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto B2;}
      j0 = l3;
      j1 = 8ull;
      j0 >>= (j1 & 63);
      l3 = j0;
      i0 = l1;
      i1 = 6u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l5 = i0;
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      l1 = i0;
      i0 = l5;
      if (i0) {goto L6;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l6;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L3;}
    B4:;
  i0 = p3;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B1;
  B2:;
  i0 = 0u;
  i1 = 11051u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p3;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 257u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 13587u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = 0u;
  p3 = i0;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  l3 = j1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 16), j1);
  j0 = l3;
  j1 = l2;
  j2 = 14289235522390851584ull;
  j3 = l2;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l1 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B9;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i0 = eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___load_object_by_primary_iterator_int__const(i0, i1);
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  i0 = 0u;
  i1 = 17264u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B10:;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l3 = j0;
  i1 = p3;
  j1 = i64_load((&M0), (u64)(i1 + 32));
  i0 = j0 == j1;
  if (i0) {goto B7;}
  goto B8;
  B9:;
  i0 = 0u;
  i1 = 13906u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l3 = j0;
  i1 = 0u;
  j1 = i64_load((&M0), (u64)(i1 + 32));
  i0 = j0 == j1;
  if (i0) {goto B7;}
  B8:;
  i0 = 0u;
  i1 = 14266u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p3;
  j0 = i64_load((&M0), (u64)(i0 + 32));
  l3 = j0;
  B7:;
  j0 = l3;
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  j1 = 4611686018427387903ull;
  j0 += j1;
  j1 = 9223372036854775806ull;
  i0 = j0 > j1;
  if (i0) {goto B12;}
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l3 = j0;
  i0 = 0u;
  l1 = i0;
  L13: vm_checktime();
    j0 = l3;
    i0 = (u32)(j0);
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 3221225471u;
    i0 += i1;
    i1 = 452984830u;
    i0 = i0 > i1;
    if (i0) {goto B12;}
    j0 = l3;
    j1 = 8ull;
    j0 >>= (j1 & 63);
    l4 = j0;
    j0 = l3;
    j1 = 65280ull;
    j0 &= j1;
    j1 = 0ull;
    i0 = j0 == j1;
    if (i0) {goto B14;}
    j0 = l4;
    l3 = j0;
    i0 = l1;
    l5 = i0;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l5;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L13;}
    goto B11;
    B14:;
    j0 = l4;
    l3 = j0;
    L15: vm_checktime();
      j0 = l3;
      j1 = 65280ull;
      j0 &= j1;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto B12;}
      j0 = l3;
      j1 = 8ull;
      j0 >>= (j1 & 63);
      l3 = j0;
      i0 = l1;
      i1 = 6u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l5 = i0;
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      l1 = i0;
      i0 = l5;
      if (i0) {goto L15;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l6;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L13;}
    goto B11;
  B12:;
  i0 = 0u;
  i1 = 14536u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  B11:;
  j0 = l2;
  j1 = 0ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B16;}
  i0 = 0u;
  i1 = 14747u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B16:;
  i0 = p2;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = p3;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i0 = j0 == j1;
  if (i0) {goto B17;}
  i0 = 0u;
  i1 = 14928u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B17:;
  i0 = p3;
  i1 = 32u;
  i0 += i1;
  l1 = i0;
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = p3;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i2 = p3;
  j2 = i64_load((&M0), (u64)(i2));
  j1 -= j2;
  i0 = (u64)((s64)j0 <= (s64)j1);
  if (i0) {goto B18;}
  i0 = 0u;
  i1 = 15050u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B18:;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p3;
  i2 = l0;
  void_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___modify_eosio__token__issue_eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______1__eosio__token__currency_stats_const___eosio__name__eosio__token__issue_eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______1___(i0, i1, i2);
  i0 = p0;
  i1 = l1;
  i2 = p2;
  i3 = l1;
  eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const__(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B19;}
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = l6;
  i0 = i0 == i1;
  if (i0) {goto B21;}
  L22: vm_checktime();
    i0 = l1;
    i1 = 4294967272u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i0 = l1;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    i0 = !(i0);
    if (i0) {goto B23;}
    i0 = l5;
    operator_delete_void__(i0);
    B23:;
    i0 = l6;
    i1 = l1;
    i0 = i0 != i1;
    if (i0) {goto L22;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B20;
  B21:;
  i0 = l6;
  l1 = i0;
  B20:;
  i0 = p2;
  i1 = l6;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  operator_delete_void__(i0);
  B19:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void void_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___modify_eosio__token__issue_eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______1__eosio__token__currency_stats_const___eosio__name__eosio__token__issue_eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______1___(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  l1 = i0;
  i0 = l0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 17684u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 == j1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 17781u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B1:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  l2 = j1;
  i0 = j0 == j1;
  if (i0) {goto B2;}
  i0 = 0u;
  i1 = 18001u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B2:;
  i0 = p1;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = p2;
  j2 = i64_load((&M0), (u64)(i2));
  j1 += j2;
  l3 = j1;
  i64_store((&M0), (u64)(i0), j1);
  j0 = l3;
  j1 = 13835058055282163712ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 18084u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l3 = j0;
  B3:;
  j0 = l2;
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l2 = j0;
  j0 = l3;
  j1 = 4611686018427387904ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B4;}
  i0 = 0u;
  i1 = 18155u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B4:;
  j0 = l2;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 8ull;
  j1 >>= (j2 & 63);
  i0 = j0 == j1;
  if (i0) {goto B5;}
  i0 = 0u;
  i1 = 17886u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B5:;
  i0 = l0;
  p2 = i0;
  i1 = 4294967248u;
  i0 += i1;
  l0 = i0;
  g0 = i0;
  i0 = l1;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = p2;
  i2 = 4294967288u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l1;
  i1 = l1;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l1;
  i1 = p1;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l1;
  i1 = p1;
  i2 = 32u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l1;
  i1 = 32u;
  i0 += i1;
  i1 = l1;
  i2 = 24u;
  i1 += i2;
  void_boost__pfr__detail__for_each_field_impl_boost__pfr__detail__sequence_tuple__tuple_eosio__asset_const___eosio__asset_const___eosio__name_const____eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__token__currency_stats___void__0__eosio__datastream_char_____eosio__token__currency_stats_const_____lambda__eosio__datastream_char___const____0u__1u__2u__eosio__datastream_char_____eosio__token__currency_stats____std____1__integer_sequence_unsigned_int__0u__1u__2u___std____1__integral_constant_bool__false__(i0, i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 44));
  j1 = 0ull;
  i2 = l0;
  i3 = 40u;
  (*Z_envZ_db_update_i64Z_vijii)(i0, j1, i2, i3);
  j0 = l2;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i0 = j0 < j1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  j1 = l2;
  j2 = 1ull;
  j1 += j2;
  i64_store((&M0), (u64)(i0), j1);
  B6:;
  i0 = l1;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const__(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  u64 j0, j1, j2, j3, j4, j5;
  i0 = g0;
  i1 = 80u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  l1 = j1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  l2 = j1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  j0 = l1;
  j1 = l2;
  j2 = 3607749779137757184ull;
  i3 = p2;
  j3 = i64_load((&M0), (u64)(i3 + 8));
  j4 = 8ull;
  j3 >>= (j4 & 63);
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  p1 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = p1;
  i0 = eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___load_object_by_primary_iterator_int__const(i0, i1);
  p1 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 17264u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B3:;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 48), i1);
  i0 = l0;
  i1 = p1;
  i2 = l0;
  i3 = 48u;
  i2 += i3;
  void_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___modify_eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const______5__eosio__token__account_const___eosio__name__eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const______5___(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p0 = i0;
  if (i0) {goto B1;}
  goto B0;
  B2:;
  i0 = p3;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 == j1;
  if (i0) {goto B4;}
  i0 = 0u;
  i1 = 17532u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B4:;
  i0 = 32u;
  i0 = operator_new_unsigned_int_(i0);
  p1 = i0;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = p1;
  i1 = p2;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 72), j1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  i1 = 8u;
  i0 |= i1;
  i1 = l0;
  i2 = 72u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 3607749779137757184ull;
  j3 = l2;
  i4 = p1;
  j4 = i64_load((&M0), (u64)(i4 + 8));
  j5 = 8ull;
  j4 >>= (j5 & 63);
  l1 = j4;
  i5 = l0;
  i6 = 48u;
  i5 += i6;
  i6 = 16u;
  i1 = (*Z_envZ_db_store_i64Z_ijjjjii)(j1, j2, j3, j4, i5, i6);
  p0 = i1;
  i32_store((&M0), (u64)(i0 + 20), i1);
  j0 = l1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  p2 = i1;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 < j1;
  if (i0) {goto B5;}
  i0 = p2;
  j1 = l1;
  j2 = 1ull;
  j1 += j2;
  i64_store((&M0), (u64)(i0), j1);
  B5:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 72), i1);
  i0 = l0;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 8ull;
  j1 >>= (j2 & 63);
  l1 = j1;
  i64_store((&M0), (u64)(i0 + 48), j1);
  i0 = l0;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 44), i1);
  i0 = l0;
  i1 = 28u;
  i0 += i1;
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = l0;
  i2 = 32u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 >= i1;
  if (i0) {goto B8;}
  i0 = p2;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p2;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 72), i1);
  i0 = p2;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  i1 = p2;
  i2 = 24u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 72));
  p1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 72), i1);
  i0 = p1;
  if (i0) {goto B7;}
  goto B6;
  B8:;
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i1 = l0;
  i2 = 72u;
  i1 += i2;
  i2 = l0;
  i3 = 48u;
  i2 += i3;
  i3 = l0;
  i4 = 44u;
  i3 += i4;
  void_std____1__vector_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_______unsigned_long_long_____int____(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 72));
  p1 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 72), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B6;}
  B7:;
  i0 = p1;
  operator_delete_void__(i0);
  B6:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p0 = i0;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = l0;
  i1 = 28u;
  i0 += i1;
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  L11: vm_checktime();
    i0 = p1;
    i1 = 4294967272u;
    i0 += i1;
    p1 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    p2 = i0;
    i0 = p1;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p2;
    i0 = !(i0);
    if (i0) {goto B12;}
    i0 = p2;
    operator_delete_void__(i0);
    B12:;
    i0 = p0;
    i1 = p1;
    i0 = i0 != i1;
    if (i0) {goto L11;}
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p1 = i0;
  goto B9;
  B10:;
  i0 = p0;
  p1 = i0;
  B9:;
  i0 = p3;
  i1 = p0;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  operator_delete_void__(i0);
  B0:;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___load_object_by_primary_iterator_int__const(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0;
  u64 l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j1, j2;
  i0 = g0;
  i1 = 32u;
  i0 -= i1;
  l0 = i0;
  l1 = i0;
  i0 = l0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l2 = i0;
  i1 = p0;
  i2 = 28u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  L2: vm_checktime();
    i0 = l3;
    i1 = 4294967288u;
    i0 += i1;
    i0 = i32_load((&M0), (u64)(i0));
    i1 = p1;
    i0 = i0 == i1;
    if (i0) {goto B1;}
    i0 = l2;
    i1 = l3;
    i2 = 4294967272u;
    i1 += i2;
    l3 = i1;
    i0 = i0 != i1;
    if (i0) {goto L2;}
    goto B0;
  B1:;
  i0 = l2;
  i1 = l3;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = l3;
  i1 = 4294967272u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = l1;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  goto Bfunc;
  B0:;
  i0 = p1;
  i1 = 0u;
  i2 = 0u;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  l2 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B5;}
  i0 = l2;
  i1 = 513u;
  i0 = i0 >= i1;
  if (i0) {goto B4;}
  i0 = l0;
  i1 = l2;
  i2 = 15u;
  i1 += i2;
  i2 = 4294967280u;
  i1 &= i2;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l4 = i0;
  goto B3;
  B5:;
  i0 = 0u;
  i1 = 17390u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B4:;
  i0 = l2;
  i0 = malloc_0(i0);
  l0 = i0;
  i0 = 1u;
  l4 = i0;
  B3:;
  i0 = p1;
  i1 = l0;
  i2 = l2;
  i0 = (*Z_envZ_db_get_i64Z_iiii)(i0, i1, i2);
  i0 = 32u;
  i0 = operator_new_unsigned_int_(i0);
  l3 = i0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l3;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l3;
  i1 = p0;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l2;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B6;}
  i0 = 0u;
  i1 = 17496u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B6:;
  i0 = l3;
  i1 = l0;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  l5 = i0;
  i0 = l2;
  i1 = 4294967288u;
  i0 &= i1;
  i1 = 8u;
  i0 = i0 != i1;
  if (i0) {goto B7;}
  i0 = 0u;
  i1 = 17496u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B7:;
  i0 = l1;
  i1 = 24u;
  i0 += i1;
  i1 = l5;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l3;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  j1 = i64_load((&M0), (u64)(i1 + 24));
  l6 = j1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l3;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 20), i1);
  i0 = l1;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l1;
  j1 = l6;
  j2 = 8ull;
  j1 >>= (j2 & 63);
  l6 = j1;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = p0;
  i1 = 28u;
  i0 += i1;
  l5 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i1 = p0;
  i2 = 32u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 >= i1;
  if (i0) {goto B10;}
  i0 = l2;
  j1 = l6;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l2;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l2;
  i1 = l3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l5;
  i1 = l2;
  i2 = 24u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  if (i0) {goto B9;}
  goto B8;
  B10:;
  i0 = p0;
  i1 = 24u;
  i0 += i1;
  i1 = l1;
  i2 = 16u;
  i1 += i2;
  i2 = l1;
  i3 = 24u;
  i2 += i3;
  i3 = l1;
  i4 = 12u;
  i3 += i4;
  void_std____1__vector_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_______unsigned_long_long_____int____(i0, i1, i2, i3);
  i0 = l4;
  i0 = !(i0);
  if (i0) {goto B8;}
  B9:;
  i0 = l0;
  free_0(i0);
  B8:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  p1 = i0;
  i0 = l1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = p1;
  i0 = !(i0);
  if (i0) {goto B11;}
  i0 = p1;
  operator_delete_void__(i0);
  B11:;
  i0 = l1;
  i1 = 32u;
  i0 += i1;
  g0 = i0;
  i0 = l3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void void_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___modify_eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const______5__eosio__token__account_const___eosio__name__eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const______5___(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l4 = 0;
  u64 l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  l1 = i0;
  i0 = l0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 17684u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 == j1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 17781u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B1:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  l2 = j1;
  i0 = j0 == j1;
  if (i0) {goto B2;}
  i0 = 0u;
  i1 = 18001u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B2:;
  i0 = p1;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = p2;
  j2 = i64_load((&M0), (u64)(i2));
  j1 += j2;
  l3 = j1;
  i64_store((&M0), (u64)(i0), j1);
  j0 = l3;
  j1 = 13835058055282163712ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 18084u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l3 = j0;
  B3:;
  j0 = l2;
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l2 = j0;
  j0 = l3;
  j1 = 4611686018427387904ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B4;}
  i0 = 0u;
  i1 = 18155u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B4:;
  j0 = l2;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  p2 = i1;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 8ull;
  j1 >>= (j2 & 63);
  i0 = j0 == j1;
  if (i0) {goto B5;}
  i0 = 0u;
  i1 = 17886u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B5:;
  i0 = l0;
  l4 = i0;
  i1 = 4294967280u;
  i0 += i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l4;
  i1 = 4294967288u;
  i0 += i1;
  i1 = l1;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  j1 = 0ull;
  i2 = l0;
  i3 = 16u;
  (*Z_envZ_db_update_i64Z_vijii)(i0, j1, i2, i3);
  j0 = l2;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i0 = j0 < j1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  j1 = l2;
  j2 = 1ull;
  j1 += j2;
  i64_store((&M0), (u64)(i0), j1);
  B6:;
  i0 = l1;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void void_std____1__vector_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_______unsigned_long_long_____int____(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j1;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l0 = i1;
  i0 -= i1;
  i1 = 24u;
  i0 = I32_DIV_S(i0, i1);
  l1 = i0;
  i1 = 1u;
  i0 += i1;
  l2 = i0;
  i1 = 178956971u;
  i0 = i0 >= i1;
  if (i0) {goto B1;}
  i0 = 178956970u;
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l0;
  i0 -= i1;
  i1 = 24u;
  i0 = I32_DIV_S(i0, i1);
  l0 = i0;
  i1 = 89478484u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = l2;
  i1 = l0;
  i2 = 1u;
  i1 <<= (i2 & 31);
  l3 = i1;
  i2 = l3;
  i3 = l2;
  i2 = i2 < i3;
  i0 = i2 ? i0 : i1;
  l3 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  B3:;
  i0 = l3;
  i1 = 24u;
  i0 *= i1;
  i0 = operator_new_unsigned_int_(i0);
  l0 = i0;
  goto B0;
  B2:;
  i0 = 0u;
  l3 = i0;
  i0 = 0u;
  l0 = i0;
  goto B0;
  B1:;
  i0 = p0;
  std____1____vector_base_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  B0:;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = p1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = l1;
  i2 = 24u;
  i1 *= i2;
  l4 = i1;
  i0 += i1;
  p1 = i0;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  i1 = p3;
  i1 = i32_load((&M0), (u64)(i1));
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = l3;
  i2 = 24u;
  i1 *= i2;
  i0 += i1;
  l1 = i0;
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  l2 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = p0;
  i1 = i32_load((&M0), (u64)(i1));
  l3 = i1;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  i0 = l0;
  i1 = l4;
  i0 += i1;
  i1 = 4294967272u;
  i0 += i1;
  p1 = i0;
  L6: vm_checktime();
    i0 = p2;
    i1 = 4294967272u;
    i0 += i1;
    l0 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    p3 = i0;
    i0 = l0;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = p3;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 16u;
    i0 += i1;
    i1 = p2;
    i2 = 4294967288u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i1 = 8u;
    i0 += i1;
    i1 = p2;
    i2 = 4294967280u;
    i1 += i2;
    j1 = i64_load((&M0), (u64)(i1));
    i64_store((&M0), (u64)(i0), j1);
    i0 = p1;
    i1 = 4294967272u;
    i0 += i1;
    p1 = i0;
    i0 = l0;
    p2 = i0;
    i0 = l3;
    i1 = l0;
    i0 = i0 != i1;
    if (i0) {goto L6;}
  i0 = p1;
  i1 = 24u;
  i0 += i1;
  p1 = i0;
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  goto B4;
  B5:;
  i0 = l3;
  p2 = i0;
  B4:;
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 4u;
  i0 += i1;
  i1 = l2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  i1 = p2;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  L8: vm_checktime();
    i0 = l3;
    i1 = 4294967272u;
    i0 += i1;
    l3 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i0 = l3;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B9;}
    i0 = p1;
    operator_delete_void__(i0);
    B9:;
    i0 = p2;
    i1 = l3;
    i0 = i0 != i1;
    if (i0) {goto L8;}
  B7:;
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = p2;
  operator_delete_void__(i0);
  B10:;
  FUNC_EPILOGUE;
}

static void eosio__token__retire_eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const__(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l5 = 0, l6 = 0;
  u64 l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l2 = j0;
  l3 = j0;
  L3: vm_checktime();
    j0 = l3;
    i0 = (u32)(j0);
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 3221225471u;
    i0 += i1;
    i1 = 452984830u;
    i0 = i0 > i1;
    if (i0) {goto B2;}
    j0 = l3;
    j1 = 8ull;
    j0 >>= (j1 & 63);
    l4 = j0;
    j0 = l3;
    j1 = 65280ull;
    j0 &= j1;
    j1 = 0ull;
    i0 = j0 == j1;
    if (i0) {goto B5;}
    j0 = l4;
    l3 = j0;
    i0 = l1;
    l5 = i0;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l5;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L3;}
    goto B4;
    B5:;
    j0 = l4;
    l3 = j0;
    L6: vm_checktime();
      j0 = l3;
      j1 = 65280ull;
      j0 &= j1;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto B2;}
      j0 = l3;
      j1 = 8ull;
      j0 >>= (j1 & 63);
      l3 = j0;
      i0 = l1;
      i1 = 6u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l5 = i0;
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      l1 = i0;
      i0 = l5;
      if (i0) {goto L6;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l6;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L3;}
    B4:;
  i0 = p2;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  goto B1;
  B2:;
  i0 = 0u;
  i1 = 11051u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p2;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 257u;
  i0 = i0 < i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 13587u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = 0u;
  p2 = i0;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  l3 = j1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 16), j1);
  j0 = l3;
  j1 = l2;
  j2 = 14289235522390851584ull;
  j3 = l2;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l1 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  i0 = eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___load_object_by_primary_iterator_int__const(i0, i1);
  p2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = 0u;
  i1 = 17264u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  goto B7;
  B8:;
  i0 = 0u;
  i1 = 15186u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B7:;
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0 + 32));
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  j1 = 4611686018427387903ull;
  j0 += j1;
  j1 = 9223372036854775806ull;
  i0 = j0 > j1;
  if (i0) {goto B10;}
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l3 = j0;
  i0 = 0u;
  l1 = i0;
  L11: vm_checktime();
    j0 = l3;
    i0 = (u32)(j0);
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 3221225471u;
    i0 += i1;
    i1 = 452984830u;
    i0 = i0 > i1;
    if (i0) {goto B10;}
    j0 = l3;
    j1 = 8ull;
    j0 >>= (j1 & 63);
    l4 = j0;
    j0 = l3;
    j1 = 65280ull;
    j0 &= j1;
    j1 = 0ull;
    i0 = j0 == j1;
    if (i0) {goto B12;}
    j0 = l4;
    l3 = j0;
    i0 = l1;
    l5 = i0;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l5;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L11;}
    goto B9;
    B12:;
    j0 = l4;
    l3 = j0;
    L13: vm_checktime();
      j0 = l3;
      j1 = 65280ull;
      j0 &= j1;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto B10;}
      j0 = l3;
      j1 = 8ull;
      j0 >>= (j1 & 63);
      l3 = j0;
      i0 = l1;
      i1 = 6u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l5 = i0;
      i0 = l1;
      i1 = 1u;
      i0 += i1;
      l6 = i0;
      l1 = i0;
      i0 = l5;
      if (i0) {goto L13;}
    i0 = l6;
    i1 = 1u;
    i0 += i1;
    l1 = i0;
    i0 = l6;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L11;}
    goto B9;
  B10:;
  i0 = 0u;
  i1 = 14536u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  B9:;
  j0 = l2;
  j1 = 0ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B14;}
  i0 = 0u;
  i1 = 15444u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B14:;
  i0 = p1;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i0 = j0 == j1;
  if (i0) {goto B15;}
  i0 = 0u;
  i1 = 14928u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B15:;
  i0 = l0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p2;
  i2 = l0;
  void_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___modify_eosio__token__retire_eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______2__eosio__token__currency_stats_const___eosio__name__eosio__token__retire_eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______2___(i0, i1, i2);
  i0 = p0;
  i1 = p2;
  i2 = 32u;
  i1 += i2;
  i2 = p1;
  eosio__token__sub_balance_eosio__name_const___eosio__asset_const__(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  l6 = i0;
  i0 = !(i0);
  if (i0) {goto B16;}
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = l6;
  i0 = i0 == i1;
  if (i0) {goto B18;}
  L19: vm_checktime();
    i0 = l1;
    i1 = 4294967272u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i0 = l1;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    i0 = !(i0);
    if (i0) {goto B20;}
    i0 = l5;
    operator_delete_void__(i0);
    B20:;
    i0 = l6;
    i1 = l1;
    i0 = i0 != i1;
    if (i0) {goto L19;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B17;
  B18:;
  i0 = l6;
  l1 = i0;
  B17:;
  i0 = p1;
  i1 = l6;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  operator_delete_void__(i0);
  B16:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void void_eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___modify_eosio__token__retire_eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______2__eosio__token__currency_stats_const___eosio__name__eosio__token__retire_eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const______2___(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  l1 = i0;
  i0 = l0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 17684u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 == j1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 17781u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B1:;
  i0 = p2;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  l2 = j1;
  i0 = j0 == j1;
  if (i0) {goto B2;}
  i0 = 0u;
  i1 = 18266u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B2:;
  i0 = p1;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = p2;
  j2 = i64_load((&M0), (u64)(i2));
  j1 -= j2;
  l3 = j1;
  i64_store((&M0), (u64)(i0), j1);
  j0 = l3;
  j1 = 13835058055282163712ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 18384u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l3 = j0;
  B3:;
  j0 = l2;
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l2 = j0;
  j0 = l3;
  j1 = 4611686018427387904ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B4;}
  i0 = 0u;
  i1 = 18450u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B4:;
  j0 = l2;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 8ull;
  j1 >>= (j2 & 63);
  i0 = j0 == j1;
  if (i0) {goto B5;}
  i0 = 0u;
  i1 = 17886u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B5:;
  i0 = l0;
  p2 = i0;
  i1 = 4294967248u;
  i0 += i1;
  l0 = i0;
  g0 = i0;
  i0 = l1;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 12), i1);
  i0 = l1;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 8), i1);
  i0 = l1;
  i1 = p2;
  i2 = 4294967288u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l1;
  i1 = l1;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 24), i1);
  i0 = l1;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 32), i1);
  i0 = l1;
  i1 = p1;
  i2 = 16u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 36), i1);
  i0 = l1;
  i1 = p1;
  i2 = 32u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 40), i1);
  i0 = l1;
  i1 = 32u;
  i0 += i1;
  i1 = l1;
  i2 = 24u;
  i1 += i2;
  void_boost__pfr__detail__for_each_field_impl_boost__pfr__detail__sequence_tuple__tuple_eosio__asset_const___eosio__asset_const___eosio__name_const____eosio__datastream_char____eosio__operator___eosio__datastream_char____eosio__token__currency_stats___void__0__eosio__datastream_char_____eosio__token__currency_stats_const_____lambda__eosio__datastream_char___const____0u__1u__2u__eosio__datastream_char_____eosio__token__currency_stats____std____1__integer_sequence_unsigned_int__0u__1u__2u___std____1__integral_constant_bool__false__(i0, i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 44));
  j1 = 0ull;
  i2 = l0;
  i3 = 40u;
  (*Z_envZ_db_update_i64Z_vijii)(i0, j1, i2, i3);
  j0 = l2;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i0 = j0 < j1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  j1 = l2;
  j2 = 1ull;
  j1 += j2;
  i64_store((&M0), (u64)(i0), j1);
  B6:;
  i0 = l1;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void eosio__token__sub_balance_eosio__name_const___eosio__asset_const__(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2, j3, j4;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  l2 = j1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  l3 = j1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  j0 = l2;
  j1 = l3;
  j2 = 3607749779137757184ull;
  i3 = p2;
  j3 = i64_load((&M0), (u64)(i3 + 8));
  j4 = 8ull;
  j3 >>= (j4 & 63);
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  p0 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i0 = eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___load_object_by_primary_iterator_int__const(i0, i1);
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 17264u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B3:;
  i0 = l1;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = (u64)((s64)j0 >= (s64)j1);
  if (i0) {goto B0;}
  goto B1;
  B2:;
  i0 = 0u;
  i1 = 16234u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = (u64)((s64)j0 >= (s64)j1);
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  i1 = 16323u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l1;
  j2 = l2;
  i3 = l0;
  void_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___modify_eosio__token__sub_balance_eosio__name_const___eosio__asset_const______3__eosio__token__account_const___eosio__name__eosio__token__sub_balance_eosio__name_const___eosio__asset_const______3___(i0, i1, j2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p0 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  L7: vm_checktime();
    i0 = p2;
    i1 = 4294967272u;
    i0 += i1;
    p2 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l1 = i0;
    i0 = p2;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l1;
    i0 = !(i0);
    if (i0) {goto B8;}
    i0 = l1;
    operator_delete_void__(i0);
    B8:;
    i0 = p1;
    i1 = p2;
    i0 = i0 != i1;
    if (i0) {goto L7;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  goto B5;
  B6:;
  i0 = p1;
  p2 = i0;
  B5:;
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  operator_delete_void__(i0);
  B4:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void void_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___modify_eosio__token__sub_balance_eosio__name_const___eosio__asset_const______3__eosio__token__account_const___eosio__name__eosio__token__sub_balance_eosio__name_const___eosio__asset_const______3___(u32 p0, u32 p1, u64 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l4 = 0;
  u64 l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  l1 = i0;
  i0 = l0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 17684u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 == j1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 17781u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B1:;
  i0 = p3;
  i0 = i32_load((&M0), (u64)(i0));
  p3 = i0;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  l2 = j1;
  i0 = j0 == j1;
  if (i0) {goto B2;}
  i0 = 0u;
  i1 = 18266u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B2:;
  i0 = p1;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  i2 = p3;
  j2 = i64_load((&M0), (u64)(i2));
  j1 -= j2;
  l3 = j1;
  i64_store((&M0), (u64)(i0), j1);
  j0 = l3;
  j1 = 13835058055282163712ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 18384u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l3 = j0;
  B3:;
  j0 = l2;
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l2 = j0;
  j0 = l3;
  j1 = 4611686018427387904ull;
  i0 = (u64)((s64)j0 < (s64)j1);
  if (i0) {goto B4;}
  i0 = 0u;
  i1 = 18450u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B4:;
  j0 = l2;
  i1 = p1;
  i2 = 8u;
  i1 += i2;
  p3 = i1;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 8ull;
  j1 >>= (j2 & 63);
  i0 = j0 == j1;
  if (i0) {goto B5;}
  i0 = 0u;
  i1 = 17886u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B5:;
  i0 = l0;
  l4 = i0;
  i1 = 4294967280u;
  i0 += i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p3;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l4;
  i1 = 4294967288u;
  i0 += i1;
  i1 = l1;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  j1 = p2;
  i2 = l0;
  i3 = 16u;
  (*Z_envZ_db_update_i64Z_vijii)(i0, j1, i2, i3);
  j0 = l2;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i0 = j0 < j1;
  if (i0) {goto B6;}
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  j1 = l2;
  j2 = 1ull;
  j1 += j2;
  i64_store((&M0), (u64)(i0), j1);
  B6:;
  i0 = l1;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void eosio__token__transfer_eosio__name_const___eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const__(u32 p0, u32 p1, u32 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l2 = 0, l4 = 0, l6 = 0, l7 = 0;
  u64 l1 = 0, l3 = 0, l5 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l1 = j0;
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 != j1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 15616u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  l1 = j0;
  B0:;
  j0 = l1;
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0));
  i0 = (*Z_envZ_is_accountZ_ij)(j0);
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 15844u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B1:;
  i0 = p3;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l1 = j0;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = l1;
  j2 = 8ull;
  j1 >>= (j2 & 63);
  l1 = j1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  j1 = l1;
  i2 = 15986u;
  i0 = eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___get_unsigned_long_long__char_const___const(i0, j1, i2);
  l2 = i0;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  (*Z_envZ_require_recipientZ_vj)(j0);
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0));
  (*Z_envZ_require_recipientZ_vj)(j0);
  i0 = p3;
  j0 = i64_load((&M0), (u64)(i0));
  l3 = j0;
  j1 = 4611686018427387903ull;
  j0 += j1;
  j1 = 9223372036854775806ull;
  i0 = j0 > j1;
  if (i0) {goto B3;}
  i0 = p3;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l1 = j0;
  i0 = 0u;
  l4 = i0;
  L4: vm_checktime();
    j0 = l1;
    i0 = (u32)(j0);
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 3221225471u;
    i0 += i1;
    i1 = 452984830u;
    i0 = i0 > i1;
    if (i0) {goto B3;}
    j0 = l1;
    j1 = 8ull;
    j0 >>= (j1 & 63);
    l5 = j0;
    j0 = l1;
    j1 = 65280ull;
    j0 &= j1;
    j1 = 0ull;
    i0 = j0 == j1;
    if (i0) {goto B5;}
    j0 = l5;
    l1 = j0;
    i0 = l4;
    l6 = i0;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i0 = l6;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L4;}
    goto B2;
    B5:;
    j0 = l5;
    l1 = j0;
    L6: vm_checktime();
      j0 = l1;
      j1 = 65280ull;
      j0 &= j1;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto B3;}
      j0 = l1;
      j1 = 8ull;
      j0 >>= (j1 & 63);
      l1 = j0;
      i0 = l4;
      i1 = 6u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l6 = i0;
      i0 = l4;
      i1 = 1u;
      i0 += i1;
      l7 = i0;
      l4 = i0;
      i0 = l6;
      if (i0) {goto L6;}
    i0 = l7;
    i1 = 1u;
    i0 += i1;
    l4 = i0;
    i0 = l7;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L4;}
    goto B2;
  B3:;
  i0 = 0u;
  i1 = 14536u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = p3;
  j0 = i64_load((&M0), (u64)(i0));
  l3 = j0;
  B2:;
  j0 = l3;
  j1 = 0ull;
  i0 = (u64)((s64)j0 > (s64)j1);
  if (i0) {goto B7;}
  i0 = 0u;
  i1 = 16124u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B7:;
  i0 = p3;
  i1 = 8u;
  i0 += i1;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = l2;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i0 = j0 == j1;
  if (i0) {goto B8;}
  i0 = 0u;
  i1 = 14928u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B8:;
  i0 = p4;
  i0 = i32_load8_u((&M0), (u64)(i0));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B9;}
  i0 = p4;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i1 = 257u;
  i0 = i0 < i1;
  if (i0) {goto B9;}
  i0 = 0u;
  i1 = 13587u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B9:;
  i0 = l0;
  i1 = p2;
  i2 = p1;
  i3 = p2;
  j3 = i64_load((&M0), (u64)(i3));
  i3 = (*Z_envZ_has_authZ_ij)(j3);
  i1 = i3 ? i1 : i2;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = p0;
  i1 = p1;
  i2 = p3;
  eosio__token__sub_balance_eosio__name_const___eosio__asset_const__(i0, i1, i2);
  i0 = p0;
  i1 = p2;
  i2 = p3;
  i3 = l0;
  eosio__token__add_balance_eosio__name_const___eosio__asset_const___eosio__name_const__(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  l7 = i0;
  i0 = !(i0);
  if (i0) {goto B10;}
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i1 = l7;
  i0 = i0 == i1;
  if (i0) {goto B12;}
  L13: vm_checktime();
    i0 = l4;
    i1 = 4294967272u;
    i0 += i1;
    l4 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l6 = i0;
    i0 = l4;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    i0 = !(i0);
    if (i0) {goto B14;}
    i0 = l6;
    operator_delete_void__(i0);
    B14:;
    i0 = l7;
    i1 = l4;
    i0 = i0 != i1;
    if (i0) {goto L13;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  goto B11;
  B12:;
  i0 = l7;
  l4 = i0;
  B11:;
  i0 = p3;
  i1 = l7;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l4;
  operator_delete_void__(i0);
  B10:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u32 eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___get_unsigned_long_long__char_const___const(u32 p0, u64 p1, u32 p2) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l0 = i0;
  i1 = p0;
  i2 = 28u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  l1 = i1;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  L3: vm_checktime();
    i0 = l1;
    i1 = 4294967272u;
    i0 += i1;
    l2 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    j0 = i64_load((&M0), (u64)(i0 + 8));
    j1 = 8ull;
    j0 >>= (j1 & 63);
    j1 = p1;
    i0 = j0 == j1;
    if (i0) {goto B2;}
    i0 = l2;
    l1 = i0;
    i0 = l0;
    i1 = l2;
    i0 = i0 != i1;
    if (i0) {goto L3;}
    goto B1;
  B2:;
  i0 = l0;
  i1 = l1;
  i0 = i0 == i1;
  if (i0) {goto B1;}
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 17264u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l3;
  goto Bfunc;
  B1:;
  i0 = 0u;
  l3 = i0;
  i0 = p0;
  j0 = i64_load((&M0), (u64)(i0));
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  j2 = 14289235522390851584ull;
  j3 = p1;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l2 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B4;}
  i0 = p0;
  i1 = l2;
  i0 = eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___load_object_by_primary_iterator_int__const(i0, i1);
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 40));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 17264u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l3;
  goto Bfunc;
  B4:;
  i0 = 0u;
  i1 = p2;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = l3;
  Bfunc:;
  FUNC_EPILOGUE;
  return i0;
}

static void eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const__(u32 p0, u32 p1, u32 p2, u32 p3) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 128u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p3;
  j0 = i64_load((&M0), (u64)(i0));
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  i0 = (*Z_envZ_is_accountZ_ij)(j0);
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 16429u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p2;
  j0 = i64_load((&M0), (u64)(i0));
  l1 = j0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  i1 = 32u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = l1;
  j2 = 8ull;
  j1 >>= (j2 & 63);
  l1 = j1;
  i64_store((&M0), (u64)(i0 + 56), j1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 64), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 72), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0 + 48), j1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  j1 = l1;
  i2 = 16587u;
  i0 = eosio__multi_index__eosio__name__raw_14289235522390851584__eosio__token__currency_stats___get_unsigned_long_long__char_const___const(i0, j1, i2);
  j0 = i64_load((&M0), (u64)(i0 + 8));
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 == j1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 14928u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B1:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = 32u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  l2 = j1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  l3 = j1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  j0 = l2;
  j1 = l3;
  j2 = 3607749779137757184ull;
  j3 = l1;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  p0 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B5;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = p0;
  i0 = eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___load_object_by_primary_iterator_int__const(i0, i1);
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B4;}
  i0 = 0u;
  i1 = 17264u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  p1 = i0;
  if (i0) {goto B3;}
  goto B2;
  B5:;
  i0 = p3;
  j0 = i64_load((&M0), (u64)(i0));
  l1 = j0;
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 120), j1);
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i0 = j0 == j1;
  if (i0) {goto B6;}
  i0 = 0u;
  i1 = 17532u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B6:;
  i0 = l0;
  i1 = l0;
  i32_store((&M0), (u64)(i0 + 100), i1);
  i0 = l0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 96), i1);
  i0 = l0;
  i1 = l0;
  i2 = 120u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 104), i1);
  i0 = 32u;
  i0 = operator_new_unsigned_int_(i0);
  p2 = i0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p2;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = p2;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = 96u;
  i0 += i1;
  i1 = p2;
  auto_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___const_iterator_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___emplace_eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6__eosio__name__eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6______lambda__eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6____operator___eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6___const(i0, i1);
  i0 = l0;
  i1 = p2;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = l0;
  i1 = p2;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  j2 = 8ull;
  j1 >>= (j2 & 63);
  l1 = j1;
  i64_store((&M0), (u64)(i0 + 96), j1);
  i0 = l0;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1 + 20));
  p1 = i1;
  i32_store((&M0), (u64)(i0 + 92), i1);
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p0 = i0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 32u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 >= i1;
  if (i0) {goto B8;}
  i0 = p0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p0;
  i1 = p1;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = p0;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p3;
  i1 = p0;
  i2 = 24u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 112));
  p2 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = p2;
  if (i0) {goto B7;}
  goto B4;
  B8:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = l0;
  i2 = 112u;
  i1 += i2;
  i2 = l0;
  i3 = 96u;
  i2 += i3;
  i3 = l0;
  i4 = 92u;
  i3 += i4;
  void_std____1__vector_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_______unsigned_long_long_____int____(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 112));
  p2 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 112), i1);
  i0 = p2;
  i0 = !(i0);
  if (i0) {goto B4;}
  B7:;
  i0 = p2;
  operator_delete_void__(i0);
  B4:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B2;}
  B3:;
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B10;}
  L11: vm_checktime();
    i0 = p2;
    i1 = 4294967272u;
    i0 += i1;
    p2 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    i0 = p2;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B12;}
    i0 = p0;
    operator_delete_void__(i0);
    B12:;
    i0 = p1;
    i1 = p2;
    i0 = i0 != i1;
    if (i0) {goto L11;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  goto B9;
  B10:;
  i0 = p1;
  p2 = i0;
  B9:;
  i0 = p3;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  operator_delete_void__(i0);
  B2:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 72));
  p1 = i0;
  i0 = !(i0);
  if (i0) {goto B13;}
  i0 = l0;
  i1 = 76u;
  i0 += i1;
  p3 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  i1 = p1;
  i0 = i0 == i1;
  if (i0) {goto B15;}
  L16: vm_checktime();
    i0 = p2;
    i1 = 4294967272u;
    i0 += i1;
    p2 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    p0 = i0;
    i0 = p2;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p0;
    i0 = !(i0);
    if (i0) {goto B17;}
    i0 = p0;
    operator_delete_void__(i0);
    B17:;
    i0 = p1;
    i1 = p2;
    i0 = i0 != i1;
    if (i0) {goto L16;}
  i0 = l0;
  i1 = 72u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  p2 = i0;
  goto B14;
  B15:;
  i0 = p1;
  p2 = i0;
  B14:;
  i0 = p3;
  i1 = p1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  operator_delete_void__(i0);
  B13:;
  i0 = l0;
  i1 = 128u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void auto_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___const_iterator_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___emplace_eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6__eosio__name__eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6______lambda__eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6____operator___eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const______6___const(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l4 = 0, l5 = 0, l7 = 0, l8 = 0;
  u64 l2 = 0, l3 = 0, l6 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  u64 j0, j1, j2, j3, j4, j5;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  l1 = i0;
  i0 = l0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  i0 = i32_load((&M0), (u64)(i0));
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l3 = j0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  i0 = 0u;
  l5 = i0;
  L2: vm_checktime();
    j0 = l3;
    i0 = (u32)(j0);
    i1 = 24u;
    i0 <<= (i1 & 31);
    i1 = 3221225471u;
    i0 += i1;
    i1 = 452984830u;
    i0 = i0 > i1;
    if (i0) {goto B1;}
    j0 = l3;
    j1 = 8ull;
    j0 >>= (j1 & 63);
    l6 = j0;
    j0 = l3;
    j1 = 65280ull;
    j0 &= j1;
    j1 = 0ull;
    i0 = j0 == j1;
    if (i0) {goto B3;}
    j0 = l6;
    l3 = j0;
    i0 = l5;
    l7 = i0;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    i0 = l7;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L2;}
    goto B0;
    B3:;
    j0 = l6;
    l3 = j0;
    L4: vm_checktime();
      j0 = l3;
      j1 = 65280ull;
      j0 &= j1;
      j1 = 0ull;
      i0 = j0 != j1;
      if (i0) {goto B1;}
      j0 = l3;
      j1 = 8ull;
      j0 >>= (j1 & 63);
      l3 = j0;
      i0 = l5;
      i1 = 6u;
      i0 = (u32)((s32)i0 < (s32)i1);
      l7 = i0;
      i0 = l5;
      i1 = 1u;
      i0 += i1;
      l8 = i0;
      l5 = i0;
      i0 = l7;
      if (i0) {goto L4;}
    i0 = l8;
    i1 = 1u;
    i0 += i1;
    l5 = i0;
    i0 = l8;
    i1 = 6u;
    i0 = (u32)((s32)i0 < (s32)i1);
    if (i0) {goto L2;}
    goto B0;
  B1:;
  i0 = 0u;
  i1 = 11051u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = p1;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p1;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  l7 = i0;
  i1 = 4294967280u;
  i0 += i1;
  l5 = i0;
  g0 = i0;
  i0 = l5;
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l7;
  i1 = 4294967288u;
  i0 += i1;
  i1 = l1;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i1 = l4;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  j2 = 3607749779137757184ull;
  i3 = p0;
  i3 = i32_load((&M0), (u64)(i3 + 8));
  j3 = i64_load((&M0), (u64)(i3));
  i4 = p1;
  j4 = i64_load((&M0), (u64)(i4 + 8));
  j5 = 8ull;
  j4 >>= (j5 & 63);
  l3 = j4;
  i5 = l5;
  i6 = 16u;
  i1 = (*Z_envZ_db_store_i64Z_ijjjjii)(j1, j2, j3, j4, i5, i6);
  i32_store((&M0), (u64)(i0 + 20), i1);
  j0 = l3;
  i1 = l4;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i0 = j0 < j1;
  if (i0) {goto B5;}
  i0 = l4;
  i1 = 16u;
  i0 += i1;
  j1 = l3;
  j2 = 1ull;
  j1 += j2;
  i64_store((&M0), (u64)(i0), j1);
  B5:;
  i0 = l1;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void eosio__token__close_eosio__name_const___eosio__symbol_const__(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0, l3 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2, j3, j4;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0));
  (*Z_envZ_require_authZ_vj)(j0);
  i0 = 0u;
  l1 = i0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  l2 = j1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1));
  l3 = j1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  j0 = l2;
  j1 = l3;
  j2 = 3607749779137757184ull;
  i3 = p2;
  j3 = i64_load((&M0), (u64)(i3));
  j4 = 8ull;
  j3 >>= (j4 & 63);
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  p1 = i0;
  i1 = 4294967295u;
  i0 = (u32)((s32)i0 <= (s32)i1);
  if (i0) {goto B2;}
  i0 = l0;
  i1 = p1;
  i0 = eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___load_object_by_primary_iterator_int__const(i0, i1);
  l1 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i0 = i0 == i1;
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 17264u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B3:;
  i0 = l1;
  j0 = i64_load((&M0), (u64)(i0));
  i0 = !(j0);
  if (i0) {goto B0;}
  goto B1;
  B2:;
  i0 = 0u;
  i1 = 16659u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  j0 = i64_load((&M0), (u64)(i0));
  i0 = !(j0);
  if (i0) {goto B0;}
  B1:;
  i0 = 0u;
  i1 = 16794u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  i0 = l1;
  if (i0) {goto B4;}
  i0 = 0u;
  i1 = 18626u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 0u;
  i1 = 18738u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B4:;
  i0 = l1;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  i1 = l0;
  i2 = 40u;
  i1 += i2;
  i0 = (*Z_envZ_db_next_i64Z_iii)(i0, i1);
  p1 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B5;}
  i0 = l0;
  i1 = p1;
  i0 = eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___load_object_by_primary_iterator_int__const(i0, i1);
  B5:;
  i0 = l0;
  i1 = l1;
  eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___erase_eosio__token__account_const__(i0, i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  p2 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  i0 = l0;
  i1 = 28u;
  i0 += i1;
  p0 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i1 = p2;
  i0 = i0 == i1;
  if (i0) {goto B8;}
  L9: vm_checktime();
    i0 = l1;
    i1 = 4294967272u;
    i0 += i1;
    l1 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    p1 = i0;
    i0 = l1;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = p1;
    i0 = !(i0);
    if (i0) {goto B10;}
    i0 = p1;
    operator_delete_void__(i0);
    B10:;
    i0 = p2;
    i1 = l1;
    i0 = i0 != i1;
    if (i0) {goto L9;}
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  goto B7;
  B8:;
  i0 = p2;
  l1 = i0;
  B7:;
  i0 = p0;
  i1 = p2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l1;
  operator_delete_void__(i0);
  B6:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___erase_eosio__token__account_const__(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l5 = 0, l6 = 0, l7 = 0;
  u64 l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 18817u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 == j1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 18945u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B1:;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 24));
  l0 = i0;
  i1 = p0;
  i2 = 28u;
  i1 += i2;
  l1 = i1;
  i1 = i32_load((&M0), (u64)(i1));
  l2 = i1;
  i0 = i0 == i1;
  if (i0) {goto B7;}
  i0 = l2;
  l3 = i0;
  i0 = l2;
  i1 = 4294967272u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  j0 = i64_load((&M0), (u64)(i0 + 8));
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  l4 = j1;
  j0 ^= j1;
  j1 = 256ull;
  i0 = j0 < j1;
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  l5 = i0;
  i0 = l2;
  l6 = i0;
  L9: vm_checktime();
    i0 = l5;
    i1 = l6;
    i0 = i0 == i1;
    if (i0) {goto B7;}
    i0 = l6;
    i1 = 4294967248u;
    i0 += i1;
    l7 = i0;
    i0 = l6;
    i1 = 4294967272u;
    i0 += i1;
    l3 = i0;
    l6 = i0;
    i0 = l7;
    i0 = i32_load((&M0), (u64)(i0));
    j0 = i64_load((&M0), (u64)(i0 + 8));
    j1 = l4;
    j0 ^= j1;
    j1 = 256ull;
    i0 = j0 >= j1;
    if (i0) {goto L9;}
  B8:;
  i0 = l0;
  i1 = l3;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  i0 = 4294967272u;
  l7 = i0;
  i0 = l3;
  i1 = l2;
  i0 = i0 == i1;
  if (i0) {goto B5;}
  goto B4;
  B7:;
  i0 = l0;
  l3 = i0;
  B6:;
  i0 = 0u;
  i1 = 19024u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = 4294967272u;
  l7 = i0;
  i0 = l3;
  i1 = l1;
  i1 = i32_load((&M0), (u64)(i1));
  l2 = i1;
  i0 = i0 != i1;
  if (i0) {goto B4;}
  B5:;
  i0 = l3;
  i1 = l7;
  i0 += i1;
  l5 = i0;
  goto B3;
  B4:;
  i0 = l3;
  l6 = i0;
  L10: vm_checktime();
    i0 = l6;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i0 = l6;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    i1 = l7;
    i0 += i1;
    l0 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l3 = i0;
    i0 = l0;
    i1 = l5;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l3;
    i0 = !(i0);
    if (i0) {goto B11;}
    i0 = l3;
    operator_delete_void__(i0);
    B11:;
    i0 = l6;
    i1 = 4294967288u;
    i0 += i1;
    i1 = l6;
    i2 = 16u;
    i1 += i2;
    i1 = i32_load((&M0), (u64)(i1));
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    i1 = 4294967280u;
    i0 += i1;
    i1 = l6;
    i2 = 8u;
    i1 += i2;
    j1 = i64_load((&M0), (u64)(i1));
    i64_store((&M0), (u64)(i0), j1);
    i0 = l2;
    i1 = l6;
    i2 = 24u;
    i1 += i2;
    l6 = i1;
    i0 = i0 != i1;
    if (i0) {goto L10;}
  i0 = l6;
  i1 = 4294967272u;
  i0 += i1;
  l5 = i0;
  i0 = p0;
  i1 = 28u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i1 = 24u;
  i0 += i1;
  i1 = l6;
  i0 = i0 == i1;
  if (i0) {goto B2;}
  B3:;
  L12: vm_checktime();
    i0 = l3;
    i1 = l7;
    i0 += i1;
    l3 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l6 = i0;
    i0 = l3;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l6;
    i0 = !(i0);
    if (i0) {goto B13;}
    i0 = l6;
    operator_delete_void__(i0);
    B13:;
    i0 = l5;
    i1 = l3;
    i0 = i0 != i1;
    if (i0) {goto L12;}
  B2:;
  i0 = p0;
  i1 = 28u;
  i0 += i1;
  i1 = l5;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  (*Z_envZ_db_remove_i64Z_vi)(i0);
  FUNC_EPILOGUE;
}

static void token_create(u64 p0, u64 p1, u64 p2) {
  u32 l0 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  i0 = g0;
  i1 = 64u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l1 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l2 = j0;
  i0 = l0;
  i1 = 56u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 40), j1);
  i0 = l0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 48), j1);
  i0 = l0;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  eosio__token__create_eosio__name_const___eosio__asset_const__(i0, i1, i2);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void token_issue(u64 p0, u64 p1, u64 p2, u32 p3, u32 p4) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  u64 l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 80u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 72u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 64), j1);
  i0 = p4;
  i1 = 4294967280u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = p4;
  i1 = 11u;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = p4;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 64), i1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  i1 = 1u;
  i0 |= i1;
  l1 = i0;
  i0 = p4;
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = p4;
  i1 = 16u;
  i0 += i1;
  i1 = 4294967280u;
  i0 &= i1;
  l2 = i0;
  i0 = operator_new_unsigned_int_(i0);
  l1 = i0;
  i0 = l0;
  i1 = l2;
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 64), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 72), i1);
  i0 = l0;
  i1 = p4;
  i32_store((&M0), (u64)(i0 + 68), i1);
  B2:;
  i0 = l1;
  i1 = p3;
  i2 = p4;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B1:;
  i0 = l1;
  i1 = p4;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l4 = j0;
  i0 = l0;
  i1 = 56u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = l4;
  i64_store((&M0), (u64)(i0 + 40), j1);
  i0 = l0;
  j1 = l3;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 48), j1);
  i0 = l0;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = 16u;
  i2 += i3;
  i3 = l0;
  i4 = 64u;
  i3 += i4;
  eosio__token__issue_eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const__(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 64));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 72));
  operator_delete_void__(i0);
  B4:;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  std____1____basic_string_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void token_transfer(u64 p0, u64 p1, u64 p2, u64 p3, u32 p4, u32 p5) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  u64 l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5;
  u64 j0, j1;
  i0 = g0;
  i1 = 80u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 72u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 64), j1);
  i0 = p5;
  i1 = 4294967280u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = p5;
  i1 = 11u;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = p5;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 64), i1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  i1 = 1u;
  i0 |= i1;
  l1 = i0;
  i0 = p5;
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = p5;
  i1 = 16u;
  i0 += i1;
  i1 = 4294967280u;
  i0 &= i1;
  l2 = i0;
  i0 = operator_new_unsigned_int_(i0);
  l1 = i0;
  i0 = l0;
  i1 = l2;
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 64), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 72), i1);
  i0 = l0;
  i1 = p5;
  i32_store((&M0), (u64)(i0 + 68), i1);
  B2:;
  i0 = l1;
  i1 = p4;
  i2 = p5;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B1:;
  i0 = l1;
  i1 = p5;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l4 = j0;
  i0 = l0;
  i1 = 56u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = l4;
  i64_store((&M0), (u64)(i0 + 40), j1);
  i0 = l0;
  j1 = l3;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 48), j1);
  i0 = l0;
  j1 = p3;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = l0;
  i3 = l0;
  i4 = 16u;
  i3 += i4;
  i4 = l0;
  i5 = 64u;
  i4 += i5;
  eosio__token__transfer_eosio__name_const___eosio__name_const___eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const__(i0, i1, i2, i3, i4);
  i0 = l0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 64));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 72));
  operator_delete_void__(i0);
  B4:;
  i0 = l0;
  i1 = 80u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  std____1____basic_string_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void token_open(u64 p0, u64 p1, u64 p2) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4;
  u64 j0, j1;
  i0 = g0;
  i1 = 64u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 56), j1);
  j0 = (*Z_envZ_current_receiverZ_jv)();
  p1 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l1 = j0;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 40), j1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = p2;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  i1 = 24u;
  i0 += i1;
  i1 = l0;
  i2 = 16u;
  i1 += i2;
  i2 = l0;
  i3 = 56u;
  i2 += i3;
  i3 = l0;
  i4 = 8u;
  i3 += i4;
  eosio__token__open_eosio__name_const___eosio__symbol_const___eosio__name_const__(i0, i1, i2, i3);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void token_retire(u64 p0, u64 p1, u32 p2, u32 p3) {
  u32 l0 = 0, l1 = 0, l2 = 0;
  u64 l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  i0 = g0;
  i1 = 64u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = 56u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 48), j1);
  i0 = p3;
  i1 = 4294967280u;
  i0 = i0 >= i1;
  if (i0) {goto B0;}
  i0 = p3;
  i1 = 11u;
  i0 = i0 >= i1;
  if (i0) {goto B3;}
  i0 = l0;
  i1 = p3;
  i2 = 1u;
  i1 <<= (i2 & 31);
  i32_store8((&M0), (u64)(i0 + 48), i1);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  i1 = 1u;
  i0 |= i1;
  l1 = i0;
  i0 = p3;
  if (i0) {goto B2;}
  goto B1;
  B3:;
  i0 = p3;
  i1 = 16u;
  i0 += i1;
  i1 = 4294967280u;
  i0 &= i1;
  l2 = i0;
  i0 = operator_new_unsigned_int_(i0);
  l1 = i0;
  i0 = l0;
  i1 = l2;
  i2 = 1u;
  i1 |= i2;
  i32_store((&M0), (u64)(i0 + 48), i1);
  i0 = l0;
  i1 = l1;
  i32_store((&M0), (u64)(i0 + 56), i1);
  i0 = l0;
  i1 = p3;
  i32_store((&M0), (u64)(i0 + 52), i1);
  B2:;
  i0 = l1;
  i1 = p2;
  i2 = p3;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  B1:;
  i0 = l1;
  i1 = p3;
  i0 += i1;
  i1 = 0u;
  i32_store8((&M0), (u64)(i0), i1);
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l3 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l4 = j0;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = l4;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = l3;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  i1 = l0;
  i2 = l0;
  i3 = 48u;
  i2 += i3;
  eosio__token__retire_eosio__asset_const___std____1__basic_string_char__std____1__char_traits_char___std____1__allocator_char____const__(i0, i1, i2);
  i0 = l0;
  i0 = i32_load8_u((&M0), (u64)(i0 + 48));
  i1 = 1u;
  i0 &= i1;
  i0 = !(i0);
  if (i0) {goto B4;}
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 56));
  operator_delete_void__(i0);
  B4:;
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  g0 = i0;
  goto Bfunc;
  B0:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  std____1____basic_string_common_true_____throw_length_error___const(i0);
  UNREACHABLE;
  Bfunc:;
  FUNC_EPILOGUE;
}

static void token_close(u64 p0, u64 p1) {
  u32 l0 = 0;
  u64 l1 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 40), j1);
  j0 = (*Z_envZ_current_receiverZ_jv)();
  p1 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l1 = j0;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l0;
  i2 = l0;
  i3 = 40u;
  i2 += i3;
  eosio__token__close_eosio__name_const___eosio__symbol_const__(i0, i1, i2);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static u64 token_get_balance(u64 p0, u32 p1) {
  u32 l0 = 0, l3 = 0, l4 = 0, l5 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j0, j1, j2, j3;
  i0 = g0;
  i1 = 48u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l1 = j0;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = l1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  j0 = 0ull;
  l2 = j0;
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = p1;
  i0 = strlen_0(i0);
  l3 = i0;
  i1 = 8u;
  i0 = i0 < i1;
  if (i0) {goto B2;}
  i0 = 0u;
  i1 = 16938u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  goto B1;
  B2:;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B0;}
  B1:;
  j0 = 0ull;
  l2 = j0;
  L3: vm_checktime();
    i0 = p1;
    i1 = l3;
    i0 += i1;
    i1 = 4294967295u;
    i0 += i1;
    l4 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    i1 = 4294967231u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 26u;
    i0 = i0 < i1;
    if (i0) {goto B4;}
    i0 = 0u;
    i1 = 17030u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    B4:;
    j0 = l2;
    j1 = 8ull;
    j0 <<= (j1 & 63);
    i1 = l5;
    j1 = (u64)(i1);
    j2 = 56ull;
    j1 <<= (j2 & 63);
    j2 = 56ull;
    j1 = (u64)((s64)j1 >> (j2 & 63));
    j0 |= j1;
    l2 = j0;
    i0 = l3;
    i1 = 4294967295u;
    i0 += i1;
    l3 = i0;
    if (i0) {goto L3;}
  j0 = l2;
  j1 = 72057594037927935ull;
  j0 &= j1;
  l2 = j0;
  B0:;
  j0 = l1;
  j1 = p0;
  j2 = 3607749779137757184ull;
  j3 = l2;
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l3 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l3;
  i0 = eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___load_object_by_primary_iterator_int__const(i0, i1);
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = 0u;
  i1 = 17264u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B9:;
  i0 = l3;
  j0 = i64_load((&M0), (u64)(i0));
  l2 = j0;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  l4 = i0;
  i0 = !(i0);
  if (i0) {goto B7;}
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p1 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i1 = l4;
  i0 = i0 == i1;
  if (i0) {goto B6;}
  L10: vm_checktime();
    i0 = l3;
    i1 = 4294967272u;
    i0 += i1;
    l3 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i0 = l3;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    i0 = !(i0);
    if (i0) {goto B11;}
    i0 = l5;
    operator_delete_void__(i0);
    B11:;
    i0 = l4;
    i1 = l3;
    i0 = i0 != i1;
    if (i0) {goto L10;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  goto B5;
  B8:;
  j0 = 0ull;
  l2 = j0;
  B7:;
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  j0 = l2;
  goto Bfunc;
  B6:;
  i0 = l4;
  l3 = i0;
  B5:;
  i0 = p1;
  i1 = l4;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  operator_delete_void__(i0);
  i0 = l0;
  i1 = 48u;
  i0 += i1;
  g0 = i0;
  j0 = l2;
  Bfunc:;
  FUNC_EPILOGUE;
  return j0;
}

static void token_set_balance(u64 p0, u64 p1, u32 p2) {
  u32 l0 = 0, l3 = 0, l4 = 0, l5 = 0;
  u64 l1 = 0, l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3, i4, i5, i6;
  u64 j0, j1, j2, j3, j4, j5;
  i0 = g0;
  i1 = 96u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 48), j1);
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l1 = j0;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  l2 = j0;
  i0 = l0;
  i1 = 40u;
  i0 += i1;
  i1 = 0u;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = p0;
  i64_store((&M0), (u64)(i0 + 16), j1);
  i0 = l0;
  j1 = l2;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l0;
  j1 = 18446744073709551615ull;
  i64_store((&M0), (u64)(i0 + 24), j1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 32), j1);
  i0 = p2;
  i0 = strlen_0(i0);
  l3 = i0;
  i1 = 8u;
  i0 = i0 < i1;
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 16938u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  goto B2;
  B3:;
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B1;}
  B2:;
  j0 = 0ull;
  p1 = j0;
  L4: vm_checktime();
    i0 = p2;
    i1 = l3;
    i0 += i1;
    i1 = 4294967295u;
    i0 += i1;
    l4 = i0;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    i1 = 4294967231u;
    i0 += i1;
    i1 = 255u;
    i0 &= i1;
    i1 = 26u;
    i0 = i0 < i1;
    if (i0) {goto B5;}
    i0 = 0u;
    i1 = 17030u;
    (*Z_envZ_eosio_assertZ_vii)(i0, i1);
    i0 = l4;
    i0 = i32_load8_u((&M0), (u64)(i0));
    l5 = i0;
    B5:;
    j0 = p1;
    j1 = 8ull;
    j0 <<= (j1 & 63);
    i1 = l5;
    j1 = (u64)(i1);
    j2 = 56ull;
    j1 <<= (j2 & 63);
    j2 = 56ull;
    j1 = (u64)((s64)j1 >> (j2 & 63));
    j0 |= j1;
    p1 = j0;
    i0 = l3;
    i1 = 4294967295u;
    i0 += i1;
    l3 = i0;
    if (i0) {goto L4;}
  j0 = p1;
  j1 = 8ull;
  j0 <<= (j1 & 63);
  j1 = 4ull;
  j0 |= j1;
  p1 = j0;
  goto B0;
  B1:;
  j0 = 4ull;
  p1 = j0;
  B0:;
  j0 = l2;
  j1 = p0;
  j2 = 3607749779137757184ull;
  j3 = p1;
  j4 = 8ull;
  j3 >>= (j4 & 63);
  i0 = (*Z_envZ_db_find_i64Z_ijjjj)(j0, j1, j2, j3);
  l3 = i0;
  i1 = 0u;
  i0 = (u32)((s32)i0 < (s32)i1);
  if (i0) {goto B8;}
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l3;
  i0 = eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___load_object_by_primary_iterator_int__const(i0, i1);
  l3 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i0 = i0 == i1;
  if (i0) {goto B9;}
  i0 = 0u;
  i1 = 17264u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B9:;
  i0 = l0;
  i1 = l0;
  i2 = 48u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 64), i1);
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l3;
  i2 = l0;
  i3 = 64u;
  i2 += i3;
  void_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___modify_token_set_balance____8__eosio__token__account_const___eosio__name__token_set_balance____8___(i0, i1, i2);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  l4 = i0;
  if (i0) {goto B7;}
  goto B6;
  B8:;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i0 = j0 == j1;
  if (i0) {goto B10;}
  i0 = 0u;
  i1 = 17532u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B10:;
  i0 = 32u;
  i0 = operator_new_unsigned_int_(i0);
  l3 = i0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l3;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l3;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 48));
  i64_store((&M0), (u64)(i0), j1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  i1 = l3;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l0;
  i1 = l3;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 88), j1);
  i0 = l0;
  i1 = 64u;
  i0 += i1;
  i1 = 8u;
  i0 |= i1;
  i1 = l0;
  i2 = 88u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l3;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 3607749779137757184ull;
  j3 = l1;
  i4 = l3;
  j4 = i64_load((&M0), (u64)(i4 + 8));
  j5 = 8ull;
  j4 >>= (j5 & 63);
  p1 = j4;
  i5 = l0;
  i6 = 64u;
  i5 += i6;
  i6 = 16u;
  i1 = (*Z_envZ_db_store_i64Z_ijjjjii)(j1, j2, j3, j4, i5, i6);
  l4 = i1;
  i32_store((&M0), (u64)(i0 + 20), i1);
  j0 = p1;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 16u;
  i1 += i2;
  l5 = i1;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 < j1;
  if (i0) {goto B11;}
  i0 = l5;
  j1 = p1;
  j2 = 1ull;
  j1 += j2;
  i64_store((&M0), (u64)(i0), j1);
  B11:;
  i0 = l0;
  i1 = l3;
  i32_store((&M0), (u64)(i0 + 88), i1);
  i0 = l0;
  i1 = l3;
  i2 = 8u;
  i1 += i2;
  j1 = i64_load((&M0), (u64)(i1));
  j2 = 8ull;
  j1 >>= (j2 & 63);
  p1 = j1;
  i64_store((&M0), (u64)(i0 + 64), j1);
  i0 = l0;
  i1 = l4;
  i32_store((&M0), (u64)(i0 + 60), i1);
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l5 = i0;
  i1 = l0;
  i2 = 8u;
  i1 += i2;
  i2 = 32u;
  i1 += i2;
  i1 = i32_load((&M0), (u64)(i1));
  i0 = i0 >= i1;
  if (i0) {goto B14;}
  i0 = l5;
  j1 = p1;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l5;
  i1 = l4;
  i32_store((&M0), (u64)(i0 + 16), i1);
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 88), i1);
  i0 = l5;
  i1 = l3;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p2;
  i1 = l5;
  i2 = 24u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 88));
  l3 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 88), i1);
  i0 = l3;
  if (i0) {goto B13;}
  goto B12;
  B14:;
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i1 = l0;
  i2 = 88u;
  i1 += i2;
  i2 = l0;
  i3 = 64u;
  i2 += i3;
  i3 = l0;
  i4 = 60u;
  i3 += i4;
  void_std____1__vector_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr__std____1__allocator_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_ptr_______emplace_back_slow_path_std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_____unsigned_long_long___int___std____1__unique_ptr_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item__std____1__default_delete_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___item_______unsigned_long_long_____int____(i0, i1, i2, i3);
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 88));
  l3 = i0;
  i0 = l0;
  i1 = 0u;
  i32_store((&M0), (u64)(i0 + 88), i1);
  i0 = l3;
  i0 = !(i0);
  if (i0) {goto B12;}
  B13:;
  i0 = l3;
  operator_delete_void__(i0);
  B12:;
  i0 = l0;
  i0 = i32_load((&M0), (u64)(i0 + 32));
  l4 = i0;
  i0 = !(i0);
  if (i0) {goto B6;}
  B7:;
  i0 = l0;
  i1 = 36u;
  i0 += i1;
  p2 = i0;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  i1 = l4;
  i0 = i0 == i1;
  if (i0) {goto B16;}
  L17: vm_checktime();
    i0 = l3;
    i1 = 4294967272u;
    i0 += i1;
    l3 = i0;
    i0 = i32_load((&M0), (u64)(i0));
    l5 = i0;
    i0 = l3;
    i1 = 0u;
    i32_store((&M0), (u64)(i0), i1);
    i0 = l5;
    i0 = !(i0);
    if (i0) {goto B18;}
    i0 = l5;
    operator_delete_void__(i0);
    B18:;
    i0 = l4;
    i1 = l3;
    i0 = i0 != i1;
    if (i0) {goto L17;}
  i0 = l0;
  i1 = 32u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  goto B15;
  B16:;
  i0 = l4;
  l3 = i0;
  B15:;
  i0 = p2;
  i1 = l4;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l3;
  operator_delete_void__(i0);
  B6:;
  i0 = l0;
  i1 = 96u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void void_eosio__multi_index__eosio__name__raw_3607749779137757184__eosio__token__account___modify_token_set_balance____8__eosio__token__account_const___eosio__name__token_set_balance____8___(u32 p0, u32 p1, u32 p2) {
  u32 l0 = 0, l1 = 0;
  u64 l2 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2, i3;
  u64 j0, j1, j2;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  l1 = i0;
  i0 = l0;
  g0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 16));
  i1 = p0;
  i0 = i0 == i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 17684u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B0:;
  j0 = (*Z_envZ_current_receiverZ_jv)();
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1));
  i0 = j0 == j1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 17781u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  B1:;
  i0 = p1;
  i1 = p2;
  i1 = i32_load((&M0), (u64)(i1));
  j1 = i64_load((&M0), (u64)(i1));
  i64_store((&M0), (u64)(i0), j1);
  i0 = p1;
  j0 = i64_load((&M0), (u64)(i0 + 8));
  l2 = j0;
  i0 = l0;
  p2 = i0;
  i1 = 4294967280u;
  i0 += i1;
  l0 = i0;
  g0 = i0;
  i0 = l0;
  i1 = p1;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = p1;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = p2;
  i1 = 4294967288u;
  i0 += i1;
  i1 = l1;
  i2 = 8u;
  i1 += i2;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0 + 20));
  j1 = 0ull;
  i2 = l0;
  i3 = 16u;
  (*Z_envZ_db_update_i64Z_vijii)(i0, j1, i2, i3);
  j0 = l2;
  j1 = 8ull;
  j0 >>= (j1 & 63);
  l2 = j0;
  i1 = p0;
  j1 = i64_load((&M0), (u64)(i1 + 16));
  i0 = j0 < j1;
  if (i0) {goto B2;}
  i0 = p0;
  i1 = 16u;
  i0 += i1;
  j1 = l2;
  j2 = 1ull;
  j1 += j2;
  i64_store((&M0), (u64)(i0), j1);
  B2:;
  i0 = l1;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static void void_boost__pfr__detail__for_each_field_impl_boost__pfr__detail__sequence_tuple__tuple_eosio__asset___eosio__asset___eosio__name____eosio__datastream_char_const____eosio__operator___eosio__datastream_char_const____eosio__token__currency_stats___void__0__eosio__datastream_char_const_____eosio__token__currency_stats_____lambda__eosio__datastream_char_const______0u__1u__2u__eosio__datastream_char_const_____eosio__token__currency_stats____std____1__integer_sequence_unsigned_int__0u__1u__2u___std____1__integral_constant_bool__false__(u32 p0, u32 p1) {
  u32 l0 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0;
  FUNC_PROLOGUE;
  u32 i0, i1, i2;
  u64 j1;
  i0 = g0;
  i1 = 16u;
  i0 -= i1;
  l0 = i0;
  g0 = i0;
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0));
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l3 = i1;
  i0 -= i1;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B0;}
  i0 = 0u;
  i1 = 17496u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  B0:;
  i0 = l1;
  i1 = l3;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  l4 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l2;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l4;
  i0 -= i1;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B1;}
  i0 = 0u;
  i1 = 17496u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  B1:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l4;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l3;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 4));
  l1 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l3 = i1;
  i0 -= i1;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B2;}
  i0 = 0u;
  i1 = 17496u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  B2:;
  i0 = l1;
  i1 = l3;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  l3 = i0;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  l4 = i1;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  j1 = 0ull;
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l2;
  i1 = 8u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  i1 = l4;
  i0 -= i1;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B3;}
  i0 = 0u;
  i1 = 17496u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l3;
  i0 = i32_load((&M0), (u64)(i0));
  l4 = i0;
  B3:;
  i0 = l0;
  i1 = 8u;
  i0 += i1;
  i1 = l4;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l1;
  i1 = l0;
  j1 = i64_load((&M0), (u64)(i1 + 8));
  i64_store((&M0), (u64)(i0 + 8), j1);
  i0 = l3;
  i1 = l3;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = p0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  p0 = i0;
  i0 = p1;
  i0 = i32_load((&M0), (u64)(i0));
  l2 = i0;
  i0 = i32_load((&M0), (u64)(i0 + 8));
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1 + 4));
  l3 = i1;
  i0 -= i1;
  i1 = 7u;
  i0 = i0 > i1;
  if (i0) {goto B4;}
  i0 = 0u;
  i1 = 17496u;
  (*Z_envZ_eosio_assertZ_vii)(i0, i1);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  i0 = i32_load((&M0), (u64)(i0));
  l3 = i0;
  B4:;
  i0 = p0;
  i1 = l3;
  i2 = 8u;
  i0 = (*Z_envZ_memcpyZ_iiii)(i0, i1, i2);
  i0 = l2;
  i1 = 4u;
  i0 += i1;
  l2 = i0;
  i1 = l2;
  i1 = i32_load((&M0), (u64)(i1));
  i2 = 8u;
  i1 += i2;
  i32_store((&M0), (u64)(i0), i1);
  i0 = l0;
  i1 = 16u;
  i0 += i1;
  g0 = i0;
  FUNC_EPILOGUE;
}

static const u8 data_segment_data_0[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_1[] = {
  0x00, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x74, 0x28, 0x29, 0x20, 0x61, 0x72, 
  0x67, 0x20, 0x32, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 
  0x3e, 0x3d, 0x20, 0x32, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x3c, 0x3d, 0x20, 
  0x33, 0x36, 0x00, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 
  0x62, 0x6c, 0x65, 0x20, 0x2e, 0x6d, 0x70, 0x79, 0x20, 0x66, 0x69, 0x6c, 
  0x65, 0x00, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x27, 0x25, 0x71, 0x27, 0x20, 
  0x69, 0x73, 0x6e, 0x27, 0x74, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 
  0x64, 0x00, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x64, 
  0x6f, 0x65, 0x73, 0x6e, 0x27, 0x74, 0x20, 0x74, 0x61, 0x6b, 0x65, 0x20, 
  0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x20, 0x61, 0x72, 0x67, 0x75, 
  0x6d, 0x65, 0x6e, 0x74, 0x73, 0x00, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 
  0x67, 0x00, 0x3c, 0x25, 0x71, 0x3e, 0x00, 0x62, 0x79, 0x74, 0x65, 0x61, 
  0x72, 0x72, 0x61, 0x79, 0x28, 0x62, 0x00, 0x28, 0x00, 0x74, 0x72, 0x75, 
  0x65, 0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 0x74, 0x72, 0x75, 0x6e, 
  0x63, 0x61, 0x74, 0x65, 0x2d, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x20, 
  0x61, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x20, 0x6e, 0x75, 
  0x6d, 0x62, 0x65, 0x72, 0x00, 0x64, 0x69, 0x63, 0x74, 0x20, 0x75, 0x70, 
  0x64, 0x61, 0x74, 0x65, 0x20, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 
  0x65, 0x20, 0x68, 0x61, 0x73, 0x20, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 
  0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x00, 0x3a, 0x20, 0x00, 0x64, 0x69, 
  0x76, 0x69, 0x64, 0x65, 0x20, 0x62, 0x79, 0x20, 0x7a, 0x65, 0x72, 0x6f, 
  0x00, 0x3c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x25, 
  0x71, 0x20, 0x61, 0x74, 0x20, 0x30, 0x78, 0x25, 0x70, 0x3e, 0x00, 0x67, 
  0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x72, 
  0x65, 0x61, 0x64, 0x79, 0x20, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 
  0x6e, 0x67, 0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 0x63, 0x6f, 0x6e, 
  0x76, 0x65, 0x72, 0x74, 0x20, 0x69, 0x6e, 0x66, 0x20, 0x74, 0x6f, 0x20, 
  0x69, 0x6e, 0x74, 0x00, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x20, 0x62, 
  0x79, 0x20, 0x7a, 0x65, 0x72, 0x6f, 0x00, 0x70, 0x6f, 0x70, 0x20, 0x66, 
  0x72, 0x6f, 0x6d, 0x20, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x20, 0x6c, 0x69, 
  0x73, 0x74, 0x00, 0x00, 0x61, 0x72, 0x67, 0x20, 0x6d, 0x75, 0x73, 0x74, 
  0x20, 0x62, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x74, 0x79, 0x70, 
  0x65, 0x00, 0x6e, 0x75, 0x6c, 0x6c, 0x00, 0x25, 0x71, 0x00, 0x72, 0x61, 
  0x6e, 0x67, 0x65, 0x28, 0x25, 0x64, 0x2c, 0x20, 0x25, 0x64, 0x00, 0x66, 
  0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x00, 0x25, 0x71, 0x00, 0x73, 0x6c, 0x69, 
  0x63, 0x65, 0x20, 0x73, 0x74, 0x65, 0x70, 0x20, 0x63, 0x61, 0x6e, 0x27, 
  0x74, 0x20, 0x62, 0x65, 0x20, 0x7a, 0x65, 0x72, 0x6f, 0x00, 0x25, 0x63, 
  0x00, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x64, 0x69, 
  0x63, 0x65, 0x73, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 
  0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x73, 0x2c, 0x20, 0x6e, 0x6f, 
  0x74, 0x20, 0x25, 0x73, 0x00, 0x3c, 0x69, 0x6f, 0x2e, 0x53, 0x74, 0x72, 
  0x69, 0x6e, 0x67, 0x49, 0x4f, 0x20, 0x30, 0x78, 0x25, 0x78, 0x3e, 0x00, 
  0x5b, 0x00, 0x5f, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x5f, 0x28, 0x29, 
  0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x72, 0x65, 0x74, 0x75, 
  0x72, 0x6e, 0x20, 0x4e, 0x6f, 0x6e, 0x65, 0x2c, 0x20, 0x6e, 0x6f, 0x74, 
  0x20, 0x27, 0x25, 0x73, 0x27, 0x00, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 
  0x20, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x65, 0x71, 0x75, 
  0x65, 0x6e, 0x63, 0x65, 0x00, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x20, 
  0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6e, 0x6f, 
  0x74, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x00, 
  0x62, 0x61, 0x64, 0x20, 0x74, 0x79, 0x70, 0x65, 0x63, 0x6f, 0x64, 0x65, 
  0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 0x70, 0x65, 0x72, 0x66, 0x6f, 
  0x72, 0x6d, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x20, 
  0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x00, 0x63, 0x68, 0x72, 0x28, 0x29, 
  0x20, 0x61, 0x72, 0x67, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x20, 
  0x72, 0x61, 0x6e, 0x67, 0x65, 0x28, 0x30, 0x78, 0x31, 0x31, 0x30, 0x30, 
  0x30, 0x30, 0x29, 0x00, 0x6d, 0x61, 0x74, 0x68, 0x20, 0x64, 0x6f, 0x6d, 
  0x61, 0x69, 0x6e, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x00, 0x73, 0x63, 
  0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x20, 0x71, 0x75, 0x65, 0x75, 0x65, 
  0x20, 0x66, 0x75, 0x6c, 0x6c, 0x00, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 
  0x20, 0x74, 0x6f, 0x6f, 0x20, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x00, 0x33, 
  0x2e, 0x34, 0x2e, 0x30, 0x00, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x76, 
  0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x72, 0x65, 0x66, 0x65, 
  0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x20, 0x62, 0x65, 0x66, 0x6f, 0x72, 
  0x65, 0x20, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 
  0x00, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x67, 0x6f, 
  0x74, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x20, 0x76, 
  0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x72, 
  0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x27, 0x25, 0x71, 0x27, 0x00, 
  0x73, 0x79, 0x6e, 0x74, 0x61, 0x78, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 
  0x20, 0x69, 0x6e, 0x20, 0x4a, 0x53, 0x4f, 0x4e, 0x00, 0x6f, 0x64, 0x64, 
  0x2d, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x20, 0x73, 0x74, 0x72, 0x69, 
  0x6e, 0x67, 0x00, 0x0d, 0x00, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x20, 
  0x62, 0x79, 0x20, 0x7a, 0x65, 0x72, 0x6f, 0x00, 0x62, 0x61, 0x64, 0x20, 
  0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x2e, 
  0x00, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x70, 0x6f, 0x6f, 
  0x6c, 0x20, 0x69, 0x73, 0x20, 0x66, 0x75, 0x6c, 0x6c, 0x21, 0x00, 0x62, 
  0x75, 0x66, 0x66, 0x65, 0x72, 0x20, 0x69, 0x73, 0x20, 0x74, 0x6f, 0x6f, 
  0x20, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x00, 0x63, 0x61, 0x6e, 0x20, 0x6e, 
  0x6f, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x6f, 
  0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x75, 0x6e, 0x73, 
  0x69, 0x67, 0x6e, 0x65, 0x64, 0x20, 0x6c, 0x6f, 0x6e, 0x67, 0x20, 0x6c, 
  0x6f, 0x6e, 0x67, 0x00, 0x69, 0x6e, 0x74, 0x20, 0x74, 0x6f, 0x6f, 0x20, 
  0x6c, 0x61, 0x72, 0x67, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x63, 0x6f, 0x6e, 
  0x76, 0x65, 0x72, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x6e, 0x61, 0x6d, 0x65, 
  0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x00, 0x63, 0x6f, 0x64, 0x65, 
  0x74, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x2e, 0x31, 0x32, 0x33, 0x34, 0x35, 
  0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 
  0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 
  0x79, 0x7a, 0x00, 0x6e, 0x6c, 0x72, 0x5f, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 
  0x66, 0x61, 0x69, 0x6c, 0x00, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x20, 
  0x74, 0x6f, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x20, 
  0x70, 0x61, 0x67, 0x65, 0x73, 0x00, 0x6c, 0x6f, 0x6e, 0x67, 0x6a, 0x6d, 
  0x70, 0x00, 0xc4, 0xba, 0x05, 0x64, 0x62, 0x2e, 0x70, 0x79, 0x00, 0x69, 
  0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x73, 0x79, 0x6d, 0x62, 0x6f, 
  0x6c, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x00, 
};

static const u8 data_segment_data_2[] = {
  0x05, 0x15, 0x00, 0x00, 0x74, 0x72, 0x75, 0x65, 0x00, 0x69, 0x6e, 0x76, 
  0x61, 0x6c, 0x69, 0x64, 0x20, 0x73, 0x79, 0x6e, 0x74, 0x61, 0x78, 0x20, 
  0x66, 0x6f, 0x72, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x20, 
  0x77, 0x69, 0x74, 0x68, 0x20, 0x62, 0x61, 0x73, 0x65, 0x20, 0x25, 0x64, 
  0x00, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 
  0x65, 0x20, 0x2e, 0x6d, 0x70, 0x79, 0x20, 0x61, 0x72, 0x63, 0x68, 0x00, 
  0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 
  0x74, 0x20, 0x25, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x6e, 0x74, 0x00, 
  0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x61, 0x6b, 
  0x65, 0x73, 0x20, 0x25, 0x64, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 
  0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 
  0x74, 0x73, 0x20, 0x62, 0x75, 0x74, 0x20, 0x25, 0x64, 0x20, 0x77, 0x65, 
  0x72, 0x65, 0x20, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x00, 0x3a, 0x20, 0x00, 
  0x54, 0x72, 0x61, 0x63, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x20, 0x28, 0x6d, 
  0x6f, 0x73, 0x74, 0x20, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x20, 0x63, 
  0x61, 0x6c, 0x6c, 0x20, 0x6c, 0x61, 0x73, 0x74, 0x29, 0x3a, 0x0a, 0x00, 
  0x61, 0x72, 0x72, 0x61, 0x79, 0x28, 0x27, 0x25, 0x63, 0x27, 0x00, 0x2c, 
  0x20, 0x00, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x00, 0x63, 0x6f, 0x6d, 0x70, 
  0x6c, 0x65, 0x78, 0x20, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x20, 0x62, 
  0x79, 0x20, 0x7a, 0x65, 0x72, 0x6f, 0x00, 0x25, 0x71, 0x28, 0x00, 0x00, 
  0x2e, 0x30, 0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 0x73, 0x65, 0x6e, 
  0x64, 0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x4e, 0x6f, 0x6e, 0x65, 0x20, 0x76, 
  0x61, 0x6c, 0x75, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x20, 0x6a, 0x75, 
  0x73, 0x74, 0x2d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x20, 0x67, 
  0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x00, 0x63, 0x61, 0x6e, 
  0x27, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x4e, 
  0x61, 0x4e, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x6e, 0x74, 0x00, 0x6e, 0x65, 
  0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 
  0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x00, 0x5b, 0x00, 0x3c, 0x6d, 0x6f, 
  0x64, 0x75, 0x6c, 0x65, 0x20, 0x27, 0x25, 0x73, 0x27, 0x20, 0x66, 0x72, 
  0x6f, 0x6d, 0x20, 0x27, 0x25, 0x73, 0x27, 0x3e, 0x00, 0x4e, 0x6f, 0x6e, 
  0x65, 0x00, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 
  0x61, 0x6b, 0x65, 0x73, 0x20, 0x25, 0x64, 0x20, 0x70, 0x6f, 0x73, 0x69, 
  0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 
  0x65, 0x6e, 0x74, 0x73, 0x20, 0x62, 0x75, 0x74, 0x20, 0x25, 0x64, 0x20, 
  0x77, 0x65, 0x72, 0x65, 0x20, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x00, 0x29, 
  0x00, 0x73, 0x65, 0x74, 0x28, 0x29, 0x00, 0x73, 0x6c, 0x69, 0x63, 0x65, 
  0x28, 0x00, 0x5c, 0x25, 0x63, 0x00, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 
  0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x6f, 
  0x66, 0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x00, 0x3c, 0x69, 0x6f, 0x2e, 
  0x42, 0x79, 0x74, 0x65, 0x73, 0x49, 0x4f, 0x20, 0x30, 0x78, 0x25, 0x78, 
  0x3e, 0x00, 0x28, 0x00, 0x27, 0x25, 0x73, 0x27, 0x20, 0x6f, 0x62, 0x6a, 
  0x65, 0x63, 0x74, 0x20, 0x69, 0x73, 0x6e, 0x27, 0x74, 0x20, 0x63, 0x61, 
  0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x6e, 0x6f, 0x20, 0x6d, 0x6f, 
  0x64, 0x75, 0x6c, 0x65, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x20, 0x27, 
  0x25, 0x71, 0x27, 0x00, 0x61, 0x72, 0x67, 0x20, 0x69, 0x73, 0x20, 0x61, 
  0x6e, 0x20, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x20, 0x73, 0x65, 0x71, 0x75, 
  0x65, 0x6e, 0x63, 0x65, 0x00, 0x6e, 0x6f, 0x20, 0x61, 0x63, 0x74, 0x69, 
  0x76, 0x65, 0x20, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 
  0x20, 0x74, 0x6f, 0x20, 0x72, 0x65, 0x72, 0x61, 0x69, 0x73, 0x65, 0x00, 
  0x75, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x20, 0x6b, 
  0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 
  0x65, 0x6e, 0x74, 0x20, 0x27, 0x25, 0x71, 0x27, 0x00, 0x62, 0x79, 0x74, 
  0x65, 0x73, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 
  0x20, 0x31, 0x36, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x6c, 0x6f, 
  0x6e, 0x67, 0x00, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x20, 0x72, 0x65, 0x73, 
  0x74, 0x72, 0x69, 0x63, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x63, 0x63, 
  0x6f, 0x75, 0x6e, 0x74, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x21, 0x00, 0x70, 
  0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x66, 
  0x6f, 0x75, 0x6e, 0x64, 0x21, 0x00, 0x77, 0x72, 0x69, 0x74, 0x65, 0x00, 
  0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 
  0x20, 0x62, 0x65, 0x20, 0x38, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x6c, 
  0x6f, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 
  0x72, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x20, 0x6e, 0x61, 0x6d, 0x65, 
  0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x00, 0x63, 0x6f, 0x64, 0x65, 
  0x63, 0x61, 0x63, 0x68, 0x65, 0x00, 0x77, 0x72, 0x69, 0x74, 0x65, 0x00, 
  0x62, 0x61, 0x64, 0x20, 0x65, 0x78, 0x65, 0x63, 0x20, 0x61, 0x63, 0x74, 
  0x69, 0x6f, 0x6e, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x00, 0xfd, 0xd1, 0x04, 
  0x6a, 0x73, 0x6f, 0x6e, 0x00, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 
  0x20, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x00, 
};

static const u8 data_segment_data_3[] = {
  0x7a, 0x8f, 0x07, 0x5f, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x5f, 0x00, 0x66, 
  0x61, 0x6c, 0x73, 0x65, 0x00, 0x00, 0x75, 0x6e, 0x73, 0x75, 0x70, 0x70, 
  0x6f, 0x72, 0x74, 0x65, 0x64, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x66, 
  0x6f, 0x72, 0x20, 0x25, 0x71, 0x3a, 0x20, 0x27, 0x25, 0x73, 0x27, 0x00, 
  0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6d, 0x69, 0x73, 
  0x73, 0x69, 0x6e, 0x67, 0x20, 0x25, 0x64, 0x20, 0x72, 0x65, 0x71, 0x75, 
  0x69, 0x72, 0x65, 0x64, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 
  0x6e, 0x61, 0x6c, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 
  0x73, 0x00, 0x0a, 0x00, 0x20, 0x20, 0x46, 0x69, 0x6c, 0x65, 0x20, 0x22, 
  0x25, 0x71, 0x22, 0x2c, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x25, 0x64, 
  0x00, 0x2c, 0x20, 0x5b, 0x00, 0x25, 0x71, 0x3d, 0x00, 0x54, 0x72, 0x75, 
  0x65, 0x00, 0x30, 0x2e, 0x30, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x20, 0x63, 
  0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x20, 0x70, 0x6f, 0x77, 0x65, 0x72, 
  0x00, 0x7b, 0x00, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 
  0x20, 0x72, 0x61, 0x69, 0x73, 0x65, 0x64, 0x20, 0x53, 0x74, 0x6f, 0x70, 
  0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x70, 0x6f, 
  0x77, 0x28, 0x29, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x33, 0x20, 0x61, 
  0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x72, 0x65, 0x71, 
  0x75, 0x69, 0x72, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 
  0x72, 0x73, 0x00, 0x2c, 0x20, 0x00, 0x3c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 
  0x65, 0x20, 0x27, 0x25, 0x73, 0x27, 0x3e, 0x00, 0x75, 0x6e, 0x65, 0x78, 
  0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x20, 0x6b, 0x65, 0x79, 0x77, 0x6f, 
  0x72, 0x64, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x20, 
  0x27, 0x25, 0x71, 0x27, 0x00, 0x2c, 0x20, 0x25, 0x64, 0x29, 0x00, 0x66, 
  0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x73, 0x65, 0x74, 0x28, 0x00, 0x2c, 0x20, 
  0x00, 0x5c, 0x5c, 0x00, 0x25, 0x2e, 0x2a, 0x73, 0x00, 0x49, 0x2f, 0x4f, 
  0x20, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 
  0x6e, 0x20, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x20, 0x66, 0x69, 0x6c, 
  0x65, 0x00, 0x2c, 0x20, 0x00, 0x74, 0x79, 0x70, 0x65, 0x20, 0x27, 0x25, 
  0x71, 0x27, 0x20, 0x69, 0x73, 0x6e, 0x27, 0x74, 0x20, 0x61, 0x6e, 0x20, 
  0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x62, 
  0x61, 0x73, 0x65, 0x20, 0x74, 0x79, 0x70, 0x65, 0x00, 0x5f, 0x5f, 0x69, 
  0x6e, 0x69, 0x74, 0x5f, 0x5f, 0x2e, 0x70, 0x79, 0x00, 0x6f, 0x72, 0x64, 
  0x28, 0x29, 0x20, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x20, 
  0x61, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2c, 
  0x20, 0x62, 0x75, 0x74, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 
  0x6f, 0x66, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x20, 0x25, 0x64, 
  0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x00, 0x65, 0x78, 0x63, 0x65, 0x70, 
  0x74, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x69, 0x6e, 
  0x67, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 
  0x74, 0x65, 0x64, 0x00, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 
  0x20, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x72, 0x65, 0x71, 
  0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 
  0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 
  0x74, 0x20, 0x23, 0x25, 0x64, 0x00, 0x77, 0x72, 0x69, 0x74, 0x65, 0x00, 
  0x72, 0x65, 0x61, 0x64, 0x00, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x61, 
  0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 
  0x00, 0x2b, 0x2b, 0x2b, 0x2b, 0x76, 0x6d, 0x20, 0x76, 0x65, 0x72, 0x73, 
  0x69, 0x6f, 0x6e, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 
  0x73, 0x61, 0x6d, 0x65, 0x00, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 
  0x20, 0x66, 0x72, 0x65, 0x65, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 
  0x73, 0x20, 0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x68, 0x61, 0x76, 
  0x65, 0x20, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 
  0x69, 0x6f, 0x6e, 0x73, 0x00, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x20, 0x63, 
  0x6f, 0x64, 0x65, 0x21, 0x00, 0x12, 0x90, 0x06, 0x73, 0x74, 0x72, 0x75, 
  0x63, 0x74, 0x00, 0x6d, 0x61, 0x78, 0x2d, 0x73, 0x75, 0x70, 0x70, 0x6c, 
  0x79, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x70, 0x6f, 
  0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x00, 
};

static const u8 data_segment_data_4[] = {
  0xaf, 0xb5, 0x01, 0x0a, 0x00, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 
  0x20, 0x73, 0x79, 0x6e, 0x74, 0x61, 0x78, 0x20, 0x66, 0x6f, 0x72, 0x20, 
  0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x00, 0x6e, 0x65, 0x67, 0x61, 0x74, 
  0x69, 0x76, 0x65, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x63, 0x6f, 
  0x75, 0x6e, 0x74, 0x00, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 
  0x20, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x20, 0x61, 0x74, 
  0x20, 0x6d, 0x6f, 0x73, 0x74, 0x20, 0x25, 0x64, 0x20, 0x61, 0x72, 0x67, 
  0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2c, 0x20, 0x67, 0x6f, 0x74, 0x20, 
  0x25, 0x64, 0x00, 0x0a, 0x00, 0x2c, 0x20, 0x00, 0x29, 0x00, 0x46, 0x61, 
  0x6c, 0x73, 0x65, 0x00, 0x25, 0x73, 0x6a, 0x00, 0x2c, 0x20, 0x00, 0x3c, 
  0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x6f, 0x62, 
  0x6a, 0x65, 0x63, 0x74, 0x20, 0x27, 0x25, 0x71, 0x27, 0x20, 0x61, 0x74, 
  0x20, 0x25, 0x70, 0x3e, 0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 0x63, 
  0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x25, 0x73, 0x20, 0x74, 0x6f, 
  0x20, 0x73, 0x74, 0x72, 0x00, 0x6f, 0x76, 0x65, 0x72, 0x66, 0x6c, 0x6f, 
  0x77, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 
  0x20, 0x6c, 0x6f, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x74, 0x6f, 
  0x20, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x20, 0x77, 0x6f, 0x72, 
  0x64, 0x00, 0x5d, 0x00, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 
  0x20, 0x67, 0x6f, 0x74, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 
  0x65, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x72, 
  0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x27, 0x25, 
  0x71, 0x27, 0x00, 0x7a, 0x65, 0x72, 0x6f, 0x20, 0x73, 0x74, 0x65, 0x70, 
  0x00, 0x7b, 0x00, 0x29, 0x00, 0x5c, 0x6e, 0x00, 0x25, 0x63, 0x00, 0x5d, 
  0x00, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x20, 0x62, 0x61, 
  0x73, 0x65, 0x73, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x69, 0x6e, 0x73, 
  0x74, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x6c, 0x61, 0x79, 0x2d, 0x6f, 0x75, 
  0x74, 0x20, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x00, 0x63, 
  0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x00, 0x0a, 0x00, 0x6f, 0x70, 
  0x63, 0x6f, 0x64, 0x65, 0x00, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 
  0x6e, 0x20, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x72, 0x65, 
  0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x6b, 0x65, 0x79, 0x77, 0x6f, 
  0x72, 0x64, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x20, 
  0x27, 0x25, 0x71, 0x27, 0x00, 0x6e, 0x6f, 0x6e, 0x2d, 0x68, 0x65, 0x78, 
  0x20, 0x64, 0x69, 0x67, 0x69, 0x74, 0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 
  0x00, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x20, 0x61, 0x20, 0x62, 
  0x79, 0x74, 0x65, 0x73, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x00, 
  0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 
  0x31, 0x32, 0x38, 0x3a, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x61, 0x72, 
  0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x00, 
  0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x20, 0x61, 0x20, 0x62, 0x79, 
  0x74, 0x65, 0x73, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x00, 0x62, 
  0x61, 0x64, 0x20, 0x73, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x61, 
  0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x00, 0x12, 
  0xab, 0x05, 0x69, 0x64, 0x78, 0x36, 0x34, 0x00, 0x74, 0x6f, 0x6b, 0x65, 
  0x6e, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x73, 0x79, 0x6d, 0x62, 0x6f, 
  0x6c, 0x20, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x20, 0x65, 0x78, 
  0x69, 0x73, 0x74, 0x73, 0x00, 
};

static const u8 data_segment_data_5[] = {
  0x85, 0xb5, 0x01, 0x20, 0x00, 0x75, 0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 
  0x72, 0x74, 0x65, 0x64, 0x20, 0x74, 0x79, 0x70, 0x65, 0x73, 0x20, 0x66, 
  0x6f, 0x72, 0x20, 0x25, 0x71, 0x3a, 0x20, 0x27, 0x25, 0x73, 0x27, 0x2c, 
  0x20, 0x27, 0x25, 0x73, 0x27, 0x00, 0x27, 0x25, 0x71, 0x27, 0x20, 0x61, 
  0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x72, 0x65, 0x71, 0x75, 
  0x69, 0x72, 0x65, 0x64, 0x00, 0x2c, 0x20, 0x69, 0x6e, 0x20, 0x25, 0x71, 
  0x0a, 0x00, 0x5d, 0x00, 0x28, 0x25, 0x73, 0x00, 0x22, 0x00, 0x63, 0x61, 
  0x6e, 0x27, 0x74, 0x20, 0x73, 0x65, 0x74, 0x20, 0x61, 0x74, 0x74, 0x72, 
  0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x2c, 0x20, 0x00, 0x5c, 0x72, 0x00, 
  0x5c, 0x25, 0x63, 0x00, 0x2c, 0x00, 0x3c, 0x63, 0x6c, 0x61, 0x73, 0x73, 
  0x20, 0x27, 0x25, 0x71, 0x27, 0x3e, 0x00, 0x61, 0x70, 0x70, 0x6c, 0x79, 
  0x00, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x75, 0x73, 0x65, 0x20, 0x6b, 0x65, 
  0x79, 0x77, 0x6f, 0x72, 0x64, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 
  0x6e, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x66, 
  0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x66, 0x75, 0x6e, 0x63, 
  0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 
  0x20, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x2d, 0x6f, 0x6e, 0x6c, 
  0x79, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x00, 0x62, 
  0x79, 0x74, 0x65, 0x73, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x65, 0x78, 
  0x61, 0x63, 0x74, 0x6c, 0x79, 0x20, 0x31, 0x36, 0x20, 0x73, 0x69, 0x7a, 
  0x65, 0x20, 0x6c, 0x6f, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 0x63, 0x6f, 
  0x6e, 0x76, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x20, 0x66, 0x6c, 
  0x6f, 0x61, 0x74, 0x31, 0x32, 0x38, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 
  0x74, 0x00, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x61, 0x72, 0x67, 0x75, 
  0x6d, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x00, 0x6f, 0x62, 
  0x6a, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x32, 0x35, 0x36, 0x3a, 0x77, 0x72, 
  0x6f, 0x6e, 0x67, 0x20, 0x69, 0x64, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x21, 
  0x00, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 
  0x65, 0x78, 0x61, 0x63, 0x74, 0x6c, 0x79, 0x20, 0x38, 0x20, 0x73, 0x69, 
  0x7a, 0x65, 0x20, 0x6c, 0x6f, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 0x63, 
  0x6f, 0x6e, 0x76, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x20, 0x6e, 
  0x61, 0x6d, 0x65, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x00, 0x62, 
  0x61, 0x64, 0x20, 0x65, 0x78, 0x65, 0x63, 0x20, 0x61, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x73, 0x69, 0x7a, 0x65, 
  0x21, 0x00, 0x2b, 0x01, 0x06, 0x69, 0x64, 0x78, 0x31, 0x32, 0x38, 0x00, 
  0x6d, 0x65, 0x6d, 0x6f, 0x20, 0x68, 0x61, 0x73, 0x20, 0x6d, 0x6f, 0x72, 
  0x65, 0x20, 0x74, 0x68, 0x61, 0x6e, 0x20, 0x32, 0x35, 0x36, 0x20, 0x62, 
  0x79, 0x74, 0x65, 0x73, 0x00, 
};

static const u8 data_segment_data_6[] = {
  0x8f, 0xb5, 0x01, 0x2a, 0x00, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x20, 
  0x62, 0x79, 0x20, 0x7a, 0x65, 0x72, 0x6f, 0x00, 0x65, 0x78, 0x74, 0x72, 
  0x61, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 
  0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x67, 
  0x69, 0x76, 0x65, 0x6e, 0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 0x63, 
  0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x25, 0x73, 0x20, 0x74, 0x6f, 
  0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x00, 0x29, 0x00, 0x2b, 0x00, 0x3a, 
  0x20, 0x00, 0x7d, 0x00, 0x5c, 0x74, 0x00, 0x5c, 0x5c, 0x00, 0x29, 0x00, 
  0x74, 0x79, 0x70, 0x65, 0x20, 0x74, 0x61, 0x6b, 0x65, 0x73, 0x20, 0x31, 
  0x20, 0x6f, 0x72, 0x20, 0x33, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 
  0x6e, 0x74, 0x73, 0x00, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x00, 0x75, 0x75, 
  0x6f, 0x73, 0x69, 0x6f, 0x00, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 
  0x6e, 0x20, 0x74, 0x61, 0x6b, 0x65, 0x73, 0x20, 0x25, 0x64, 0x20, 0x70, 
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x61, 0x72, 
  0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x62, 0x75, 0x74, 0x20, 
  0x25, 0x64, 0x20, 0x77, 0x65, 0x72, 0x65, 0x20, 0x67, 0x69, 0x76, 0x65, 
  0x6e, 0x00, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x20, 
  0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x00, 0x6f, 0x62, 0x6a, 0x5f, 
  0x69, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x32, 0x35, 0x36, 0x3a, 
  0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 
  0x6e, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x00, 0x2b, 0x2b, 0x2b, 0x76, 
  0x6d, 0x20, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x2c, 0x20, 
  0x72, 0x65, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 
  0x65, 0x21, 0x0a, 0x00, 0x41, 0xfd, 0x06, 0x69, 0x64, 0x78, 0x32, 0x35, 
  0x36, 0x00, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x77, 0x69, 0x74, 0x68, 
  0x20, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 0x64, 0x6f, 0x65, 0x73, 
  0x20, 0x6e, 0x6f, 0x74, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x2c, 0x20, 
  0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 
  0x20, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x20, 0x69, 0x73, 0x73, 0x75, 
  0x65, 0x00, 
};

static const u8 data_segment_data_7[] = {
  0x8a, 0xb5, 0x01, 0x2f, 0x00, 0x27, 0x25, 0x73, 0x27, 0x20, 0x6f, 0x62, 
  0x6a, 0x65, 0x63, 0x74, 0x20, 0x69, 0x73, 0x6e, 0x27, 0x74, 0x20, 0x63, 
  0x61, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x65, 0x78, 0x74, 0x72, 
  0x61, 0x20, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x20, 0x61, 0x72, 
  0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x67, 0x69, 0x76, 0x65, 
  0x6e, 0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x76, 
  0x65, 0x72, 0x74, 0x20, 0x25, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x63, 0x6f, 
  0x6d, 0x70, 0x6c, 0x65, 0x78, 0x00, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x73, 
  0x6c, 0x69, 0x63, 0x65, 0x73, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x73, 
  0x74, 0x65, 0x70, 0x3d, 0x31, 0x20, 0x28, 0x61, 0x6b, 0x61, 0x20, 0x4e, 
  0x6f, 0x6e, 0x65, 0x29, 0x20, 0x61, 0x72, 0x65, 0x20, 0x73, 0x75, 0x70, 
  0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x00, 0x25, 0x73, 0x6a, 0x29, 0x00, 
  0x7d, 0x00, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x20, 
  0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x20, 0x47, 0x65, 0x6e, 0x65, 
  0x72, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x78, 0x69, 0x74, 0x00, 0x29, 0x00, 
  0x5c, 0x78, 0x25, 0x30, 0x32, 0x78, 0x00, 0x5c, 0x6e, 0x00, 0x6f, 0x6e, 
  0x6c, 0x79, 0x20, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x20, 0x77, 0x69, 
  0x74, 0x68, 0x20, 0x73, 0x74, 0x65, 0x70, 0x3d, 0x31, 0x20, 0x28, 0x61, 
  0x6b, 0x61, 0x20, 0x4e, 0x6f, 0x6e, 0x65, 0x29, 0x20, 0x61, 0x72, 0x65, 
  0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x00, 0x63, 
  0x61, 0x6e, 0x27, 0x74, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 
  0x27, 0x25, 0x71, 0x27, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 
  0x65, 0x73, 0x00, 0x2e, 0x70, 0x79, 0x00, 0x64, 0x69, 0x76, 0x69, 0x64, 
  0x65, 0x20, 0x62, 0x79, 0x20, 0x7a, 0x65, 0x72, 0x6f, 0x00, 0x7a, 0x96, 
  0x0a, 0x69, 0x64, 0x78, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x00, 
  0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x6f, 
  0x6e, 0x6c, 0x79, 0x20, 0x62, 0x65, 0x20, 0x69, 0x73, 0x73, 0x75, 0x65, 
  0x64, 0x20, 0x74, 0x6f, 0x20, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x20, 
  0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x00, 
};

static const u8 data_segment_data_8[] = {
  0xbd, 0x94, 0x08, 0x3c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x3e, 0x00, 
  0x6e, 0x65, 0x65, 0x64, 0x20, 0x6d, 0x6f, 0x72, 0x65, 0x20, 0x74, 0x68, 
  0x61, 0x6e, 0x20, 0x25, 0x64, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 
  0x20, 0x74, 0x6f, 0x20, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x00, 0x6f, 
  0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x27, 0x25, 0x73, 0x27, 0x20, 0x69, 
  0x73, 0x6e, 0x27, 0x74, 0x20, 0x61, 0x20, 0x74, 0x75, 0x70, 0x6c, 0x65, 
  0x20, 0x6f, 0x72, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x00, 0x6c, 0x68, 0x73, 
  0x20, 0x61, 0x6e, 0x64, 0x20, 0x72, 0x68, 0x73, 0x20, 0x73, 0x68, 0x6f, 
  0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x61, 
  0x74, 0x69, 0x62, 0x6c, 0x65, 0x00, 0x29, 0x00, 0x22, 0x00, 0x5c, 0x72, 
  0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 0x61, 0x64, 0x64, 0x20, 0x73, 
  0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x6d, 0x65, 0x74, 0x68, 0x6f, 
  0x64, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 
  0x2d, 0x73, 0x75, 0x62, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x64, 0x20, 
  0x63, 0x6c, 0x61, 0x73, 0x73, 0x00, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 
  0x20, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 
  0x20, 0x6e, 0x6f, 0x74, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 
  0x65, 0x64, 0x00, 0xcf, 0xb1, 0x0f, 0x69, 0x64, 0x78, 0x5f, 0x6c, 0x6f, 
  0x6e, 0x67, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x00, 0x69, 0x6e, 
  0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 
  0x74, 0x79, 0x00, 
};

static const u8 data_segment_data_9[] = {
  0xfa, 0xb5, 0x01, 0x5f, 0x00, 0x74, 0x6f, 0x6f, 0x20, 0x6d, 0x61, 0x6e, 
  0x79, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 
  0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x20, 0x28, 0x65, 0x78, 0x70, 0x65, 
  0x63, 0x74, 0x65, 0x64, 0x20, 0x25, 0x64, 0x29, 0x00, 0x6b, 0x65, 0x79, 
  0x77, 0x6f, 0x72, 0x64, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 
  0x74, 0x28, 0x73, 0x29, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x79, 0x65, 0x74, 
  0x20, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 
  0x20, 0x2d, 0x20, 0x75, 0x73, 0x65, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 
  0x6c, 0x20, 0x61, 0x72, 0x67, 0x73, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x65, 
  0x61, 0x64, 0x00, 0x61, 0x72, 0x72, 0x61, 0x79, 0x2f, 0x62, 0x79, 0x74, 
  0x65, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 
  0x6f, 0x6e, 0x20, 0x72, 0x69, 0x67, 0x68, 0x74, 0x20, 0x73, 0x69, 0x64, 
  0x65, 0x00, 0x5c, 0x75, 0x25, 0x30, 0x34, 0x78, 0x00, 0x5c, 0x74, 0x00, 
  0x3c, 0x25, 0x73, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x61, 
  0x74, 0x20, 0x25, 0x70, 0x3e, 0x00, 0x1a, 0xd9, 0x10, 0x70, 0x72, 0x69, 
  0x6d, 0x61, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x36, 
  0x34, 0x00, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x69, 0x73, 0x73, 0x75, 0x65, 
  0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x20, 0x71, 0x75, 
  0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x00, 
};

static const u8 data_segment_data_10[] = {
  0xa7, 0xf9, 0x08, 0x5f, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x5f, 0x00, 
  0x74, 0x79, 0x70, 0x65, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 
  0x27, 0x25, 0x71, 0x27, 0x20, 0x68, 0x61, 0x73, 0x20, 0x6e, 0x6f, 0x20, 
  0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x27, 0x25, 
  0x71, 0x27, 0x00, 0x25, 0x71, 0x20, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 
  0x73, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x69, 0x6e, 
  0x74, 0x65, 0x67, 0x65, 0x72, 0x73, 0x2c, 0x20, 0x6e, 0x6f, 0x74, 0x20, 
  0x25, 0x73, 0x00, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x20, 0x73, 0x65, 0x70, 
  0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x00, 0x5c, 0x78, 0x25, 0x30, 0x32, 
  0x78, 0x00, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 
  0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00, 0x49, 
  0xec, 0x11, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x74, 0x79, 
  0x70, 0x65, 0x5f, 0x69, 0x32, 0x35, 0x36, 0x00, 0x73, 0x79, 0x6d, 0x62, 
  0x6f, 0x6c, 0x20, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 
  0x20, 0x6d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x00, 
};

static const u8 data_segment_data_11[] = {
  0x2b, 0xc5, 0x09, 0x5f, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x5f, 
  0x00, 0x27, 0x25, 0x73, 0x27, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 
  0x20, 0x68, 0x61, 0x73, 0x20, 0x6e, 0x6f, 0x20, 0x61, 0x74, 0x74, 0x72, 
  0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x27, 0x25, 0x71, 0x27, 0x00, 0x25, 
  0x71, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x6f, 0x75, 0x74, 0x20, 
  0x6f, 0x66, 0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x00, 0x5c, 0x75, 0x25, 
  0x30, 0x34, 0x78, 0x00, 0x3c, 0x73, 0x75, 0x70, 0x65, 0x72, 0x3a, 0x20, 
  0x00, 0x8e, 0xa9, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x42, 0x00, 
  0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x20, 0x65, 0x78, 0x63, 
  0x65, 0x65, 0x64, 0x73, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 
  0x6c, 0x65, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x00, 
};

static const u8 data_segment_data_12[] = {
  0xfd, 0x35, 0x0b, 0x5f, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x74, 0x65, 0x6d, 
  0x5f, 0x5f, 0x00, 0x27, 0x25, 0x73, 0x27, 0x20, 0x6f, 0x62, 0x6a, 0x65, 
  0x63, 0x74, 0x20, 0x69, 0x73, 0x6e, 0x27, 0x74, 0x20, 0x69, 0x74, 0x65, 
  0x72, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 
  0x20, 0x6f, 0x66, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x27, 0x25, 0x73, 
  0x27, 0x20, 0x68, 0x61, 0x73, 0x20, 0x6e, 0x6f, 0x20, 0x6c, 0x65, 0x6e, 
  0x28, 0x29, 0x00, 0x00, 0x5c, 0x55, 0x25, 0x30, 0x38, 0x78, 0x00, 0x2c, 
  0x20, 0x00, 0xfb, 0x88, 0x0c, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x42, 
  0x4b, 0x65, 0x79, 0x36, 0x34, 0x00, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 
  0x77, 0x69, 0x74, 0x68, 0x20, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x20, 
  0x64, 0x6f, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x65, 0x78, 0x69, 
  0x73, 0x74, 0x00, 
};

static const u8 data_segment_data_13[] = {
  0x6d, 0xba, 0x09, 0x5f, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x5f, 
  0x00, 0x27, 0x25, 0x73, 0x27, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 
  0x20, 0x69, 0x73, 0x6e, 0x27, 0x74, 0x20, 0x61, 0x6e, 0x20, 0x69, 0x74, 
  0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x00, 0x27, 0x25, 0x73, 0x27, 0x20, 
  0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x64, 0x6f, 0x65, 0x73, 0x6e, 
  0x27, 0x74, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x69, 
  0x74, 0x65, 0x6d, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 
  0x00, 0x28, 0x5b, 0x00, 0x6a, 0x6f, 0x69, 0x6e, 0x20, 0x65, 0x78, 0x70, 
  0x65, 0x63, 0x74, 0x73, 0x20, 0x61, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 
  0x6f, 0x66, 0x20, 0x73, 0x74, 0x72, 0x2f, 0x62, 0x79, 0x74, 0x65, 0x73, 
  0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x20, 0x63, 0x6f, 0x6e, 
  0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x20, 0x77, 0x69, 0x74, 0x68, 
  0x20, 0x73, 0x65, 0x6c, 0x66, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 
  0x00, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73, 
  0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x73, 0x74, 0x65, 0x70, 0x3d, 0x31, 
  0x20, 0x28, 0x61, 0x6b, 0x61, 0x20, 0x4e, 0x6f, 0x6e, 0x65, 0x29, 0x20, 
  0x61, 0x72, 0x65, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 
  0x64, 0x00, 0x3e, 0x00, 0x08, 0x98, 0x0d, 0x43, 0x68, 0x61, 0x69, 0x6e, 
  0x44, 0x42, 0x4b, 0x65, 0x79, 0x32, 0x35, 0x36, 0x00, 0x6d, 0x75, 0x73, 
  0x74, 0x20, 0x72, 0x65, 0x74, 0x69, 0x72, 0x65, 0x20, 0x70, 0x6f, 0x73, 
  0x69, 0x74, 0x69, 0x76, 0x65, 0x20, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 
  0x74, 0x79, 0x00, 
};

static const u8 data_segment_data_14[] = {
  0x45, 0xf8, 0x08, 0x5f, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x5f, 0x00, 
  0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x72, 0x61, 
  0x69, 0x73, 0x65, 0x64, 0x20, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x74, 0x65, 
  0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x27, 0x25, 0x73, 0x27, 0x20, 
  0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x69, 0x73, 0x6e, 0x27, 0x74, 
  0x20, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x61, 0x62, 
  0x6c, 0x65, 0x00, 0x5d, 0x29, 0x00, 0x72, 0x73, 0x70, 0x6c, 0x69, 0x74, 
  0x28, 0x4e, 0x6f, 0x6e, 0x65, 0x2c, 0x6e, 0x29, 0x00, 0x69, 0x73, 0x73, 
  0x75, 0x62, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x28, 0x29, 0x20, 0x61, 0x72, 
  0x67, 0x20, 0x31, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 
  0x61, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x00, 0xf2, 0x97, 0x0a, 0x4d, 
  0x75, 0x6c, 0x74, 0x69, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x00, 0x63, 0x61, 
  0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 
  0x72, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x00, 
};

static const u8 data_segment_data_15[] = {
  0x40, 0xf8, 0x0b, 0x5f, 0x5f, 0x67, 0x65, 0x74, 0x61, 0x74, 0x74, 0x72, 
  0x5f, 0x5f, 0x00, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 
  0x73, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x64, 0x65, 0x72, 0x69, 0x76, 
  0x65, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x42, 0x61, 0x73, 0x65, 0x45, 
  0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x27, 0x25, 0x73, 
  0x27, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x64, 0x6f, 0x65, 
  0x73, 0x6e, 0x27, 0x74, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 
  0x20, 0x69, 0x74, 0x65, 0x6d, 0x20, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 
  0x6d, 0x65, 0x6e, 0x74, 0x00, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x69, 0x74, 
  0x65, 0x6d, 0x73, 0x00, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x69, 0x6e, 
  0x67, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x00, 
  0x69, 0x73, 0x73, 0x75, 0x62, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x28, 0x29, 
  0x20, 0x61, 0x72, 0x67, 0x20, 0x32, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 
  0x62, 0x65, 0x20, 0x61, 0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x6f, 
  0x72, 0x20, 0x61, 0x20, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x20, 0x6f, 0x66, 
  0x20, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x00, 0x0a, 0x9b, 0x0b, 
  0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x00, 
  0x74, 0x6f, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x20, 0x64, 
  0x6f, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x65, 0x78, 0x69, 0x73, 
  0x74, 0x00, 
};

static const u8 data_segment_data_16[] = {
  0x26, 0x39, 0x0b, 0x5f, 0x5f, 0x67, 0x65, 0x74, 0x69, 0x74, 0x65, 0x6d, 
  0x5f, 0x5f, 0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 0x69, 0x6d, 0x70, 
  0x6f, 0x72, 0x74, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x25, 0x71, 0x00, 
  0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 
  0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 
  0x63, 0x6f, 0x6c, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 
  0x00, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x00, 0x73, 
  0x74, 0x61, 0x72, 0x74, 0x2f, 0x65, 0x6e, 0x64, 0x20, 0x69, 0x6e, 0x64, 
  0x69, 0x63, 0x65, 0x73, 0x00, 0xab, 0x0f, 0x0b, 0x6c, 0x6f, 0x77, 0x65, 
  0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x00, 0x75, 0x6e, 0x61, 0x62, 
  0x6c, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x66, 0x69, 0x6e, 0x64, 0x20, 0x6b, 
  0x65, 0x79, 0x00, 
};

static const u8 data_segment_data_17[] = {
  0xf7, 0xc8, 0x08, 0x5f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x5f, 0x00, 
  0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 
  0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 
  0x2c, 0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6e, 0x67, 
  0x20, 0x25, 0x75, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73, 0x00, 0x64, 0x69, 
  0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x00, 0x73, 0x69, 
  0x6e, 0x67, 0x6c, 0x65, 0x20, 0x27, 0x7d, 0x27, 0x20, 0x65, 0x6e, 0x63, 
  0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 
  0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 
  0x67, 0x00, 0x1a, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x00, 0x6d, 
  0x75, 0x73, 0x74, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 
  0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x20, 0x71, 0x75, 
  0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x00, 
};

static const u8 data_segment_data_18[] = {
  0x5f, 0xa5, 0x08, 0x5f, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x5f, 0x00, 
  0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x68, 0x61, 0x73, 
  0x20, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x74, 0x79, 0x70, 0x65, 0x00, 
  0x62, 0x61, 0x64, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 
  0x6f, 0x6e, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 
  0x00, 0x97, 0x7c, 0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x62, 
  0x79, 0x5f, 0x69, 0x74, 0x72, 0x00, 0x6e, 0x6f, 0x20, 0x62, 0x61, 0x6c, 
  0x61, 0x6e, 0x63, 0x65, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 
  0x66, 0x6f, 0x75, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_19[] = {
  0x16, 0x1b, 0x07, 0x5f, 0x5f, 0x69, 0x6e, 0x74, 0x5f, 0x5f, 0x00, 0x70, 
  0x6f, 0x70, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x61, 0x6e, 0x20, 0x65, 
  0x6d, 0x70, 0x74, 0x79, 0x20, 0x73, 0x65, 0x74, 0x00, 0x75, 0x6e, 0x6d, 
  0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x20, 0x27, 0x7b, 0x27, 0x20, 0x69, 
  0x6e, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x00, 0x68, 0xda, 0x04, 
  0x63, 0x6f, 0x64, 0x65, 0x00, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x72, 0x61, 
  0x77, 0x6e, 0x20, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x00, 
};

static const u8 data_segment_data_20[] = {
  0xcf, 0x32, 0x08, 0x5f, 0x5f, 0x69, 0x74, 0x65, 0x72, 0x5f, 0x5f, 0x00, 
  0x70, 0x6f, 0x70, 0x69, 0x74, 0x65, 0x6d, 0x28, 0x29, 0x3a, 0x20, 0x64, 
  0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x20, 0x69, 0x73, 
  0x20, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x00, 0x65, 0x78, 0x70, 0x65, 0x63, 
  0x74, 0x65, 0x64, 0x20, 0x27, 0x3a, 0x27, 0x20, 0x61, 0x66, 0x74, 0x65, 
  0x72, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 
  0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x00, 0xef, 0x78, 0x05, 0x73, 0x63, 
  0x6f, 0x70, 0x65, 0x00, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x20, 0x61, 0x63, 
  0x63, 0x6f, 0x75, 0x6e, 0x74, 0x20, 0x64, 0x6f, 0x65, 0x73, 0x20, 0x6e, 
  0x6f, 0x74, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x00, 
};

static const u8 data_segment_data_21[] = {
  0xe2, 0xb0, 0x07, 0x5f, 0x5f, 0x6c, 0x65, 0x6e, 0x5f, 0x5f, 0x00, 0x63, 
  0x61, 0x6e, 0x27, 0x74, 0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x20, 
  0x66, 0x72, 0x6f, 0x6d, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 
  0x69, 0x63, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x6e, 0x75, 0x6d, 
  0x62, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 0x6d, 0x61, 
  0x6e, 0x75, 0x61, 0x6c, 0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 
  0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 
  0x00, 0x68, 0x61, 0x73, 0x68, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x73, 
  0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 0x20, 0x33, 0x32, 0x20, 
  0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x6c, 0x6f, 0x6e, 0x67, 0x21, 0x00, 
  0x7b, 0xac, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x00, 0x73, 0x79, 0x6d, 
  0x62, 0x6f, 0x6c, 0x20, 0x64, 0x6f, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 
  0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x00, 
};

static const u8 data_segment_data_22[] = {
  0x8e, 0x13, 0x08, 0x5f, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x5f, 0x00, 
  0x74, 0x75, 0x70, 0x6c, 0x65, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 
  0x6f, 0x75, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 
  0x00, 0x72, 0x7c, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 
  0x65, 0x00, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x72, 0x6f, 
  0x77, 0x20, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x20, 0x64, 0x65, 
  0x6c, 0x65, 0x74, 0x65, 0x64, 0x20, 0x6f, 0x72, 0x20, 0x6e, 0x65, 0x76, 
  0x65, 0x72, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x20, 
  0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x77, 0x6f, 0x6e, 0x27, 0x74, 
  0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x65, 0x66, 
  0x66, 0x65, 0x63, 0x74, 0x2e, 0x00, 
};

static const u8 data_segment_data_23[] = {
  0xff, 0x30, 0x0a, 0x5f, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 
  0x5f, 0x00, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 
  0x20, 0x6e, 0x6f, 0x74, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 
  0x65, 0x64, 0x20, 0x79, 0x65, 0x74, 0x00, 0x8e, 0x0c, 0x0c, 0x70, 0x72, 
  0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x00, 0x43, 
  0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x20, 
  0x62, 0x65, 0x63, 0x61, 0x75, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 
  0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x69, 0x73, 0x20, 0x6e, 
  0x6f, 0x74, 0x20, 0x7a, 0x65, 0x72, 0x6f, 0x2e, 0x00, 
};

static const u8 data_segment_data_24[] = {
  0xe2, 0x38, 0x08, 0x5f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x5f, 0x00, 
  0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 
  0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 
  0x20, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 
  0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x20, 
  0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x20, 0x66, 0x69, 
  0x65, 0x6c, 0x64, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x69, 0x6e, 
  0x67, 0x00, 0xa6, 0x4f, 0x08, 0x5f, 0x64, 0x62, 0x5f, 0x66, 0x69, 0x6e, 
  0x64, 0x00, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x73, 0x20, 
  0x74, 0x6f, 0x6f, 0x20, 0x6c, 0x6f, 0x6e, 0x67, 0x20, 0x74, 0x6f, 0x20, 
  0x62, 0x65, 0x20, 0x61, 0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x73, 
  0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x00, 
};

static const u8 data_segment_data_25[] = {
  0x79, 0x15, 0x07, 0x5f, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x5f, 0x00, 0x69, 
  0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 
  0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x00, 
  0xd5, 0x41, 0x07, 0x5f, 0x64, 0x62, 0x5f, 0x67, 0x65, 0x74, 0x00, 0x6f, 
  0x6e, 0x6c, 0x79, 0x20, 0x75, 0x70, 0x70, 0x65, 0x72, 0x63, 0x61, 0x73, 
  0x65, 0x20, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x73, 0x20, 0x61, 0x6c, 
  0x6c, 0x6f, 0x77, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x79, 0x6d, 
  0x62, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x73, 0x74, 0x72, 
  0x69, 0x6e, 0x67, 0x00, 
};

static const u8 data_segment_data_26[] = {
  0x02, 0x73, 0x08, 0x5f, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x5f, 0x00, 
  0x73, 0x69, 0x67, 0x6e, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x6c, 0x6c, 
  0x6f, 0x77, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x74, 0x72, 0x69, 
  0x6e, 0x67, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x73, 0x70, 
  0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x00, 0x64, 0x69, 0x67, 0x65, 
  0x73, 0x74, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x62, 0x65, 
  0x20, 0x33, 0x32, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x6c, 0x6f, 
  0x6e, 0x67, 0x00, 0x3c, 0x18, 0x09, 0x5f, 0x64, 0x62, 0x5f, 0x73, 0x74, 
  0x6f, 0x72, 0x65, 0x00, 
};

static const u8 data_segment_data_27[] = {
  0x6b, 0x00, 0x0c, 0x5f, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x6e, 0x61, 0x6d, 
  0x65, 0x5f, 0x5f, 0x00, 0x73, 0x69, 0x67, 0x6e, 0x20, 0x6e, 0x6f, 0x74, 
  0x20, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 
  0x68, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x20, 0x66, 0x6f, 
  0x72, 0x6d, 0x61, 0x74, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 
  0x65, 0x72, 0x20, 0x27, 0x63, 0x27, 0x00, 0x52, 0xcd, 0x0a, 0x5f, 0x64, 
  0x62, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x00, 0x6f, 0x62, 0x6a, 
  0x65, 0x63, 0x74, 0x20, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x20, 0x74, 
  0x6f, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 
  0x6f, 0x20, 0x69, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x20, 
  0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x00, 
  
};

static const u8 data_segment_data_28[] = {
  0x10, 0x0b, 0x08, 0x5f, 0x5f, 0x72, 0x65, 0x70, 0x72, 0x5f, 0x5f, 0x00, 
  0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x6d, 
  0x61, 0x74, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x27, 0x25, 0x63, 0x27, 
  0x20, 0x66, 0x6f, 0x72, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 
  0x6f, 0x66, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x27, 0x25, 0x73, 0x27, 
  0x00, 0x05, 0x8c, 0x0a, 0x5f, 0x64, 0x62, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 
  0x76, 0x65, 0x00, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x20, 0x72, 0x65, 0x61, 
  0x64, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 
  0x72, 0x00, 
};

static const u8 data_segment_data_29[] = {
  0x32, 0x3e, 0x0b, 0x5f, 0x5f, 0x73, 0x65, 0x74, 0x69, 0x74, 0x65, 0x6d, 
  0x5f, 0x5f, 0x00, 0x27, 0x3d, 0x27, 0x20, 0x61, 0x6c, 0x69, 0x67, 0x6e, 
  0x6d, 0x65, 0x6e, 0x74, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x6c, 0x6c, 
  0x6f, 0x77, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x74, 0x72, 0x69, 
  0x6e, 0x67, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x73, 0x70, 
  0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x00, 0x2b, 0x42, 0x0b, 0x5f, 
  0x6c, 0x6f, 0x77, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x00, 0x72, 
  0x65, 0x61, 0x64, 0x00, 
};

static const u8 data_segment_data_30[] = {
  0xd0, 0xcd, 0x07, 0x5f, 0x5f, 0x73, 0x74, 0x72, 0x5f, 0x5f, 0x00, 0x3c, 
  0x3e, 0x3d, 0x5e, 0x00, 0x6a, 0x15, 0x0b, 0x5f, 0x75, 0x70, 0x70, 0x65, 
  0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x00, 0x63, 0x61, 0x6e, 0x6e, 0x6f, 
  0x74, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x6f, 0x62, 0x6a, 
  0x65, 0x63, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x61, 0x62, 0x6c, 
  0x65, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x6e, 0x6f, 0x74, 0x68, 0x65, 0x72, 
  0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x00, 
};

static const u8 data_segment_data_31[] = {
  0x2d, 0x8c, 0x0f, 0x41, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x65, 0x74, 0x69, 
  0x63, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x00, 0x62, 0x63, 0x64, 0x65, 0x45, 
  0x66, 0x46, 0x67, 0x47, 0x6e, 0x6f, 0x73, 0x78, 0x58, 0x25, 0x00, 0x41, 
  0x13, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 
  0x79, 0x00, 0x77, 0x72, 0x69, 0x74, 0x65, 0x00, 
};

static const u8 data_segment_data_32[] = {
  0x97, 0x5a, 0x0e, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 
  0x45, 0x72, 0x72, 0x6f, 0x72, 0x00, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 
  0x20, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x20, 0x61, 0x20, 0x64, 0x69, 0x63, 
  0x74, 0x00, 0x4a, 0x56, 0x03, 0x69, 0x74, 0x72, 0x00, 0x6f, 0x62, 0x6a, 
  0x65, 0x63, 0x74, 0x20, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x20, 0x74, 
  0x6f, 0x20, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x20, 0x69, 0x73, 0x20, 
  0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 
  0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x00, 
};

static const u8 data_segment_data_33[] = {
  0x21, 0xde, 0x0e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 
  0x45, 0x72, 0x72, 0x6f, 0x72, 0x00, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 
  0x6c, 0x65, 0x74, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 
  0x6b, 0x65, 0x79, 0x00, 0x29, 0x0d, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 
  0x72, 0x79, 0x00, 0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x6d, 0x6f, 
  0x64, 0x69, 0x66, 0x79, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 
  0x20, 0x69, 0x6e, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6f, 0x66, 
  0x20, 0x61, 0x6e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x63, 0x6f, 0x6e, 
  0x74, 0x72, 0x61, 0x63, 0x74, 0x00, 
};

static const u8 data_segment_data_34[] = {
  0x07, 0x92, 0x0d, 0x42, 0x61, 0x73, 0x65, 0x45, 0x78, 0x63, 0x65, 0x70, 
  0x74, 0x69, 0x6f, 0x6e, 0x00, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 
  0x65, 0x74, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x00, 0x68, 
  0xbf, 0x0f, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 
  0x79, 0x5f, 0x6b, 0x65, 0x79, 0x00, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 
  0x72, 0x20, 0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x63, 0x68, 0x61, 
  0x6e, 0x67, 0x65, 0x20, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x20, 
  0x6b, 0x65, 0x79, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x6d, 0x6f, 0x64, 
  0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x6e, 0x20, 0x6f, 0x62, 
  0x6a, 0x65, 0x63, 0x74, 0x00, 
};

static const u8 data_segment_data_35[] = {
  0x91, 0xbf, 0x08, 0x45, 0x4f, 0x46, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x00, 
  0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 
  0x67, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x20, 0x6d, 0x6f, 0x72, 0x65, 
  0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x00, 0x9a, 
  0xed, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x00, 0x61, 0x74, 0x74, 0x65, 
  0x6d, 0x70, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x64, 0x64, 0x20, 0x61, 
  0x73, 0x73, 0x65, 0x74, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x64, 0x69, 
  0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x79, 0x6d, 0x62, 
  0x6f, 0x6c, 0x00, 
};

static const u8 data_segment_data_36[] = {
  0xf0, 0xe0, 0x08, 0x45, 0x6c, 0x6c, 0x69, 0x70, 0x73, 0x69, 0x73, 0x00, 
  0x25, 0x63, 0x20, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x20, 0x69, 0x6e, 0x74, 
  0x20, 0x6f, 0x72, 0x20, 0x63, 0x68, 0x61, 0x72, 0x00, 0x02, 0x5c, 0x03, 
  0x6f, 0x62, 0x6a, 0x00, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 
  0x20, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x00, 
};

static const u8 data_segment_data_37[] = {
  0xf2, 0x29, 0x09, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 
  0x00, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x20, 0x6e, 0x65, 0x65, 
  0x64, 0x65, 0x64, 0x00, 0xd1, 0x37, 0x14, 0x67, 0x65, 0x74, 0x5f, 0x73, 
  0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x76, 0x61, 0x6c, 
  0x75, 0x65, 0x73, 0x00, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 
  0x20, 0x6f, 0x76, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x00, 
};

static const u8 data_segment_data_38[] = {
  0x16, 0x62, 0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 
  0x45, 0x78, 0x69, 0x74, 0x00, 0x75, 0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 
  0x72, 0x74, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 
  0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x20, 0x27, 0x25, 
  0x63, 0x27, 0x20, 0x28, 0x30, 0x78, 0x25, 0x78, 0x29, 0x20, 0x61, 0x74, 
  0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x25, 0x64, 0x00, 0x97, 0x20, 
  0x13, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 
  0x72, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x00, 0x61, 0x74, 0x74, 
  0x65, 0x6d, 0x70, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x75, 0x62, 0x74, 
  0x72, 0x61, 0x63, 0x74, 0x20, 0x61, 0x73, 0x73, 0x65, 0x74, 0x20, 0x77, 
  0x69, 0x74, 0x68, 0x20, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 
  0x74, 0x20, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x00, 
};

static const u8 data_segment_data_39[] = {
  0x20, 0x9c, 0x0b, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 
  0x6f, 0x72, 0x00, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x73, 0x74, 
  0x72, 0x69, 0x6e, 0x67, 0x20, 0x64, 0x69, 0x64, 0x6e, 0x27, 0x74, 0x20, 
  0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 
  0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x00, 0x0a, 0xbe, 
  0x08, 0x69, 0x64, 0x78, 0x5f, 0x66, 0x69, 0x6e, 0x64, 0x00, 0x73, 0x75, 
  0x62, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x75, 0x6e, 
  0x64, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x00, 
};

static const u8 data_segment_data_40[] = {
  0x5c, 0x20, 0x10, 0x49, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 
  0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x00, 0x25, 0x2e, 0x2a, 0x73, 
  0x00, 0x40, 0x82, 0x0f, 0x69, 0x64, 0x78, 0x5f, 0x75, 0x70, 0x70, 0x65, 
  0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x00, 0x73, 0x75, 0x62, 0x74, 
  0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x76, 0x65, 0x72, 
  0x66, 0x6c, 0x6f, 0x77, 0x00, 
};

static const u8 data_segment_data_41[] = {
  0x83, 0xad, 0x0a, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x72, 0x72, 0x6f, 
  0x72, 0x00, 0x62, 0x00, 0x61, 0x74, 0x0f, 0x69, 0x64, 0x78, 0x5f, 0x6c, 
  0x6f, 0x77, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_42[] = {
  0xea, 0x00, 0x08, 0x4b, 0x65, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x00, 
  0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 
  0x6f, 0x75, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x72, 0x61, 0x6e, 0x67, 0x65, 
  0x00, 0x21, 0x95, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 
  0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 
  0x73, 0x00, 
};

static const u8 data_segment_data_43[] = {
  0xaf, 0xe2, 0x11, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 
  0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x00, 0x77, 0x72, 0x6f, 
  0x6e, 0x67, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x6f, 0x66, 
  0x20, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x00, 0x0d, 
  0x2f, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x00, 0x63, 0x61, 
  0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x70, 0x61, 0x73, 0x73, 0x20, 0x65, 0x6e, 
  0x64, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x74, 
  0x6f, 0x20, 0x65, 0x72, 0x61, 0x73, 0x65, 0x00, 
};

static const u8 data_segment_data_44[] = {
  0xff, 0x69, 0x0b, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x72, 0x72, 
  0x6f, 0x72, 0x00, 0x6f, 0x6e, 0x6c, 0x79, 0x20, 0x73, 0x6c, 0x69, 0x63, 
  0x65, 0x73, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x73, 0x74, 0x65, 0x70, 
  0x3d, 0x31, 0x20, 0x28, 0x61, 0x6b, 0x61, 0x20, 0x4e, 0x6f, 0x6e, 0x65, 
  0x29, 0x20, 0x61, 0x72, 0x65, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 
  0x74, 0x65, 0x64, 0x00, 0x22, 0x1d, 0x0a, 0x69, 0x64, 0x78, 0x5f, 0x74, 
  0x61, 0x62, 0x6c, 0x65, 0x73, 0x00, 0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 
  0x20, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x65, 
  0x6e, 0x64, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x00, 
  
};

static const u8 data_segment_data_45[] = {
  0xdc, 0x83, 0x0b, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x45, 0x72, 0x72, 
  0x6f, 0x72, 0x00, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x65, 
  0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x00, 0xe1, 0xc2, 0x0e, 0x53, 0x65, 
  0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 
  0x00, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x70, 0x61, 0x73, 0x73, 
  0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x65, 0x72, 0x61, 0x73, 0x65, 0x20, 
  0x69, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x75, 
  0x6c, 0x74, 0x69, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x00, 
};

static const u8 data_segment_data_46[] = {
  0xba, 0x2d, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 
  0x00, 0x63, 0x61, 0x6e, 0x27, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 
  0x72, 0x74, 0x20, 0x27, 0x25, 0x71, 0x27, 0x20, 0x6f, 0x62, 0x6a, 0x65, 
  0x63, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x25, 0x71, 0x20, 0x69, 0x6d, 0x70, 
  0x6c, 0x69, 0x63, 0x69, 0x74, 0x6c, 0x79, 0x00, 0x69, 0x6e, 0x64, 0x65, 
  0x78, 0x20, 0x6f, 0x75, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x72, 0x61, 0x6e, 
  0x67, 0x65, 0x21, 0x00, 0x50, 0x54, 0x03, 0x69, 0x64, 0x78, 0x00, 0x63, 
  0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x65, 0x72, 0x61, 0x73, 0x65, 0x20, 
  0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x74, 
  0x61, 0x62, 0x6c, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x6e, 0x6f, 0x74, 
  0x68, 0x65, 0x72, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 
  0x00, 
};

static const u8 data_segment_data_47[] = {
  0x17, 0x68, 0x08, 0x4e, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x00, 
  0xf7, 0x47, 0x0d, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 
  0x5f, 0x6b, 0x65, 0x79, 0x00, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 
  0x20, 0x74, 0x6f, 0x20, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x20, 0x6f, 
  0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x77, 
  0x61, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x69, 0x6e, 0x20, 0x6d, 0x75, 
  0x6c, 0x74, 0x69, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x00, 
};

static const u8 data_segment_data_48[] = {
  0xc6, 0x98, 0x13, 0x4e, 0x6f, 0x74, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 
  0x65, 0x6e, 0x74, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x00, 0x6e, 
  0x6f, 0x74, 0x20, 0x61, 0x20, 0x69, 0x6e, 0x74, 0x20, 0x6f, 0x72, 0x20, 
  0x62, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x00, 
  0x24, 0xe9, 0x06, 0x66, 0x6f, 0x6f, 0x2e, 0x70, 0x79, 0x00, 
};

static const u8 data_segment_data_49[] = {
  0xa1, 0x65, 0x07, 0x4f, 0x53, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x00, 0x6e, 
  0x6f, 0x74, 0x20, 0x61, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 
  0x79, 0x70, 0x65, 0x00, 0x51, 0x72, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 
  0x00, 
};

static const u8 data_segment_data_50[] = {
  0x81, 0xe1, 0x0d, 0x4f, 0x76, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x45, 
  0x72, 0x72, 0x6f, 0x72, 0x00, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x20, 0x66, 
  0x6c, 0x6f, 0x61, 0x74, 0x31, 0x32, 0x38, 0x20, 0x74, 0x79, 0x70, 0x65, 
  0x00, 0x92, 0x5c, 0x07, 0x2b, 0x2b, 0x2b, 0x66, 0x6f, 0x6f, 0x3a, 0x00, 
  
};

static const u8 data_segment_data_51[] = {
  0x61, 0xf1, 0x0c, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x72, 
  0x72, 0x6f, 0x72, 0x00, 0xc4, 0xb5, 0x01, 0x61, 0x00, 
};

static const u8 data_segment_data_52[] = {
  0xea, 0x1c, 0x0d, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x72, 0x61, 
  0x74, 0x69, 0x6f, 0x6e, 0x00, 0xc7, 0xb5, 0x01, 0x62, 0x00, 
};

static const u8 data_segment_data_53[] = {
  0x94, 0x8f, 0x0b, 0x53, 0x79, 0x6e, 0x74, 0x61, 0x78, 0x45, 0x72, 0x72, 
  0x6f, 0x72, 0x00, 0xc6, 0xb5, 0x01, 0x63, 0x00, 
};

static const u8 data_segment_data_54[] = {
  0x20, 0xff, 0x0a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x78, 0x69, 
  0x74, 0x00, 0x53, 0x4f, 0x06, 0x62, 0x61, 0x72, 0x2e, 0x70, 0x79, 0x00, 
  
};

static const u8 data_segment_data_55[] = {
  0x25, 0x96, 0x09, 0x54, 0x79, 0x70, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 
  0x00, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x73, 0x65, 0x63, 0x6f, 0x6e, 
  0x64, 0x61, 0x72, 0x79, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x00, 0x65, 
  0xa9, 0x07, 0x2b, 0x2b, 0x2b, 0x62, 0x61, 0x72, 0x3a, 0x00, 
};

static const u8 data_segment_data_56[] = {
  0x96, 0x87, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x72, 0x72, 0x6f, 
  0x72, 0x00, 0xc7, 0xf3, 0x08, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x2e, 0x70, 
  0x79, 0x00, 
};

static const u8 data_segment_data_57[] = {
  0xb6, 0x27, 0x11, 0x5a, 0x65, 0x72, 0x6f, 0x44, 0x69, 0x76, 0x69, 0x73, 
  0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x00, 0x83, 0x6d, 0x02, 
  0x64, 0x62, 0x00, 
};

static const u8 data_segment_data_58[] = {
  0x95, 0x32, 0x03, 0x61, 0x62, 0x73, 0x00, 0x91, 0x3c, 0x08, 0x62, 0x69, 
  0x6e, 0x61, 0x73, 0x63, 0x69, 0x69, 0x00, 
};

static const u8 data_segment_data_59[] = {
  0x44, 0x33, 0x03, 0x61, 0x6c, 0x6c, 0x00, 0x10, 0x6d, 0x07, 0x68, 0x61, 
  0x73, 0x68, 0x6c, 0x69, 0x62, 0x00, 
};

static const u8 data_segment_data_60[] = {
  0x13, 0x33, 0x03, 0x61, 0x6e, 0x79, 0x00, 
};

static const u8 data_segment_data_61[] = {
  0x6b, 0x97, 0x06, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x00, 0x73, 0x65, 
  0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 
  0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x3a, 
  0x77, 0x72, 0x6f, 0x6e, 0x67, 0x20, 0x61, 0x72, 0x72, 0x61, 0x79, 0x20, 
  0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x21, 0x00, 
};

static const u8 data_segment_data_62[] = {
  0xc2, 0xc6, 0x04, 0x61, 0x72, 0x67, 0x73, 0x00, 
};

static const u8 data_segment_data_63[] = {
  0xeb, 0x3c, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x00, 
};

static const u8 data_segment_data_64[] = {
  0xf7, 0x31, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x73, 0x00, 
  
};

static const u8 data_segment_data_65[] = {
  0x76, 0xa3, 0x09, 0x62, 0x79, 0x74, 0x65, 0x61, 0x72, 0x72, 0x61, 0x79, 
  0x00, 
};

static const u8 data_segment_data_66[] = {
  0x22, 0x7d, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x00, 
  
};

static const u8 data_segment_data_67[] = {
  0x5c, 0xb2, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x00, 
};

static const u8 data_segment_data_68[] = {
  0x0d, 0x70, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x00, 
  
};

static const u8 data_segment_data_69[] = {
  0xdc, 0x4c, 0x03, 0x63, 0x68, 0x72, 0x00, 
};

static const u8 data_segment_data_70[] = {
  0xb4, 0x8c, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x6d, 0x65, 0x74, 0x68, 
  0x6f, 0x64, 0x00, 
};

static const u8 data_segment_data_71[] = {
  0x7c, 0xa0, 0x05, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x00, 
};

static const u8 data_segment_data_72[] = {
  0x33, 0x67, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x00, 
};

static const u8 data_segment_data_73[] = {
  0xc0, 0xff, 0x05, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x00, 
};

static const u8 data_segment_data_74[] = {
  0xe0, 0xdb, 0x04, 0x63, 0x6f, 0x70, 0x79, 0x00, 
};

static const u8 data_segment_data_75[] = {
  0xa6, 0x4d, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x00, 
};

static const u8 data_segment_data_76[] = {
  0x3f, 0xfc, 0x04, 0x64, 0x69, 0x63, 0x74, 0x00, 
};

static const u8 data_segment_data_77[] = {
  0xfa, 0x1e, 0x03, 0x64, 0x69, 0x72, 0x00, 
};

static const u8 data_segment_data_78[] = {
  0xb8, 0x04, 0x06, 0x64, 0x69, 0x76, 0x6d, 0x6f, 0x64, 0x00, 
};

static const u8 data_segment_data_79[] = {
  0x0a, 0x23, 0x03, 0x65, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_80[] = {
  0x1b, 0xa3, 0x08, 0x65, 0x6e, 0x64, 0x73, 0x77, 0x69, 0x74, 0x68, 0x00, 
  
};

static const u8 data_segment_data_81[] = {
  0x9b, 0xa6, 0x04, 0x65, 0x76, 0x61, 0x6c, 0x00, 
};

static const u8 data_segment_data_82[] = {
  0x1e, 0xc0, 0x04, 0x65, 0x78, 0x65, 0x63, 0x00, 
};

static const u8 data_segment_data_83[] = {
  0x63, 0xe8, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_84[] = {
  0x00, 0x34, 0x04, 0x66, 0x69, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_85[] = {
  0x26, 0x33, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x00, 
};

static const u8 data_segment_data_86[] = {
  0x35, 0x74, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x62, 0x79, 0x74, 0x65, 
  0x73, 0x00, 
};

static const u8 data_segment_data_87[] = {
  0x33, 0x3b, 0x03, 0x67, 0x65, 0x74, 0x00, 
};

static const u8 data_segment_data_88[] = {
  0xc0, 0x17, 0x07, 0x67, 0x65, 0x74, 0x61, 0x74, 0x74, 0x72, 0x00, 
};

static const u8 data_segment_data_89[] = {
  0x9d, 0x49, 0x07, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x73, 0x00, 
};

static const u8 data_segment_data_90[] = {
  0x8c, 0xb0, 0x07, 0x68, 0x61, 0x73, 0x61, 0x74, 0x74, 0x72, 0x00, 
};

static const u8 data_segment_data_91[] = {
  0xb7, 0x70, 0x04, 0x68, 0x61, 0x73, 0x68, 0x00, 
};

static const u8 data_segment_data_92[] = {
  0x28, 0x6f, 0x02, 0x69, 0x64, 0x00, 
};

static const u8 data_segment_data_93[] = {
  0x7b, 0x28, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x00, 
};

static const u8 data_segment_data_94[] = {
  0x12, 0x54, 0x06, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x00, 
};

static const u8 data_segment_data_95[] = {
  0x16, 0x53, 0x03, 0x69, 0x6e, 0x74, 0x00, 
};

static const u8 data_segment_data_96[] = {
  0xeb, 0x37, 0x07, 0x69, 0x73, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x00, 
};

static const u8 data_segment_data_97[] = {
  0xa8, 0x9a, 0x07, 0x69, 0x73, 0x64, 0x69, 0x67, 0x69, 0x74, 0x00, 
};

static const u8 data_segment_data_98[] = {
  0xb6, 0xbe, 0x0a, 0x69, 0x73, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 
  0x65, 0x00, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x77, 0x6f, 0x72, 0x6c, 
  0x64, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x66, 0x6f, 0x6f, 0x6f, 0x00, 
  
};

static const u8 data_segment_data_99[] = {
  0xfc, 0x80, 0x07, 0x69, 0x73, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_100[] = {
  0x5b, 0xf8, 0x07, 0x69, 0x73, 0x73, 0x70, 0x61, 0x63, 0x65, 0x00, 
};

static const u8 data_segment_data_101[] = {
  0xb5, 0x7f, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x62, 0x63, 0x6c, 0x61, 0x73, 
  0x73, 0x00, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x77, 0x6f, 0x72, 0x6c, 
  0x64, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x62, 0x61, 0x72, 0x00, 
};

static const u8 data_segment_data_102[] = {
  0xdd, 0xa7, 0x07, 0x69, 0x73, 0x75, 0x70, 0x70, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_103[] = {
  0xe3, 0x53, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x00, 0x69, 0x6e, 0x69, 
  0x74, 0x2e, 0x70, 0x79, 0x3a, 0x69, 0x6e, 0x69, 0x74, 0x20, 0x64, 0x6f, 
  0x6e, 0x65, 0x21, 0x00, 
};

static const u8 data_segment_data_104[] = {
  0x8f, 0x21, 0x04, 0x69, 0x74, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_105[] = {
  0xa7, 0x5c, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x00, 0x68, 0x65, 0x6c, 0x6c, 
  0x6f, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x20, 0x66, 0x72, 0x6f, 0x6d, 
  0x20, 0x69, 0x6e, 0x69, 0x74, 0x00, 
};

static const u8 data_segment_data_106[] = {
  0x32, 0x6d, 0x03, 0x6b, 0x65, 0x79, 0x00, 
};

static const u8 data_segment_data_107[] = {
  0x01, 0x13, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x00, 
};

static const u8 data_segment_data_108[] = {
  0x62, 0x40, 0x03, 0x6c, 0x65, 0x6e, 0x00, 
};

static const u8 data_segment_data_109[] = {
  0x27, 0x1d, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x00, 
};

static const u8 data_segment_data_110[] = {
  0x89, 0x6a, 0x06, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x00, 
};

static const u8 data_segment_data_111[] = {
  0x3b, 0xa1, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x73, 0x00, 
};

static const u8 data_segment_data_112[] = {
  0xc6, 0xcb, 0x05, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_113[] = {
  0xe5, 0xb9, 0x06, 0x6c, 0x73, 0x74, 0x72, 0x69, 0x70, 0x00, 
};

static const u8 data_segment_data_114[] = {
  0xce, 0xb7, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x00, 
};

static const u8 data_segment_data_115[] = {
  0xb9, 0x43, 0x03, 0x6d, 0x61, 0x70, 0x00, 
};

static const u8 data_segment_data_116[] = {
  0x0b, 0x7c, 0x0b, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x70, 0x79, 0x74, 0x68, 
  0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_117[] = {
  0x42, 0x88, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x00, 
};

static const u8 data_segment_data_118[] = {
  0x90, 0x8d, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x00, 
};

static const u8 data_segment_data_119[] = {
  0xd1, 0x3a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x00, 
};

static const u8 data_segment_data_120[] = {
  0x1c, 0x5e, 0x03, 0x6f, 0x72, 0x64, 0x00, 
};

static const u8 data_segment_data_121[] = {
  0x2a, 0x73, 0x03, 0x70, 0x6f, 0x70, 0x00, 
};

static const u8 data_segment_data_122[] = {
  0xbf, 0x2c, 0x07, 0x70, 0x6f, 0x70, 0x69, 0x74, 0x65, 0x6d, 0x00, 
};

static const u8 data_segment_data_123[] = {
  0x2d, 0x73, 0x03, 0x70, 0x6f, 0x77, 0x00, 
};

static const u8 data_segment_data_124[] = {
  0x54, 0xc6, 0x05, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x00, 
};

static const u8 data_segment_data_125[] = {
  0x1a, 0x5e, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x00, 
};

static const u8 data_segment_data_126[] = {
  0xb7, 0xf9, 0x04, 0x72, 0x65, 0x61, 0x64, 0x00, 
};

static const u8 data_segment_data_127[] = {
  0x4b, 0xbf, 0x08, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x74, 0x6f, 0x00, 
  
};

static const u8 data_segment_data_128[] = {
  0xf9, 0x19, 0x08, 0x72, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x00, 
  
};

static const u8 data_segment_data_129[] = {
  0x63, 0x8a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x00, 
};

static const u8 data_segment_data_130[] = {
  0x49, 0x25, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x00, 
};

static const u8 data_segment_data_131[] = {
  0xd0, 0xf7, 0x04, 0x72, 0x65, 0x70, 0x72, 0x00, 
};

static const u8 data_segment_data_132[] = {
  0x25, 0x2a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x00, 
};

static const u8 data_segment_data_133[] = {
  0xd2, 0x9c, 0x05, 0x72, 0x66, 0x69, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_134[] = {
  0xe9, 0x2b, 0x06, 0x72, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x00, 
};

static const u8 data_segment_data_135[] = {
  0xe7, 0x25, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_136[] = {
  0xa5, 0x00, 0x06, 0x72, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x00, 
};

static const u8 data_segment_data_137[] = {
  0x3b, 0x95, 0x06, 0x72, 0x73, 0x74, 0x72, 0x69, 0x70, 0x00, 
};

static const u8 data_segment_data_138[] = {
  0x79, 0x77, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x00, 
};

static const u8 data_segment_data_139[] = {
  0xb9, 0x76, 0x04, 0x73, 0x65, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_140[] = {
  0x23, 0x8f, 0x03, 0x73, 0x65, 0x70, 0x00, 
};

static const u8 data_segment_data_141[] = {
  0x27, 0x8f, 0x03, 0x73, 0x65, 0x74, 0x00, 
};

static const u8 data_segment_data_142[] = {
  0xd4, 0xa8, 0x07, 0x73, 0x65, 0x74, 0x61, 0x74, 0x74, 0x72, 0x00, 
};

static const u8 data_segment_data_143[] = {
  0x6c, 0xa3, 0x0a, 0x73, 0x65, 0x74, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 
  0x74, 0x00, 
};

static const u8 data_segment_data_144[] = {
  0xbf, 0x9d, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x00, 
};

static const u8 data_segment_data_145[] = {
  0x5e, 0x15, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x00, 
};

static const u8 data_segment_data_146[] = {
  0xb7, 0x33, 0x05, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x00, 
};

static const u8 data_segment_data_147[] = {
  0x85, 0xef, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x00, 
};

static const u8 data_segment_data_148[] = {
  0x74, 0xe8, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x77, 0x69, 0x74, 
  0x68, 0x00, 
};

static const u8 data_segment_data_149[] = {
  0x62, 0xaf, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x6d, 0x65, 0x74, 
  0x68, 0x6f, 0x64, 0x00, 
};

static const u8 data_segment_data_150[] = {
  0x57, 0x36, 0x04, 0x73, 0x74, 0x65, 0x70, 0x00, 
};

static const u8 data_segment_data_151[] = {
  0x9d, 0x36, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x00, 
};

static const u8 data_segment_data_152[] = {
  0x50, 0x8d, 0x03, 0x73, 0x74, 0x72, 0x00, 
};

static const u8 data_segment_data_153[] = {
  0x29, 0x1e, 0x05, 0x73, 0x74, 0x72, 0x69, 0x70, 0x00, 
};

static const u8 data_segment_data_154[] = {
  0x2e, 0x8d, 0x03, 0x73, 0x75, 0x6d, 0x00, 
};

static const u8 data_segment_data_155[] = {
  0xc4, 0xb2, 0x05, 0x73, 0x75, 0x70, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_156[] = {
  0xb3, 0x44, 0x05, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x00, 
};

static const u8 data_segment_data_157[] = {
  0xd8, 0x3e, 0x08, 0x74, 0x6f, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x00, 
  
};

static const u8 data_segment_data_158[] = {
  0xfd, 0x41, 0x05, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x00, 
};

static const u8 data_segment_data_159[] = {
  0x9d, 0x7f, 0x04, 0x74, 0x79, 0x70, 0x65, 0x00, 
};

static const u8 data_segment_data_160[] = {
  0xb4, 0x76, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x00, 
};

static const u8 data_segment_data_161[] = {
  0x27, 0x94, 0x05, 0x75, 0x70, 0x70, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_162[] = {
  0xb7, 0x82, 0x05, 0x75, 0x74, 0x66, 0x2d, 0x38, 0x00, 
};

static const u8 data_segment_data_163[] = {
  0x4e, 0x34, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x00, 
};

static const u8 data_segment_data_164[] = {
  0x7d, 0xbe, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x00, 
};

static const u8 data_segment_data_165[] = {
  0x98, 0xa8, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x00, 
};

static const u8 data_segment_data_166[] = {
  0xe6, 0xac, 0x03, 0x7a, 0x69, 0x70, 0x00, 
};

static const u8 data_segment_data_167[] = {
  0x95, 0xd6, 0x07, 0x5f, 0x5f, 0x61, 0x62, 0x73, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_168[] = {
  0xc4, 0x82, 0x07, 0x5f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_169[] = {
  0x0e, 0xdb, 0x07, 0x5f, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_170[] = {
  0x03, 0x30, 0x09, 0x5f, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x73, 0x5f, 0x5f, 
  0x00, 
};

static const u8 data_segment_data_171[] = {
  0x2b, 0x65, 0x08, 0x5f, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x5f, 0x00, 
  
};

static const u8 data_segment_data_172[] = {
  0x42, 0x88, 0x0f, 0x5f, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x63, 
  0x6c, 0x61, 0x73, 0x73, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_173[] = {
  0xc6, 0x5f, 0x0c, 0x5f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 
  0x73, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_174[] = {
  0x7f, 0x54, 0x08, 0x5f, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x5f, 0x00, 
  
};

static const u8 data_segment_data_175[] = {
  0x78, 0x11, 0x0a, 0x5f, 0x5f, 0x64, 0x69, 0x76, 0x6d, 0x6f, 0x64, 0x5f, 
  0x5f, 0x00, 
};

static const u8 data_segment_data_176[] = {
  0x71, 0x3e, 0x06, 0x5f, 0x5f, 0x65, 0x71, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_177[] = {
  0x03, 0x54, 0x08, 0x5f, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x5f, 0x00, 
  
};

static const u8 data_segment_data_178[] = {
  0x46, 0x5f, 0x0c, 0x5f, 0x5f, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x64, 0x69, 
  0x76, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_179[] = {
  0xa7, 0x46, 0x06, 0x5f, 0x5f, 0x67, 0x65, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_180[] = {
  0xb6, 0x82, 0x06, 0x5f, 0x5f, 0x67, 0x74, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_181[] = {
  0x6d, 0x4a, 0x08, 0x5f, 0x5f, 0x69, 0x61, 0x64, 0x64, 0x5f, 0x5f, 0x00, 
  
};

static const u8 data_segment_data_182[] = {
  0x38, 0x3e, 0x0a, 0x5f, 0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 
  0x5f, 0x00, 
};

static const u8 data_segment_data_183[] = {
  0xf7, 0x77, 0x0a, 0x5f, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x5f, 
  0x5f, 0x00, 
};

static const u8 data_segment_data_184[] = {
  0x08, 0x78, 0x08, 0x5f, 0x5f, 0x69, 0x73, 0x75, 0x62, 0x5f, 0x5f, 0x00, 
  
};

static const u8 data_segment_data_185[] = {
  0xcc, 0x13, 0x06, 0x5f, 0x5f, 0x6c, 0x65, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_186[] = {
  0x09, 0x88, 0x0a, 0x5f, 0x5f, 0x6c, 0x73, 0x68, 0x69, 0x66, 0x74, 0x5f, 
  0x5f, 0x00, 
};

static const u8 data_segment_data_187[] = {
  0x5d, 0x68, 0x06, 0x5f, 0x5f, 0x6c, 0x74, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_188[] = {
  0x49, 0xf3, 0x0a, 0x5f, 0x5f, 0x6d, 0x61, 0x74, 0x6d, 0x75, 0x6c, 0x5f, 
  0x5f, 0x00, 
};

static const u8 data_segment_data_189[] = {
  0x63, 0x37, 0x07, 0x5f, 0x5f, 0x6d, 0x6f, 0x64, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_190[] = {
  0x31, 0x42, 0x07, 0x5f, 0x5f, 0x6d, 0x75, 0x6c, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_191[] = {
  0x0e, 0x0b, 0x06, 0x5f, 0x5f, 0x6e, 0x65, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_192[] = {
  0x69, 0xd5, 0x07, 0x5f, 0x5f, 0x6e, 0x65, 0x67, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_193[] = {
  0x38, 0xbb, 0x06, 0x5f, 0x5f, 0x6f, 0x72, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_194[] = {
  0xc8, 0x23, 0x08, 0x5f, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x5f, 0x00, 
  
};

static const u8 data_segment_data_195[] = {
  0x29, 0xf0, 0x07, 0x5f, 0x5f, 0x70, 0x6f, 0x73, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_196[] = {
  0x2d, 0x00, 0x07, 0x5f, 0x5f, 0x70, 0x6f, 0x77, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_197[] = {
  0x00, 0xbb, 0x0e, 0x5f, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x5f, 0x70, 0x72, 
  0x69, 0x6e, 0x74, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_198[] = {
  0x61, 0xff, 0x0c, 0x5f, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 
  0x64, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_199[] = {
  0x57, 0x98, 0x0a, 0x5f, 0x5f, 0x72, 0x73, 0x68, 0x69, 0x66, 0x74, 0x5f, 
  0x5f, 0x00, 
};

static const u8 data_segment_data_200[] = {
  0x21, 0x09, 0x07, 0x5f, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_201[] = {
  0x4f, 0xcf, 0x0d, 0x5f, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x62, 0x61, 
  0x63, 0x6b, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_202[] = {
  0x88, 0xef, 0x0b, 0x5f, 0x5f, 0x74, 0x72, 0x75, 0x65, 0x64, 0x69, 0x76, 
  0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_203[] = {
  0x20, 0xec, 0x07, 0x5f, 0x5f, 0x78, 0x6f, 0x72, 0x5f, 0x5f, 0x00, 
};

static const u8 data_segment_data_204[] = {
  0x6c, 0x1a, 0x03, 0x25, 0x23, 0x6f, 0x00, 
};

static const u8 data_segment_data_205[] = {
  0x7b, 0x1a, 0x03, 0x25, 0x23, 0x78, 0x00, 
};

static const u8 data_segment_data_206[] = {
  0x58, 0x37, 0x05, 0x7b, 0x3a, 0x23, 0x62, 0x7d, 0x00, 
};

static const u8 data_segment_data_207[] = {
  0x73, 0x1e, 0x20, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x20, 0x72, 
  0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x64, 0x65, 0x70, 
  0x74, 0x68, 0x20, 0x65, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x00, 
  
};

static const u8 data_segment_data_208[] = {
  0x80, 0x8c, 0x08, 0x3c, 0x6c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x3e, 0x00, 
  
};

static const u8 data_segment_data_209[] = {
  0xd4, 0x15, 0x0a, 0x3c, 0x6c, 0x69, 0x73, 0x74, 0x63, 0x6f, 0x6d, 0x70, 
  0x3e, 0x00, 
};

static const u8 data_segment_data_210[] = {
  0xcc, 0x8d, 0x0a, 0x3c, 0x64, 0x69, 0x63, 0x74, 0x63, 0x6f, 0x6d, 0x70, 
  0x3e, 0x00, 
};

static const u8 data_segment_data_211[] = {
  0x54, 0x51, 0x09, 0x3c, 0x73, 0x65, 0x74, 0x63, 0x6f, 0x6d, 0x70, 0x3e, 
  0x00, 
};

static const u8 data_segment_data_212[] = {
  0x34, 0x6a, 0x09, 0x3c, 0x67, 0x65, 0x6e, 0x65, 0x78, 0x70, 0x72, 0x3e, 
  0x00, 
};

static const u8 data_segment_data_213[] = {
  0x52, 0x53, 0x08, 0x3c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3e, 0x00, 
  
};

static const u8 data_segment_data_214[] = {
  0xe3, 0x63, 0x07, 0x3c, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x3e, 0x00, 
};

static const u8 data_segment_data_215[] = {
  0x25, 0xa4, 0x11, 0x70, 0x79, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x20, 0x65, 
  0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x65, 0x64, 0x00, 
};

static const u8 data_segment_data_216[] = {
  0x1a, 0xb7, 0x07, 0x42, 0x79, 0x74, 0x65, 0x73, 0x49, 0x4f, 0x00, 
};

static const u8 data_segment_data_217[] = {
  0xf0, 0x7e, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x44, 0x69, 
  0x63, 0x74, 0x00, 
};

static const u8 data_segment_data_218[] = {
  0xec, 0xf0, 0x12, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x73, 0x79, 0x6e, 0x63, 
  0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_219[] = {
  0x76, 0x76, 0x08, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x4f, 0x00, 
  
};

static const u8 data_segment_data_220[] = {
  0x22, 0xd1, 0x0c, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x64, 0x65, 0x45, 0x72, 
  0x72, 0x6f, 0x72, 0x00, 
};

static const u8 data_segment_data_221[] = {
  0x3c, 0x0b, 0x0a, 0x61, 0x32, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x36, 
  0x34, 0x00, 
};

static const u8 data_segment_data_222[] = {
  0x7d, 0x6d, 0x07, 0x61, 0x62, 0x73, 0x5f, 0x74, 0x6f, 0x6c, 0x00, 
};

static const u8 data_segment_data_223[] = {
  0x1b, 0xa0, 0x04, 0x61, 0x63, 0x6f, 0x73, 0x00, 
};

static const u8 data_segment_data_224[] = {
  0x13, 0xa3, 0x05, 0x61, 0x63, 0x6f, 0x73, 0x68, 0x00, 
};

static const u8 data_segment_data_225[] = {
  0xd1, 0xc5, 0x15, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 
  0x64, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 
  0x00, 
};

static const u8 data_segment_data_226[] = {
  0x90, 0x23, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 
  0x65, 0x65, 0x00, 
};

static const u8 data_segment_data_227[] = {
  0x78, 0x1a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x65, 
  0x77, 0x00, 
};

static const u8 data_segment_data_228[] = {
  0x58, 0x3f, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 
  0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_229[] = {
  0x44, 0x32, 0x03, 0x61, 0x64, 0x64, 0x00, 
};

static const u8 data_segment_data_230[] = {
  0xc7, 0xc6, 0x04, 0x61, 0x72, 0x67, 0x76, 0x00, 
};

static const u8 data_segment_data_231[] = {
  0x7c, 0x72, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x00, 
};

static const u8 data_segment_data_232[] = {
  0x50, 0xe5, 0x04, 0x61, 0x73, 0x69, 0x6e, 0x00, 
};

static const u8 data_segment_data_233[] = {
  0x38, 0x8f, 0x05, 0x61, 0x73, 0x69, 0x6e, 0x68, 0x00, 
};

static const u8 data_segment_data_234[] = {
  0x0a, 0x69, 0x12, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x72, 0x65, 
  0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x00, 
};

static const u8 data_segment_data_235[] = {
  0x08, 0x86, 0x10, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x72, 0x69, 
  0x70, 0x65, 0x6d, 0x64, 0x31, 0x36, 0x30, 0x00, 
};

static const u8 data_segment_data_236[] = {
  0x73, 0x45, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x68, 
  0x61, 0x31, 0x00, 
};

static const u8 data_segment_data_237[] = {
  0xd3, 0x5b, 0x0d, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x68, 
  0x61, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_238[] = {
  0x14, 0x81, 0x0d, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x68, 
  0x61, 0x35, 0x31, 0x32, 0x00, 
};

static const u8 data_segment_data_239[] = {
  0x1f, 0xbe, 0x04, 0x61, 0x74, 0x61, 0x6e, 0x00, 
};

static const u8 data_segment_data_240[] = {
  0xcd, 0x81, 0x05, 0x61, 0x74, 0x61, 0x6e, 0x32, 0x00, 
};

static const u8 data_segment_data_241[] = {
  0x97, 0x81, 0x05, 0x61, 0x74, 0x61, 0x6e, 0x68, 0x00, 
};

static const u8 data_segment_data_242[] = {
  0x3c, 0x8f, 0x0a, 0x62, 0x32, 0x61, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x36, 
  0x34, 0x00, 
};

static const u8 data_segment_data_243[] = {
  0xba, 0x73, 0x06, 0x62, 0x69, 0x67, 0x69, 0x6e, 0x74, 0x00, 
};

static const u8 data_segment_data_244[] = {
  0xe0, 0x48, 0x03, 0x62, 0x69, 0x6e, 0x00, 
};

static const u8 data_segment_data_245[] = {
  0x97, 0xa2, 0x0c, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x74, 
  0x68, 0x6f, 0x64, 0x00, 
};

static const u8 data_segment_data_246[] = {
  0x61, 0x99, 0x09, 0x62, 0x79, 0x74, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 
  0x00, 
};

static const u8 data_segment_data_247[] = {
  0x4d, 0x38, 0x08, 0x63, 0x61, 0x6c, 0x63, 0x73, 0x69, 0x7a, 0x65, 0x00, 
  
};

static const u8 data_segment_data_248[] = {
  0x0a, 0x5b, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 
  0x72, 0x61, 0x63, 0x74, 0x00, 
};

static const u8 data_segment_data_249[] = {
  0x06, 0xb0, 0x04, 0x63, 0x65, 0x69, 0x6c, 0x00, 
};

static const u8 data_segment_data_250[] = {
  0x4e, 0xbf, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_251[] = {
  0xe8, 0xbf, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x00, 
};

static const u8 data_segment_data_252[] = {
  0x74, 0xca, 0x07, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x00, 
};

static const u8 data_segment_data_253[] = {
  0xb6, 0xf4, 0x05, 0x63, 0x6d, 0x61, 0x74, 0x68, 0x00, 
};

static const u8 data_segment_data_254[] = {
  0xc5, 0x9d, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x00, 
};

static const u8 data_segment_data_255[] = {
  0x33, 0x14, 0x08, 0x63, 0x6f, 0x70, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x00, 
  
};

static const u8 data_segment_data_256[] = {
  0x7a, 0x4c, 0x03, 0x63, 0x6f, 0x73, 0x00, 
};

static const u8 data_segment_data_257[] = {
  0xd2, 0xdb, 0x04, 0x63, 0x6f, 0x73, 0x68, 0x00, 
};

static const u8 data_segment_data_258[] = {
  0xca, 0xeb, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 
  0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_259[] = {
  0x46, 0x41, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 
  0x69, 0x6d, 0x65, 0x00, 
};

static const u8 data_segment_data_260[] = {
  0xf4, 0xbd, 0x0b, 0x64, 0x62, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x32, 
  0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_261[] = {
  0x07, 0x0d, 0x0a, 0x64, 0x62, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x36, 
  0x34, 0x00, 
};

static const u8 data_segment_data_262[] = {
  0xde, 0xd8, 0x0c, 0x64, 0x62, 0x5f, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x69, 
  0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_263[] = {
  0x6d, 0x5b, 0x0b, 0x64, 0x62, 0x5f, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x69, 
  0x36, 0x34, 0x00, 
};

static const u8 data_segment_data_264[] = {
  0x2d, 0x2a, 0x0b, 0x64, 0x62, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x32, 
  0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_265[] = {
  0x3e, 0xd2, 0x0a, 0x64, 0x62, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x36, 
  0x34, 0x00, 
};

static const u8 data_segment_data_266[] = {
  0xc2, 0x49, 0x16, 0x64, 0x62, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x61, 
  0x62, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 
  0x74, 0x00, 
};

static const u8 data_segment_data_267[] = {
  0xd9, 0x86, 0x0a, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x65, 0x6e, 
  0x64, 0x00, 
};

static const u8 data_segment_data_268[] = {
  0x40, 0x69, 0x13, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x66, 0x69, 
  0x6e, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x00, 
};

static const u8 data_segment_data_269[] = {
  0xf6, 0x26, 0x15, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x66, 0x69, 
  0x6e, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 
  0x00, 
};

static const u8 data_segment_data_270[] = {
  0xe7, 0x21, 0x11, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x6c, 0x6f, 
  0x77, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_271[] = {
  0x71, 0x41, 0x0b, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x6e, 0x65, 
  0x78, 0x74, 0x00, 
};

static const u8 data_segment_data_272[] = {
  0xc7, 0x7e, 0x0f, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x70, 0x72, 
  0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x00, 
};

static const u8 data_segment_data_273[] = {
  0x50, 0x0e, 0x0d, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x72, 0x65, 
  0x6d, 0x6f, 0x76, 0x65, 0x00, 
};

static const u8 data_segment_data_274[] = {
  0xc9, 0xb4, 0x0c, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x73, 0x74, 
  0x6f, 0x72, 0x65, 0x00, 
};

static const u8 data_segment_data_275[] = {
  0x07, 0x5c, 0x0d, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x75, 0x70, 
  0x64, 0x61, 0x74, 0x65, 0x00, 
};

static const u8 data_segment_data_276[] = {
  0x26, 0x52, 0x11, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x75, 0x70, 
  0x70, 0x65, 0x72, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_277[] = {
  0x8a, 0x8e, 0x12, 0x64, 0x62, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x62, 
  0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_278[] = {
  0xb9, 0xa7, 0x11, 0x64, 0x62, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x62, 
  0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x36, 0x34, 0x00, 
};

static const u8 data_segment_data_279[] = {
  0xdc, 0xbf, 0x0c, 0x64, 0x62, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 
  0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_280[] = {
  0x2f, 0x6a, 0x0b, 0x64, 0x62, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 
  0x36, 0x34, 0x00, 
};

static const u8 data_segment_data_281[] = {
  0xea, 0x6f, 0x10, 0x64, 0x62, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 
  0x75, 0x73, 0x5f, 0x69, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_282[] = {
  0xd9, 0xe4, 0x0f, 0x64, 0x62, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 
  0x75, 0x73, 0x5f, 0x69, 0x36, 0x34, 0x00, 
};

static const u8 data_segment_data_283[] = {
  0x9d, 0x94, 0x0e, 0x64, 0x62, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 
  0x5f, 0x69, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_284[] = {
  0xce, 0x2a, 0x0d, 0x64, 0x62, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 
  0x5f, 0x69, 0x36, 0x34, 0x00, 
};

static const u8 data_segment_data_285[] = {
  0xe4, 0x06, 0x0d, 0x64, 0x62, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 
  0x69, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_286[] = {
  0x17, 0x74, 0x0c, 0x64, 0x62, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 
  0x69, 0x36, 0x34, 0x00, 
};

static const u8 data_segment_data_287[] = {
  0x2a, 0x7d, 0x0e, 0x64, 0x62, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 
  0x5f, 0x69, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_288[] = {
  0x19, 0x4a, 0x0d, 0x64, 0x62, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 
  0x5f, 0x69, 0x36, 0x34, 0x00, 
};

static const u8 data_segment_data_289[] = {
  0xab, 0x17, 0x12, 0x64, 0x62, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x62, 
  0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_290[] = {
  0x78, 0x18, 0x11, 0x64, 0x62, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x62, 
  0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x36, 0x34, 0x00, 
};

static const u8 data_segment_data_291[] = {
  0xa9, 0x59, 0x06, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x00, 
};

static const u8 data_segment_data_292[] = {
  0xce, 0x7d, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x00, 
};

static const u8 data_segment_data_293[] = {
  0x02, 0x41, 0x07, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x73, 0x00, 
};

static const u8 data_segment_data_294[] = {
  0xdb, 0xc8, 0x07, 0x64, 0x65, 0x6c, 0x61, 0x74, 0x74, 0x72, 0x00, 
};

static const u8 data_segment_data_295[] = {
  0x6e, 0xdb, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_296[] = {
  0x2d, 0xa9, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x76, 0x69, 0x65, 0x77, 
  0x00, 
};

static const u8 data_segment_data_297[] = {
  0x72, 0x24, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 
  0x65, 0x00, 
};

static const u8 data_segment_data_298[] = {
  0x9c, 0xfa, 0x11, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 
  0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x00, 
};

static const u8 data_segment_data_299[] = {
  0xcd, 0xc4, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x00, 
};

static const u8 data_segment_data_300[] = {
  0x0f, 0x71, 0x07, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x00, 
};

static const u8 data_segment_data_301[] = {
  0x2d, 0x1f, 0x03, 0x64, 0x6f, 0x63, 0x00, 
};

static const u8 data_segment_data_302[] = {
  0xe9, 0x2f, 0x04, 0x64, 0x75, 0x6d, 0x70, 0x00, 
};

static const u8 data_segment_data_303[] = {
  0x7a, 0x2d, 0x05, 0x64, 0x75, 0x6d, 0x70, 0x73, 0x00, 
};

static const u8 data_segment_data_304[] = {
  0xc0, 0xb5, 0x01, 0x65, 0x00, 
};

static const u8 data_segment_data_305[] = {
  0x3f, 0x70, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 
  0x67, 0x00, 
};

static const u8 data_segment_data_306[] = {
  0x43, 0xca, 0x06, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x00, 
};

static const u8 data_segment_data_307[] = {
  0x71, 0xba, 0x09, 0x65, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 
  0x00, 
};

static const u8 data_segment_data_308[] = {
  0x94, 0x23, 0x03, 0x65, 0x72, 0x66, 0x00, 
};

static const u8 data_segment_data_309[] = {
  0x77, 0x96, 0x04, 0x65, 0x72, 0x66, 0x63, 0x00, 
};

static const u8 data_segment_data_310[] = {
  0x85, 0xbe, 0x04, 0x65, 0x78, 0x69, 0x74, 0x00, 
};

static const u8 data_segment_data_311[] = {
  0xc8, 0x24, 0x03, 0x65, 0x78, 0x70, 0x00, 
};

static const u8 data_segment_data_312[] = {
  0xce, 0x41, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 
  0x6e, 0x00, 
};

static const u8 data_segment_data_313[] = {
  0x74, 0x72, 0x05, 0x65, 0x78, 0x70, 0x6d, 0x31, 0x00, 
};

static const u8 data_segment_data_314[] = {
  0x93, 0x12, 0x04, 0x66, 0x61, 0x62, 0x73, 0x00, 
};

static const u8 data_segment_data_315[] = {
  0x25, 0xbe, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_316[] = {
  0x35, 0x44, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x00, 
};

static const u8 data_segment_data_317[] = {
  0x2e, 0x12, 0x08, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x31, 0x32, 0x38, 0x00, 
  
};

static const u8 data_segment_data_318[] = {
  0x7d, 0x46, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x00, 
};

static const u8 data_segment_data_319[] = {
  0x61, 0xc1, 0x05, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x00, 
};

static const u8 data_segment_data_320[] = {
  0xe5, 0x44, 0x04, 0x66, 0x6d, 0x6f, 0x64, 0x00, 
};

static const u8 data_segment_data_321[] = {
  0x1c, 0x98, 0x05, 0x66, 0x72, 0x65, 0x78, 0x70, 0x00, 
};

static const u8 data_segment_data_322[] = {
  0x37, 0xbd, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x6b, 0x65, 0x79, 0x73, 0x00, 
  
};

static const u8 data_segment_data_323[] = {
  0xed, 0x9c, 0x09, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x73, 0x65, 0x74, 
  0x00, 
};

static const u8 data_segment_data_324[] = {
  0x27, 0x02, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00, 
  
};

static const u8 data_segment_data_325[] = {
  0x02, 0x90, 0x05, 0x67, 0x61, 0x6d, 0x6d, 0x61, 0x00, 
};

static const u8 data_segment_data_326[] = {
  0x96, 0xc3, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 
  0x00, 
};

static const u8 data_segment_data_327[] = {
  0x12, 0x3f, 0x0a, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 
  0x6e, 0x00, 
};

static const u8 data_segment_data_328[] = {
  0xc4, 0x4a, 0x14, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 
  0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x73, 0x00, 
  
};

static const u8 data_segment_data_329[] = {
  0x4d, 0x1a, 0x19, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 
  0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 
  0x74, 0x65, 0x72, 0x73, 0x00, 
};

static const u8 data_segment_data_330[] = {
  0xac, 0x98, 0x0d, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 
  0x68, 0x61, 0x73, 0x68, 0x00, 
};

static const u8 data_segment_data_331[] = {
  0x17, 0xff, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 
  0x78, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 
  0x00, 
};

static const u8 data_segment_data_332[] = {
  0x48, 0x29, 0x07, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x00, 
};

static const u8 data_segment_data_333[] = {
  0x1f, 0x2a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 
  0x72, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x00, 
};

static const u8 data_segment_data_334[] = {
  0x90, 0xb2, 0x06, 0x67, 0x65, 0x74, 0x74, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_335[] = {
  0x78, 0xac, 0x08, 0x67, 0x65, 0x74, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x00, 
  
};

static const u8 data_segment_data_336[] = {
  0xe8, 0xbb, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x00, 
  
};

static const u8 data_segment_data_337[] = {
  0xe7, 0xed, 0x05, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x00, 
};

static const u8 data_segment_data_338[] = {
  0x70, 0x50, 0x03, 0x68, 0x65, 0x78, 0x00, 
};

static const u8 data_segment_data_339[] = {
  0x2a, 0x7f, 0x07, 0x68, 0x65, 0x78, 0x6c, 0x69, 0x66, 0x79, 0x00, 
};

static const u8 data_segment_data_340[] = {
  0x47, 0xb7, 0x04, 0x69, 0x6d, 0x61, 0x67, 0x00, 
};

static const u8 data_segment_data_341[] = {
  0x17, 0x2d, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 
  0x61, 0x74, 0x69, 0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_342[] = {
  0x28, 0x2a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 
  0x69, 0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_343[] = {
  0x06, 0xdd, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 
  0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x00, 
};

static const u8 data_segment_data_344[] = {
  0x21, 0x97, 0x0a, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 
  0x74, 0x00, 
};

static const u8 data_segment_data_345[] = {
  0x1b, 0xc6, 0x0d, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 
  0x65, 0x67, 0x65, 0x64, 0x00, 
};

static const u8 data_segment_data_346[] = {
  0x49, 0x4e, 0x07, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x00, 
};

static const u8 data_segment_data_347[] = {
  0xf7, 0x68, 0x0a, 0x69, 0x73, 0x64, 0x69, 0x73, 0x6a, 0x6f, 0x69, 0x6e, 
  0x74, 0x00, 
};

static const u8 data_segment_data_348[] = {
  0xa6, 0xab, 0x08, 0x69, 0x73, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x65, 0x00, 
  
};

static const u8 data_segment_data_349[] = {
  0x3e, 0x11, 0x05, 0x69, 0x73, 0x69, 0x6e, 0x66, 0x00, 
};

static const u8 data_segment_data_350[] = {
  0x9e, 0x03, 0x05, 0x69, 0x73, 0x6e, 0x61, 0x6e, 0x00, 
};

static const u8 data_segment_data_351[] = {
  0xb9, 0xc1, 0x08, 0x69, 0x73, 0x73, 0x75, 0x62, 0x73, 0x65, 0x74, 0x00, 
  
};

static const u8 data_segment_data_352[] = {
  0xfc, 0xec, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x65, 
  0x74, 0x00, 
};

static const u8 data_segment_data_353[] = {
  0x25, 0x92, 0x08, 0x69, 0x74, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x00, 
  
};

static const u8 data_segment_data_354[] = {
  0x47, 0xbe, 0x08, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x00, 
  
};

static const u8 data_segment_data_355[] = {
  0xf6, 0x13, 0x08, 0x6b, 0x62, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x00, 
  
};

static const u8 data_segment_data_356[] = {
  0x62, 0x8b, 0x08, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x00, 
  
};

static const u8 data_segment_data_357[] = {
  0x40, 0x6f, 0x05, 0x6c, 0x64, 0x65, 0x78, 0x70, 0x00, 
};

static const u8 data_segment_data_358[] = {
  0xce, 0x6c, 0x06, 0x6c, 0x67, 0x61, 0x6d, 0x6d, 0x61, 0x00, 
};

static const u8 data_segment_data_359[] = {
  0x63, 0x24, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x00, 
};

static const u8 data_segment_data_360[] = {
  0xb0, 0xb0, 0x05, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x00, 
};

static const u8 data_segment_data_361[] = {
  0x21, 0x3f, 0x03, 0x6c, 0x6f, 0x67, 0x00, 
};

static const u8 data_segment_data_362[] = {
  0x40, 0x91, 0x05, 0x6c, 0x6f, 0x67, 0x31, 0x30, 0x00, 
};

static const u8 data_segment_data_363[] = {
  0x73, 0x23, 0x04, 0x6c, 0x6f, 0x67, 0x32, 0x00, 
};

static const u8 data_segment_data_364[] = {
  0x35, 0xbb, 0x04, 0x6d, 0x61, 0x74, 0x68, 0x00, 
};

static const u8 data_segment_data_365[] = {
  0xb1, 0x43, 0x03, 0x6d, 0x61, 0x78, 0x00, 
};

static const u8 data_segment_data_366[] = {
  0xd4, 0x70, 0x07, 0x6d, 0x61, 0x78, 0x73, 0x69, 0x7a, 0x65, 0x00, 
};

static const u8 data_segment_data_367[] = {
  0x69, 0x44, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x76, 0x69, 0x65, 
  0x77, 0x00, 
};

static const u8 data_segment_data_368[] = {
  0xaf, 0x42, 0x03, 0x6d, 0x69, 0x6e, 0x00, 
};

static const u8 data_segment_data_369[] = {
  0x25, 0xc0, 0x04, 0x6d, 0x6f, 0x64, 0x66, 0x00, 
};

static const u8 data_segment_data_370[] = {
  0xbf, 0x99, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x00, 
};

static const u8 data_segment_data_371[] = {
  0xec, 0xd1, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x00, 
};

static const u8 data_segment_data_372[] = {
  0xc1, 0x45, 0x03, 0x6d, 0x70, 0x79, 0x00, 
};

static const u8 data_segment_data_373[] = {
  0x4a, 0x52, 0x03, 0x6e, 0x32, 0x73, 0x00, 
};

static const u8 data_segment_data_374[] = {
  0xa2, 0x75, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x00, 
};

static const u8 data_segment_data_375[] = {
  0x1e, 0x16, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x74, 0x75, 0x70, 0x6c, 
  0x65, 0x00, 
};

static const u8 data_segment_data_376[] = {
  0xfd, 0x5c, 0x03, 0x6f, 0x63, 0x74, 0x00, 
};

static const u8 data_segment_data_377[] = {
  0xbc, 0xd1, 0x04, 0x70, 0x61, 0x63, 0x6b, 0x00, 
};

static const u8 data_segment_data_378[] = {
  0x1f, 0xa9, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x6f, 
  0x00, 
};

static const u8 data_segment_data_379[] = {
  0x87, 0xe5, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 
  0x00, 
};

static const u8 data_segment_data_380[] = {
  0x88, 0xce, 0x04, 0x70, 0x61, 0x74, 0x68, 0x00, 
};

static const u8 data_segment_data_381[] = {
  0xf3, 0x74, 0x0a, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x68, 0x72, 0x6f, 
  0x77, 0x00, 
};

static const u8 data_segment_data_382[] = {
  0x6a, 0xd5, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x00, 
};

static const u8 data_segment_data_383[] = {
  0x1c, 0x70, 0x02, 0x70, 0x69, 0x00, 
};

static const u8 data_segment_data_384[] = {
  0x3a, 0x19, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x00, 
  
};

static const u8 data_segment_data_385[] = {
  0x05, 0x0c, 0x05, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x00, 
};

static const u8 data_segment_data_386[] = {
  0x1c, 0x22, 0x0f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x63, 
  0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_387[] = {
  0xc2, 0x29, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x00, 
  
};

static const u8 data_segment_data_388[] = {
  0x73, 0xd2, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 
  0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x00, 
};

static const u8 data_segment_data_389[] = {
  0xfe, 0x41, 0x0b, 0x70, 0x79, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x75, 
  0x73, 0x65, 0x00, 
};

static const u8 data_segment_data_390[] = {
  0x87, 0x3f, 0x07, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x73, 0x00, 
};

static const u8 data_segment_data_391[] = {
  0x99, 0xea, 0x10, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x00, 
};

static const u8 data_segment_data_392[] = {
  0xec, 0xed, 0x10, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 
  0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_393[] = {
  0xbf, 0xf9, 0x04, 0x72, 0x65, 0x61, 0x6c, 0x00, 
};

static const u8 data_segment_data_394[] = {
  0xd7, 0x9b, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6b, 
  0x65, 0x79, 0x00, 
};

static const u8 data_segment_data_395[] = {
  0xe5, 0xf9, 0x04, 0x72, 0x65, 0x63, 0x74, 0x00, 
};

static const u8 data_segment_data_396[] = {
  0x56, 0x46, 0x07, 0x72, 0x65, 0x6c, 0x5f, 0x74, 0x6f, 0x6c, 0x00, 
};

static const u8 data_segment_data_397[] = {
  0xbf, 0x84, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x61, 
  0x75, 0x74, 0x68, 0x00, 
};

static const u8 data_segment_data_398[] = {
  0xad, 0x1c, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x61, 
  0x75, 0x74, 0x68, 0x32, 0x00, 
};

static const u8 data_segment_data_399[] = {
  0xec, 0x4c, 0x11, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x72, 
  0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x00, 
};

static const u8 data_segment_data_400[] = {
  0xa1, 0x6e, 0x08, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x64, 0x00, 
  
};

static const u8 data_segment_data_401[] = {
  0x55, 0x64, 0x09, 0x72, 0x69, 0x70, 0x65, 0x6d, 0x64, 0x31, 0x36, 0x30, 
  0x00, 
};

static const u8 data_segment_data_402[] = {
  0x15, 0xd0, 0x0a, 0x72, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 
  0x6e, 0x00, 
};

static const u8 data_segment_data_403[] = {
  0x4a, 0x85, 0x03, 0x73, 0x32, 0x6e, 0x00, 
};

static const u8 data_segment_data_404[] = {
  0x53, 0x8b, 0x09, 0x73, 0x61, 0x79, 0x5f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 
  0x00, 
};

static const u8 data_segment_data_405[] = {
  0x81, 0xf5, 0x0a, 0x73, 0x61, 0x79, 0x5f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 
  0x32, 0x00, 
};

static const u8 data_segment_data_406[] = {
  0xe0, 0xac, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x00, 
  
};

static const u8 data_segment_data_407[] = {
  0x9d, 0x75, 0x04, 0x73, 0x65, 0x65, 0x6b, 0x00, 
};

static const u8 data_segment_data_408[] = {
  0xe4, 0x36, 0x18, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 
  0x65, 0x78, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x69, 0x6e, 0x6c, 
  0x69, 0x6e, 0x65, 0x00, 
};

static const u8 data_segment_data_409[] = {
  0x1f, 0xe5, 0x1c, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 
  0x65, 0x78, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x69, 0x6e, 0x6c, 
  0x69, 0x6e, 0x65, 0x5f, 0x72, 0x61, 0x77, 0x00, 
};

static const u8 data_segment_data_410[] = {
  0x2f, 0xac, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 
  0x6e, 0x65, 0x00, 
};

static const u8 data_segment_data_411[] = {
  0x14, 0x00, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 
  0x6e, 0x65, 0x5f, 0x72, 0x61, 0x77, 0x00, 
};

static const u8 data_segment_data_412[] = {
  0x59, 0xa8, 0x19, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 
  0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 
  0x74, 0x65, 0x72, 0x73, 0x00, 
};

static const u8 data_segment_data_413[] = {
  0x03, 0x39, 0x0e, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x69, 
  0x6c, 0x65, 0x67, 0x65, 0x64, 0x00, 
};

static const u8 data_segment_data_414[] = {
  0xdc, 0x69, 0x16, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 
  0x73, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 
  0x73, 0x00, 
};

static const u8 data_segment_data_415[] = {
  0x0b, 0xbb, 0x13, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 
  0x72, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x00, 
};

static const u8 data_segment_data_416[] = {
  0x04, 0x59, 0x06, 0x73, 0x65, 0x74, 0x74, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_417[] = {
  0x8e, 0xac, 0x04, 0x73, 0x68, 0x61, 0x31, 0x00, 
};

static const u8 data_segment_data_418[] = {
  0x2e, 0x01, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x00, 
};

static const u8 data_segment_data_419[] = {
  0x69, 0xfd, 0x06, 0x73, 0x68, 0x61, 0x35, 0x31, 0x32, 0x00, 
};

static const u8 data_segment_data_420[] = {
  0xb1, 0x90, 0x03, 0x73, 0x69, 0x6e, 0x00, 
};

static const u8 data_segment_data_421[] = {
  0xb9, 0xa6, 0x04, 0x73, 0x69, 0x6e, 0x68, 0x00, 
};

static const u8 data_segment_data_422[] = {
  0xb5, 0xf4, 0x05, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x00, 
};

static const u8 data_segment_data_423[] = {
  0x6a, 0xd3, 0x0a, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x6c, 0x69, 0x6e, 0x65, 
  0x73, 0x00, 
};

static const u8 data_segment_data_424[] = {
  0x21, 0x44, 0x04, 0x73, 0x71, 0x72, 0x74, 0x00, 
};

static const u8 data_segment_data_425[] = {
  0xce, 0x67, 0x14, 0x73, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 
  0x5f, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x00, 
  
};

static const u8 data_segment_data_426[] = {
  0x60, 0xf8, 0x1b, 0x73, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 
  0x5f, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 
  0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x00, 
};

static const u8 data_segment_data_427[] = {
  0xbc, 0x8e, 0x03, 0x73, 0x79, 0x73, 0x00, 
};

static const u8 data_segment_data_428[] = {
  0xfe, 0x61, 0x03, 0x74, 0x61, 0x6e, 0x00, 
};

static const u8 data_segment_data_429[] = {
  0xd6, 0xa1, 0x04, 0x74, 0x61, 0x6e, 0x68, 0x00, 
};

static const u8 data_segment_data_430[] = {
  0x03, 0x4b, 0x0f, 0x74, 0x61, 0x70, 0x6f, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 
  0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x00, 
};

static const u8 data_segment_data_431[] = {
  0xe5, 0xaa, 0x12, 0x74, 0x61, 0x70, 0x6f, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 
  0x63, 0x6b, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x00, 
};

static const u8 data_segment_data_432[] = {
  0x14, 0xb1, 0x04, 0x74, 0x65, 0x6c, 0x6c, 0x00, 
};

static const u8 data_segment_data_433[] = {
  0xf0, 0xc1, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x00, 
};

static const u8 data_segment_data_434[] = {
  0x92, 0xb0, 0x06, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x74, 0x00, 
};

static const u8 data_segment_data_435[] = {
  0xd4, 0xea, 0x06, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x72, 0x00, 
};

static const u8 data_segment_data_436[] = {
  0xf7, 0xa3, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6c, 0x6f, 
  0x73, 0x65, 0x00, 
};

static const u8 data_segment_data_437[] = {
  0x85, 0xf2, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x72, 0x65, 
  0x61, 0x74, 0x65, 0x00, 
};

static const u8 data_segment_data_438[] = {
  0x98, 0x34, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x73, 0x73, 
  0x75, 0x65, 0x00, 
};

static const u8 data_segment_data_439[] = {
  0x95, 0x1f, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 
  0x6e, 0x00, 
};

static const u8 data_segment_data_440[] = {
  0x5c, 0xc0, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x74, 
  0x69, 0x72, 0x65, 0x00, 
};

static const u8 data_segment_data_441[] = {
  0xaa, 0xc6, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72, 0x61, 
  0x6e, 0x73, 0x66, 0x65, 0x72, 0x00, 
};

static const u8 data_segment_data_442[] = {
  0x3e, 0x15, 0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 
  0x6e, 0x00, 
};

static const u8 data_segment_data_443[] = {
  0xb5, 0x79, 0x23, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 
  0x78, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_444[] = {
  0x78, 0xd2, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x00, 
};

static const u8 data_segment_data_445[] = {
  0x8a, 0x29, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x00, 
};

static const u8 data_segment_data_446[] = {
  0xa2, 0x08, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x5f, 0x6e, 0x65, 0x77, 0x00, 
};

static const u8 data_segment_data_447[] = {
  0xc2, 0x4f, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x00, 
};

static const u8 data_segment_data_448[] = {
  0x5b, 0x99, 0x05, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x00, 
};

static const u8 data_segment_data_449[] = {
  0x89, 0x86, 0x06, 0x75, 0x61, 0x72, 0x72, 0x61, 0x79, 0x00, 
};

static const u8 data_segment_data_450[] = {
  0xc4, 0x88, 0x09, 0x75, 0x62, 0x69, 0x6e, 0x61, 0x73, 0x63, 0x69, 0x69, 
  0x00, 
};

static const u8 data_segment_data_451[] = {
  0x15, 0x9a, 0x0c, 0x75, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 
  0x6f, 0x6e, 0x73, 0x00, 
};

static const u8 data_segment_data_452[] = {
  0x65, 0x9d, 0x08, 0x75, 0x68, 0x61, 0x73, 0x68, 0x6c, 0x69, 0x62, 0x00, 
  
};

static const u8 data_segment_data_453[] = {
  0xb6, 0x66, 0x03, 0x75, 0x69, 0x6f, 0x00, 
};

static const u8 data_segment_data_454[] = {
  0xe8, 0x30, 0x05, 0x75, 0x6a, 0x73, 0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_455[] = {
  0xb1, 0xb9, 0x09, 0x75, 0x6e, 0x68, 0x65, 0x78, 0x6c, 0x69, 0x66, 0x79, 
  0x00, 
};

static const u8 data_segment_data_456[] = {
  0xf6, 0x7c, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_457[] = {
  0x07, 0x3c, 0x06, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x00, 
};

static const u8 data_segment_data_458[] = {
  0x0e, 0x6d, 0x0b, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x66, 0x72, 
  0x6f, 0x6d, 0x00, 
};

static const u8 data_segment_data_459[] = {
  0x47, 0x08, 0x07, 0x75, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x00, 
};

static const u8 data_segment_data_460[] = {
  0xc9, 0xf3, 0x04, 0x75, 0x73, 0x79, 0x73, 0x00, 
};

static const u8 data_segment_data_461[] = {
  0xe5, 0x9d, 0x05, 0x75, 0x74, 0x69, 0x6d, 0x65, 0x00, 
};

static const u8 data_segment_data_462[] = {
  0x24, 0xa8, 0x0b, 0x75, 0x75, 0x6f, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x65, 
  0x72, 0x74, 0x00, 
};

static const u8 data_segment_data_463[] = {
  0xd6, 0x08, 0x10, 0x75, 0x75, 0x6f, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x65, 
  0x72, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x00, 
};

static const u8 data_segment_data_464[] = {
  0xbf, 0xd3, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x00, 
};

static const u8 data_segment_data_465[] = {
  0x6e, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 
  0x6e, 0x66, 0x6f, 0x00, 
};

static const u8 data_segment_data_466[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 
  0xd1, 0x01, 0x00, 0x00, 0xc4, 0x26, 0x00, 0x00, 0x3f, 0x2b, 0x00, 0x00, 
  0x83, 0x2e, 0x00, 0x00, 0x36, 0x31, 0x00, 0x00, 0x6f, 0x33, 0x00, 0x00, 
  0x30, 0x35, 0x00, 0x00, 0x8e, 0x36, 0x00, 0x00, 0xe6, 0x37, 0x00, 0x00, 
  0xd9, 0x38, 0x00, 0x00, 0xb8, 0x39, 0x00, 0x00, 0x6a, 0x3a, 0x00, 0x00, 
  0xec, 0x3a, 0x00, 0x00, 0x73, 0x3b, 0x00, 0x00, 0x72, 0x3c, 0x00, 0x00, 
  0x18, 0x3d, 0x00, 0x00, 0xfe, 0x3d, 0x00, 0x00, 0x85, 0x3e, 0x00, 0x00, 
  0x1c, 0x3f, 0x00, 0x00, 0x82, 0x3f, 0x00, 0x00, 0xd5, 0x3f, 0x00, 0x00, 
  0x4a, 0x40, 0x00, 0x00, 0xe1, 0x40, 0x00, 0x00, 0x5f, 0x41, 0x00, 0x00, 
  0xc8, 0x41, 0x00, 0x00, 0x57, 0x42, 0x00, 0x00, 0xbb, 0x42, 0x00, 0x00, 
  0x1f, 0x43, 0x00, 0x00, 0xa3, 0x43, 0x00, 0x00, 0x05, 0x44, 0x00, 0x00, 
  0x5d, 0x44, 0x00, 0x00, 0xaf, 0x44, 0x00, 0x00, 0xe7, 0x44, 0x00, 0x00, 
  0x42, 0x45, 0x00, 0x00, 0xa8, 0x45, 0x00, 0x00, 0x19, 0x46, 0x00, 0x00, 
  0x7c, 0x46, 0x00, 0x00, 0xb7, 0x46, 0x00, 0x00, 0xfd, 0x46, 0x00, 0x00, 
  0x8a, 0x47, 0x00, 0x00, 0xe6, 0x47, 0x00, 0x00, 0x27, 0x48, 0x00, 0x00, 
  0x4a, 0x48, 0x00, 0x00, 0x88, 0x48, 0x00, 0x00, 0xe4, 0x48, 0x00, 0x00, 
  0x50, 0x49, 0x00, 0x00, 0xae, 0x49, 0x00, 0x00, 0x33, 0x4a, 0x00, 0x00, 
  0x85, 0x4a, 0x00, 0x00, 0xbf, 0x4a, 0x00, 0x00, 0xe4, 0x4a, 0x00, 0x00, 
  0x14, 0x4b, 0x00, 0x00, 0x29, 0x4b, 0x00, 0x00, 0x3f, 0x4b, 0x00, 0x00, 
  0x53, 0x4b, 0x00, 0x00, 0x6b, 0x4b, 0x00, 0x00, 0x99, 0x4b, 0x00, 0x00, 
  0xb3, 0x4b, 0x00, 0x00, 0xce, 0x4b, 0x00, 0x00, 0xe1, 0x4b, 0x00, 0x00, 
  0xf3, 0x4b, 0x00, 0x00, 0xfa, 0x4b, 0x00, 0x00, 0x32, 0x4c, 0x00, 0x00, 
  0x3a, 0x4c, 0x00, 0x00, 0x42, 0x4c, 0x00, 0x00, 0x4e, 0x4c, 0x00, 0x00, 
  0x5b, 0x4c, 0x00, 0x00, 0x67, 0x4c, 0x00, 0x00, 0x70, 0x4c, 0x00, 0x00, 
  0x7c, 0x4c, 0x00, 0x00, 0x83, 0x4c, 0x00, 0x00, 0x92, 0x4c, 0x00, 0x00, 
  0x9b, 0x4c, 0x00, 0x00, 0xa4, 0x4c, 0x00, 0x00, 0xad, 0x4c, 0x00, 0x00, 
  0xb5, 0x4c, 0x00, 0x00, 0xbe, 0x4c, 0x00, 0x00, 0xc6, 0x4c, 0x00, 0x00, 
  0xcd, 0x4c, 0x00, 0x00, 0xd7, 0x4c, 0x00, 0x00, 0xde, 0x4c, 0x00, 0x00, 
  0xea, 0x4c, 0x00, 0x00, 0xf2, 0x4c, 0x00, 0x00, 0xfa, 0x4c, 0x00, 0x00, 
  0x04, 0x4d, 0x00, 0x00, 0x0c, 0x4d, 0x00, 0x00, 0x16, 0x4d, 0x00, 0x00, 
  0x24, 0x4d, 0x00, 0x00, 0x2b, 0x4d, 0x00, 0x00, 0x36, 0x4d, 0x00, 0x00, 
  0x41, 0x4d, 0x00, 0x00, 0x4c, 0x4d, 0x00, 0x00, 0x54, 0x4d, 0x00, 0x00, 
  0x5a, 0x4d, 0x00, 0x00, 0x63, 0x4d, 0x00, 0x00, 0x6d, 0x4d, 0x00, 0x00, 
  0x74, 0x4d, 0x00, 0x00, 0x7f, 0x4d, 0x00, 0x00, 0x8a, 0x4d, 0x00, 0x00, 
  0xae, 0x4d, 0x00, 0x00, 0xb9, 0x4d, 0x00, 0x00, 0xc4, 0x4d, 0x00, 0x00, 
  0xe7, 0x4d, 0x00, 0x00, 0xf2, 0x4d, 0x00, 0x00, 0x0e, 0x4e, 0x00, 0x00, 
  0x16, 0x4e, 0x00, 0x00, 0x34, 0x4e, 0x00, 0x00, 0x3b, 0x4e, 0x00, 0x00, 
  0x43, 0x4e, 0x00, 0x00, 0x4a, 0x4e, 0x00, 0x00, 0x52, 0x4e, 0x00, 0x00, 
  0x5c, 0x4e, 0x00, 0x00, 0x66, 0x4e, 0x00, 0x00, 0x6f, 0x4e, 0x00, 0x00, 
  0x79, 0x4e, 0x00, 0x00, 0x81, 0x4e, 0x00, 0x00, 0x88, 0x4e, 0x00, 0x00, 
  0x97, 0x4e, 0x00, 0x00, 0x9f, 0x4e, 0x00, 0x00, 0xa9, 0x4e, 0x00, 0x00, 
  0xb1, 0x4e, 0x00, 0x00, 0xb8, 0x4e, 0x00, 0x00, 0xbf, 0x4e, 0x00, 0x00, 
  0xca, 0x4e, 0x00, 0x00, 0xd1, 0x4e, 0x00, 0x00, 0xda, 0x4e, 0x00, 0x00, 
  0xe3, 0x4e, 0x00, 0x00, 0xeb, 0x4e, 0x00, 0x00, 0xf7, 0x4e, 0x00, 0x00, 
  0x03, 0x4f, 0x00, 0x00, 0x0d, 0x4f, 0x00, 0x00, 0x18, 0x4f, 0x00, 0x00, 
  0x20, 0x4f, 0x00, 0x00, 0x2b, 0x4f, 0x00, 0x00, 0x34, 0x4f, 0x00, 0x00, 
  0x3e, 0x4f, 0x00, 0x00, 0x47, 0x4f, 0x00, 0x00, 0x51, 0x4f, 0x00, 0x00, 
  0x5b, 0x4f, 0x00, 0x00, 0x63, 0x4f, 0x00, 0x00, 0x6b, 0x4f, 0x00, 0x00, 
  0x72, 0x4f, 0x00, 0x00, 0x79, 0x4f, 0x00, 0x00, 0x84, 0x4f, 0x00, 0x00, 
  0x92, 0x4f, 0x00, 0x00, 0x9a, 0x4f, 0x00, 0x00, 0xa4, 0x4f, 0x00, 0x00, 
  0xad, 0x4f, 0x00, 0x00, 0xb6, 0x4f, 0x00, 0x00, 0xc4, 0x4f, 0x00, 0x00, 
  0xd4, 0x4f, 0x00, 0x00, 0xdc, 0x4f, 0x00, 0x00, 0xe4, 0x4f, 0x00, 0x00, 
  0xeb, 0x4f, 0x00, 0x00, 0xf4, 0x4f, 0x00, 0x00, 0xfb, 0x4f, 0x00, 0x00, 
  0x04, 0x50, 0x00, 0x00, 0x0d, 0x50, 0x00, 0x00, 0x19, 0x50, 0x00, 0x00, 
  0x22, 0x50, 0x00, 0x00, 0x2a, 0x50, 0x00, 0x00, 0x34, 0x50, 0x00, 0x00, 
  0x3d, 0x50, 0x00, 0x00, 0x46, 0x50, 0x00, 0x00, 0x4f, 0x50, 0x00, 0x00, 
  0x59, 0x50, 0x00, 0x00, 0x62, 0x50, 0x00, 0x00, 0x69, 0x50, 0x00, 0x00, 
  0x74, 0x50, 0x00, 0x00, 0x7f, 0x50, 0x00, 0x00, 0x8a, 0x50, 0x00, 0x00, 
  0x97, 0x50, 0x00, 0x00, 0xa3, 0x50, 0x00, 0x00, 0xb6, 0x50, 0x00, 0x00, 
  0xc6, 0x50, 0x00, 0x00, 0xd2, 0x50, 0x00, 0x00, 0xe0, 0x50, 0x00, 0x00, 
  0xea, 0x50, 0x00, 0x00, 0xf6, 0x50, 0x00, 0x00, 0x06, 0x51, 0x00, 0x00, 
  0x10, 0x51, 0x00, 0x00, 0x1a, 0x51, 0x00, 0x00, 0x26, 0x51, 0x00, 0x00, 
  0x34, 0x51, 0x00, 0x00, 0x42, 0x51, 0x00, 0x00, 0x4e, 0x51, 0x00, 0x00, 
  0x58, 0x51, 0x00, 0x00, 0x66, 0x51, 0x00, 0x00, 0x70, 0x51, 0x00, 0x00, 
  0x7e, 0x51, 0x00, 0x00, 0x89, 0x51, 0x00, 0x00, 0x94, 0x51, 0x00, 0x00, 
  0x9e, 0x51, 0x00, 0x00, 0xa9, 0x51, 0x00, 0x00, 0xb3, 0x51, 0x00, 0x00, 
  0xbf, 0x51, 0x00, 0x00, 0xca, 0x51, 0x00, 0x00, 0xd5, 0x51, 0x00, 0x00, 
  0xe7, 0x51, 0x00, 0x00, 0xf7, 0x51, 0x00, 0x00, 0x05, 0x52, 0x00, 0x00, 
  0x10, 0x52, 0x00, 0x00, 0x21, 0x52, 0x00, 0x00, 0x30, 0x52, 0x00, 0x00, 
  0x3b, 0x52, 0x00, 0x00, 0x42, 0x52, 0x00, 0x00, 0x49, 0x52, 0x00, 0x00, 
  0x52, 0x52, 0x00, 0x00, 0x76, 0x52, 0x00, 0x00, 0x82, 0x52, 0x00, 0x00, 
  0x90, 0x52, 0x00, 0x00, 0x9e, 0x52, 0x00, 0x00, 0xab, 0x52, 0x00, 0x00, 
  0xb8, 0x52, 0x00, 0x00, 0xc4, 0x52, 0x00, 0x00, 0xcf, 0x52, 0x00, 0x00, 
  0xe4, 0x52, 0x00, 0x00, 0xef, 0x52, 0x00, 0x00, 0xfe, 0x52, 0x00, 0x00, 
  0x14, 0x53, 0x00, 0x00, 0x20, 0x53, 0x00, 0x00, 0x30, 0x53, 0x00, 0x00, 
  0x3e, 0x53, 0x00, 0x00, 0x49, 0x53, 0x00, 0x00, 0x51, 0x53, 0x00, 0x00, 
  0x5a, 0x53, 0x00, 0x00, 0x73, 0x53, 0x00, 0x00, 0x82, 0x53, 0x00, 0x00, 
  0x90, 0x53, 0x00, 0x00, 0x9f, 0x53, 0x00, 0x00, 0xa6, 0x53, 0x00, 0x00, 
  0xae, 0x53, 0x00, 0x00, 0xb7, 0x53, 0x00, 0x00, 0xbf, 0x53, 0x00, 0x00, 
  0xc8, 0x53, 0x00, 0x00, 0xde, 0x53, 0x00, 0x00, 0xf2, 0x53, 0x00, 0x00, 
  0x01, 0x54, 0x00, 0x00, 0x12, 0x54, 0x00, 0x00, 0x23, 0x54, 0x00, 0x00, 
  0x2b, 0x54, 0x00, 0x00, 0x34, 0x54, 0x00, 0x00, 0x3d, 0x54, 0x00, 0x00, 
  0x4b, 0x54, 0x00, 0x00, 0x55, 0x54, 0x00, 0x00, 0x5c, 0x54, 0x00, 0x00, 
  0x6c, 0x54, 0x00, 0x00, 0x79, 0x54, 0x00, 0x00, 0x85, 0x54, 0x00, 0x00, 
  0x96, 0x54, 0x00, 0x00, 0x9e, 0x54, 0x00, 0x00, 0xa8, 0x54, 0x00, 0x00, 
  0xb1, 0x54, 0x00, 0x00, 0xbc, 0x54, 0x00, 0x00, 0xc5, 0x54, 0x00, 0x00, 
  0xd0, 0x54, 0x00, 0x00, 0xdc, 0x54, 0x00, 0x00, 0xe3, 0x54, 0x00, 0x00, 
  0xeb, 0x54, 0x00, 0x00, 0xff, 0x54, 0x00, 0x00, 0x0f, 0x55, 0x00, 0x00, 
  0x1e, 0x55, 0x00, 0x00, 0x2c, 0x55, 0x00, 0x00, 0x3c, 0x55, 0x00, 0x00, 
  0x4b, 0x55, 0x00, 0x00, 0x5a, 0x55, 0x00, 0x00, 0x68, 0x55, 0x00, 0x00, 
  0x82, 0x55, 0x00, 0x00, 0x90, 0x55, 0x00, 0x00, 0xa7, 0x55, 0x00, 0x00, 
  0xc0, 0x55, 0x00, 0x00, 0xd5, 0x55, 0x00, 0x00, 0xe4, 0x55, 0x00, 0x00, 
  0xf7, 0x55, 0x00, 0x00, 0x08, 0x56, 0x00, 0x00, 0x18, 0x56, 0x00, 0x00, 
  0x29, 0x56, 0x00, 0x00, 0x3e, 0x56, 0x00, 0x00, 0x54, 0x56, 0x00, 0x00, 
  0x69, 0x56, 0x00, 0x00, 0x79, 0x56, 0x00, 0x00, 0x88, 0x56, 0x00, 0x00, 
  0x9c, 0x56, 0x00, 0x00, 0xaf, 0x56, 0x00, 0x00, 0xc1, 0x56, 0x00, 0x00, 
  0xd2, 0x56, 0x00, 0x00, 0xe3, 0x56, 0x00, 0x00, 0xf3, 0x56, 0x00, 0x00, 
  0x05, 0x57, 0x00, 0x00, 0x16, 0x57, 0x00, 0x00, 0x2c, 0x57, 0x00, 0x00, 
  0x41, 0x57, 0x00, 0x00, 0x4b, 0x57, 0x00, 0x00, 0x56, 0x57, 0x00, 0x00, 
  0x61, 0x57, 0x00, 0x00, 0x6c, 0x57, 0x00, 0x00, 0x77, 0x57, 0x00, 0x00, 
  0x84, 0x57, 0x00, 0x00, 0x92, 0x57, 0x00, 0x00, 0xa7, 0x57, 0x00, 0x00, 
  0xb1, 0x57, 0x00, 0x00, 0xbc, 0x57, 0x00, 0x00, 0xc3, 0x57, 0x00, 0x00, 
  0xcb, 0x57, 0x00, 0x00, 0xd4, 0x57, 0x00, 0x00, 0xd9, 0x57, 0x00, 0x00, 
  0xe7, 0x57, 0x00, 0x00, 0xf1, 0x57, 0x00, 0x00, 0xfe, 0x57, 0x00, 0x00, 
  0x05, 0x58, 0x00, 0x00, 0x0d, 0x58, 0x00, 0x00, 0x15, 0x58, 0x00, 0x00, 
  0x1c, 0x58, 0x00, 0x00, 0x2a, 0x58, 0x00, 0x00, 0x33, 0x58, 0x00, 0x00, 
  0x3b, 0x58, 0x00, 0x00, 0x45, 0x58, 0x00, 0x00, 0x4e, 0x58, 0x00, 0x00, 
  0x5a, 0x58, 0x00, 0x00, 0x63, 0x58, 0x00, 0x00, 0x6c, 0x58, 0x00, 0x00, 
  0x74, 0x58, 0x00, 0x00, 0x7d, 0x58, 0x00, 0x00, 0x89, 0x58, 0x00, 0x00, 
  0x96, 0x58, 0x00, 0x00, 0xa2, 0x58, 0x00, 0x00, 0xab, 0x58, 0x00, 0x00, 
  0xb8, 0x58, 0x00, 0x00, 0xc6, 0x58, 0x00, 0x00, 0xde, 0x58, 0x00, 0x00, 
  0xfb, 0x58, 0x00, 0x00, 0x0c, 0x59, 0x00, 0x00, 0x25, 0x59, 0x00, 0x00, 
  0x30, 0x59, 0x00, 0x00, 0x47, 0x59, 0x00, 0x00, 0x51, 0x59, 0x00, 0x00, 
  0x5d, 0x59, 0x00, 0x00, 0x69, 0x59, 0x00, 0x00, 0x72, 0x59, 0x00, 0x00, 
  0x79, 0x59, 0x00, 0x00, 0x84, 0x59, 0x00, 0x00, 0x8c, 0x59, 0x00, 0x00, 
  0x9e, 0x59, 0x00, 0x00, 0xae, 0x59, 0x00, 0x00, 0xc5, 0x59, 0x00, 0x00, 
  0xd3, 0x59, 0x00, 0x00, 0xe4, 0x59, 0x00, 0x00, 0xef, 0x59, 0x00, 0x00, 
  0xfd, 0x59, 0x00, 0x00, 0x09, 0x5a, 0x00, 0x00, 0x12, 0x5a, 0x00, 0x00, 
  0x1b, 0x5a, 0x00, 0x00, 0x27, 0x5a, 0x00, 0x00, 0x35, 0x5a, 0x00, 0x00, 
  0x41, 0x5a, 0x00, 0x00, 0x4d, 0x5a, 0x00, 0x00, 0x59, 0x5a, 0x00, 0x00, 
  0x65, 0x5a, 0x00, 0x00, 0x6e, 0x5a, 0x00, 0x00, 0x78, 0x5a, 0x00, 0x00, 
  0x80, 0x5a, 0x00, 0x00, 0x89, 0x5a, 0x00, 0x00, 0x90, 0x5a, 0x00, 0x00, 
  0x99, 0x5a, 0x00, 0x00, 0xa1, 0x5a, 0x00, 0x00, 0xa9, 0x5a, 0x00, 0x00, 
  0xb0, 0x5a, 0x00, 0x00, 0xbb, 0x5a, 0x00, 0x00, 0xc9, 0x5a, 0x00, 0x00, 
  0xd0, 0x5a, 0x00, 0x00, 0xd8, 0x5a, 0x00, 0x00, 0xe2, 0x5a, 0x00, 0x00, 
  0xed, 0x5a, 0x00, 0x00, 0xf4, 0x5a, 0x00, 0x00, 0xfb, 0x5a, 0x00, 0x00, 
  0x03, 0x5b, 0x00, 0x00, 0x11, 0x5b, 0x00, 0x00, 0x18, 0x5b, 0x00, 0x00, 
  0x20, 0x5b, 0x00, 0x00, 0x2d, 0x5b, 0x00, 0x00, 0x3a, 0x5b, 0x00, 0x00, 
  0x42, 0x5b, 0x00, 0x00, 0x50, 0x5b, 0x00, 0x00, 0x59, 0x5b, 0x00, 0x00, 
  0x5f, 0x5b, 0x00, 0x00, 0x6b, 0x5b, 0x00, 0x00, 0x74, 0x5b, 0x00, 0x00, 
  0x87, 0x5b, 0x00, 0x00, 0x93, 0x5b, 0x00, 0x00, 0xa7, 0x5b, 0x00, 0x00, 
  0xb6, 0x5b, 0x00, 0x00, 0xc1, 0x5b, 0x00, 0x00, 0xd5, 0x5b, 0x00, 0x00, 
  0xe9, 0x5b, 0x00, 0x00, 0xf1, 0x5b, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 
  0x08, 0x5c, 0x00, 0x00, 0x13, 0x5c, 0x00, 0x00, 0x23, 0x5c, 0x00, 0x00, 
  0x34, 0x5c, 0x00, 0x00, 0x49, 0x5c, 0x00, 0x00, 0x55, 0x5c, 0x00, 0x00, 
  0x62, 0x5c, 0x00, 0x00, 0x70, 0x5c, 0x00, 0x00, 0x77, 0x5c, 0x00, 0x00, 
  0x84, 0x5c, 0x00, 0x00, 0x92, 0x5c, 0x00, 0x00, 0x9e, 0x5c, 0x00, 0x00, 
  0xa6, 0x5c, 0x00, 0x00, 0xc2, 0x5c, 0x00, 0x00, 0xe2, 0x5c, 0x00, 0x00, 
  0xf1, 0x5c, 0x00, 0x00, 0x04, 0x5d, 0x00, 0x00, 0x21, 0x5d, 0x00, 0x00, 
  0x33, 0x5d, 0x00, 0x00, 0x4d, 0x5d, 0x00, 0x00, 0x64, 0x5d, 0x00, 0x00, 
  0x6e, 0x5d, 0x00, 0x00, 0x76, 0x5d, 0x00, 0x00, 0x80, 0x5d, 0x00, 0x00, 
  0x8a, 0x5d, 0x00, 0x00, 0x91, 0x5d, 0x00, 0x00, 0x99, 0x5d, 0x00, 0x00, 
  0xa2, 0x5d, 0x00, 0x00, 0xb0, 0x5d, 0x00, 0x00, 0xb8, 0x5d, 0x00, 0x00, 
  0xd0, 0x5d, 0x00, 0x00, 0xef, 0x5d, 0x00, 0x00, 0xf6, 0x5d, 0x00, 0x00, 
  0xfd, 0x5d, 0x00, 0x00, 0x05, 0x5e, 0x00, 0x00, 0x18, 0x5e, 0x00, 0x00, 
  0x2e, 0x5e, 0x00, 0x00, 0x36, 0x5e, 0x00, 0x00, 0x3e, 0x5e, 0x00, 0x00, 
  0x48, 0x5e, 0x00, 0x00, 0x52, 0x5e, 0x00, 0x00, 0x61, 0x5e, 0x00, 0x00, 
  0x71, 0x5e, 0x00, 0x00, 0x80, 0x5e, 0x00, 0x00, 0x8e, 0x5e, 0x00, 0x00, 
  0x9e, 0x5e, 0x00, 0x00, 0xb0, 0x5e, 0x00, 0x00, 0xca, 0x5e, 0x00, 0x00, 
  0xf1, 0x5e, 0x00, 0x00, 0x07, 0x5f, 0x00, 0x00, 0x1b, 0x5f, 0x00, 0x00, 
  0x2e, 0x5f, 0x00, 0x00, 0x42, 0x5f, 0x00, 0x00, 0x4b, 0x5f, 0x00, 0x00, 
  0x55, 0x5f, 0x00, 0x00, 0x62, 0x5f, 0x00, 0x00, 0x72, 0x5f, 0x00, 0x00, 
  0x7e, 0x5f, 0x00, 0x00, 0x85, 0x5f, 0x00, 0x00, 0x8e, 0x5f, 0x00, 0x00, 
  0x9b, 0x5f, 0x00, 0x00, 0xa4, 0x5f, 0x00, 0x00, 0xae, 0x5f, 0x00, 0x00, 
  0xbd, 0x5f, 0x00, 0x00, 0xc8, 0x5f, 0x00, 0x00, 0xd0, 0x5f, 0x00, 0x00, 
  0xd9, 0x5f, 0x00, 0x00, 0xe8, 0x5f, 0x00, 0x00, 0xfc, 0x5f, 0x00, 0x00, 
  0x07, 0x60, 0x00, 0x00, 
};

static const u8 data_segment_data_467[] = {
  0x6e, 0x61, 0x6d, 0x65, 0x20, 0x74, 0x6f, 0x6f, 0x20, 0x6c, 0x6f, 0x6e, 
  0x67, 0x00, 
};

static const u8 data_segment_data_468[] = {
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_469[] = {
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 
  0x20, 0x20, 0x20, 0x20, 0x00, 
};

static const u8 data_segment_data_470[] = {
  0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 
  0x30, 0x30, 0x30, 0x30, 0x00, 
};

static const u8 data_segment_data_471[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 
  0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x01, 0x01, 
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
  0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x01, 0x01, 
  0x01, 0x01, 0x01, 0x01, 0x01, 0x59, 0x59, 0x59, 0x59, 0x59, 0x59, 0x19, 
  0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 
  0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x19, 0x01, 0x01, 0x01, 0x01, 0x01, 
  0x01, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x29, 0x29, 0x29, 0x29, 0x29, 
  0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 
  0x29, 0x29, 0x29, 0x01, 0x01, 0x01, 0x01, 0x00, 
};

static const u8 data_segment_data_472[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xf8, 0x3f, 
};

static const u8 data_segment_data_473[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xd0, 0xcf, 0x43, 
  0xeb, 0xfd, 0x4c, 0x3e, 
};

static const u8 data_segment_data_474[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 
  0x03, 0xb8, 0xe2, 0x3f, 
};

static const u8 data_segment_data_475[] = {
  0x28, 0x85, 0x00, 0x00, 0x5c, 0x14, 0x00, 0x00, 
};

static const u8 data_segment_data_476[] = {
  0x48, 0x90, 0x00, 0x00, 0x20, 0x00, 0x43, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_477[] = {
  0x00, 0x00, 0x00, 0x00, 0x30, 0x83, 0x00, 0x00, 0x48, 0x8d, 0x00, 0x00, 
  0x30, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x83, 0x00, 0x00, 
  0x50, 0x87, 0x00, 0x00, 0x30, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x30, 0x83, 0x00, 0x00, 0x48, 0x8d, 0x00, 0x00, 0x30, 0x83, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x30, 0x83, 0x00, 0x00, 0x80, 0x6a, 0x00, 0x00, 
  0x30, 0x83, 0x00, 0x00, 
};

static const u8 data_segment_data_478[] = {
  0xdc, 0x80, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_479[] = {
  0x48, 0x90, 0x00, 0x00, 0x08, 0x00, 0x6e, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_480[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0xe6, 0x00, 0x12, 0x00, 0x00, 0x00, 
  0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x69, 0x00, 0x00, 
  
};

static const u8 data_segment_data_481[] = {
  0x48, 0x90, 0x00, 0x00, 0x08, 0x00, 0x40, 0x00, 0x12, 0x00, 0x00, 0x00, 
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x69, 0x00, 0x00, 
  
};

static const u8 data_segment_data_482[] = {
  0xe2, 0x01, 0x00, 0x00, 0xf8, 0x69, 0x00, 0x00, 0x92, 0x02, 0x00, 0x00, 
  0x00, 0x6a, 0x00, 0x00, 0x12, 0x09, 0x00, 0x00, 0xf4, 0x8b, 0x00, 0x00, 
  
};

static const u8 data_segment_data_483[] = {
  0x5c, 0x77, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 
  0xd0, 0x69, 0x00, 0x00, 
};

static const u8 data_segment_data_484[] = {
  0x18, 0x81, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_485[] = {
  0x18, 0x81, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_486[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x61, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_487[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x18, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 
  0x1a, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 
  0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_488[] = {
  0x48, 0x90, 0x00, 0x00, 0x08, 0x00, 0x3e, 0x00, 0x1e, 0x00, 0x00, 0x00, 
  0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 
  0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_489[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_490[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_491[] = {
  0x48, 0x90, 0x00, 0x00, 0x20, 0x00, 0xfb, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_492[] = {
  0x4f, 0xbb, 0x61, 0x05, 0x67, 0xac, 0xdd, 0x3f, 0x18, 0x2d, 0x44, 0x54, 
  0xfb, 0x21, 0xe9, 0x3f, 0x9b, 0xf6, 0x81, 0xd2, 0x0b, 0x73, 0xef, 0x3f, 
  0x18, 0x2d, 0x44, 0x54, 0xfb, 0x21, 0xf9, 0x3f, 
};

static const u8 data_segment_data_493[] = {
  0xe2, 0x65, 0x2f, 0x22, 0x7f, 0x2b, 0x7a, 0x3c, 0x07, 0x5c, 0x14, 0x33, 
  0x26, 0xa6, 0x81, 0x3c, 0xbd, 0xcb, 0xf0, 0x7a, 0x88, 0x07, 0x70, 0x3c, 
  0x07, 0x5c, 0x14, 0x33, 0x26, 0xa6, 0x91, 0x3c, 
};

static const u8 data_segment_data_494[] = {
  0xd2, 0x21, 0x33, 0x7f, 0x7c, 0xd9, 0x02, 0x40, 0xd2, 0x21, 0x33, 0x7f, 
  0x7c, 0xd9, 0x02, 0xc0, 0x18, 0x2d, 0x44, 0x54, 0xfb, 0x21, 0xe9, 0x3f, 
  0x18, 0x2d, 0x44, 0x54, 0xfb, 0x21, 0xe9, 0xbf, 
};

static const u8 data_segment_data_495[] = {
  0x18, 0x2d, 0x44, 0x54, 0xfb, 0x21, 0x09, 0x40, 0x18, 0x2d, 0x44, 0x54, 
  0xfb, 0x21, 0x09, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
};

static const u8 data_segment_data_496[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x3f, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xe0, 0xbf, 
};

static const u8 data_segment_data_497[] = {
  0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_498[] = {
  0x83, 0xf9, 0xa2, 0x00, 0x44, 0x4e, 0x6e, 0x00, 0xfc, 0x29, 0x15, 0x00, 
  0xd1, 0x57, 0x27, 0x00, 0xdd, 0x34, 0xf5, 0x00, 0x62, 0xdb, 0xc0, 0x00, 
  0x3c, 0x99, 0x95, 0x00, 0x41, 0x90, 0x43, 0x00, 0x63, 0x51, 0xfe, 0x00, 
  0xbb, 0xde, 0xab, 0x00, 0xb7, 0x61, 0xc5, 0x00, 0x3a, 0x6e, 0x24, 0x00, 
  0xd2, 0x4d, 0x42, 0x00, 0x49, 0x06, 0xe0, 0x00, 0x09, 0xea, 0x2e, 0x00, 
  0x1c, 0x92, 0xd1, 0x00, 0xeb, 0x1d, 0xfe, 0x00, 0x29, 0xb1, 0x1c, 0x00, 
  0xe8, 0x3e, 0xa7, 0x00, 0xf5, 0x35, 0x82, 0x00, 0x44, 0xbb, 0x2e, 0x00, 
  0x9c, 0xe9, 0x84, 0x00, 0xb4, 0x26, 0x70, 0x00, 0x41, 0x7e, 0x5f, 0x00, 
  0xd6, 0x91, 0x39, 0x00, 0x53, 0x83, 0x39, 0x00, 0x9c, 0xf4, 0x39, 0x00, 
  0x8b, 0x5f, 0x84, 0x00, 0x28, 0xf9, 0xbd, 0x00, 0xf8, 0x1f, 0x3b, 0x00, 
  0xde, 0xff, 0x97, 0x00, 0x0f, 0x98, 0x05, 0x00, 0x11, 0x2f, 0xef, 0x00, 
  0x0a, 0x5a, 0x8b, 0x00, 0x6d, 0x1f, 0x6d, 0x00, 0xcf, 0x7e, 0x36, 0x00, 
  0x09, 0xcb, 0x27, 0x00, 0x46, 0x4f, 0xb7, 0x00, 0x9e, 0x66, 0x3f, 0x00, 
  0x2d, 0xea, 0x5f, 0x00, 0xba, 0x27, 0x75, 0x00, 0xe5, 0xeb, 0xc7, 0x00, 
  0x3d, 0x7b, 0xf1, 0x00, 0xf7, 0x39, 0x07, 0x00, 0x92, 0x52, 0x8a, 0x00, 
  0xfb, 0x6b, 0xea, 0x00, 0x1f, 0xb1, 0x5f, 0x00, 0x08, 0x5d, 0x8d, 0x00, 
  0x30, 0x03, 0x56, 0x00, 0x7b, 0xfc, 0x46, 0x00, 0xf0, 0xab, 0x6b, 0x00, 
  0x20, 0xbc, 0xcf, 0x00, 0x36, 0xf4, 0x9a, 0x00, 0xe3, 0xa9, 0x1d, 0x00, 
  0x5e, 0x61, 0x91, 0x00, 0x08, 0x1b, 0xe6, 0x00, 0x85, 0x99, 0x65, 0x00, 
  0xa0, 0x14, 0x5f, 0x00, 0x8d, 0x40, 0x68, 0x00, 0x80, 0xd8, 0xff, 0x00, 
  0x27, 0x73, 0x4d, 0x00, 0x06, 0x06, 0x31, 0x00, 0xca, 0x56, 0x15, 0x00, 
  0xc9, 0xa8, 0x73, 0x00, 0x7b, 0xe2, 0x60, 0x00, 0x6b, 0x8c, 0xc0, 0x00, 
  0x19, 0xc4, 0x47, 0x00, 0xcd, 0x67, 0xc3, 0x00, 0x09, 0xe8, 0xdc, 0x00, 
  0x59, 0x83, 0x2a, 0x00, 0x8b, 0x76, 0xc4, 0x00, 0xa6, 0x1c, 0x96, 0x00, 
  0x44, 0xaf, 0xdd, 0x00, 0x19, 0x57, 0xd1, 0x00, 0xa5, 0x3e, 0x05, 0x00, 
  0x05, 0x07, 0xff, 0x00, 0x33, 0x7e, 0x3f, 0x00, 0xc2, 0x32, 0xe8, 0x00, 
  0x98, 0x4f, 0xde, 0x00, 0xbb, 0x7d, 0x32, 0x00, 0x26, 0x3d, 0xc3, 0x00, 
  0x1e, 0x6b, 0xef, 0x00, 0x9f, 0xf8, 0x5e, 0x00, 0x35, 0x1f, 0x3a, 0x00, 
  0x7f, 0xf2, 0xca, 0x00, 0xf1, 0x87, 0x1d, 0x00, 0x7c, 0x90, 0x21, 0x00, 
  0x6a, 0x24, 0x7c, 0x00, 0xd5, 0x6e, 0xfa, 0x00, 0x30, 0x2d, 0x77, 0x00, 
  0x15, 0x3b, 0x43, 0x00, 0xb5, 0x14, 0xc6, 0x00, 0xc3, 0x19, 0x9d, 0x00, 
  0xad, 0xc4, 0xc2, 0x00, 0x2c, 0x4d, 0x41, 0x00, 0x0c, 0x00, 0x5d, 0x00, 
  0x86, 0x7d, 0x46, 0x00, 0xe3, 0x71, 0x2d, 0x00, 0x9b, 0xc6, 0x9a, 0x00, 
  0x33, 0x62, 0x00, 0x00, 0xb4, 0xd2, 0x7c, 0x00, 0xb4, 0xa7, 0x97, 0x00, 
  0x37, 0x55, 0xd5, 0x00, 0xd7, 0x3e, 0xf6, 0x00, 0xa3, 0x10, 0x18, 0x00, 
  0x4d, 0x76, 0xfc, 0x00, 0x64, 0x9d, 0x2a, 0x00, 0x70, 0xd7, 0xab, 0x00, 
  0x63, 0x7c, 0xf8, 0x00, 0x7a, 0xb0, 0x57, 0x00, 0x17, 0x15, 0xe7, 0x00, 
  0xc0, 0x49, 0x56, 0x00, 0x3b, 0xd6, 0xd9, 0x00, 0xa7, 0x84, 0x38, 0x00, 
  0x24, 0x23, 0xcb, 0x00, 0xd6, 0x8a, 0x77, 0x00, 0x5a, 0x54, 0x23, 0x00, 
  0x00, 0x1f, 0xb9, 0x00, 0xf1, 0x0a, 0x1b, 0x00, 0x19, 0xce, 0xdf, 0x00, 
  0x9f, 0x31, 0xff, 0x00, 0x66, 0x1e, 0x6a, 0x00, 0x99, 0x57, 0x61, 0x00, 
  0xac, 0xfb, 0x47, 0x00, 0x7e, 0x7f, 0xd8, 0x00, 0x22, 0x65, 0xb7, 0x00, 
  0x32, 0xe8, 0x89, 0x00, 0xe6, 0xbf, 0x60, 0x00, 0xef, 0xc4, 0xcd, 0x00, 
  0x6c, 0x36, 0x09, 0x00, 0x5d, 0x3f, 0xd4, 0x00, 0x16, 0xde, 0xd7, 0x00, 
  0x58, 0x3b, 0xde, 0x00, 0xde, 0x9b, 0x92, 0x00, 0xd2, 0x22, 0x28, 0x00, 
  0x28, 0x86, 0xe8, 0x00, 0xe2, 0x58, 0x4d, 0x00, 0xc6, 0xca, 0x32, 0x00, 
  0x08, 0xe3, 0x16, 0x00, 0xe0, 0x7d, 0xcb, 0x00, 0x17, 0xc0, 0x50, 0x00, 
  0xf3, 0x1d, 0xa7, 0x00, 0x18, 0xe0, 0x5b, 0x00, 0x2e, 0x13, 0x34, 0x00, 
  0x83, 0x12, 0x62, 0x00, 0x83, 0x48, 0x01, 0x00, 0xf5, 0x8e, 0x5b, 0x00, 
  0xad, 0xb0, 0x7f, 0x00, 0x1e, 0xe9, 0xf2, 0x00, 0x48, 0x4a, 0x43, 0x00, 
  0x10, 0x67, 0xd3, 0x00, 0xaa, 0xdd, 0xd8, 0x00, 0xae, 0x5f, 0x42, 0x00, 
  0x6a, 0x61, 0xce, 0x00, 0x0a, 0x28, 0xa4, 0x00, 0xd3, 0x99, 0xb4, 0x00, 
  0x06, 0xa6, 0xf2, 0x00, 0x5c, 0x77, 0x7f, 0x00, 0xa3, 0xc2, 0x83, 0x00, 
  0x61, 0x3c, 0x88, 0x00, 0x8a, 0x73, 0x78, 0x00, 0xaf, 0x8c, 0x5a, 0x00, 
  0x6f, 0xd7, 0xbd, 0x00, 0x2d, 0xa6, 0x63, 0x00, 0xf4, 0xbf, 0xcb, 0x00, 
  0x8d, 0x81, 0xef, 0x00, 0x26, 0xc1, 0x67, 0x00, 0x55, 0xca, 0x45, 0x00, 
  0xca, 0xd9, 0x36, 0x00, 0x28, 0xa8, 0xd2, 0x00, 0xc2, 0x61, 0x8d, 0x00, 
  0x12, 0xc9, 0x77, 0x00, 0x04, 0x26, 0x14, 0x00, 0x12, 0x46, 0x9b, 0x00, 
  0xc4, 0x59, 0xc4, 0x00, 0xc8, 0xc5, 0x44, 0x00, 0x4d, 0xb2, 0x91, 0x00, 
  0x00, 0x17, 0xf3, 0x00, 0xd4, 0x43, 0xad, 0x00, 0x29, 0x49, 0xe5, 0x00, 
  0xfd, 0xd5, 0x10, 0x00, 0x00, 0xbe, 0xfc, 0x00, 0x1e, 0x94, 0xcc, 0x00, 
  0x70, 0xce, 0xee, 0x00, 0x13, 0x3e, 0xf5, 0x00, 0xec, 0xf1, 0x80, 0x00, 
  0xb3, 0xe7, 0xc3, 0x00, 0xc7, 0xf8, 0x28, 0x00, 0x93, 0x05, 0x94, 0x00, 
  0xc1, 0x71, 0x3e, 0x00, 0x2e, 0x09, 0xb3, 0x00, 0x0b, 0x45, 0xf3, 0x00, 
  0x88, 0x12, 0x9c, 0x00, 0xab, 0x20, 0x7b, 0x00, 0x2e, 0xb5, 0x9f, 0x00, 
  0x47, 0x92, 0xc2, 0x00, 0x7b, 0x32, 0x2f, 0x00, 0x0c, 0x55, 0x6d, 0x00, 
  0x72, 0xa7, 0x90, 0x00, 0x6b, 0xe7, 0x1f, 0x00, 0x31, 0xcb, 0x96, 0x00, 
  0x79, 0x16, 0x4a, 0x00, 0x41, 0x79, 0xe2, 0x00, 0xf4, 0xdf, 0x89, 0x00, 
  0xe8, 0x94, 0x97, 0x00, 0xe2, 0xe6, 0x84, 0x00, 0x99, 0x31, 0x97, 0x00, 
  0x88, 0xed, 0x6b, 0x00, 0x5f, 0x5f, 0x36, 0x00, 0xbb, 0xfd, 0x0e, 0x00, 
  0x48, 0x9a, 0xb4, 0x00, 0x67, 0xa4, 0x6c, 0x00, 0x71, 0x72, 0x42, 0x00, 
  0x8d, 0x5d, 0x32, 0x00, 0x9f, 0x15, 0xb8, 0x00, 0xbc, 0xe5, 0x09, 0x00, 
  0x8d, 0x31, 0x25, 0x00, 0xf7, 0x74, 0x39, 0x00, 0x30, 0x05, 0x1c, 0x00, 
  0x0d, 0x0c, 0x01, 0x00, 0x4b, 0x08, 0x68, 0x00, 0x2c, 0xee, 0x58, 0x00, 
  0x47, 0xaa, 0x90, 0x00, 0x74, 0xe7, 0x02, 0x00, 0xbd, 0xd6, 0x24, 0x00, 
  0xf7, 0x7d, 0xa6, 0x00, 0x6e, 0x48, 0x72, 0x00, 0x9f, 0x16, 0xef, 0x00, 
  0x8e, 0x94, 0xa6, 0x00, 0xb4, 0x91, 0xf6, 0x00, 0xd1, 0x53, 0x51, 0x00, 
  0xcf, 0x0a, 0xf2, 0x00, 0x20, 0x98, 0x33, 0x00, 0xf5, 0x4b, 0x7e, 0x00, 
  0xb2, 0x63, 0x68, 0x00, 0xdd, 0x3e, 0x5f, 0x00, 0x40, 0x5d, 0x03, 0x00, 
  0x85, 0x89, 0x7f, 0x00, 0x55, 0x52, 0x29, 0x00, 0x37, 0x64, 0xc0, 0x00, 
  0x6d, 0xd8, 0x10, 0x00, 0x32, 0x48, 0x32, 0x00, 0x5b, 0x4c, 0x75, 0x00, 
  0x4e, 0x71, 0xd4, 0x00, 0x45, 0x54, 0x6e, 0x00, 0x0b, 0x09, 0xc1, 0x00, 
  0x2a, 0xf5, 0x69, 0x00, 0x14, 0x66, 0xd5, 0x00, 0x27, 0x07, 0x9d, 0x00, 
  0x5d, 0x04, 0x50, 0x00, 0xb4, 0x3b, 0xdb, 0x00, 0xea, 0x76, 0xc5, 0x00, 
  0x87, 0xf9, 0x17, 0x00, 0x49, 0x6b, 0x7d, 0x00, 0x1d, 0x27, 0xba, 0x00, 
  0x96, 0x69, 0x29, 0x00, 0xc6, 0xcc, 0xac, 0x00, 0xad, 0x14, 0x54, 0x00, 
  0x90, 0xe2, 0x6a, 0x00, 0x88, 0xd9, 0x89, 0x00, 0x2c, 0x72, 0x50, 0x00, 
  0x04, 0xa4, 0xbe, 0x00, 0x77, 0x07, 0x94, 0x00, 0xf3, 0x30, 0x70, 0x00, 
  0x00, 0xfc, 0x27, 0x00, 0xea, 0x71, 0xa8, 0x00, 0x66, 0xc2, 0x49, 0x00, 
  0x64, 0xe0, 0x3d, 0x00, 0x97, 0xdd, 0x83, 0x00, 0xa3, 0x3f, 0x97, 0x00, 
  0x43, 0x94, 0xfd, 0x00, 0x0d, 0x86, 0x8c, 0x00, 0x31, 0x41, 0xde, 0x00, 
  0x92, 0x39, 0x9d, 0x00, 0xdd, 0x70, 0x8c, 0x00, 0x17, 0xb7, 0xe7, 0x00, 
  0x08, 0xdf, 0x3b, 0x00, 0x15, 0x37, 0x2b, 0x00, 0x5c, 0x80, 0xa0, 0x00, 
  0x5a, 0x80, 0x93, 0x00, 0x10, 0x11, 0x92, 0x00, 0x0f, 0xe8, 0xd8, 0x00, 
  0x6c, 0x80, 0xaf, 0x00, 0xdb, 0xff, 0x4b, 0x00, 0x38, 0x90, 0x0f, 0x00, 
  0x59, 0x18, 0x76, 0x00, 0x62, 0xa5, 0x15, 0x00, 0x61, 0xcb, 0xbb, 0x00, 
  0xc7, 0x89, 0xb9, 0x00, 0x10, 0x40, 0xbd, 0x00, 0xd2, 0xf2, 0x04, 0x00, 
  0x49, 0x75, 0x27, 0x00, 0xeb, 0xb6, 0xf6, 0x00, 0xdb, 0x22, 0xbb, 0x00, 
  0x0a, 0x14, 0xaa, 0x00, 0x89, 0x26, 0x2f, 0x00, 0x64, 0x83, 0x76, 0x00, 
  0x09, 0x3b, 0x33, 0x00, 0x0e, 0x94, 0x1a, 0x00, 0x51, 0x3a, 0xaa, 0x00, 
  0x1d, 0xa3, 0xc2, 0x00, 0xaf, 0xed, 0xae, 0x00, 0x5c, 0x26, 0x12, 0x00, 
  0x6d, 0xc2, 0x4d, 0x00, 0x2d, 0x7a, 0x9c, 0x00, 0xc0, 0x56, 0x97, 0x00, 
  0x03, 0x3f, 0x83, 0x00, 0x09, 0xf0, 0xf6, 0x00, 0x2b, 0x40, 0x8c, 0x00, 
  0x6d, 0x31, 0x99, 0x00, 0x39, 0xb4, 0x07, 0x00, 0x0c, 0x20, 0x15, 0x00, 
  0xd8, 0xc3, 0x5b, 0x00, 0xf5, 0x92, 0xc4, 0x00, 0xc6, 0xad, 0x4b, 0x00, 
  0x4e, 0xca, 0xa5, 0x00, 0xa7, 0x37, 0xcd, 0x00, 0xe6, 0xa9, 0x36, 0x00, 
  0xab, 0x92, 0x94, 0x00, 0xdd, 0x42, 0x68, 0x00, 0x19, 0x63, 0xde, 0x00, 
  0x76, 0x8c, 0xef, 0x00, 0x68, 0x8b, 0x52, 0x00, 0xfc, 0xdb, 0x37, 0x00, 
  0xae, 0xa1, 0xab, 0x00, 0xdf, 0x15, 0x31, 0x00, 0x00, 0xae, 0xa1, 0x00, 
  0x0c, 0xfb, 0xda, 0x00, 0x64, 0x4d, 0x66, 0x00, 0xed, 0x05, 0xb7, 0x00, 
  0x29, 0x65, 0x30, 0x00, 0x57, 0x56, 0xbf, 0x00, 0x47, 0xff, 0x3a, 0x00, 
  0x6a, 0xf9, 0xb9, 0x00, 0x75, 0xbe, 0xf3, 0x00, 0x28, 0x93, 0xdf, 0x00, 
  0xab, 0x80, 0x30, 0x00, 0x66, 0x8c, 0xf6, 0x00, 0x04, 0xcb, 0x15, 0x00, 
  0xfa, 0x22, 0x06, 0x00, 0xd9, 0xe4, 0x1d, 0x00, 0x3d, 0xb3, 0xa4, 0x00, 
  0x57, 0x1b, 0x8f, 0x00, 0x36, 0xcd, 0x09, 0x00, 0x4e, 0x42, 0xe9, 0x00, 
  0x13, 0xbe, 0xa4, 0x00, 0x33, 0x23, 0xb5, 0x00, 0xf0, 0xaa, 0x1a, 0x00, 
  0x4f, 0x65, 0xa8, 0x00, 0xd2, 0xc1, 0xa5, 0x00, 0x0b, 0x3f, 0x0f, 0x00, 
  0x5b, 0x78, 0xcd, 0x00, 0x23, 0xf9, 0x76, 0x00, 0x7b, 0x8b, 0x04, 0x00, 
  0x89, 0x17, 0x72, 0x00, 0xc6, 0xa6, 0x53, 0x00, 0x6f, 0x6e, 0xe2, 0x00, 
  0xef, 0xeb, 0x00, 0x00, 0x9b, 0x4a, 0x58, 0x00, 0xc4, 0xda, 0xb7, 0x00, 
  0xaa, 0x66, 0xba, 0x00, 0x76, 0xcf, 0xcf, 0x00, 0xd1, 0x02, 0x1d, 0x00, 
  0xb1, 0xf1, 0x2d, 0x00, 0x8c, 0x99, 0xc1, 0x00, 0xc3, 0xad, 0x77, 0x00, 
  0x86, 0x48, 0xda, 0x00, 0xf7, 0x5d, 0xa0, 0x00, 0xc6, 0x80, 0xf4, 0x00, 
  0xac, 0xf0, 0x2f, 0x00, 0xdd, 0xec, 0x9a, 0x00, 0x3f, 0x5c, 0xbc, 0x00, 
  0xd0, 0xde, 0x6d, 0x00, 0x90, 0xc7, 0x1f, 0x00, 0x2a, 0xdb, 0xb6, 0x00, 
  0xa3, 0x25, 0x3a, 0x00, 0x00, 0xaf, 0x9a, 0x00, 0xad, 0x53, 0x93, 0x00, 
  0xb6, 0x57, 0x04, 0x00, 0x29, 0x2d, 0xb4, 0x00, 0x4b, 0x80, 0x7e, 0x00, 
  0xda, 0x07, 0xa7, 0x00, 0x76, 0xaa, 0x0e, 0x00, 0x7b, 0x59, 0xa1, 0x00, 
  0x16, 0x12, 0x2a, 0x00, 0xdc, 0xb7, 0x2d, 0x00, 0xfa, 0xe5, 0xfd, 0x00, 
  0x89, 0xdb, 0xfe, 0x00, 0x89, 0xbe, 0xfd, 0x00, 0xe4, 0x76, 0x6c, 0x00, 
  0x06, 0xa9, 0xfc, 0x00, 0x3e, 0x80, 0x70, 0x00, 0x85, 0x6e, 0x15, 0x00, 
  0xfd, 0x87, 0xff, 0x00, 0x28, 0x3e, 0x07, 0x00, 0x61, 0x67, 0x33, 0x00, 
  0x2a, 0x18, 0x86, 0x00, 0x4d, 0xbd, 0xea, 0x00, 0xb3, 0xe7, 0xaf, 0x00, 
  0x8f, 0x6d, 0x6e, 0x00, 0x95, 0x67, 0x39, 0x00, 0x31, 0xbf, 0x5b, 0x00, 
  0x84, 0xd7, 0x48, 0x00, 0x30, 0xdf, 0x16, 0x00, 0xc7, 0x2d, 0x43, 0x00, 
  0x25, 0x61, 0x35, 0x00, 0xc9, 0x70, 0xce, 0x00, 0x30, 0xcb, 0xb8, 0x00, 
  0xbf, 0x6c, 0xfd, 0x00, 0xa4, 0x00, 0xa2, 0x00, 0x05, 0x6c, 0xe4, 0x00, 
  0x5a, 0xdd, 0xa0, 0x00, 0x21, 0x6f, 0x47, 0x00, 0x62, 0x12, 0xd2, 0x00, 
  0xb9, 0x5c, 0x84, 0x00, 0x70, 0x61, 0x49, 0x00, 0x6b, 0x56, 0xe0, 0x00, 
  0x99, 0x52, 0x01, 0x00, 0x50, 0x55, 0x37, 0x00, 0x1e, 0xd5, 0xb7, 0x00, 
  0x33, 0xf1, 0xc4, 0x00, 0x13, 0x6e, 0x5f, 0x00, 0x5d, 0x30, 0xe4, 0x00, 
  0x85, 0x2e, 0xa9, 0x00, 0x1d, 0xb2, 0xc3, 0x00, 0xa1, 0x32, 0x36, 0x00, 
  0x08, 0xb7, 0xa4, 0x00, 0xea, 0xb1, 0xd4, 0x00, 0x16, 0xf7, 0x21, 0x00, 
  0x8f, 0x69, 0xe4, 0x00, 0x27, 0xff, 0x77, 0x00, 0x0c, 0x03, 0x80, 0x00, 
  0x8d, 0x40, 0x2d, 0x00, 0x4f, 0xcd, 0xa0, 0x00, 0x20, 0xa5, 0x99, 0x00, 
  0xb3, 0xa2, 0xd3, 0x00, 0x2f, 0x5d, 0x0a, 0x00, 0xb4, 0xf9, 0x42, 0x00, 
  0x11, 0xda, 0xcb, 0x00, 0x7d, 0xbe, 0xd0, 0x00, 0x9b, 0xdb, 0xc1, 0x00, 
  0xab, 0x17, 0xbd, 0x00, 0xca, 0xa2, 0x81, 0x00, 0x08, 0x6a, 0x5c, 0x00, 
  0x2e, 0x55, 0x17, 0x00, 0x27, 0x00, 0x55, 0x00, 0x7f, 0x14, 0xf0, 0x00, 
  0xe1, 0x07, 0x86, 0x00, 0x14, 0x0b, 0x64, 0x00, 0x96, 0x41, 0x8d, 0x00, 
  0x87, 0xbe, 0xde, 0x00, 0xda, 0xfd, 0x2a, 0x00, 0x6b, 0x25, 0xb6, 0x00, 
  0x7b, 0x89, 0x34, 0x00, 0x05, 0xf3, 0xfe, 0x00, 0xb9, 0xbf, 0x9e, 0x00, 
  0x68, 0x6a, 0x4f, 0x00, 0x4a, 0x2a, 0xa8, 0x00, 0x4f, 0xc4, 0x5a, 0x00, 
  0x2d, 0xf8, 0xbc, 0x00, 0xd7, 0x5a, 0x98, 0x00, 0xf4, 0xc7, 0x95, 0x00, 
  0x0d, 0x4d, 0x8d, 0x00, 0x20, 0x3a, 0xa6, 0x00, 0xa4, 0x57, 0x5f, 0x00, 
  0x14, 0x3f, 0xb1, 0x00, 0x80, 0x38, 0x95, 0x00, 0xcc, 0x20, 0x01, 0x00, 
  0x71, 0xdd, 0x86, 0x00, 0xc9, 0xde, 0xb6, 0x00, 0xbf, 0x60, 0xf5, 0x00, 
  0x4d, 0x65, 0x11, 0x00, 0x01, 0x07, 0x6b, 0x00, 0x8c, 0xb0, 0xac, 0x00, 
  0xb2, 0xc0, 0xd0, 0x00, 0x51, 0x55, 0x48, 0x00, 0x1e, 0xfb, 0x0e, 0x00, 
  0x95, 0x72, 0xc3, 0x00, 0xa3, 0x06, 0x3b, 0x00, 0xc0, 0x40, 0x35, 0x00, 
  0x06, 0xdc, 0x7b, 0x00, 0xe0, 0x45, 0xcc, 0x00, 0x4e, 0x29, 0xfa, 0x00, 
  0xd6, 0xca, 0xc8, 0x00, 0xe8, 0xf3, 0x41, 0x00, 0x7c, 0x64, 0xde, 0x00, 
  0x9b, 0x64, 0xd8, 0x00, 0xd9, 0xbe, 0x31, 0x00, 0xa4, 0x97, 0xc3, 0x00, 
  0x77, 0x58, 0xd4, 0x00, 0x69, 0xe3, 0xc5, 0x00, 0xf0, 0xda, 0x13, 0x00, 
  0xba, 0x3a, 0x3c, 0x00, 0x46, 0x18, 0x46, 0x00, 0x55, 0x75, 0x5f, 0x00, 
  0xd2, 0xbd, 0xf5, 0x00, 0x6e, 0x92, 0xc6, 0x00, 0xac, 0x2e, 0x5d, 0x00, 
  0x0e, 0x44, 0xed, 0x00, 0x1c, 0x3e, 0x42, 0x00, 0x61, 0xc4, 0x87, 0x00, 
  0x29, 0xfd, 0xe9, 0x00, 0xe7, 0xd6, 0xf3, 0x00, 0x22, 0x7c, 0xca, 0x00, 
  0x6f, 0x91, 0x35, 0x00, 0x08, 0xe0, 0xc5, 0x00, 0xff, 0xd7, 0x8d, 0x00, 
  0x6e, 0x6a, 0xe2, 0x00, 0xb0, 0xfd, 0xc6, 0x00, 0x93, 0x08, 0xc1, 0x00, 
  0x7c, 0x5d, 0x74, 0x00, 0x6b, 0xad, 0xb2, 0x00, 0xcd, 0x6e, 0x9d, 0x00, 
  0x3e, 0x72, 0x7b, 0x00, 0xc6, 0x11, 0x6a, 0x00, 0xf7, 0xcf, 0xa9, 0x00, 
  0x29, 0x73, 0xdf, 0x00, 0xb5, 0xc9, 0xba, 0x00, 0xb7, 0x00, 0x51, 0x00, 
  0xe2, 0xb2, 0x0d, 0x00, 0x74, 0xba, 0x24, 0x00, 0xe5, 0x7d, 0x60, 0x00, 
  0x74, 0xd8, 0x8a, 0x00, 0x0d, 0x15, 0x2c, 0x00, 0x81, 0x18, 0x0c, 0x00, 
  0x7e, 0x66, 0x94, 0x00, 0x01, 0x29, 0x16, 0x00, 0x9f, 0x7a, 0x76, 0x00, 
  0xfd, 0xfd, 0xbe, 0x00, 0x56, 0x45, 0xef, 0x00, 0xd9, 0x7e, 0x36, 0x00, 
  0xec, 0xd9, 0x13, 0x00, 0x8b, 0xba, 0xb9, 0x00, 0xc4, 0x97, 0xfc, 0x00, 
  0x31, 0xa8, 0x27, 0x00, 0xf1, 0x6e, 0xc3, 0x00, 0x94, 0xc5, 0x36, 0x00, 
  0xd8, 0xa8, 0x56, 0x00, 0xb4, 0xa8, 0xb5, 0x00, 0xcf, 0xcc, 0x0e, 0x00, 
  0x12, 0x89, 0x2d, 0x00, 0x6f, 0x57, 0x34, 0x00, 0x2c, 0x56, 0x89, 0x00, 
  0x99, 0xce, 0xe3, 0x00, 0xd6, 0x20, 0xb9, 0x00, 0x6b, 0x5e, 0xaa, 0x00, 
  0x3e, 0x2a, 0x9c, 0x00, 0x11, 0x5f, 0xcc, 0x00, 0xfd, 0x0b, 0x4a, 0x00, 
  0xe1, 0xf4, 0xfb, 0x00, 0x8e, 0x3b, 0x6d, 0x00, 0xe2, 0x86, 0x2c, 0x00, 
  0xe9, 0xd4, 0x84, 0x00, 0xfc, 0xb4, 0xa9, 0x00, 0xef, 0xee, 0xd1, 0x00, 
  0x2e, 0x35, 0xc9, 0x00, 0x2f, 0x39, 0x61, 0x00, 0x38, 0x21, 0x44, 0x00, 
  0x1b, 0xd9, 0xc8, 0x00, 0x81, 0xfc, 0x0a, 0x00, 0xfb, 0x4a, 0x6a, 0x00, 
  0x2f, 0x1c, 0xd8, 0x00, 0x53, 0xb4, 0x84, 0x00, 0x4e, 0x99, 0x8c, 0x00, 
  0x54, 0x22, 0xcc, 0x00, 0x2a, 0x55, 0xdc, 0x00, 0xc0, 0xc6, 0xd6, 0x00, 
  0x0b, 0x19, 0x96, 0x00, 0x1a, 0x70, 0xb8, 0x00, 0x69, 0x95, 0x64, 0x00, 
  0x26, 0x5a, 0x60, 0x00, 0x3f, 0x52, 0xee, 0x00, 0x7f, 0x11, 0x0f, 0x00, 
  0xf4, 0xb5, 0x11, 0x00, 0xfc, 0xcb, 0xf5, 0x00, 0x34, 0xbc, 0x2d, 0x00, 
  0x34, 0xbc, 0xee, 0x00, 0xe8, 0x5d, 0xcc, 0x00, 0xdd, 0x5e, 0x60, 0x00, 
  0x67, 0x8e, 0x9b, 0x00, 0x92, 0x33, 0xef, 0x00, 0xc9, 0x17, 0xb8, 0x00, 
  0x61, 0x58, 0x9b, 0x00, 0xe1, 0x57, 0xbc, 0x00, 0x51, 0x83, 0xc6, 0x00, 
  0xd8, 0x3e, 0x10, 0x00, 0xdd, 0x71, 0x48, 0x00, 0x2d, 0x1c, 0xdd, 0x00, 
  0xaf, 0x18, 0xa1, 0x00, 0x21, 0x2c, 0x46, 0x00, 0x59, 0xf3, 0xd7, 0x00, 
  0xd9, 0x7a, 0x98, 0x00, 0x9e, 0x54, 0xc0, 0x00, 0x4f, 0x86, 0xfa, 0x00, 
  0x56, 0x06, 0xfc, 0x00, 0xe5, 0x79, 0xae, 0x00, 0x89, 0x22, 0x36, 0x00, 
  0x38, 0xad, 0x22, 0x00, 0x67, 0x93, 0xdc, 0x00, 0x55, 0xe8, 0xaa, 0x00, 
  0x82, 0x26, 0x38, 0x00, 0xca, 0xe7, 0x9b, 0x00, 0x51, 0x0d, 0xa4, 0x00, 
  0x99, 0x33, 0xb1, 0x00, 0xa9, 0xd7, 0x0e, 0x00, 0x69, 0x05, 0x48, 0x00, 
  0x65, 0xb2, 0xf0, 0x00, 0x7f, 0x88, 0xa7, 0x00, 0x88, 0x4c, 0x97, 0x00, 
  0xf9, 0xd1, 0x36, 0x00, 0x21, 0x92, 0xb3, 0x00, 0x7b, 0x82, 0x4a, 0x00, 
  0x98, 0xcf, 0x21, 0x00, 0x40, 0x9f, 0xdc, 0x00, 0xdc, 0x47, 0x55, 0x00, 
  0xe1, 0x74, 0x3a, 0x00, 0x67, 0xeb, 0x42, 0x00, 0xfe, 0x9d, 0xdf, 0x00, 
  0x5e, 0xd4, 0x5f, 0x00, 0x7b, 0x67, 0xa4, 0x00, 0xba, 0xac, 0x7a, 0x00, 
  0x55, 0xf6, 0xa2, 0x00, 0x2b, 0x88, 0x23, 0x00, 0x41, 0xba, 0x55, 0x00, 
  0x59, 0x6e, 0x08, 0x00, 0x21, 0x2a, 0x86, 0x00, 0x39, 0x47, 0x83, 0x00, 
  0x89, 0xe3, 0xe6, 0x00, 0xe5, 0x9e, 0xd4, 0x00, 0x49, 0xfb, 0x40, 0x00, 
  0xff, 0x56, 0xe9, 0x00, 0x1c, 0x0f, 0xca, 0x00, 0xc5, 0x59, 0x8a, 0x00, 
  0x94, 0xfa, 0x2b, 0x00, 0xd3, 0xc1, 0xc5, 0x00, 0x0f, 0xc5, 0xcf, 0x00, 
  0xdb, 0x5a, 0xae, 0x00, 0x47, 0xc5, 0x86, 0x00, 0x85, 0x43, 0x62, 0x00, 
  0x21, 0x86, 0x3b, 0x00, 0x2c, 0x79, 0x94, 0x00, 0x10, 0x61, 0x87, 0x00, 
  0x2a, 0x4c, 0x7b, 0x00, 0x80, 0x2c, 0x1a, 0x00, 0x43, 0xbf, 0x12, 0x00, 
  0x88, 0x26, 0x90, 0x00, 0x78, 0x3c, 0x89, 0x00, 0xa8, 0xc4, 0xe4, 0x00, 
  0xe5, 0xdb, 0x7b, 0x00, 0xc4, 0x3a, 0xc2, 0x00, 0x26, 0xf4, 0xea, 0x00, 
  0xf7, 0x67, 0x8a, 0x00, 0x0d, 0x92, 0xbf, 0x00, 0x65, 0xa3, 0x2b, 0x00, 
  0x3d, 0x93, 0xb1, 0x00, 0xbd, 0x7c, 0x0b, 0x00, 0xa4, 0x51, 0xdc, 0x00, 
  0x27, 0xdd, 0x63, 0x00, 0x69, 0xe1, 0xdd, 0x00, 0x9a, 0x94, 0x19, 0x00, 
  0xa8, 0x29, 0x95, 0x00, 0x68, 0xce, 0x28, 0x00, 0x09, 0xed, 0xb4, 0x00, 
  0x44, 0x9f, 0x20, 0x00, 0x4e, 0x98, 0xca, 0x00, 0x70, 0x82, 0x63, 0x00, 
  0x7e, 0x7c, 0x23, 0x00, 0x0f, 0xb9, 0x32, 0x00, 0xa7, 0xf5, 0x8e, 0x00, 
  0x14, 0x56, 0xe7, 0x00, 0x21, 0xf1, 0x08, 0x00, 0xb5, 0x9d, 0x2a, 0x00, 
  0x6f, 0x7e, 0x4d, 0x00, 0xa5, 0x19, 0x51, 0x00, 0xb5, 0xf9, 0xab, 0x00, 
  0x82, 0xdf, 0xd6, 0x00, 0x96, 0xdd, 0x61, 0x00, 0x16, 0x36, 0x02, 0x00, 
  0xc4, 0x3a, 0x9f, 0x00, 0x83, 0xa2, 0xa1, 0x00, 0x72, 0xed, 0x6d, 0x00, 
  0x39, 0x8d, 0x7a, 0x00, 0x82, 0xb8, 0xa9, 0x00, 0x6b, 0x32, 0x5c, 0x00, 
  0x46, 0x27, 0x5b, 0x00, 0x00, 0x34, 0xed, 0x00, 0xd2, 0x00, 0x77, 0x00, 
  0xfc, 0xf4, 0x55, 0x00, 0x01, 0x59, 0x4d, 0x00, 0xe0, 0x71, 0x80, 0x00, 
  
};

static const u8 data_segment_data_499[] = {
  0x00, 0x00, 0x00, 0x40, 0xfb, 0x21, 0xf9, 0x3f, 0x00, 0x00, 0x00, 0x00, 
  0x2d, 0x44, 0x74, 0x3e, 0x00, 0x00, 0x00, 0x80, 0x98, 0x46, 0xf8, 0x3c, 
  0x00, 0x00, 0x00, 0x60, 0x51, 0xcc, 0x78, 0x3b, 0x00, 0x00, 0x00, 0x80, 
  0x83, 0x1b, 0xf0, 0x39, 0x00, 0x00, 0x00, 0x40, 0x20, 0x25, 0x7a, 0x38, 
  0x00, 0x00, 0x00, 0x80, 0x22, 0x82, 0xe3, 0x36, 0x00, 0x00, 0x00, 0x00, 
  0x1d, 0xf3, 0x69, 0x35, 
};

static const u8 data_segment_data_500[] = {
  0x48, 0x90, 0x00, 0x00, 0x0c, 0x00, 0xfd, 0x00, 0x25, 0x00, 0x00, 0x00, 
  0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 
  0x28, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_501[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x2b, 0x00, 0x00, 0x00, 
  0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 
  0x2d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 
  0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x78, 0x00, 0x00, 
  
};

static const u8 data_segment_data_502[] = {
  0x5c, 0x77, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_503[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x2b, 0x00, 0x00, 0x00, 
  0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 
  0x2d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 
  0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x5c, 0x77, 0x00, 0x00, 0x90, 0x78, 0x00, 0x00, 
  
};

static const u8 data_segment_data_504[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x61, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_505[] = {
  0x32, 0x02, 0x00, 0x00, 0xcc, 0x78, 0x00, 0x00, 0x4a, 0x02, 0x00, 0x00, 
  0xd4, 0x78, 0x00, 0x00, 0x0a, 0x0a, 0x00, 0x00, 0xa0, 0x78, 0x00, 0x00, 
  0xb2, 0x02, 0x00, 0x00, 0xa8, 0x78, 0x00, 0x00, 0x32, 0x03, 0x00, 0x00, 
  0xe8, 0x78, 0x00, 0x00, 0x52, 0x03, 0x00, 0x00, 0x38, 0x79, 0x00, 0x00, 
  0xc2, 0x03, 0x00, 0x00, 0xb4, 0x78, 0x00, 0x00, 0xca, 0x03, 0x00, 0x00, 
  0x40, 0x79, 0x00, 0x00, 0x72, 0x04, 0x00, 0x00, 0xc0, 0x78, 0x00, 0x00, 
  0xfa, 0x04, 0x00, 0x00, 0x48, 0x79, 0x00, 0x00, 0x1a, 0x05, 0x00, 0x00, 
  0x54, 0x79, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x84, 0x91, 0x00, 0x00, 
  0xe2, 0x00, 0x00, 0x00, 0x8c, 0x91, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 
  0x94, 0x91, 0x00, 0x00, 
};

static const u8 data_segment_data_506[] = {
  0x5c, 0x77, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 
  0x20, 0x78, 0x00, 0x00, 
};

static const u8 data_segment_data_507[] = {
  0x0c, 0x91, 0x00, 0x00, 0xdc, 0x78, 0x00, 0x00, 
};

static const u8 data_segment_data_508[] = {
  0x90, 0x81, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0x31, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_509[] = {
  0x90, 0x81, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0x32, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_510[] = {
  0x90, 0x81, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0x33, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_511[] = {
  0xdc, 0x80, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_512[] = {
  0xdc, 0x80, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_513[] = {
  0x90, 0x81, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0x36, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_514[] = {
  0xdc, 0x80, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_515[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x27, 0x01, 0x38, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x3a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_516[] = {
  0x7d, 0x3d, 0x00, 0x00, 0x47, 0x3e, 0x00, 0x00, 0xbf, 0x3e, 0x00, 0x00, 
  
};

static const u8 data_segment_data_517[] = {
  0xdc, 0x80, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_518[] = {
  0xdc, 0x80, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_519[] = {
  0x90, 0x81, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0x3d, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_520[] = {
  0xdc, 0x80, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_521[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x32, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_522[] = {
  0x60, 0x01, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x92, 0x00, 0x02, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_523[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xdc, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_524[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_525[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x35, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xec, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_526[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xec, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_527[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xec, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_528[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xec, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_529[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0xd9, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xdc, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_530[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xdc, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_531[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x54, 0x7b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_532[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x54, 0x7b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_533[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xdc, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_534[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xdc, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_535[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xdc, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_536[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xdc, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_537[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xdc, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_538[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xf8, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_539[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xf8, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_540[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xdc, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_541[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xdc, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_542[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xdc, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_543[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xdc, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_544[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x60, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_545[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xdc, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_546[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xd8, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_547[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xdc, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_548[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xdc, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_549[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0xdb, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x8c, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_550[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_551[] = {
  0x48, 0x90, 0x00, 0x00, 0x0c, 0x00, 0x3b, 0x01, 0x47, 0x00, 0x00, 0x00, 
  0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 
  0x4a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_552[] = {
  0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0x57, 0x14, 0x8b, 
  0x0a, 0xbf, 0x05, 0x40, 
};

static const u8 data_segment_data_553[] = {
  0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x2d, 0x44, 0x54, 
  0xfb, 0x21, 0x09, 0x40, 
};

static const u8 data_segment_data_554[] = {
  0x48, 0x90, 0x00, 0x00, 0x60, 0x00, 0x43, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_555[] = {
  0x48, 0x90, 0x00, 0x00, 0x60, 0x00, 0x43, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_556[] = {
  0x48, 0x90, 0x00, 0x00, 0x60, 0x00, 0x43, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_557[] = {
  0x48, 0x90, 0x00, 0x00, 0x60, 0x00, 0x43, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_558[] = {
  0x48, 0x90, 0x00, 0x00, 0x60, 0x00, 0x43, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_559[] = {
  0x48, 0x90, 0x00, 0x00, 0x20, 0x00, 0x43, 0x01, 0x51, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_560[] = {
  0xa0, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x8c, 0x8f, 0x00, 0x00, 
};

static const u8 data_segment_data_561[] = {
  0x48, 0x90, 0x00, 0x00, 0x20, 0x00, 0x45, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_562[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x45, 0x01, 0x55, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x82, 0x00, 0x00, 
  
};

static const u8 data_segment_data_563[] = {
  0x3a, 0x02, 0x00, 0x00, 0xcc, 0x82, 0x00, 0x00, 0x52, 0x04, 0x00, 0x00, 
  0xd4, 0x82, 0x00, 0x00, 0xda, 0x04, 0x00, 0x00, 0xc0, 0x82, 0x00, 0x00, 
  0xe2, 0x0b, 0x00, 0x00, 0xdc, 0x82, 0x00, 0x00, 
};

static const u8 data_segment_data_564[] = {
  0x5c, 0x77, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
  0x90, 0x82, 0x00, 0x00, 
};

static const u8 data_segment_data_565[] = {
  0x90, 0x81, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0x57, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_566[] = {
  0xdc, 0x80, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_567[] = {
  0x18, 0x81, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_568[] = {
  0x18, 0x81, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_569[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x61, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_570[] = {
  0x00, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 
  0x03, 0x03, 0x03, 0x04, 
};

static const u8 data_segment_data_571[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x5c, 0x00, 0x00, 0x00, 
  0x5d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 
  0x5f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x83, 0x00, 0x00, 
  
};

static const u8 data_segment_data_572[] = {
  0xaa, 0x02, 0x00, 0x00, 0x90, 0x83, 0x00, 0x00, 0xe2, 0x04, 0x00, 0x00, 
  0x98, 0x83, 0x00, 0x00, 
};

static const u8 data_segment_data_573[] = {
  0x5c, 0x77, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0x70, 0x83, 0x00, 0x00, 
};

static const u8 data_segment_data_574[] = {
  0x0c, 0x91, 0x00, 0x00, 0xa4, 0x83, 0x00, 0x00, 
};

static const u8 data_segment_data_575[] = {
  0x90, 0x81, 0x00, 0x00, 0x08, 0x00, 0x06, 0x00, 0x60, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_576[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x07, 0x00, 0x61, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_577[] = {
  0xff, 0xff, 0xff, 0x7f, 
};

static const u8 data_segment_data_578[] = {
  0x30, 0x83, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0xb0, 0x83, 0x00, 0x00, 
};

static const u8 data_segment_data_579[] = {
  0x69, 0x00, 0x03, 0x02, 0x06, 0x00, 0x00, 0x00, 0x83, 0x00, 0x01, 0x02, 
  0x00, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_580[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x63, 0x00, 0x00, 0x00, 
  0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 
  0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 
  0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x84, 0x00, 0x00, 
  
};

static const u8 data_segment_data_581[] = {
  0xe2, 0x01, 0x00, 0x00, 0xa0, 0x84, 0x00, 0x00, 0x32, 0x02, 0x00, 0x00, 
  0xa8, 0x84, 0x00, 0x00, 0x4a, 0x02, 0x00, 0x00, 0xb0, 0x84, 0x00, 0x00, 
  0x52, 0x02, 0x00, 0x00, 0xb8, 0x84, 0x00, 0x00, 0x92, 0x02, 0x00, 0x00, 
  0xc0, 0x84, 0x00, 0x00, 0xe2, 0x02, 0x00, 0x00, 0x88, 0x84, 0x00, 0x00, 
  0xea, 0x02, 0x00, 0x00, 0xc8, 0x84, 0x00, 0x00, 0xc2, 0x03, 0x00, 0x00, 
  0x94, 0x84, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0xd0, 0x84, 0x00, 0x00, 
  0x1a, 0x04, 0x00, 0x00, 0xd8, 0x84, 0x00, 0x00, 0x7a, 0x04, 0x00, 0x00, 
  0xe0, 0x84, 0x00, 0x00, 
};

static const u8 data_segment_data_582[] = {
  0x5c, 0x77, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 
  0x20, 0x84, 0x00, 0x00, 
};

static const u8 data_segment_data_583[] = {
  0x90, 0x81, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0x69, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_584[] = {
  0x90, 0x81, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0x6a, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_585[] = {
  0x18, 0x81, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_586[] = {
  0xdc, 0x80, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_587[] = {
  0xdc, 0x80, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_588[] = {
  0x18, 0x81, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_589[] = {
  0x18, 0x81, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_590[] = {
  0x54, 0x81, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_591[] = {
  0x18, 0x81, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_592[] = {
  0xdc, 0x80, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_593[] = {
  0x90, 0x81, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0x73, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_594[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_595[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x71, 0x01, 0x76, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_596[] = {
  0xaa, 0x00, 0x00, 0x00, 0x80, 0x68, 0x00, 0x00, 0xfa, 0x01, 0x00, 0x00, 
  0x58, 0x96, 0x00, 0x00, 0x9a, 0x03, 0x00, 0x00, 0x28, 0x9b, 0x00, 0x00, 
  0x22, 0x0e, 0x00, 0x00, 0xa8, 0x96, 0x00, 0x00, 0x12, 0x0e, 0x00, 0x00, 
  0x70, 0x96, 0x00, 0x00, 0x52, 0x0e, 0x00, 0x00, 0xac, 0x9b, 0x00, 0x00, 
  0x5a, 0x0b, 0x00, 0x00, 0xa4, 0x97, 0x00, 0x00, 0xe2, 0x07, 0x00, 0x00, 
  0x64, 0x9a, 0x00, 0x00, 0x5a, 0x0e, 0x00, 0x00, 0x18, 0x9c, 0x00, 0x00, 
  0x2a, 0x0e, 0x00, 0x00, 0x10, 0x9d, 0x00, 0x00, 0x1a, 0x0e, 0x00, 0x00, 
  0x78, 0x9d, 0x00, 0x00, 0x0a, 0x0e, 0x00, 0x00, 0x10, 0x9f, 0x00, 0x00, 
  0x62, 0x0e, 0x00, 0x00, 0x4c, 0xa7, 0x00, 0x00, 0x02, 0x0e, 0x00, 0x00, 
  0x04, 0x92, 0x00, 0x00, 0x82, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xd2, 0x07, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 
};

static const u8 data_segment_data_597[] = {
  0x87, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x70, 0x85, 0x00, 0x00, 
  
};

static const u8 data_segment_data_598[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x86, 0x00, 0x00, 
  
};

static const u8 data_segment_data_599[] = {
  0x8a, 0x00, 0x00, 0x00, 0x68, 0x86, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 
  0x60, 0x86, 0x00, 0x00, 
};

static const u8 data_segment_data_600[] = {
  0x5c, 0x77, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0x40, 0x86, 0x00, 0x00, 
};

static const u8 data_segment_data_601[] = {
  0x84, 0x90, 0x00, 0x00, 0x70, 0x86, 0x00, 0x00, 
};

static const u8 data_segment_data_602[] = {
  0xdc, 0x80, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_603[] = {
  0xdc, 0x80, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_604[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x61, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x00, 0x00, 0x7b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_605[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x82, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x87, 0x00, 0x00, 
  
};

static const u8 data_segment_data_606[] = {
  0x01, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, 
  0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, 0x00, 
  0x2c, 0x01, 0x03, 0x00, 0x06, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_607[] = {
  0x6a, 0x0a, 0x00, 0x00, 0x38, 0x87, 0x00, 0x00, 0xfa, 0x0c, 0x00, 0x00, 
  0x40, 0x87, 0x00, 0x00, 0x32, 0x09, 0x00, 0x00, 0x48, 0x87, 0x00, 0x00, 
  
};

static const u8 data_segment_data_608[] = {
  0x5c, 0x77, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 
  0x10, 0x87, 0x00, 0x00, 
};

static const u8 data_segment_data_609[] = {
  0x18, 0x81, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_610[] = {
  0x18, 0x81, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_611[] = {
  0x18, 0x81, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_612[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_613[] = {
  0x18, 0x81, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_614[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x85, 0x00, 0x00, 0x00, 
  0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 
  0x8a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_615[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x61, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_616[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x8f, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_617[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x8f, 0x00, 0x00, 0x00, 
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 
  0x92, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x93, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x89, 0x00, 0x00, 
  
};

static const u8 data_segment_data_618[] = {
  0x48, 0x90, 0x00, 0x00, 0x08, 0x00, 0x42, 0x01, 0x8f, 0x00, 0x00, 0x00, 
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 
  0x92, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x93, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x8a, 0x00, 0x00, 
  
};

static const u8 data_segment_data_619[] = {
  0x22, 0x07, 0x00, 0x00, 0x84, 0x89, 0x00, 0x00, 0x32, 0x02, 0x00, 0x00, 
  0x8c, 0x89, 0x00, 0x00, 0x4a, 0x02, 0x00, 0x00, 0x94, 0x89, 0x00, 0x00, 
  0x5a, 0x09, 0x00, 0x00, 0x9c, 0x89, 0x00, 0x00, 0x42, 0x09, 0x00, 0x00, 
  0x60, 0x89, 0x00, 0x00, 0x4a, 0x09, 0x00, 0x00, 0x6c, 0x89, 0x00, 0x00, 
  0xaa, 0x0a, 0x00, 0x00, 0xa4, 0x89, 0x00, 0x00, 0xb2, 0x0a, 0x00, 0x00, 
  0xac, 0x89, 0x00, 0x00, 0xd2, 0x0a, 0x00, 0x00, 0xb4, 0x89, 0x00, 0x00, 
  0xf2, 0x0a, 0x00, 0x00, 0xbc, 0x89, 0x00, 0x00, 0xfa, 0x0a, 0x00, 0x00, 
  0xc4, 0x89, 0x00, 0x00, 0xc2, 0x03, 0x00, 0x00, 0xcc, 0x89, 0x00, 0x00, 
  0x02, 0x04, 0x00, 0x00, 0xd4, 0x89, 0x00, 0x00, 0x42, 0x0d, 0x00, 0x00, 
  0xdc, 0x89, 0x00, 0x00, 0x4a, 0x0d, 0x00, 0x00, 0xe4, 0x89, 0x00, 0x00, 
  0x3a, 0x0e, 0x00, 0x00, 0xec, 0x89, 0x00, 0x00, 0xfa, 0x04, 0x00, 0x00, 
  0x78, 0x89, 0x00, 0x00, 0x62, 0x05, 0x00, 0x00, 0x9c, 0x91, 0x00, 0x00, 
  
};

static const u8 data_segment_data_620[] = {
  0x5c, 0x77, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 
  0xc0, 0x88, 0x00, 0x00, 
};

static const u8 data_segment_data_621[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x03, 0x00, 0x94, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_622[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x03, 0x00, 0x95, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_623[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x03, 0x00, 0x96, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_624[] = {
  0x18, 0x81, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_625[] = {
  0xdc, 0x80, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_626[] = {
  0xdc, 0x80, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_627[] = {
  0x18, 0x81, 0x00, 0x00, 0x9a, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_628[] = {
  0x18, 0x81, 0x00, 0x00, 0x9b, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_629[] = {
  0x18, 0x81, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_630[] = {
  0x18, 0x81, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_631[] = {
  0x18, 0x81, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_632[] = {
  0x18, 0x81, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_633[] = {
  0xdc, 0x80, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_634[] = {
  0x18, 0x81, 0x00, 0x00, 0xa1, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_635[] = {
  0x18, 0x81, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_636[] = {
  0x18, 0x81, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_637[] = {
  0x18, 0x81, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_638[] = {
  0x4a, 0x02, 0x00, 0x00, 0x94, 0x89, 0x00, 0x00, 0x42, 0x09, 0x00, 0x00, 
  0x60, 0x89, 0x00, 0x00, 0xaa, 0x0a, 0x00, 0x00, 0xa4, 0x89, 0x00, 0x00, 
  0xd2, 0x0a, 0x00, 0x00, 0xb4, 0x89, 0x00, 0x00, 0xf2, 0x0a, 0x00, 0x00, 
  0xbc, 0x89, 0x00, 0x00, 0xfa, 0x0a, 0x00, 0x00, 0xc4, 0x89, 0x00, 0x00, 
  0x42, 0x0d, 0x00, 0x00, 0xdc, 0x89, 0x00, 0x00, 0x3a, 0x0e, 0x00, 0x00, 
  0xec, 0x89, 0x00, 0x00, 0x62, 0x05, 0x00, 0x00, 0x9c, 0x91, 0x00, 0x00, 
  
};

static const u8 data_segment_data_639[] = {
  0x5c, 0x77, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 
  0x00, 0x8a, 0x00, 0x00, 
};

static const u8 data_segment_data_640[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xa5, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_641[] = {
  0x58, 0x8a, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_642[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0xa5, 0x01, 0xa6, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_643[] = {
  0x0c, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x37, 0x3b, 0x00, 0x00, 
};

static const u8 data_segment_data_644[] = {
  0x18, 0x81, 0x00, 0x00, 0xa9, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_645[] = {
  0x90, 0x81, 0x00, 0x00, 0x06, 0x00, 0x02, 0x00, 0xaa, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_646[] = {
  0x90, 0x81, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0xab, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_647[] = {
  0x90, 0x81, 0x00, 0x00, 0x06, 0x00, 0x02, 0x00, 0xac, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_648[] = {
  0x90, 0x81, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0xad, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_649[] = {
  0x90, 0x81, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0xae, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_650[] = {
  0x90, 0x81, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0xaf, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_651[] = {
  0x90, 0x81, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0xb0, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_652[] = {
  0x90, 0x81, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0xb1, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_653[] = {
  0x90, 0x81, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0xb2, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_654[] = {
  0x90, 0x81, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0xb3, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_655[] = {
  0x90, 0x81, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0xb4, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_656[] = {
  0x90, 0x81, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0xb5, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_657[] = {
  0x18, 0x81, 0x00, 0x00, 0xb6, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_658[] = {
  0x90, 0x81, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0xb7, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_659[] = {
  0x90, 0x81, 0x00, 0x00, 0x08, 0x00, 0x06, 0x00, 0xb8, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_660[] = {
  0x90, 0x81, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0xb9, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_661[] = {
  0x18, 0x81, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_662[] = {
  0x18, 0x81, 0x00, 0x00, 0xbb, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_663[] = {
  0xdc, 0x80, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_664[] = {
  0xdc, 0x80, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_665[] = {
  0xdc, 0x80, 0x00, 0x00, 0xbe, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_666[] = {
  0xdc, 0x80, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_667[] = {
  0xdc, 0x80, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_668[] = {
  0xdc, 0x80, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_669[] = {
  0xdc, 0x80, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_670[] = {
  0x90, 0x81, 0x00, 0x00, 0x06, 0x00, 0x02, 0x00, 0xc3, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_671[] = {
  0x90, 0x81, 0x00, 0x00, 0x06, 0x00, 0x02, 0x00, 0xc4, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_672[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x42, 0x00, 0xc5, 0x00, 0x00, 0x00, 
  0xc6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x00, 0x00, 
  0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc9, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x8d, 0x00, 0x00, 
  
};

static const u8 data_segment_data_673[] = {
  0x63, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_674[] = {
  0x20, 0x09, 0x0a, 0x0d, 0x0b, 0x0c, 0x00, 
};

static const u8 data_segment_data_675[] = {
  0x12, 0x09, 0x00, 0x00, 0xf4, 0x8b, 0x00, 0x00, 0x9a, 0x02, 0x00, 0x00, 
  0x14, 0x8b, 0x00, 0x00, 0x22, 0x04, 0x00, 0x00, 0x20, 0x8b, 0x00, 0x00, 
  0xe2, 0x02, 0x00, 0x00, 0x2c, 0x8b, 0x00, 0x00, 0x2a, 0x04, 0x00, 0x00, 
  0x38, 0x8b, 0x00, 0x00, 0x42, 0x03, 0x00, 0x00, 0xe8, 0x8a, 0x00, 0x00, 
  0x8a, 0x04, 0x00, 0x00, 0xf0, 0x8a, 0x00, 0x00, 0x32, 0x0d, 0x00, 0x00, 
  0xfc, 0x8a, 0x00, 0x00, 0x3a, 0x04, 0x00, 0x00, 0x08, 0x8b, 0x00, 0x00, 
  0x9a, 0x04, 0x00, 0x00, 0x44, 0x8b, 0x00, 0x00, 0x7a, 0x02, 0x00, 0x00, 
  0x50, 0x8b, 0x00, 0x00, 0xc2, 0x04, 0x00, 0x00, 0x5c, 0x8b, 0x00, 0x00, 
  0x82, 0x03, 0x00, 0x00, 0x68, 0x8b, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 
  0x74, 0x8b, 0x00, 0x00, 0xa2, 0x02, 0x00, 0x00, 0x88, 0x8b, 0x00, 0x00, 
  0x0a, 0x04, 0x00, 0x00, 0x94, 0x8b, 0x00, 0x00, 0x52, 0x02, 0x00, 0x00, 
  0xa0, 0x8b, 0x00, 0x00, 0xd2, 0x0b, 0x00, 0x00, 0xac, 0x8b, 0x00, 0x00, 
  0x8a, 0x0c, 0x00, 0x00, 0xb4, 0x8b, 0x00, 0x00, 0xca, 0x07, 0x00, 0x00, 
  0x80, 0x8b, 0x00, 0x00, 0x7a, 0x03, 0x00, 0x00, 0xbc, 0x8b, 0x00, 0x00, 
  0x02, 0x05, 0x00, 0x00, 0xc4, 0x8b, 0x00, 0x00, 0x1a, 0x03, 0x00, 0x00, 
  0xcc, 0x8b, 0x00, 0x00, 0xfa, 0x02, 0x00, 0x00, 0xd4, 0x8b, 0x00, 0x00, 
  0x02, 0x03, 0x00, 0x00, 0xdc, 0x8b, 0x00, 0x00, 0x2a, 0x03, 0x00, 0x00, 
  0xe4, 0x8b, 0x00, 0x00, 0x12, 0x03, 0x00, 0x00, 0xec, 0x8b, 0x00, 0x00, 
  
};

static const u8 data_segment_data_676[] = {
  0x5c, 0x77, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 
  0x60, 0x8c, 0x00, 0x00, 
};

static const u8 data_segment_data_677[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x97, 0x00, 0xcb, 0x00, 0x00, 0x00, 
  0xcc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00, 
  0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xce, 0x00, 0x00, 0x00, 
  0xcf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc9, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x8e, 0x00, 0x00, 
  
};

static const u8 data_segment_data_678[] = {
  0x8a, 0x09, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x9a, 0x02, 0x00, 0x00, 
  0x14, 0x8b, 0x00, 0x00, 0x22, 0x04, 0x00, 0x00, 0x20, 0x8b, 0x00, 0x00, 
  0xe2, 0x02, 0x00, 0x00, 0x2c, 0x8b, 0x00, 0x00, 0x2a, 0x04, 0x00, 0x00, 
  0x38, 0x8b, 0x00, 0x00, 0x42, 0x03, 0x00, 0x00, 0xe8, 0x8a, 0x00, 0x00, 
  0x8a, 0x04, 0x00, 0x00, 0xf0, 0x8a, 0x00, 0x00, 0x32, 0x0d, 0x00, 0x00, 
  0xfc, 0x8a, 0x00, 0x00, 0x3a, 0x04, 0x00, 0x00, 0x08, 0x8b, 0x00, 0x00, 
  0x9a, 0x04, 0x00, 0x00, 0x44, 0x8b, 0x00, 0x00, 0x7a, 0x02, 0x00, 0x00, 
  0x50, 0x8b, 0x00, 0x00, 0xc2, 0x04, 0x00, 0x00, 0x5c, 0x8b, 0x00, 0x00, 
  0x82, 0x03, 0x00, 0x00, 0x68, 0x8b, 0x00, 0x00, 0x42, 0x04, 0x00, 0x00, 
  0x74, 0x8b, 0x00, 0x00, 0xa2, 0x02, 0x00, 0x00, 0x88, 0x8b, 0x00, 0x00, 
  0x0a, 0x04, 0x00, 0x00, 0x94, 0x8b, 0x00, 0x00, 0x52, 0x02, 0x00, 0x00, 
  0xa0, 0x8b, 0x00, 0x00, 0xd2, 0x0b, 0x00, 0x00, 0xac, 0x8b, 0x00, 0x00, 
  0x8a, 0x0c, 0x00, 0x00, 0xb4, 0x8b, 0x00, 0x00, 0xca, 0x07, 0x00, 0x00, 
  0x80, 0x8b, 0x00, 0x00, 0x7a, 0x03, 0x00, 0x00, 0xbc, 0x8b, 0x00, 0x00, 
  0x02, 0x05, 0x00, 0x00, 0xc4, 0x8b, 0x00, 0x00, 0x1a, 0x03, 0x00, 0x00, 
  0xcc, 0x8b, 0x00, 0x00, 0xfa, 0x02, 0x00, 0x00, 0xd4, 0x8b, 0x00, 0x00, 
  0x02, 0x03, 0x00, 0x00, 0xdc, 0x8b, 0x00, 0x00, 0x2a, 0x03, 0x00, 0x00, 
  0xe4, 0x8b, 0x00, 0x00, 0x12, 0x03, 0x00, 0x00, 0xec, 0x8b, 0x00, 0x00, 
  
};

static const u8 data_segment_data_679[] = {
  0x5c, 0x77, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 
  0x90, 0x8d, 0x00, 0x00, 
};

static const u8 data_segment_data_680[] = {
  0xd0, 0x00, 0x00, 0x00, 0xd1, 0x00, 0x00, 0x00, 0xd2, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_681[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0xda, 0x00, 0xd3, 0x00, 0x00, 0x00, 
  0xd4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x00, 0x00, 0xd5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x78, 0x8e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x8f, 0x00, 0x00, 
  
};

static const u8 data_segment_data_682[] = {
  0xd0, 0x00, 0x00, 0x00, 0xd1, 0x00, 0x00, 0x00, 0xd2, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_683[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0xd7, 0x00, 0xd3, 0x00, 0x00, 0x00, 
  0xd4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x00, 0x00, 0xd5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xc4, 0x8e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x8f, 0x00, 0x00, 
  
};

static const u8 data_segment_data_684[] = {
  0xea, 0x03, 0x00, 0x00, 0xa4, 0x91, 0x00, 0x00, 0xf2, 0x03, 0x00, 0x00, 
  0xbc, 0x91, 0x00, 0x00, 0xfa, 0x03, 0x00, 0x00, 0xc8, 0x91, 0x00, 0x00, 
  0x22, 0x05, 0x00, 0x00, 0xb0, 0x91, 0x00, 0x00, 0xb2, 0x0c, 0x00, 0x00, 
  0xdc, 0x91, 0x00, 0x00, 0x7a, 0x0d, 0x00, 0x00, 0xe8, 0x91, 0x00, 0x00, 
  0xf2, 0x09, 0x00, 0x00, 0xf0, 0x91, 0x00, 0x00, 0x3a, 0x02, 0x00, 0x00, 
  0xd4, 0x91, 0x00, 0x00, 0x72, 0x0a, 0x00, 0x00, 0x84, 0x8f, 0x00, 0x00, 
  0x62, 0x00, 0x00, 0x00, 0x10, 0x69, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 
  0x78, 0x8f, 0x00, 0x00, 
};

static const u8 data_segment_data_685[] = {
  0x5c, 0x77, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 
  0x10, 0x8f, 0x00, 0x00, 
};

static const u8 data_segment_data_686[] = {
  0x90, 0x81, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0xd6, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_687[] = {
  0xdc, 0x80, 0x00, 0x00, 0xd7, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_688[] = {
  0x94, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_689[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x9d, 0x00, 0xd9, 0x00, 0x00, 0x00, 
  0xda, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 
  0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 
  0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x8f, 0x00, 0x00, 
  
};

static const u8 data_segment_data_690[] = {
  0x52, 0x02, 0x00, 0x00, 0xfc, 0x8f, 0x00, 0x00, 0xe2, 0x02, 0x00, 0x00, 
  0xf0, 0x8f, 0x00, 0x00, 
};

static const u8 data_segment_data_691[] = {
  0x5c, 0x77, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0xd0, 0x8f, 0x00, 0x00, 
};

static const u8 data_segment_data_692[] = {
  0x90, 0x81, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0xdb, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_693[] = {
  0x18, 0x81, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_694[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x03, 0x00, 0xe3, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_695[] = {
  0xc2, 0xbf, 0xb6, 0x00, 0xaa, 0x14, 0x10, 0xa6, 0x12, 0x00, 
};

static const u8 data_segment_data_696[] = {
  0xba, 0xb3, 0xaf, 0xb8, 0xb2, 0xbe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xb4, 0xb7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xca, 
  0xa8, 0xb9, 0xc6, 0xa7, 0xc7, 0xbd, 0xbb, 0xb1, 0xc9, 0xbc, 0xc3, 0xae, 
  0xac, 
};

static const u8 data_segment_data_697[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x9e, 0x00, 0xe4, 0x00, 0x00, 0x00, 
  0xe5, 0x00, 0x00, 0x00, 0xe6, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xe7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_698[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xe8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_699[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x00, 0xe9, 0x00, 0x00, 0x00, 
  0xea, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xeb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_700[] = {
  0x18, 0x81, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_701[] = {
  0x18, 0x81, 0x00, 0x00, 0xed, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_702[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xe8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_703[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xee, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x00, 0x00, 0xef, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_704[] = {
  0x18, 0x81, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_705[] = {
  0x54, 0x81, 0x00, 0x00, 0xf1, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_706[] = {
  0x18, 0x81, 0x00, 0x00, 0xf2, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_707[] = {
  0x18, 0x81, 0x00, 0x00, 0xf3, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_708[] = {
  0x90, 0x81, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0xf4, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_709[] = {
  0x90, 0x81, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0xf5, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_710[] = {
  0x90, 0x81, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0xf6, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_711[] = {
  0x90, 0x81, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0xf7, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_712[] = {
  0xdc, 0x80, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_713[] = {
  0x90, 0x81, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0xf9, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_714[] = {
  0xdc, 0x80, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_715[] = {
  0xdc, 0x80, 0x00, 0x00, 0xfb, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_716[] = {
  0x90, 0x81, 0x00, 0x00, 0x0a, 0x00, 0x02, 0x00, 0xfc, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_717[] = {
  0x28, 0x85, 0x00, 0x00, 0x20, 0x92, 0x00, 0x00, 
};

static const u8 data_segment_data_718[] = {
  0xba, 0x00, 0x00, 0x00, 0x02, 0x0e, 0x00, 0x00, 0x32, 0x07, 0x00, 0x00, 
  0x54, 0x69, 0x00, 0x00, 
};

static const u8 data_segment_data_719[] = {
  0x5c, 0x77, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0x10, 0x92, 0x00, 0x00, 
};

static const u8 data_segment_data_720[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x05, 0x00, 0xfd, 0x00, 0x00, 0x00, 
  
};

static const u8 data_segment_data_721[] = {
  0xdc, 0x80, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_722[] = {
  0xdc, 0x80, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_723[] = {
  0xdc, 0x80, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_724[] = {
  0xdc, 0x80, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_725[] = {
  0xdc, 0x80, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_726[] = {
  0xdc, 0x80, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_727[] = {
  0x90, 0x81, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_728[] = {
  0x18, 0x81, 0x00, 0x00, 0x05, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_729[] = {
  0xdc, 0x80, 0x00, 0x00, 0x06, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_730[] = {
  0xdc, 0x80, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_731[] = {
  0xdc, 0x80, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_732[] = {
  0x90, 0x81, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0x09, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_733[] = {
  0x90, 0x81, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0x0a, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_734[] = {
  0xdc, 0x80, 0x00, 0x00, 0x0b, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_735[] = {
  0xdc, 0x80, 0x00, 0x00, 0x0c, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_736[] = {
  0xdc, 0x80, 0x00, 0x00, 0x0d, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_737[] = {
  0x90, 0x81, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0x0e, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_738[] = {
  0x90, 0x81, 0x00, 0x00, 0xff, 0xff, 0x01, 0x00, 0x0f, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_739[] = {
  0xdc, 0x80, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_740[] = {
  0xdc, 0x80, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_741[] = {
  0x90, 0x81, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0x12, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_742[] = {
  0x90, 0x81, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0x13, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_743[] = {
  0x90, 0x81, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0x14, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_744[] = {
  0x90, 0x81, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0x15, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_745[] = {
  0x54, 0x81, 0x00, 0x00, 0x16, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_746[] = {
  0x18, 0x81, 0x00, 0x00, 0x17, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_747[] = {
  0x18, 0x81, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_748[] = {
  0xa0, 0x80, 0x00, 0x00, 0x19, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_749[] = {
  0xa0, 0x80, 0x00, 0x00, 0x1a, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_750[] = {
  0xdc, 0x80, 0x00, 0x00, 0x1b, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_751[] = {
  0xdc, 0x80, 0x00, 0x00, 0x1c, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_752[] = {
  0xba, 0x00, 0x00, 0x00, 0xfa, 0x01, 0x00, 0x00, 0x5a, 0x05, 0x00, 0x00, 
  0x30, 0x92, 0x00, 0x00, 0xaa, 0x05, 0x00, 0x00, 0xf8, 0x91, 0x00, 0x00, 
  0x22, 0x06, 0x00, 0x00, 0xe0, 0x92, 0x00, 0x00, 0xf2, 0x01, 0x00, 0x00, 
  0x80, 0x6a, 0x00, 0x00, 0x12, 0x02, 0x00, 0x00, 0x0c, 0x8c, 0x00, 0x00, 
  0x02, 0x02, 0x00, 0x00, 0x90, 0x69, 0x00, 0x00, 0xea, 0x07, 0x00, 0x00, 
  0x20, 0x77, 0x00, 0x00, 0x5a, 0x02, 0x00, 0x00, 0x5c, 0x77, 0x00, 0x00, 
  0x92, 0x09, 0x00, 0x00, 0x5c, 0x79, 0x00, 0x00, 0xd2, 0x09, 0x00, 0x00, 
  0x04, 0x80, 0x00, 0x00, 0xda, 0x09, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 
  0xe2, 0x09, 0x00, 0x00, 0x7c, 0x9f, 0x00, 0x00, 0x12, 0x0a, 0x00, 0x00, 
  0x84, 0x88, 0x00, 0x00, 0xf2, 0x02, 0x00, 0x00, 0x30, 0x83, 0x00, 0x00, 
  0xaa, 0x0b, 0x00, 0x00, 0x94, 0xa6, 0x00, 0x00, 0x62, 0x03, 0x00, 0x00, 
  0xe0, 0x83, 0x00, 0x00, 0x92, 0x03, 0x00, 0x00, 0xec, 0x84, 0x00, 0x00, 
  0x72, 0x0b, 0x00, 0x00, 0x18, 0x69, 0x00, 0x00, 0xaa, 0x03, 0x00, 0x00, 
  0xfc, 0x85, 0x00, 0x00, 0x12, 0x0c, 0x00, 0x00, 0xb4, 0x86, 0x00, 0x00, 
  0xe2, 0x03, 0x00, 0x00, 0x94, 0x87, 0x00, 0x00, 0x7a, 0x0c, 0x00, 0x00, 
  0x0c, 0x88, 0x00, 0x00, 0x62, 0x04, 0x00, 0x00, 0x48, 0x88, 0x00, 0x00, 
  0x2a, 0x0d, 0x00, 0x00, 0x9c, 0x8a, 0x00, 0x00, 0xba, 0x04, 0x00, 0x00, 
  0x48, 0x8d, 0x00, 0x00, 0xd2, 0x04, 0x00, 0x00, 0xc0, 0x90, 0x00, 0x00, 
  0xea, 0x04, 0x00, 0x00, 0x94, 0x8f, 0x00, 0x00, 0xf2, 0x04, 0x00, 0x00, 
  0x48, 0x90, 0x00, 0x00, 0x2a, 0x05, 0x00, 0x00, 0x48, 0x91, 0x00, 0x00, 
  0x2a, 0x02, 0x00, 0x00, 0x0c, 0x91, 0x00, 0x00, 0xa2, 0x04, 0x00, 0x00, 
  0x84, 0x90, 0x00, 0x00, 0x1a, 0x01, 0x00, 0x00, 0x94, 0x8a, 0x00, 0x00, 
  0xca, 0x01, 0x00, 0x00, 0x3c, 0x92, 0x00, 0x00, 0xd2, 0x01, 0x00, 0x00, 
  0x44, 0x92, 0x00, 0x00, 0xda, 0x01, 0x00, 0x00, 0x4c, 0x92, 0x00, 0x00, 
  0x9a, 0x07, 0x00, 0x00, 0x54, 0x92, 0x00, 0x00, 0x1a, 0x02, 0x00, 0x00, 
  0x5c, 0x92, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x64, 0x92, 0x00, 0x00, 
  0x2a, 0x09, 0x00, 0x00, 0x28, 0x93, 0x00, 0x00, 0x62, 0x02, 0x00, 0x00, 
  0x6c, 0x92, 0x00, 0x00, 0x6a, 0x02, 0x00, 0x00, 0x78, 0x92, 0x00, 0x00, 
  0xba, 0x02, 0x00, 0x00, 0x14, 0x93, 0x00, 0x00, 0x6a, 0x04, 0x00, 0x00, 
  0x20, 0x93, 0x00, 0x00, 0xc2, 0x02, 0x00, 0x00, 0x38, 0x93, 0x00, 0x00, 
  0xca, 0x02, 0x00, 0x00, 0x30, 0x93, 0x00, 0x00, 0xd2, 0x02, 0x00, 0x00, 
  0x80, 0x92, 0x00, 0x00, 0x8a, 0x0a, 0x00, 0x00, 0x88, 0x92, 0x00, 0x00, 
  0xda, 0x02, 0x00, 0x00, 0x48, 0x93, 0x00, 0x00, 0x0a, 0x03, 0x00, 0x00, 
  0x04, 0x91, 0x00, 0x00, 0x22, 0x03, 0x00, 0x00, 0xfc, 0x90, 0x00, 0x00, 
  0x3a, 0x03, 0x00, 0x00, 0x90, 0x92, 0x00, 0x00, 0x5a, 0x03, 0x00, 0x00, 
  0x50, 0x93, 0x00, 0x00, 0x72, 0x03, 0x00, 0x00, 0x40, 0x93, 0x00, 0x00, 
  0x62, 0x0b, 0x00, 0x00, 0x98, 0x92, 0x00, 0x00, 0x7a, 0x0b, 0x00, 0x00, 
  0xa4, 0x92, 0x00, 0x00, 0xa2, 0x03, 0x00, 0x00, 0xb0, 0x92, 0x00, 0x00, 
  0xba, 0x0b, 0x00, 0x00, 0xb8, 0x92, 0x00, 0x00, 0xba, 0x03, 0x00, 0x00, 
  0xc0, 0x92, 0x00, 0x00, 0xd2, 0x03, 0x00, 0x00, 0xc8, 0x92, 0x00, 0x00, 
  0xda, 0x03, 0x00, 0x00, 0xd4, 0x92, 0x00, 0x00, 0x12, 0x04, 0x00, 0x00, 
  0xe8, 0x92, 0x00, 0x00, 0x32, 0x04, 0x00, 0x00, 0xf0, 0x92, 0x00, 0x00, 
  0x82, 0x04, 0x00, 0x00, 0x08, 0x93, 0x00, 0x00, 0xca, 0x04, 0x00, 0x00, 
  0xfc, 0x92, 0x00, 0x00, 0x0a, 0x01, 0x00, 0x00, 0xec, 0x79, 0x00, 0x00, 
  0xf2, 0x00, 0x00, 0x00, 0x54, 0x7b, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 
  0x08, 0x7c, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x44, 0x7c, 0x00, 0x00, 
  0x12, 0x01, 0x00, 0x00, 0x80, 0x7c, 0x00, 0x00, 0x22, 0x01, 0x00, 0x00, 
  0xdc, 0x7a, 0x00, 0x00, 0x2a, 0x01, 0x00, 0x00, 0xa0, 0x7a, 0x00, 0x00, 
  0x32, 0x01, 0x00, 0x00, 0xbc, 0x7c, 0x00, 0x00, 0x3a, 0x01, 0x00, 0x00, 
  0x14, 0x7f, 0x00, 0x00, 0x42, 0x01, 0x00, 0x00, 0x34, 0x7d, 0x00, 0x00, 
  0x52, 0x01, 0x00, 0x00, 0x64, 0x7a, 0x00, 0x00, 0x4a, 0x01, 0x00, 0x00, 
  0x70, 0x7d, 0x00, 0x00, 0x5a, 0x01, 0x00, 0x00, 0xf8, 0x7c, 0x00, 0x00, 
  0x62, 0x01, 0x00, 0x00, 0xac, 0x7d, 0x00, 0x00, 0x6a, 0x01, 0x00, 0x00, 
  0xe8, 0x7d, 0x00, 0x00, 0x7a, 0x01, 0x00, 0x00, 0x9c, 0x7e, 0x00, 0x00, 
  0x82, 0x01, 0x00, 0x00, 0x24, 0x7e, 0x00, 0x00, 0x8a, 0x01, 0x00, 0x00, 
  0x90, 0x7b, 0x00, 0x00, 0x92, 0x01, 0x00, 0x00, 0x60, 0x7e, 0x00, 0x00, 
  0xca, 0x06, 0x00, 0x00, 0x18, 0x7b, 0x00, 0x00, 0x9a, 0x01, 0x00, 0x00, 
  0xb0, 0x79, 0x00, 0x00, 0xa2, 0x01, 0x00, 0x00, 0xd8, 0x7e, 0x00, 0x00, 
  0xaa, 0x01, 0x00, 0x00, 0x28, 0x7a, 0x00, 0x00, 0xb2, 0x01, 0x00, 0x00, 
  0x50, 0x7f, 0x00, 0x00, 0xda, 0x06, 0x00, 0x00, 0xc8, 0x7f, 0x00, 0x00, 
  0xba, 0x01, 0x00, 0x00, 0x8c, 0x7f, 0x00, 0x00, 0xc2, 0x01, 0x00, 0x00, 
  0xcc, 0x7b, 0x00, 0x00, 0xb2, 0x03, 0x00, 0x00, 0x38, 0xa7, 0x00, 0x00, 
  
};

static const u8 data_segment_data_753[] = {
  0x5c, 0x77, 0x00, 0x00, 0xef, 0x02, 0x00, 0x00, 0x5d, 0x00, 0x00, 0x00, 
  0x60, 0x93, 0x00, 0x00, 
};

static const u8 data_segment_data_754[] = {
  0x28, 0x85, 0x00, 0x00, 0x48, 0x96, 0x00, 0x00, 
};

static const u8 data_segment_data_755[] = {
  0x8b, 0x00, 0x03, 0x02, 0x22, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x03, 0x02, 
  0x1a, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_756[] = {
  0x28, 0x85, 0x00, 0x00, 0x98, 0x96, 0x00, 0x00, 
};

static const u8 data_segment_data_757[] = {
  0xba, 0x00, 0x00, 0x00, 0x12, 0x0e, 0x00, 0x00, 0xb2, 0x0b, 0x00, 0x00, 
  0x8c, 0x87, 0x00, 0x00, 0xc2, 0x06, 0x00, 0x00, 0xa8, 0x77, 0x00, 0x00, 
  
};

static const u8 data_segment_data_758[] = {
  0x5c, 0x77, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 
  0x80, 0x96, 0x00, 0x00, 
};

static const u8 data_segment_data_759[] = {
  0x28, 0x85, 0x00, 0x00, 0xd0, 0x96, 0x00, 0x00, 
};

static const u8 data_segment_data_760[] = {
  0xba, 0x00, 0x00, 0x00, 0x22, 0x0e, 0x00, 0x00, 0xb2, 0x03, 0x00, 0x00, 
  0x38, 0xa7, 0x00, 0x00, 0xd2, 0x06, 0x00, 0x00, 0x88, 0x8e, 0x00, 0x00, 
  0xba, 0x06, 0x00, 0x00, 0xd4, 0x8e, 0x00, 0x00, 
};

static const u8 data_segment_data_761[] = {
  0x5c, 0x77, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
  0xb0, 0x96, 0x00, 0x00, 
};

static const u8 data_segment_data_762[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xf0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x40, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x38, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5e, 0x40, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x86, 0x40, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xb0, 0xb3, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0xe3, 0x40, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x16, 0x41, 0x00, 0x00, 0x00, 0x00, 
  0x80, 0xaf, 0x4b, 0x41, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x08, 0x83, 0x41, 
  0x00, 0x00, 0x00, 0x00, 0xfc, 0x8c, 0xbc, 0x41, 0x00, 0x00, 0x00, 0xc0, 
  0x8c, 0x32, 0xf7, 0x41, 0x00, 0x00, 0x00, 0x28, 0x3b, 0x4c, 0x34, 0x42, 
  0x00, 0x00, 0x80, 0x75, 0x77, 0x07, 0x73, 0x42, 0x00, 0x00, 0x80, 0x75, 
  0x77, 0x07, 0xb3, 0x42, 0x00, 0x00, 0xd8, 0xec, 0xee, 0x37, 0xf4, 0x42, 
  0x00, 0x00, 0x73, 0xca, 0xec, 0xbe, 0x36, 0x43, 0x00, 0x90, 0x68, 0x30, 
  0xb9, 0x02, 0x7b, 0x43, 0x00, 0x5a, 0x41, 0xbe, 0xb3, 0xe1, 0xc0, 0x43, 
  0x20, 0xc6, 0xb5, 0xe9, 0x3b, 0x28, 0x06, 0x44, 0x6c, 0xf0, 0x59, 0x61, 
  0x52, 0x77, 0x4e, 0x44, 
};

static const u8 data_segment_data_763[] = {
  0x90, 0x81, 0x00, 0x00, 0xff, 0xff, 0x05, 0x00, 0x1d, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_764[] = {
  0x28, 0x85, 0x00, 0x00, 0x20, 0x99, 0x00, 0x00, 
};

static const u8 data_segment_data_765[] = {
  0x01, 0x00, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0x8b, 0x01, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 
  0xdd, 0x00, 0x03, 0x02, 0x01, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_766[] = {
  0xba, 0x00, 0x00, 0x00, 0x5a, 0x0b, 0x00, 0x00, 0x7a, 0x09, 0x00, 0x00, 
  0x80, 0x80, 0x00, 0x00, 0xf2, 0x0b, 0x00, 0x00, 0x90, 0x80, 0x00, 0x00, 
  0x3a, 0x0d, 0x00, 0x00, 0x3c, 0x99, 0x00, 0x00, 0xd2, 0x03, 0x00, 0x00, 
  0x44, 0x99, 0x00, 0x00, 0xb2, 0x09, 0x00, 0x00, 0x4c, 0x99, 0x00, 0x00, 
  0xc2, 0x09, 0x00, 0x00, 0x54, 0x99, 0x00, 0x00, 0x42, 0x0b, 0x00, 0x00, 
  0x30, 0x99, 0x00, 0x00, 0x52, 0x0b, 0x00, 0x00, 0x5c, 0x99, 0x00, 0x00, 
  0x4a, 0x0b, 0x00, 0x00, 0x64, 0x99, 0x00, 0x00, 0x02, 0x08, 0x00, 0x00, 
  0x6c, 0x99, 0x00, 0x00, 0x22, 0x0d, 0x00, 0x00, 0x74, 0x99, 0x00, 0x00, 
  0x62, 0x0d, 0x00, 0x00, 0x7c, 0x99, 0x00, 0x00, 0xfa, 0x06, 0x00, 0x00, 
  0x84, 0x99, 0x00, 0x00, 0x42, 0x07, 0x00, 0x00, 0x8c, 0x99, 0x00, 0x00, 
  0x82, 0x07, 0x00, 0x00, 0x94, 0x99, 0x00, 0x00, 0xfa, 0x07, 0x00, 0x00, 
  0x9c, 0x99, 0x00, 0x00, 0x1a, 0x0d, 0x00, 0x00, 0xa4, 0x99, 0x00, 0x00, 
  0x5a, 0x0d, 0x00, 0x00, 0xac, 0x99, 0x00, 0x00, 0xf2, 0x06, 0x00, 0x00, 
  0xb4, 0x99, 0x00, 0x00, 0x3a, 0x07, 0x00, 0x00, 0xbc, 0x99, 0x00, 0x00, 
  0x72, 0x07, 0x00, 0x00, 0xc4, 0x99, 0x00, 0x00, 0x7a, 0x07, 0x00, 0x00, 
  0xcc, 0x99, 0x00, 0x00, 0xc2, 0x07, 0x00, 0x00, 0xd4, 0x99, 0x00, 0x00, 
  0xf2, 0x07, 0x00, 0x00, 0xdc, 0x99, 0x00, 0x00, 0xca, 0x09, 0x00, 0x00, 
  0xe4, 0x99, 0x00, 0x00, 0xea, 0x09, 0x00, 0x00, 0xec, 0x99, 0x00, 0x00, 
  0xfa, 0x09, 0x00, 0x00, 0xf4, 0x99, 0x00, 0x00, 0x02, 0x0a, 0x00, 0x00, 
  0xfc, 0x99, 0x00, 0x00, 0x22, 0x0b, 0x00, 0x00, 0x04, 0x9a, 0x00, 0x00, 
  0x82, 0x0b, 0x00, 0x00, 0x0c, 0x9a, 0x00, 0x00, 0xda, 0x0a, 0x00, 0x00, 
  0x14, 0x9a, 0x00, 0x00, 0xe2, 0x0a, 0x00, 0x00, 0x1c, 0x9a, 0x00, 0x00, 
  0xea, 0x0a, 0x00, 0x00, 0x24, 0x9a, 0x00, 0x00, 0xca, 0x0a, 0x00, 0x00, 
  0x98, 0x97, 0x00, 0x00, 0xfa, 0x0d, 0x00, 0x00, 0x2c, 0x9a, 0x00, 0x00, 
  0x2a, 0x0c, 0x00, 0x00, 0x34, 0x9a, 0x00, 0x00, 0x22, 0x09, 0x00, 0x00, 
  0x3c, 0x9a, 0x00, 0x00, 0x9a, 0x09, 0x00, 0x00, 0x44, 0x9a, 0x00, 0x00, 
  0xa2, 0x09, 0x00, 0x00, 0x4c, 0x9a, 0x00, 0x00, 0x22, 0x0a, 0x00, 0x00, 
  0x54, 0x9a, 0x00, 0x00, 0x2a, 0x0b, 0x00, 0x00, 0x5c, 0x9a, 0x00, 0x00, 
  
};

static const u8 data_segment_data_767[] = {
  0x5c, 0x77, 0x00, 0x00, 0x57, 0x01, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 
  0xd0, 0x97, 0x00, 0x00, 
};

static const u8 data_segment_data_768[] = {
  0x90, 0x81, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0x1e, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_769[] = {
  0xdc, 0x80, 0x00, 0x00, 0x1f, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_770[] = {
  0x18, 0x81, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_771[] = {
  0xdc, 0x80, 0x00, 0x00, 0x21, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_772[] = {
  0xdc, 0x80, 0x00, 0x00, 0x22, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_773[] = {
  0xdc, 0x80, 0x00, 0x00, 0x23, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_774[] = {
  0xdc, 0x80, 0x00, 0x00, 0x24, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_775[] = {
  0xdc, 0x80, 0x00, 0x00, 0x25, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_776[] = {
  0xdc, 0x80, 0x00, 0x00, 0x26, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_777[] = {
  0xdc, 0x80, 0x00, 0x00, 0x27, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_778[] = {
  0xdc, 0x80, 0x00, 0x00, 0x28, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_779[] = {
  0xdc, 0x80, 0x00, 0x00, 0x29, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_780[] = {
  0xdc, 0x80, 0x00, 0x00, 0x2a, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_781[] = {
  0xdc, 0x80, 0x00, 0x00, 0x2b, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_782[] = {
  0xdc, 0x80, 0x00, 0x00, 0x2c, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_783[] = {
  0xdc, 0x80, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_784[] = {
  0xdc, 0x80, 0x00, 0x00, 0x2e, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_785[] = {
  0xdc, 0x80, 0x00, 0x00, 0x2f, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_786[] = {
  0xdc, 0x80, 0x00, 0x00, 0x30, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_787[] = {
  0x18, 0x81, 0x00, 0x00, 0x31, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_788[] = {
  0xdc, 0x80, 0x00, 0x00, 0x32, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_789[] = {
  0x18, 0x81, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_790[] = {
  0xdc, 0x80, 0x00, 0x00, 0x34, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_791[] = {
  0xdc, 0x80, 0x00, 0x00, 0x35, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_792[] = {
  0x18, 0x81, 0x00, 0x00, 0x36, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_793[] = {
  0xdc, 0x80, 0x00, 0x00, 0x37, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_794[] = {
  0x18, 0x81, 0x00, 0x00, 0x38, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_795[] = {
  0xdc, 0x80, 0x00, 0x00, 0x39, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_796[] = {
  0xdc, 0x80, 0x00, 0x00, 0x3a, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_797[] = {
  0xdc, 0x80, 0x00, 0x00, 0x3b, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_798[] = {
  0xdc, 0x80, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_799[] = {
  0xdc, 0x80, 0x00, 0x00, 0x3d, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_800[] = {
  0xdc, 0x80, 0x00, 0x00, 0x3e, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_801[] = {
  0xdc, 0x80, 0x00, 0x00, 0x3f, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_802[] = {
  0xdc, 0x80, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_803[] = {
  0xdc, 0x80, 0x00, 0x00, 0x41, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_804[] = {
  0xdc, 0x80, 0x00, 0x00, 0x42, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_805[] = {
  0xdc, 0x80, 0x00, 0x00, 0x43, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_806[] = {
  0x28, 0x85, 0x00, 0x00, 0xd0, 0x9a, 0x00, 0x00, 
};

static const u8 data_segment_data_807[] = {
  0xba, 0x00, 0x00, 0x00, 0xe2, 0x07, 0x00, 0x00, 0x7a, 0x09, 0x00, 0x00, 
  0x80, 0x80, 0x00, 0x00, 0xf2, 0x0b, 0x00, 0x00, 0x90, 0x80, 0x00, 0x00, 
  0xea, 0x0b, 0x00, 0x00, 0xe0, 0x9a, 0x00, 0x00, 0x02, 0x0c, 0x00, 0x00, 
  0xe8, 0x9a, 0x00, 0x00, 0x52, 0x0c, 0x00, 0x00, 0xf0, 0x9a, 0x00, 0x00, 
  0xb2, 0x09, 0x00, 0x00, 0xf8, 0x9a, 0x00, 0x00, 0x42, 0x0b, 0x00, 0x00, 
  0x00, 0x9b, 0x00, 0x00, 0x4a, 0x0b, 0x00, 0x00, 0x08, 0x9b, 0x00, 0x00, 
  0x3a, 0x0d, 0x00, 0x00, 0x10, 0x9b, 0x00, 0x00, 0xfa, 0x07, 0x00, 0x00, 
  0x18, 0x9b, 0x00, 0x00, 0x1a, 0x0d, 0x00, 0x00, 0x20, 0x9b, 0x00, 0x00, 
  
};

static const u8 data_segment_data_808[] = {
  0x5c, 0x77, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 
  0x70, 0x9a, 0x00, 0x00, 
};

static const u8 data_segment_data_809[] = {
  0xdc, 0x80, 0x00, 0x00, 0x44, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_810[] = {
  0xdc, 0x80, 0x00, 0x00, 0x45, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_811[] = {
  0x18, 0x81, 0x00, 0x00, 0x46, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_812[] = {
  0xdc, 0x80, 0x00, 0x00, 0x47, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_813[] = {
  0xdc, 0x80, 0x00, 0x00, 0x48, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_814[] = {
  0xdc, 0x80, 0x00, 0x00, 0x49, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_815[] = {
  0xdc, 0x80, 0x00, 0x00, 0x4a, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_816[] = {
  0xdc, 0x80, 0x00, 0x00, 0x4b, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_817[] = {
  0xdc, 0x80, 0x00, 0x00, 0x4c, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_818[] = {
  0x28, 0x85, 0x00, 0x00, 0x58, 0x9b, 0x00, 0x00, 
};

static const u8 data_segment_data_819[] = {
  0xba, 0x00, 0x00, 0x00, 0x9a, 0x03, 0x00, 0x00, 0x42, 0x02, 0x00, 0x00, 
  0x10, 0x69, 0x00, 0x00, 0x22, 0x0c, 0x00, 0x00, 0x68, 0x9b, 0x00, 0x00, 
  0x12, 0x0b, 0x00, 0x00, 0x70, 0x9b, 0x00, 0x00, 0xaa, 0x0c, 0x00, 0x00, 
  0x78, 0x9b, 0x00, 0x00, 
};

static const u8 data_segment_data_820[] = {
  0x5c, 0x77, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 
  0x30, 0x9b, 0x00, 0x00, 
};

static const u8 data_segment_data_821[] = {
  0xa0, 0x80, 0x00, 0x00, 0x4d, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_822[] = {
  0xdc, 0x80, 0x00, 0x00, 0x4e, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_823[] = {
  0x18, 0x81, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_824[] = {
  0xdc, 0x80, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_825[] = {
  0x90, 0x81, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0x51, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_826[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x03, 0x00, 0x52, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_827[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x07, 0x00, 0x53, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_828[] = {
  0x28, 0x85, 0x00, 0x00, 0xf0, 0x9b, 0x00, 0x00, 
};

static const u8 data_segment_data_829[] = {
  0xba, 0x00, 0x00, 0x00, 0x52, 0x0e, 0x00, 0x00, 0xb2, 0x07, 0x00, 0x00, 
  0x80, 0x9b, 0x00, 0x00, 0xc2, 0x0b, 0x00, 0x00, 0x94, 0x9b, 0x00, 0x00, 
  0xca, 0x0b, 0x00, 0x00, 0xa0, 0x9b, 0x00, 0x00, 0x42, 0x0e, 0x00, 0x00, 
  0x88, 0x9b, 0x00, 0x00, 0x4a, 0x0e, 0x00, 0x00, 0x88, 0x9b, 0x00, 0x00, 
  
};

static const u8 data_segment_data_830[] = {
  0x5c, 0x77, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 
  0xc0, 0x9b, 0x00, 0x00, 
};

static const u8 data_segment_data_831[] = {
  0x90, 0x81, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_832[] = {
  0x90, 0x81, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0x55, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_833[] = {
  0x28, 0x85, 0x00, 0x00, 0x80, 0x9c, 0x00, 0x00, 
};

static const u8 data_segment_data_834[] = {
  0xba, 0x00, 0x00, 0x00, 0x52, 0x0d, 0x00, 0x00, 0xda, 0x0b, 0x00, 0x00, 
  0x6c, 0x14, 0x00, 0x00, 0x2a, 0x07, 0x00, 0x00, 0x7c, 0x14, 0x00, 0x00, 
  0x7a, 0x0e, 0x00, 0x00, 0x90, 0x9c, 0x00, 0x00, 0x82, 0x0e, 0x00, 0x00, 
  0xb0, 0x9c, 0x00, 0x00, 0xa2, 0x0a, 0x00, 0x00, 0xd0, 0x9c, 0x00, 0x00, 
  0xfa, 0x0b, 0x00, 0x00, 0xa0, 0x9c, 0x00, 0x00, 0xaa, 0x07, 0x00, 0x00, 
  0x6a, 0x03, 0x00, 0x00, 0x6a, 0x0b, 0x00, 0x00, 0xb4, 0x83, 0x00, 0x00, 
  0xaa, 0x09, 0x00, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x92, 0x0b, 0x00, 0x00, 
  0x40, 0x14, 0x00, 0x00, 0x0a, 0x0c, 0x00, 0x00, 0x0c, 0x9c, 0x00, 0x00, 
  
};

static const u8 data_segment_data_835[] = {
  0x5c, 0x77, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 
  0x20, 0x9c, 0x00, 0x00, 
};

static const u8 data_segment_data_836[] = {
  0x48, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 
  0x9f, 0x29, 0x00, 0x00, 
};

static const u8 data_segment_data_837[] = {
  0x48, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 
  0xb2, 0x35, 0x00, 0x00, 
};

static const u8 data_segment_data_838[] = {
  0x94, 0x8f, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 
  0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_839[] = {
  0x75, 0x01, 0x00, 0x00, 0xcf, 0x01, 0x00, 0x00, 0x73, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_840[] = {
  0x44, 0x6a, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x9a, 0x03, 0x00, 0x00, 
  0xe8, 0x9c, 0x00, 0x00, 0x0b, 0x04, 0x00, 0x00, 0xc4, 0x9c, 0x00, 0x00, 
  
};

static const u8 data_segment_data_841[] = {
  0x94, 0x8f, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 
  0x1b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_842[] = {
  0x0a, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x19, 0x4b, 0x26, 0x7c, 
  0x00, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_843[] = {
  0x28, 0x85, 0x00, 0x00, 0x48, 0x9d, 0x00, 0x00, 
};

static const u8 data_segment_data_844[] = {
  0xba, 0x00, 0x00, 0x00, 0x2a, 0x0e, 0x00, 0x00, 0x6a, 0x09, 0x00, 0x00, 
  0x58, 0x9d, 0x00, 0x00, 0x72, 0x09, 0x00, 0x00, 0x60, 0x9d, 0x00, 0x00, 
  0x32, 0x0b, 0x00, 0x00, 0x68, 0x9d, 0x00, 0x00, 0x3a, 0x0b, 0x00, 0x00, 
  0x70, 0x9d, 0x00, 0x00, 
};

static const u8 data_segment_data_845[] = {
  0x5c, 0x77, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 
  0x20, 0x9d, 0x00, 0x00, 
};

static const u8 data_segment_data_846[] = {
  0x18, 0x81, 0x00, 0x00, 0x57, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_847[] = {
  0xdc, 0x80, 0x00, 0x00, 0x58, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_848[] = {
  0xdc, 0x80, 0x00, 0x00, 0x59, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_849[] = {
  0xdc, 0x80, 0x00, 0x00, 0x5a, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_850[] = {
  0x28, 0x85, 0x00, 0x00, 0x90, 0x9e, 0x00, 0x00, 
};

static const u8 data_segment_data_851[] = {
  0x98, 0x2f, 0x8a, 0x42, 0x91, 0x44, 0x37, 0x71, 0xcf, 0xfb, 0xc0, 0xb5, 
  0xa5, 0xdb, 0xb5, 0xe9, 0x5b, 0xc2, 0x56, 0x39, 0xf1, 0x11, 0xf1, 0x59, 
  0xa4, 0x82, 0x3f, 0x92, 0xd5, 0x5e, 0x1c, 0xab, 0x98, 0xaa, 0x07, 0xd8, 
  0x01, 0x5b, 0x83, 0x12, 0xbe, 0x85, 0x31, 0x24, 0xc3, 0x7d, 0x0c, 0x55, 
  0x74, 0x5d, 0xbe, 0x72, 0xfe, 0xb1, 0xde, 0x80, 0xa7, 0x06, 0xdc, 0x9b, 
  0x74, 0xf1, 0x9b, 0xc1, 0xc1, 0x69, 0x9b, 0xe4, 0x86, 0x47, 0xbe, 0xef, 
  0xc6, 0x9d, 0xc1, 0x0f, 0xcc, 0xa1, 0x0c, 0x24, 0x6f, 0x2c, 0xe9, 0x2d, 
  0xaa, 0x84, 0x74, 0x4a, 0xdc, 0xa9, 0xb0, 0x5c, 0xda, 0x88, 0xf9, 0x76, 
  0x52, 0x51, 0x3e, 0x98, 0x6d, 0xc6, 0x31, 0xa8, 0xc8, 0x27, 0x03, 0xb0, 
  0xc7, 0x7f, 0x59, 0xbf, 0xf3, 0x0b, 0xe0, 0xc6, 0x47, 0x91, 0xa7, 0xd5, 
  0x51, 0x63, 0xca, 0x06, 0x67, 0x29, 0x29, 0x14, 0x85, 0x0a, 0xb7, 0x27, 
  0x38, 0x21, 0x1b, 0x2e, 0xfc, 0x6d, 0x2c, 0x4d, 0x13, 0x0d, 0x38, 0x53, 
  0x54, 0x73, 0x0a, 0x65, 0xbb, 0x0a, 0x6a, 0x76, 0x2e, 0xc9, 0xc2, 0x81, 
  0x85, 0x2c, 0x72, 0x92, 0xa1, 0xe8, 0xbf, 0xa2, 0x4b, 0x66, 0x1a, 0xa8, 
  0x70, 0x8b, 0x4b, 0xc2, 0xa3, 0x51, 0x6c, 0xc7, 0x19, 0xe8, 0x92, 0xd1, 
  0x24, 0x06, 0x99, 0xd6, 0x85, 0x35, 0x0e, 0xf4, 0x70, 0xa0, 0x6a, 0x10, 
  0x16, 0xc1, 0xa4, 0x19, 0x08, 0x6c, 0x37, 0x1e, 0x4c, 0x77, 0x48, 0x27, 
  0xb5, 0xbc, 0xb0, 0x34, 0xb3, 0x0c, 0x1c, 0x39, 0x4a, 0xaa, 0xd8, 0x4e, 
  0x4f, 0xca, 0x9c, 0x5b, 0xf3, 0x6f, 0x2e, 0x68, 0xee, 0x82, 0x8f, 0x74, 
  0x6f, 0x63, 0xa5, 0x78, 0x14, 0x78, 0xc8, 0x84, 0x08, 0x02, 0xc7, 0x8c, 
  0xfa, 0xff, 0xbe, 0x90, 0xeb, 0x6c, 0x50, 0xa4, 0xf7, 0xa3, 0xf9, 0xbe, 
  0xf2, 0x78, 0x71, 0xc6, 
};

static const u8 data_segment_data_852[] = {
  0xba, 0x00, 0x00, 0x00, 0x1a, 0x0e, 0x00, 0x00, 0x0a, 0x0d, 0x00, 0x00, 
  0xa0, 0x9e, 0x00, 0x00, 
};

static const u8 data_segment_data_853[] = {
  0x5c, 0x77, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0x80, 0x9e, 0x00, 0x00, 
};

static const u8 data_segment_data_854[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0xa1, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x5b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x9e, 0x00, 0x00, 
  
};

static const u8 data_segment_data_855[] = {
  0xfa, 0x04, 0x00, 0x00, 0x00, 0x9f, 0x00, 0x00, 0x52, 0x09, 0x00, 0x00, 
  0x08, 0x9f, 0x00, 0x00, 
};

static const u8 data_segment_data_856[] = {
  0x5c, 0x77, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0xe0, 0x9e, 0x00, 0x00, 
};

static const u8 data_segment_data_857[] = {
  0x18, 0x81, 0x00, 0x00, 0x5c, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_858[] = {
  0xdc, 0x80, 0x00, 0x00, 0x5d, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_859[] = {
  0x28, 0x85, 0x00, 0x00, 0x48, 0x9f, 0x00, 0x00, 
};

static const u8 data_segment_data_860[] = {
  0xba, 0x00, 0x00, 0x00, 0x0a, 0x0e, 0x00, 0x00, 0x92, 0x0a, 0x00, 0x00, 
  0x58, 0x9f, 0x00, 0x00, 0x32, 0x0e, 0x00, 0x00, 0x64, 0x9f, 0x00, 0x00, 
  0xe2, 0x06, 0x00, 0x00, 0x6c, 0x9f, 0x00, 0x00, 0x8a, 0x07, 0x00, 0x00, 
  0x74, 0x9f, 0x00, 0x00, 
};

static const u8 data_segment_data_861[] = {
  0x5c, 0x77, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 
  0x20, 0x9f, 0x00, 0x00, 
};

static const u8 data_segment_data_862[] = {
  0x90, 0x81, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00, 0x5e, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_863[] = {
  0xdc, 0x80, 0x00, 0x00, 0x5f, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_864[] = {
  0xdc, 0x80, 0x00, 0x00, 0x60, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_865[] = {
  0xdc, 0x80, 0x00, 0x00, 0x61, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_866[] = {
  0x48, 0x90, 0x00, 0x00, 0x0c, 0x00, 0x3c, 0x01, 0x62, 0x01, 0x00, 0x00, 
  0x63, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x01, 0x00, 0x00, 
  0x65, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x9f, 0x00, 0x00, 
  
};

static const u8 data_segment_data_867[] = {
  0xaa, 0x02, 0x00, 0x00, 0xe0, 0x9f, 0x00, 0x00, 0xe2, 0x04, 0x00, 0x00, 
  0xe8, 0x9f, 0x00, 0x00, 
};

static const u8 data_segment_data_868[] = {
  0x5c, 0x77, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0xc0, 0x9f, 0x00, 0x00, 
};

static const u8 data_segment_data_869[] = {
  0x0c, 0x91, 0x00, 0x00, 0xf4, 0x9f, 0x00, 0x00, 
};

static const u8 data_segment_data_870[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x03, 0x00, 0x66, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_871[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x05, 0x00, 0x67, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_872[] = {
  0x28, 0x85, 0x00, 0x00, 0x10, 0xa3, 0x00, 0x00, 
};

static const u8 data_segment_data_873[] = {
  0xba, 0x00, 0x00, 0x00, 0xd2, 0x07, 0x00, 0x00, 0x92, 0x0c, 0x00, 0x00, 
  0xd4, 0xa4, 0x00, 0x00, 0xa2, 0x0b, 0x00, 0x00, 0xdc, 0xa4, 0x00, 0x00, 
  0x32, 0x0c, 0x00, 0x00, 0x20, 0xa3, 0x00, 0x00, 0x72, 0x0c, 0x00, 0x00, 
  0xe4, 0xa4, 0x00, 0x00, 0x62, 0x0c, 0x00, 0x00, 0xec, 0xa4, 0x00, 0x00, 
  0x6a, 0x0c, 0x00, 0x00, 0xf4, 0xa4, 0x00, 0x00, 0x7a, 0x0a, 0x00, 0x00, 
  0xfc, 0xa4, 0x00, 0x00, 0xba, 0x0a, 0x00, 0x00, 0x04, 0xa5, 0x00, 0x00, 
  0xca, 0x0c, 0x00, 0x00, 0x28, 0xa3, 0x00, 0x00, 0xd2, 0x0c, 0x00, 0x00, 
  0x0c, 0xa5, 0x00, 0x00, 0xba, 0x0c, 0x00, 0x00, 0x34, 0xa3, 0x00, 0x00, 
  0xc2, 0x0c, 0x00, 0x00, 0x14, 0xa5, 0x00, 0x00, 0xba, 0x0c, 0x00, 0x00, 
  0x34, 0xa3, 0x00, 0x00, 0x1a, 0x0c, 0x00, 0x00, 0x40, 0xa3, 0x00, 0x00, 
  0x0a, 0x08, 0x00, 0x00, 0x48, 0xa3, 0x00, 0x00, 0x3a, 0x0a, 0x00, 0x00, 
  0x50, 0xa3, 0x00, 0x00, 0x12, 0x07, 0x00, 0x00, 0x58, 0xa3, 0x00, 0x00, 
  0x02, 0x07, 0x00, 0x00, 0x64, 0xa3, 0x00, 0x00, 0x1a, 0x07, 0x00, 0x00, 
  0x1c, 0xa5, 0x00, 0x00, 0x0a, 0x07, 0x00, 0x00, 0x24, 0xa5, 0x00, 0x00, 
  0xea, 0x0d, 0x00, 0x00, 0x70, 0xa3, 0x00, 0x00, 0xca, 0x0d, 0x00, 0x00, 
  0x2c, 0xa5, 0x00, 0x00, 0xd2, 0x0d, 0x00, 0x00, 0x34, 0xa5, 0x00, 0x00, 
  0xf2, 0x0d, 0x00, 0x00, 0x7c, 0xa3, 0x00, 0x00, 0xda, 0x0d, 0x00, 0x00, 
  0x3c, 0xa5, 0x00, 0x00, 0xe2, 0x0d, 0x00, 0x00, 0x44, 0xa5, 0x00, 0x00, 
  0x62, 0x07, 0x00, 0x00, 0x4c, 0xa5, 0x00, 0x00, 0x5a, 0x07, 0x00, 0x00, 
  0x54, 0xa5, 0x00, 0x00, 0x6a, 0x07, 0x00, 0x00, 0x5c, 0xa5, 0x00, 0x00, 
  0x52, 0x07, 0x00, 0x00, 0x64, 0xa5, 0x00, 0x00, 0x4a, 0x07, 0x00, 0x00, 
  0x6c, 0xa5, 0x00, 0x00, 0x0a, 0x0d, 0x00, 0x00, 0x74, 0xa5, 0x00, 0x00, 
  0x02, 0x0d, 0x00, 0x00, 0x7c, 0xa5, 0x00, 0x00, 0x12, 0x0d, 0x00, 0x00, 
  0x84, 0xa5, 0x00, 0x00, 0x82, 0x0c, 0x00, 0x00, 0x8c, 0xa5, 0x00, 0x00, 
  0x4a, 0x0c, 0x00, 0x00, 0x94, 0xa5, 0x00, 0x00, 0xea, 0x08, 0x00, 0x00, 
  0x88, 0xa3, 0x00, 0x00, 0xfa, 0x08, 0x00, 0x00, 0x9c, 0xa5, 0x00, 0x00, 
  0xda, 0x08, 0x00, 0x00, 0xa4, 0xa5, 0x00, 0x00, 0x42, 0x08, 0x00, 0x00, 
  0xac, 0xa5, 0x00, 0x00, 0xba, 0x08, 0x00, 0x00, 0xb4, 0xa5, 0x00, 0x00, 
  0xca, 0x08, 0x00, 0x00, 0xbc, 0xa5, 0x00, 0x00, 0x32, 0x08, 0x00, 0x00, 
  0x94, 0xa3, 0x00, 0x00, 0xaa, 0x08, 0x00, 0x00, 0xa0, 0xa3, 0x00, 0x00, 
  0x0a, 0x09, 0x00, 0x00, 0xac, 0xa3, 0x00, 0x00, 0x32, 0x08, 0x00, 0x00, 
  0x94, 0xa3, 0x00, 0x00, 0x22, 0x08, 0x00, 0x00, 0xb8, 0xa3, 0x00, 0x00, 
  0xe2, 0x08, 0x00, 0x00, 0xc4, 0xa3, 0x00, 0x00, 0xf2, 0x08, 0x00, 0x00, 
  0xc4, 0xa5, 0x00, 0x00, 0xd2, 0x08, 0x00, 0x00, 0xcc, 0xa5, 0x00, 0x00, 
  0x3a, 0x08, 0x00, 0x00, 0xd4, 0xa5, 0x00, 0x00, 0xb2, 0x08, 0x00, 0x00, 
  0xdc, 0xa5, 0x00, 0x00, 0xc2, 0x08, 0x00, 0x00, 0xe4, 0xa5, 0x00, 0x00, 
  0x2a, 0x08, 0x00, 0x00, 0xd0, 0xa3, 0x00, 0x00, 0xa2, 0x08, 0x00, 0x00, 
  0xdc, 0xa3, 0x00, 0x00, 0x02, 0x09, 0x00, 0x00, 0xe8, 0xa3, 0x00, 0x00, 
  0x2a, 0x08, 0x00, 0x00, 0xd0, 0xa3, 0x00, 0x00, 0x1a, 0x08, 0x00, 0x00, 
  0xf4, 0xa3, 0x00, 0x00, 0x4a, 0x08, 0x00, 0x00, 0xec, 0xa5, 0x00, 0x00, 
  0xba, 0x07, 0x00, 0x00, 0xf4, 0xa5, 0x00, 0x00, 0x4a, 0x0a, 0x00, 0x00, 
  0xfc, 0xa5, 0x00, 0x00, 0x8a, 0x08, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 
  0x92, 0x08, 0x00, 0x00, 0x0c, 0xa4, 0x00, 0x00, 0x82, 0x08, 0x00, 0x00, 
  0x24, 0xa6, 0x00, 0x00, 0x72, 0x08, 0x00, 0x00, 0x2c, 0xa6, 0x00, 0x00, 
  0x7a, 0x08, 0x00, 0x00, 0x34, 0xa6, 0x00, 0x00, 0x5a, 0x08, 0x00, 0x00, 
  0x18, 0xa4, 0x00, 0x00, 0x62, 0x08, 0x00, 0x00, 0x24, 0xa4, 0x00, 0x00, 
  0x6a, 0x08, 0x00, 0x00, 0x30, 0xa4, 0x00, 0x00, 0x9a, 0x08, 0x00, 0x00, 
  0x3c, 0xa4, 0x00, 0x00, 0x52, 0x08, 0x00, 0x00, 0x48, 0xa4, 0x00, 0x00, 
  0x62, 0x0a, 0x00, 0x00, 0x3c, 0xa6, 0x00, 0x00, 0xf2, 0x0c, 0x00, 0x00, 
  0x54, 0xa4, 0x00, 0x00, 0xea, 0x0c, 0x00, 0x00, 0x44, 0xa6, 0x00, 0x00, 
  0xc2, 0x0a, 0x00, 0x00, 0x4c, 0xa6, 0x00, 0x00, 0xe2, 0x0c, 0x00, 0x00, 
  0x54, 0xa6, 0x00, 0x00, 0xda, 0x0c, 0x00, 0x00, 0x5c, 0xa6, 0x00, 0x00, 
  0x42, 0x0a, 0x00, 0x00, 0x60, 0xa4, 0x00, 0x00, 0x6a, 0x0e, 0x00, 0x00, 
  0x64, 0xa6, 0x00, 0x00, 0x72, 0x0e, 0x00, 0x00, 0x6c, 0xa6, 0x00, 0x00, 
  0x12, 0x08, 0x00, 0x00, 0x68, 0xa4, 0x00, 0x00, 0x3a, 0x0c, 0x00, 0x00, 
  0x70, 0xa4, 0x00, 0x00, 0x6a, 0x0d, 0x00, 0x00, 0x78, 0xa4, 0x00, 0x00, 
  0x72, 0x0d, 0x00, 0x00, 0x80, 0xa4, 0x00, 0x00, 0xba, 0x09, 0x00, 0x00, 
  0x88, 0xa4, 0x00, 0x00, 0x32, 0x0a, 0x00, 0x00, 0x74, 0xa6, 0x00, 0x00, 
  0x52, 0x0a, 0x00, 0x00, 0x7c, 0xa6, 0x00, 0x00, 0xa2, 0x0d, 0x00, 0x00, 
  0x84, 0xa6, 0x00, 0x00, 0xaa, 0x0d, 0x00, 0x00, 0x90, 0xa4, 0x00, 0x00, 
  0xc2, 0x0d, 0x00, 0x00, 0x9c, 0xa4, 0x00, 0x00, 0xb2, 0x0d, 0x00, 0x00, 
  0xa8, 0xa4, 0x00, 0x00, 0xba, 0x0d, 0x00, 0x00, 0xb4, 0xa4, 0x00, 0x00, 
  0x9a, 0x0d, 0x00, 0x00, 0xc0, 0xa4, 0x00, 0x00, 0x5a, 0x0a, 0x00, 0x00, 
  0xcc, 0xa4, 0x00, 0x00, 0x82, 0x09, 0x00, 0x00, 0x8c, 0xa6, 0x00, 0x00, 
  
};

static const u8 data_segment_data_874[] = {
  0x5c, 0x77, 0x00, 0x00, 0x07, 0x03, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 
  0x10, 0xa0, 0x00, 0x00, 
};

static const u8 data_segment_data_875[] = {
  0xa0, 0x80, 0x00, 0x00, 0x68, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_876[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x69, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_877[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x07, 0x00, 0x6a, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_878[] = {
  0xa0, 0x80, 0x00, 0x00, 0x6b, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_879[] = {
  0xa0, 0x80, 0x00, 0x00, 0x6c, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_880[] = {
  0xa0, 0x80, 0x00, 0x00, 0x6d, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_881[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x6e, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_882[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x07, 0x00, 0x6f, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_883[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x0d, 0x00, 0x70, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_884[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x71, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_885[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x72, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_886[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x73, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_887[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x74, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_888[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x75, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_889[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x07, 0x00, 0x76, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_890[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x77, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_891[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x78, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_892[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x79, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_893[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x7a, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_894[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x07, 0x00, 0x7b, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_895[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x0d, 0x00, 0x7c, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_896[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x7d, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_897[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x7e, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_898[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x7f, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_899[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x80, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_900[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x81, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_901[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x82, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_902[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x83, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_903[] = {
  0xa0, 0x80, 0x00, 0x00, 0x84, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_904[] = {
  0xa0, 0x80, 0x00, 0x00, 0x85, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_905[] = {
  0xa0, 0x80, 0x00, 0x00, 0x86, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_906[] = {
  0xa0, 0x80, 0x00, 0x00, 0x87, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_907[] = {
  0xa0, 0x80, 0x00, 0x00, 0x88, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_908[] = {
  0xa0, 0x80, 0x00, 0x00, 0x89, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_909[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x09, 0x00, 0x8a, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_910[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x8b, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_911[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x07, 0x00, 0x8c, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_912[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x07, 0x00, 0x8d, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_913[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x0b, 0x00, 0x8e, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_914[] = {
  0xa0, 0x80, 0x00, 0x00, 0x8f, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_915[] = {
  0xdc, 0x80, 0x00, 0x00, 0x90, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_916[] = {
  0xdc, 0x80, 0x00, 0x00, 0x91, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_917[] = {
  0xdc, 0x80, 0x00, 0x00, 0x92, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_918[] = {
  0xdc, 0x80, 0x00, 0x00, 0x93, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_919[] = {
  0x18, 0x81, 0x00, 0x00, 0x94, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_920[] = {
  0xdc, 0x80, 0x00, 0x00, 0x95, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_921[] = {
  0xdc, 0x80, 0x00, 0x00, 0x96, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_922[] = {
  0xdc, 0x80, 0x00, 0x00, 0x97, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_923[] = {
  0xdc, 0x80, 0x00, 0x00, 0x98, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_924[] = {
  0xdc, 0x80, 0x00, 0x00, 0x99, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_925[] = {
  0xdc, 0x80, 0x00, 0x00, 0x9a, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_926[] = {
  0x18, 0x81, 0x00, 0x00, 0x9b, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_927[] = {
  0x18, 0x81, 0x00, 0x00, 0x9c, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_928[] = {
  0xdc, 0x80, 0x00, 0x00, 0x9d, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_929[] = {
  0xdc, 0x80, 0x00, 0x00, 0x9e, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_930[] = {
  0x18, 0x81, 0x00, 0x00, 0x9f, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_931[] = {
  0x18, 0x81, 0x00, 0x00, 0xa0, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_932[] = {
  0x18, 0x81, 0x00, 0x00, 0xa1, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_933[] = {
  0x18, 0x81, 0x00, 0x00, 0xa2, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_934[] = {
  0x54, 0x81, 0x00, 0x00, 0xa3, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_935[] = {
  0xdc, 0x80, 0x00, 0x00, 0xa4, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_936[] = {
  0xdc, 0x80, 0x00, 0x00, 0xa5, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_937[] = {
  0xdc, 0x80, 0x00, 0x00, 0xa6, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_938[] = {
  0xdc, 0x80, 0x00, 0x00, 0xa7, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_939[] = {
  0x18, 0x81, 0x00, 0x00, 0xa8, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_940[] = {
  0x54, 0x81, 0x00, 0x00, 0xa9, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_941[] = {
  0xdc, 0x80, 0x00, 0x00, 0xaa, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_942[] = {
  0xdc, 0x80, 0x00, 0x00, 0xab, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_943[] = {
  0xdc, 0x80, 0x00, 0x00, 0xac, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_944[] = {
  0xdc, 0x80, 0x00, 0x00, 0xad, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_945[] = {
  0x54, 0x81, 0x00, 0x00, 0xae, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_946[] = {
  0xdc, 0x80, 0x00, 0x00, 0xaf, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_947[] = {
  0xdc, 0x80, 0x00, 0x00, 0xb0, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_948[] = {
  0xdc, 0x80, 0x00, 0x00, 0xb1, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_949[] = {
  0xdc, 0x80, 0x00, 0x00, 0xb2, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_950[] = {
  0x54, 0x81, 0x00, 0x00, 0xb3, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_951[] = {
  0x18, 0x81, 0x00, 0x00, 0xb4, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_952[] = {
  0xdc, 0x80, 0x00, 0x00, 0xb5, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_953[] = {
  0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 
  0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_954[] = {
  0x18, 0x81, 0x00, 0x00, 0xb6, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_955[] = {
  0x18, 0x81, 0x00, 0x00, 0xb7, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_956[] = {
  0x18, 0x81, 0x00, 0x00, 0xb8, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_957[] = {
  0xdc, 0x80, 0x00, 0x00, 0xb9, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_958[] = {
  0xdc, 0x80, 0x00, 0x00, 0xba, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_959[] = {
  0xdc, 0x80, 0x00, 0x00, 0xbb, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_960[] = {
  0x18, 0x81, 0x00, 0x00, 0xbc, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_961[] = {
  0xdc, 0x80, 0x00, 0x00, 0xbd, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_962[] = {
  0x18, 0x81, 0x00, 0x00, 0xbe, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_963[] = {
  0x18, 0x81, 0x00, 0x00, 0xbf, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_964[] = {
  0x18, 0x81, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_965[] = {
  0xdc, 0x80, 0x00, 0x00, 0xc1, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_966[] = {
  0x54, 0x81, 0x00, 0x00, 0xc2, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_967[] = {
  0xdc, 0x80, 0x00, 0x00, 0xc3, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_968[] = {
  0x48, 0x90, 0x00, 0x00, 0x00, 0x00, 0x75, 0x01, 0xc4, 0x01, 0x00, 0x00, 
  0xc5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0x01, 0x00, 0x00, 
  0xc7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xa6, 0x00, 0x00, 
  
};

static const u8 data_segment_data_969[] = {
  0xaa, 0x02, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0xe2, 0x04, 0x00, 0x00, 
  0x08, 0xa7, 0x00, 0x00, 0x8a, 0x0d, 0x00, 0x00, 0x14, 0xa7, 0x00, 0x00, 
  0x92, 0x0d, 0x00, 0x00, 0x20, 0xa7, 0x00, 0x00, 
};

static const u8 data_segment_data_970[] = {
  0x5c, 0x77, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
  0xd0, 0xa6, 0x00, 0x00, 
};

static const u8 data_segment_data_971[] = {
  0x0c, 0x91, 0x00, 0x00, 0x2c, 0xa7, 0x00, 0x00, 
};

static const u8 data_segment_data_972[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x03, 0x00, 0xc8, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_973[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x03, 0x00, 0xc9, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_974[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x03, 0x00, 0xca, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_975[] = {
  0x90, 0x81, 0x00, 0x00, 0xfe, 0xff, 0x05, 0x00, 0xcb, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_976[] = {
  0x90, 0x81, 0x00, 0x00, 0xff, 0xff, 0x03, 0x00, 0xd1, 0x01, 0x00, 0x00, 
  
};

static const u8 data_segment_data_977[] = {
  0xa0, 0x80, 0x00, 0x00, 0xd2, 0x01, 0x00, 0x00, 
};

static const u8 data_segment_data_978[] = {
  0x28, 0x85, 0x00, 0x00, 0x70, 0xa7, 0x00, 0x00, 
};

static const u8 data_segment_data_979[] = {
  0xba, 0x00, 0x00, 0x00, 0x62, 0x0e, 0x00, 0x00, 0x82, 0x0d, 0x00, 0x00, 
  0x44, 0xa7, 0x00, 0x00, 
};

static const u8 data_segment_data_980[] = {
  0x5c, 0x77, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0x60, 0xa7, 0x00, 0x00, 
};

static const u8 data_segment_data_981[] = {
  0x18, 0x60, 0x00, 0x00, 0xd1, 0x01, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 
  0x3b, 0x00, 0x00, 0x00, 0x22, 0x2b, 0x00, 0x00, 0x6c, 0x2e, 0x00, 0x00, 
  0x10, 0x31, 0x00, 0x00, 0x45, 0x33, 0x00, 0x00, 0x09, 0x35, 0x00, 0x00, 
  0x48, 0x36, 0x00, 0x00, 0xac, 0x37, 0x00, 0x00, 0xb5, 0x38, 0x00, 0x00, 
  0x87, 0x39, 0x00, 0x00, 0x3b, 0x3a, 0x00, 0x00, 0xbf, 0x3a, 0x00, 0x00, 
  0x42, 0x3b, 0x00, 0x00, 0x43, 0x3c, 0x00, 0x00, 0xf2, 0x3c, 0x00, 0x00, 
  0xd5, 0x3d, 0x00, 0x00, 0x63, 0x3e, 0x00, 0x00, 0xf3, 0x3e, 0x00, 0x00, 
  0x59, 0x3f, 0x00, 0x00, 0xbb, 0x3f, 0x00, 0x00, 0x24, 0x40, 0x00, 0x00, 
  0xc2, 0x40, 0x00, 0x00, 0x06, 0x41, 0x00, 0x00, 0x8a, 0x41, 0x00, 0x00, 
  0x1e, 0x42, 0x00, 0x00, 0x7b, 0x42, 0x00, 0x00, 0x12, 0x43, 0x00, 0x00, 
  0x62, 0x43, 0x00, 0x00, 0xe0, 0x43, 0x00, 0x00, 0x49, 0x44, 0x00, 0x00, 
  0x6d, 0x44, 0x00, 0x00, 0xd2, 0x44, 0x00, 0x00, 0x0d, 0x45, 0x00, 0x00, 
  0x6a, 0x45, 0x00, 0x00, 0xcb, 0x45, 0x00, 0x00, 0x48, 0x46, 0x00, 0x00, 
  0x9d, 0x46, 0x00, 0x00, 0xd3, 0x46, 0x00, 0x00, 0x43, 0x47, 0x00, 0x00, 
  0xc4, 0x47, 0x00, 0x00, 0xff, 0x47, 0x00, 0x00, 0x37, 0x48, 0x00, 0x00, 
  0x6f, 0x48, 0x00, 0x00, 0xb7, 0x48, 0x00, 0x00, 0x24, 0x49, 0x00, 0x00, 
  0x6f, 0x49, 0x00, 0x00, 0xfa, 0x49, 0x00, 0x00, 0x3f, 0x4a, 0x00, 0x00, 
  0xb5, 0x4a, 0x00, 0x00, 0xdb, 0x4a, 0x00, 0x00, 0x09, 0x4b, 0x00, 0x00, 
  0x24, 0x4b, 0x00, 0x00, 0x3a, 0x4b, 0x00, 0x00, 0x4e, 0x4b, 0x00, 0x00, 
  0x61, 0x4b, 0x00, 0x00, 0x8e, 0x4b, 0x00, 0x00, 0xa7, 0x4b, 0x00, 0x00, 
  0xc8, 0x4b, 0x00, 0x00, 0xd5, 0x4b, 0x00, 0x00, 0xe8, 0x4b, 0x00, 0x00, 
  
};

static const u8 data_segment_data_982[] = {
  0x18, 0x2a, 0x07, 0x00, 0xd1, 0x01, 0x28, 0x28, 0x4a, 0x24, 0x24, 0x24, 
  0x24, 0x44, 0x24, 0x44, 0x8e, 0x42, 0x6e, 0x20, 0x6e, 0x20, 0x00, 0x80, 
  0x51, 0x1b, 0xd2, 0x01, 0x16, 0xd2, 0x01, 0x80, 0x51, 0x1b, 0xd3, 0x01, 
  0x16, 0xd3, 0x01, 0x80, 0x10, 0x05, 0x00, 0x2a, 0x01, 0x1b, 0xfa, 0x00, 
  0x69, 0x80, 0x16, 0xd4, 0x01, 0x81, 0x16, 0xd5, 0x01, 0x82, 0x16, 0xd6, 
  0x01, 0x83, 0x16, 0xd7, 0x01, 0x84, 0x16, 0xd8, 0x01, 0x80, 0x16, 0xd9, 
  0x01, 0x81, 0x16, 0xda, 0x01, 0x54, 0x32, 0x00, 0x10, 0xdb, 0x01, 0x11, 
  0x75, 0x00, 0x34, 0x03, 0x16, 0xdb, 0x01, 0x54, 0x32, 0x01, 0x10, 0xdc, 
  0x01, 0x11, 0xdb, 0x01, 0x34, 0x03, 0x16, 0xdc, 0x01, 0x54, 0x32, 0x02, 
  0x10, 0xdd, 0x01, 0x11, 0xdb, 0x01, 0x34, 0x03, 0x16, 0xdd, 0x01, 0x54, 
  0x32, 0x03, 0x10, 0xde, 0x01, 0x34, 0x02, 0x16, 0xde, 0x01, 0x51, 0x63, 
  
};

static const u8 data_segment_data_983[] = {
  0xb8, 0xaa, 0x00, 0x00, 0x40, 0xae, 0x00, 0x00, 0xb0, 0xae, 0x00, 0x00, 
  0xf0, 0xaf, 0x00, 0x00, 
};

static const u8 data_segment_data_984[] = {
  0x02, 0x00, 0x00, 0x00, 0x80, 0xa8, 0x00, 0x00, 0x10, 0xa9, 0x00, 0x00, 
  
};

static const u8 data_segment_data_985[] = {
  0x00, 0x0c, 0x07, 0x00, 0x00, 0x02, 0x65, 0x00, 0x32, 0x00, 0x16, 0x93, 
  0x01, 0x32, 0x01, 0x16, 0x01, 0x02, 0x51, 0x63, 
};

static const u8 data_segment_data_986[] = {
  0xc8, 0xb6, 0x00, 0x00, 0x14, 0xb7, 0x00, 0x00, 
};

static const u8 data_segment_data_987[] = {
  0x02, 0x00, 0x00, 0x00, 0x30, 0xa9, 0x00, 0x00, 0x44, 0xa9, 0x00, 0x00, 
  
};

static const u8 data_segment_data_988[] = {
  0x00, 0x0c, 0x07, 0x00, 0x06, 0x02, 0x65, 0x00, 0x32, 0x00, 0x16, 0x93, 
  0x01, 0x32, 0x01, 0x16, 0x01, 0x02, 0x51, 0x63, 
};

static const u8 data_segment_data_989[] = {
  0x38, 0xb7, 0x00, 0x00, 0x84, 0xb7, 0x00, 0x00, 
};

static const u8 data_segment_data_990[] = {
  0x02, 0x00, 0x00, 0x00, 0x60, 0xa9, 0x00, 0x00, 0x74, 0xa9, 0x00, 0x00, 
  
};

static const u8 data_segment_data_991[] = {
  0x08, 0x18, 0x07, 0x00, 0x08, 0x02, 0x28, 0x28, 0x28, 0x28, 0x28, 0x48, 
  0x45, 0x00, 0x80, 0x51, 0x1b, 0x09, 0x02, 0x16, 0x09, 0x02, 0x80, 0x51, 
  0x1b, 0xfa, 0x00, 0x16, 0xfa, 0x00, 0x80, 0x51, 0x1b, 0xd3, 0x01, 0x16, 
  0xd3, 0x01, 0x80, 0x51, 0x1b, 0x0a, 0x02, 0x16, 0x0a, 0x02, 0x80, 0x51, 
  0x1b, 0x0b, 0x02, 0x16, 0x0b, 0x02, 0x80, 0x51, 0x1b, 0xc4, 0x01, 0x16, 
  0xc4, 0x01, 0x32, 0x01, 0x16, 0x93, 0x01, 0x11, 0x7b, 0x00, 0x23, 0x00, 
  0x34, 0x01, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_992[] = {
  0x90, 0xb7, 0x00, 0x00, 0xb8, 0xb7, 0x00, 0x00, 
};

static const u8 data_segment_data_993[] = {
  0x02, 0x00, 0x00, 0x00, 0x90, 0xa9, 0x00, 0x00, 0xe0, 0xa9, 0x00, 0x00, 
  
};

static const u8 data_segment_data_994[] = {
  0x64, 0x62, 0x2e, 0x70, 0x79, 0x00, 0x66, 0x6f, 0x6f, 0x2e, 0x70, 0x79, 
  0x00, 0x62, 0x61, 0x72, 0x2e, 0x70, 0x79, 0x00, 0x5f, 0x69, 0x6e, 0x69, 
  0x74, 0x2e, 0x70, 0x79, 0x00, 0x00, 0x00, 
};

static const u8 data_segment_data_995[] = {
  0x20, 0xa9, 0x00, 0x00, 0x4c, 0xa9, 0x00, 0x00, 0x7c, 0xa9, 0x00, 0x00, 
  0xe8, 0xa9, 0x00, 0x00, 
};

static const u8 data_segment_data_996[] = {
  0x00, 0x2a, 0xdb, 0x01, 0xd1, 0x01, 0x8c, 0x0e, 0x85, 0x18, 0x65, 0x65, 
  0x60, 0x65, 0x65, 0x65, 0x60, 0x85, 0x08, 0x65, 0x60, 0x65, 0x00, 0x11, 
  0x17, 0x00, 0x16, 0x16, 0x00, 0x10, 0xdb, 0x01, 0x16, 0x1a, 0x00, 0x32, 
  0x00, 0x16, 0x11, 0x00, 0x32, 0x01, 0x16, 0x53, 0x00, 0x32, 0x02, 0x16, 
  0x56, 0x00, 0x32, 0x03, 0x16, 0xdf, 0x01, 0x32, 0x04, 0x16, 0xe0, 0x01, 
  0x32, 0x05, 0x16, 0x66, 0x01, 0x32, 0x06, 0x16, 0xe1, 0x01, 0x32, 0x07, 
  0x16, 0x80, 0x00, 0x32, 0x08, 0x16, 0x14, 0x00, 0x32, 0x09, 0x16, 0xe2, 
  0x01, 0x51, 0x63, 
};

static const u8 data_segment_data_997[] = {
  0x98, 0xab, 0x00, 0x00, 0xd8, 0xab, 0x00, 0x00, 0x24, 0xac, 0x00, 0x00, 
  0x58, 0xac, 0x00, 0x00, 0x98, 0xac, 0x00, 0x00, 0xdc, 0xac, 0x00, 0x00, 
  0x58, 0xad, 0x00, 0x00, 0xac, 0xad, 0x00, 0x00, 0xe0, 0xad, 0x00, 0x00, 
  0x0c, 0xae, 0x00, 0x00, 
};

static const u8 data_segment_data_998[] = {
  0x02, 0x00, 0x00, 0x00, 0x30, 0xaa, 0x00, 0x00, 0x90, 0xaa, 0x00, 0x00, 
  
};

static const u8 data_segment_data_999[] = {
  0xba, 0x04, 0x34, 0x11, 0x00, 0xd1, 0x01, 0x80, 0x0f, 0x25, 0x25, 0x25, 
  0x25, 0x45, 0x28, 0x27, 0x27, 0x27, 0x27, 0x27, 0x27, 0x4a, 0x27, 0x27, 
  0x27, 0x27, 0x27, 0x27, 0x00, 0xb2, 0xb0, 0x18, 0xe3, 0x01, 0xb3, 0xb0, 
  0x18, 0xe4, 0x01, 0xb4, 0xb0, 0x18, 0xe5, 0x01, 0xb5, 0xb0, 0x18, 0xe6, 
  0x01, 0xb1, 0xb0, 0x18, 0xe7, 0x01, 0xb1, 0x12, 0xd9, 0x01, 0xd9, 0x44, 
  0x34, 0x80, 0x12, 0x06, 0x01, 0xb0, 0x18, 0xe8, 0x01, 0x12, 0x08, 0x01, 
  0xb0, 0x18, 0xe9, 0x01, 0x12, 0x1d, 0x01, 0xb0, 0x18, 0xea, 0x01, 0x12, 
  0x1f, 0x01, 0xb0, 0x18, 0xeb, 0x01, 0x12, 0x1b, 0x01, 0xb0, 0x18, 0xec, 
  0x01, 0x12, 0x15, 0x01, 0xb0, 0x18, 0xed, 0x01, 0x12, 0x21, 0x01, 0xb0, 
  0x18, 0xee, 0x01, 0x42, 0x31, 0x80, 0x12, 0x05, 0x01, 0xb0, 0x18, 0xe8, 
  0x01, 0x12, 0x07, 0x01, 0xb0, 0x18, 0xe9, 0x01, 0x12, 0x1c, 0x01, 0xb0, 
  0x18, 0xea, 0x01, 0x12, 0x1e, 0x01, 0xb0, 0x18, 0xeb, 0x01, 0x12, 0x1a, 
  0x01, 0xb0, 0x18, 0xec, 0x01, 0x12, 0x14, 0x01, 0xb0, 0x18, 0xed, 0x01, 
  0x12, 0x20, 0x01, 0xb0, 0x18, 0xee, 0x01, 0x51, 0x63, 
};

static const u8 data_segment_data_1000[] = {
  0x4a, 0x04, 0x00, 0x00, 0x3a, 0x0f, 0x00, 0x00, 0x1a, 0x0f, 0x00, 0x00, 
  0x22, 0x0f, 0x00, 0x00, 0x2a, 0x0f, 0x00, 0x00, 0x32, 0x0f, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1001[] = {
  0x02, 0x18, 0x00, 0x00, 0xd0, 0xaa, 0x00, 0x00, 0x80, 0xab, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1002[] = {
  0x3a, 0x0e, 0x53, 0x00, 0xd1, 0x01, 0x80, 0x27, 0x00, 0xb0, 0x14, 0xe8, 
  0x01, 0xb0, 0x13, 0xe3, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 
  0x01, 0xb1, 0x36, 0x04, 0x63, 
};

static const u8 data_segment_data_1003[] = {
  0x4a, 0x04, 0x00, 0x00, 0x7a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1004[] = {
  0x02, 0x08, 0x00, 0x00, 0xb0, 0xab, 0x00, 0x00, 0xd0, 0xab, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1005[] = {
  0x2a, 0x14, 0x56, 0x00, 0xd1, 0x01, 0x80, 0x2a, 0x26, 0x24, 0x28, 0x00, 
  0xb1, 0x80, 0xd7, 0x44, 0x04, 0x80, 0x12, 0x28, 0x00, 0x65, 0xb0, 0x14, 
  0xe9, 0x01, 0xb1, 0x36, 0x01, 0xc2, 0xb0, 0x13, 0xe6, 0x01, 0x14, 0xc8, 
  0x01, 0xb2, 0x36, 0x01, 0x63, 
};

static const u8 data_segment_data_1006[] = {
  0x4a, 0x04, 0x00, 0x00, 0x82, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1007[] = {
  0x02, 0x08, 0x00, 0x00, 0xf0, 0xab, 0x00, 0x00, 0x1c, 0xac, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1008[] = {
  0x3a, 0x0e, 0xdf, 0x01, 0xd1, 0x01, 0x80, 0x30, 0x00, 0xb0, 0x14, 0xee, 
  0x01, 0xb0, 0x13, 0xe3, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 
  0x01, 0xb1, 0x36, 0x04, 0x63, 
};

static const u8 data_segment_data_1009[] = {
  0x4a, 0x04, 0x00, 0x00, 0x8a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1010[] = {
  0x02, 0x08, 0x00, 0x00, 0x30, 0xac, 0x00, 0x00, 0x50, 0xac, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1011[] = {
  0x3a, 0x0e, 0xe0, 0x01, 0xd1, 0x01, 0x80, 0x33, 0x00, 0xb0, 0x14, 0xed, 
  0x01, 0xb0, 0x13, 0xe3, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 
  0x01, 0xb1, 0x36, 0x04, 0x63, 
};

static const u8 data_segment_data_1012[] = {
  0x4a, 0x04, 0x00, 0x00, 0x8a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1013[] = {
  0x02, 0x08, 0x00, 0x00, 0x70, 0xac, 0x00, 0x00, 0x90, 0xac, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1014[] = {
  0x2a, 0x14, 0x66, 0x01, 0xd1, 0x01, 0x80, 0x36, 0x28, 0x26, 0x22, 0x00, 
  0xb0, 0x14, 0x53, 0x00, 0xb1, 0x36, 0x01, 0xc2, 0xb2, 0x80, 0xd7, 0x44, 
  0x02, 0x80, 0x51, 0x63, 0xb0, 0x14, 0x56, 0x00, 0xb2, 0x36, 0x01, 0x63, 
  
};

static const u8 data_segment_data_1015[] = {
  0x4a, 0x04, 0x00, 0x00, 0x7a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1016[] = {
  0x02, 0x08, 0x00, 0x00, 0xb0, 0xac, 0x00, 0x00, 0xd4, 0xac, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1017[] = {
  0x5a, 0x16, 0xe1, 0x01, 0xd1, 0x01, 0x80, 0x3c, 0x27, 0x34, 0x26, 0x5d, 
  0x00, 0xb1, 0x14, 0xf2, 0x01, 0x36, 0x00, 0xc2, 0xb0, 0x14, 0xe8, 0x01, 
  0xb0, 0x13, 0xe3, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 
  0xb2, 0x36, 0x04, 0xc3, 0xb3, 0x80, 0xd7, 0x44, 0x1d, 0x80, 0xb0, 0x14, 
  0xea, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb1, 0x13, 
  0xf3, 0x01, 0xb2, 0xb1, 0x14, 0x78, 0x01, 0x36, 0x00, 0x36, 0x05, 0x59, 
  0x42, 0x12, 0x80, 0xb0, 0x14, 0xeb, 0x01, 0xb3, 0xb1, 0x13, 0xf3, 0x01, 
  0xb1, 0x14, 0x78, 0x01, 0x36, 0x00, 0x36, 0x03, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_1018[] = {
  0x4a, 0x04, 0x00, 0x00, 0xa2, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1019[] = {
  0x02, 0x08, 0x00, 0x00, 0xf0, 0xac, 0x00, 0x00, 0x50, 0xad, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1020[] = {
  0x42, 0x14, 0x80, 0x00, 0xd1, 0x01, 0x80, 0x44, 0x34, 0x26, 0x24, 0x00, 
  0xb0, 0x14, 0xe8, 0x01, 0xb0, 0x13, 0xe3, 0x01, 0xb0, 0x13, 0xe4, 0x01, 
  0xb0, 0x13, 0xe5, 0x01, 0xb1, 0x36, 0x04, 0xc2, 0xb2, 0x80, 0xd7, 0x44, 
  0x04, 0x80, 0x12, 0x28, 0x00, 0x65, 0xb0, 0x14, 0xec, 0x01, 0xb2, 0x36, 
  0x01, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_1021[] = {
  0x4a, 0x04, 0x00, 0x00, 0x7a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1022[] = {
  0x02, 0x08, 0x00, 0x00, 0x70, 0xad, 0x00, 0x00, 0xa4, 0xad, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1023[] = {
  0x21, 0x0e, 0x14, 0x00, 0xd1, 0x01, 0x80, 0x4a, 0x00, 0x12, 0x09, 0x01, 
  0xb0, 0x13, 0xe3, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 
  0x34, 0x03, 0x63, 
};

static const u8 data_segment_data_1024[] = {
  0x4a, 0x04, 0x00, 0x00, 
};

static const u8 data_segment_data_1025[] = {
  0x02, 0x04, 0x00, 0x00, 0xc0, 0xad, 0x00, 0x00, 0xdc, 0xad, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1026[] = {
  0x22, 0x0e, 0xe2, 0x01, 0xd1, 0x01, 0x80, 0x4d, 0x00, 0xb0, 0x14, 0xec, 
  0x01, 0xb1, 0x36, 0x01, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_1027[] = {
  0x4a, 0x04, 0x00, 0x00, 0x82, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1028[] = {
  0x02, 0x08, 0x00, 0x00, 0xf0, 0xad, 0x00, 0x00, 0x04, 0xae, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1029[] = {
  0x00, 0x0e, 0xdc, 0x01, 0xd1, 0x01, 0x8c, 0x50, 0x00, 0x11, 0x17, 0x00, 
  0x16, 0x16, 0x00, 0x10, 0xdc, 0x01, 0x16, 0x1a, 0x00, 0x32, 0x00, 0x16, 
  0x11, 0x00, 0x51, 0x63, 
};

static const u8 data_segment_data_1030[] = {
  0x84, 0xae, 0x00, 0x00, 
};

static const u8 data_segment_data_1031[] = {
  0x02, 0x00, 0x00, 0x00, 0x20, 0xae, 0x00, 0x00, 0x3c, 0xae, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1032[] = {
  0xe1, 0x04, 0x0e, 0x11, 0x00, 0xd1, 0x01, 0x80, 0x51, 0x00, 0x12, 0xdb, 
  0x01, 0x14, 0x11, 0x00, 0xb0, 0x12, 0xd9, 0x01, 0xb1, 0xb2, 0xb3, 0xb4, 
  0x36, 0x06, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_1033[] = {
  0x4a, 0x04, 0x00, 0x00, 0x1a, 0x0f, 0x00, 0x00, 0x22, 0x0f, 0x00, 0x00, 
  0x2a, 0x0f, 0x00, 0x00, 0x32, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1034[] = {
  0x02, 0x14, 0x00, 0x00, 0x50, 0xae, 0x00, 0x00, 0x70, 0xae, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1035[] = {
  0x00, 0x0e, 0xdd, 0x01, 0xd1, 0x01, 0x8c, 0x54, 0x00, 0x11, 0x17, 0x00, 
  0x16, 0x16, 0x00, 0x10, 0xdd, 0x01, 0x16, 0x1a, 0x00, 0x32, 0x00, 0x16, 
  0x11, 0x00, 0x51, 0x63, 
};

static const u8 data_segment_data_1036[] = {
  0xf4, 0xae, 0x00, 0x00, 
};

static const u8 data_segment_data_1037[] = {
  0x02, 0x00, 0x00, 0x00, 0x90, 0xae, 0x00, 0x00, 0xac, 0xae, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1038[] = {
  0xe1, 0x04, 0x0e, 0x11, 0x00, 0xd1, 0x01, 0x80, 0x55, 0x00, 0x12, 0xdb, 
  0x01, 0x14, 0x11, 0x00, 0xb0, 0x12, 0xda, 0x01, 0xb1, 0xb2, 0xb3, 0xb4, 
  0x36, 0x06, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_1039[] = {
  0x4a, 0x04, 0x00, 0x00, 0x1a, 0x0f, 0x00, 0x00, 0x22, 0x0f, 0x00, 0x00, 
  0x2a, 0x0f, 0x00, 0x00, 0x32, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1040[] = {
  0x02, 0x14, 0x00, 0x00, 0xc0, 0xae, 0x00, 0x00, 0xe0, 0xae, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1041[] = {
  0x00, 0x4e, 0xde, 0x01, 0xd1, 0x01, 0x8c, 0x58, 0x85, 0x0c, 0x65, 0x65, 
  0x60, 0x85, 0x0c, 0x65, 0x60, 0x65, 0x20, 0x65, 0x60, 0x85, 0x15, 0x85, 
  0x0d, 0x65, 0x65, 0x65, 0x20, 0x85, 0x08, 0x65, 0x60, 0x65, 0x65, 0x65, 
  0x65, 0x20, 0x65, 0x40, 0x00, 0x11, 0x17, 0x00, 0x16, 0x16, 0x00, 0x10, 
  0xde, 0x01, 0x16, 0x1a, 0x00, 0x32, 0x00, 0x16, 0x11, 0x00, 0x32, 0x01, 
  0x16, 0x53, 0x00, 0x32, 0x02, 0x16, 0x56, 0x00, 0x32, 0x03, 0x16, 0xf5, 
  0x01, 0x32, 0x04, 0x16, 0x0f, 0x00, 0x32, 0x05, 0x16, 0x1c, 0x00, 0x32, 
  0x06, 0x16, 0x66, 0x01, 0x32, 0x07, 0x16, 0xe1, 0x01, 0x32, 0x08, 0x16, 
  0x80, 0x00, 0x32, 0x09, 0x16, 0x0b, 0x00, 0x32, 0x0a, 0x16, 0xac, 0x00, 
  0x32, 0x0b, 0x16, 0x13, 0x00, 0x32, 0x0c, 0x16, 0x19, 0x00, 0x32, 0x0d, 
  0x16, 0x14, 0x00, 0x32, 0x0e, 0x16, 0xf6, 0x01, 0x32, 0x0f, 0x16, 0xdf, 
  0x01, 0x32, 0x10, 0x16, 0xe0, 0x01, 0x32, 0x11, 0x16, 0xf7, 0x01, 0x32, 
  0x12, 0x16, 0xf8, 0x01, 0x32, 0x13, 0x16, 0xf9, 0x01, 0x51, 0x63, 
};

static const u8 data_segment_data_1042[] = {
  0x98, 0xb0, 0x00, 0x00, 0xe4, 0xb0, 0x00, 0x00, 0x20, 0xb1, 0x00, 0x00, 
  0x90, 0xb1, 0x00, 0x00, 0xd0, 0xb1, 0x00, 0x00, 0x10, 0xb2, 0x00, 0x00, 
  0x4c, 0xb2, 0x00, 0x00, 0x50, 0xb3, 0x00, 0x00, 0xe4, 0xb3, 0x00, 0x00, 
  0x0c, 0xb4, 0x00, 0x00, 0x48, 0xb4, 0x00, 0x00, 0x88, 0xb4, 0x00, 0x00, 
  0xec, 0xb4, 0x00, 0x00, 0x30, 0xb5, 0x00, 0x00, 0x64, 0xb5, 0x00, 0x00, 
  0x94, 0xb5, 0x00, 0x00, 0xc4, 0xb5, 0x00, 0x00, 0x04, 0xb6, 0x00, 0x00, 
  0x48, 0xb6, 0x00, 0x00, 0x98, 0xb6, 0x00, 0x00, 
};

static const u8 data_segment_data_1043[] = {
  0x02, 0x00, 0x00, 0x00, 0x00, 0xaf, 0x00, 0x00, 0xa0, 0xaf, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1044[] = {
  0xd1, 0x04, 0x20, 0x11, 0x00, 0xd1, 0x01, 0x80, 0x59, 0x25, 0x25, 0x25, 
  0x2a, 0x25, 0x25, 0x26, 0x2f, 0x2f, 0x00, 0xb1, 0xb0, 0x18, 0xe3, 0x01, 
  0xb2, 0xb0, 0x18, 0xe4, 0x01, 0xb3, 0xb0, 0x18, 0xe5, 0x01, 0xb4, 0x14, 
  0xfa, 0x01, 0x36, 0x00, 0xb0, 0x18, 0xfb, 0x01, 0xb4, 0xb0, 0x18, 0xe6, 
  0x01, 0x80, 0xb0, 0x18, 0xef, 0x01, 0x2b, 0x00, 0xb0, 0x18, 0xfc, 0x01, 
  0x12, 0x6b, 0x00, 0xb0, 0x13, 0xfb, 0x01, 0x34, 0x01, 0x80, 0x42, 0x1e, 
  0x80, 0x57, 0xc5, 0x12, 0x5e, 0x00, 0xb0, 0x13, 0xe5, 0x01, 0x34, 0x01, 
  0x23, 0x05, 0xef, 0xb5, 0xed, 0xc3, 0xb0, 0x13, 0xfc, 0x01, 0x14, 0x3c, 
  0x00, 0xb3, 0x36, 0x01, 0x59, 0x81, 0xe5, 0x58, 0x5a, 0xd7, 0x43, 0xdc, 
  0x7f, 0x59, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_1045[] = {
  0x4a, 0x04, 0x00, 0x00, 0x1a, 0x0f, 0x00, 0x00, 0x22, 0x0f, 0x00, 0x00, 
  0x2a, 0x0f, 0x00, 0x00, 0x32, 0x0f, 0x00, 0x00, 0xac, 0xb0, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1046[] = {
  0x02, 0x14, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x80, 0xb0, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1047[] = {
  0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
};

static const u8 data_segment_data_1048[] = {
  0x30, 0x83, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
  0xa4, 0xb0, 0x00, 0x00, 
};

static const u8 data_segment_data_1049[] = {
  0x32, 0x0e, 0x53, 0x00, 0xd1, 0x01, 0x80, 0x65, 0x00, 0x12, 0x06, 0x01, 
  0xb0, 0x13, 0xe3, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 
  0xb1, 0x34, 0x04, 0x63, 
};

static const u8 data_segment_data_1050[] = {
  0x4a, 0x04, 0x00, 0x00, 0x7a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1051[] = {
  0x02, 0x08, 0x00, 0x00, 0xc0, 0xb0, 0x00, 0x00, 0xdc, 0xb0, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1052[] = {
  0x2a, 0x14, 0x56, 0x00, 0xd1, 0x01, 0x80, 0x68, 0x26, 0x24, 0x27, 0x00, 
  0xb1, 0x80, 0xd7, 0x44, 0x04, 0x80, 0x12, 0x28, 0x00, 0x65, 0x12, 0x08, 
  0x01, 0xb1, 0x34, 0x01, 0xc2, 0xb0, 0x13, 0xe6, 0x01, 0x14, 0xc8, 0x01, 
  0xb2, 0x36, 0x01, 0x63, 
};

static const u8 data_segment_data_1053[] = {
  0x4a, 0x04, 0x00, 0x00, 0x82, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1054[] = {
  0x02, 0x08, 0x00, 0x00, 0xf0, 0xb0, 0x00, 0x00, 0x18, 0xb1, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1055[] = {
  0x8a, 0x10, 0x20, 0xf5, 0x01, 0xd1, 0x01, 0x80, 0x6e, 0x23, 0x22, 0x29, 
  0x27, 0x34, 0x26, 0x22, 0x28, 0x27, 0x00, 0x2b, 0x00, 0xc2, 0x80, 0xc3, 
  0xb0, 0x13, 0xfb, 0x01, 0x5f, 0x4b, 0x33, 0x00, 0xc4, 0xb0, 0x13, 0xfc, 
  0x01, 0xb3, 0x55, 0xc5, 0x12, 0x0b, 0x01, 0xb4, 0xb0, 0x13, 0xe3, 0x01, 
  0xb0, 0x13, 0xe4, 0x01, 0xb5, 0xb1, 0x34, 0x05, 0x30, 0x02, 0xc6, 0xc7, 
  0xb6, 0x80, 0xd7, 0x44, 0x02, 0x80, 0x51, 0x63, 0xb2, 0x14, 0x3c, 0x00, 
  0xb7, 0x36, 0x01, 0x59, 0xb3, 0x81, 0xe5, 0xc3, 0x42, 0xca, 0x7f, 0xb2, 
  0x63, 
};

static const u8 data_segment_data_1056[] = {
  0x4a, 0x04, 0x00, 0x00, 0x7a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1057[] = {
  0x02, 0x08, 0x00, 0x00, 0x30, 0xb1, 0x00, 0x00, 0x88, 0xb1, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1058[] = {
  0x2a, 0x14, 0x0f, 0x00, 0xd1, 0x01, 0x80, 0x7a, 0x28, 0x26, 0x24, 0x00, 
  0xb0, 0x14, 0x53, 0x00, 0xb1, 0x36, 0x01, 0xc2, 0xb2, 0x80, 0xd7, 0x44, 
  0x04, 0x80, 0x12, 0x28, 0x00, 0x65, 0xb0, 0x14, 0x56, 0x00, 0xb2, 0x36, 
  0x01, 0x63, 
};

static const u8 data_segment_data_1059[] = {
  0x4a, 0x04, 0x00, 0x00, 0x7a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1060[] = {
  0x02, 0x08, 0x00, 0x00, 0xa0, 0xb1, 0x00, 0x00, 0xc8, 0xb1, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1061[] = {
  0x2b, 0x10, 0x1c, 0x00, 0xd1, 0x01, 0x80, 0x80, 0x2f, 0x00, 0xb1, 0xb2, 
  0x14, 0xf2, 0x01, 0x36, 0x00, 0xd9, 0x43, 0x04, 0x80, 0x12, 0x1f, 0x00, 
  0x65, 0xb0, 0x14, 0xe1, 0x01, 0xb2, 0x36, 0x01, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_1062[] = {
  0x4a, 0x04, 0x00, 0x00, 0x7a, 0x0f, 0x00, 0x00, 0xa2, 0x0f, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1063[] = {
  0x02, 0x0c, 0x00, 0x00, 0xe0, 0xb1, 0x00, 0x00, 0x04, 0xb2, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1064[] = {
  0x2a, 0x14, 0x66, 0x01, 0xd1, 0x01, 0x80, 0x84, 0x28, 0x26, 0x22, 0x00, 
  0xb0, 0x14, 0x53, 0x00, 0xb1, 0x36, 0x01, 0xc2, 0xb2, 0x80, 0xd7, 0x44, 
  0x02, 0x80, 0x51, 0x63, 0xb0, 0x14, 0x56, 0x00, 0xb2, 0x36, 0x01, 0x63, 
  
};

static const u8 data_segment_data_1065[] = {
  0x4a, 0x04, 0x00, 0x00, 0x7a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1066[] = {
  0x02, 0x08, 0x00, 0x00, 0x20, 0xb2, 0x00, 0x00, 0x44, 0xb2, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1067[] = {
  0xa2, 0x10, 0x30, 0xe1, 0x01, 0xd1, 0x01, 0x80, 0x8a, 0x27, 0x33, 0x26, 
  0x39, 0x22, 0x29, 0x27, 0x39, 0x4a, 0x31, 0x22, 0x29, 0x27, 0x34, 0x29, 
  0x26, 0x2d, 0x00, 0xb1, 0x14, 0xf2, 0x01, 0x36, 0x00, 0xc2, 0x12, 0x06, 
  0x01, 0xb0, 0x13, 0xe3, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 
  0x01, 0xb2, 0x34, 0x04, 0xc3, 0xb3, 0x80, 0xd7, 0x44, 0x4e, 0x80, 0x12, 
  0x1d, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb1, 0x13, 
  0xf3, 0x01, 0xb2, 0xb1, 0x14, 0x78, 0x01, 0x36, 0x00, 0x34, 0x05, 0x59, 
  0x80, 0xc4, 0xb0, 0x13, 0xfb, 0x01, 0x5f, 0x4b, 0x28, 0x00, 0xc5, 0xb0, 
  0x13, 0xfc, 0x01, 0xb4, 0x55, 0xc6, 0x12, 0x11, 0x01, 0xb5, 0xb0, 0x13, 
  0xe4, 0x01, 0xb6, 0xb1, 0x13, 0xf3, 0x01, 0xb2, 0xb1, 0x14, 0xf5, 0x01, 
  0x36, 0x00, 0xb4, 0x55, 0x34, 0x06, 0x59, 0xb4, 0x81, 0xe5, 0xc4, 0x42, 
  0xd5, 0x7f, 0x42, 0x5a, 0x80, 0x12, 0x1f, 0x01, 0xb3, 0xb1, 0x13, 0xf3, 
  0x01, 0xb1, 0x14, 0x78, 0x01, 0x36, 0x00, 0x34, 0x03, 0x59, 0x80, 0xc4, 
  0xb0, 0x13, 0xfb, 0x01, 0x5f, 0x4b, 0x3f, 0x00, 0xc5, 0xb0, 0x13, 0xfc, 
  0x01, 0xb4, 0x55, 0xc6, 0x12, 0x0b, 0x01, 0xb5, 0xb0, 0x13, 0xe3, 0x01, 
  0xb0, 0x13, 0xe4, 0x01, 0xb6, 0xb2, 0x34, 0x05, 0x30, 0x02, 0xc3, 0xc7, 
  0xb1, 0x14, 0xf5, 0x01, 0x36, 0x00, 0xb4, 0x55, 0xc8, 0xb8, 0xb7, 0xd9, 
  0x43, 0x0d, 0x80, 0x12, 0x12, 0x01, 0xb5, 0xb3, 0xb1, 0x13, 0xf3, 0x01, 
  0xb8, 0x34, 0x04, 0x59, 0xb4, 0x81, 0xe5, 0xc4, 0x42, 0xbe, 0x7f, 0x51, 
  0x63, 
};

static const u8 data_segment_data_1068[] = {
  0x4a, 0x04, 0x00, 0x00, 0xa2, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1069[] = {
  0x02, 0x08, 0x00, 0x00, 0x60, 0xb2, 0x00, 0x00, 0x48, 0xb3, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1070[] = {
  0x82, 0x10, 0x22, 0x80, 0x00, 0xd1, 0x01, 0x80, 0x9f, 0x33, 0x26, 0x24, 
  0x27, 0x22, 0x29, 0x27, 0x34, 0x2a, 0x28, 0x00, 0x12, 0x06, 0x01, 0xb0, 
  0x13, 0xe3, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb1, 
  0x34, 0x04, 0xc2, 0xb2, 0x80, 0xd7, 0x44, 0x04, 0x80, 0x12, 0x28, 0x00, 
  0x65, 0x12, 0x1b, 0x01, 0xb2, 0x34, 0x01, 0x59, 0x80, 0xc3, 0xb0, 0x13, 
  0xfb, 0x01, 0x5f, 0x4b, 0x35, 0x00, 0xc4, 0xb0, 0x13, 0xfc, 0x01, 0xb3, 
  0x55, 0xc5, 0x12, 0x0b, 0x01, 0xb4, 0xb0, 0x13, 0xe3, 0x01, 0xb0, 0x13, 
  0xe4, 0x01, 0xb5, 0xb1, 0x34, 0x05, 0x30, 0x02, 0xc2, 0xc6, 0xb2, 0x80, 
  0xdb, 0x43, 0x04, 0x80, 0x12, 0x1f, 0x00, 0x65, 0x12, 0x10, 0x01, 0xb4, 
  0xb2, 0x34, 0x02, 0x59, 0xb3, 0x81, 0xe5, 0xc3, 0x42, 0xc8, 0x7f, 0x51, 
  0x63, 
};

static const u8 data_segment_data_1071[] = {
  0x4a, 0x04, 0x00, 0x00, 0x7a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1072[] = {
  0x02, 0x08, 0x00, 0x00, 0x60, 0xb3, 0x00, 0x00, 0xdc, 0xb3, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1073[] = {
  0x22, 0x0e, 0x0b, 0x00, 0xd1, 0x01, 0x80, 0xac, 0x00, 0xb0, 0x14, 0x80, 
  0x00, 0xb1, 0x36, 0x01, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_1074[] = {
  0x4a, 0x04, 0x00, 0x00, 0x7a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1075[] = {
  0x02, 0x08, 0x00, 0x00, 0xf0, 0xb3, 0x00, 0x00, 0x04, 0xb4, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1076[] = {
  0x32, 0x0e, 0xac, 0x00, 0xd1, 0x01, 0x80, 0xaf, 0x00, 0x12, 0x06, 0x01, 
  0xb0, 0x13, 0xe3, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 
  0xb1, 0x34, 0x04, 0x80, 0xdb, 0x63, 
};

static const u8 data_segment_data_1077[] = {
  0x4a, 0x04, 0x00, 0x00, 0x7a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1078[] = {
  0x02, 0x08, 0x00, 0x00, 0x20, 0xb4, 0x00, 0x00, 0x40, 0xb4, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1079[] = {
  0x21, 0x10, 0x13, 0x00, 0xd1, 0x01, 0x80, 0xb2, 0x35, 0x00, 0x12, 0x04, 
  0x01, 0xb0, 0x13, 0xe3, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 
  0x01, 0x34, 0x03, 0xb0, 0x18, 0xf0, 0x01, 0xb0, 0x63, 
};

static const u8 data_segment_data_1080[] = {
  0x4a, 0x04, 0x00, 0x00, 
};

static const u8 data_segment_data_1081[] = {
  0x02, 0x04, 0x00, 0x00, 0x60, 0xb4, 0x00, 0x00, 0x84, 0xb4, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1082[] = {
  0x19, 0x18, 0x19, 0x00, 0xd1, 0x01, 0x80, 0xb6, 0x29, 0x24, 0x33, 0x29, 
  0x24, 0x00, 0xb0, 0x13, 0xf0, 0x01, 0x7f, 0xd9, 0x44, 0x04, 0x80, 0x12, 
  0x33, 0x00, 0x65, 0x12, 0x19, 0x01, 0xb0, 0x13, 0xf0, 0x01, 0x34, 0x01, 
  0x30, 0x02, 0xb0, 0x18, 0xf0, 0x01, 0xb0, 0x18, 0xef, 0x01, 0xb0, 0x13, 
  0xf0, 0x01, 0x80, 0xd7, 0x44, 0x04, 0x80, 0x12, 0x33, 0x00, 0x65, 0xb0, 
  0x14, 0x56, 0x00, 0xb0, 0x13, 0xf0, 0x01, 0x36, 0x01, 0x63, 
};

static const u8 data_segment_data_1083[] = {
  0x4a, 0x04, 0x00, 0x00, 
};

static const u8 data_segment_data_1084[] = {
  0x02, 0x04, 0x00, 0x00, 0xa0, 0xb4, 0x00, 0x00, 0xe8, 0xb4, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1085[] = {
  0x29, 0x14, 0x14, 0x00, 0xd1, 0x01, 0x80, 0xbe, 0x32, 0x27, 0x24, 0x00, 
  0x12, 0x09, 0x01, 0xb0, 0x13, 0xe3, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 
  0x13, 0xe5, 0x01, 0x34, 0x03, 0xc1, 0xb0, 0x13, 0xfb, 0x01, 0x44, 0x04, 
  0x80, 0xb1, 0x82, 0xea, 0xc1, 0xb1, 0x63, 
};

static const u8 data_segment_data_1086[] = {
  0x4a, 0x04, 0x00, 0x00, 
};

static const u8 data_segment_data_1087[] = {
  0x02, 0x04, 0x00, 0x00, 0x00, 0xb5, 0x00, 0x00, 0x2c, 0xb5, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1088[] = {
  0x2a, 0x0e, 0xf6, 0x01, 0xd1, 0x01, 0x80, 0xc4, 0x00, 0x12, 0xfd, 0x01, 
  0xb0, 0xb0, 0x13, 0xfb, 0x01, 0xb1, 0x55, 0xb0, 0x13, 0xe6, 0x01, 0x34, 
  0x03, 0x63, 
};

static const u8 data_segment_data_1089[] = {
  0x4a, 0x04, 0x00, 0x00, 0xf2, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1090[] = {
  0x02, 0x08, 0x00, 0x00, 0x40, 0xb5, 0x00, 0x00, 0x5c, 0xb5, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1091[] = {
  0x32, 0x0e, 0xdf, 0x01, 0xd1, 0x01, 0x80, 0xc7, 0x00, 0x12, 0x21, 0x01, 
  0xb0, 0x13, 0xe3, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 
  0xb1, 0x34, 0x04, 0x63, 
};

static const u8 data_segment_data_1092[] = {
  0x4a, 0x04, 0x00, 0x00, 0x8a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1093[] = {
  0x02, 0x08, 0x00, 0x00, 0x70, 0xb5, 0x00, 0x00, 0x8c, 0xb5, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1094[] = {
  0x32, 0x0e, 0xe0, 0x01, 0xd1, 0x01, 0x80, 0xca, 0x00, 0x12, 0x15, 0x01, 
  0xb0, 0x13, 0xe3, 0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 
  0xb1, 0x34, 0x04, 0x63, 
};

static const u8 data_segment_data_1095[] = {
  0x4a, 0x04, 0x00, 0x00, 0x8a, 0x0f, 0x00, 0x00, 
};

static const u8 data_segment_data_1096[] = {
  0x02, 0x08, 0x00, 0x00, 0xa0, 0xb5, 0x00, 0x00, 0xbc, 0xb5, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1097[] = {
  0x4b, 0x10, 0xf7, 0x01, 0xd1, 0x01, 0x80, 0xcd, 0x27, 0x00, 0xb0, 0x13, 
  0xfb, 0x01, 0xb1, 0x55, 0xc3, 0x12, 0x0c, 0x01, 0xb3, 0xb0, 0x13, 0xe3, 
  0x01, 0xb0, 0x13, 0xe4, 0x01, 0xb0, 0x13, 0xe5, 0x01, 0xb2, 0x34, 0x05, 
  0x63, 
};

static const u8 data_segment_data_1098[] = {
  0x4a, 0x04, 0x00, 0x00, 0xe2, 0x02, 0x00, 0x00, 0xfa, 0x0f, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1099[] = {
  0x02, 0x0c, 0x00, 0x00, 0xd0, 0xb5, 0x00, 0x00, 0xf8, 0xb5, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1100[] = {
  0x53, 0x12, 0xf8, 0x01, 0xd1, 0x01, 0x80, 0xd1, 0x27, 0x27, 0x00, 0xb0, 
  0x13, 0xfb, 0x01, 0xb1, 0x55, 0xc3, 0xb0, 0x13, 0xfc, 0x01, 0xb1, 0x55, 
  0xc4, 0x12, 0x13, 0x01, 0xb3, 0xb0, 0x13, 0xe3, 0x01, 0xb0, 0x13, 0xe4, 
  0x01, 0xb4, 0xb2, 0x34, 0x05, 0x63, 
};

static const u8 data_segment_data_1101[] = {
  0x4a, 0x04, 0x00, 0x00, 0xe2, 0x02, 0x00, 0x00, 0xfa, 0x0f, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1102[] = {
  0x02, 0x0c, 0x00, 0x00, 0x10, 0xb6, 0x00, 0x00, 0x3c, 0xb6, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1103[] = {
  0x53, 0x12, 0xf9, 0x01, 0xd1, 0x01, 0x80, 0xd6, 0x27, 0x27, 0x00, 0xb0, 
  0x13, 0xfb, 0x01, 0xb1, 0x55, 0xc3, 0xb0, 0x13, 0xfc, 0x01, 0xb1, 0x55, 
  0xc4, 0x12, 0x0d, 0x01, 0xb3, 0xb0, 0x13, 0xe3, 0x01, 0xb0, 0x13, 0xe4, 
  0x01, 0xb4, 0xb2, 0x34, 0x05, 0x63, 
};

static const u8 data_segment_data_1104[] = {
  0x4a, 0x04, 0x00, 0x00, 0xe2, 0x02, 0x00, 0x00, 0xfa, 0x0f, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1105[] = {
  0x02, 0x0c, 0x00, 0x00, 0x60, 0xb6, 0x00, 0x00, 0x8c, 0xb6, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1106[] = {
  0x08, 0x0c, 0x93, 0x01, 0x00, 0x02, 0x20, 0x00, 0x12, 0x7b, 0x00, 0x23, 
  0x00, 0x34, 0x01, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_1107[] = {
  0xd4, 0xb6, 0x00, 0x00, 
};

static const u8 data_segment_data_1108[] = {
  0x02, 0x00, 0x00, 0x00, 0xb0, 0xb6, 0x00, 0x00, 0xc4, 0xb6, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1109[] = {
  0x48, 0x8d, 0x00, 0x00, 0xd6, 0x75, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 
  0x98, 0x4d, 0x00, 0x00, 
};

static const u8 data_segment_data_1110[] = {
  0x3b, 0x0e, 0x01, 0x02, 0x00, 0x02, 0x60, 0x20, 0x00, 0x12, 0x7b, 0x00, 
  0x10, 0x02, 0x02, 0xb0, 0xb1, 0xb2, 0x34, 0x04, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_1111[] = {
  0x1a, 0x10, 0x00, 0x00, 0x22, 0x10, 0x00, 0x00, 0x2a, 0x10, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1112[] = {
  0x02, 0x0c, 0x00, 0x00, 0xf0, 0xb6, 0x00, 0x00, 0x08, 0xb7, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1113[] = {
  0x08, 0x0c, 0x93, 0x01, 0x06, 0x02, 0x20, 0x00, 0x12, 0x7b, 0x00, 0x23, 
  0x00, 0x34, 0x01, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_1114[] = {
  0x44, 0xb7, 0x00, 0x00, 
};

static const u8 data_segment_data_1115[] = {
  0x02, 0x00, 0x00, 0x00, 0x20, 0xb7, 0x00, 0x00, 0x34, 0xb7, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1116[] = {
  0x48, 0x8d, 0x00, 0x00, 0x4e, 0x34, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 
  0xd2, 0x4d, 0x00, 0x00, 
};

static const u8 data_segment_data_1117[] = {
  0x3b, 0x0e, 0x01, 0x02, 0x06, 0x02, 0x60, 0x20, 0x00, 0x12, 0x7b, 0x00, 
  0x10, 0x07, 0x02, 0xb0, 0xb1, 0xb2, 0x34, 0x04, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_1118[] = {
  0x1a, 0x10, 0x00, 0x00, 0x22, 0x10, 0x00, 0x00, 0x2a, 0x10, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1119[] = {
  0x02, 0x0c, 0x00, 0x00, 0x60, 0xb7, 0x00, 0x00, 0x78, 0xb7, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1120[] = {
  0x48, 0x8d, 0x00, 0x00, 0x39, 0x77, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 
  0xfb, 0x4d, 0x00, 0x00, 
};

static const u8 data_segment_data_1121[] = {
  0x08, 0x0e, 0x93, 0x01, 0x08, 0x02, 0x80, 0x08, 0x00, 0x12, 0x7b, 0x00, 
  0x23, 0x00, 0x34, 0x01, 0x59, 0x51, 0x63, 
};

static const u8 data_segment_data_1122[] = {
  0xc4, 0xb7, 0x00, 0x00, 
};

static const u8 data_segment_data_1123[] = {
  0x02, 0x00, 0x00, 0x00, 0xa0, 0xb7, 0x00, 0x00, 0xb4, 0xb7, 0x00, 0x00, 
  
};

static const u8 data_segment_data_1124[] = {
  0x48, 0x8d, 0x00, 0x00, 0xe9, 0x38, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 
  0x1e, 0x4e, 0x00, 0x00, 
};

static void init_memory(void) {
  wasm_rt_allocate_memory((&M0), 1, 528);
  memcpy(&(M0.data[5120u]), data_segment_data_0, 4804);
  memcpy(&(M0.data[9924u]), data_segment_data_1, 1147);
  memcpy(&(M0.data[11071u]), data_segment_data_2, 836);
  memcpy(&(M0.data[11907u]), data_segment_data_3, 691);
  memcpy(&(M0.data[12598u]), data_segment_data_4, 569);
  memcpy(&(M0.data[13167u]), data_segment_data_5, 449);
  memcpy(&(M0.data[13616u]), data_segment_data_6, 350);
  memcpy(&(M0.data[13966u]), data_segment_data_7, 344);
  memcpy(&(M0.data[14310u]), data_segment_data_8, 243);
  memcpy(&(M0.data[14553u]), data_segment_data_9, 223);
  memcpy(&(M0.data[14776u]), data_segment_data_10, 178);
  memcpy(&(M0.data[14954u]), data_segment_data_11, 130);
  memcpy(&(M0.data[15084u]), data_segment_data_12, 135);
  memcpy(&(M0.data[15219u]), data_segment_data_13, 255);
  memcpy(&(M0.data[15474u]), data_segment_data_14, 166);
  memcpy(&(M0.data[15640u]), data_segment_data_15, 230);
  memcpy(&(M0.data[15870u]), data_segment_data_16, 135);
  memcpy(&(M0.data[16005u]), data_segment_data_17, 151);
  memcpy(&(M0.data[16156u]), data_segment_data_18, 102);
  memcpy(&(M0.data[16258u]), data_segment_data_19, 83);
  memcpy(&(M0.data[16341u]), data_segment_data_20, 117);
  memcpy(&(M0.data[16458u]), data_segment_data_21, 151);
  memcpy(&(M0.data[16609u]), data_segment_data_22, 126);
  memcpy(&(M0.data[16735u]), data_segment_data_23, 105);
  memcpy(&(M0.data[16840u]), data_segment_data_24, 143);
  memcpy(&(M0.data[16983u]), data_segment_data_25, 100);
  memcpy(&(M0.data[17083u]), data_segment_data_26, 100);
  memcpy(&(M0.data[17183u]), data_segment_data_27, 132);
  memcpy(&(M0.data[17315u]), data_segment_data_28, 98);
  memcpy(&(M0.data[17413u]), data_segment_data_29, 88);
  memcpy(&(M0.data[17501u]), data_segment_data_30, 82);
  memcpy(&(M0.data[17583u]), data_segment_data_31, 56);
  memcpy(&(M0.data[17639u]), data_segment_data_32, 91);
  memcpy(&(M0.data[17730u]), data_segment_data_33, 102);
  memcpy(&(M0.data[17832u]), data_segment_data_34, 113);
  memcpy(&(M0.data[17945u]), data_segment_data_35, 99);
  memcpy(&(M0.data[18044u]), data_segment_data_36, 59);
  memcpy(&(M0.data[18103u]), data_segment_data_37, 70);
  memcpy(&(M0.data[18173u]), data_segment_data_38, 141);
  memcpy(&(M0.data[18314u]), data_segment_data_39, 92);
  memcpy(&(M0.data[18406u]), data_segment_data_40, 65);
  memcpy(&(M0.data[18471u]), data_segment_data_41, 35);
  memcpy(&(M0.data[18506u]), data_segment_data_42, 62);
  memcpy(&(M0.data[18568u]), data_segment_data_43, 92);
  memcpy(&(M0.data[18660u]), data_segment_data_44, 108);
  memcpy(&(M0.data[18768u]), data_segment_data_45, 94);
  memcpy(&(M0.data[18862u]), data_segment_data_46, 133);
  memcpy(&(M0.data[18995u]), data_segment_data_47, 82);
  memcpy(&(M0.data[19077u]), data_segment_data_48, 58);
  memcpy(&(M0.data[19135u]), data_segment_data_49, 37);
  memcpy(&(M0.data[19172u]), data_segment_data_50, 48);
  memcpy(&(M0.data[19220u]), data_segment_data_51, 21);
  memcpy(&(M0.data[19241u]), data_segment_data_52, 22);
  memcpy(&(M0.data[19263u]), data_segment_data_53, 20);
  memcpy(&(M0.data[19283u]), data_segment_data_54, 24);
  memcpy(&(M0.data[19307u]), data_segment_data_55, 46);
  memcpy(&(M0.data[19353u]), data_segment_data_56, 26);
  memcpy(&(M0.data[19379u]), data_segment_data_57, 27);
  memcpy(&(M0.data[19406u]), data_segment_data_58, 19);
  memcpy(&(M0.data[19425u]), data_segment_data_59, 18);
  memcpy(&(M0.data[19443u]), data_segment_data_60, 7);
  memcpy(&(M0.data[19450u]), data_segment_data_61, 56);
  memcpy(&(M0.data[19506u]), data_segment_data_62, 8);
  memcpy(&(M0.data[19514u]), data_segment_data_63, 8);
  memcpy(&(M0.data[19522u]), data_segment_data_64, 12);
  memcpy(&(M0.data[19534u]), data_segment_data_65, 13);
  memcpy(&(M0.data[19547u]), data_segment_data_66, 12);
  memcpy(&(M0.data[19559u]), data_segment_data_67, 9);
  memcpy(&(M0.data[19568u]), data_segment_data_68, 12);
  memcpy(&(M0.data[19580u]), data_segment_data_69, 7);
  memcpy(&(M0.data[19587u]), data_segment_data_70, 15);
  memcpy(&(M0.data[19602u]), data_segment_data_71, 9);
  memcpy(&(M0.data[19611u]), data_segment_data_72, 9);
  memcpy(&(M0.data[19620u]), data_segment_data_73, 9);
  memcpy(&(M0.data[19629u]), data_segment_data_74, 8);
  memcpy(&(M0.data[19637u]), data_segment_data_75, 9);
  memcpy(&(M0.data[19646u]), data_segment_data_76, 8);
  memcpy(&(M0.data[19654u]), data_segment_data_77, 7);
  memcpy(&(M0.data[19661u]), data_segment_data_78, 10);
  memcpy(&(M0.data[19671u]), data_segment_data_79, 7);
  memcpy(&(M0.data[19678u]), data_segment_data_80, 12);
  memcpy(&(M0.data[19690u]), data_segment_data_81, 8);
  memcpy(&(M0.data[19698u]), data_segment_data_82, 8);
  memcpy(&(M0.data[19706u]), data_segment_data_83, 10);
  memcpy(&(M0.data[19716u]), data_segment_data_84, 8);
  memcpy(&(M0.data[19724u]), data_segment_data_85, 10);
  memcpy(&(M0.data[19734u]), data_segment_data_86, 14);
  memcpy(&(M0.data[19748u]), data_segment_data_87, 7);
  memcpy(&(M0.data[19755u]), data_segment_data_88, 11);
  memcpy(&(M0.data[19766u]), data_segment_data_89, 11);
  memcpy(&(M0.data[19777u]), data_segment_data_90, 11);
  memcpy(&(M0.data[19788u]), data_segment_data_91, 8);
  memcpy(&(M0.data[19796u]), data_segment_data_92, 6);
  memcpy(&(M0.data[19802u]), data_segment_data_93, 9);
  memcpy(&(M0.data[19811u]), data_segment_data_94, 10);
  memcpy(&(M0.data[19821u]), data_segment_data_95, 7);
  memcpy(&(M0.data[19828u]), data_segment_data_96, 11);
  memcpy(&(M0.data[19839u]), data_segment_data_97, 11);
  memcpy(&(M0.data[19850u]), data_segment_data_98, 36);
  memcpy(&(M0.data[19886u]), data_segment_data_99, 11);
  memcpy(&(M0.data[19897u]), data_segment_data_100, 11);
  memcpy(&(M0.data[19908u]), data_segment_data_101, 35);
  memcpy(&(M0.data[19943u]), data_segment_data_102, 11);
  memcpy(&(M0.data[19954u]), data_segment_data_103, 28);
  memcpy(&(M0.data[19982u]), data_segment_data_104, 8);
  memcpy(&(M0.data[19990u]), data_segment_data_105, 30);
  memcpy(&(M0.data[20020u]), data_segment_data_106, 7);
  memcpy(&(M0.data[20027u]), data_segment_data_107, 8);
  memcpy(&(M0.data[20035u]), data_segment_data_108, 7);
  memcpy(&(M0.data[20042u]), data_segment_data_109, 8);
  memcpy(&(M0.data[20050u]), data_segment_data_110, 10);
  memcpy(&(M0.data[20060u]), data_segment_data_111, 10);
  memcpy(&(M0.data[20070u]), data_segment_data_112, 9);
  memcpy(&(M0.data[20079u]), data_segment_data_113, 10);
  memcpy(&(M0.data[20089u]), data_segment_data_114, 8);
  memcpy(&(M0.data[20097u]), data_segment_data_115, 7);
  memcpy(&(M0.data[20104u]), data_segment_data_116, 15);
  memcpy(&(M0.data[20119u]), data_segment_data_117, 8);
  memcpy(&(M0.data[20127u]), data_segment_data_118, 10);
  memcpy(&(M0.data[20137u]), data_segment_data_119, 8);
  memcpy(&(M0.data[20145u]), data_segment_data_120, 7);
  memcpy(&(M0.data[20152u]), data_segment_data_121, 7);
  memcpy(&(M0.data[20159u]), data_segment_data_122, 11);
  memcpy(&(M0.data[20170u]), data_segment_data_123, 7);
  memcpy(&(M0.data[20177u]), data_segment_data_124, 9);
  memcpy(&(M0.data[20186u]), data_segment_data_125, 9);
  memcpy(&(M0.data[20195u]), data_segment_data_126, 8);
  memcpy(&(M0.data[20203u]), data_segment_data_127, 12);
  memcpy(&(M0.data[20215u]), data_segment_data_128, 12);
  memcpy(&(M0.data[20227u]), data_segment_data_129, 10);
  memcpy(&(M0.data[20237u]), data_segment_data_130, 11);
  memcpy(&(M0.data[20248u]), data_segment_data_131, 8);
  memcpy(&(M0.data[20256u]), data_segment_data_132, 11);
  memcpy(&(M0.data[20267u]), data_segment_data_133, 9);
  memcpy(&(M0.data[20276u]), data_segment_data_134, 10);
  memcpy(&(M0.data[20286u]), data_segment_data_135, 9);
  memcpy(&(M0.data[20295u]), data_segment_data_136, 10);
  memcpy(&(M0.data[20305u]), data_segment_data_137, 10);
  memcpy(&(M0.data[20315u]), data_segment_data_138, 8);
  memcpy(&(M0.data[20323u]), data_segment_data_139, 8);
  memcpy(&(M0.data[20331u]), data_segment_data_140, 7);
  memcpy(&(M0.data[20338u]), data_segment_data_141, 7);
  memcpy(&(M0.data[20345u]), data_segment_data_142, 11);
  memcpy(&(M0.data[20356u]), data_segment_data_143, 14);
  memcpy(&(M0.data[20370u]), data_segment_data_144, 8);
  memcpy(&(M0.data[20378u]), data_segment_data_145, 10);
  memcpy(&(M0.data[20388u]), data_segment_data_146, 9);
  memcpy(&(M0.data[20397u]), data_segment_data_147, 9);
  memcpy(&(M0.data[20406u]), data_segment_data_148, 14);
  memcpy(&(M0.data[20420u]), data_segment_data_149, 16);
  memcpy(&(M0.data[20436u]), data_segment_data_150, 8);
  memcpy(&(M0.data[20444u]), data_segment_data_151, 8);
  memcpy(&(M0.data[20452u]), data_segment_data_152, 7);
  memcpy(&(M0.data[20459u]), data_segment_data_153, 9);
  memcpy(&(M0.data[20468u]), data_segment_data_154, 7);
  memcpy(&(M0.data[20475u]), data_segment_data_155, 9);
  memcpy(&(M0.data[20484u]), data_segment_data_156, 9);
  memcpy(&(M0.data[20493u]), data_segment_data_157, 12);
  memcpy(&(M0.data[20505u]), data_segment_data_158, 9);
  memcpy(&(M0.data[20514u]), data_segment_data_159, 8);
  memcpy(&(M0.data[20522u]), data_segment_data_160, 10);
  memcpy(&(M0.data[20532u]), data_segment_data_161, 9);
  memcpy(&(M0.data[20541u]), data_segment_data_162, 9);
  memcpy(&(M0.data[20550u]), data_segment_data_163, 9);
  memcpy(&(M0.data[20559u]), data_segment_data_164, 10);
  memcpy(&(M0.data[20569u]), data_segment_data_165, 9);
  memcpy(&(M0.data[20578u]), data_segment_data_166, 7);
  memcpy(&(M0.data[20585u]), data_segment_data_167, 11);
  memcpy(&(M0.data[20596u]), data_segment_data_168, 11);
  memcpy(&(M0.data[20607u]), data_segment_data_169, 11);
  memcpy(&(M0.data[20618u]), data_segment_data_170, 13);
  memcpy(&(M0.data[20631u]), data_segment_data_171, 12);
  memcpy(&(M0.data[20643u]), data_segment_data_172, 19);
  memcpy(&(M0.data[20662u]), data_segment_data_173, 16);
  memcpy(&(M0.data[20678u]), data_segment_data_174, 12);
  memcpy(&(M0.data[20690u]), data_segment_data_175, 14);
  memcpy(&(M0.data[20704u]), data_segment_data_176, 10);
  memcpy(&(M0.data[20714u]), data_segment_data_177, 12);
  memcpy(&(M0.data[20726u]), data_segment_data_178, 16);
  memcpy(&(M0.data[20742u]), data_segment_data_179, 10);
  memcpy(&(M0.data[20752u]), data_segment_data_180, 10);
  memcpy(&(M0.data[20762u]), data_segment_data_181, 12);
  memcpy(&(M0.data[20774u]), data_segment_data_182, 14);
  memcpy(&(M0.data[20788u]), data_segment_data_183, 14);
  memcpy(&(M0.data[20802u]), data_segment_data_184, 12);
  memcpy(&(M0.data[20814u]), data_segment_data_185, 10);
  memcpy(&(M0.data[20824u]), data_segment_data_186, 14);
  memcpy(&(M0.data[20838u]), data_segment_data_187, 10);
  memcpy(&(M0.data[20848u]), data_segment_data_188, 14);
  memcpy(&(M0.data[20862u]), data_segment_data_189, 11);
  memcpy(&(M0.data[20873u]), data_segment_data_190, 11);
  memcpy(&(M0.data[20884u]), data_segment_data_191, 10);
  memcpy(&(M0.data[20894u]), data_segment_data_192, 11);
  memcpy(&(M0.data[20905u]), data_segment_data_193, 10);
  memcpy(&(M0.data[20915u]), data_segment_data_194, 12);
  memcpy(&(M0.data[20927u]), data_segment_data_195, 11);
  memcpy(&(M0.data[20938u]), data_segment_data_196, 11);
  memcpy(&(M0.data[20949u]), data_segment_data_197, 18);
  memcpy(&(M0.data[20967u]), data_segment_data_198, 16);
  memcpy(&(M0.data[20983u]), data_segment_data_199, 14);
  memcpy(&(M0.data[20997u]), data_segment_data_200, 11);
  memcpy(&(M0.data[21008u]), data_segment_data_201, 17);
  memcpy(&(M0.data[21025u]), data_segment_data_202, 15);
  memcpy(&(M0.data[21040u]), data_segment_data_203, 11);
  memcpy(&(M0.data[21051u]), data_segment_data_204, 7);
  memcpy(&(M0.data[21058u]), data_segment_data_205, 7);
  memcpy(&(M0.data[21065u]), data_segment_data_206, 9);
  memcpy(&(M0.data[21074u]), data_segment_data_207, 36);
  memcpy(&(M0.data[21110u]), data_segment_data_208, 12);
  memcpy(&(M0.data[21122u]), data_segment_data_209, 14);
  memcpy(&(M0.data[21136u]), data_segment_data_210, 14);
  memcpy(&(M0.data[21150u]), data_segment_data_211, 13);
  memcpy(&(M0.data[21163u]), data_segment_data_212, 13);
  memcpy(&(M0.data[21176u]), data_segment_data_213, 12);
  memcpy(&(M0.data[21188u]), data_segment_data_214, 11);
  memcpy(&(M0.data[21199u]), data_segment_data_215, 21);
  memcpy(&(M0.data[21220u]), data_segment_data_216, 11);
  memcpy(&(M0.data[21231u]), data_segment_data_217, 15);
  memcpy(&(M0.data[21246u]), data_segment_data_218, 22);
  memcpy(&(M0.data[21268u]), data_segment_data_219, 12);
  memcpy(&(M0.data[21280u]), data_segment_data_220, 16);
  memcpy(&(M0.data[21296u]), data_segment_data_221, 14);
  memcpy(&(M0.data[21310u]), data_segment_data_222, 11);
  memcpy(&(M0.data[21321u]), data_segment_data_223, 8);
  memcpy(&(M0.data[21329u]), data_segment_data_224, 9);
  memcpy(&(M0.data[21338u]), data_segment_data_225, 25);
  memcpy(&(M0.data[21363u]), data_segment_data_226, 15);
  memcpy(&(M0.data[21378u]), data_segment_data_227, 14);
  memcpy(&(M0.data[21392u]), data_segment_data_228, 15);
  memcpy(&(M0.data[21407u]), data_segment_data_229, 7);
  memcpy(&(M0.data[21414u]), data_segment_data_230, 8);
  memcpy(&(M0.data[21422u]), data_segment_data_231, 9);
  memcpy(&(M0.data[21431u]), data_segment_data_232, 8);
  memcpy(&(M0.data[21439u]), data_segment_data_233, 9);
  memcpy(&(M0.data[21448u]), data_segment_data_234, 22);
  memcpy(&(M0.data[21470u]), data_segment_data_235, 20);
  memcpy(&(M0.data[21490u]), data_segment_data_236, 15);
  memcpy(&(M0.data[21505u]), data_segment_data_237, 17);
  memcpy(&(M0.data[21522u]), data_segment_data_238, 17);
  memcpy(&(M0.data[21539u]), data_segment_data_239, 8);
  memcpy(&(M0.data[21547u]), data_segment_data_240, 9);
  memcpy(&(M0.data[21556u]), data_segment_data_241, 9);
  memcpy(&(M0.data[21565u]), data_segment_data_242, 14);
  memcpy(&(M0.data[21579u]), data_segment_data_243, 10);
  memcpy(&(M0.data[21589u]), data_segment_data_244, 7);
  memcpy(&(M0.data[21596u]), data_segment_data_245, 16);
  memcpy(&(M0.data[21612u]), data_segment_data_246, 13);
  memcpy(&(M0.data[21625u]), data_segment_data_247, 12);
  memcpy(&(M0.data[21637u]), data_segment_data_248, 17);
  memcpy(&(M0.data[21654u]), data_segment_data_249, 8);
  memcpy(&(M0.data[21662u]), data_segment_data_250, 10);
  memcpy(&(M0.data[21672u]), data_segment_data_251, 9);
  memcpy(&(M0.data[21681u]), data_segment_data_252, 11);
  memcpy(&(M0.data[21692u]), data_segment_data_253, 9);
  memcpy(&(M0.data[21701u]), data_segment_data_254, 11);
  memcpy(&(M0.data[21712u]), data_segment_data_255, 12);
  memcpy(&(M0.data[21724u]), data_segment_data_256, 7);
  memcpy(&(M0.data[21731u]), data_segment_data_257, 8);
  memcpy(&(M0.data[21739u]), data_segment_data_258, 20);
  memcpy(&(M0.data[21759u]), data_segment_data_259, 16);
  memcpy(&(M0.data[21775u]), data_segment_data_260, 15);
  memcpy(&(M0.data[21790u]), data_segment_data_261, 14);
  memcpy(&(M0.data[21804u]), data_segment_data_262, 16);
  memcpy(&(M0.data[21820u]), data_segment_data_263, 15);
  memcpy(&(M0.data[21835u]), data_segment_data_264, 15);
  memcpy(&(M0.data[21850u]), data_segment_data_265, 14);
  memcpy(&(M0.data[21864u]), data_segment_data_266, 26);
  memcpy(&(M0.data[21890u]), data_segment_data_267, 14);
  memcpy(&(M0.data[21904u]), data_segment_data_268, 23);
  memcpy(&(M0.data[21927u]), data_segment_data_269, 25);
  memcpy(&(M0.data[21952u]), data_segment_data_270, 21);
  memcpy(&(M0.data[21973u]), data_segment_data_271, 15);
  memcpy(&(M0.data[21988u]), data_segment_data_272, 19);
  memcpy(&(M0.data[22007u]), data_segment_data_273, 17);
  memcpy(&(M0.data[22024u]), data_segment_data_274, 16);
  memcpy(&(M0.data[22040u]), data_segment_data_275, 17);
  memcpy(&(M0.data[22057u]), data_segment_data_276, 21);
  memcpy(&(M0.data[22078u]), data_segment_data_277, 22);
  memcpy(&(M0.data[22100u]), data_segment_data_278, 21);
  memcpy(&(M0.data[22121u]), data_segment_data_279, 16);
  memcpy(&(M0.data[22137u]), data_segment_data_280, 15);
  memcpy(&(M0.data[22152u]), data_segment_data_281, 20);
  memcpy(&(M0.data[22172u]), data_segment_data_282, 19);
  memcpy(&(M0.data[22191u]), data_segment_data_283, 18);
  memcpy(&(M0.data[22209u]), data_segment_data_284, 17);
  memcpy(&(M0.data[22226u]), data_segment_data_285, 17);
  memcpy(&(M0.data[22243u]), data_segment_data_286, 16);
  memcpy(&(M0.data[22259u]), data_segment_data_287, 18);
  memcpy(&(M0.data[22277u]), data_segment_data_288, 17);
  memcpy(&(M0.data[22294u]), data_segment_data_289, 22);
  memcpy(&(M0.data[22316u]), data_segment_data_290, 21);
  memcpy(&(M0.data[22337u]), data_segment_data_291, 10);
  memcpy(&(M0.data[22347u]), data_segment_data_292, 11);
  memcpy(&(M0.data[22358u]), data_segment_data_293, 11);
  memcpy(&(M0.data[22369u]), data_segment_data_294, 11);
  memcpy(&(M0.data[22380u]), data_segment_data_295, 11);
  memcpy(&(M0.data[22391u]), data_segment_data_296, 13);
  memcpy(&(M0.data[22404u]), data_segment_data_297, 14);
  memcpy(&(M0.data[22418u]), data_segment_data_298, 21);
  memcpy(&(M0.data[22439u]), data_segment_data_299, 10);
  memcpy(&(M0.data[22449u]), data_segment_data_300, 11);
  memcpy(&(M0.data[22460u]), data_segment_data_301, 7);
  memcpy(&(M0.data[22467u]), data_segment_data_302, 8);
  memcpy(&(M0.data[22475u]), data_segment_data_303, 9);
  memcpy(&(M0.data[22484u]), data_segment_data_304, 5);
  memcpy(&(M0.data[22489u]), data_segment_data_305, 14);
  memcpy(&(M0.data[22503u]), data_segment_data_306, 10);
  memcpy(&(M0.data[22513u]), data_segment_data_307, 13);
  memcpy(&(M0.data[22526u]), data_segment_data_308, 7);
  memcpy(&(M0.data[22533u]), data_segment_data_309, 8);
  memcpy(&(M0.data[22541u]), data_segment_data_310, 8);
  memcpy(&(M0.data[22549u]), data_segment_data_311, 7);
  memcpy(&(M0.data[22556u]), data_segment_data_312, 14);
  memcpy(&(M0.data[22570u]), data_segment_data_313, 9);
  memcpy(&(M0.data[22579u]), data_segment_data_314, 8);
  memcpy(&(M0.data[22587u]), data_segment_data_315, 10);
  memcpy(&(M0.data[22597u]), data_segment_data_316, 9);
  memcpy(&(M0.data[22606u]), data_segment_data_317, 12);
  memcpy(&(M0.data[22618u]), data_segment_data_318, 9);
  memcpy(&(M0.data[22627u]), data_segment_data_319, 9);
  memcpy(&(M0.data[22636u]), data_segment_data_320, 8);
  memcpy(&(M0.data[22644u]), data_segment_data_321, 9);
  memcpy(&(M0.data[22653u]), data_segment_data_322, 12);
  memcpy(&(M0.data[22665u]), data_segment_data_323, 13);
  memcpy(&(M0.data[22678u]), data_segment_data_324, 12);
  memcpy(&(M0.data[22690u]), data_segment_data_325, 9);
  memcpy(&(M0.data[22699u]), data_segment_data_326, 13);
  memcpy(&(M0.data[22712u]), data_segment_data_327, 14);
  memcpy(&(M0.data[22726u]), data_segment_data_328, 24);
  memcpy(&(M0.data[22750u]), data_segment_data_329, 29);
  memcpy(&(M0.data[22779u]), data_segment_data_330, 17);
  memcpy(&(M0.data[22796u]), data_segment_data_331, 25);
  memcpy(&(M0.data[22821u]), data_segment_data_332, 11);
  memcpy(&(M0.data[22832u]), data_segment_data_333, 23);
  memcpy(&(M0.data[22855u]), data_segment_data_334, 10);
  memcpy(&(M0.data[22865u]), data_segment_data_335, 12);
  memcpy(&(M0.data[22877u]), data_segment_data_336, 12);
  memcpy(&(M0.data[22889u]), data_segment_data_337, 9);
  memcpy(&(M0.data[22898u]), data_segment_data_338, 7);
  memcpy(&(M0.data[22905u]), data_segment_data_339, 11);
  memcpy(&(M0.data[22916u]), data_segment_data_340, 8);
  memcpy(&(M0.data[22924u]), data_segment_data_341, 18);
  memcpy(&(M0.data[22942u]), data_segment_data_342, 16);
  memcpy(&(M0.data[22958u]), data_segment_data_343, 23);
  memcpy(&(M0.data[22981u]), data_segment_data_344, 14);
  memcpy(&(M0.data[22995u]), data_segment_data_345, 17);
  memcpy(&(M0.data[23012u]), data_segment_data_346, 11);
  memcpy(&(M0.data[23023u]), data_segment_data_347, 14);
  memcpy(&(M0.data[23037u]), data_segment_data_348, 12);
  memcpy(&(M0.data[23049u]), data_segment_data_349, 9);
  memcpy(&(M0.data[23058u]), data_segment_data_350, 9);
  memcpy(&(M0.data[23067u]), data_segment_data_351, 12);
  memcpy(&(M0.data[23079u]), data_segment_data_352, 14);
  memcpy(&(M0.data[23093u]), data_segment_data_353, 12);
  memcpy(&(M0.data[23105u]), data_segment_data_354, 12);
  memcpy(&(M0.data[23117u]), data_segment_data_355, 12);
  memcpy(&(M0.data[23129u]), data_segment_data_356, 12);
  memcpy(&(M0.data[23141u]), data_segment_data_357, 9);
  memcpy(&(M0.data[23150u]), data_segment_data_358, 10);
  memcpy(&(M0.data[23160u]), data_segment_data_359, 8);
  memcpy(&(M0.data[23168u]), data_segment_data_360, 9);
  memcpy(&(M0.data[23177u]), data_segment_data_361, 7);
  memcpy(&(M0.data[23184u]), data_segment_data_362, 9);
  memcpy(&(M0.data[23193u]), data_segment_data_363, 8);
  memcpy(&(M0.data[23201u]), data_segment_data_364, 8);
  memcpy(&(M0.data[23209u]), data_segment_data_365, 7);
  memcpy(&(M0.data[23216u]), data_segment_data_366, 11);
  memcpy(&(M0.data[23227u]), data_segment_data_367, 14);
  memcpy(&(M0.data[23241u]), data_segment_data_368, 7);
  memcpy(&(M0.data[23248u]), data_segment_data_369, 8);
  memcpy(&(M0.data[23256u]), data_segment_data_370, 10);
  memcpy(&(M0.data[23266u]), data_segment_data_371, 11);
  memcpy(&(M0.data[23277u]), data_segment_data_372, 7);
  memcpy(&(M0.data[23284u]), data_segment_data_373, 7);
  memcpy(&(M0.data[23291u]), data_segment_data_374, 8);
  memcpy(&(M0.data[23299u]), data_segment_data_375, 14);
  memcpy(&(M0.data[23313u]), data_segment_data_376, 7);
  memcpy(&(M0.data[23320u]), data_segment_data_377, 8);
  memcpy(&(M0.data[23328u]), data_segment_data_378, 13);
  memcpy(&(M0.data[23341u]), data_segment_data_379, 13);
  memcpy(&(M0.data[23354u]), data_segment_data_380, 8);
  memcpy(&(M0.data[23362u]), data_segment_data_381, 14);
  memcpy(&(M0.data[23376u]), data_segment_data_382, 9);
  memcpy(&(M0.data[23385u]), data_segment_data_383, 6);
  memcpy(&(M0.data[23391u]), data_segment_data_384, 12);
  memcpy(&(M0.data[23403u]), data_segment_data_385, 9);
  memcpy(&(M0.data[23412u]), data_segment_data_386, 19);
  memcpy(&(M0.data[23431u]), data_segment_data_387, 12);
  memcpy(&(M0.data[23443u]), data_segment_data_388, 20);
  memcpy(&(M0.data[23463u]), data_segment_data_389, 15);
  memcpy(&(M0.data[23478u]), data_segment_data_390, 11);
  memcpy(&(M0.data[23489u]), data_segment_data_391, 20);
  memcpy(&(M0.data[23509u]), data_segment_data_392, 20);
  memcpy(&(M0.data[23529u]), data_segment_data_393, 8);
  memcpy(&(M0.data[23537u]), data_segment_data_394, 15);
  memcpy(&(M0.data[23552u]), data_segment_data_395, 8);
  memcpy(&(M0.data[23560u]), data_segment_data_396, 11);
  memcpy(&(M0.data[23571u]), data_segment_data_397, 16);
  memcpy(&(M0.data[23587u]), data_segment_data_398, 17);
  memcpy(&(M0.data[23604u]), data_segment_data_399, 21);
  memcpy(&(M0.data[23625u]), data_segment_data_400, 12);
  memcpy(&(M0.data[23637u]), data_segment_data_401, 13);
  memcpy(&(M0.data[23650u]), data_segment_data_402, 14);
  memcpy(&(M0.data[23664u]), data_segment_data_403, 7);
  memcpy(&(M0.data[23671u]), data_segment_data_404, 13);
  memcpy(&(M0.data[23684u]), data_segment_data_405, 14);
  memcpy(&(M0.data[23698u]), data_segment_data_406, 12);
  memcpy(&(M0.data[23710u]), data_segment_data_407, 8);
  memcpy(&(M0.data[23718u]), data_segment_data_408, 28);
  memcpy(&(M0.data[23746u]), data_segment_data_409, 32);
  memcpy(&(M0.data[23778u]), data_segment_data_410, 15);
  memcpy(&(M0.data[23793u]), data_segment_data_411, 19);
  memcpy(&(M0.data[23812u]), data_segment_data_412, 29);
  memcpy(&(M0.data[23841u]), data_segment_data_413, 18);
  memcpy(&(M0.data[23859u]), data_segment_data_414, 26);
  memcpy(&(M0.data[23885u]), data_segment_data_415, 23);
  memcpy(&(M0.data[23908u]), data_segment_data_416, 10);
  memcpy(&(M0.data[23918u]), data_segment_data_417, 8);
  memcpy(&(M0.data[23926u]), data_segment_data_418, 10);
  memcpy(&(M0.data[23936u]), data_segment_data_419, 10);
  memcpy(&(M0.data[23946u]), data_segment_data_420, 7);
  memcpy(&(M0.data[23953u]), data_segment_data_421, 8);
  memcpy(&(M0.data[23961u]), data_segment_data_422, 9);
  memcpy(&(M0.data[23970u]), data_segment_data_423, 14);
  memcpy(&(M0.data[23984u]), data_segment_data_424, 8);
  memcpy(&(M0.data[23992u]), data_segment_data_425, 24);
  memcpy(&(M0.data[24016u]), data_segment_data_426, 31);
  memcpy(&(M0.data[24047u]), data_segment_data_427, 7);
  memcpy(&(M0.data[24054u]), data_segment_data_428, 7);
  memcpy(&(M0.data[24061u]), data_segment_data_429, 8);
  memcpy(&(M0.data[24069u]), data_segment_data_430, 19);
  memcpy(&(M0.data[24088u]), data_segment_data_431, 22);
  memcpy(&(M0.data[24110u]), data_segment_data_432, 8);
  memcpy(&(M0.data[24118u]), data_segment_data_433, 8);
  memcpy(&(M0.data[24126u]), data_segment_data_434, 10);
  memcpy(&(M0.data[24136u]), data_segment_data_435, 10);
  memcpy(&(M0.data[24146u]), data_segment_data_436, 15);
  memcpy(&(M0.data[24161u]), data_segment_data_437, 16);
  memcpy(&(M0.data[24177u]), data_segment_data_438, 15);
  memcpy(&(M0.data[24192u]), data_segment_data_439, 14);
  memcpy(&(M0.data[24206u]), data_segment_data_440, 16);
  memcpy(&(M0.data[24222u]), data_segment_data_441, 18);
  memcpy(&(M0.data[24240u]), data_segment_data_442, 26);
  memcpy(&(M0.data[24266u]), data_segment_data_443, 39);
  memcpy(&(M0.data[24305u]), data_segment_data_444, 22);
  memcpy(&(M0.data[24327u]), data_segment_data_445, 20);
  memcpy(&(M0.data[24347u]), data_segment_data_446, 19);
  memcpy(&(M0.data[24366u]), data_segment_data_447, 20);
  memcpy(&(M0.data[24386u]), data_segment_data_448, 9);
  memcpy(&(M0.data[24395u]), data_segment_data_449, 10);
  memcpy(&(M0.data[24405u]), data_segment_data_450, 13);
  memcpy(&(M0.data[24418u]), data_segment_data_451, 16);
  memcpy(&(M0.data[24434u]), data_segment_data_452, 12);
  memcpy(&(M0.data[24446u]), data_segment_data_453, 7);
  memcpy(&(M0.data[24453u]), data_segment_data_454, 9);
  memcpy(&(M0.data[24462u]), data_segment_data_455, 13);
  memcpy(&(M0.data[24475u]), data_segment_data_456, 9);
  memcpy(&(M0.data[24484u]), data_segment_data_457, 10);
  memcpy(&(M0.data[24494u]), data_segment_data_458, 15);
  memcpy(&(M0.data[24509u]), data_segment_data_459, 11);
  memcpy(&(M0.data[24520u]), data_segment_data_460, 8);
  memcpy(&(M0.data[24528u]), data_segment_data_461, 9);
  memcpy(&(M0.data[24537u]), data_segment_data_462, 15);
  memcpy(&(M0.data[24552u]), data_segment_data_463, 20);
  memcpy(&(M0.data[24572u]), data_segment_data_464, 11);
  memcpy(&(M0.data[24583u]), data_segment_data_465, 16);
  memcpy(&(M0.data[24600u]), data_segment_data_466, 1876);
  memcpy(&(M0.data[26476u]), data_segment_data_467, 14);
  memcpy(&(M0.data[26492u]), data_segment_data_468, 8);
  memcpy(&(M0.data[26512u]), data_segment_data_469, 17);
  memcpy(&(M0.data[26544u]), data_segment_data_470, 17);
  memcpy(&(M0.data[26576u]), data_segment_data_471, 128);
  memcpy(&(M0.data[26704u]), data_segment_data_472, 16);
  memcpy(&(M0.data[26720u]), data_segment_data_473, 16);
  memcpy(&(M0.data[26736u]), data_segment_data_474, 16);
  memcpy(&(M0.data[26752u]), data_segment_data_475, 8);
  memcpy(&(M0.data[26760u]), data_segment_data_476, 60);
  memcpy(&(M0.data[26832u]), data_segment_data_477, 64);
  memcpy(&(M0.data[26896u]), data_segment_data_478, 8);
  memcpy(&(M0.data[26904u]), data_segment_data_479, 60);
  memcpy(&(M0.data[26964u]), data_segment_data_480, 60);
  memcpy(&(M0.data[27024u]), data_segment_data_481, 60);
  memcpy(&(M0.data[27088u]), data_segment_data_482, 24);
  memcpy(&(M0.data[27112u]), data_segment_data_483, 16);
  memcpy(&(M0.data[27128u]), data_segment_data_484, 8);
  memcpy(&(M0.data[27136u]), data_segment_data_485, 8);
  memcpy(&(M0.data[27144u]), data_segment_data_486, 60);
  memcpy(&(M0.data[27204u]), data_segment_data_487, 60);
  memcpy(&(M0.data[27264u]), data_segment_data_488, 60);
  memcpy(&(M0.data[27324u]), data_segment_data_489, 60);
  memcpy(&(M0.data[27384u]), data_segment_data_490, 60);
  memcpy(&(M0.data[27444u]), data_segment_data_491, 60);
  memcpy(&(M0.data[27504u]), data_segment_data_492, 32);
  memcpy(&(M0.data[27536u]), data_segment_data_493, 32);
  memcpy(&(M0.data[27568u]), data_segment_data_494, 32);
  memcpy(&(M0.data[27600u]), data_segment_data_495, 32);
  memcpy(&(M0.data[27632u]), data_segment_data_496, 16);
  memcpy(&(M0.data[27648u]), data_segment_data_497, 16);
  memcpy(&(M0.data[27664u]), data_segment_data_498, 2760);
  memcpy(&(M0.data[30432u]), data_segment_data_499, 64);
  memcpy(&(M0.data[30496u]), data_segment_data_500, 60);
  memcpy(&(M0.data[30556u]), data_segment_data_501, 60);
  memcpy(&(M0.data[30616u]), data_segment_data_502, 16);
  memcpy(&(M0.data[30632u]), data_segment_data_503, 60);
  memcpy(&(M0.data[30692u]), data_segment_data_504, 60);
  memcpy(&(M0.data[30752u]), data_segment_data_505, 112);
  memcpy(&(M0.data[30864u]), data_segment_data_506, 16);
  memcpy(&(M0.data[30880u]), data_segment_data_507, 8);
  memcpy(&(M0.data[30888u]), data_segment_data_508, 12);
  memcpy(&(M0.data[30900u]), data_segment_data_509, 12);
  memcpy(&(M0.data[30912u]), data_segment_data_510, 12);
  memcpy(&(M0.data[30924u]), data_segment_data_511, 8);
  memcpy(&(M0.data[30932u]), data_segment_data_512, 8);
  memcpy(&(M0.data[30940u]), data_segment_data_513, 12);
  memcpy(&(M0.data[30952u]), data_segment_data_514, 8);
  memcpy(&(M0.data[30960u]), data_segment_data_515, 60);
  memcpy(&(M0.data[31020u]), data_segment_data_516, 12);
  memcpy(&(M0.data[31032u]), data_segment_data_517, 8);
  memcpy(&(M0.data[31040u]), data_segment_data_518, 8);
  memcpy(&(M0.data[31048u]), data_segment_data_519, 12);
  memcpy(&(M0.data[31060u]), data_segment_data_520, 8);
  memcpy(&(M0.data[31068u]), data_segment_data_521, 60);
  memcpy(&(M0.data[31136u]), data_segment_data_522, 16);
  memcpy(&(M0.data[31152u]), data_segment_data_523, 60);
  memcpy(&(M0.data[31212u]), data_segment_data_524, 60);
  memcpy(&(M0.data[31272u]), data_segment_data_525, 60);
  memcpy(&(M0.data[31332u]), data_segment_data_526, 60);
  memcpy(&(M0.data[31392u]), data_segment_data_527, 60);
  memcpy(&(M0.data[31452u]), data_segment_data_528, 60);
  memcpy(&(M0.data[31512u]), data_segment_data_529, 60);
  memcpy(&(M0.data[31572u]), data_segment_data_530, 60);
  memcpy(&(M0.data[31632u]), data_segment_data_531, 60);
  memcpy(&(M0.data[31692u]), data_segment_data_532, 60);
  memcpy(&(M0.data[31752u]), data_segment_data_533, 60);
  memcpy(&(M0.data[31812u]), data_segment_data_534, 60);
  memcpy(&(M0.data[31872u]), data_segment_data_535, 60);
  memcpy(&(M0.data[31932u]), data_segment_data_536, 60);
  memcpy(&(M0.data[31992u]), data_segment_data_537, 60);
  memcpy(&(M0.data[32052u]), data_segment_data_538, 60);
  memcpy(&(M0.data[32112u]), data_segment_data_539, 60);
  memcpy(&(M0.data[32172u]), data_segment_data_540, 60);
  memcpy(&(M0.data[32232u]), data_segment_data_541, 60);
  memcpy(&(M0.data[32292u]), data_segment_data_542, 60);
  memcpy(&(M0.data[32352u]), data_segment_data_543, 60);
  memcpy(&(M0.data[32412u]), data_segment_data_544, 60);
  memcpy(&(M0.data[32472u]), data_segment_data_545, 60);
  memcpy(&(M0.data[32532u]), data_segment_data_546, 60);
  memcpy(&(M0.data[32592u]), data_segment_data_547, 60);
  memcpy(&(M0.data[32652u]), data_segment_data_548, 60);
  memcpy(&(M0.data[32712u]), data_segment_data_549, 60);
  memcpy(&(M0.data[32772u]), data_segment_data_550, 60);
  memcpy(&(M0.data[32832u]), data_segment_data_551, 60);
  memcpy(&(M0.data[32896u]), data_segment_data_552, 16);
  memcpy(&(M0.data[32912u]), data_segment_data_553, 16);
  memcpy(&(M0.data[32928u]), data_segment_data_554, 60);
  memcpy(&(M0.data[32988u]), data_segment_data_555, 60);
  memcpy(&(M0.data[33048u]), data_segment_data_556, 60);
  memcpy(&(M0.data[33108u]), data_segment_data_557, 60);
  memcpy(&(M0.data[33168u]), data_segment_data_558, 60);
  memcpy(&(M0.data[33228u]), data_segment_data_559, 60);
  memcpy(&(M0.data[33288u]), data_segment_data_560, 16);
  memcpy(&(M0.data[33304u]), data_segment_data_561, 60);
  memcpy(&(M0.data[33364u]), data_segment_data_562, 60);
  memcpy(&(M0.data[33424u]), data_segment_data_563, 32);
  memcpy(&(M0.data[33456u]), data_segment_data_564, 16);
  memcpy(&(M0.data[33472u]), data_segment_data_565, 12);
  memcpy(&(M0.data[33484u]), data_segment_data_566, 8);
  memcpy(&(M0.data[33492u]), data_segment_data_567, 8);
  memcpy(&(M0.data[33500u]), data_segment_data_568, 8);
  memcpy(&(M0.data[33508u]), data_segment_data_569, 60);
  memcpy(&(M0.data[33568u]), data_segment_data_570, 16);
  memcpy(&(M0.data[33584u]), data_segment_data_571, 60);
  memcpy(&(M0.data[33648u]), data_segment_data_572, 16);
  memcpy(&(M0.data[33664u]), data_segment_data_573, 16);
  memcpy(&(M0.data[33680u]), data_segment_data_574, 8);
  memcpy(&(M0.data[33688u]), data_segment_data_575, 12);
  memcpy(&(M0.data[33700u]), data_segment_data_576, 12);
  memcpy(&(M0.data[33712u]), data_segment_data_577, 4);
  memcpy(&(M0.data[33716u]), data_segment_data_578, 16);
  memcpy(&(M0.data[33744u]), data_segment_data_579, 16);
  memcpy(&(M0.data[33760u]), data_segment_data_580, 60);
  memcpy(&(M0.data[33824u]), data_segment_data_581, 88);
  memcpy(&(M0.data[33912u]), data_segment_data_582, 16);
  memcpy(&(M0.data[33928u]), data_segment_data_583, 12);
  memcpy(&(M0.data[33940u]), data_segment_data_584, 12);
  memcpy(&(M0.data[33952u]), data_segment_data_585, 8);
  memcpy(&(M0.data[33960u]), data_segment_data_586, 8);
  memcpy(&(M0.data[33968u]), data_segment_data_587, 8);
  memcpy(&(M0.data[33976u]), data_segment_data_588, 8);
  memcpy(&(M0.data[33984u]), data_segment_data_589, 8);
  memcpy(&(M0.data[33992u]), data_segment_data_590, 8);
  memcpy(&(M0.data[34000u]), data_segment_data_591, 8);
  memcpy(&(M0.data[34008u]), data_segment_data_592, 8);
  memcpy(&(M0.data[34016u]), data_segment_data_593, 12);
  memcpy(&(M0.data[34028u]), data_segment_data_594, 60);
  memcpy(&(M0.data[34088u]), data_segment_data_595, 60);
  memcpy(&(M0.data[34160u]), data_segment_data_596, 128);
  memcpy(&(M0.data[34288u]), data_segment_data_597, 12);
  memcpy(&(M0.data[34300u]), data_segment_data_598, 60);
  memcpy(&(M0.data[34368u]), data_segment_data_599, 16);
  memcpy(&(M0.data[34384u]), data_segment_data_600, 16);
  memcpy(&(M0.data[34400u]), data_segment_data_601, 8);
  memcpy(&(M0.data[34408u]), data_segment_data_602, 8);
  memcpy(&(M0.data[34416u]), data_segment_data_603, 8);
  memcpy(&(M0.data[34424u]), data_segment_data_604, 60);
  memcpy(&(M0.data[34484u]), data_segment_data_605, 60);
  memcpy(&(M0.data[34544u]), data_segment_data_606, 32);
  memcpy(&(M0.data[34576u]), data_segment_data_607, 24);
  memcpy(&(M0.data[34600u]), data_segment_data_608, 16);
  memcpy(&(M0.data[34616u]), data_segment_data_609, 8);
  memcpy(&(M0.data[34624u]), data_segment_data_610, 8);
  memcpy(&(M0.data[34632u]), data_segment_data_611, 8);
  memcpy(&(M0.data[34640u]), data_segment_data_612, 60);
  memcpy(&(M0.data[34700u]), data_segment_data_613, 8);
  memcpy(&(M0.data[34708u]), data_segment_data_614, 60);
  memcpy(&(M0.data[34768u]), data_segment_data_615, 60);
  memcpy(&(M0.data[34828u]), data_segment_data_616, 60);
  memcpy(&(M0.data[34888u]), data_segment_data_617, 60);
  memcpy(&(M0.data[34948u]), data_segment_data_618, 60);
  memcpy(&(M0.data[35008u]), data_segment_data_619, 144);
  memcpy(&(M0.data[35152u]), data_segment_data_620, 16);
  memcpy(&(M0.data[35168u]), data_segment_data_621, 12);
  memcpy(&(M0.data[35180u]), data_segment_data_622, 12);
  memcpy(&(M0.data[35192u]), data_segment_data_623, 12);
  memcpy(&(M0.data[35204u]), data_segment_data_624, 8);
  memcpy(&(M0.data[35212u]), data_segment_data_625, 8);
  memcpy(&(M0.data[35220u]), data_segment_data_626, 8);
  memcpy(&(M0.data[35228u]), data_segment_data_627, 8);
  memcpy(&(M0.data[35236u]), data_segment_data_628, 8);
  memcpy(&(M0.data[35244u]), data_segment_data_629, 8);
  memcpy(&(M0.data[35252u]), data_segment_data_630, 8);
  memcpy(&(M0.data[35260u]), data_segment_data_631, 8);
  memcpy(&(M0.data[35268u]), data_segment_data_632, 8);
  memcpy(&(M0.data[35276u]), data_segment_data_633, 8);
  memcpy(&(M0.data[35284u]), data_segment_data_634, 8);
  memcpy(&(M0.data[35292u]), data_segment_data_635, 8);
  memcpy(&(M0.data[35300u]), data_segment_data_636, 8);
  memcpy(&(M0.data[35308u]), data_segment_data_637, 8);
  memcpy(&(M0.data[35328u]), data_segment_data_638, 72);
  memcpy(&(M0.data[35400u]), data_segment_data_639, 16);
  memcpy(&(M0.data[35416u]), data_segment_data_640, 60);
  memcpy(&(M0.data[35476u]), data_segment_data_641, 8);
  memcpy(&(M0.data[35484u]), data_segment_data_642, 60);
  memcpy(&(M0.data[35544u]), data_segment_data_643, 16);
  memcpy(&(M0.data[35560u]), data_segment_data_644, 8);
  memcpy(&(M0.data[35568u]), data_segment_data_645, 12);
  memcpy(&(M0.data[35580u]), data_segment_data_646, 12);
  memcpy(&(M0.data[35592u]), data_segment_data_647, 12);
  memcpy(&(M0.data[35604u]), data_segment_data_648, 12);
  memcpy(&(M0.data[35616u]), data_segment_data_649, 12);
  memcpy(&(M0.data[35628u]), data_segment_data_650, 12);
  memcpy(&(M0.data[35640u]), data_segment_data_651, 12);
  memcpy(&(M0.data[35652u]), data_segment_data_652, 12);
  memcpy(&(M0.data[35664u]), data_segment_data_653, 12);
  memcpy(&(M0.data[35676u]), data_segment_data_654, 12);
  memcpy(&(M0.data[35688u]), data_segment_data_655, 12);
  memcpy(&(M0.data[35700u]), data_segment_data_656, 12);
  memcpy(&(M0.data[35712u]), data_segment_data_657, 8);
  memcpy(&(M0.data[35720u]), data_segment_data_658, 12);
  memcpy(&(M0.data[35732u]), data_segment_data_659, 12);
  memcpy(&(M0.data[35744u]), data_segment_data_660, 12);
  memcpy(&(M0.data[35756u]), data_segment_data_661, 8);
  memcpy(&(M0.data[35764u]), data_segment_data_662, 8);
  memcpy(&(M0.data[35772u]), data_segment_data_663, 8);
  memcpy(&(M0.data[35780u]), data_segment_data_664, 8);
  memcpy(&(M0.data[35788u]), data_segment_data_665, 8);
  memcpy(&(M0.data[35796u]), data_segment_data_666, 8);
  memcpy(&(M0.data[35804u]), data_segment_data_667, 8);
  memcpy(&(M0.data[35812u]), data_segment_data_668, 8);
  memcpy(&(M0.data[35820u]), data_segment_data_669, 8);
  memcpy(&(M0.data[35828u]), data_segment_data_670, 12);
  memcpy(&(M0.data[35840u]), data_segment_data_671, 12);
  memcpy(&(M0.data[35852u]), data_segment_data_672, 60);
  memcpy(&(M0.data[35912u]), data_segment_data_673, 8);
  memcpy(&(M0.data[35920u]), data_segment_data_674, 7);
  memcpy(&(M0.data[35936u]), data_segment_data_675, 216);
  memcpy(&(M0.data[36152u]), data_segment_data_676, 16);
  memcpy(&(M0.data[36168u]), data_segment_data_677, 60);
  memcpy(&(M0.data[36240u]), data_segment_data_678, 216);
  memcpy(&(M0.data[36456u]), data_segment_data_679, 16);
  memcpy(&(M0.data[36472u]), data_segment_data_680, 16);
  memcpy(&(M0.data[36488u]), data_segment_data_681, 60);
  memcpy(&(M0.data[36548u]), data_segment_data_682, 16);
  memcpy(&(M0.data[36564u]), data_segment_data_683, 60);
  memcpy(&(M0.data[36624u]), data_segment_data_684, 88);
  memcpy(&(M0.data[36712u]), data_segment_data_685, 16);
  memcpy(&(M0.data[36728u]), data_segment_data_686, 12);
  memcpy(&(M0.data[36740u]), data_segment_data_687, 8);
  memcpy(&(M0.data[36748u]), data_segment_data_688, 8);
  memcpy(&(M0.data[36756u]), data_segment_data_689, 60);
  memcpy(&(M0.data[36816u]), data_segment_data_690, 16);
  memcpy(&(M0.data[36832u]), data_segment_data_691, 16);
  memcpy(&(M0.data[36848u]), data_segment_data_692, 12);
  memcpy(&(M0.data[36860u]), data_segment_data_693, 8);
  memcpy(&(M0.data[36868u]), data_segment_data_694, 12);
  memcpy(&(M0.data[36880u]), data_segment_data_695, 10);
  memcpy(&(M0.data[36896u]), data_segment_data_696, 37);
  memcpy(&(M0.data[36936u]), data_segment_data_697, 60);
  memcpy(&(M0.data[36996u]), data_segment_data_698, 60);
  memcpy(&(M0.data[37056u]), data_segment_data_699, 60);
  memcpy(&(M0.data[37116u]), data_segment_data_700, 8);
  memcpy(&(M0.data[37124u]), data_segment_data_701, 8);
  memcpy(&(M0.data[37132u]), data_segment_data_702, 60);
  memcpy(&(M0.data[37192u]), data_segment_data_703, 60);
  memcpy(&(M0.data[37252u]), data_segment_data_704, 8);
  memcpy(&(M0.data[37260u]), data_segment_data_705, 8);
  memcpy(&(M0.data[37268u]), data_segment_data_706, 8);
  memcpy(&(M0.data[37276u]), data_segment_data_707, 8);
  memcpy(&(M0.data[37284u]), data_segment_data_708, 12);
  memcpy(&(M0.data[37296u]), data_segment_data_709, 12);
  memcpy(&(M0.data[37308u]), data_segment_data_710, 12);
  memcpy(&(M0.data[37320u]), data_segment_data_711, 12);
  memcpy(&(M0.data[37332u]), data_segment_data_712, 8);
  memcpy(&(M0.data[37340u]), data_segment_data_713, 12);
  memcpy(&(M0.data[37352u]), data_segment_data_714, 8);
  memcpy(&(M0.data[37360u]), data_segment_data_715, 8);
  memcpy(&(M0.data[37368u]), data_segment_data_716, 12);
  memcpy(&(M0.data[37380u]), data_segment_data_717, 8);
  memcpy(&(M0.data[37392u]), data_segment_data_718, 16);
  memcpy(&(M0.data[37408u]), data_segment_data_719, 16);
  memcpy(&(M0.data[37424u]), data_segment_data_720, 12);
  memcpy(&(M0.data[37436u]), data_segment_data_721, 8);
  memcpy(&(M0.data[37444u]), data_segment_data_722, 8);
  memcpy(&(M0.data[37452u]), data_segment_data_723, 8);
  memcpy(&(M0.data[37460u]), data_segment_data_724, 8);
  memcpy(&(M0.data[37468u]), data_segment_data_725, 8);
  memcpy(&(M0.data[37476u]), data_segment_data_726, 8);
  memcpy(&(M0.data[37484u]), data_segment_data_727, 12);
  memcpy(&(M0.data[37496u]), data_segment_data_728, 8);
  memcpy(&(M0.data[37504u]), data_segment_data_729, 8);
  memcpy(&(M0.data[37512u]), data_segment_data_730, 8);
  memcpy(&(M0.data[37520u]), data_segment_data_731, 8);
  memcpy(&(M0.data[37528u]), data_segment_data_732, 12);
  memcpy(&(M0.data[37540u]), data_segment_data_733, 12);
  memcpy(&(M0.data[37552u]), data_segment_data_734, 8);
  memcpy(&(M0.data[37560u]), data_segment_data_735, 8);
  memcpy(&(M0.data[37568u]), data_segment_data_736, 8);
  memcpy(&(M0.data[37576u]), data_segment_data_737, 12);
  memcpy(&(M0.data[37588u]), data_segment_data_738, 12);
  memcpy(&(M0.data[37600u]), data_segment_data_739, 8);
  memcpy(&(M0.data[37608u]), data_segment_data_740, 8);
  memcpy(&(M0.data[37616u]), data_segment_data_741, 12);
  memcpy(&(M0.data[37628u]), data_segment_data_742, 12);
  memcpy(&(M0.data[37640u]), data_segment_data_743, 12);
  memcpy(&(M0.data[37652u]), data_segment_data_744, 12);
  memcpy(&(M0.data[37664u]), data_segment_data_745, 8);
  memcpy(&(M0.data[37672u]), data_segment_data_746, 8);
  memcpy(&(M0.data[37680u]), data_segment_data_747, 8);
  memcpy(&(M0.data[37688u]), data_segment_data_748, 8);
  memcpy(&(M0.data[37696u]), data_segment_data_749, 8);
  memcpy(&(M0.data[37704u]), data_segment_data_750, 8);
  memcpy(&(M0.data[37712u]), data_segment_data_751, 8);
  memcpy(&(M0.data[37728u]), data_segment_data_752, 744);
  memcpy(&(M0.data[38472u]), data_segment_data_753, 16);
  memcpy(&(M0.data[38488u]), data_segment_data_754, 8);
  memcpy(&(M0.data[38496u]), data_segment_data_755, 16);
  memcpy(&(M0.data[38512u]), data_segment_data_756, 8);
  memcpy(&(M0.data[38528u]), data_segment_data_757, 24);
  memcpy(&(M0.data[38552u]), data_segment_data_758, 16);
  memcpy(&(M0.data[38568u]), data_segment_data_759, 8);
  memcpy(&(M0.data[38576u]), data_segment_data_760, 32);
  memcpy(&(M0.data[38608u]), data_segment_data_761, 16);
  memcpy(&(M0.data[38624u]), data_segment_data_762, 184);
  memcpy(&(M0.data[38808u]), data_segment_data_763, 12);
  memcpy(&(M0.data[38820u]), data_segment_data_764, 8);
  memcpy(&(M0.data[38832u]), data_segment_data_765, 32);
  memcpy(&(M0.data[38864u]), data_segment_data_766, 336);
  memcpy(&(M0.data[39200u]), data_segment_data_767, 16);
  memcpy(&(M0.data[39216u]), data_segment_data_768, 12);
  memcpy(&(M0.data[39228u]), data_segment_data_769, 8);
  memcpy(&(M0.data[39236u]), data_segment_data_770, 8);
  memcpy(&(M0.data[39244u]), data_segment_data_771, 8);
  memcpy(&(M0.data[39252u]), data_segment_data_772, 8);
  memcpy(&(M0.data[39260u]), data_segment_data_773, 8);
  memcpy(&(M0.data[39268u]), data_segment_data_774, 8);
  memcpy(&(M0.data[39276u]), data_segment_data_775, 8);
  memcpy(&(M0.data[39284u]), data_segment_data_776, 8);
  memcpy(&(M0.data[39292u]), data_segment_data_777, 8);
  memcpy(&(M0.data[39300u]), data_segment_data_778, 8);
  memcpy(&(M0.data[39308u]), data_segment_data_779, 8);
  memcpy(&(M0.data[39316u]), data_segment_data_780, 8);
  memcpy(&(M0.data[39324u]), data_segment_data_781, 8);
  memcpy(&(M0.data[39332u]), data_segment_data_782, 8);
  memcpy(&(M0.data[39340u]), data_segment_data_783, 8);
  memcpy(&(M0.data[39348u]), data_segment_data_784, 8);
  memcpy(&(M0.data[39356u]), data_segment_data_785, 8);
  memcpy(&(M0.data[39364u]), data_segment_data_786, 8);
  memcpy(&(M0.data[39372u]), data_segment_data_787, 8);
  memcpy(&(M0.data[39380u]), data_segment_data_788, 8);
  memcpy(&(M0.data[39388u]), data_segment_data_789, 8);
  memcpy(&(M0.data[39396u]), data_segment_data_790, 8);
  memcpy(&(M0.data[39404u]), data_segment_data_791, 8);
  memcpy(&(M0.data[39412u]), data_segment_data_792, 8);
  memcpy(&(M0.data[39420u]), data_segment_data_793, 8);
  memcpy(&(M0.data[39428u]), data_segment_data_794, 8);
  memcpy(&(M0.data[39436u]), data_segment_data_795, 8);
  memcpy(&(M0.data[39444u]), data_segment_data_796, 8);
  memcpy(&(M0.data[39452u]), data_segment_data_797, 8);
  memcpy(&(M0.data[39460u]), data_segment_data_798, 8);
  memcpy(&(M0.data[39468u]), data_segment_data_799, 8);
  memcpy(&(M0.data[39476u]), data_segment_data_800, 8);
  memcpy(&(M0.data[39484u]), data_segment_data_801, 8);
  memcpy(&(M0.data[39492u]), data_segment_data_802, 8);
  memcpy(&(M0.data[39500u]), data_segment_data_803, 8);
  memcpy(&(M0.data[39508u]), data_segment_data_804, 8);
  memcpy(&(M0.data[39516u]), data_segment_data_805, 8);
  memcpy(&(M0.data[39524u]), data_segment_data_806, 8);
  memcpy(&(M0.data[39536u]), data_segment_data_807, 96);
  memcpy(&(M0.data[39632u]), data_segment_data_808, 16);
  memcpy(&(M0.data[39648u]), data_segment_data_809, 8);
  memcpy(&(M0.data[39656u]), data_segment_data_810, 8);
  memcpy(&(M0.data[39664u]), data_segment_data_811, 8);
  memcpy(&(M0.data[39672u]), data_segment_data_812, 8);
  memcpy(&(M0.data[39680u]), data_segment_data_813, 8);
  memcpy(&(M0.data[39688u]), data_segment_data_814, 8);
  memcpy(&(M0.data[39696u]), data_segment_data_815, 8);
  memcpy(&(M0.data[39704u]), data_segment_data_816, 8);
  memcpy(&(M0.data[39712u]), data_segment_data_817, 8);
  memcpy(&(M0.data[39720u]), data_segment_data_818, 8);
  memcpy(&(M0.data[39728u]), data_segment_data_819, 40);
  memcpy(&(M0.data[39768u]), data_segment_data_820, 16);
  memcpy(&(M0.data[39784u]), data_segment_data_821, 8);
  memcpy(&(M0.data[39792u]), data_segment_data_822, 8);
  memcpy(&(M0.data[39800u]), data_segment_data_823, 8);
  memcpy(&(M0.data[39808u]), data_segment_data_824, 8);
  memcpy(&(M0.data[39816u]), data_segment_data_825, 12);
  memcpy(&(M0.data[39828u]), data_segment_data_826, 12);
  memcpy(&(M0.data[39840u]), data_segment_data_827, 12);
  memcpy(&(M0.data[39852u]), data_segment_data_828, 8);
  memcpy(&(M0.data[39872u]), data_segment_data_829, 48);
  memcpy(&(M0.data[39920u]), data_segment_data_830, 16);
  memcpy(&(M0.data[39936u]), data_segment_data_831, 12);
  memcpy(&(M0.data[39948u]), data_segment_data_832, 12);
  memcpy(&(M0.data[39960u]), data_segment_data_833, 8);
  memcpy(&(M0.data[39968u]), data_segment_data_834, 96);
  memcpy(&(M0.data[40064u]), data_segment_data_835, 16);
  memcpy(&(M0.data[40080u]), data_segment_data_836, 16);
  memcpy(&(M0.data[40096u]), data_segment_data_837, 16);
  memcpy(&(M0.data[40112u]), data_segment_data_838, 20);
  memcpy(&(M0.data[40132u]), data_segment_data_839, 12);
  memcpy(&(M0.data[40144u]), data_segment_data_840, 24);
  memcpy(&(M0.data[40168u]), data_segment_data_841, 20);
  memcpy(&(M0.data[40192u]), data_segment_data_842, 16);
  memcpy(&(M0.data[40208u]), data_segment_data_843, 8);
  memcpy(&(M0.data[40224u]), data_segment_data_844, 40);
  memcpy(&(M0.data[40264u]), data_segment_data_845, 16);
  memcpy(&(M0.data[40280u]), data_segment_data_846, 8);
  memcpy(&(M0.data[40288u]), data_segment_data_847, 8);
  memcpy(&(M0.data[40296u]), data_segment_data_848, 8);
  memcpy(&(M0.data[40304u]), data_segment_data_849, 8);
  memcpy(&(M0.data[40312u]), data_segment_data_850, 8);
  memcpy(&(M0.data[40320u]), data_segment_data_851, 256);
  memcpy(&(M0.data[40576u]), data_segment_data_852, 16);
  memcpy(&(M0.data[40592u]), data_segment_data_853, 16);
  memcpy(&(M0.data[40608u]), data_segment_data_854, 60);
  memcpy(&(M0.data[40672u]), data_segment_data_855, 16);
  memcpy(&(M0.data[40688u]), data_segment_data_856, 16);
  memcpy(&(M0.data[40704u]), data_segment_data_857, 8);
  memcpy(&(M0.data[40712u]), data_segment_data_858, 8);
  memcpy(&(M0.data[40720u]), data_segment_data_859, 8);
  memcpy(&(M0.data[40736u]), data_segment_data_860, 40);
  memcpy(&(M0.data[40776u]), data_segment_data_861, 16);
  memcpy(&(M0.data[40792u]), data_segment_data_862, 12);
  memcpy(&(M0.data[40804u]), data_segment_data_863, 8);
  memcpy(&(M0.data[40812u]), data_segment_data_864, 8);
  memcpy(&(M0.data[40820u]), data_segment_data_865, 8);
  memcpy(&(M0.data[40828u]), data_segment_data_866, 60);
  memcpy(&(M0.data[40896u]), data_segment_data_867, 16);
  memcpy(&(M0.data[40912u]), data_segment_data_868, 16);
  memcpy(&(M0.data[40928u]), data_segment_data_869, 8);
  memcpy(&(M0.data[40936u]), data_segment_data_870, 12);
  memcpy(&(M0.data[40948u]), data_segment_data_871, 12);
  memcpy(&(M0.data[40960u]), data_segment_data_872, 8);
  memcpy(&(M0.data[40976u]), data_segment_data_873, 768);
  memcpy(&(M0.data[41744u]), data_segment_data_874, 16);
  memcpy(&(M0.data[41760u]), data_segment_data_875, 8);
  memcpy(&(M0.data[41768u]), data_segment_data_876, 12);
  memcpy(&(M0.data[41780u]), data_segment_data_877, 12);
  memcpy(&(M0.data[41792u]), data_segment_data_878, 8);
  memcpy(&(M0.data[41800u]), data_segment_data_879, 8);
  memcpy(&(M0.data[41808u]), data_segment_data_880, 8);
  memcpy(&(M0.data[41816u]), data_segment_data_881, 12);
  memcpy(&(M0.data[41828u]), data_segment_data_882, 12);
  memcpy(&(M0.data[41840u]), data_segment_data_883, 12);
  memcpy(&(M0.data[41852u]), data_segment_data_884, 12);
  memcpy(&(M0.data[41864u]), data_segment_data_885, 12);
  memcpy(&(M0.data[41876u]), data_segment_data_886, 12);
  memcpy(&(M0.data[41888u]), data_segment_data_887, 12);
  memcpy(&(M0.data[41900u]), data_segment_data_888, 12);
  memcpy(&(M0.data[41912u]), data_segment_data_889, 12);
  memcpy(&(M0.data[41924u]), data_segment_data_890, 12);
  memcpy(&(M0.data[41936u]), data_segment_data_891, 12);
  memcpy(&(M0.data[41948u]), data_segment_data_892, 12);
  memcpy(&(M0.data[41960u]), data_segment_data_893, 12);
  memcpy(&(M0.data[41972u]), data_segment_data_894, 12);
  memcpy(&(M0.data[41984u]), data_segment_data_895, 12);
  memcpy(&(M0.data[41996u]), data_segment_data_896, 12);
  memcpy(&(M0.data[42008u]), data_segment_data_897, 12);
  memcpy(&(M0.data[42020u]), data_segment_data_898, 12);
  memcpy(&(M0.data[42032u]), data_segment_data_899, 12);
  memcpy(&(M0.data[42044u]), data_segment_data_900, 12);
  memcpy(&(M0.data[42056u]), data_segment_data_901, 12);
  memcpy(&(M0.data[42068u]), data_segment_data_902, 12);
  memcpy(&(M0.data[42080u]), data_segment_data_903, 8);
  memcpy(&(M0.data[42088u]), data_segment_data_904, 8);
  memcpy(&(M0.data[42096u]), data_segment_data_905, 8);
  memcpy(&(M0.data[42104u]), data_segment_data_906, 8);
  memcpy(&(M0.data[42112u]), data_segment_data_907, 8);
  memcpy(&(M0.data[42120u]), data_segment_data_908, 8);
  memcpy(&(M0.data[42128u]), data_segment_data_909, 12);
  memcpy(&(M0.data[42140u]), data_segment_data_910, 12);
  memcpy(&(M0.data[42152u]), data_segment_data_911, 12);
  memcpy(&(M0.data[42164u]), data_segment_data_912, 12);
  memcpy(&(M0.data[42176u]), data_segment_data_913, 12);
  memcpy(&(M0.data[42188u]), data_segment_data_914, 8);
  memcpy(&(M0.data[42196u]), data_segment_data_915, 8);
  memcpy(&(M0.data[42204u]), data_segment_data_916, 8);
  memcpy(&(M0.data[42212u]), data_segment_data_917, 8);
  memcpy(&(M0.data[42220u]), data_segment_data_918, 8);
  memcpy(&(M0.data[42228u]), data_segment_data_919, 8);
  memcpy(&(M0.data[42236u]), data_segment_data_920, 8);
  memcpy(&(M0.data[42244u]), data_segment_data_921, 8);
  memcpy(&(M0.data[42252u]), data_segment_data_922, 8);
  memcpy(&(M0.data[42260u]), data_segment_data_923, 8);
  memcpy(&(M0.data[42268u]), data_segment_data_924, 8);
  memcpy(&(M0.data[42276u]), data_segment_data_925, 8);
  memcpy(&(M0.data[42284u]), data_segment_data_926, 8);
  memcpy(&(M0.data[42292u]), data_segment_data_927, 8);
  memcpy(&(M0.data[42300u]), data_segment_data_928, 8);
  memcpy(&(M0.data[42308u]), data_segment_data_929, 8);
  memcpy(&(M0.data[42316u]), data_segment_data_930, 8);
  memcpy(&(M0.data[42324u]), data_segment_data_931, 8);
  memcpy(&(M0.data[42332u]), data_segment_data_932, 8);
  memcpy(&(M0.data[42340u]), data_segment_data_933, 8);
  memcpy(&(M0.data[42348u]), data_segment_data_934, 8);
  memcpy(&(M0.data[42356u]), data_segment_data_935, 8);
  memcpy(&(M0.data[42364u]), data_segment_data_936, 8);
  memcpy(&(M0.data[42372u]), data_segment_data_937, 8);
  memcpy(&(M0.data[42380u]), data_segment_data_938, 8);
  memcpy(&(M0.data[42388u]), data_segment_data_939, 8);
  memcpy(&(M0.data[42396u]), data_segment_data_940, 8);
  memcpy(&(M0.data[42404u]), data_segment_data_941, 8);
  memcpy(&(M0.data[42412u]), data_segment_data_942, 8);
  memcpy(&(M0.data[42420u]), data_segment_data_943, 8);
  memcpy(&(M0.data[42428u]), data_segment_data_944, 8);
  memcpy(&(M0.data[42436u]), data_segment_data_945, 8);
  memcpy(&(M0.data[42444u]), data_segment_data_946, 8);
  memcpy(&(M0.data[42452u]), data_segment_data_947, 8);
  memcpy(&(M0.data[42460u]), data_segment_data_948, 8);
  memcpy(&(M0.data[42468u]), data_segment_data_949, 8);
  memcpy(&(M0.data[42476u]), data_segment_data_950, 8);
  memcpy(&(M0.data[42484u]), data_segment_data_951, 8);
  memcpy(&(M0.data[42492u]), data_segment_data_952, 8);
  memcpy(&(M0.data[42512u]), data_segment_data_953, 20);
  memcpy(&(M0.data[42532u]), data_segment_data_954, 8);
  memcpy(&(M0.data[42540u]), data_segment_data_955, 8);
  memcpy(&(M0.data[42548u]), data_segment_data_956, 8);
  memcpy(&(M0.data[42556u]), data_segment_data_957, 8);
  memcpy(&(M0.data[42564u]), data_segment_data_958, 8);
  memcpy(&(M0.data[42572u]), data_segment_data_959, 8);
  memcpy(&(M0.data[42580u]), data_segment_data_960, 8);
  memcpy(&(M0.data[42588u]), data_segment_data_961, 8);
  memcpy(&(M0.data[42596u]), data_segment_data_962, 8);
  memcpy(&(M0.data[42604u]), data_segment_data_963, 8);
  memcpy(&(M0.data[42612u]), data_segment_data_964, 8);
  memcpy(&(M0.data[42620u]), data_segment_data_965, 8);
  memcpy(&(M0.data[42628u]), data_segment_data_966, 8);
  memcpy(&(M0.data[42636u]), data_segment_data_967, 8);
  memcpy(&(M0.data[42644u]), data_segment_data_968, 60);
  memcpy(&(M0.data[42704u]), data_segment_data_969, 32);
  memcpy(&(M0.data[42736u]), data_segment_data_970, 16);
  memcpy(&(M0.data[42752u]), data_segment_data_971, 8);
  memcpy(&(M0.data[42760u]), data_segment_data_972, 12);
  memcpy(&(M0.data[42772u]), data_segment_data_973, 12);
  memcpy(&(M0.data[42784u]), data_segment_data_974, 12);
  memcpy(&(M0.data[42796u]), data_segment_data_975, 12);
  memcpy(&(M0.data[42808u]), data_segment_data_976, 12);
  memcpy(&(M0.data[42820u]), data_segment_data_977, 8);
  memcpy(&(M0.data[42828u]), data_segment_data_978, 8);
  memcpy(&(M0.data[42848u]), data_segment_data_979, 16);
  memcpy(&(M0.data[42864u]), data_segment_data_980, 16);
  memcpy(&(M0.data[42880u]), data_segment_data_981, 252);
  memcpy(&(M0.data[43136u]), data_segment_data_982, 132);
  memcpy(&(M0.data[43280u]), data_segment_data_983, 16);
  memcpy(&(M0.data[43296u]), data_segment_data_984, 12);
  memcpy(&(M0.data[43312u]), data_segment_data_985, 20);
  memcpy(&(M0.data[43332u]), data_segment_data_986, 8);
  memcpy(&(M0.data[43340u]), data_segment_data_987, 12);
  memcpy(&(M0.data[43360u]), data_segment_data_988, 20);
  memcpy(&(M0.data[43380u]), data_segment_data_989, 8);
  memcpy(&(M0.data[43388u]), data_segment_data_990, 12);
  memcpy(&(M0.data[43408u]), data_segment_data_991, 77);
  memcpy(&(M0.data[43488u]), data_segment_data_992, 8);
  memcpy(&(M0.data[43496u]), data_segment_data_993, 12);
  memcpy(&(M0.data[43520u]), data_segment_data_994, 31);
  memcpy(&(M0.data[43552u]), data_segment_data_995, 16);
  memcpy(&(M0.data[43568u]), data_segment_data_996, 87);
  memcpy(&(M0.data[43664u]), data_segment_data_997, 40);
  memcpy(&(M0.data[43704u]), data_segment_data_998, 12);
  memcpy(&(M0.data[43728u]), data_segment_data_999, 165);
  memcpy(&(M0.data[43904u]), data_segment_data_1000, 24);
  memcpy(&(M0.data[43928u]), data_segment_data_1001, 12);
  memcpy(&(M0.data[43952u]), data_segment_data_1002, 29);
  memcpy(&(M0.data[43984u]), data_segment_data_1003, 8);
  memcpy(&(M0.data[43992u]), data_segment_data_1004, 12);
  memcpy(&(M0.data[44016u]), data_segment_data_1005, 41);
  memcpy(&(M0.data[44060u]), data_segment_data_1006, 8);
  memcpy(&(M0.data[44068u]), data_segment_data_1007, 12);
  memcpy(&(M0.data[44080u]), data_segment_data_1008, 29);
  memcpy(&(M0.data[44112u]), data_segment_data_1009, 8);
  memcpy(&(M0.data[44120u]), data_segment_data_1010, 12);
  memcpy(&(M0.data[44144u]), data_segment_data_1011, 29);
  memcpy(&(M0.data[44176u]), data_segment_data_1012, 8);
  memcpy(&(M0.data[44184u]), data_segment_data_1013, 12);
  memcpy(&(M0.data[44208u]), data_segment_data_1014, 36);
  memcpy(&(M0.data[44244u]), data_segment_data_1015, 8);
  memcpy(&(M0.data[44252u]), data_segment_data_1016, 12);
  memcpy(&(M0.data[44272u]), data_segment_data_1017, 95);
  memcpy(&(M0.data[44368u]), data_segment_data_1018, 8);
  memcpy(&(M0.data[44376u]), data_segment_data_1019, 12);
  memcpy(&(M0.data[44400u]), data_segment_data_1020, 52);
  memcpy(&(M0.data[44452u]), data_segment_data_1021, 8);
  memcpy(&(M0.data[44460u]), data_segment_data_1022, 12);
  memcpy(&(M0.data[44480u]), data_segment_data_1023, 27);
  memcpy(&(M0.data[44508u]), data_segment_data_1024, 4);
  memcpy(&(M0.data[44512u]), data_segment_data_1025, 12);
  memcpy(&(M0.data[44528u]), data_segment_data_1026, 19);
  memcpy(&(M0.data[44548u]), data_segment_data_1027, 8);
  memcpy(&(M0.data[44556u]), data_segment_data_1028, 12);
  memcpy(&(M0.data[44576u]), data_segment_data_1029, 28);
  memcpy(&(M0.data[44604u]), data_segment_data_1030, 4);
  memcpy(&(M0.data[44608u]), data_segment_data_1031, 12);
  memcpy(&(M0.data[44624u]), data_segment_data_1032, 29);
  memcpy(&(M0.data[44656u]), data_segment_data_1033, 20);
  memcpy(&(M0.data[44676u]), data_segment_data_1034, 12);
  memcpy(&(M0.data[44688u]), data_segment_data_1035, 28);
  memcpy(&(M0.data[44716u]), data_segment_data_1036, 4);
  memcpy(&(M0.data[44720u]), data_segment_data_1037, 12);
  memcpy(&(M0.data[44736u]), data_segment_data_1038, 29);
  memcpy(&(M0.data[44768u]), data_segment_data_1039, 20);
  memcpy(&(M0.data[44788u]), data_segment_data_1040, 12);
  memcpy(&(M0.data[44800u]), data_segment_data_1041, 155);
  memcpy(&(M0.data[44960u]), data_segment_data_1042, 80);
  memcpy(&(M0.data[45040u]), data_segment_data_1043, 12);
  memcpy(&(M0.data[45056u]), data_segment_data_1044, 113);
  memcpy(&(M0.data[45184u]), data_segment_data_1045, 24);
  memcpy(&(M0.data[45208u]), data_segment_data_1046, 12);
  memcpy(&(M0.data[45220u]), data_segment_data_1047, 8);
  memcpy(&(M0.data[45228u]), data_segment_data_1048, 16);
  memcpy(&(M0.data[45248u]), data_segment_data_1049, 28);
  memcpy(&(M0.data[45276u]), data_segment_data_1050, 8);
  memcpy(&(M0.data[45284u]), data_segment_data_1051, 12);
  memcpy(&(M0.data[45296u]), data_segment_data_1052, 40);
  memcpy(&(M0.data[45336u]), data_segment_data_1053, 8);
  memcpy(&(M0.data[45344u]), data_segment_data_1054, 12);
  memcpy(&(M0.data[45360u]), data_segment_data_1055, 85);
  memcpy(&(M0.data[45448u]), data_segment_data_1056, 8);
  memcpy(&(M0.data[45456u]), data_segment_data_1057, 12);
  memcpy(&(M0.data[45472u]), data_segment_data_1058, 38);
  memcpy(&(M0.data[45512u]), data_segment_data_1059, 8);
  memcpy(&(M0.data[45520u]), data_segment_data_1060, 12);
  memcpy(&(M0.data[45536u]), data_segment_data_1061, 35);
  memcpy(&(M0.data[45572u]), data_segment_data_1062, 12);
  memcpy(&(M0.data[45584u]), data_segment_data_1063, 12);
  memcpy(&(M0.data[45600u]), data_segment_data_1064, 36);
  memcpy(&(M0.data[45636u]), data_segment_data_1065, 8);
  memcpy(&(M0.data[45644u]), data_segment_data_1066, 12);
  memcpy(&(M0.data[45664u]), data_segment_data_1067, 229);
  memcpy(&(M0.data[45896u]), data_segment_data_1068, 8);
  memcpy(&(M0.data[45904u]), data_segment_data_1069, 12);
  memcpy(&(M0.data[45920u]), data_segment_data_1070, 121);
  memcpy(&(M0.data[46044u]), data_segment_data_1071, 8);
  memcpy(&(M0.data[46052u]), data_segment_data_1072, 12);
  memcpy(&(M0.data[46064u]), data_segment_data_1073, 19);
  memcpy(&(M0.data[46084u]), data_segment_data_1074, 8);
  memcpy(&(M0.data[46092u]), data_segment_data_1075, 12);
  memcpy(&(M0.data[46112u]), data_segment_data_1076, 30);
  memcpy(&(M0.data[46144u]), data_segment_data_1077, 8);
  memcpy(&(M0.data[46152u]), data_segment_data_1078, 12);
  memcpy(&(M0.data[46176u]), data_segment_data_1079, 33);
  memcpy(&(M0.data[46212u]), data_segment_data_1080, 4);
  memcpy(&(M0.data[46216u]), data_segment_data_1081, 12);
  memcpy(&(M0.data[46240u]), data_segment_data_1082, 70);
  memcpy(&(M0.data[46312u]), data_segment_data_1083, 4);
  memcpy(&(M0.data[46316u]), data_segment_data_1084, 12);
  memcpy(&(M0.data[46336u]), data_segment_data_1085, 43);
  memcpy(&(M0.data[46380u]), data_segment_data_1086, 4);
  memcpy(&(M0.data[46384u]), data_segment_data_1087, 12);
  memcpy(&(M0.data[46400u]), data_segment_data_1088, 26);
  memcpy(&(M0.data[46428u]), data_segment_data_1089, 8);
  memcpy(&(M0.data[46436u]), data_segment_data_1090, 12);
  memcpy(&(M0.data[46448u]), data_segment_data_1091, 28);
  memcpy(&(M0.data[46476u]), data_segment_data_1092, 8);
  memcpy(&(M0.data[46484u]), data_segment_data_1093, 12);
  memcpy(&(M0.data[46496u]), data_segment_data_1094, 28);
  memcpy(&(M0.data[46524u]), data_segment_data_1095, 8);
  memcpy(&(M0.data[46532u]), data_segment_data_1096, 12);
  memcpy(&(M0.data[46544u]), data_segment_data_1097, 37);
  memcpy(&(M0.data[46584u]), data_segment_data_1098, 12);
  memcpy(&(M0.data[46596u]), data_segment_data_1099, 12);
  memcpy(&(M0.data[46608u]), data_segment_data_1100, 42);
  memcpy(&(M0.data[46652u]), data_segment_data_1101, 12);
  memcpy(&(M0.data[46664u]), data_segment_data_1102, 12);
  memcpy(&(M0.data[46688u]), data_segment_data_1103, 42);
  memcpy(&(M0.data[46732u]), data_segment_data_1104, 12);
  memcpy(&(M0.data[46744u]), data_segment_data_1105, 12);
  memcpy(&(M0.data[46768u]), data_segment_data_1106, 18);
  memcpy(&(M0.data[46788u]), data_segment_data_1107, 4);
  memcpy(&(M0.data[46792u]), data_segment_data_1108, 12);
  memcpy(&(M0.data[46804u]), data_segment_data_1109, 16);
  memcpy(&(M0.data[46832u]), data_segment_data_1110, 23);
  memcpy(&(M0.data[46856u]), data_segment_data_1111, 12);
  memcpy(&(M0.data[46868u]), data_segment_data_1112, 12);
  memcpy(&(M0.data[46880u]), data_segment_data_1113, 18);
  memcpy(&(M0.data[46900u]), data_segment_data_1114, 4);
  memcpy(&(M0.data[46904u]), data_segment_data_1115, 12);
  memcpy(&(M0.data[46916u]), data_segment_data_1116, 16);
  memcpy(&(M0.data[46944u]), data_segment_data_1117, 23);
  memcpy(&(M0.data[46968u]), data_segment_data_1118, 12);
  memcpy(&(M0.data[46980u]), data_segment_data_1119, 12);
  memcpy(&(M0.data[46992u]), data_segment_data_1120, 16);
  memcpy(&(M0.data[47008u]), data_segment_data_1121, 19);
  memcpy(&(M0.data[47028u]), data_segment_data_1122, 4);
  memcpy(&(M0.data[47032u]), data_segment_data_1123, 12);
  memcpy(&(M0.data[47044u]), data_segment_data_1124, 16);
}

static void init_table(void) {
  uint32_t offset;
  wasm_rt_allocate_table((&T0), 467, 467);
  offset = 1u;
  T0.data[offset + 0] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&vstr_add_strn)};
  T0.data[offset + 1] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&plat_print_strn)};
  T0.data[offset + 2] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_reader_mem_readbyte)};
  T0.data[offset + 3] = (wasm_rt_elem_t){func_types[2], (wasm_rt_anyfunc_t)(&mp_reader_mem_close)};
  T0.data[offset + 4] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mp_obj_str_binary_op)};
  T0.data[offset + 5] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_identity_getiter)};
  T0.data[offset + 6] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_obj_instance_getiter)};
  T0.data[offset + 7] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_obj_instance_make_new)};
  T0.data[offset + 8] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&checked_fun_call)};
  T0.data[offset + 9] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_obj_instance_call)};
  T0.data[offset + 10] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_identity)};
  T0.data[offset + 11] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&array_subscr)};
  T0.data[offset + 12] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&memoryview_make_new)};
  T0.data[offset + 13] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&array_unary_op)};
  T0.data[offset + 14] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&array_binary_op)};
  T0.data[offset + 15] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&array_iterator_new)};
  T0.data[offset + 16] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&array_get_buffer)};
  T0.data[offset + 17] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&array_print)};
  T0.data[offset + 18] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&array_make_new)};
  T0.data[offset + 19] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&bytearray_make_new)};
  T0.data[offset + 20] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&array_append)};
  T0.data[offset + 21] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&array_extend)};
  T0.data[offset + 22] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&array_it_iternext)};
  T0.data[offset + 23] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&mp_obj_attrtuple_print)};
  T0.data[offset + 24] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_obj_tuple_unary_op)};
  T0.data[offset + 25] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mp_obj_tuple_binary_op)};
  T0.data[offset + 26] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&mp_obj_attrtuple_attr)};
  T0.data[offset + 27] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mp_obj_tuple_subscr)};
  T0.data[offset + 28] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_obj_tuple_getiter)};
  T0.data[offset + 29] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&bool_print)};
  T0.data[offset + 30] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&bool_make_new)};
  T0.data[offset + 31] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&bool_unary_op)};
  T0.data[offset + 32] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&bool_binary_op)};
  T0.data[offset + 33] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&bound_meth_call)};
  T0.data[offset + 34] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&bound_meth_attr)};
  T0.data[offset + 35] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&closure_call)};
  T0.data[offset + 36] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&complex_print)};
  T0.data[offset + 37] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&complex_make_new)};
  T0.data[offset + 38] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&complex_unary_op)};
  T0.data[offset + 39] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&complex_binary_op)};
  T0.data[offset + 40] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&complex_attr)};
  T0.data[offset + 41] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_obj_dict_make_new)};
  T0.data[offset + 42] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&dict_print)};
  T0.data[offset + 43] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&dict_unary_op)};
  T0.data[offset + 44] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&dict_binary_op)};
  T0.data[offset + 45] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&dict_subscr)};
  T0.data[offset + 46] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&dict_getiter)};
  T0.data[offset + 47] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&dict_view_it_iternext)};
  T0.data[offset + 48] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&dict_get)};
  T0.data[offset + 49] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&dict_pop)};
  T0.data[offset + 50] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&dict_setdefault)};
  T0.data[offset + 51] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&dict_clear)};
  T0.data[offset + 52] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_obj_dict_copy)};
  T0.data[offset + 53] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&dict_fromkeys)};
  T0.data[offset + 54] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&dict_items)};
  T0.data[offset + 55] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&dict_view_print)};
  T0.data[offset + 56] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&dict_view_binary_op)};
  T0.data[offset + 57] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&dict_view_getiter)};
  T0.data[offset + 58] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&dict_keys)};
  T0.data[offset + 59] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&dict_popitem)};
  T0.data[offset + 60] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&dict_update)};
  T0.data[offset + 61] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&dict_values)};
  T0.data[offset + 62] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&enumerate_make_new)};
  T0.data[offset + 63] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&enumerate_iternext)};
  T0.data[offset + 64] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&exc_add_strn)};
  T0.data[offset + 65] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_obj_exception_make_new)};
  T0.data[offset + 66] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&mp_obj_exception_print)};
  T0.data[offset + 67] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&mp_obj_exception_attr)};
  T0.data[offset + 68] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&filter_make_new)};
  T0.data[offset + 69] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&filter_iternext)};
  T0.data[offset + 70] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&float_print)};
  T0.data[offset + 71] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&float_make_new)};
  T0.data[offset + 72] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&float_unary_op)};
  T0.data[offset + 73] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&float_binary_op)};
  T0.data[offset + 74] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&fun_builtin_0_call)};
  T0.data[offset + 75] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_generic_unary_op)};
  T0.data[offset + 76] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&fun_builtin_1_call)};
  T0.data[offset + 77] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&fun_builtin_2_call)};
  T0.data[offset + 78] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&fun_builtin_3_call)};
  T0.data[offset + 79] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&fun_builtin_var_call)};
  T0.data[offset + 80] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&fun_bc_print)};
  T0.data[offset + 81] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&fun_bc_call)};
  T0.data[offset + 82] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&mp_obj_fun_bc_attr)};
  T0.data[offset + 83] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&gen_wrap_call)};
  T0.data[offset + 84] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&gen_instance_print)};
  T0.data[offset + 85] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&gen_instance_iternext)};
  T0.data[offset + 86] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&gen_instance_throw)};
  T0.data[offset + 87] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&gen_instance_close)};
  T0.data[offset + 88] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&gen_instance_send)};
  T0.data[offset + 89] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&gen_instance_pend_throw)};
  T0.data[offset + 90] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&it_iternext)};
  T0.data[offset + 91] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&mp_obj_int_print)};
  T0.data[offset + 92] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_obj_int_make_new)};
  T0.data[offset + 93] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_obj_int_unary_op)};
  T0.data[offset + 94] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mp_obj_int_binary_op)};
  T0.data[offset + 95] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&int_to_bytes)};
  T0.data[offset + 96] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&int_from_bytes)};
  T0.data[offset + 97] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&list_it_iternext)};
  T0.data[offset + 98] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&list_print)};
  T0.data[offset + 99] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&list_make_new)};
  T0.data[offset + 100] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&list_unary_op)};
  T0.data[offset + 101] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&list_binary_op)};
  T0.data[offset + 102] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&list_subscr)};
  T0.data[offset + 103] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&list_getiter)};
  T0.data[offset + 104] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&list_index)};
  T0.data[offset + 105] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&list_pop)};
  T0.data[offset + 106] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_obj_list_append)};
  T0.data[offset + 107] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&list_clear)};
  T0.data[offset + 108] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&list_copy)};
  T0.data[offset + 109] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&list_count)};
  T0.data[offset + 110] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&list_extend)};
  T0.data[offset + 111] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&list_insert)};
  T0.data[offset + 112] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_obj_list_remove)};
  T0.data[offset + 113] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&list_reverse)};
  T0.data[offset + 114] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mp_obj_list_sort)};
  T0.data[offset + 115] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&map_make_new)};
  T0.data[offset + 116] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&map_iternext)};
  T0.data[offset + 117] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&module_print)};
  T0.data[offset + 118] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&module_attr)};
  T0.data[offset + 119] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&object_make_new)};
  T0.data[offset + 120] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&object___init__)};
  T0.data[offset + 121] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&object___new__)};
  T0.data[offset + 122] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&polymorph_it_iternext)};
  T0.data[offset + 123] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&property_make_new)};
  T0.data[offset + 124] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&property_getter)};
  T0.data[offset + 125] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&property_setter)};
  T0.data[offset + 126] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&property_deleter)};
  T0.data[offset + 127] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&none_print)};
  T0.data[offset + 128] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&namedtuple_print)};
  T0.data[offset + 129] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&namedtuple_make_new)};
  T0.data[offset + 130] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&namedtuple_attr)};
  T0.data[offset + 131] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&new_namedtuple_type)};
  T0.data[offset + 132] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&range_print)};
  T0.data[offset + 133] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&range_make_new)};
  T0.data[offset + 134] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&range_unary_op)};
  T0.data[offset + 135] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&range_attr)};
  T0.data[offset + 136] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&range_subscr)};
  T0.data[offset + 137] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&range_getiter)};
  T0.data[offset + 138] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&range_it_iternext)};
  T0.data[offset + 139] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&reversed_make_new)};
  T0.data[offset + 140] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&reversed_iternext)};
  T0.data[offset + 141] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&set_it_iternext)};
  T0.data[offset + 142] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&set_print)};
  T0.data[offset + 143] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&set_make_new)};
  T0.data[offset + 144] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_unary_op)};
  T0.data[offset + 145] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&set_binary_op)};
  T0.data[offset + 146] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_getiter)};
  T0.data[offset + 147] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_diff)};
  T0.data[offset + 148] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_diff_update)};
  T0.data[offset + 149] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_update)};
  T0.data[offset + 150] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_add)};
  T0.data[offset + 151] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&set_clear)};
  T0.data[offset + 152] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&set_copy)};
  T0.data[offset + 153] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_discard)};
  T0.data[offset + 154] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_intersect)};
  T0.data[offset + 155] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_intersect_update)};
  T0.data[offset + 156] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_isdisjoint)};
  T0.data[offset + 157] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_issubset)};
  T0.data[offset + 158] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_issuperset)};
  T0.data[offset + 159] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&set_pop)};
  T0.data[offset + 160] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_remove)};
  T0.data[offset + 161] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_symmetric_difference)};
  T0.data[offset + 162] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_symmetric_difference_update)};
  T0.data[offset + 163] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&set_union)};
  T0.data[offset + 164] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&singleton_print)};
  T0.data[offset + 165] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&slice_print)};
  T0.data[offset + 166] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&slice_attr)};
  T0.data[offset + 167] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&bytes_it_iternext)};
  T0.data[offset + 168] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_join)};
  T0.data[offset + 169] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_obj_str_split)};
  T0.data[offset + 170] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&str_splitlines)};
  T0.data[offset + 171] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_rsplit)};
  T0.data[offset + 172] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_find)};
  T0.data[offset + 173] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_rfind)};
  T0.data[offset + 174] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_index)};
  T0.data[offset + 175] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_rindex)};
  T0.data[offset + 176] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_startswith)};
  T0.data[offset + 177] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_endswith)};
  T0.data[offset + 178] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_strip)};
  T0.data[offset + 179] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_lstrip)};
  T0.data[offset + 180] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_rstrip)};
  T0.data[offset + 181] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_center)};
  T0.data[offset + 182] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mp_obj_str_format)};
  T0.data[offset + 183] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_replace)};
  T0.data[offset + 184] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_count)};
  T0.data[offset + 185] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_partition)};
  T0.data[offset + 186] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_rpartition)};
  T0.data[offset + 187] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&str_lower)};
  T0.data[offset + 188] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&str_upper)};
  T0.data[offset + 189] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&str_isspace)};
  T0.data[offset + 190] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&str_isalpha)};
  T0.data[offset + 191] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&str_isdigit)};
  T0.data[offset + 192] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&str_isupper)};
  T0.data[offset + 193] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&str_islower)};
  T0.data[offset + 194] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&bytes_decode)};
  T0.data[offset + 195] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&str_encode)};
  T0.data[offset + 196] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&str_print)};
  T0.data[offset + 197] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&bytes_make_new)};
  T0.data[offset + 198] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&bytes_subscr)};
  T0.data[offset + 199] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_obj_new_bytes_iterator)};
  T0.data[offset + 200] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mp_obj_str_get_buffer)};
  T0.data[offset + 201] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&str_it_iternext)};
  T0.data[offset + 202] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&uni_print)};
  T0.data[offset + 203] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_obj_str_make_new)};
  T0.data[offset + 204] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&uni_unary_op)};
  T0.data[offset + 205] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&str_subscr)};
  T0.data[offset + 206] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_obj_new_str_iterator)};
  T0.data[offset + 207] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&stringio_read)};
  T0.data[offset + 208] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&stringio_write)};
  T0.data[offset + 209] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&stringio_ioctl)};
  T0.data[offset + 210] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&stringio_print)};
  T0.data[offset + 211] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&stringio_make_new)};
  T0.data[offset + 212] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_stream_unbuffered_iter)};
  T0.data[offset + 213] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&stringio___exit__)};
  T0.data[offset + 214] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&stringio_getvalue)};
  T0.data[offset + 215] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&tuple_it_iternext)};
  T0.data[offset + 216] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&mp_obj_tuple_print)};
  T0.data[offset + 217] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_obj_tuple_make_new)};
  T0.data[offset + 218] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&tuple_index)};
  T0.data[offset + 219] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&tuple_count)};
  T0.data[offset + 220] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&instance_print)};
  T0.data[offset + 221] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&instance_unary_op)};
  T0.data[offset + 222] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&instance_binary_op)};
  T0.data[offset + 223] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&mp_obj_instance_attr)};
  T0.data[offset + 224] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&instance_subscr)};
  T0.data[offset + 225] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&instance_get_buffer)};
  T0.data[offset + 226] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&native_base_init_wrapper)};
  T0.data[offset + 227] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&type_print)};
  T0.data[offset + 228] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&type_make_new)};
  T0.data[offset + 229] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&type_call)};
  T0.data[offset + 230] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&type_attr)};
  T0.data[offset + 231] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&static_class_method_make_new)};
  T0.data[offset + 232] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&super_print)};
  T0.data[offset + 233] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&super_make_new)};
  T0.data[offset + 234] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&super_attr)};
  T0.data[offset + 235] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_issubclass)};
  T0.data[offset + 236] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_isinstance)};
  T0.data[offset + 237] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&zip_make_new)};
  T0.data[offset + 238] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&zip_iternext)};
  T0.data[offset + 239] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&op_getitem)};
  T0.data[offset + 240] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&op_setitem)};
  T0.data[offset + 241] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&op_delitem)};
  T0.data[offset + 242] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&op_contains)};
  T0.data[offset + 243] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&stream_read)};
  T0.data[offset + 244] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&stream_write_method)};
  T0.data[offset + 245] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&stream_readinto)};
  T0.data[offset + 246] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&stream_unbuffered_readline)};
  T0.data[offset + 247] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_stream_close)};
  T0.data[offset + 248] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&stream_seek)};
  T0.data[offset + 249] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&stream_tell)};
  T0.data[offset + 250] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&stream_flush)};
  T0.data[offset + 251] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin___import__)};
  T0.data[offset + 252] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin___build_class__)};
  T0.data[offset + 253] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_abs)};
  T0.data[offset + 254] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_all)};
  T0.data[offset + 255] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_any)};
  T0.data[offset + 256] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_bin)};
  T0.data[offset + 257] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_callable)};
  T0.data[offset + 258] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_chr)};
  T0.data[offset + 259] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_dir)};
  T0.data[offset + 260] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_divmod)};
  T0.data[offset + 261] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_hash)};
  T0.data[offset + 262] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_hex)};
  T0.data[offset + 263] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_iter)};
  T0.data[offset + 264] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mp_builtin_max)};
  T0.data[offset + 265] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mp_builtin_min)};
  T0.data[offset + 266] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_next)};
  T0.data[offset + 267] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_oct)};
  T0.data[offset + 268] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_ord)};
  T0.data[offset + 269] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_pow)};
  T0.data[offset + 270] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mp_builtin_print)};
  T0.data[offset + 271] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin___repl_print__)};
  T0.data[offset + 272] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_builtin_repr)};
  T0.data[offset + 273] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_round)};
  T0.data[offset + 274] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_sum)};
  T0.data[offset + 275] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mp_builtin_sorted)};
  T0.data[offset + 276] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_getattr)};
  T0.data[offset + 277] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mp_builtin_setattr)};
  T0.data[offset + 278] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_delattr)};
  T0.data[offset + 279] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_builtin_hasattr)};
  T0.data[offset + 280] = (wasm_rt_elem_t){func_types[6], (wasm_rt_anyfunc_t)(&mp_builtin_globals)};
  T0.data[offset + 281] = (wasm_rt_elem_t){func_types[6], (wasm_rt_anyfunc_t)(&mp_builtin_locals)};
  T0.data[offset + 282] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_obj_id)};
  T0.data[offset + 283] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_obj_len)};
  T0.data[offset + 284] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mp_math_isclose)};
  T0.data[offset + 285] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_log)};
  T0.data[offset + 286] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_sqrt)};
  T0.data[offset + 287] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_pow)};
  T0.data[offset + 288] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_exp)};
  T0.data[offset + 289] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_expm1)};
  T0.data[offset + 290] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_log2)};
  T0.data[offset + 291] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_log10)};
  T0.data[offset + 292] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_cosh)};
  T0.data[offset + 293] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_sinh)};
  T0.data[offset + 294] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_tanh)};
  T0.data[offset + 295] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_acosh)};
  T0.data[offset + 296] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_asinh)};
  T0.data[offset + 297] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_atanh)};
  T0.data[offset + 298] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_cos)};
  T0.data[offset + 299] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_sin)};
  T0.data[offset + 300] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_tan)};
  T0.data[offset + 301] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_acos)};
  T0.data[offset + 302] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_asin)};
  T0.data[offset + 303] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_atan)};
  T0.data[offset + 304] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_atan2)};
  T0.data[offset + 305] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_ceil)};
  T0.data[offset + 306] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_copysign)};
  T0.data[offset + 307] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_fabs)};
  T0.data[offset + 308] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_floor)};
  T0.data[offset + 309] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_fmod)};
  T0.data[offset + 310] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_frexp)};
  T0.data[offset + 311] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_math_ldexp)};
  T0.data[offset + 312] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_modf)};
  T0.data[offset + 313] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_isfinite)};
  T0.data[offset + 314] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_isinf)};
  T0.data[offset + 315] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_isnan)};
  T0.data[offset + 316] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_trunc)};
  T0.data[offset + 317] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_radians)};
  T0.data[offset + 318] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_degrees)};
  T0.data[offset + 319] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_erf)};
  T0.data[offset + 320] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_erfc)};
  T0.data[offset + 321] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_gamma)};
  T0.data[offset + 322] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_math_lgamma)};
  T0.data[offset + 323] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_cmath_phase)};
  T0.data[offset + 324] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_cmath_polar)};
  T0.data[offset + 325] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_cmath_rect)};
  T0.data[offset + 326] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_cmath_exp)};
  T0.data[offset + 327] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_cmath_log)};
  T0.data[offset + 328] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_cmath_log10)};
  T0.data[offset + 329] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_cmath_sqrt)};
  T0.data[offset + 330] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_cmath_cos)};
  T0.data[offset + 331] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_cmath_sin)};
  T0.data[offset + 332] = (wasm_rt_elem_t){func_types[6], (wasm_rt_anyfunc_t)(&mp_micropython_pystack_use)};
  T0.data[offset + 333] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mp_micropython_kbd_intr)};
  T0.data[offset + 334] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_micropython_schedule)};
  T0.data[offset + 335] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&struct_calcsize)};
  T0.data[offset + 336] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&struct_unpack_from)};
  T0.data[offset + 337] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&struct_pack)};
  T0.data[offset + 338] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&struct_pack_into)};
  T0.data[offset + 339] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_sys_exit)};
  T0.data[offset + 340] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_sys_print_exception)};
  T0.data[offset + 341] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&mp_stream_write_adaptor)};
  T0.data[offset + 342] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_ujson_dump)};
  T0.data[offset + 343] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_ujson_dumps)};
  T0.data[offset + 344] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_ujson_load)};
  T0.data[offset + 345] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_ujson_loads)};
  T0.data[offset + 346] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&uhashlib_sha256_make_new)};
  T0.data[offset + 347] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&uhashlib_sha256_update)};
  T0.data[offset + 348] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&uhashlib_sha256_digest)};
  T0.data[offset + 349] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_binascii_hexlify)};
  T0.data[offset + 350] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_binascii_unhexlify)};
  T0.data[offset + 351] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_binascii_a2b_base64)};
  T0.data[offset + 352] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_binascii_b2a_base64)};
  T0.data[offset + 353] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&float128_print)};
  T0.data[offset + 354] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&float128_make_new)};
  T0.data[offset + 355] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&float128_unary_op)};
  T0.data[offset + 356] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&float128_binary_op)};
  T0.data[offset + 357] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&float128_to_bytes)};
  T0.data[offset + 358] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&float128_from_bytes)};
  T0.data[offset + 359] = (wasm_rt_elem_t){func_types[6], (wasm_rt_anyfunc_t)(&mod_chain_read_action_data)};
  T0.data[offset + 360] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_send_inline)};
  T0.data[offset + 361] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_send_context_free_inline)};
  T0.data[offset + 362] = (wasm_rt_elem_t){func_types[6], (wasm_rt_anyfunc_t)(&mod_chain_publication_time)};
  T0.data[offset + 363] = (wasm_rt_elem_t){func_types[6], (wasm_rt_anyfunc_t)(&mod_chain_current_receiver)};
  T0.data[offset + 364] = (wasm_rt_elem_t){func_types[6], (wasm_rt_anyfunc_t)(&mod_chain_get_active_producers)};
  T0.data[offset + 365] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_action_new)};
  T0.data[offset + 366] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_action_add_permission)};
  T0.data[offset + 367] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_transaction_new)};
  T0.data[offset + 368] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_transaction_send)};
  T0.data[offset + 369] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_store_i64)};
  T0.data[offset + 370] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_find_i64)};
  T0.data[offset + 371] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_lowerbound_i64)};
  T0.data[offset + 372] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_upperbound_i64)};
  T0.data[offset + 373] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_end_i64)};
  T0.data[offset + 374] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_store_i256)};
  T0.data[offset + 375] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_find_i256)};
  T0.data[offset + 376] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_lowerbound_i256)};
  T0.data[offset + 377] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_upperbound_i256)};
  T0.data[offset + 378] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_end_i256)};
  T0.data[offset + 379] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_store)};
  T0.data[offset + 380] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_update)};
  T0.data[offset + 381] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_find_primary)};
  T0.data[offset + 382] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_find_secondary)};
  T0.data[offset + 383] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_lowerbound)};
  T0.data[offset + 384] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_upperbound)};
  T0.data[offset + 385] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_end)};
  T0.data[offset + 386] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_set_resource_limits)};
  T0.data[offset + 387] = (wasm_rt_elem_t){func_types[6], (wasm_rt_anyfunc_t)(&mod_chain_get_blockchain_parameters)};
  T0.data[offset + 388] = (wasm_rt_elem_t){func_types[6], (wasm_rt_anyfunc_t)(&mod_chain_current_time)};
  T0.data[offset + 389] = (wasm_rt_elem_t){func_types[6], (wasm_rt_anyfunc_t)(&mod_chain_read_transaction)};
  T0.data[offset + 390] = (wasm_rt_elem_t){func_types[6], (wasm_rt_anyfunc_t)(&mod_chain_tapos_block_num)};
  T0.data[offset + 391] = (wasm_rt_elem_t){func_types[6], (wasm_rt_anyfunc_t)(&mod_chain_tapos_block_prefix)};
  T0.data[offset + 392] = (wasm_rt_elem_t){func_types[6], (wasm_rt_anyfunc_t)(&mod_chain_expiration)};
  T0.data[offset + 393] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_token_issue)};
  T0.data[offset + 394] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_token_transfer)};
  T0.data[offset + 395] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_token_open)};
  T0.data[offset + 396] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_token_retire)};
  T0.data[offset + 397] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_token_close)};
  T0.data[offset + 398] = (wasm_rt_elem_t){func_types[6], (wasm_rt_anyfunc_t)(&mod_chain_get_log)};
  T0.data[offset + 399] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_s2n)};
  T0.data[offset + 400] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_n2s)};
  T0.data[offset + 401] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_require_recipient)};
  T0.data[offset + 402] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_require_auth)};
  T0.data[offset + 403] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_require_auth2)};
  T0.data[offset + 404] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_has_auth)};
  T0.data[offset + 405] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_is_account)};
  T0.data[offset + 406] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_send_inline_raw)};
  T0.data[offset + 407] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_send_context_free_inline_raw)};
  T0.data[offset + 408] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_action_send)};
  T0.data[offset + 409] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_action_free)};
  T0.data[offset + 410] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_transaction_add_action)};
  T0.data[offset + 411] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_transaction_add_context_free_action)};
  T0.data[offset + 412] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_transaction_cancel)};
  T0.data[offset + 413] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_transaction_free)};
  T0.data[offset + 414] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_assert_sha256)};
  T0.data[offset + 415] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_assert_sha1)};
  T0.data[offset + 416] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_assert_sha512)};
  T0.data[offset + 417] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_assert_ripemd160)};
  T0.data[offset + 418] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mod_chain_assert_recover_key)};
  T0.data[offset + 419] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_sha256)};
  T0.data[offset + 420] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_sha1)};
  T0.data[offset + 421] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_sha512)};
  T0.data[offset + 422] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_ripemd160)};
  T0.data[offset + 423] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_recover_key)};
  T0.data[offset + 424] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mod_chain_db_update_i64)};
  T0.data[offset + 425] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_db_remove_i64)};
  T0.data[offset + 426] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_db_get_i64)};
  T0.data[offset + 427] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_db_next_i64)};
  T0.data[offset + 428] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_db_previous_i64)};
  T0.data[offset + 429] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mod_chain_db_update_i256)};
  T0.data[offset + 430] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_db_remove_i256)};
  T0.data[offset + 431] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_db_get_i256)};
  T0.data[offset + 432] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_db_next_i256)};
  T0.data[offset + 433] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_db_previous_i256)};
  T0.data[offset + 434] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mod_chain_db_get_table_row_count)};
  T0.data[offset + 435] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_call_contract)};
  T0.data[offset + 436] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_get_code_hash)};
  T0.data[offset + 437] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_remove)};
  T0.data[offset + 438] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_next)};
  T0.data[offset + 439] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_db_idx_previous)};
  T0.data[offset + 440] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_get_resource_limits)};
  T0.data[offset + 441] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_set_proposed_producers)};
  T0.data[offset + 442] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_is_privileged)};
  T0.data[offset + 443] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_set_privileged)};
  T0.data[offset + 444] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_set_blockchain_parameters)};
  T0.data[offset + 445] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_eosio_assert)};
  T0.data[offset + 446] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_eosio_assert_code)};
  T0.data[offset + 447] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mod_chain_get_action)};
  T0.data[offset + 448] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_get_context_free_data)};
  T0.data[offset + 449] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mod_chain_token_create)};
  T0.data[offset + 450] = (wasm_rt_elem_t){func_types[1], (wasm_rt_anyfunc_t)(&mod_chain_enable_log)};
  T0.data[offset + 451] = (wasm_rt_elem_t){func_types[0], (wasm_rt_anyfunc_t)(&mp_obj_name_print)};
  T0.data[offset + 452] = (wasm_rt_elem_t){func_types[5], (wasm_rt_anyfunc_t)(&mp_obj_name_make_new)};
  T0.data[offset + 453] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_obj_name_unary_op)};
  T0.data[offset + 454] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mp_obj_name_binary_op)};
  T0.data[offset + 455] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&name_to_bytes)};
  T0.data[offset + 456] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&name_to_int)};
  T0.data[offset + 457] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&mp_name_to_str)};
  T0.data[offset + 458] = (wasm_rt_elem_t){func_types[3], (wasm_rt_anyfunc_t)(&name_from_bytes)};
  T0.data[offset + 459] = (wasm_rt_elem_t){func_types[22], (wasm_rt_anyfunc_t)(&micropython_apply)};
  T0.data[offset + 460] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&micropython_init_module)};
  T0.data[offset + 461] = (wasm_rt_elem_t){func_types[2], (wasm_rt_anyfunc_t)(&mp_js_init)};
  T0.data[offset + 462] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&micropython_init_module_from_mpy_with_name)};
  T0.data[offset + 463] = (wasm_rt_elem_t){func_types[7], (wasm_rt_anyfunc_t)(&micropython_init_frozen_modules)};
  T0.data[offset + 464] = (wasm_rt_elem_t){func_types[4], (wasm_rt_anyfunc_t)(&mp_builtin_open)};
  T0.data[offset + 465] = (wasm_rt_elem_t){func_types[6], (wasm_rt_anyfunc_t)(&time_time)};
}

/* export: 'apply' */
void (*WASM_RT_ADD_PREFIX(Z_applyZ_vjjj))(u64, u64, u64);

static void init_exports(void) {
  /* export: 'apply' */
  WASM_RT_ADD_PREFIX(Z_applyZ_vjjj) = (&apply);
}

void WASM_RT_ADD_PREFIX(init_eosio)(void) {
  init_func_types();
  init_globals();
  init_memory();
  init_table();
  init_exports();
}
